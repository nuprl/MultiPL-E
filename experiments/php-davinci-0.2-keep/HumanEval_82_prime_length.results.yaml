name: HumanEval_82_prime_length
language: php
results:
- program: "<?php\n// Write a function that takes a string and returns True if the\
    \ string\n// length is a prime number or False otherwise\n// Examples\n// prime_length('Hello')\
    \ == True\n// prime_length('abcdcba') == True\n// prime_length('kittens') == True\n\
    // prime_length('orange') == False\nfunction prime_length($string) {\n  $length\
    \ = strlen($string);\n  if ($length == 1) {\n    return true;\n  }\n  for ($i\
    \ = 2; $i < $length; $i++) {\n    if ($length % $i == 0) {\n      return false;\n\
    \    }\n  }\n  return true;\n}\n\nfunction candidate(...$args) {\n    return prime_length(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello\") !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"abcdcba\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"kittens\") !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"orange\") !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"wow\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"world\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"MadaM\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Wow\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    HI\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    go\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    gogo\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aaaaaaaaaaaaaaa\") !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"Madam\") !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"M\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"0\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp25slxi41.php:35\n\
    Stack trace:\n#0 /tmp/tmp25slxi41.php(45): test()\n#1 {main}\n  thrown in /tmp/tmp25slxi41.php\
    \ on line 35\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a string and returns True if the\
    \ string\n// length is a prime number or False otherwise\n// Examples\n// prime_length('Hello')\
    \ == True\n// prime_length('abcdcba') == True\n// prime_length('kittens') == True\n\
    // prime_length('orange') == False\nfunction prime_length($string) {\n    $length\
    \ = strlen($string);\n    if ($length == 1) {\n        return false;\n    }\n\
    \    for ($i = 2; $i < $length; $i++) {\n        if ($length % $i == 0) {\n  \
    \          return false;\n        }\n    }\n    return true;\n}\n\nfunction candidate(...$args)\
    \ {\n    return prime_length(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"Hello\") !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"abcdcba\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"kittens\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"orange\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"wow\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"world\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"MadaM\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Wow\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"HI\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"go\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"gogo\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaaaaaaaaaaaaa\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Madam\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"M\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"0\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpq_lfnx7i.php:35\n\
    Stack trace:\n#0 /tmp/tmpq_lfnx7i.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpq_lfnx7i.php\
    \ on line 35\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a string and returns True if the\
    \ string\n// length is a prime number or False otherwise\n// Examples\n// prime_length('Hello')\
    \ == True\n// prime_length('abcdcba') == True\n// prime_length('kittens') == True\n\
    // prime_length('orange') == False\nfunction prime_length($string) {\n    $length\
    \ = strlen($string);\n    if ($length == 1) {\n        return false;\n    }\n\
    \    for ($i = 2; $i < $length; $i++) {\n        if ($length % $i == 0) {\n  \
    \          return false;\n        }\n    }\n    return true;\n}\n\necho prime_length('Hello')\
    \ . PHP_EOL;\necho prime_length('abcdcba') . PHP_EOL;\necho prime_length('kittens')\
    \ . PHP_EOL;\necho prime_length('orange') . PHP_EOL;\nfunction candidate(...$args)\
    \ {\n    return prime_length(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"Hello\") !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"abcdcba\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"kittens\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"orange\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"wow\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"world\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"MadaM\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Wow\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"HI\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"go\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"gogo\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaaaaaaaaaaaaa\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Madam\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"M\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"0\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "1\n1\n1\n\n"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpjp176uui.php:39\n\
    Stack trace:\n#0 /tmp/tmpjp176uui.php(49): test()\n#1 {main}\n  thrown in /tmp/tmpjp176uui.php\
    \ on line 39\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a string and returns True if the\
    \ string\n// length is a prime number or False otherwise\n// Examples\n// prime_length('Hello')\
    \ == True\n// prime_length('abcdcba') == True\n// prime_length('kittens') == True\n\
    // prime_length('orange') == False\nfunction prime_length($string) {\n  $length\
    \ = strlen($string);\n  if ($length == 1) {\n    return false;\n  }\n  for ($i\
    \ = 2; $i < $length; $i++) {\n    if ($length % $i == 0) {\n      return false;\n\
    \    }\n  }\n  return true;\n}\n\necho prime_length('Hello') . PHP_EOL;\necho\
    \ prime_length('abcdcba') . PHP_EOL;\necho prime_length('kittens') . PHP_EOL;\n\
    echo prime_length('orange') . PHP_EOL;\nfunction candidate(...$args) {\n    return\
    \ prime_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcdcba\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    kittens\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    orange\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    wow\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    world\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    MadaM\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Wow\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    HI\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    go\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    gogo\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aaaaaaaaaaaaaaa\") !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"Madam\") !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"M\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"0\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "1\n1\n1\n\n"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp59aaplur.php:39\n\
    Stack trace:\n#0 /tmp/tmp59aaplur.php(49): test()\n#1 {main}\n  thrown in /tmp/tmp59aaplur.php\
    \ on line 39\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a string and returns True if the\
    \ string\n// length is a prime number or False otherwise\n// Examples\n// prime_length('Hello')\
    \ == True\n// prime_length('abcdcba') == True\n// prime_length('kittens') == True\n\
    // prime_length('orange') == False\nfunction prime_length($string) {\n    $length\
    \ = strlen($string);\n    if ($length == 1) {\n        return false;\n    }\n\
    \    for ($i = 2; $i < $length; $i++) {\n        if ($length % $i == 0) {\n  \
    \          return false;\n        }\n    }\n    return true;\n}\n\nfunction candidate(...$args)\
    \ {\n    return prime_length(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"Hello\") !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"abcdcba\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"kittens\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"orange\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"wow\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"world\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"MadaM\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Wow\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"HI\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"go\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"gogo\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaaaaaaaaaaaaa\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Madam\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"M\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"0\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp36trll1i.php:35\n\
    Stack trace:\n#0 /tmp/tmp36trll1i.php(45): test()\n#1 {main}\n  thrown in /tmp/tmp36trll1i.php\
    \ on line 35\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a string and returns True if the\
    \ string\n// length is a prime number or False otherwise\n// Examples\n// prime_length('Hello')\
    \ == True\n// prime_length('abcdcba') == True\n// prime_length('kittens') == True\n\
    // prime_length('orange') == False\nfunction prime_length($string) {\n    $length\
    \ = strlen($string);\n    if ($length == 1) {\n        return false;\n    }\n\
    \    for ($i = 2; $i < $length; $i++) {\n        if ($length % $i == 0) {\n  \
    \          return false;\n        }\n    }\n    return true;\n}\n\nfunction candidate(...$args)\
    \ {\n    return prime_length(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"Hello\") !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"abcdcba\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"kittens\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"orange\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"wow\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"world\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"MadaM\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Wow\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"HI\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"go\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"gogo\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaaaaaaaaaaaaa\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Madam\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"M\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"0\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp1q1zsnba.php:35\n\
    Stack trace:\n#0 /tmp/tmp1q1zsnba.php(45): test()\n#1 {main}\n  thrown in /tmp/tmp1q1zsnba.php\
    \ on line 35\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a string and returns True if the\
    \ string\n// length is a prime number or False otherwise\n// Examples\n// prime_length('Hello')\
    \ == True\n// prime_length('abcdcba') == True\n// prime_length('kittens') == True\n\
    // prime_length('orange') == False\nfunction prime_length($string) {\n  $length\
    \ = strlen($string);\n  for ($i = 2; $i < $length; $i++) {\n    if ($length %\
    \ $i == 0) {\n      return False;\n    }\n  }\n  return True;\n}\necho prime_length('Hello')\
    \ . \"\\n\";\necho prime_length('abcdcba') . \"\\n\";\necho prime_length('kittens')\
    \ . \"\\n\";\necho prime_length('orange') . \"\\n\";\n\nfunction candidate(...$args)\
    \ {\n    return prime_length(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"Hello\") !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"abcdcba\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"kittens\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"orange\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"wow\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"world\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"MadaM\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Wow\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"HI\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"go\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"gogo\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaaaaaaaaaaaaa\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Madam\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"M\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"0\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "1\n1\n1\n\n"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp71zvccxg.php:36\n\
    Stack trace:\n#0 /tmp/tmp71zvccxg.php(46): test()\n#1 {main}\n  thrown in /tmp/tmp71zvccxg.php\
    \ on line 36\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a string and returns True if the\
    \ string\n// length is a prime number or False otherwise\n// Examples\n// prime_length('Hello')\
    \ == True\n// prime_length('abcdcba') == True\n// prime_length('kittens') == True\n\
    // prime_length('orange') == False\nfunction prime_length($string) {\n    $length\
    \ = strlen($string);\n    if ($length == 1) {\n        return false;\n    }\n\
    \    for ($i = 2; $i < $length; $i++) {\n        if ($length % $i == 0) {\n  \
    \          return false;\n        }\n    }\n    return true;\n}\n\nfunction candidate(...$args)\
    \ {\n    return prime_length(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"Hello\") !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"abcdcba\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"kittens\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"orange\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"wow\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"world\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"MadaM\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Wow\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"HI\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"go\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"gogo\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaaaaaaaaaaaaa\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Madam\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"M\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"0\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpb_bb8yac.php:35\n\
    Stack trace:\n#0 /tmp/tmpb_bb8yac.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpb_bb8yac.php\
    \ on line 35\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a string and returns True if the\
    \ string\n// length is a prime number or False otherwise\n// Examples\n// prime_length('Hello')\
    \ == True\n// prime_length('abcdcba') == True\n// prime_length('kittens') == True\n\
    // prime_length('orange') == False\nfunction prime_length($string) {\n    $length\
    \ = strlen($string);\n    if ($length == 1) {\n        return false;\n    }\n\
    \    for ($i = 2; $i < $length; $i++) {\n        if ($length % $i == 0) {\n  \
    \          return false;\n        }\n    }\n    return true;\n}\n\nfunction candidate(...$args)\
    \ {\n    return prime_length(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"Hello\") !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"abcdcba\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"kittens\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"orange\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"wow\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"world\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"MadaM\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Wow\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"HI\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"go\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"gogo\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaaaaaaaaaaaaa\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Madam\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"M\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"0\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp1ryr8n0f.php:35\n\
    Stack trace:\n#0 /tmp/tmp1ryr8n0f.php(45): test()\n#1 {main}\n  thrown in /tmp/tmp1ryr8n0f.php\
    \ on line 35\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a string and returns True if the\
    \ string\n// length is a prime number or False otherwise\n// Examples\n// prime_length('Hello')\
    \ == True\n// prime_length('abcdcba') == True\n// prime_length('kittens') == True\n\
    // prime_length('orange') == False\nfunction prime_length($string) {\n    $length\
    \ = strlen($string);\n    if ($length <= 1) {\n        return false;\n    }\n\
    \    for ($i = 2; $i < $length; $i++) {\n        if ($length % $i == 0) {\n  \
    \          return false;\n        }\n    }\n    return true;\n}\n\nfunction candidate(...$args)\
    \ {\n    return prime_length(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"Hello\") !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"abcdcba\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"kittens\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"orange\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"wow\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"world\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"MadaM\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Wow\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"HI\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"go\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"gogo\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaaaaaaaaaaaaa\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Madam\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"M\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"0\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that takes a string and returns True if the\
    \ string\n// length is a prime number or False otherwise\n// Examples\n// prime_length('Hello')\
    \ == True\n// prime_length('abcdcba') == True\n// prime_length('kittens') == True\n\
    // prime_length('orange') == False\nfunction prime_length($string) {\n    $length\
    \ = strlen($string);\n    if ($length == 1) {\n        return false;\n    }\n\
    \    for ($i = 2; $i < $length; $i++) {\n        if ($length % $i == 0) {\n  \
    \          return false;\n        }\n    }\n    return true;\n}\n\nfunction candidate(...$args)\
    \ {\n    return prime_length(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"Hello\") !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"abcdcba\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"kittens\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"orange\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"wow\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"world\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"MadaM\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Wow\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"HI\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"go\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"gogo\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaaaaaaaaaaaaa\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Madam\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"M\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"0\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpyiocxjy9.php:35\n\
    Stack trace:\n#0 /tmp/tmpyiocxjy9.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpyiocxjy9.php\
    \ on line 35\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a string and returns True if the\
    \ string\n// length is a prime number or False otherwise\n// Examples\n// prime_length('Hello')\
    \ == True\n// prime_length('abcdcba') == True\n// prime_length('kittens') == True\n\
    // prime_length('orange') == False\nfunction prime_length($string) {\n  $length\
    \ = strlen($string);\n  if ($length < 2) {\n    return false;\n  }\n  for ($i\
    \ = 2; $i < $length; $i++) {\n    if ($length % $i == 0) {\n      return false;\n\
    \    }\n  }\n  return true;\n}\n\necho prime_length('Hello') . PHP_EOL;\necho\
    \ prime_length('abcdcba') . PHP_EOL;\necho prime_length('kittens') . PHP_EOL;\n\
    echo prime_length('orange') . PHP_EOL;\nfunction candidate(...$args) {\n    return\
    \ prime_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcdcba\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    kittens\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    orange\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    wow\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    world\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    MadaM\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Wow\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    HI\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    go\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    gogo\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aaaaaaaaaaaaaaa\") !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"Madam\") !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"M\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"0\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "1\n1\n1\n\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that takes a string and returns True if the\
    \ string\n// length is a prime number or False otherwise\n// Examples\n// prime_length('Hello')\
    \ == True\n// prime_length('abcdcba') == True\n// prime_length('kittens') == True\n\
    // prime_length('orange') == False\nfunction prime_length($string) {\n    $length\
    \ = strlen($string);\n    if ($length == 1) {\n        return false;\n    }\n\
    \    for ($i = 2; $i < $length; $i++) {\n        if ($length % $i == 0) {\n  \
    \          return false;\n        }\n    }\n    return true;\n}\n\nfunction candidate(...$args)\
    \ {\n    return prime_length(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"Hello\") !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"abcdcba\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"kittens\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"orange\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"wow\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"world\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"MadaM\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Wow\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"HI\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"go\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"gogo\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaaaaaaaaaaaaa\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Madam\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"M\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"0\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp8tgofk07.php:35\n\
    Stack trace:\n#0 /tmp/tmp8tgofk07.php(45): test()\n#1 {main}\n  thrown in /tmp/tmp8tgofk07.php\
    \ on line 35\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a string and returns True if the\
    \ string\n// length is a prime number or False otherwise\n// Examples\n// prime_length('Hello')\
    \ == True\n// prime_length('abcdcba') == True\n// prime_length('kittens') == True\n\
    // prime_length('orange') == False\nfunction prime_length($string) {\n  $length\
    \ = strlen($string);\n  if ($length == 1) {\n    return false;\n  }\n  for ($i\
    \ = 2; $i < $length; $i++) {\n    if ($length % $i == 0) {\n      return false;\n\
    \    }\n  }\n  return true;\n}\n\nfunction candidate(...$args) {\n    return prime_length(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello\") !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"abcdcba\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"kittens\") !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"orange\") !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"wow\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"world\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"MadaM\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Wow\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    HI\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    go\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    gogo\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aaaaaaaaaaaaaaa\") !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"Madam\") !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"M\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"0\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp0og07mf0.php:35\n\
    Stack trace:\n#0 /tmp/tmp0og07mf0.php(45): test()\n#1 {main}\n  thrown in /tmp/tmp0og07mf0.php\
    \ on line 35\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a string and returns True if the\
    \ string\n// length is a prime number or False otherwise\n// Examples\n// prime_length('Hello')\
    \ == True\n// prime_length('abcdcba') == True\n// prime_length('kittens') == True\n\
    // prime_length('orange') == False\nfunction prime_length($string) {\n    $length\
    \ = strlen($string);\n    if ($length == 1) {\n        return false;\n    }\n\
    \    for ($i = 2; $i < $length; $i++) {\n        if ($length % $i == 0) {\n  \
    \          return false;\n        }\n    }\n    return true;\n}\n\nfunction candidate(...$args)\
    \ {\n    return prime_length(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"Hello\") !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"abcdcba\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"kittens\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"orange\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"wow\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"world\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"MadaM\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Wow\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"HI\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"go\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"gogo\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaaaaaaaaaaaaa\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Madam\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"M\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"0\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpokg0_0_s.php:35\n\
    Stack trace:\n#0 /tmp/tmpokg0_0_s.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpokg0_0_s.php\
    \ on line 35\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a string and returns True if the\
    \ string\n// length is a prime number or False otherwise\n// Examples\n// prime_length('Hello')\
    \ == True\n// prime_length('abcdcba') == True\n// prime_length('kittens') == True\n\
    // prime_length('orange') == False\nfunction prime_length($string) {\n    $length\
    \ = strlen($string);\n    if ($length == 1) {\n        return false;\n    }\n\
    \    for ($i = 2; $i < $length; $i++) {\n        if ($length % $i == 0) {\n  \
    \          return false;\n        }\n    }\n    return true;\n}\n\nfunction candidate(...$args)\
    \ {\n    return prime_length(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"Hello\") !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"abcdcba\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"kittens\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"orange\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"wow\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"world\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"MadaM\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Wow\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"HI\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"go\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"gogo\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaaaaaaaaaaaaa\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Madam\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"M\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"0\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp2fu6etci.php:35\n\
    Stack trace:\n#0 /tmp/tmp2fu6etci.php(45): test()\n#1 {main}\n  thrown in /tmp/tmp2fu6etci.php\
    \ on line 35\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a string and returns True if the\
    \ string\n// length is a prime number or False otherwise\n// Examples\n// prime_length('Hello')\
    \ == True\n// prime_length('abcdcba') == True\n// prime_length('kittens') == True\n\
    // prime_length('orange') == False\nfunction prime_length($string) {\n  $length\
    \ = strlen($string);\n  if ($length == 1) {\n    return false;\n  }\n  for ($i\
    \ = 2; $i < $length; $i++) {\n    if ($length % $i == 0) {\n      return false;\n\
    \    }\n  }\n  return true;\n}\n\nfunction candidate(...$args) {\n    return prime_length(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello\") !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"abcdcba\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"kittens\") !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"orange\") !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"wow\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"world\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"MadaM\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Wow\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    HI\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    go\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    gogo\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aaaaaaaaaaaaaaa\") !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"Madam\") !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"M\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"0\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp5zdmgn8m.php:35\n\
    Stack trace:\n#0 /tmp/tmp5zdmgn8m.php(45): test()\n#1 {main}\n  thrown in /tmp/tmp5zdmgn8m.php\
    \ on line 35\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a string and returns True if the\
    \ string\n// length is a prime number or False otherwise\n// Examples\n// prime_length('Hello')\
    \ == True\n// prime_length('abcdcba') == True\n// prime_length('kittens') == True\n\
    // prime_length('orange') == False\nfunction prime_length($string) {\n    $string_length\
    \ = strlen($string);\n    if ($string_length == 1) {\n        return false;\n\
    \    }\n    for ($i = 2; $i < $string_length; $i++) {\n        if ($string_length\
    \ % $i == 0) {\n            return false;\n        }\n    }\n    return true;\n\
    }\n\nfunction candidate(...$args) {\n    return prime_length(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"Hello\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"abcdcba\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"kittens\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"orange\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"wow\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"world\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"MadaM\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Wow\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"HI\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"go\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"gogo\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aaaaaaaaaaaaaaa\") !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Madam\") !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"M\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"0\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpjspk2wwn.php:35\n\
    Stack trace:\n#0 /tmp/tmpjspk2wwn.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpjspk2wwn.php\
    \ on line 35\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a string and returns True if the\
    \ string\n// length is a prime number or False otherwise\n// Examples\n// prime_length('Hello')\
    \ == True\n// prime_length('abcdcba') == True\n// prime_length('kittens') == True\n\
    // prime_length('orange') == False\nfunction prime_length($string) {\n\t$length\
    \ = strlen($string);\n\tif ($length == 1) {\n\t\treturn false;\n\t}\n\tfor ($i\
    \ = 2; $i < $length; $i++) {\n\t\tif ($length % $i == 0) {\n\t\t\treturn false;\n\
    \t\t}\n\t}\n\treturn true;\n}\necho prime_length('Hello') . PHP_EOL;\necho prime_length('abcdcba')\
    \ . PHP_EOL;\necho prime_length('kittens') . PHP_EOL;\necho prime_length('orange')\
    \ . PHP_EOL;\nfunction candidate(...$args) {\n    return prime_length(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello\") !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"abcdcba\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"kittens\") !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"orange\") !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"wow\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"world\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"MadaM\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Wow\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    HI\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    go\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    gogo\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aaaaaaaaaaaaaaa\") !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"Madam\") !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"M\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"0\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "1\n1\n1\n\n"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpp3ft2ece.php:38\n\
    Stack trace:\n#0 /tmp/tmpp3ft2ece.php(48): test()\n#1 {main}\n  thrown in /tmp/tmpp3ft2ece.php\
    \ on line 38\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a string and returns True if the\
    \ string\n// length is a prime number or False otherwise\n// Examples\n// prime_length('Hello')\
    \ == True\n// prime_length('abcdcba') == True\n// prime_length('kittens') == True\n\
    // prime_length('orange') == False\nfunction prime_length($string) {\n    $length\
    \ = strlen($string);\n    if ($length == 1) {\n        return false;\n    }\n\
    \    for ($i = 2; $i < $length; $i++) {\n        if ($length % $i == 0) {\n  \
    \          return false;\n        }\n    }\n    return true;\n}\n\nfunction candidate(...$args)\
    \ {\n    return prime_length(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"Hello\") !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"abcdcba\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"kittens\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"orange\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"wow\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"world\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"MadaM\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Wow\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"HI\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"go\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"gogo\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaaaaaaaaaaaaa\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Madam\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"M\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"0\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp1588y7r4.php:35\n\
    Stack trace:\n#0 /tmp/tmp1588y7r4.php(45): test()\n#1 {main}\n  thrown in /tmp/tmp1588y7r4.php\
    \ on line 35\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a string and returns True if the\
    \ string\n// length is a prime number or False otherwise\n// Examples\n// prime_length('Hello')\
    \ == True\n// prime_length('abcdcba') == True\n// prime_length('kittens') == True\n\
    // prime_length('orange') == False\nfunction prime_length($string) {\n    $length\
    \ = strlen($string);\n    if ($length == 1) {\n        return false;\n    }\n\
    \    for ($i = 2; $i < $length; $i++) {\n        if ($length % $i == 0) {\n  \
    \          return false;\n        }\n    }\n    return true;\n}\n\nfunction candidate(...$args)\
    \ {\n    return prime_length(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"Hello\") !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"abcdcba\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"kittens\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"orange\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"wow\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"world\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"MadaM\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Wow\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"HI\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"go\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"gogo\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaaaaaaaaaaaaa\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Madam\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"M\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"0\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpavdb9h4w.php:35\n\
    Stack trace:\n#0 /tmp/tmpavdb9h4w.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpavdb9h4w.php\
    \ on line 35\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a string and returns True if the\
    \ string\n// length is a prime number or False otherwise\n// Examples\n// prime_length('Hello')\
    \ == True\n// prime_length('abcdcba') == True\n// prime_length('kittens') == True\n\
    // prime_length('orange') == False\nfunction prime_length($string) {\n    $length\
    \ = strlen($string);\n    if ($length == 1) {\n        return false;\n    }\n\
    \    for ($i = 2; $i < $length; $i++) {\n        if ($length % $i == 0) {\n  \
    \          return false;\n        }\n    }\n    return true;\n}\n\nfunction candidate(...$args)\
    \ {\n    return prime_length(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"Hello\") !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"abcdcba\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"kittens\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"orange\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"wow\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"world\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"MadaM\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Wow\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"HI\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"go\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"gogo\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaaaaaaaaaaaaa\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Madam\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"M\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"0\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpjx6ozy6d.php:35\n\
    Stack trace:\n#0 /tmp/tmpjx6ozy6d.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpjx6ozy6d.php\
    \ on line 35\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a string and returns True if the\
    \ string\n// length is a prime number or False otherwise\n// Examples\n// prime_length('Hello')\
    \ == True\n// prime_length('abcdcba') == True\n// prime_length('kittens') == True\n\
    // prime_length('orange') == False\nfunction prime_length($string) {\n    $length\
    \ = strlen($string);\n    if ($length == 1) {\n        return False;\n    }\n\
    \    for ($i = 2; $i < $length; $i++) {\n        if ($length % $i == 0) {\n  \
    \          return False;\n        }\n    }\n    return True;\n}\n\nfunction candidate(...$args)\
    \ {\n    return prime_length(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"Hello\") !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"abcdcba\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"kittens\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"orange\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"wow\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"world\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"MadaM\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Wow\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"HI\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"go\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"gogo\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaaaaaaaaaaaaa\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Madam\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"M\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"0\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpjhcgqupt.php:35\n\
    Stack trace:\n#0 /tmp/tmpjhcgqupt.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpjhcgqupt.php\
    \ on line 35\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a string and returns True if the\
    \ string\n// length is a prime number or False otherwise\n// Examples\n// prime_length('Hello')\
    \ == True\n// prime_length('abcdcba') == True\n// prime_length('kittens') == True\n\
    // prime_length('orange') == False\nfunction prime_length($string) {\n  $length\
    \ = strlen($string);\n  if ($length == 1) {\n    return false;\n  }\n  for ($i\
    \ = 2; $i < $length; $i++) {\n    if ($length % $i == 0) {\n      return false;\n\
    \    }\n  }\n  return true;\n}\n\nfunction candidate(...$args) {\n    return prime_length(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello\") !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"abcdcba\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"kittens\") !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"orange\") !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"wow\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"world\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"MadaM\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Wow\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    HI\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    go\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    gogo\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aaaaaaaaaaaaaaa\") !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"Madam\") !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"M\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"0\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp6hk0la2y.php:35\n\
    Stack trace:\n#0 /tmp/tmp6hk0la2y.php(45): test()\n#1 {main}\n  thrown in /tmp/tmp6hk0la2y.php\
    \ on line 35\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a string and returns True if the\
    \ string\n// length is a prime number or False otherwise\n// Examples\n// prime_length('Hello')\
    \ == True\n// prime_length('abcdcba') == True\n// prime_length('kittens') == True\n\
    // prime_length('orange') == False\nfunction prime_length($string) {\n    $str_len\
    \ = strlen($string);\n    if ($str_len < 2) {\n        return false;\n    }\n\
    \    for ($i = 2; $i < $str_len; $i++) {\n        if ($str_len % $i == 0) {\n\
    \            return false;\n        }\n    }\n    return true;\n}\n\nfunction\
    \ candidate(...$args) {\n    return prime_length(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"Hello\") !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"abcdcba\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"kittens\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"orange\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"wow\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"world\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"MadaM\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Wow\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"HI\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"go\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"gogo\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aaaaaaaaaaaaaaa\") !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Madam\") !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"M\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"0\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that takes a string and returns True if the\
    \ string\n// length is a prime number or False otherwise\n// Examples\n// prime_length('Hello')\
    \ == True\n// prime_length('abcdcba') == True\n// prime_length('kittens') == True\n\
    // prime_length('orange') == False\nfunction prime_length($string) {\n    $length\
    \ = strlen($string);\n    if ($length == 1) {\n        return false;\n    }\n\
    \    for ($i = 2; $i < $length; $i++) {\n        if ($length % $i == 0) {\n  \
    \          return false;\n        }\n    }\n    return true;\n}\n\nfunction candidate(...$args)\
    \ {\n    return prime_length(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"Hello\") !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"abcdcba\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"kittens\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"orange\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"wow\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"world\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"MadaM\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Wow\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"HI\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"go\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"gogo\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaaaaaaaaaaaaa\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Madam\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"M\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"0\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp51bpmez1.php:35\n\
    Stack trace:\n#0 /tmp/tmp51bpmez1.php(45): test()\n#1 {main}\n  thrown in /tmp/tmp51bpmez1.php\
    \ on line 35\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a string and returns True if the\
    \ string\n// length is a prime number or False otherwise\n// Examples\n// prime_length('Hello')\
    \ == True\n// prime_length('abcdcba') == True\n// prime_length('kittens') == True\n\
    // prime_length('orange') == False\nfunction prime_length($string) {\n    $length\
    \ = strlen($string);\n    if ($length == 1) {\n        return false;\n    }\n\
    \    for ($i = 2; $i < $length; $i++) {\n        if ($length % $i == 0) {\n  \
    \          return false;\n        }\n    }\n    return true;\n}\n\nfunction candidate(...$args)\
    \ {\n    return prime_length(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"Hello\") !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"abcdcba\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"kittens\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"orange\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"wow\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"world\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"MadaM\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Wow\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"HI\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"go\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"gogo\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaaaaaaaaaaaaa\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Madam\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"M\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"0\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp1u33ig1h.php:35\n\
    Stack trace:\n#0 /tmp/tmp1u33ig1h.php(45): test()\n#1 {main}\n  thrown in /tmp/tmp1u33ig1h.php\
    \ on line 35\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a string and returns True if the\
    \ string\n// length is a prime number or False otherwise\n// Examples\n// prime_length('Hello')\
    \ == True\n// prime_length('abcdcba') == True\n// prime_length('kittens') == True\n\
    // prime_length('orange') == False\nfunction prime_length($string) {\n    $length\
    \ = strlen($string);\n    if ($length == 1) {\n        return False;\n    }\n\
    \    for ($i = 2; $i < $length; $i++) {\n        if ($length % $i == 0) {\n  \
    \          return False;\n        }\n    }\n    return True;\n}\nfunction candidate(...$args)\
    \ {\n    return prime_length(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"Hello\") !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"abcdcba\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"kittens\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"orange\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"wow\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"world\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"MadaM\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Wow\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"HI\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"go\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"gogo\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaaaaaaaaaaaaa\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Madam\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"M\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"0\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpv_g7arr8.php:34\n\
    Stack trace:\n#0 /tmp/tmpv_g7arr8.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpv_g7arr8.php\
    \ on line 34\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a string and returns True if the\
    \ string\n// length is a prime number or False otherwise\n// Examples\n// prime_length('Hello')\
    \ == True\n// prime_length('abcdcba') == True\n// prime_length('kittens') == True\n\
    // prime_length('orange') == False\nfunction prime_length($string) {\n    $length\
    \ = strlen($string);\n    if ($length == 1) {\n        return false;\n    }\n\
    \    for ($i = 2; $i < $length; $i++) {\n        if ($length % $i == 0) {\n  \
    \          return false;\n        }\n    }\n    return true;\n}\n\nfunction candidate(...$args)\
    \ {\n    return prime_length(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"Hello\") !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"abcdcba\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"kittens\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"orange\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"wow\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"world\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"MadaM\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Wow\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"HI\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"go\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"gogo\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaaaaaaaaaaaaa\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Madam\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"M\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"0\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpi9qdsg53.php:35\n\
    Stack trace:\n#0 /tmp/tmpi9qdsg53.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpi9qdsg53.php\
    \ on line 35\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a string and returns True if the\
    \ string\n// length is a prime number or False otherwise\n// Examples\n// prime_length('Hello')\
    \ == True\n// prime_length('abcdcba') == True\n// prime_length('kittens') == True\n\
    // prime_length('orange') == False\nfunction prime_length($string) {\n    $length\
    \ = strlen($string);\n    if ($length == 1) {\n        return false;\n    }\n\
    \    for ($i = 2; $i < $length; $i++) {\n        if ($length % $i == 0) {\n  \
    \          return false;\n        }\n    }\n    return true;\n}\n\nfunction candidate(...$args)\
    \ {\n    return prime_length(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"Hello\") !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"abcdcba\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"kittens\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"orange\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"wow\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"world\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"MadaM\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Wow\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"HI\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"go\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"gogo\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaaaaaaaaaaaaa\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Madam\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"M\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"0\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpdozh_2sn.php:35\n\
    Stack trace:\n#0 /tmp/tmpdozh_2sn.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpdozh_2sn.php\
    \ on line 35\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a string and returns True if the\
    \ string\n// length is a prime number or False otherwise\n// Examples\n// prime_length('Hello')\
    \ == True\n// prime_length('abcdcba') == True\n// prime_length('kittens') == True\n\
    // prime_length('orange') == False\nfunction prime_length($string) {\n  $length\
    \ = strlen($string);\n  if ($length == 1 || $length == 2) {\n    return True;\n\
    \  }\n  for ($i = 2; $i < $length; $i++) {\n    if ($length % $i == 0) {\n   \
    \   return False;\n    }\n  }\n  return True;\n}\n\nfunction candidate(...$args)\
    \ {\n    return prime_length(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"Hello\") !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"abcdcba\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"kittens\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"orange\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"wow\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"world\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"MadaM\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Wow\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"HI\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"go\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"gogo\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaaaaaaaaaaaaa\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Madam\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"M\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"0\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmptfgp29z0.php:35\n\
    Stack trace:\n#0 /tmp/tmptfgp29z0.php(45): test()\n#1 {main}\n  thrown in /tmp/tmptfgp29z0.php\
    \ on line 35\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a string and returns True if the\
    \ string\n// length is a prime number or False otherwise\n// Examples\n// prime_length('Hello')\
    \ == True\n// prime_length('abcdcba') == True\n// prime_length('kittens') == True\n\
    // prime_length('orange') == False\nfunction prime_length($string) {\n    $length\
    \ = strlen($string);\n    if ($length == 1) {\n        return false;\n    }\n\
    \    for ($i = 2; $i < $length; $i++) {\n        if ($length % $i == 0) {\n  \
    \          return false;\n        }\n    }\n    return true;\n}\n\nfunction candidate(...$args)\
    \ {\n    return prime_length(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"Hello\") !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"abcdcba\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"kittens\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"orange\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"wow\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"world\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"MadaM\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Wow\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"HI\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"go\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"gogo\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaaaaaaaaaaaaa\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Madam\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"M\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"0\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmprg1_mmxu.php:35\n\
    Stack trace:\n#0 /tmp/tmprg1_mmxu.php(45): test()\n#1 {main}\n  thrown in /tmp/tmprg1_mmxu.php\
    \ on line 35\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a string and returns True if the\
    \ string\n// length is a prime number or False otherwise\n// Examples\n// prime_length('Hello')\
    \ == True\n// prime_length('abcdcba') == True\n// prime_length('kittens') == True\n\
    // prime_length('orange') == False\nfunction prime_length($string) {\n    $length\
    \ = strlen($string);\n    if ($length == 1) {\n        return false;\n    }\n\
    \    for ($i = 2; $i < $length; $i++) {\n        if ($length % $i == 0) {\n  \
    \          return false;\n        }\n    }\n    return true;\n}\n\necho prime_length('Hello')\
    \ ? 'True' : 'False';\necho \"\\n\";\necho prime_length('abcdcba') ? 'True' :\
    \ 'False';\necho \"\\n\";\necho prime_length('kittens') ? 'True' : 'False';\n\
    echo \"\\n\";\necho prime_length('orange') ? 'True' : 'False';\necho \"\\n\";\n\
    function candidate(...$args) {\n    return prime_length(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"Hello\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"abcdcba\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"kittens\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"orange\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"wow\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"world\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"MadaM\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Wow\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"HI\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"go\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"gogo\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aaaaaaaaaaaaaaa\") !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Madam\") !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"M\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"0\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "True\nTrue\nTrue\nFalse\n"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpn0w3wi8_.php:43\n\
    Stack trace:\n#0 /tmp/tmpn0w3wi8_.php(53): test()\n#1 {main}\n  thrown in /tmp/tmpn0w3wi8_.php\
    \ on line 43\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a string and returns True if the\
    \ string\n// length is a prime number or False otherwise\n// Examples\n// prime_length('Hello')\
    \ == True\n// prime_length('abcdcba') == True\n// prime_length('kittens') == True\n\
    // prime_length('orange') == False\nfunction prime_length($string) {\n    $length\
    \ = strlen($string);\n    if ($length == 1) {\n        return false;\n    }\n\
    \    for ($i = 2; $i < $length; $i++) {\n        if ($length % $i == 0) {\n  \
    \          return false;\n        }\n    }\n    return true;\n}\necho prime_length('Hello')\
    \ . \"\\n\";\necho prime_length('abcdcba') . \"\\n\";\necho prime_length('kittens')\
    \ . \"\\n\";\necho prime_length('orange') . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return prime_length(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"Hello\") !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"abcdcba\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"kittens\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"orange\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"wow\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"world\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"MadaM\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Wow\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"HI\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"go\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"gogo\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaaaaaaaaaaaaa\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Madam\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"M\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"0\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "1\n1\n1\n\n"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpucpynci8.php:38\n\
    Stack trace:\n#0 /tmp/tmpucpynci8.php(48): test()\n#1 {main}\n  thrown in /tmp/tmpucpynci8.php\
    \ on line 38\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a string and returns True if the\
    \ string\n// length is a prime number or False otherwise\n// Examples\n// prime_length('Hello')\
    \ == True\n// prime_length('abcdcba') == True\n// prime_length('kittens') == True\n\
    // prime_length('orange') == False\nfunction prime_length($string) {\n    $length\
    \ = strlen($string);\n    if ($length == 1) {\n        return false;\n    }\n\
    \    for ($i = 2; $i < $length; $i++) {\n        if ($length % $i == 0) {\n  \
    \          return false;\n        }\n    }\n    return true;\n}\n\nfunction candidate(...$args)\
    \ {\n    return prime_length(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"Hello\") !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"abcdcba\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"kittens\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"orange\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"wow\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"world\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"MadaM\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Wow\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"HI\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"go\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"gogo\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaaaaaaaaaaaaa\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Madam\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"M\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"0\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp3ax0koc5.php:35\n\
    Stack trace:\n#0 /tmp/tmp3ax0koc5.php(45): test()\n#1 {main}\n  thrown in /tmp/tmp3ax0koc5.php\
    \ on line 35\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a string and returns True if the\
    \ string\n// length is a prime number or False otherwise\n// Examples\n// prime_length('Hello')\
    \ == True\n// prime_length('abcdcba') == True\n// prime_length('kittens') == True\n\
    // prime_length('orange') == False\nfunction prime_length($string) {\n  $length\
    \ = strlen($string);\n  if ($length == 2) {\n    return true;\n  }\n  for ($i\
    \ = 2; $i < $length; $i++) {\n    if ($length % $i == 0) {\n      return false;\n\
    \    }\n  }\n  return true;\n}\necho prime_length('Hello') . PHP_EOL;\necho prime_length('abcdcba')\
    \ . PHP_EOL;\necho prime_length('kittens') . PHP_EOL;\necho prime_length('orange')\
    \ . PHP_EOL;\nfunction candidate(...$args) {\n    return prime_length(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello\") !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"abcdcba\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"kittens\") !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"orange\") !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"wow\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"world\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"MadaM\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Wow\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    HI\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    go\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    gogo\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aaaaaaaaaaaaaaa\") !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"Madam\") !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"M\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"0\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "1\n1\n1\n\n"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpafqtwrco.php:38\n\
    Stack trace:\n#0 /tmp/tmpafqtwrco.php(48): test()\n#1 {main}\n  thrown in /tmp/tmpafqtwrco.php\
    \ on line 38\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a string and returns True if the\
    \ string\n// length is a prime number or False otherwise\n// Examples\n// prime_length('Hello')\
    \ == True\n// prime_length('abcdcba') == True\n// prime_length('kittens') == True\n\
    // prime_length('orange') == False\nfunction prime_length($string) {\n    $length\
    \ = strlen($string);\n    if ($length == 1) {\n        return false;\n    }\n\
    \    for ($i = 2; $i < $length; $i++) {\n        if ($length % $i == 0) {\n  \
    \          return false;\n        }\n    }\n    return true;\n}\n\nfunction candidate(...$args)\
    \ {\n    return prime_length(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"Hello\") !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"abcdcba\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"kittens\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"orange\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"wow\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"world\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"MadaM\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Wow\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"HI\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"go\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"gogo\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaaaaaaaaaaaaa\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Madam\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"M\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"0\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp9_jvup0a.php:35\n\
    Stack trace:\n#0 /tmp/tmp9_jvup0a.php(45): test()\n#1 {main}\n  thrown in /tmp/tmp9_jvup0a.php\
    \ on line 35\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a string and returns True if the\
    \ string\n// length is a prime number or False otherwise\n// Examples\n// prime_length('Hello')\
    \ == True\n// prime_length('abcdcba') == True\n// prime_length('kittens') == True\n\
    // prime_length('orange') == False\nfunction prime_length($string) {\n    $length\
    \ = strlen($string);\n    if ($length == 1) {\n        return false;\n    }\n\
    \    for ($i = 2; $i < $length; $i++) {\n        if ($length % $i == 0) {\n  \
    \          return false;\n        }\n    }\n    return true;\n}\n\necho prime_length('Hello')\
    \ . PHP_EOL;\necho prime_length('abcdcba') . PHP_EOL;\necho prime_length('kittens')\
    \ . PHP_EOL;\necho prime_length('orange') . PHP_EOL;\nfunction candidate(...$args)\
    \ {\n    return prime_length(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"Hello\") !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"abcdcba\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"kittens\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"orange\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"wow\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"world\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"MadaM\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Wow\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"HI\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"go\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"gogo\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaaaaaaaaaaaaa\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Madam\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"M\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"0\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "1\n1\n1\n\n"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpotplxrqk.php:39\n\
    Stack trace:\n#0 /tmp/tmpotplxrqk.php(49): test()\n#1 {main}\n  thrown in /tmp/tmpotplxrqk.php\
    \ on line 39\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a string and returns True if the\
    \ string\n// length is a prime number or False otherwise\n// Examples\n// prime_length('Hello')\
    \ == True\n// prime_length('abcdcba') == True\n// prime_length('kittens') == True\n\
    // prime_length('orange') == False\nfunction prime_length($string) {\n  $length\
    \ = strlen($string);\n  if ($length == 1) {\n    return false;\n  }\n  for ($i\
    \ = 2; $i < $length; $i++) {\n    if ($length % $i == 0) {\n      return false;\n\
    \    }\n  }\n  return true;\n}\n\nfunction candidate(...$args) {\n    return prime_length(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello\") !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"abcdcba\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"kittens\") !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"orange\") !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"wow\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"world\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"MadaM\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Wow\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    HI\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    go\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    gogo\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aaaaaaaaaaaaaaa\") !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"Madam\") !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"M\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"0\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpm5ay73yo.php:35\n\
    Stack trace:\n#0 /tmp/tmpm5ay73yo.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpm5ay73yo.php\
    \ on line 35\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a string and returns True if the\
    \ string\n// length is a prime number or False otherwise\n// Examples\n// prime_length('Hello')\
    \ == True\n// prime_length('abcdcba') == True\n// prime_length('kittens') == True\n\
    // prime_length('orange') == False\nfunction prime_length($string) {\n\t$length\
    \ = strlen($string);\n\tif ($length == 1) {\n\t\treturn false;\n\t}\n\tfor ($i\
    \ = 2; $i < $length; $i++) {\n\t\tif ($length % $i == 0) {\n\t\t\treturn false;\n\
    \t\t}\n\t}\n\treturn true;\n}\n\necho prime_length('Hello') . PHP_EOL;\necho prime_length('abcdcba')\
    \ . PHP_EOL;\necho prime_length('kittens') . PHP_EOL;\necho prime_length('orange')\
    \ . PHP_EOL;\nfunction candidate(...$args) {\n    return prime_length(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello\") !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"abcdcba\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"kittens\") !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"orange\") !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"wow\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"world\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"MadaM\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Wow\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    HI\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    go\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    gogo\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aaaaaaaaaaaaaaa\") !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"Madam\") !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"M\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"0\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "1\n1\n1\n\n"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpenejzrog.php:39\n\
    Stack trace:\n#0 /tmp/tmpenejzrog.php(49): test()\n#1 {main}\n  thrown in /tmp/tmpenejzrog.php\
    \ on line 39\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a string and returns True if the\
    \ string\n// length is a prime number or False otherwise\n// Examples\n// prime_length('Hello')\
    \ == True\n// prime_length('abcdcba') == True\n// prime_length('kittens') == True\n\
    // prime_length('orange') == False\nfunction prime_length($string) {\n  $str_len\
    \ = strlen($string);\n  for ($i = 2; $i < $str_len; $i++) {\n    if ($str_len\
    \ % $i == 0) {\n      return False;\n    }\n  }\n  return True;\n}\n\nfunction\
    \ candidate(...$args) {\n    return prime_length(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"Hello\") !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"abcdcba\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"kittens\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"orange\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"wow\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"world\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"MadaM\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Wow\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"HI\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"go\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"gogo\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aaaaaaaaaaaaaaa\") !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Madam\") !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"M\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"0\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpsoep2d76.php:32\n\
    Stack trace:\n#0 /tmp/tmpsoep2d76.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpsoep2d76.php\
    \ on line 32\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a string and returns True if the\
    \ string\n// length is a prime number or False otherwise\n// Examples\n// prime_length('Hello')\
    \ == True\n// prime_length('abcdcba') == True\n// prime_length('kittens') == True\n\
    // prime_length('orange') == False\nfunction prime_length($string) {\n    $length\
    \ = strlen($string);\n    if ($length == 1) {\n        return false;\n    }\n\
    \    for ($i = 2; $i < $length; $i++) {\n        if ($length % $i == 0) {\n  \
    \          return false;\n        }\n    }\n    return true;\n}\n\nfunction candidate(...$args)\
    \ {\n    return prime_length(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"Hello\") !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"abcdcba\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"kittens\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"orange\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"wow\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"world\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"MadaM\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Wow\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"HI\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"go\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"gogo\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaaaaaaaaaaaaa\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Madam\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"M\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"0\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpgm1c53ga.php:35\n\
    Stack trace:\n#0 /tmp/tmpgm1c53ga.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpgm1c53ga.php\
    \ on line 35\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a string and returns True if the\
    \ string\n// length is a prime number or False otherwise\n// Examples\n// prime_length('Hello')\
    \ == True\n// prime_length('abcdcba') == True\n// prime_length('kittens') == True\n\
    // prime_length('orange') == False\nfunction prime_length($string) {\n    $length\
    \ = strlen($string);\n    for ($i = 2; $i < $length; $i++) {\n        if ($length\
    \ % $i == 0) {\n            return false;\n        }\n    }\n    return true;\n\
    }\n\nfunction candidate(...$args) {\n    return prime_length(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"Hello\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"abcdcba\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"kittens\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"orange\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"wow\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"world\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"MadaM\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Wow\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"HI\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"go\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"gogo\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aaaaaaaaaaaaaaa\") !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Madam\") !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"M\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"0\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpav1jhewo.php:32\n\
    Stack trace:\n#0 /tmp/tmpav1jhewo.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpav1jhewo.php\
    \ on line 32\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a string and returns True if the\
    \ string\n// length is a prime number or False otherwise\n// Examples\n// prime_length('Hello')\
    \ == True\n// prime_length('abcdcba') == True\n// prime_length('kittens') == True\n\
    // prime_length('orange') == False\nfunction prime_length($string) {\n    $length\
    \ = strlen($string);\n    if ($length <= 1) {\n        return false;\n    }\n\
    \    for ($i = 2; $i < $length; $i++) {\n        if ($length % $i == 0) {\n  \
    \          return false;\n        }\n    }\n    return true;\n}\n\nfunction candidate(...$args)\
    \ {\n    return prime_length(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"Hello\") !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"abcdcba\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"kittens\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"orange\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"wow\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"world\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"MadaM\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Wow\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"HI\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"go\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"gogo\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaaaaaaaaaaaaa\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Madam\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"M\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"0\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that takes a string and returns True if the\
    \ string\n// length is a prime number or False otherwise\n// Examples\n// prime_length('Hello')\
    \ == True\n// prime_length('abcdcba') == True\n// prime_length('kittens') == True\n\
    // prime_length('orange') == False\nfunction prime_length($string) {\n    $length\
    \ = strlen($string);\n    if ($length == 1) {\n        return false;\n    }\n\
    \    for ($i = 2; $i < $length; $i++) {\n        if ($length % $i == 0) {\n  \
    \          return false;\n        }\n    }\n    return true;\n}\n\nfunction candidate(...$args)\
    \ {\n    return prime_length(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"Hello\") !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"abcdcba\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"kittens\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"orange\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"wow\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"world\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"MadaM\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Wow\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"HI\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"go\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"gogo\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaaaaaaaaaaaaa\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Madam\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"M\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"0\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp53e4_drk.php:35\n\
    Stack trace:\n#0 /tmp/tmp53e4_drk.php(45): test()\n#1 {main}\n  thrown in /tmp/tmp53e4_drk.php\
    \ on line 35\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a string and returns True if the\
    \ string\n// length is a prime number or False otherwise\n// Examples\n// prime_length('Hello')\
    \ == True\n// prime_length('abcdcba') == True\n// prime_length('kittens') == True\n\
    // prime_length('orange') == False\nfunction prime_length($string) {\n    $length\
    \ = strlen($string);\n    if ($length == 1) {\n        return false;\n    }\n\
    \    for ($i = 2; $i < $length; $i++) {\n        if ($length % $i == 0) {\n  \
    \          return false;\n        }\n    }\n    return true;\n}\n\nfunction candidate(...$args)\
    \ {\n    return prime_length(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"Hello\") !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"abcdcba\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"kittens\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"orange\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"wow\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"world\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"MadaM\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Wow\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"HI\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"go\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"gogo\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaaaaaaaaaaaaa\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Madam\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"M\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"0\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp9a9bp43u.php:35\n\
    Stack trace:\n#0 /tmp/tmp9a9bp43u.php(45): test()\n#1 {main}\n  thrown in /tmp/tmp9a9bp43u.php\
    \ on line 35\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a string and returns True if the\
    \ string\n// length is a prime number or False otherwise\n// Examples\n// prime_length('Hello')\
    \ == True\n// prime_length('abcdcba') == True\n// prime_length('kittens') == True\n\
    // prime_length('orange') == False\nfunction prime_length($string) {\n    $length\
    \ = strlen($string);\n    if ($length == 1) {\n        return false;\n    }\n\
    \    for ($i = 2; $i < $length; $i++) {\n        if ($length % $i == 0) {\n  \
    \          return false;\n        }\n    }\n    return true;\n}\n\nfunction candidate(...$args)\
    \ {\n    return prime_length(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"Hello\") !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"abcdcba\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"kittens\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"orange\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"wow\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"world\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"MadaM\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Wow\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"HI\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"go\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"gogo\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaaaaaaaaaaaaa\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Madam\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"M\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"0\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpat0xvkz2.php:35\n\
    Stack trace:\n#0 /tmp/tmpat0xvkz2.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpat0xvkz2.php\
    \ on line 35\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a string and returns True if the\
    \ string\n// length is a prime number or False otherwise\n// Examples\n// prime_length('Hello')\
    \ == True\n// prime_length('abcdcba') == True\n// prime_length('kittens') == True\n\
    // prime_length('orange') == False\nfunction prime_length($string) {\n    $length\
    \ = strlen($string);\n    if ($length == 1) {\n        return false;\n    }\n\
    \    for ($i = 2; $i < $length; $i++) {\n        if ($length % $i == 0) {\n  \
    \          return false;\n        }\n    }\n    return true;\n}\n\nfunction candidate(...$args)\
    \ {\n    return prime_length(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"Hello\") !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"abcdcba\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"kittens\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"orange\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"wow\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"world\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"MadaM\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Wow\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"HI\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"go\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"gogo\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaaaaaaaaaaaaa\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Madam\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"M\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"0\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpa6f4uff6.php:35\n\
    Stack trace:\n#0 /tmp/tmpa6f4uff6.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpa6f4uff6.php\
    \ on line 35\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a string and returns True if the\
    \ string\n// length is a prime number or False otherwise\n// Examples\n// prime_length('Hello')\
    \ == True\n// prime_length('abcdcba') == True\n// prime_length('kittens') == True\n\
    // prime_length('orange') == False\nfunction prime_length($string) {\n    $length\
    \ = strlen($string);\n    if ($length == 1) {\n        return False;\n    }\n\
    \    for ($i = 2; $i < $length; $i++) {\n        if ($length % $i == 0) {\n  \
    \          return False;\n        }\n    }\n    return True;\n}\n\nfunction candidate(...$args)\
    \ {\n    return prime_length(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"Hello\") !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"abcdcba\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"kittens\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"orange\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"wow\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"world\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"MadaM\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Wow\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"HI\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"go\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"gogo\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaaaaaaaaaaaaa\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Madam\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"M\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"0\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp6_krfx9j.php:35\n\
    Stack trace:\n#0 /tmp/tmp6_krfx9j.php(45): test()\n#1 {main}\n  thrown in /tmp/tmp6_krfx9j.php\
    \ on line 35\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a string and returns True if the\
    \ string\n// length is a prime number or False otherwise\n// Examples\n// prime_length('Hello')\
    \ == True\n// prime_length('abcdcba') == True\n// prime_length('kittens') == True\n\
    // prime_length('orange') == False\nfunction prime_length($string) {\n    $length\
    \ = strlen($string);\n    if ($length == 1) {\n        return False;\n    }\n\
    \    for ($i = 2; $i < $length; $i++) {\n        if ($length % $i == 0) {\n  \
    \          return False;\n        }\n    }\n    return True;\n}\nfunction candidate(...$args)\
    \ {\n    return prime_length(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"Hello\") !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"abcdcba\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"kittens\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"orange\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"wow\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"world\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"MadaM\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Wow\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"HI\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"go\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"gogo\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaaaaaaaaaaaaa\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Madam\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"M\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"0\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpxzl5nwz2.php:34\n\
    Stack trace:\n#0 /tmp/tmpxzl5nwz2.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpxzl5nwz2.php\
    \ on line 34\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a string and returns True if the\
    \ string\n// length is a prime number or False otherwise\n// Examples\n// prime_length('Hello')\
    \ == True\n// prime_length('abcdcba') == True\n// prime_length('kittens') == True\n\
    // prime_length('orange') == False\nfunction prime_length($string) {\n    $length\
    \ = strlen($string);\n    if ($length == 2) {\n        return True;\n    }\n \
    \   for ($i = 2; $i < $length; $i++) {\n        if ($length % $i == 0) {\n   \
    \         return False;\n        }\n    }\n    return True;\n}\n\nfunction candidate(...$args)\
    \ {\n    return prime_length(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"Hello\") !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"abcdcba\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"kittens\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"orange\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"wow\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"world\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"MadaM\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Wow\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"HI\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"go\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"gogo\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaaaaaaaaaaaaa\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Madam\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"M\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"0\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpod9le1zi.php:35\n\
    Stack trace:\n#0 /tmp/tmpod9le1zi.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpod9le1zi.php\
    \ on line 35\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a string and returns True if the\
    \ string\n// length is a prime number or False otherwise\n// Examples\n// prime_length('Hello')\
    \ == True\n// prime_length('abcdcba') == True\n// prime_length('kittens') == True\n\
    // prime_length('orange') == False\nfunction prime_length($string) {\n    $str_len\
    \ = strlen($string);\n    if ($str_len == 1) {\n        return false;\n    }\n\
    \    for ($i = 2; $i < $str_len; $i++) {\n        if ($str_len % $i == 0) {\n\
    \            return false;\n        }\n    }\n    return true;\n}\n\nfunction\
    \ candidate(...$args) {\n    return prime_length(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"Hello\") !== true) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"abcdcba\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"kittens\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"orange\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"wow\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"world\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"MadaM\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Wow\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"HI\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"go\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"gogo\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aaaaaaaaaaaaaaa\") !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Madam\") !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"M\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"0\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpdfo6yhn3.php:35\n\
    Stack trace:\n#0 /tmp/tmpdfo6yhn3.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpdfo6yhn3.php\
    \ on line 35\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a string and returns True if the\
    \ string\n// length is a prime number or False otherwise\n// Examples\n// prime_length('Hello')\
    \ == True\n// prime_length('abcdcba') == True\n// prime_length('kittens') == True\n\
    // prime_length('orange') == False\nfunction prime_length($string) {\n    $length\
    \ = strlen($string);\n    if ($length == 1) {\n        return false;\n    }\n\
    \    for ($i = 2; $i < $length; $i++) {\n        if ($length % $i == 0) {\n  \
    \          return false;\n        }\n    }\n    return true;\n}\necho prime_length('Hello')\
    \ . PHP_EOL;\necho prime_length('abcdcba') . PHP_EOL;\necho prime_length('kittens')\
    \ . PHP_EOL;\necho prime_length('orange') . PHP_EOL;\nfunction candidate(...$args)\
    \ {\n    return prime_length(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"Hello\") !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"abcdcba\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"kittens\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"orange\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"wow\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"world\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"MadaM\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Wow\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"HI\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"go\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"gogo\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaaaaaaaaaaaaa\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Madam\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"M\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"0\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "1\n1\n1\n\n"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpltttb64d.php:38\n\
    Stack trace:\n#0 /tmp/tmpltttb64d.php(48): test()\n#1 {main}\n  thrown in /tmp/tmpltttb64d.php\
    \ on line 38\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a string and returns True if the\
    \ string\n// length is a prime number or False otherwise\n// Examples\n// prime_length('Hello')\
    \ == True\n// prime_length('abcdcba') == True\n// prime_length('kittens') == True\n\
    // prime_length('orange') == False\nfunction prime_length($string) {\n    $length\
    \ = strlen($string);\n    if($length < 2) {\n        return false;\n    }\n  \
    \  for($i = 2; $i < $length; $i++) {\n        if($length % $i == 0) {\n      \
    \      return false;\n        }\n    }\n    return true;\n}\n\nfunction candidate(...$args)\
    \ {\n    return prime_length(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"Hello\") !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"abcdcba\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"kittens\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"orange\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"wow\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"world\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"MadaM\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Wow\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"HI\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"go\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"gogo\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaaaaaaaaaaaaa\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Madam\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"M\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"0\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that takes a string and returns True if the\
    \ string\n// length is a prime number or False otherwise\n// Examples\n// prime_length('Hello')\
    \ == True\n// prime_length('abcdcba') == True\n// prime_length('kittens') == True\n\
    // prime_length('orange') == False\nfunction prime_length($string) {\n    $length\
    \ = strlen($string);\n    if ($length == 2) {\n        return true;\n    }\n \
    \   for ($i = 2; $i < $length; $i++) {\n        if ($length % $i == 0) {\n   \
    \         return false;\n        }\n    }\n    return true;\n}\n\nfunction candidate(...$args)\
    \ {\n    return prime_length(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"Hello\") !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"abcdcba\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"kittens\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"orange\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"wow\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"world\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"MadaM\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Wow\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"HI\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"go\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"gogo\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaaaaaaaaaaaaa\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Madam\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"M\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"0\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpvwg3vheu.php:35\n\
    Stack trace:\n#0 /tmp/tmpvwg3vheu.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpvwg3vheu.php\
    \ on line 35\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a string and returns True if the\
    \ string\n// length is a prime number or False otherwise\n// Examples\n// prime_length('Hello')\
    \ == True\n// prime_length('abcdcba') == True\n// prime_length('kittens') == True\n\
    // prime_length('orange') == False\nfunction prime_length($string) {\n    $length\
    \ = strlen($string);\n    if ($length == 2) {\n        return True;\n    }\n \
    \   for ($i = 2; $i < $length; $i++) {\n        if ($length % $i == 0) {\n   \
    \         return False;\n        }\n    }\n    return True;\n}\n\nfunction candidate(...$args)\
    \ {\n    return prime_length(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"Hello\") !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"abcdcba\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"kittens\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"orange\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"wow\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"world\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"MadaM\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Wow\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"HI\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"go\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"gogo\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaaaaaaaaaaaaa\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Madam\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"M\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"0\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpquevu00m.php:35\n\
    Stack trace:\n#0 /tmp/tmpquevu00m.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpquevu00m.php\
    \ on line 35\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a string and returns True if the\
    \ string\n// length is a prime number or False otherwise\n// Examples\n// prime_length('Hello')\
    \ == True\n// prime_length('abcdcba') == True\n// prime_length('kittens') == True\n\
    // prime_length('orange') == False\nfunction prime_length($string) {\n  $length\
    \ = strlen($string);\n  if ($length == 1) {\n    return False;\n  }\n  for ($i\
    \ = 2; $i < $length; $i++) {\n    if ($length % $i == 0) {\n      return False;\n\
    \    }\n  }\n  return True;\n}\n\nfunction candidate(...$args) {\n    return prime_length(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello\") !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"abcdcba\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"kittens\") !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"orange\") !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"wow\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"world\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"MadaM\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Wow\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    HI\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    go\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    gogo\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aaaaaaaaaaaaaaa\") !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"Madam\") !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"M\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"0\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp95oslldc.php:35\n\
    Stack trace:\n#0 /tmp/tmp95oslldc.php(45): test()\n#1 {main}\n  thrown in /tmp/tmp95oslldc.php\
    \ on line 35\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a string and returns True if the\
    \ string\n// length is a prime number or False otherwise\n// Examples\n// prime_length('Hello')\
    \ == True\n// prime_length('abcdcba') == True\n// prime_length('kittens') == True\n\
    // prime_length('orange') == False\nfunction prime_length($string) {\n    $length\
    \ = strlen($string);\n    for ($i = 2; $i < $length; $i++) {\n        if ($length\
    \ % $i == 0) {\n            return false;\n        }\n    }\n    return true;\n\
    }\n\nfunction candidate(...$args) {\n    return prime_length(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"Hello\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"abcdcba\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"kittens\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"orange\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"wow\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"world\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"MadaM\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Wow\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"HI\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"go\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"gogo\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aaaaaaaaaaaaaaa\") !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Madam\") !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"M\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"0\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmppmu7p9hq.php:32\n\
    Stack trace:\n#0 /tmp/tmppmu7p9hq.php(42): test()\n#1 {main}\n  thrown in /tmp/tmppmu7p9hq.php\
    \ on line 32\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a string and returns True if the\
    \ string\n// length is a prime number or False otherwise\n// Examples\n// prime_length('Hello')\
    \ == True\n// prime_length('abcdcba') == True\n// prime_length('kittens') == True\n\
    // prime_length('orange') == False\nfunction prime_length($string) {\n    $length\
    \ = strlen($string);\n    if ($length == 1) {\n        return false;\n    }\n\
    \    for ($i = 2; $i < $length; $i++) {\n        if ($length % $i == 0) {\n  \
    \          return false;\n        }\n    }\n    return true;\n}\n\nfunction candidate(...$args)\
    \ {\n    return prime_length(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"Hello\") !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"abcdcba\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"kittens\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"orange\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"wow\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"world\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"MadaM\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Wow\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"HI\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"go\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"gogo\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaaaaaaaaaaaaa\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Madam\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"M\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"0\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp6hagu362.php:35\n\
    Stack trace:\n#0 /tmp/tmp6hagu362.php(45): test()\n#1 {main}\n  thrown in /tmp/tmp6hagu362.php\
    \ on line 35\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a string and returns True if the\
    \ string\n// length is a prime number or False otherwise\n// Examples\n// prime_length('Hello')\
    \ == True\n// prime_length('abcdcba') == True\n// prime_length('kittens') == True\n\
    // prime_length('orange') == False\nfunction prime_length($string) {\n    $length\
    \ = strlen($string);\n    if ($length == 1) {\n        return false;\n    }\n\
    \    for ($i = 2; $i < $length; $i++) {\n        if ($length % $i == 0) {\n  \
    \          return false;\n        }\n    }\n    return true;\n}\necho prime_length('Hello')\
    \ . \"\\n\";\necho prime_length('abcdcba') . \"\\n\";\necho prime_length('kittens')\
    \ . \"\\n\";\necho prime_length('orange') . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return prime_length(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"Hello\") !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"abcdcba\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"kittens\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"orange\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"wow\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"world\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"MadaM\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Wow\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"HI\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"go\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"gogo\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaaaaaaaaaaaaa\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Madam\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"M\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"0\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "1\n1\n1\n\n"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpkdt4zqwd.php:38\n\
    Stack trace:\n#0 /tmp/tmpkdt4zqwd.php(48): test()\n#1 {main}\n  thrown in /tmp/tmpkdt4zqwd.php\
    \ on line 38\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a string and returns True if the\
    \ string\n// length is a prime number or False otherwise\n// Examples\n// prime_length('Hello')\
    \ == True\n// prime_length('abcdcba') == True\n// prime_length('kittens') == True\n\
    // prime_length('orange') == False\nfunction prime_length($string) {\n    $length\
    \ = strlen($string);\n    if ($length == 1) {\n        return false;\n    }\n\
    \    for ($i = 2; $i < $length; $i++) {\n        if ($length % $i == 0) {\n  \
    \          return false;\n        }\n    }\n    return true;\n}\n\nfunction candidate(...$args)\
    \ {\n    return prime_length(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"Hello\") !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"abcdcba\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"kittens\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"orange\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"wow\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"world\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"MadaM\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Wow\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"HI\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"go\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"gogo\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaaaaaaaaaaaaa\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Madam\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"M\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"0\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp75ukice9.php:35\n\
    Stack trace:\n#0 /tmp/tmp75ukice9.php(45): test()\n#1 {main}\n  thrown in /tmp/tmp75ukice9.php\
    \ on line 35\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a string and returns True if the\
    \ string\n// length is a prime number or False otherwise\n// Examples\n// prime_length('Hello')\
    \ == True\n// prime_length('abcdcba') == True\n// prime_length('kittens') == True\n\
    // prime_length('orange') == False\nfunction prime_length($string) {\n    $length\
    \ = strlen($string);\n    if ($length == 1) {\n        return false;\n    }\n\
    \    for ($i = 2; $i < $length; $i++) {\n        if ($length % $i == 0) {\n  \
    \          return false;\n        }\n    }\n    return true;\n}\n\nfunction candidate(...$args)\
    \ {\n    return prime_length(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"Hello\") !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"abcdcba\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"kittens\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"orange\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"wow\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"world\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"MadaM\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Wow\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"HI\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"go\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"gogo\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaaaaaaaaaaaaa\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Madam\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"M\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"0\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpn9_hwdqf.php:35\n\
    Stack trace:\n#0 /tmp/tmpn9_hwdqf.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpn9_hwdqf.php\
    \ on line 35\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a string and returns True if the\
    \ string\n// length is a prime number or False otherwise\n// Examples\n// prime_length('Hello')\
    \ == True\n// prime_length('abcdcba') == True\n// prime_length('kittens') == True\n\
    // prime_length('orange') == False\nfunction prime_length($string) {\n    $length\
    \ = strlen($string);\n    if ($length == 1) {\n        return false;\n    }\n\
    \    for ($i = 2; $i < $length; $i++) {\n        if ($length % $i == 0) {\n  \
    \          return false;\n        }\n    }\n    return true;\n}\n\nfunction candidate(...$args)\
    \ {\n    return prime_length(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"Hello\") !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"abcdcba\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"kittens\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"orange\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"wow\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"world\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"MadaM\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Wow\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"HI\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"go\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"gogo\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaaaaaaaaaaaaa\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Madam\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"M\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"0\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpto7dd77q.php:35\n\
    Stack trace:\n#0 /tmp/tmpto7dd77q.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpto7dd77q.php\
    \ on line 35\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a string and returns True if the\
    \ string\n// length is a prime number or False otherwise\n// Examples\n// prime_length('Hello')\
    \ == True\n// prime_length('abcdcba') == True\n// prime_length('kittens') == True\n\
    // prime_length('orange') == False\nfunction prime_length($string) {\n    $length\
    \ = strlen($string);\n    if ($length < 2) {\n        return false;\n    }\n \
    \   for ($i = 2; $i < $length; $i++) {\n        if ($length % $i == 0) {\n   \
    \         return false;\n        }\n    }\n    return true;\n}\n\nfunction candidate(...$args)\
    \ {\n    return prime_length(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"Hello\") !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"abcdcba\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"kittens\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"orange\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"wow\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"world\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"MadaM\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Wow\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"HI\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"go\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"gogo\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaaaaaaaaaaaaa\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Madam\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"M\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"0\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that takes a string and returns True if the\
    \ string\n// length is a prime number or False otherwise\n// Examples\n// prime_length('Hello')\
    \ == True\n// prime_length('abcdcba') == True\n// prime_length('kittens') == True\n\
    // prime_length('orange') == False\nfunction prime_length($string) {\n\t$length\
    \ = strlen($string);\n\tif ($length == 1) {\n\t\treturn false;\n\t}\n\tfor ($i\
    \ = 2; $i < $length; $i++) {\n\t\tif ($length % $i == 0) {\n\t\t\treturn false;\n\
    \t\t}\n\t}\n\treturn true;\n}\n\nfunction candidate(...$args) {\n    return prime_length(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello\") !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"abcdcba\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"kittens\") !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"orange\") !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"wow\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"world\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"MadaM\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Wow\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    HI\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    go\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    gogo\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aaaaaaaaaaaaaaa\") !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"Madam\") !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"M\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"0\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpkqcsauhi.php:35\n\
    Stack trace:\n#0 /tmp/tmpkqcsauhi.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpkqcsauhi.php\
    \ on line 35\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a string and returns True if the\
    \ string\n// length is a prime number or False otherwise\n// Examples\n// prime_length('Hello')\
    \ == True\n// prime_length('abcdcba') == True\n// prime_length('kittens') == True\n\
    // prime_length('orange') == False\nfunction prime_length($string) {\n    $length\
    \ = strlen($string);\n    if ($length == 1) {\n        return false;\n    }\n\
    \    for ($i = 2; $i < $length; $i++) {\n        if ($length % $i == 0) {\n  \
    \          return false;\n        }\n    }\n    return true;\n}\n\nfunction candidate(...$args)\
    \ {\n    return prime_length(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"Hello\") !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"abcdcba\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"kittens\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"orange\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"wow\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"world\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"MadaM\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Wow\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"HI\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"go\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"gogo\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaaaaaaaaaaaaa\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Madam\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"M\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"0\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpiyqs60yv.php:35\n\
    Stack trace:\n#0 /tmp/tmpiyqs60yv.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpiyqs60yv.php\
    \ on line 35\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a string and returns True if the\
    \ string\n// length is a prime number or False otherwise\n// Examples\n// prime_length('Hello')\
    \ == True\n// prime_length('abcdcba') == True\n// prime_length('kittens') == True\n\
    // prime_length('orange') == False\nfunction prime_length($string) {\n    $length\
    \ = strlen($string);\n    if ($length == 1) {\n        return false;\n    }\n\
    \    for ($i = 2; $i < $length; $i++) {\n        if ($length % $i == 0) {\n  \
    \          return false;\n        }\n    }\n    return true;\n}\n\nfunction candidate(...$args)\
    \ {\n    return prime_length(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"Hello\") !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"abcdcba\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"kittens\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"orange\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"wow\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"world\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"MadaM\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Wow\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"HI\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"go\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"gogo\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaaaaaaaaaaaaa\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Madam\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"M\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"0\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmptrdx994d.php:35\n\
    Stack trace:\n#0 /tmp/tmptrdx994d.php(45): test()\n#1 {main}\n  thrown in /tmp/tmptrdx994d.php\
    \ on line 35\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a string and returns True if the\
    \ string\n// length is a prime number or False otherwise\n// Examples\n// prime_length('Hello')\
    \ == True\n// prime_length('abcdcba') == True\n// prime_length('kittens') == True\n\
    // prime_length('orange') == False\nfunction prime_length($string) {\n    $length\
    \ = strlen($string);\n    if ($length == 1) {\n        return false;\n    }\n\
    \    for ($i = 2; $i < $length; $i++) {\n        if ($length % $i == 0) {\n  \
    \          return false;\n        }\n    }\n    return true;\n}\n\nfunction candidate(...$args)\
    \ {\n    return prime_length(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"Hello\") !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"abcdcba\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"kittens\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"orange\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"wow\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"world\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"MadaM\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Wow\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"HI\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"go\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"gogo\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaaaaaaaaaaaaa\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Madam\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"M\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"0\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp7hbhxy40.php:35\n\
    Stack trace:\n#0 /tmp/tmp7hbhxy40.php(45): test()\n#1 {main}\n  thrown in /tmp/tmp7hbhxy40.php\
    \ on line 35\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a string and returns True if the\
    \ string\n// length is a prime number or False otherwise\n// Examples\n// prime_length('Hello')\
    \ == True\n// prime_length('abcdcba') == True\n// prime_length('kittens') == True\n\
    // prime_length('orange') == False\nfunction prime_length($string) {\n    $length\
    \ = strlen($string);\n    if ($length == 1) {\n        return false;\n    }\n\
    \    for ($i = 2; $i < $length; $i++) {\n        if ($length % $i == 0) {\n  \
    \          return false;\n        }\n    }\n    return true;\n}\necho prime_length('Hello')\
    \ ? 'true' : 'false';\necho \"\\n\";\necho prime_length('abcdcba') ? 'true' :\
    \ 'false';\necho \"\\n\";\necho prime_length('kittens') ? 'true' : 'false';\n\
    echo \"\\n\";\necho prime_length('orange') ? 'true' : 'false';\necho \"\\n\";\n\
    echo prime_length('a') ? 'true' : 'false';\necho \"\\n\";\necho prime_length('ab')\
    \ ? 'true' : 'false';\necho \"\\n\";\necho prime_length('abc') ? 'true' : 'false';\n\
    echo \"\\n\";\necho prime_length('abcd') ? 'true' : 'false';\necho \"\\n\";\n\
    echo prime_length('abcde') ? 'true' : 'false';\necho \"\\n\";\necho prime_length('abcdef')\
    \ ? 'true' : 'false';\necho \"\\n\";\necho prime_length('abcdefg') ? 'true' :\
    \ 'false';\necho \"\\n\";\necho prime_length('abcdefgh') ? 'true' : 'false';\n\
    echo \"\\n\";\necho prime_length('abcdefghi') ? 'true' : 'false';\necho \"\\n\"\
    ;\necho prime_length('abcdefghij') ? 'true' : 'false';\necho \"\\n\";\necho prime_length('abcdefghijk')\
    \ ? 'true' : 'false';\necho \"\\n\";\necho prime_length('abcdefghijkl') ? 'true'\
    \ : 'false';\necho \"\\n\";\necho prime_length('abcdefghijklm') ? 'true' : 'false';\n\
    echo \"\\n\";\necho prime_length('abcdefghijklmn') ? 'true' : 'false';\necho \"\
    \\n\";\necho prime_length('abcdefghijklmno') ? 'true' : 'false';\necho \"\\\n\
    function candidate(...$args) {\n    return prime_length(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"Hello\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"abcdcba\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"kittens\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"orange\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"wow\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"world\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"MadaM\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Wow\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"HI\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"go\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"gogo\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aaaaaaaaaaaaaaa\") !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Madam\") !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"M\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"0\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Parse error:  syntax error, unexpected identifier \"Hello\", expecting\
    \ \",\" or \";\" in /tmp/tmp39r95s4c.php on line 64\n"
  exit_code: 255
  status: SyntaxError
- program: "<?php\n// Write a function that takes a string and returns True if the\
    \ string\n// length is a prime number or False otherwise\n// Examples\n// prime_length('Hello')\
    \ == True\n// prime_length('abcdcba') == True\n// prime_length('kittens') == True\n\
    // prime_length('orange') == False\nfunction prime_length($string) {\n    $length\
    \ = strlen($string);\n    if ($length == 1) {\n        return false;\n    }\n\
    \    for ($i = 2; $i < $length; $i++) {\n        if ($length % $i == 0) {\n  \
    \          return false;\n        }\n    }\n    return true;\n}\n\nfunction candidate(...$args)\
    \ {\n    return prime_length(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"Hello\") !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"abcdcba\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"kittens\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"orange\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"wow\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"world\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"MadaM\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Wow\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"HI\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"go\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"gogo\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaaaaaaaaaaaaa\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Madam\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"M\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"0\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp1t4k7y43.php:35\n\
    Stack trace:\n#0 /tmp/tmp1t4k7y43.php(45): test()\n#1 {main}\n  thrown in /tmp/tmp1t4k7y43.php\
    \ on line 35\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a string and returns True if the\
    \ string\n// length is a prime number or False otherwise\n// Examples\n// prime_length('Hello')\
    \ == True\n// prime_length('abcdcba') == True\n// prime_length('kittens') == True\n\
    // prime_length('orange') == False\nfunction prime_length($string) {\n  $length\
    \ = strlen($string);\n  if ($length == 2) {\n    return True;\n  }\n  for ($i\
    \ = 2; $i < $length; $i++) {\n    if ($length % $i == 0) {\n      return False;\n\
    \    }\n  }\n  return True;\n}\n\nfunction candidate(...$args) {\n    return prime_length(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello\") !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"abcdcba\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"kittens\") !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"orange\") !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"wow\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"world\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"MadaM\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Wow\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    HI\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    go\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    gogo\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aaaaaaaaaaaaaaa\") !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"Madam\") !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"M\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"0\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp6lw1qn1o.php:35\n\
    Stack trace:\n#0 /tmp/tmp6lw1qn1o.php(45): test()\n#1 {main}\n  thrown in /tmp/tmp6lw1qn1o.php\
    \ on line 35\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a string and returns True if the\
    \ string\n// length is a prime number or False otherwise\n// Examples\n// prime_length('Hello')\
    \ == True\n// prime_length('abcdcba') == True\n// prime_length('kittens') == True\n\
    // prime_length('orange') == False\nfunction prime_length($string) {\n    $length\
    \ = strlen($string);\n    $isPrime = true;\n    for ($i = 2; $i < $length; $i++)\
    \ {\n        if ($length % $i == 0) {\n            $isPrime = false;\n       \
    \     break;\n        }\n    }\n    return $isPrime;\n}\n\nfunction candidate(...$args)\
    \ {\n    return prime_length(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"Hello\") !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"abcdcba\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"kittens\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"orange\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"wow\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"world\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"MadaM\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Wow\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"HI\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"go\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"gogo\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaaaaaaaaaaaaa\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Madam\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"M\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"0\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpkcm72c11.php:34\n\
    Stack trace:\n#0 /tmp/tmpkcm72c11.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpkcm72c11.php\
    \ on line 34\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a string and returns True if the\
    \ string\n// length is a prime number or False otherwise\n// Examples\n// prime_length('Hello')\
    \ == True\n// prime_length('abcdcba') == True\n// prime_length('kittens') == True\n\
    // prime_length('orange') == False\nfunction prime_length($string) {\n    $string_length\
    \ = strlen($string);\n    $is_prime = true;\n    for ($i = 2; $i < $string_length;\
    \ $i++) {\n        if ($string_length % $i == 0) {\n            $is_prime = false;\n\
    \            break;\n        }\n    }\n    return $is_prime;\n}\n\nfunction candidate(...$args)\
    \ {\n    return prime_length(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"Hello\") !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"abcdcba\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"kittens\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"orange\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"wow\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"world\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"MadaM\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Wow\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"HI\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"go\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"gogo\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaaaaaaaaaaaaa\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Madam\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"M\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"0\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp7mlskw_h.php:34\n\
    Stack trace:\n#0 /tmp/tmp7mlskw_h.php(44): test()\n#1 {main}\n  thrown in /tmp/tmp7mlskw_h.php\
    \ on line 34\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a string and returns True if the\
    \ string\n// length is a prime number or False otherwise\n// Examples\n// prime_length('Hello')\
    \ == True\n// prime_length('abcdcba') == True\n// prime_length('kittens') == True\n\
    // prime_length('orange') == False\nfunction prime_length($string) {\n    $length\
    \ = strlen($string);\n    if ($length == 2) {\n        return True;\n    }\n \
    \   if ($length % 2 == 0) {\n        return False;\n    }\n    for ($i = 3; $i\
    \ <= sqrt($length); $i += 2) {\n        if ($length % $i == 0) {\n           \
    \ return False;\n        }\n    }\n    return True;\n}\n\nfunction candidate(...$args)\
    \ {\n    return prime_length(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"Hello\") !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"abcdcba\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"kittens\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"orange\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"wow\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"world\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"MadaM\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Wow\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"HI\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"go\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"gogo\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaaaaaaaaaaaaa\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Madam\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"M\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"0\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpmf2kr0w_.php:44\n\
    Stack trace:\n#0 /tmp/tmpmf2kr0w_.php(48): test()\n#1 {main}\n  thrown in /tmp/tmpmf2kr0w_.php\
    \ on line 44\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a string and returns True if the\
    \ string\n// length is a prime number or False otherwise\n// Examples\n// prime_length('Hello')\
    \ == True\n// prime_length('abcdcba') == True\n// prime_length('kittens') == True\n\
    // prime_length('orange') == False\nfunction prime_length($string) {\n    $length\
    \ = strlen($string);\n    for ($i = 2; $i < $length; $i++) {\n        if ($length\
    \ % $i == 0) {\n            return False;\n        }\n    }\n    return True;\n\
    }\n\nfunction candidate(...$args) {\n    return prime_length(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"Hello\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"abcdcba\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"kittens\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"orange\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"wow\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"world\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"MadaM\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Wow\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"HI\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"go\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"gogo\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aaaaaaaaaaaaaaa\") !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Madam\") !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"M\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"0\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpy5xihs8w.php:32\n\
    Stack trace:\n#0 /tmp/tmpy5xihs8w.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpy5xihs8w.php\
    \ on line 32\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a string and returns True if the\
    \ string\n// length is a prime number or False otherwise\n// Examples\n// prime_length('Hello')\
    \ == True\n// prime_length('abcdcba') == True\n// prime_length('kittens') == True\n\
    // prime_length('orange') == False\nfunction prime_length($string) {\n    $length\
    \ = strlen($string);\n    if ($length == 1) {\n        return False;\n    }\n\
    \    for ($i = 2; $i < $length; $i++) {\n        if ($length % $i == 0) {\n  \
    \          return False;\n        }\n    }\n    return True;\n}\n\nfunction candidate(...$args)\
    \ {\n    return prime_length(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"Hello\") !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"abcdcba\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"kittens\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"orange\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"wow\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"world\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"MadaM\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Wow\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"HI\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"go\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"gogo\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaaaaaaaaaaaaa\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Madam\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"M\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"0\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp59scr717.php:35\n\
    Stack trace:\n#0 /tmp/tmp59scr717.php(45): test()\n#1 {main}\n  thrown in /tmp/tmp59scr717.php\
    \ on line 35\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a string and returns True if the\
    \ string\n// length is a prime number or False otherwise\n// Examples\n// prime_length('Hello')\
    \ == True\n// prime_length('abcdcba') == True\n// prime_length('kittens') == True\n\
    // prime_length('orange') == False\nfunction prime_length($string) {\n    $length\
    \ = strlen($string);\n    if ($length == 1) {\n        return false;\n    }\n\
    \    for ($i = 2; $i < $length; $i++) {\n        if ($length % $i == 0) {\n  \
    \          return false;\n        }\n    }\n    return true;\n}\n\nfunction candidate(...$args)\
    \ {\n    return prime_length(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"Hello\") !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"abcdcba\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"kittens\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"orange\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"wow\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"world\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"MadaM\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Wow\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"HI\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"go\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"gogo\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaaaaaaaaaaaaa\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Madam\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"M\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"0\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpaxcul9eg.php:35\n\
    Stack trace:\n#0 /tmp/tmpaxcul9eg.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpaxcul9eg.php\
    \ on line 35\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a string and returns True if the\
    \ string\n// length is a prime number or False otherwise\n// Examples\n// prime_length('Hello')\
    \ == True\n// prime_length('abcdcba') == True\n// prime_length('kittens') == True\n\
    // prime_length('orange') == False\nfunction prime_length($string) {\n  $length\
    \ = strlen($string);\n  if ($length == 1) {\n    return false;\n  }\n  for ($i\
    \ = 2; $i < $length; $i++) {\n    if ($length % $i == 0) {\n      return false;\n\
    \    }\n  }\n  return true;\n}\n\necho prime_length('Hello') . \"\\n\";\necho\
    \ prime_length('abcdcba') . \"\\n\";\necho prime_length('kittens') . \"\\n\";\n\
    echo prime_length('orange') . \"\\n\";\nfunction candidate(...$args) {\n    return\
    \ prime_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcdcba\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    kittens\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    orange\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    wow\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    world\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    MadaM\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Wow\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    HI\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    go\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    gogo\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aaaaaaaaaaaaaaa\") !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"Madam\") !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"M\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"0\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "1\n1\n1\n\n"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmppu_6i1i5.php:39\n\
    Stack trace:\n#0 /tmp/tmppu_6i1i5.php(49): test()\n#1 {main}\n  thrown in /tmp/tmppu_6i1i5.php\
    \ on line 39\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a string and returns True if the\
    \ string\n// length is a prime number or False otherwise\n// Examples\n// prime_length('Hello')\
    \ == True\n// prime_length('abcdcba') == True\n// prime_length('kittens') == True\n\
    // prime_length('orange') == False\nfunction prime_length($string) {\n    $length\
    \ = strlen($string);\n    if($length == 1) {\n        return false;\n    }\n \
    \   for($i = 2; $i < $length; $i++) {\n        if($length % $i == 0) {\n     \
    \       return false;\n        }\n    }\n    return true;\n}\n\necho prime_length('Hello')\
    \ ? 'True' : 'False';\necho '<br>';\necho prime_length('abcdcba') ? 'True' : 'False';\n\
    echo '<br>';\necho prime_length('kittens') ? 'True' : 'False';\necho '<br>';\n\
    echo prime_length('orange') ? 'True' : 'False';\necho '<br>';\necho prime_length('a')\
    \ ? 'True' : 'False';\necho '<br>';\necho prime_length('ab') ? 'True' : 'False';\n\
    echo '<br>';\necho prime_length('abc') ? 'True' : 'False';\necho '<br>';\necho\
    \ prime_length('abcd') ? 'True' : 'False';\necho '<br>';\necho prime_length('abcde')\
    \ ? 'True' : 'False';\necho '<br>';\necho prime_length('abcdef') ? 'True' : 'False';\n\
    echo '<br>';\necho prime_length('abcdefg') ? 'True' : 'False';\necho '<br>';\n\
    echo prime_length('abcdefgh') ? 'True' : 'False';\necho '<br>';\necho prime_length('abcdefghi')\
    \ ? 'True' : 'False';\necho '<br>';\necho prime_length('abcdefghij') ? 'True'\
    \ : 'False';\necho '<br>';\necho prime_length('abcdefghijk') ? 'True' : 'False';\n\
    echo '<br>';\necho prime_length('abcdefghijkl') ? 'True' : 'False';\necho '<br>';\n\
    echo prime_length('abcdefghijklm') ? 'True' : 'False';\necho '<br>';\necho prime_length('abcdefghijklmn')\
    \ ? 'True\nfunction candidate(...$args) {\n    return prime_length(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello\") !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"abcdcba\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"kittens\") !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"orange\") !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"wow\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"world\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"MadaM\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Wow\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    HI\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    go\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    gogo\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aaaaaaaaaaaaaaa\") !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"Madam\") !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"M\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"0\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Parse error:  syntax error, unexpected string content \"True\" in /tmp/tmpez9tenfs.php\
    \ on line 56\n"
  exit_code: 255
  status: SyntaxError
- program: "<?php\n// Write a function that takes a string and returns True if the\
    \ string\n// length is a prime number or False otherwise\n// Examples\n// prime_length('Hello')\
    \ == True\n// prime_length('abcdcba') == True\n// prime_length('kittens') == True\n\
    // prime_length('orange') == False\nfunction prime_length($string) {\n  $length\
    \ = strlen($string);\n  if ($length == 1) {\n    return false;\n  }\n  for ($i\
    \ = 2; $i < $length; $i++) {\n    if ($length % $i == 0) {\n      return false;\n\
    \    }\n  }\n  return true;\n}\n\necho prime_length('Hello') . PHP_EOL;\necho\
    \ prime_length('abcdcba') . PHP_EOL;\necho prime_length('kittens') . PHP_EOL;\n\
    echo prime_length('orange') . PHP_EOL;\nfunction candidate(...$args) {\n    return\
    \ prime_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcdcba\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    kittens\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    orange\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    wow\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    world\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    MadaM\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Wow\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    HI\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    go\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    gogo\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aaaaaaaaaaaaaaa\") !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"Madam\") !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"M\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"0\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "1\n1\n1\n\n"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmplt0q25sj.php:39\n\
    Stack trace:\n#0 /tmp/tmplt0q25sj.php(49): test()\n#1 {main}\n  thrown in /tmp/tmplt0q25sj.php\
    \ on line 39\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a string and returns True if the\
    \ string\n// length is a prime number or False otherwise\n// Examples\n// prime_length('Hello')\
    \ == True\n// prime_length('abcdcba') == True\n// prime_length('kittens') == True\n\
    // prime_length('orange') == False\nfunction prime_length($string) {\n  $length\
    \ = strlen($string);\n  if ($length == 1) {\n    return false;\n  }\n  for ($i\
    \ = 2; $i < $length; $i++) {\n    if ($length % $i == 0) {\n      return false;\n\
    \    }\n  }\n  return true;\n}\nfunction candidate(...$args) {\n    return prime_length(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello\") !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"abcdcba\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"kittens\") !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"orange\") !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"wow\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"world\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"MadaM\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Wow\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    HI\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    go\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    gogo\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aaaaaaaaaaaaaaa\") !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"Madam\") !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"M\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"0\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpy1lcpx55.php:34\n\
    Stack trace:\n#0 /tmp/tmpy1lcpx55.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpy1lcpx55.php\
    \ on line 34\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a string and returns True if the\
    \ string\n// length is a prime number or False otherwise\n// Examples\n// prime_length('Hello')\
    \ == True\n// prime_length('abcdcba') == True\n// prime_length('kittens') == True\n\
    // prime_length('orange') == False\nfunction prime_length($string) {\n  $length\
    \ = strlen($string);\n  if ($length == 1) {\n    return False;\n  }\n  for ($i\
    \ = 2; $i < $length; $i++) {\n    if ($length % $i == 0) {\n      return False;\n\
    \    }\n  }\n  return True;\n}\n\nfunction candidate(...$args) {\n    return prime_length(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello\") !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"abcdcba\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"kittens\") !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"orange\") !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"wow\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"world\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"MadaM\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Wow\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    HI\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    go\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    gogo\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aaaaaaaaaaaaaaa\") !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"Madam\") !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"M\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"0\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp7u7eip6h.php:35\n\
    Stack trace:\n#0 /tmp/tmp7u7eip6h.php(45): test()\n#1 {main}\n  thrown in /tmp/tmp7u7eip6h.php\
    \ on line 35\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a string and returns True if the\
    \ string\n// length is a prime number or False otherwise\n// Examples\n// prime_length('Hello')\
    \ == True\n// prime_length('abcdcba') == True\n// prime_length('kittens') == True\n\
    // prime_length('orange') == False\nfunction prime_length($string) {\n    $length\
    \ = strlen($string);\n    for ($i = 2; $i < $length; $i++) {\n        if ($length\
    \ % $i == 0) {\n            return false;\n        }\n    }\n    return true;\n\
    }\nfunction candidate(...$args) {\n    return prime_length(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"Hello\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"abcdcba\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"kittens\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"orange\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"wow\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"world\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"MadaM\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Wow\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"HI\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"go\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"gogo\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aaaaaaaaaaaaaaa\") !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Madam\") !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"M\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"0\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpm24d4i6h.php:31\n\
    Stack trace:\n#0 /tmp/tmpm24d4i6h.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpm24d4i6h.php\
    \ on line 31\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a string and returns True if the\
    \ string\n// length is a prime number or False otherwise\n// Examples\n// prime_length('Hello')\
    \ == True\n// prime_length('abcdcba') == True\n// prime_length('kittens') == True\n\
    // prime_length('orange') == False\nfunction prime_length($string) {\n    $length\
    \ = strlen($string);\n    if ($length < 2) {\n        return false;\n    }\n \
    \   for ($i = 2; $i < $length; $i++) {\n        if ($length % $i == 0) {\n   \
    \         return false;\n        }\n    }\n    return true;\n}\n\nfunction candidate(...$args)\
    \ {\n    return prime_length(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"Hello\") !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"abcdcba\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"kittens\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"orange\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"wow\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"world\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"MadaM\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Wow\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"HI\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"go\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"gogo\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaaaaaaaaaaaaa\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Madam\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"M\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"0\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that takes a string and returns True if the\
    \ string\n// length is a prime number or False otherwise\n// Examples\n// prime_length('Hello')\
    \ == True\n// prime_length('abcdcba') == True\n// prime_length('kittens') == True\n\
    // prime_length('orange') == False\nfunction prime_length($string) {\n    $length\
    \ = strlen($string);\n    if ($length == 1) {\n        return False;\n    }\n\
    \    for ($i = 2; $i < $length; $i++) {\n        if ($length % $i == 0) {\n  \
    \          return False;\n        }\n    }\n    return True;\n}\n\nfunction candidate(...$args)\
    \ {\n    return prime_length(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"Hello\") !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"abcdcba\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"kittens\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"orange\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"wow\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"world\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"MadaM\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Wow\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"HI\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"go\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"gogo\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaaaaaaaaaaaaa\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Madam\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"M\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"0\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmputvxf_mb.php:35\n\
    Stack trace:\n#0 /tmp/tmputvxf_mb.php(45): test()\n#1 {main}\n  thrown in /tmp/tmputvxf_mb.php\
    \ on line 35\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a string and returns True if the\
    \ string\n// length is a prime number or False otherwise\n// Examples\n// prime_length('Hello')\
    \ == True\n// prime_length('abcdcba') == True\n// prime_length('kittens') == True\n\
    // prime_length('orange') == False\nfunction prime_length($string) {\n    $length\
    \ = strlen($string);\n    if ($length == 1) {\n        return false;\n    }\n\
    \    for ($i = 2; $i < $length; $i++) {\n        if ($length % $i == 0) {\n  \
    \          return false;\n        }\n    }\n    return true;\n}\n\nfunction candidate(...$args)\
    \ {\n    return prime_length(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"Hello\") !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"abcdcba\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"kittens\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"orange\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"wow\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"world\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"MadaM\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Wow\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"HI\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"go\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"gogo\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaaaaaaaaaaaaa\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Madam\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"M\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"0\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpx_vcdmbf.php:35\n\
    Stack trace:\n#0 /tmp/tmpx_vcdmbf.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpx_vcdmbf.php\
    \ on line 35\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a string and returns True if the\
    \ string\n// length is a prime number or False otherwise\n// Examples\n// prime_length('Hello')\
    \ == True\n// prime_length('abcdcba') == True\n// prime_length('kittens') == True\n\
    // prime_length('orange') == False\nfunction prime_length($string) {\n    $length\
    \ = strlen($string);\n    if ($length == 1) {\n        return false;\n    }\n\
    \    for ($i = 2; $i < $length; $i++) {\n        if ($length % $i == 0) {\n  \
    \          return false;\n        }\n    }\n    return true;\n}\n\nfunction candidate(...$args)\
    \ {\n    return prime_length(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"Hello\") !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"abcdcba\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"kittens\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"orange\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"wow\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"world\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"MadaM\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Wow\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"HI\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"go\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"gogo\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaaaaaaaaaaaaa\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Madam\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"M\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"0\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpk0o35f8b.php:35\n\
    Stack trace:\n#0 /tmp/tmpk0o35f8b.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpk0o35f8b.php\
    \ on line 35\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a string and returns True if the\
    \ string\n// length is a prime number or False otherwise\n// Examples\n// prime_length('Hello')\
    \ == True\n// prime_length('abcdcba') == True\n// prime_length('kittens') == True\n\
    // prime_length('orange') == False\nfunction prime_length($string) {\n  $length\
    \ = strlen($string);\n  if ($length == 1) {\n    return false;\n  }\n  for ($i\
    \ = 2; $i < $length; $i++) {\n    if ($length % $i == 0) {\n      return false;\n\
    \    }\n  }\n  return true;\n}\n\nfunction candidate(...$args) {\n    return prime_length(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello\") !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"abcdcba\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"kittens\") !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"orange\") !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"wow\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"world\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"MadaM\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Wow\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    HI\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    go\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    gogo\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aaaaaaaaaaaaaaa\") !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"Madam\") !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"M\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"0\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpn5yiyynl.php:35\n\
    Stack trace:\n#0 /tmp/tmpn5yiyynl.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpn5yiyynl.php\
    \ on line 35\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a string and returns True if the\
    \ string\n// length is a prime number or False otherwise\n// Examples\n// prime_length('Hello')\
    \ == True\n// prime_length('abcdcba') == True\n// prime_length('kittens') == True\n\
    // prime_length('orange') == False\nfunction prime_length($string) {\n    $length\
    \ = strlen($string);\n    if ($length == 1) {\n        return false;\n    }\n\
    \    for ($i = 2; $i < $length; $i++) {\n        if ($length % $i == 0) {\n  \
    \          return false;\n        }\n    }\n    return true;\n}\n\nfunction candidate(...$args)\
    \ {\n    return prime_length(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"Hello\") !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"abcdcba\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"kittens\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"orange\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"wow\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"world\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"MadaM\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Wow\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"HI\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"go\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"gogo\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaaaaaaaaaaaaa\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Madam\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"M\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"0\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp0891w6fr.php:35\n\
    Stack trace:\n#0 /tmp/tmp0891w6fr.php(45): test()\n#1 {main}\n  thrown in /tmp/tmp0891w6fr.php\
    \ on line 35\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a string and returns True if the\
    \ string\n// length is a prime number or False otherwise\n// Examples\n// prime_length('Hello')\
    \ == True\n// prime_length('abcdcba') == True\n// prime_length('kittens') == True\n\
    // prime_length('orange') == False\nfunction prime_length($string) {\n    $length\
    \ = strlen($string);\n    if ($length == 1) {\n        return false;\n    }\n\
    \    for ($i = 2; $i < $length; $i++) {\n        if ($length % $i == 0) {\n  \
    \          return false;\n        }\n    }\n    return true;\n}\necho prime_length('Hello')\
    \ . \"\\n\";\necho prime_length('abcdcba') . \"\\n\";\necho prime_length('kittens')\
    \ . \"\\n\";\necho prime_length('orange') . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return prime_length(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"Hello\") !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"abcdcba\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"kittens\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"orange\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"wow\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"world\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"MadaM\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Wow\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"HI\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"go\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"gogo\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaaaaaaaaaaaaa\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Madam\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"M\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"0\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "1\n1\n1\n\n"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp7lkpp5wt.php:38\n\
    Stack trace:\n#0 /tmp/tmp7lkpp5wt.php(48): test()\n#1 {main}\n  thrown in /tmp/tmp7lkpp5wt.php\
    \ on line 38\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a string and returns True if the\
    \ string\n// length is a prime number or False otherwise\n// Examples\n// prime_length('Hello')\
    \ == True\n// prime_length('abcdcba') == True\n// prime_length('kittens') == True\n\
    // prime_length('orange') == False\nfunction prime_length($string) {\n    $length\
    \ = strlen($string);\n    if ($length == 1) {\n        return false;\n    }\n\
    \    for ($i = 2; $i < $length; $i++) {\n        if ($length % $i == 0) {\n  \
    \          return false;\n        }\n    }\n    return true;\n}\n\nfunction candidate(...$args)\
    \ {\n    return prime_length(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"Hello\") !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"abcdcba\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"kittens\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"orange\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"wow\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"world\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"MadaM\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Wow\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"HI\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"go\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"gogo\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaaaaaaaaaaaaa\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Madam\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"M\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"0\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpscudydss.php:35\n\
    Stack trace:\n#0 /tmp/tmpscudydss.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpscudydss.php\
    \ on line 35\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a string and returns True if the\
    \ string\n// length is a prime number or False otherwise\n// Examples\n// prime_length('Hello')\
    \ == True\n// prime_length('abcdcba') == True\n// prime_length('kittens') == True\n\
    // prime_length('orange') == False\nfunction prime_length($string) {\n    $length\
    \ = strlen($string);\n    if ($length < 2) {\n        return False;\n    }\n \
    \   for ($i = 2; $i < $length; $i++) {\n        if ($length % $i == 0) {\n   \
    \         return False;\n        }\n    }\n    return True;\n}\n\necho prime_length('Hello')\
    \ . \"\\n\";\necho prime_length('abcdcba') . \"\\n\";\necho prime_length('kittens')\
    \ . \"\\n\";\necho prime_length('orange') . \"\\n\";\n\nfunction candidate(...$args)\
    \ {\n    return prime_length(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"Hello\") !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"abcdcba\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"kittens\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"orange\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"wow\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"world\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"MadaM\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Wow\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"HI\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"go\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"gogo\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaaaaaaaaaaaaa\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Madam\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"M\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"0\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "1\n1\n1\n\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that takes a string and returns True if the\
    \ string\n// length is a prime number or False otherwise\n// Examples\n// prime_length('Hello')\
    \ == True\n// prime_length('abcdcba') == True\n// prime_length('kittens') == True\n\
    // prime_length('orange') == False\nfunction prime_length($string) {\n\t$length\
    \ = strlen($string);\n\tif ($length == 2) {\n\t\treturn true;\n\t}\n\tfor ($i\
    \ = 2; $i < $length; $i++) {\n\t\tif ($length % $i == 0) {\n\t\t\treturn false;\n\
    \t\t}\n\t}\n\treturn true;\n}\n\nfunction candidate(...$args) {\n    return prime_length(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello\") !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"abcdcba\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"kittens\") !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"orange\") !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"wow\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"world\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"MadaM\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Wow\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    HI\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    go\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    gogo\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aaaaaaaaaaaaaaa\") !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"Madam\") !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"M\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"0\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpcp36yv2e.php:35\n\
    Stack trace:\n#0 /tmp/tmpcp36yv2e.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpcp36yv2e.php\
    \ on line 35\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a string and returns True if the\
    \ string\n// length is a prime number or False otherwise\n// Examples\n// prime_length('Hello')\
    \ == True\n// prime_length('abcdcba') == True\n// prime_length('kittens') == True\n\
    // prime_length('orange') == False\nfunction prime_length($string) {\n    $length\
    \ = strlen($string);\n    if ($length == 1) {\n        return false;\n    }\n\
    \    for ($i = 2; $i < $length; $i++) {\n        if ($length % $i == 0) {\n  \
    \          return false;\n        }\n    }\n    return true;\n}\nfunction candidate(...$args)\
    \ {\n    return prime_length(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"Hello\") !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"abcdcba\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"kittens\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"orange\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"wow\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"world\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"MadaM\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Wow\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"HI\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"go\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"gogo\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaaaaaaaaaaaaa\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Madam\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"M\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"0\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpf879cwgt.php:34\n\
    Stack trace:\n#0 /tmp/tmpf879cwgt.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpf879cwgt.php\
    \ on line 34\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a string and returns True if the\
    \ string\n// length is a prime number or False otherwise\n// Examples\n// prime_length('Hello')\
    \ == True\n// prime_length('abcdcba') == True\n// prime_length('kittens') == True\n\
    // prime_length('orange') == False\nfunction prime_length($string) {\n    $length\
    \ = strlen($string);\n    if ($length == 1) {\n        return false;\n    }\n\
    \    for ($i = 2; $i < $length; $i++) {\n        if ($length % $i == 0) {\n  \
    \          return false;\n        }\n    }\n    return true;\n}\n\nfunction candidate(...$args)\
    \ {\n    return prime_length(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"Hello\") !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"abcdcba\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"kittens\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"orange\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"wow\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"world\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"MadaM\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Wow\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"HI\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"go\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"gogo\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaaaaaaaaaaaaa\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Madam\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"M\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"0\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpek45b883.php:35\n\
    Stack trace:\n#0 /tmp/tmpek45b883.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpek45b883.php\
    \ on line 35\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a string and returns True if the\
    \ string\n// length is a prime number or False otherwise\n// Examples\n// prime_length('Hello')\
    \ == True\n// prime_length('abcdcba') == True\n// prime_length('kittens') == True\n\
    // prime_length('orange') == False\nfunction prime_length($string) {\n    $length\
    \ = strlen($string);\n    if ($length == 1) {\n        return False;\n    }\n\
    \    for ($i = 2; $i < $length; $i++) {\n        if ($length % $i == 0) {\n  \
    \          return False;\n        }\n    }\n    return True;\n}\n\nfunction candidate(...$args)\
    \ {\n    return prime_length(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"Hello\") !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"abcdcba\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"kittens\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"orange\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"wow\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"world\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"MadaM\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Wow\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"HI\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"go\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"gogo\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaaaaaaaaaaaaa\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Madam\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"M\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"0\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpjs2964eo.php:35\n\
    Stack trace:\n#0 /tmp/tmpjs2964eo.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpjs2964eo.php\
    \ on line 35\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a string and returns True if the\
    \ string\n// length is a prime number or False otherwise\n// Examples\n// prime_length('Hello')\
    \ == True\n// prime_length('abcdcba') == True\n// prime_length('kittens') == True\n\
    // prime_length('orange') == False\nfunction prime_length($string) {\n    $length\
    \ = strlen($string);\n    if ($length == 1) {\n        return false;\n    }\n\
    \    for ($i = 2; $i < $length; $i++) {\n        if ($length % $i == 0) {\n  \
    \          return false;\n        }\n    }\n    return true;\n}\n\nfunction candidate(...$args)\
    \ {\n    return prime_length(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"Hello\") !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"abcdcba\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"kittens\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"orange\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"wow\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"world\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"MadaM\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Wow\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"HI\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"go\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"gogo\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaaaaaaaaaaaaa\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Madam\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"M\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"0\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp_v09q1jx.php:35\n\
    Stack trace:\n#0 /tmp/tmp_v09q1jx.php(45): test()\n#1 {main}\n  thrown in /tmp/tmp_v09q1jx.php\
    \ on line 35\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a string and returns True if the\
    \ string\n// length is a prime number or False otherwise\n// Examples\n// prime_length('Hello')\
    \ == True\n// prime_length('abcdcba') == True\n// prime_length('kittens') == True\n\
    // prime_length('orange') == False\nfunction prime_length($string) {\n    $length\
    \ = strlen($string);\n    if ($length == 1) {\n        return False;\n    }\n\
    \    for ($i = 2; $i < $length; $i++) {\n        if ($length % $i == 0) {\n  \
    \          return False;\n        }\n    }\n    return True;\n}\n\nfunction candidate(...$args)\
    \ {\n    return prime_length(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"Hello\") !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"abcdcba\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"kittens\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"orange\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"wow\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"world\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"MadaM\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Wow\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"HI\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"go\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"gogo\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaaaaaaaaaaaaa\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Madam\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"M\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"0\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp_ow8jwau.php:35\n\
    Stack trace:\n#0 /tmp/tmp_ow8jwau.php(45): test()\n#1 {main}\n  thrown in /tmp/tmp_ow8jwau.php\
    \ on line 35\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a string and returns True if the\
    \ string\n// length is a prime number or False otherwise\n// Examples\n// prime_length('Hello')\
    \ == True\n// prime_length('abcdcba') == True\n// prime_length('kittens') == True\n\
    // prime_length('orange') == False\nfunction prime_length($string) {\n    $length\
    \ = strlen($string);\n    if ($length == 1) {\n        return False;\n    }\n\
    \    for ($i = 2; $i < $length; $i++) {\n        if ($length % $i == 0) {\n  \
    \          return False;\n        }\n    }\n    return True;\n}\n\nfunction candidate(...$args)\
    \ {\n    return prime_length(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"Hello\") !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"abcdcba\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"kittens\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"orange\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"wow\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"world\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"MadaM\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Wow\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"HI\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"go\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"gogo\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaaaaaaaaaaaaa\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Madam\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"M\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"0\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp45htibsu.php:35\n\
    Stack trace:\n#0 /tmp/tmp45htibsu.php(45): test()\n#1 {main}\n  thrown in /tmp/tmp45htibsu.php\
    \ on line 35\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a string and returns True if the\
    \ string\n// length is a prime number or False otherwise\n// Examples\n// prime_length('Hello')\
    \ == True\n// prime_length('abcdcba') == True\n// prime_length('kittens') == True\n\
    // prime_length('orange') == False\nfunction prime_length($string) {\n    $length\
    \ = strlen($string);\n    if ($length == 1) {\n        return false;\n    }\n\
    \    for ($i = 2; $i < $length; $i++) {\n        if ($length % $i == 0) {\n  \
    \          return false;\n        }\n    }\n    return true;\n}\n\nfunction candidate(...$args)\
    \ {\n    return prime_length(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"Hello\") !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"abcdcba\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"kittens\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"orange\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"wow\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"world\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"MadaM\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Wow\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"HI\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"go\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"gogo\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaaaaaaaaaaaaa\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Madam\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"M\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"0\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpfms0sdr2.php:35\n\
    Stack trace:\n#0 /tmp/tmpfms0sdr2.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpfms0sdr2.php\
    \ on line 35\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a string and returns True if the\
    \ string\n// length is a prime number or False otherwise\n// Examples\n// prime_length('Hello')\
    \ == True\n// prime_length('abcdcba') == True\n// prime_length('kittens') == True\n\
    // prime_length('orange') == False\nfunction prime_length($string) {\n  $length\
    \ = strlen($string);\n  if ($length == 1) {\n    return false;\n  }\n  for ($i\
    \ = 2; $i < $length; $i++) {\n    if ($length % $i == 0) {\n      return false;\n\
    \    }\n  }\n  return true;\n}\n\nfunction candidate(...$args) {\n    return prime_length(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello\") !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"abcdcba\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"kittens\") !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"orange\") !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"wow\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"world\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"MadaM\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Wow\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    HI\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    go\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    gogo\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aaaaaaaaaaaaaaa\") !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"Madam\") !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"M\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"0\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp0fuy6i0d.php:35\n\
    Stack trace:\n#0 /tmp/tmp0fuy6i0d.php(45): test()\n#1 {main}\n  thrown in /tmp/tmp0fuy6i0d.php\
    \ on line 35\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a string and returns True if the\
    \ string\n// length is a prime number or False otherwise\n// Examples\n// prime_length('Hello')\
    \ == True\n// prime_length('abcdcba') == True\n// prime_length('kittens') == True\n\
    // prime_length('orange') == False\nfunction prime_length($string) {\n    $length\
    \ = strlen($string);\n    if ($length == 1) {\n        return false;\n    }\n\
    \    for ($i = 2; $i < $length; $i++) {\n        if ($length % $i == 0) {\n  \
    \          return false;\n        }\n    }\n    return true;\n}\n\nfunction candidate(...$args)\
    \ {\n    return prime_length(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"Hello\") !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"abcdcba\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"kittens\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"orange\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"wow\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"world\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"MadaM\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Wow\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"HI\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"go\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"gogo\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaaaaaaaaaaaaa\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Madam\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"M\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"0\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp_ilz1in3.php:35\n\
    Stack trace:\n#0 /tmp/tmp_ilz1in3.php(45): test()\n#1 {main}\n  thrown in /tmp/tmp_ilz1in3.php\
    \ on line 35\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a string and returns True if the\
    \ string\n// length is a prime number or False otherwise\n// Examples\n// prime_length('Hello')\
    \ == True\n// prime_length('abcdcba') == True\n// prime_length('kittens') == True\n\
    // prime_length('orange') == False\nfunction prime_length($string) {\n    $length\
    \ = strlen($string);\n    if ($length == 1) {\n        return false;\n    }\n\
    \    for ($i = 2; $i < $length; $i++) {\n        if ($length % $i == 0) {\n  \
    \          return false;\n        }\n    }\n    return true;\n}\n\nfunction candidate(...$args)\
    \ {\n    return prime_length(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"Hello\") !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"abcdcba\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"kittens\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"orange\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"wow\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"world\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"MadaM\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Wow\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"HI\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"go\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"gogo\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaaaaaaaaaaaaa\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Madam\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"M\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"0\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpe6q0lcu1.php:35\n\
    Stack trace:\n#0 /tmp/tmpe6q0lcu1.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpe6q0lcu1.php\
    \ on line 35\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a string and returns True if the\
    \ string\n// length is a prime number or False otherwise\n// Examples\n// prime_length('Hello')\
    \ == True\n// prime_length('abcdcba') == True\n// prime_length('kittens') == True\n\
    // prime_length('orange') == False\nfunction prime_length($string) {\n  $length\
    \ = strlen($string);\n  if ($length == 2) {\n    return true;\n  }\n  for ($i\
    \ = 2; $i < $length; $i++) {\n    if ($length % $i == 0) {\n      return false;\n\
    \    }\n  }\n  return true;\n}\n\necho prime_length('Hello') . \"\\n\";\necho\
    \ prime_length('abcdcba') . \"\\n\";\necho prime_length('kittens') . \"\\n\";\n\
    echo prime_length('orange') . \"\\n\";\n\nfunction candidate(...$args) {\n   \
    \ return prime_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcdcba\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    kittens\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    orange\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    wow\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    world\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    MadaM\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Wow\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    HI\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    go\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    gogo\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aaaaaaaaaaaaaaa\") !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"Madam\") !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"M\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"0\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "1\n1\n1\n\n"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp98lktwdv.php:40\n\
    Stack trace:\n#0 /tmp/tmp98lktwdv.php(50): test()\n#1 {main}\n  thrown in /tmp/tmp98lktwdv.php\
    \ on line 40\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a string and returns True if the\
    \ string\n// length is a prime number or False otherwise\n// Examples\n// prime_length('Hello')\
    \ == True\n// prime_length('abcdcba') == True\n// prime_length('kittens') == True\n\
    // prime_length('orange') == False\nfunction prime_length($string) {\n    $length\
    \ = strlen($string);\n    if ($length == 1) {\n        return false;\n    }\n\
    \    for ($i = 2; $i < $length; $i++) {\n        if ($length % $i == 0) {\n  \
    \          return false;\n        }\n    }\n    return true;\n}\n\nfunction candidate(...$args)\
    \ {\n    return prime_length(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"Hello\") !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"abcdcba\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"kittens\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"orange\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"wow\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"world\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"MadaM\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Wow\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"HI\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"go\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"gogo\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaaaaaaaaaaaaa\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Madam\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"M\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"0\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpzfk2d217.php:35\n\
    Stack trace:\n#0 /tmp/tmpzfk2d217.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpzfk2d217.php\
    \ on line 35\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a string and returns True if the\
    \ string\n// length is a prime number or False otherwise\n// Examples\n// prime_length('Hello')\
    \ == True\n// prime_length('abcdcba') == True\n// prime_length('kittens') == True\n\
    // prime_length('orange') == False\nfunction prime_length($string) {\n    $length\
    \ = strlen($string);\n    if ($length == 1) {\n        return false;\n    }\n\
    \    for ($i = 2; $i < $length; $i++) {\n        if ($length % $i == 0) {\n  \
    \          return false;\n        }\n    }\n    return true;\n}\n\nfunction candidate(...$args)\
    \ {\n    return prime_length(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"Hello\") !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"abcdcba\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"kittens\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"orange\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"wow\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"world\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"MadaM\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Wow\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"HI\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"go\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"gogo\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaaaaaaaaaaaaa\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Madam\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"M\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"0\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp5lu3dp0k.php:35\n\
    Stack trace:\n#0 /tmp/tmp5lu3dp0k.php(45): test()\n#1 {main}\n  thrown in /tmp/tmp5lu3dp0k.php\
    \ on line 35\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a string and returns True if the\
    \ string\n// length is a prime number or False otherwise\n// Examples\n// prime_length('Hello')\
    \ == True\n// prime_length('abcdcba') == True\n// prime_length('kittens') == True\n\
    // prime_length('orange') == False\nfunction prime_length($string) {\n  $length\
    \ = strlen($string);\n  if ($length == 1) {\n    return false;\n  }\n  for ($i\
    \ = 2; $i < $length; $i++) {\n    if ($length % $i == 0) {\n      return false;\n\
    \    }\n  }\n  return true;\n}\n\necho prime_length('Hello') . PHP_EOL;\necho\
    \ prime_length('abcdcba') . PHP_EOL;\necho prime_length('kittens') . PHP_EOL;\n\
    echo prime_length('orange') . PHP_EOL;\nfunction candidate(...$args) {\n    return\
    \ prime_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcdcba\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    kittens\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    orange\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    wow\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    world\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    MadaM\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Wow\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    HI\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    go\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    gogo\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aaaaaaaaaaaaaaa\") !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"Madam\") !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"M\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"0\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "1\n1\n1\n\n"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp4qov1r57.php:39\n\
    Stack trace:\n#0 /tmp/tmp4qov1r57.php(49): test()\n#1 {main}\n  thrown in /tmp/tmp4qov1r57.php\
    \ on line 39\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a string and returns True if the\
    \ string\n// length is a prime number or False otherwise\n// Examples\n// prime_length('Hello')\
    \ == True\n// prime_length('abcdcba') == True\n// prime_length('kittens') == True\n\
    // prime_length('orange') == False\nfunction prime_length($string) {\n    $length\
    \ = strlen($string);\n    if ($length < 2) {\n        return false;\n    }\n \
    \   for ($i = 2; $i < $length; $i++) {\n        if ($length % $i == 0) {\n   \
    \         return false;\n        }\n    }\n    return true;\n}\n\nfunction candidate(...$args)\
    \ {\n    return prime_length(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"Hello\") !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"abcdcba\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"kittens\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"orange\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"wow\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"world\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"MadaM\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Wow\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"HI\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"go\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"gogo\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaaaaaaaaaaaaa\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Madam\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"M\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"0\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that takes a string and returns True if the\
    \ string\n// length is a prime number or False otherwise\n// Examples\n// prime_length('Hello')\
    \ == True\n// prime_length('abcdcba') == True\n// prime_length('kittens') == True\n\
    // prime_length('orange') == False\nfunction prime_length($string) {\n    $length\
    \ = strlen($string);\n    if ($length == 1) {\n        return False;\n    }\n\
    \    for ($i = 2; $i < $length; $i++) {\n        if ($length % $i == 0) {\n  \
    \          return False;\n        }\n    }\n    return True;\n}\n\nfunction candidate(...$args)\
    \ {\n    return prime_length(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"Hello\") !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"abcdcba\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"kittens\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"orange\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"wow\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"world\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"MadaM\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Wow\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"HI\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"go\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"gogo\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaaaaaaaaaaaaa\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Madam\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"M\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"0\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpw54goq_q.php:35\n\
    Stack trace:\n#0 /tmp/tmpw54goq_q.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpw54goq_q.php\
    \ on line 35\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a string and returns True if the\
    \ string\n// length is a prime number or False otherwise\n// Examples\n// prime_length('Hello')\
    \ == True\n// prime_length('abcdcba') == True\n// prime_length('kittens') == True\n\
    // prime_length('orange') == False\nfunction prime_length($string) {\n  $length\
    \ = strlen($string);\n  if ($length == 1) {\n    return false;\n  }\n  for ($i\
    \ = 2; $i < $length; $i++) {\n    if ($length % $i == 0) {\n      return false;\n\
    \    }\n  }\n  return true;\n}\n\nfunction candidate(...$args) {\n    return prime_length(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello\") !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"abcdcba\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"kittens\") !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"orange\") !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"wow\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"world\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"MadaM\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Wow\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    HI\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    go\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    gogo\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aaaaaaaaaaaaaaa\") !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"Madam\") !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"M\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"0\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpc0g9ms1j.php:35\n\
    Stack trace:\n#0 /tmp/tmpc0g9ms1j.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpc0g9ms1j.php\
    \ on line 35\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a string and returns True if the\
    \ string\n// length is a prime number or False otherwise\n// Examples\n// prime_length('Hello')\
    \ == True\n// prime_length('abcdcba') == True\n// prime_length('kittens') == True\n\
    // prime_length('orange') == False\nfunction prime_length($string) {\n\t$string_length\
    \ = strlen($string);\n\tif ($string_length == 1) {\n\t\treturn false;\n\t}\n\t\
    for ($i = 2; $i < $string_length; $i++) {\n\t\tif ($string_length % $i == 0) {\n\
    \t\t\treturn false;\n\t\t}\n\t}\n\treturn true;\n}\n\nfunction candidate(...$args)\
    \ {\n    return prime_length(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"Hello\") !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"abcdcba\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"kittens\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"orange\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"wow\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"world\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"MadaM\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Wow\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"HI\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"go\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"gogo\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaaaaaaaaaaaaa\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Madam\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"M\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"0\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp21c876s8.php:35\n\
    Stack trace:\n#0 /tmp/tmp21c876s8.php(45): test()\n#1 {main}\n  thrown in /tmp/tmp21c876s8.php\
    \ on line 35\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a string and returns True if the\
    \ string\n// length is a prime number or False otherwise\n// Examples\n// prime_length('Hello')\
    \ == True\n// prime_length('abcdcba') == True\n// prime_length('kittens') == True\n\
    // prime_length('orange') == False\nfunction prime_length($string) {\n  $length\
    \ = strlen($string);\n  if ($length == 1) {\n    return False;\n  }\n  for ($i\
    \ = 2; $i < $length; $i++) {\n    if ($length % $i == 0) {\n      return False;\n\
    \    }\n  }\n  return True;\n}\n\nfunction candidate(...$args) {\n    return prime_length(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello\") !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"abcdcba\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"kittens\") !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"orange\") !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"wow\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"world\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"MadaM\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Wow\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    HI\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    go\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    gogo\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aaaaaaaaaaaaaaa\") !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"Madam\") !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"M\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"0\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmph295djqb.php:35\n\
    Stack trace:\n#0 /tmp/tmph295djqb.php(45): test()\n#1 {main}\n  thrown in /tmp/tmph295djqb.php\
    \ on line 35\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a string and returns True if the\
    \ string\n// length is a prime number or False otherwise\n// Examples\n// prime_length('Hello')\
    \ == True\n// prime_length('abcdcba') == True\n// prime_length('kittens') == True\n\
    // prime_length('orange') == False\nfunction prime_length($string) {\n    $length\
    \ = strlen($string);\n    if ($length == 2) {\n        return True;\n    }\n \
    \   for ($i = 2; $i < $length; $i++) {\n        if ($length % $i == 0) {\n   \
    \         return False;\n        }\n    }\n    return True;\n}\n\nfunction candidate(...$args)\
    \ {\n    return prime_length(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"Hello\") !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"abcdcba\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"kittens\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"orange\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"wow\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"world\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"MadaM\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Wow\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"HI\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"go\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"gogo\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaaaaaaaaaaaaa\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Madam\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"M\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"0\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpjt7s31qg.php:35\n\
    Stack trace:\n#0 /tmp/tmpjt7s31qg.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpjt7s31qg.php\
    \ on line 35\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a string and returns True if the\
    \ string\n// length is a prime number or False otherwise\n// Examples\n// prime_length('Hello')\
    \ == True\n// prime_length('abcdcba') == True\n// prime_length('kittens') == True\n\
    // prime_length('orange') == False\nfunction prime_length($string) {\n    $length\
    \ = strlen($string);\n    if ($length == 1) {\n        return false;\n    }\n\
    \    for ($i = 2; $i < $length; $i++) {\n        if ($length % $i == 0) {\n  \
    \          return false;\n        }\n    }\n    return true;\n}\n\nfunction candidate(...$args)\
    \ {\n    return prime_length(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"Hello\") !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"abcdcba\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"kittens\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"orange\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"wow\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"world\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"MadaM\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Wow\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"HI\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"go\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"gogo\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaaaaaaaaaaaaa\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Madam\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"M\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"0\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmponvapkrh.php:35\n\
    Stack trace:\n#0 /tmp/tmponvapkrh.php(45): test()\n#1 {main}\n  thrown in /tmp/tmponvapkrh.php\
    \ on line 35\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a string and returns True if the\
    \ string\n// length is a prime number or False otherwise\n// Examples\n// prime_length('Hello')\
    \ == True\n// prime_length('abcdcba') == True\n// prime_length('kittens') == True\n\
    // prime_length('orange') == False\nfunction prime_length($string) {\n    $length\
    \ = strlen($string);\n    if ($length == 1) {\n        return true;\n    }\n \
    \   for ($i = 2; $i < $length; $i++) {\n        if ($length % $i == 0) {\n   \
    \         return false;\n        }\n    }\n    return true;\n}\n\nfunction candidate(...$args)\
    \ {\n    return prime_length(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"Hello\") !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"abcdcba\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"kittens\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"orange\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"wow\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"world\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"MadaM\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Wow\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"HI\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"go\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"gogo\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaaaaaaaaaaaaa\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Madam\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"M\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"0\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpgw_wuvf6.php:35\n\
    Stack trace:\n#0 /tmp/tmpgw_wuvf6.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpgw_wuvf6.php\
    \ on line 35\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a string and returns True if the\
    \ string\n// length is a prime number or False otherwise\n// Examples\n// prime_length('Hello')\
    \ == True\n// prime_length('abcdcba') == True\n// prime_length('kittens') == True\n\
    // prime_length('orange') == False\nfunction prime_length($string) {\n    $length\
    \ = strlen($string);\n    if ($length == 1) {\n        return false;\n    }\n\
    \    for ($i = 2; $i < $length; $i++) {\n        if ($length % $i == 0) {\n  \
    \          return false;\n        }\n    }\n    return true;\n}\necho prime_length('Hello')\
    \ . PHP_EOL;\necho prime_length('abcdcba') . PHP_EOL;\necho prime_length('kittens')\
    \ . PHP_EOL;\necho prime_length('orange') . PHP_EOL;\nfunction candidate(...$args)\
    \ {\n    return prime_length(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"Hello\") !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"abcdcba\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"kittens\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"orange\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"wow\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"world\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"MadaM\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Wow\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"HI\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"go\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"gogo\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaaaaaaaaaaaaa\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Madam\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"M\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"0\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "1\n1\n1\n\n"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpb8b1_dmf.php:38\n\
    Stack trace:\n#0 /tmp/tmpb8b1_dmf.php(48): test()\n#1 {main}\n  thrown in /tmp/tmpb8b1_dmf.php\
    \ on line 38\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a string and returns True if the\
    \ string\n// length is a prime number or False otherwise\n// Examples\n// prime_length('Hello')\
    \ == True\n// prime_length('abcdcba') == True\n// prime_length('kittens') == True\n\
    // prime_length('orange') == False\nfunction prime_length($string) {\n  $length\
    \ = strlen($string);\n  if ($length == 2) {\n    return True;\n  }\n  for ($i\
    \ = 2; $i < $length; $i++) {\n    if ($length % $i == 0) {\n      return False;\n\
    \    }\n  }\n  return True;\n}\n\nfunction candidate(...$args) {\n    return prime_length(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello\") !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"abcdcba\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"kittens\") !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"orange\") !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"wow\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"world\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"MadaM\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Wow\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    HI\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    go\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    gogo\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aaaaaaaaaaaaaaa\") !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"Madam\") !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"M\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"0\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpkqz3no35.php:35\n\
    Stack trace:\n#0 /tmp/tmpkqz3no35.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpkqz3no35.php\
    \ on line 35\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a string and returns True if the\
    \ string\n// length is a prime number or False otherwise\n// Examples\n// prime_length('Hello')\
    \ == True\n// prime_length('abcdcba') == True\n// prime_length('kittens') == True\n\
    // prime_length('orange') == False\nfunction prime_length($string) {\n    $length\
    \ = strlen($string);\n    if ($length == 2) {\n        return true;\n    }\n \
    \   for ($i = 2; $i < $length; $i++) {\n        if ($length % $i == 0) {\n   \
    \         return false;\n        }\n    }\n    return true;\n}\necho prime_length('Hello')\
    \ . \"\\n\";\necho prime_length('abcdcba') . \"\\n\";\necho prime_length('kittens')\
    \ . \"\\n\";\necho prime_length('orange') . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return prime_length(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"Hello\") !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"abcdcba\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"kittens\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"orange\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"wow\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"world\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"MadaM\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Wow\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"HI\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"go\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"gogo\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaaaaaaaaaaaaa\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Madam\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"M\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"0\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "1\n1\n1\n\n"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp06v9qnv_.php:38\n\
    Stack trace:\n#0 /tmp/tmp06v9qnv_.php(48): test()\n#1 {main}\n  thrown in /tmp/tmp06v9qnv_.php\
    \ on line 38\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a string and returns True if the\
    \ string\n// length is a prime number or False otherwise\n// Examples\n// prime_length('Hello')\
    \ == True\n// prime_length('abcdcba') == True\n// prime_length('kittens') == True\n\
    // prime_length('orange') == False\nfunction prime_length($string) {\n    $length\
    \ = strlen($string);\n    if ($length == 1) {\n        return false;\n    }\n\
    \    for ($i = 2; $i < $length; $i++) {\n        if ($length % $i == 0) {\n  \
    \          return false;\n        }\n    }\n    return true;\n}\n\nfunction candidate(...$args)\
    \ {\n    return prime_length(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"Hello\") !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"abcdcba\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"kittens\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"orange\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"wow\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"world\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"MadaM\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Wow\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"HI\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"go\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"gogo\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaaaaaaaaaaaaa\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Madam\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"M\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"0\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp_utzpr0t.php:35\n\
    Stack trace:\n#0 /tmp/tmp_utzpr0t.php(45): test()\n#1 {main}\n  thrown in /tmp/tmp_utzpr0t.php\
    \ on line 35\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a string and returns True if the\
    \ string\n// length is a prime number or False otherwise\n// Examples\n// prime_length('Hello')\
    \ == True\n// prime_length('abcdcba') == True\n// prime_length('kittens') == True\n\
    // prime_length('orange') == False\nfunction prime_length($string) {\n    $length\
    \ = strlen($string);\n    if ($length == 1) {\n        return false;\n    }\n\
    \    for ($i = 2; $i < $length; $i++) {\n        if ($length % $i == 0) {\n  \
    \          return false;\n        }\n    }\n    return true;\n}\n\nfunction candidate(...$args)\
    \ {\n    return prime_length(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"Hello\") !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"abcdcba\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"kittens\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"orange\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"wow\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"world\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"MadaM\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Wow\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"HI\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"go\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"gogo\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaaaaaaaaaaaaa\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Madam\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"M\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"0\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpncs7njup.php:35\n\
    Stack trace:\n#0 /tmp/tmpncs7njup.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpncs7njup.php\
    \ on line 35\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a string and returns True if the\
    \ string\n// length is a prime number or False otherwise\n// Examples\n// prime_length('Hello')\
    \ == True\n// prime_length('abcdcba') == True\n// prime_length('kittens') == True\n\
    // prime_length('orange') == False\nfunction prime_length($string) {\n    $length\
    \ = strlen($string);\n    if ($length == 1 || $length == 2) {\n        return\
    \ True;\n    }\n    for ($i = 2; $i < $length; $i++) {\n        if ($length %\
    \ $i == 0) {\n            return False;\n        }\n    }\n    return True;\n\
    }\n\nfunction candidate(...$args) {\n    return prime_length(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"Hello\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"abcdcba\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"kittens\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"orange\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"wow\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"world\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"MadaM\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Wow\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"HI\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"go\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"gogo\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aaaaaaaaaaaaaaa\") !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Madam\") !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"M\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"0\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp24p92246.php:35\n\
    Stack trace:\n#0 /tmp/tmp24p92246.php(45): test()\n#1 {main}\n  thrown in /tmp/tmp24p92246.php\
    \ on line 35\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a string and returns True if the\
    \ string\n// length is a prime number or False otherwise\n// Examples\n// prime_length('Hello')\
    \ == True\n// prime_length('abcdcba') == True\n// prime_length('kittens') == True\n\
    // prime_length('orange') == False\nfunction prime_length($string) {\n    $length\
    \ = strlen($string);\n    $isPrime = true;\n    for ($i = 2; $i < $length; $i++)\
    \ {\n        if ($length % $i == 0) {\n            $isPrime = false;\n       \
    \     break;\n        }\n    }\n    return $isPrime;\n}\necho prime_length('Hello')\
    \ . \"\\n\";\necho prime_length('abcdcba') . \"\\n\";\necho prime_length('kittens')\
    \ . \"\\n\";\necho prime_length('orange') . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return prime_length(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"Hello\") !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"abcdcba\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"kittens\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"orange\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"wow\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"world\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"MadaM\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Wow\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"HI\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"go\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"gogo\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaaaaaaaaaaaaa\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Madam\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"M\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"0\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "1\n1\n1\n\n"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpk7frgob9.php:37\n\
    Stack trace:\n#0 /tmp/tmpk7frgob9.php(47): test()\n#1 {main}\n  thrown in /tmp/tmpk7frgob9.php\
    \ on line 37\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a string and returns True if the\
    \ string\n// length is a prime number or False otherwise\n// Examples\n// prime_length('Hello')\
    \ == True\n// prime_length('abcdcba') == True\n// prime_length('kittens') == True\n\
    // prime_length('orange') == False\nfunction prime_length($string) {\n    $length\
    \ = strlen($string);\n    if ($length == 1) {\n        return false;\n    }\n\
    \    for ($i = 2; $i < $length; $i++) {\n        if ($length % $i == 0) {\n  \
    \          return false;\n        }\n    }\n    return true;\n}\n\nfunction candidate(...$args)\
    \ {\n    return prime_length(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"Hello\") !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"abcdcba\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"kittens\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"orange\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"wow\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"world\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"MadaM\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Wow\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"HI\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"go\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"gogo\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaaaaaaaaaaaaa\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Madam\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"M\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"0\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmplyrz246s.php:35\n\
    Stack trace:\n#0 /tmp/tmplyrz246s.php(45): test()\n#1 {main}\n  thrown in /tmp/tmplyrz246s.php\
    \ on line 35\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a string and returns True if the\
    \ string\n// length is a prime number or False otherwise\n// Examples\n// prime_length('Hello')\
    \ == True\n// prime_length('abcdcba') == True\n// prime_length('kittens') == True\n\
    // prime_length('orange') == False\nfunction prime_length($string) {\n    $length\
    \ = strlen($string);\n    if ($length == 1) {\n        return false;\n    }\n\
    \    for ($i = 2; $i < $length; $i++) {\n        if ($length % $i == 0) {\n  \
    \          return false;\n        }\n    }\n    return true;\n}\n\necho prime_length('Hello')\
    \ . PHP_EOL;\necho prime_length('abcdcba') . PHP_EOL;\necho prime_length('kittens')\
    \ . PHP_EOL;\necho prime_length('orange') . PHP_EOL;\nfunction candidate(...$args)\
    \ {\n    return prime_length(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"Hello\") !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"abcdcba\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"kittens\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"orange\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"wow\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"world\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"MadaM\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Wow\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"HI\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"go\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"gogo\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaaaaaaaaaaaaa\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Madam\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"M\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"0\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "1\n1\n1\n\n"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpdpcy36g4.php:39\n\
    Stack trace:\n#0 /tmp/tmpdpcy36g4.php(49): test()\n#1 {main}\n  thrown in /tmp/tmpdpcy36g4.php\
    \ on line 39\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a string and returns True if the\
    \ string\n// length is a prime number or False otherwise\n// Examples\n// prime_length('Hello')\
    \ == True\n// prime_length('abcdcba') == True\n// prime_length('kittens') == True\n\
    // prime_length('orange') == False\nfunction prime_length($string) {\n    $stringLength\
    \ = strlen($string);\n    if ($stringLength == 1) {\n        return false;\n \
    \   }\n    for ($i = 2; $i < $stringLength; $i++) {\n        if ($stringLength\
    \ % $i == 0) {\n            return false;\n        }\n    }\n    return true;\n\
    }\n\nfunction candidate(...$args) {\n    return prime_length(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"Hello\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"abcdcba\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"kittens\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"orange\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"wow\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"world\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"MadaM\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Wow\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"HI\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"go\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"gogo\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aaaaaaaaaaaaaaa\") !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Madam\") !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"M\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"0\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpg91j5sei.php:35\n\
    Stack trace:\n#0 /tmp/tmpg91j5sei.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpg91j5sei.php\
    \ on line 35\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a string and returns True if the\
    \ string\n// length is a prime number or False otherwise\n// Examples\n// prime_length('Hello')\
    \ == True\n// prime_length('abcdcba') == True\n// prime_length('kittens') == True\n\
    // prime_length('orange') == False\nfunction prime_length($string) {\n    $length\
    \ = strlen($string);\n    if($length == 1) {\n        return true;\n    }\n  \
    \  for($i = 2; $i < $length; $i++) {\n        if($length % $i == 0) {\n      \
    \      return false;\n        }\n    }\n    return true;\n}\n\nfunction candidate(...$args)\
    \ {\n    return prime_length(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"Hello\") !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"abcdcba\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"kittens\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"orange\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"wow\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"world\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"MadaM\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Wow\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"HI\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"go\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"gogo\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaaaaaaaaaaaaa\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Madam\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"M\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"0\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpauny95h7.php:35\n\
    Stack trace:\n#0 /tmp/tmpauny95h7.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpauny95h7.php\
    \ on line 35\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a string and returns True if the\
    \ string\n// length is a prime number or False otherwise\n// Examples\n// prime_length('Hello')\
    \ == True\n// prime_length('abcdcba') == True\n// prime_length('kittens') == True\n\
    // prime_length('orange') == False\nfunction prime_length($string) {\n    $length\
    \ = strlen($string);\n    if ($length == 2) {\n        return True;\n    }\n \
    \   for ($i = 2; $i < $length; $i++) {\n        if ($length % $i == 0) {\n   \
    \         return False;\n        }\n    }\n    return True;\n}\necho prime_length('Hello')\
    \ . \"\\n\";\necho prime_length('abcdcba') . \"\\n\";\necho prime_length('kittens')\
    \ . \"\\n\";\necho prime_length('orange') . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return prime_length(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"Hello\") !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"abcdcba\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"kittens\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"orange\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"wow\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"world\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"MadaM\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Wow\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"HI\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"go\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"gogo\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaaaaaaaaaaaaa\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Madam\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"M\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"0\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "1\n1\n1\n\n"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpkftqibeg.php:38\n\
    Stack trace:\n#0 /tmp/tmpkftqibeg.php(48): test()\n#1 {main}\n  thrown in /tmp/tmpkftqibeg.php\
    \ on line 38\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a string and returns True if the\
    \ string\n// length is a prime number or False otherwise\n// Examples\n// prime_length('Hello')\
    \ == True\n// prime_length('abcdcba') == True\n// prime_length('kittens') == True\n\
    // prime_length('orange') == False\nfunction prime_length($string) {\n    $length\
    \ = strlen($string);\n    if ($length == 1 || $length == 2) {\n        return\
    \ True;\n    }\n    for ($i = 2; $i < $length; $i++) {\n        if ($length %\
    \ $i == 0) {\n            return False;\n        }\n    }\n    return True;\n\
    }\n\nfunction candidate(...$args) {\n    return prime_length(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"Hello\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"abcdcba\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"kittens\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"orange\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"wow\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"world\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"MadaM\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Wow\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"HI\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"go\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"gogo\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aaaaaaaaaaaaaaa\") !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Madam\") !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"M\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"0\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpdeka0e9l.php:35\n\
    Stack trace:\n#0 /tmp/tmpdeka0e9l.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpdeka0e9l.php\
    \ on line 35\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a string and returns True if the\
    \ string\n// length is a prime number or False otherwise\n// Examples\n// prime_length('Hello')\
    \ == True\n// prime_length('abcdcba') == True\n// prime_length('kittens') == True\n\
    // prime_length('orange') == False\nfunction prime_length($string) {\n    $length\
    \ = strlen($string);\n    if ($length == 1) {\n        return False;\n    }\n\
    \    for ($i = 2; $i < $length; $i++) {\n        if ($length % $i == 0) {\n  \
    \          return False;\n        }\n    }\n    return True;\n}\n\nfunction candidate(...$args)\
    \ {\n    return prime_length(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"Hello\") !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"abcdcba\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"kittens\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"orange\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"wow\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"world\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"MadaM\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Wow\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"HI\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"go\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"gogo\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaaaaaaaaaaaaa\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Madam\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"M\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"0\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmph2xw3tok.php:35\n\
    Stack trace:\n#0 /tmp/tmph2xw3tok.php(45): test()\n#1 {main}\n  thrown in /tmp/tmph2xw3tok.php\
    \ on line 35\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a string and returns True if the\
    \ string\n// length is a prime number or False otherwise\n// Examples\n// prime_length('Hello')\
    \ == True\n// prime_length('abcdcba') == True\n// prime_length('kittens') == True\n\
    // prime_length('orange') == False\nfunction prime_length($string) {\n    $length\
    \ = strlen($string);\n    if ($length == 1) {\n        return false;\n    }\n\
    \    for ($i = 2; $i < $length; $i++) {\n        if ($length % $i == 0) {\n  \
    \          return false;\n        }\n    }\n    return true;\n}\n\nfunction candidate(...$args)\
    \ {\n    return prime_length(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"Hello\") !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"abcdcba\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"kittens\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"orange\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"wow\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"world\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"MadaM\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Wow\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"HI\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"go\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"gogo\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaaaaaaaaaaaaa\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Madam\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"M\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"0\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpfmnaxqpd.php:35\n\
    Stack trace:\n#0 /tmp/tmpfmnaxqpd.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpfmnaxqpd.php\
    \ on line 35\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a string and returns True if the\
    \ string\n// length is a prime number or False otherwise\n// Examples\n// prime_length('Hello')\
    \ == True\n// prime_length('abcdcba') == True\n// prime_length('kittens') == True\n\
    // prime_length('orange') == False\nfunction prime_length($string) {\n    $length\
    \ = strlen($string);\n    if ($length == 1) {\n        return false;\n    }\n\
    \    for ($i = 2; $i < $length; $i++) {\n        if ($length % $i == 0) {\n  \
    \          return false;\n        }\n    }\n    return true;\n}\n\nfunction candidate(...$args)\
    \ {\n    return prime_length(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"Hello\") !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"abcdcba\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"kittens\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"orange\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"wow\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"world\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"MadaM\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Wow\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"HI\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"go\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"gogo\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaaaaaaaaaaaaa\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Madam\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"M\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"0\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpojos5r0r.php:35\n\
    Stack trace:\n#0 /tmp/tmpojos5r0r.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpojos5r0r.php\
    \ on line 35\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a string and returns True if the\
    \ string\n// length is a prime number or False otherwise\n// Examples\n// prime_length('Hello')\
    \ == True\n// prime_length('abcdcba') == True\n// prime_length('kittens') == True\n\
    // prime_length('orange') == False\nfunction prime_length($string) {\n  $stringLength\
    \ = strlen($string);\n  if ($stringLength == 1) {\n    return false;\n  }\n  for\
    \ ($i = 2; $i < $stringLength; $i++) {\n    if ($stringLength % $i == 0) {\n \
    \     return false;\n    }\n  }\n  return true;\n}\n\necho prime_length('Hello')\
    \ . PHP_EOL;\necho prime_length('abcdcba') . PHP_EOL;\necho prime_length('kittens')\
    \ . PHP_EOL;\necho prime_length('orange') . PHP_EOL;\nfunction candidate(...$args)\
    \ {\n    return prime_length(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"Hello\") !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"abcdcba\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"kittens\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"orange\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"wow\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"world\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"MadaM\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Wow\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"HI\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"go\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"gogo\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaaaaaaaaaaaaa\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Madam\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"M\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"0\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "1\n1\n1\n\n"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp_e69tyd9.php:39\n\
    Stack trace:\n#0 /tmp/tmp_e69tyd9.php(49): test()\n#1 {main}\n  thrown in /tmp/tmp_e69tyd9.php\
    \ on line 39\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a string and returns True if the\
    \ string\n// length is a prime number or False otherwise\n// Examples\n// prime_length('Hello')\
    \ == True\n// prime_length('abcdcba') == True\n// prime_length('kittens') == True\n\
    // prime_length('orange') == False\nfunction prime_length($string) {\n    $length\
    \ = strlen($string);\n    if ($length == 1) {\n        return false;\n    }\n\
    \    for ($i = 2; $i < $length; $i++) {\n        if ($length % $i == 0) {\n  \
    \          return false;\n        }\n    }\n    return true;\n}\n\nfunction candidate(...$args)\
    \ {\n    return prime_length(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"Hello\") !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"abcdcba\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"kittens\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"orange\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"wow\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"world\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"MadaM\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Wow\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"HI\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"go\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"gogo\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaaaaaaaaaaaaa\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Madam\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"M\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"0\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmphe7_g1hw.php:35\n\
    Stack trace:\n#0 /tmp/tmphe7_g1hw.php(45): test()\n#1 {main}\n  thrown in /tmp/tmphe7_g1hw.php\
    \ on line 35\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a string and returns True if the\
    \ string\n// length is a prime number or False otherwise\n// Examples\n// prime_length('Hello')\
    \ == True\n// prime_length('abcdcba') == True\n// prime_length('kittens') == True\n\
    // prime_length('orange') == False\nfunction prime_length($string) {\n  $length\
    \ = strlen($string);\n  if ($length < 2) {\n    return false;\n  }\n  for ($i\
    \ = 2; $i < $length; $i++) {\n    if ($length % $i == 0) {\n      return false;\n\
    \    }\n  }\n  return true;\n}\n\necho prime_length('Hello') . \"\\n\";\necho\
    \ prime_length('abcdcba') . \"\\n\";\necho prime_length('kittens') . \"\\n\";\n\
    echo prime_length('orange') . \"\\n\";\n\nfunction candidate(...$args) {\n   \
    \ return prime_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcdcba\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    kittens\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    orange\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    wow\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    world\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    MadaM\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Wow\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    HI\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    go\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    gogo\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aaaaaaaaaaaaaaa\") !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"Madam\") !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"M\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"0\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "1\n1\n1\n\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that takes a string and returns True if the\
    \ string\n// length is a prime number or False otherwise\n// Examples\n// prime_length('Hello')\
    \ == True\n// prime_length('abcdcba') == True\n// prime_length('kittens') == True\n\
    // prime_length('orange') == False\nfunction prime_length($string) {\n  $length\
    \ = strlen($string);\n  if ($length == 1) {\n    return false;\n  }\n  for ($i\
    \ = 2; $i < $length; $i++) {\n    if ($length % $i == 0) {\n      return false;\n\
    \    }\n  }\n  return true;\n}\necho prime_length('Hello') . PHP_EOL;\necho prime_length('abcdcba')\
    \ . PHP_EOL;\necho prime_length('kittens') . PHP_EOL;\necho prime_length('orange')\
    \ . PHP_EOL;\nfunction candidate(...$args) {\n    return prime_length(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello\") !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"abcdcba\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"kittens\") !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"orange\") !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"wow\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"world\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"MadaM\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Wow\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    HI\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    go\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    gogo\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aaaaaaaaaaaaaaa\") !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"Madam\") !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"M\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"0\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "1\n1\n1\n\n"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp7sikhfkz.php:38\n\
    Stack trace:\n#0 /tmp/tmp7sikhfkz.php(48): test()\n#1 {main}\n  thrown in /tmp/tmp7sikhfkz.php\
    \ on line 38\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a string and returns True if the\
    \ string\n// length is a prime number or False otherwise\n// Examples\n// prime_length('Hello')\
    \ == True\n// prime_length('abcdcba') == True\n// prime_length('kittens') == True\n\
    // prime_length('orange') == False\nfunction prime_length($string) {\n  $str_length\
    \ = strlen($string);\n  if ($str_length == 1) {\n    return false;\n  }\n  for\
    \ ($i = 2; $i < $str_length; $i++) {\n    if ($str_length % $i == 0) {\n     \
    \ return false;\n    }\n  }\n  return true;\n}\n\nfunction candidate(...$args)\
    \ {\n    return prime_length(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"Hello\") !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"abcdcba\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"kittens\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"orange\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"wow\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"world\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"MadaM\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Wow\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"HI\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"go\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"gogo\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaaaaaaaaaaaaa\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Madam\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"M\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"0\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp22ou0reg.php:35\n\
    Stack trace:\n#0 /tmp/tmp22ou0reg.php(45): test()\n#1 {main}\n  thrown in /tmp/tmp22ou0reg.php\
    \ on line 35\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a string and returns True if the\
    \ string\n// length is a prime number or False otherwise\n// Examples\n// prime_length('Hello')\
    \ == True\n// prime_length('abcdcba') == True\n// prime_length('kittens') == True\n\
    // prime_length('orange') == False\nfunction prime_length($string) {\n    $length\
    \ = strlen($string);\n    if ($length == 2 || $length == 3) {\n        return\
    \ True;\n    }\n    for ($i = 2; $i < $length; $i++) {\n        if ($length %\
    \ $i == 0) {\n            return False;\n        }\n    }\n    return True;\n\
    }\n\nfunction candidate(...$args) {\n    return prime_length(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"Hello\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"abcdcba\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"kittens\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"orange\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"wow\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"world\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"MadaM\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Wow\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"HI\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"go\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"gogo\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aaaaaaaaaaaaaaa\") !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Madam\") !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"M\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"0\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp8qrcnyjp.php:35\n\
    Stack trace:\n#0 /tmp/tmp8qrcnyjp.php(45): test()\n#1 {main}\n  thrown in /tmp/tmp8qrcnyjp.php\
    \ on line 35\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a string and returns True if the\
    \ string\n// length is a prime number or False otherwise\n// Examples\n// prime_length('Hello')\
    \ == True\n// prime_length('abcdcba') == True\n// prime_length('kittens') == True\n\
    // prime_length('orange') == False\nfunction prime_length($string) {\n    $length\
    \ = strlen($string);\n    if ($length == 1) {\n        return false;\n    }\n\
    \    for ($i = 2; $i < $length; $i++) {\n        if ($length % $i == 0) {\n  \
    \          return false;\n        }\n    }\n    return true;\n}\n\nfunction candidate(...$args)\
    \ {\n    return prime_length(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"Hello\") !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"abcdcba\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"kittens\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"orange\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"wow\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"world\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"MadaM\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Wow\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"HI\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"go\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"gogo\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaaaaaaaaaaaaa\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Madam\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"M\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"0\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpojjotgjw.php:35\n\
    Stack trace:\n#0 /tmp/tmpojjotgjw.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpojjotgjw.php\
    \ on line 35\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a string and returns True if the\
    \ string\n// length is a prime number or False otherwise\n// Examples\n// prime_length('Hello')\
    \ == True\n// prime_length('abcdcba') == True\n// prime_length('kittens') == True\n\
    // prime_length('orange') == False\nfunction prime_length($string) {\n  $length\
    \ = strlen($string);\n  if ($length == 1) {\n    return false;\n  }\n  for ($i\
    \ = 2; $i < $length; $i++) {\n    if ($length % $i == 0) {\n      return false;\n\
    \    }\n  }\n  return true;\n}\necho prime_length('Hello') . PHP_EOL;\necho prime_length('abcdcba')\
    \ . PHP_EOL;\necho prime_length('kittens') . PHP_EOL;\necho prime_length('orange')\
    \ . PHP_EOL;\nfunction candidate(...$args) {\n    return prime_length(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello\") !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"abcdcba\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"kittens\") !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"orange\") !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"wow\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"world\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"MadaM\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Wow\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    HI\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    go\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    gogo\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aaaaaaaaaaaaaaa\") !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"Madam\") !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"M\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"0\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "1\n1\n1\n\n"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmppgjzv8rv.php:38\n\
    Stack trace:\n#0 /tmp/tmppgjzv8rv.php(48): test()\n#1 {main}\n  thrown in /tmp/tmppgjzv8rv.php\
    \ on line 38\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a string and returns True if the\
    \ string\n// length is a prime number or False otherwise\n// Examples\n// prime_length('Hello')\
    \ == True\n// prime_length('abcdcba') == True\n// prime_length('kittens') == True\n\
    // prime_length('orange') == False\nfunction prime_length($string) {\n    $length\
    \ = strlen($string);\n    if ($length == 1) {\n        return false;\n    }\n\
    \    for ($i = 2; $i < $length; $i++) {\n        if ($length % $i == 0) {\n  \
    \          return false;\n        }\n    }\n    return true;\n}\n\nfunction candidate(...$args)\
    \ {\n    return prime_length(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"Hello\") !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"abcdcba\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"kittens\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"orange\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"wow\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"world\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"MadaM\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Wow\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"HI\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"go\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"gogo\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaaaaaaaaaaaaa\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Madam\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"M\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"0\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpfui5y73j.php:35\n\
    Stack trace:\n#0 /tmp/tmpfui5y73j.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpfui5y73j.php\
    \ on line 35\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a string and returns True if the\
    \ string\n// length is a prime number or False otherwise\n// Examples\n// prime_length('Hello')\
    \ == True\n// prime_length('abcdcba') == True\n// prime_length('kittens') == True\n\
    // prime_length('orange') == False\nfunction prime_length($string) {\n    $length\
    \ = strlen($string);\n    if ($length == 1) {\n        return False;\n    }\n\
    \    for ($i = 2; $i < $length; $i++) {\n        if ($length % $i == 0) {\n  \
    \          return False;\n        }\n    }\n    return True;\n}\n\nfunction candidate(...$args)\
    \ {\n    return prime_length(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"Hello\") !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"abcdcba\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"kittens\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"orange\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"wow\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"world\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"MadaM\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Wow\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"HI\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"go\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"gogo\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaaaaaaaaaaaaa\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Madam\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"M\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"0\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpv2okghiq.php:35\n\
    Stack trace:\n#0 /tmp/tmpv2okghiq.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpv2okghiq.php\
    \ on line 35\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a string and returns True if the\
    \ string\n// length is a prime number or False otherwise\n// Examples\n// prime_length('Hello')\
    \ == True\n// prime_length('abcdcba') == True\n// prime_length('kittens') == True\n\
    // prime_length('orange') == False\nfunction prime_length($string) {\n  $length\
    \ = strlen($string);\n  if ($length == 1) {\n    return False;\n  }\n  for ($i\
    \ = 2; $i < $length; $i++) {\n    if ($length % $i == 0) {\n      return False;\n\
    \    }\n  }\n  return True;\n}\nfunction candidate(...$args) {\n    return prime_length(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello\") !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"abcdcba\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"kittens\") !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"orange\") !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"wow\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"world\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"MadaM\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Wow\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    HI\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    go\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    gogo\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aaaaaaaaaaaaaaa\") !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"Madam\") !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"M\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"0\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpwp9dwl2_.php:34\n\
    Stack trace:\n#0 /tmp/tmpwp9dwl2_.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpwp9dwl2_.php\
    \ on line 34\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a string and returns True if the\
    \ string\n// length is a prime number or False otherwise\n// Examples\n// prime_length('Hello')\
    \ == True\n// prime_length('abcdcba') == True\n// prime_length('kittens') == True\n\
    // prime_length('orange') == False\nfunction prime_length($string) {\n    $length\
    \ = strlen($string);\n    if ($length == 1) {\n        return false;\n    }\n\
    \    for ($i = 2; $i < $length; $i++) {\n        if ($length % $i == 0) {\n  \
    \          return false;\n        }\n    }\n    return true;\n}\n\nfunction candidate(...$args)\
    \ {\n    return prime_length(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"Hello\") !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"abcdcba\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"kittens\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"orange\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"wow\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"world\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"MadaM\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Wow\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"HI\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"go\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"gogo\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaaaaaaaaaaaaa\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Madam\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"M\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"0\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp2cyhrkyv.php:35\n\
    Stack trace:\n#0 /tmp/tmp2cyhrkyv.php(45): test()\n#1 {main}\n  thrown in /tmp/tmp2cyhrkyv.php\
    \ on line 35\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a string and returns True if the\
    \ string\n// length is a prime number or False otherwise\n// Examples\n// prime_length('Hello')\
    \ == True\n// prime_length('abcdcba') == True\n// prime_length('kittens') == True\n\
    // prime_length('orange') == False\nfunction prime_length($string) {\n  $length\
    \ = strlen($string);\n  if ($length == 1) {\n    return False;\n  }\n  for ($i\
    \ = 2; $i < $length; $i++) {\n    if ($length % $i == 0) {\n      return False;\n\
    \    }\n  }\n  return True;\n}\n\nfunction candidate(...$args) {\n    return prime_length(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello\") !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"abcdcba\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"kittens\") !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"orange\") !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"wow\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"world\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"MadaM\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Wow\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    HI\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    go\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    gogo\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aaaaaaaaaaaaaaa\") !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"Madam\") !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"M\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"0\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp2fhhszak.php:35\n\
    Stack trace:\n#0 /tmp/tmp2fhhszak.php(45): test()\n#1 {main}\n  thrown in /tmp/tmp2fhhszak.php\
    \ on line 35\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a string and returns True if the\
    \ string\n// length is a prime number or False otherwise\n// Examples\n// prime_length('Hello')\
    \ == True\n// prime_length('abcdcba') == True\n// prime_length('kittens') == True\n\
    // prime_length('orange') == False\nfunction prime_length($string) {\n    $length\
    \ = strlen($string);\n    if ($length == 1) {\n        return false;\n    }\n\
    \    for ($i = 2; $i < $length; $i++) {\n        if ($length % $i == 0) {\n  \
    \          return false;\n        }\n    }\n    return true;\n}\n\nfunction candidate(...$args)\
    \ {\n    return prime_length(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"Hello\") !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"abcdcba\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"kittens\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"orange\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"wow\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"world\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"MadaM\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Wow\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"HI\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"go\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"gogo\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaaaaaaaaaaaaa\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Madam\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"M\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"0\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmplbjlgugi.php:35\n\
    Stack trace:\n#0 /tmp/tmplbjlgugi.php(45): test()\n#1 {main}\n  thrown in /tmp/tmplbjlgugi.php\
    \ on line 35\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a string and returns True if the\
    \ string\n// length is a prime number or False otherwise\n// Examples\n// prime_length('Hello')\
    \ == True\n// prime_length('abcdcba') == True\n// prime_length('kittens') == True\n\
    // prime_length('orange') == False\nfunction prime_length($string) {\n    $length\
    \ = strlen($string);\n    if ($length == 1) {\n        return false;\n    }\n\
    \    for ($i = 2; $i < $length; $i++) {\n        if ($length % $i == 0) {\n  \
    \          return false;\n        }\n    }\n    return true;\n}\n\nfunction candidate(...$args)\
    \ {\n    return prime_length(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"Hello\") !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"abcdcba\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"kittens\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"orange\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"wow\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"world\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"MadaM\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Wow\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"HI\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"go\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"gogo\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaaaaaaaaaaaaa\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Madam\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"M\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"0\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpgex8jbkx.php:35\n\
    Stack trace:\n#0 /tmp/tmpgex8jbkx.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpgex8jbkx.php\
    \ on line 35\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a string and returns True if the\
    \ string\n// length is a prime number or False otherwise\n// Examples\n// prime_length('Hello')\
    \ == True\n// prime_length('abcdcba') == True\n// prime_length('kittens') == True\n\
    // prime_length('orange') == False\nfunction prime_length($string) {\n    $length\
    \ = strlen($string);\n    if ($length == 1) {\n        return false;\n    }\n\
    \    for ($i = 2; $i < $length; $i++) {\n        if ($length % $i == 0) {\n  \
    \          return false;\n        }\n    }\n    return true;\n}\n\nfunction candidate(...$args)\
    \ {\n    return prime_length(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"Hello\") !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"abcdcba\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"kittens\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"orange\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"wow\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"world\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"MadaM\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Wow\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"HI\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"go\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"gogo\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaaaaaaaaaaaaa\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Madam\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"M\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"0\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp7t2l9wd2.php:35\n\
    Stack trace:\n#0 /tmp/tmp7t2l9wd2.php(45): test()\n#1 {main}\n  thrown in /tmp/tmp7t2l9wd2.php\
    \ on line 35\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a string and returns True if the\
    \ string\n// length is a prime number or False otherwise\n// Examples\n// prime_length('Hello')\
    \ == True\n// prime_length('abcdcba') == True\n// prime_length('kittens') == True\n\
    // prime_length('orange') == False\nfunction prime_length($string) {\n    $length\
    \ = strlen($string);\n    for ($i = 2; $i < $length; $i++) {\n        if ($length\
    \ % $i == 0) {\n            return false;\n        }\n    }\n    return true;\n\
    }\n\nfunction candidate(...$args) {\n    return prime_length(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"Hello\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"abcdcba\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"kittens\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"orange\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"wow\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"world\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"MadaM\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Wow\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"HI\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"go\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"gogo\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aaaaaaaaaaaaaaa\") !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Madam\") !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"M\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"0\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpegv_427s.php:32\n\
    Stack trace:\n#0 /tmp/tmpegv_427s.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpegv_427s.php\
    \ on line 32\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a string and returns True if the\
    \ string\n// length is a prime number or False otherwise\n// Examples\n// prime_length('Hello')\
    \ == True\n// prime_length('abcdcba') == True\n// prime_length('kittens') == True\n\
    // prime_length('orange') == False\nfunction prime_length($string) {\n    $length\
    \ = strlen($string);\n    if ($length == 1) {\n        return false;\n    }\n\
    \    for ($i = 2; $i < $length; $i++) {\n        if ($length % $i == 0) {\n  \
    \          return false;\n        }\n    }\n    return true;\n}\n\nfunction candidate(...$args)\
    \ {\n    return prime_length(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"Hello\") !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"abcdcba\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"kittens\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"orange\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"wow\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"world\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"MadaM\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Wow\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"HI\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"go\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"gogo\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaaaaaaaaaaaaa\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Madam\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"M\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"0\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp2xrf8ian.php:35\n\
    Stack trace:\n#0 /tmp/tmp2xrf8ian.php(45): test()\n#1 {main}\n  thrown in /tmp/tmp2xrf8ian.php\
    \ on line 35\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a string and returns True if the\
    \ string\n// length is a prime number or False otherwise\n// Examples\n// prime_length('Hello')\
    \ == True\n// prime_length('abcdcba') == True\n// prime_length('kittens') == True\n\
    // prime_length('orange') == False\nfunction prime_length($string) {\n    $length\
    \ = strlen($string);\n    if ($length < 2) {\n        return false;\n    }\n \
    \   for ($i = 2; $i < $length; $i++) {\n        if ($length % $i == 0) {\n   \
    \         return false;\n        }\n    }\n    return true;\n}\necho prime_length('Hello')\
    \ . \"\\n\";\necho prime_length('abcdcba') . \"\\n\";\necho prime_length('kittens')\
    \ . \"\\n\";\necho prime_length('orange') . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return prime_length(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"Hello\") !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"abcdcba\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"kittens\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"orange\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"wow\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"world\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"MadaM\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Wow\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"HI\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"go\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"gogo\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaaaaaaaaaaaaa\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Madam\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"M\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"0\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "1\n1\n1\n\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that takes a string and returns True if the\
    \ string\n// length is a prime number or False otherwise\n// Examples\n// prime_length('Hello')\
    \ == True\n// prime_length('abcdcba') == True\n// prime_length('kittens') == True\n\
    // prime_length('orange') == False\nfunction prime_length($string) {\n  $length\
    \ = strlen($string);\n  if ($length == 1) {\n    return false;\n  }\n  for ($i\
    \ = 2; $i < $length; $i++) {\n    if ($length % $i == 0) {\n      return false;\n\
    \    }\n  }\n  return true;\n}\n\nfunction candidate(...$args) {\n    return prime_length(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello\") !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"abcdcba\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"kittens\") !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"orange\") !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"wow\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"world\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"MadaM\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Wow\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    HI\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    go\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    gogo\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aaaaaaaaaaaaaaa\") !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"Madam\") !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"M\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"0\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpprq51ban.php:35\n\
    Stack trace:\n#0 /tmp/tmpprq51ban.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpprq51ban.php\
    \ on line 35\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a string and returns True if the\
    \ string\n// length is a prime number or False otherwise\n// Examples\n// prime_length('Hello')\
    \ == True\n// prime_length('abcdcba') == True\n// prime_length('kittens') == True\n\
    // prime_length('orange') == False\nfunction prime_length($string) {\n    $length\
    \ = strlen($string);\n    if ($length < 2) {\n        return false;\n    }\n \
    \   for ($i = 2; $i < $length; $i++) {\n        if ($length % $i == 0) {\n   \
    \         return false;\n        }\n    }\n    return true;\n}\n\nfunction candidate(...$args)\
    \ {\n    return prime_length(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"Hello\") !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"abcdcba\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"kittens\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"orange\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"wow\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"world\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"MadaM\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Wow\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"HI\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"go\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"gogo\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaaaaaaaaaaaaa\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Madam\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"M\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"0\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that takes a string and returns True if the\
    \ string\n// length is a prime number or False otherwise\n// Examples\n// prime_length('Hello')\
    \ == True\n// prime_length('abcdcba') == True\n// prime_length('kittens') == True\n\
    // prime_length('orange') == False\nfunction prime_length($string) {\n    $length\
    \ = strlen($string);\n    if ($length == 1) {\n        return false;\n    }\n\
    \    for ($i = 2; $i < $length; $i++) {\n        if ($length % $i == 0) {\n  \
    \          return false;\n        }\n    }\n    return true;\n}\n\nfunction candidate(...$args)\
    \ {\n    return prime_length(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"Hello\") !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"abcdcba\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"kittens\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"orange\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"wow\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"world\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"MadaM\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Wow\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"HI\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"go\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"gogo\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaaaaaaaaaaaaa\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Madam\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"M\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"0\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmplm8xj4kf.php:35\n\
    Stack trace:\n#0 /tmp/tmplm8xj4kf.php(45): test()\n#1 {main}\n  thrown in /tmp/tmplm8xj4kf.php\
    \ on line 35\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a string and returns True if the\
    \ string\n// length is a prime number or False otherwise\n// Examples\n// prime_length('Hello')\
    \ == True\n// prime_length('abcdcba') == True\n// prime_length('kittens') == True\n\
    // prime_length('orange') == False\nfunction prime_length($string) {\n    $length\
    \ = strlen($string);\n    if ($length == 1) {\n        return False;\n    }\n\
    \    for ($i = 2; $i < $length; $i++) {\n        if ($length % $i == 0) {\n  \
    \          return False;\n        }\n    }\n    return True;\n}\n\nfunction candidate(...$args)\
    \ {\n    return prime_length(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"Hello\") !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"abcdcba\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"kittens\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"orange\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"wow\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"world\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"MadaM\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Wow\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"HI\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"go\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"gogo\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaaaaaaaaaaaaa\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Madam\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"M\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"0\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpjzpaox2r.php:35\n\
    Stack trace:\n#0 /tmp/tmpjzpaox2r.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpjzpaox2r.php\
    \ on line 35\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a string and returns True if the\
    \ string\n// length is a prime number or False otherwise\n// Examples\n// prime_length('Hello')\
    \ == True\n// prime_length('abcdcba') == True\n// prime_length('kittens') == True\n\
    // prime_length('orange') == False\nfunction prime_length($string) {\n  $length\
    \ = strlen($string);\n  if ($length == 1) {\n    return False;\n  }\n  for ($i\
    \ = 2; $i < $length; $i++) {\n    if ($length % $i == 0) {\n      return False;\n\
    \    }\n  }\n  return True;\n}\n\nfunction candidate(...$args) {\n    return prime_length(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello\") !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"abcdcba\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"kittens\") !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"orange\") !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"wow\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"world\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"MadaM\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Wow\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    HI\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    go\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    gogo\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aaaaaaaaaaaaaaa\") !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"Madam\") !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"M\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"0\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp5my6tvzk.php:35\n\
    Stack trace:\n#0 /tmp/tmp5my6tvzk.php(45): test()\n#1 {main}\n  thrown in /tmp/tmp5my6tvzk.php\
    \ on line 35\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a string and returns True if the\
    \ string\n// length is a prime number or False otherwise\n// Examples\n// prime_length('Hello')\
    \ == True\n// prime_length('abcdcba') == True\n// prime_length('kittens') == True\n\
    // prime_length('orange') == False\nfunction prime_length($string) {\n    $length\
    \ = strlen($string);\n    if ($length == 1) {\n        return false;\n    }\n\
    \    for ($i = 2; $i < $length; $i++) {\n        if ($length % $i == 0) {\n  \
    \          return false;\n        }\n    }\n    return true;\n}\n\nfunction candidate(...$args)\
    \ {\n    return prime_length(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"Hello\") !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"abcdcba\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"kittens\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"orange\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"wow\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"world\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"MadaM\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Wow\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"HI\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"go\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"gogo\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaaaaaaaaaaaaa\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Madam\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"M\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"0\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpo325y2tq.php:35\n\
    Stack trace:\n#0 /tmp/tmpo325y2tq.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpo325y2tq.php\
    \ on line 35\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a string and returns True if the\
    \ string\n// length is a prime number or False otherwise\n// Examples\n// prime_length('Hello')\
    \ == True\n// prime_length('abcdcba') == True\n// prime_length('kittens') == True\n\
    // prime_length('orange') == False\nfunction prime_length($string) {\n    $string_length\
    \ = strlen($string);\n    if ($string_length == 1) {\n        return false;\n\
    \    }\n    for ($i = 2; $i < $string_length; $i++) {\n        if ($string_length\
    \ % $i == 0) {\n            return false;\n        }\n    }\n    return true;\n\
    }\n\nfunction candidate(...$args) {\n    return prime_length(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"Hello\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"abcdcba\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"kittens\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"orange\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"wow\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"world\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"MadaM\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Wow\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"HI\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"go\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"gogo\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aaaaaaaaaaaaaaa\") !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Madam\") !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"M\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"0\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpf2dar3ko.php:35\n\
    Stack trace:\n#0 /tmp/tmpf2dar3ko.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpf2dar3ko.php\
    \ on line 35\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a string and returns True if the\
    \ string\n// length is a prime number or False otherwise\n// Examples\n// prime_length('Hello')\
    \ == True\n// prime_length('abcdcba') == True\n// prime_length('kittens') == True\n\
    // prime_length('orange') == False\nfunction prime_length($string) {\n    $length\
    \ = strlen($string);\n    for ($i = 2; $i < $length; $i++) {\n        if ($length\
    \ % $i == 0) {\n            return false;\n        }\n    }\n    return true;\n\
    }\n\nfunction candidate(...$args) {\n    return prime_length(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"Hello\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"abcdcba\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"kittens\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"orange\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"wow\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"world\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"MadaM\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Wow\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"HI\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"go\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"gogo\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aaaaaaaaaaaaaaa\") !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Madam\") !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"M\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"0\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpgpsliz8k.php:32\n\
    Stack trace:\n#0 /tmp/tmpgpsliz8k.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpgpsliz8k.php\
    \ on line 32\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a string and returns True if the\
    \ string\n// length is a prime number or False otherwise\n// Examples\n// prime_length('Hello')\
    \ == True\n// prime_length('abcdcba') == True\n// prime_length('kittens') == True\n\
    // prime_length('orange') == False\nfunction prime_length($string) {\n    $length\
    \ = strlen($string);\n    if ($length == 1) {\n        return false;\n    }\n\
    \    for ($i = 2; $i < $length; $i++) {\n        if ($length % $i == 0) {\n  \
    \          return false;\n        }\n    }\n    return true;\n}\n\necho prime_length('Hello')\
    \ . PHP_EOL;\necho prime_length('abcdcba') . PHP_EOL;\necho prime_length('kittens')\
    \ . PHP_EOL;\necho prime_length('orange') . PHP_EOL;\nfunction candidate(...$args)\
    \ {\n    return prime_length(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"Hello\") !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"abcdcba\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"kittens\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"orange\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"wow\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"world\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"MadaM\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Wow\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"HI\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"go\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"gogo\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaaaaaaaaaaaaa\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Madam\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"M\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"0\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "1\n1\n1\n\n"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpzkea0243.php:39\n\
    Stack trace:\n#0 /tmp/tmpzkea0243.php(49): test()\n#1 {main}\n  thrown in /tmp/tmpzkea0243.php\
    \ on line 39\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a string and returns True if the\
    \ string\n// length is a prime number or False otherwise\n// Examples\n// prime_length('Hello')\
    \ == True\n// prime_length('abcdcba') == True\n// prime_length('kittens') == True\n\
    // prime_length('orange') == False\nfunction prime_length($string) {\n    $length\
    \ = strlen($string);\n    if ($length == 1) {\n        return False;\n    }\n\
    \    for ($i = 2; $i < $length; $i++) {\n        if ($length % $i == 0) {\n  \
    \          return False;\n        }\n    }\n    return True;\n}\n\nfunction candidate(...$args)\
    \ {\n    return prime_length(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"Hello\") !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"abcdcba\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"kittens\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"orange\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"wow\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"world\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"MadaM\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Wow\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"HI\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"go\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"gogo\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaaaaaaaaaaaaa\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Madam\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"M\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"0\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpenxqm0zn.php:35\n\
    Stack trace:\n#0 /tmp/tmpenxqm0zn.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpenxqm0zn.php\
    \ on line 35\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a string and returns True if the\
    \ string\n// length is a prime number or False otherwise\n// Examples\n// prime_length('Hello')\
    \ == True\n// prime_length('abcdcba') == True\n// prime_length('kittens') == True\n\
    // prime_length('orange') == False\nfunction prime_length($string) {\n    $length\
    \ = strlen($string);\n    if ($length == 2 || $length == 3) {\n        return\
    \ True;\n    }\n    if ($length % 2 == 0 || $length % 3 == 0) {\n        return\
    \ False;\n    }\n    $i = 5;\n    $w = 2;\n    while ($i * $i <= $length) {\n\
    \        if ($length % $i == 0) {\n            return False;\n        }\n    \
    \    $i += $w;\n        $w = 6 - $w;\n    }\n    return True;\n}\n\nfunction candidate(...$args)\
    \ {\n    return prime_length(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"Hello\") !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"abcdcba\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"kittens\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"orange\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"wow\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"world\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"MadaM\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Wow\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"HI\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"go\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"gogo\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaaaaaaaaaaaaa\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Madam\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"M\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"0\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpx8ryveh2.php:48\n\
    Stack trace:\n#0 /tmp/tmpx8ryveh2.php(52): test()\n#1 {main}\n  thrown in /tmp/tmpx8ryveh2.php\
    \ on line 48\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a string and returns True if the\
    \ string\n// length is a prime number or False otherwise\n// Examples\n// prime_length('Hello')\
    \ == True\n// prime_length('abcdcba') == True\n// prime_length('kittens') == True\n\
    // prime_length('orange') == False\nfunction prime_length($string) {\n    $length\
    \ = strlen($string);\n    $prime = true;\n    for ($i = 2; $i < $length; $i++)\
    \ {\n        if ($length % $i == 0) {\n            $prime = false;\n        }\n\
    \    }\n    return $prime;\n}\necho prime_length('Hello') . PHP_EOL;\necho prime_length('abcdcba')\
    \ . PHP_EOL;\necho prime_length('kittens') . PHP_EOL;\necho prime_length('orange')\
    \ . PHP_EOL;\nfunction candidate(...$args) {\n    return prime_length(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello\") !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"abcdcba\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"kittens\") !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"orange\") !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"wow\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"world\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"MadaM\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Wow\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    HI\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    go\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    gogo\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aaaaaaaaaaaaaaa\") !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"Madam\") !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"M\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"0\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "1\n1\n1\n\n"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpe688a75v.php:36\n\
    Stack trace:\n#0 /tmp/tmpe688a75v.php(46): test()\n#1 {main}\n  thrown in /tmp/tmpe688a75v.php\
    \ on line 36\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a string and returns True if the\
    \ string\n// length is a prime number or False otherwise\n// Examples\n// prime_length('Hello')\
    \ == True\n// prime_length('abcdcba') == True\n// prime_length('kittens') == True\n\
    // prime_length('orange') == False\nfunction prime_length($string) {\n    $length\
    \ = strlen($string);\n    if ($length == 1) {\n        return false;\n    }\n\
    \    if ($length == 2) {\n        return true;\n    }\n    for ($i = 2; $i < $length;\
    \ $i++) {\n        if ($length % $i == 0) {\n            return false;\n     \
    \   }\n    }\n    return true;\n}\n\nfunction candidate(...$args) {\n    return\
    \ prime_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcdcba\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    kittens\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    orange\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    wow\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    world\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    MadaM\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Wow\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    HI\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    go\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    gogo\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aaaaaaaaaaaaaaa\") !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"Madam\") !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"M\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"0\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpkwqufz7x.php:38\n\
    Stack trace:\n#0 /tmp/tmpkwqufz7x.php(48): test()\n#1 {main}\n  thrown in /tmp/tmpkwqufz7x.php\
    \ on line 38\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a string and returns True if the\
    \ string\n// length is a prime number or False otherwise\n// Examples\n// prime_length('Hello')\
    \ == True\n// prime_length('abcdcba') == True\n// prime_length('kittens') == True\n\
    // prime_length('orange') == False\nfunction prime_length($string) {\n    $length\
    \ = strlen($string);\n    if ($length == 1) {\n        return false;\n    }\n\
    \    for ($i = 2; $i < $length; $i++) {\n        if ($length % $i == 0) {\n  \
    \          return false;\n        }\n    }\n    return true;\n}\n\nfunction candidate(...$args)\
    \ {\n    return prime_length(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"Hello\") !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"abcdcba\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"kittens\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"orange\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"wow\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"world\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"MadaM\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Wow\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"HI\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"go\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"gogo\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaaaaaaaaaaaaa\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Madam\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"M\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"0\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp7g6331_e.php:35\n\
    Stack trace:\n#0 /tmp/tmp7g6331_e.php(45): test()\n#1 {main}\n  thrown in /tmp/tmp7g6331_e.php\
    \ on line 35\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a string and returns True if the\
    \ string\n// length is a prime number or False otherwise\n// Examples\n// prime_length('Hello')\
    \ == True\n// prime_length('abcdcba') == True\n// prime_length('kittens') == True\n\
    // prime_length('orange') == False\nfunction prime_length($string) {\n  $length\
    \ = strlen($string);\n  if ($length == 1) {\n    return True;\n  }\n  for ($i\
    \ = 2; $i < $length; $i++) {\n    if ($length % $i == 0) {\n      return False;\n\
    \    }\n  }\n  return True;\n}\n\necho prime_length('Hello') . \"\\n\";\necho\
    \ prime_length('abcdcba') . \"\\n\";\necho prime_length('kittens') . \"\\n\";\n\
    echo prime_length('orange') . \"\\n\";\nfunction candidate(...$args) {\n    return\
    \ prime_length(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    abcdcba\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    kittens\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    orange\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    wow\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    world\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    MadaM\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Wow\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    \") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    HI\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    go\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    gogo\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aaaaaaaaaaaaaaa\") !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"Madam\") !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"M\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"0\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "1\n1\n1\n\n"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpqfii5fev.php:39\n\
    Stack trace:\n#0 /tmp/tmpqfii5fev.php(49): test()\n#1 {main}\n  thrown in /tmp/tmpqfii5fev.php\
    \ on line 39\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a string and returns True if the\
    \ string\n// length is a prime number or False otherwise\n// Examples\n// prime_length('Hello')\
    \ == True\n// prime_length('abcdcba') == True\n// prime_length('kittens') == True\n\
    // prime_length('orange') == False\nfunction prime_length($string) {\n    $length\
    \ = strlen($string);\n    if ($length == 2) {\n        return True;\n    }\n \
    \   for ($i = 2; $i < $length; $i++) {\n        if ($length % $i == 0) {\n   \
    \         return False;\n        }\n    }\n    return True;\n}\necho prime_length('Hello')\
    \ . PHP_EOL;\necho prime_length('abcdcba') . PHP_EOL;\necho prime_length('kittens')\
    \ . PHP_EOL;\necho prime_length('orange') . PHP_EOL;\nfunction candidate(...$args)\
    \ {\n    return prime_length(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"Hello\") !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"abcdcba\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"kittens\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"orange\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"wow\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"world\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"MadaM\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Wow\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"HI\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"go\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"gogo\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaaaaaaaaaaaaa\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Madam\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"M\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"0\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "1\n1\n1\n\n"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpcroq08w5.php:38\n\
    Stack trace:\n#0 /tmp/tmpcroq08w5.php(48): test()\n#1 {main}\n  thrown in /tmp/tmpcroq08w5.php\
    \ on line 38\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a string and returns True if the\
    \ string\n// length is a prime number or False otherwise\n// Examples\n// prime_length('Hello')\
    \ == True\n// prime_length('abcdcba') == True\n// prime_length('kittens') == True\n\
    // prime_length('orange') == False\nfunction prime_length($string) {\n    $length\
    \ = strlen($string);\n    if ($length == 1) {\n        return false;\n    }\n\
    \    for ($i = 2; $i < $length; $i++) {\n        if ($length % $i == 0) {\n  \
    \          return false;\n        }\n    }\n    return true;\n}\n\nfunction candidate(...$args)\
    \ {\n    return prime_length(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"Hello\") !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"abcdcba\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"kittens\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"orange\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"wow\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"world\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"MadaM\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Wow\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"HI\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"go\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"gogo\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaaaaaaaaaaaaa\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Madam\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"M\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"0\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpqbs41xk9.php:35\n\
    Stack trace:\n#0 /tmp/tmpqbs41xk9.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpqbs41xk9.php\
    \ on line 35\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a string and returns True if the\
    \ string\n// length is a prime number or False otherwise\n// Examples\n// prime_length('Hello')\
    \ == True\n// prime_length('abcdcba') == True\n// prime_length('kittens') == True\n\
    // prime_length('orange') == False\nfunction prime_length($string) {\n    $length\
    \ = strlen($string);\n    if ($length == 2) {\n        return True;\n    }\n \
    \   for ($i = 2; $i < $length; $i++) {\n        if ($length % $i == 0) {\n   \
    \         return False;\n        }\n    }\n    return True;\n}\n\nfunction candidate(...$args)\
    \ {\n    return prime_length(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"Hello\") !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"abcdcba\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"kittens\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"orange\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"wow\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"world\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"MadaM\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Wow\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"HI\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"go\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"gogo\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaaaaaaaaaaaaa\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Madam\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"M\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"0\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpjyh84mwg.php:35\n\
    Stack trace:\n#0 /tmp/tmpjyh84mwg.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpjyh84mwg.php\
    \ on line 35\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a string and returns True if the\
    \ string\n// length is a prime number or False otherwise\n// Examples\n// prime_length('Hello')\
    \ == True\n// prime_length('abcdcba') == True\n// prime_length('kittens') == True\n\
    // prime_length('orange') == False\nfunction prime_length($string) {\n    $length\
    \ = strlen($string);\n    if ($length == 1) {\n        return false;\n    }\n\
    \    for ($i = 2; $i < $length; $i++) {\n        if ($length % $i == 0) {\n  \
    \          return false;\n        }\n    }\n    return true;\n}\n\nfunction candidate(...$args)\
    \ {\n    return prime_length(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"Hello\") !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"abcdcba\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"kittens\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"orange\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"wow\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"world\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"MadaM\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Wow\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"HI\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"go\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"gogo\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaaaaaaaaaaaaa\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Madam\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"M\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"0\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpc8mx90l7.php:35\n\
    Stack trace:\n#0 /tmp/tmpc8mx90l7.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpc8mx90l7.php\
    \ on line 35\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a string and returns True if the\
    \ string\n// length is a prime number or False otherwise\n// Examples\n// prime_length('Hello')\
    \ == True\n// prime_length('abcdcba') == True\n// prime_length('kittens') == True\n\
    // prime_length('orange') == False\nfunction prime_length($string) {\n\t$length\
    \ = strlen($string);\n\tif ($length == 1) {\n\t\treturn false;\n\t}\n\tfor ($i\
    \ = 2; $i < $length; $i++) {\n\t\tif ($length % $i == 0) {\n\t\t\treturn false;\n\
    \t\t}\n\t}\n\treturn true;\n}\nfunction candidate(...$args) {\n    return prime_length(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello\") !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"abcdcba\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"kittens\") !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"orange\") !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"wow\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"world\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"MadaM\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Wow\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    HI\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    go\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    gogo\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aaaaaaaaaaaaaaa\") !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"Madam\") !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"M\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"0\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpsv4h5fjv.php:34\n\
    Stack trace:\n#0 /tmp/tmpsv4h5fjv.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpsv4h5fjv.php\
    \ on line 34\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a string and returns True if the\
    \ string\n// length is a prime number or False otherwise\n// Examples\n// prime_length('Hello')\
    \ == True\n// prime_length('abcdcba') == True\n// prime_length('kittens') == True\n\
    // prime_length('orange') == False\nfunction prime_length($string) {\n  $length\
    \ = strlen($string);\n  if ($length == 1) {\n    return False;\n  }\n  for ($i\
    \ = 2; $i < $length; $i++) {\n    if ($length % $i == 0) {\n      return False;\n\
    \    }\n  }\n  return True;\n}\n\nfunction candidate(...$args) {\n    return prime_length(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello\") !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"abcdcba\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"kittens\") !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"orange\") !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"wow\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"world\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"MadaM\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Wow\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    HI\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    go\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    gogo\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aaaaaaaaaaaaaaa\") !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"Madam\") !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"M\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"0\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpz7s8j8_k.php:35\n\
    Stack trace:\n#0 /tmp/tmpz7s8j8_k.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpz7s8j8_k.php\
    \ on line 35\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a string and returns True if the\
    \ string\n// length is a prime number or False otherwise\n// Examples\n// prime_length('Hello')\
    \ == True\n// prime_length('abcdcba') == True\n// prime_length('kittens') == True\n\
    // prime_length('orange') == False\nfunction prime_length($string) {\n    $length\
    \ = strlen($string);\n    if ($length == 1) {\n        return False;\n    }\n\
    \    for ($i = 2; $i < $length; $i++) {\n        if ($length % $i == 0) {\n  \
    \          return False;\n        }\n    }\n    return True;\n}\n\nfunction candidate(...$args)\
    \ {\n    return prime_length(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"Hello\") !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"abcdcba\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"kittens\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"orange\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"wow\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"world\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"MadaM\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Wow\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"HI\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"go\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"gogo\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaaaaaaaaaaaaa\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Madam\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"M\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"0\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpc018psnc.php:35\n\
    Stack trace:\n#0 /tmp/tmpc018psnc.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpc018psnc.php\
    \ on line 35\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a string and returns True if the\
    \ string\n// length is a prime number or False otherwise\n// Examples\n// prime_length('Hello')\
    \ == True\n// prime_length('abcdcba') == True\n// prime_length('kittens') == True\n\
    // prime_length('orange') == False\nfunction prime_length($string) {\n    $str_length\
    \ = strlen($string);\n    if ($str_length < 2) {\n        return false;\n    }\n\
    \    for ($i = 2; $i < $str_length; $i++) {\n        if ($str_length % $i == 0)\
    \ {\n            return false;\n        }\n    }\n    return true;\n}\n\necho\
    \ prime_length('Hello') . PHP_EOL;\necho prime_length('abcdcba') . PHP_EOL;\n\
    echo prime_length('kittens') . PHP_EOL;\necho prime_length('orange') . PHP_EOL;\n\
    function candidate(...$args) {\n    return prime_length(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"Hello\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"abcdcba\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"kittens\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"orange\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"wow\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"world\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"MadaM\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Wow\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"HI\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"go\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"gogo\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aaaaaaaaaaaaaaa\") !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Madam\") !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"M\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"0\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "1\n1\n1\n\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that takes a string and returns True if the\
    \ string\n// length is a prime number or False otherwise\n// Examples\n// prime_length('Hello')\
    \ == True\n// prime_length('abcdcba') == True\n// prime_length('kittens') == True\n\
    // prime_length('orange') == False\nfunction prime_length($string) {\n    $length\
    \ = strlen($string);\n    if ($length == 1) {\n        return false;\n    }\n\
    \    for ($i = 2; $i < $length; $i++) {\n        if ($length % $i == 0) {\n  \
    \          return false;\n        }\n    }\n    return true;\n}\n\nfunction candidate(...$args)\
    \ {\n    return prime_length(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"Hello\") !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"abcdcba\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"kittens\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"orange\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"wow\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"world\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"MadaM\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Wow\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"HI\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"go\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"gogo\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaaaaaaaaaaaaa\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Madam\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"M\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"0\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpyfmr525a.php:35\n\
    Stack trace:\n#0 /tmp/tmpyfmr525a.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpyfmr525a.php\
    \ on line 35\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a string and returns True if the\
    \ string\n// length is a prime number or False otherwise\n// Examples\n// prime_length('Hello')\
    \ == True\n// prime_length('abcdcba') == True\n// prime_length('kittens') == True\n\
    // prime_length('orange') == False\nfunction prime_length($string) {\n  $length\
    \ = strlen($string);\n  if ($length == 1) {\n    return false;\n  }\n  for ($i\
    \ = 2; $i < $length; $i++) {\n    if ($length % $i == 0) {\n      return false;\n\
    \    }\n  }\n  return true;\n}\nfunction candidate(...$args) {\n    return prime_length(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello\") !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"abcdcba\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"kittens\") !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"orange\") !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"wow\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"world\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"MadaM\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Wow\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    HI\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    go\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    gogo\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aaaaaaaaaaaaaaa\") !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"Madam\") !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"M\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"0\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp70qnbe17.php:34\n\
    Stack trace:\n#0 /tmp/tmp70qnbe17.php(44): test()\n#1 {main}\n  thrown in /tmp/tmp70qnbe17.php\
    \ on line 34\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a string and returns True if the\
    \ string\n// length is a prime number or False otherwise\n// Examples\n// prime_length('Hello')\
    \ == True\n// prime_length('abcdcba') == True\n// prime_length('kittens') == True\n\
    // prime_length('orange') == False\nfunction prime_length($string) {\n    $length\
    \ = strlen($string);\n    if ($length == 2) {\n        return true;\n    }\n \
    \   for ($i = 2; $i < $length; $i++) {\n        if ($length % $i == 0) {\n   \
    \         return false;\n        }\n    }\n    return true;\n}\n\nfunction candidate(...$args)\
    \ {\n    return prime_length(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"Hello\") !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"abcdcba\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"kittens\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"orange\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"wow\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"world\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"MadaM\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Wow\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"HI\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"go\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"gogo\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaaaaaaaaaaaaa\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Madam\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"M\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"0\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpavholrxx.php:35\n\
    Stack trace:\n#0 /tmp/tmpavholrxx.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpavholrxx.php\
    \ on line 35\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a string and returns True if the\
    \ string\n// length is a prime number or False otherwise\n// Examples\n// prime_length('Hello')\
    \ == True\n// prime_length('abcdcba') == True\n// prime_length('kittens') == True\n\
    // prime_length('orange') == False\nfunction prime_length($string) {\n    $length\
    \ = strlen($string);\n    if ($length == 1) {\n        return false;\n    }\n\
    \    for ($i = 2; $i < $length; $i++) {\n        if ($length % $i == 0) {\n  \
    \          return false;\n        }\n    }\n    return true;\n}\n\nfunction candidate(...$args)\
    \ {\n    return prime_length(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"Hello\") !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"abcdcba\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"kittens\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"orange\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"wow\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"world\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"MadaM\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Wow\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"HI\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"go\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"gogo\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaaaaaaaaaaaaa\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Madam\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"M\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"0\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmph9ja5_c1.php:35\n\
    Stack trace:\n#0 /tmp/tmph9ja5_c1.php(45): test()\n#1 {main}\n  thrown in /tmp/tmph9ja5_c1.php\
    \ on line 35\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a string and returns True if the\
    \ string\n// length is a prime number or False otherwise\n// Examples\n// prime_length('Hello')\
    \ == True\n// prime_length('abcdcba') == True\n// prime_length('kittens') == True\n\
    // prime_length('orange') == False\nfunction prime_length($string) {\n    $length\
    \ = strlen($string);\n    if ($length == 1) {\n        return False;\n    }\n\
    \    for ($i = 2; $i < $length; $i++) {\n        if ($length % $i == 0) {\n  \
    \          return False;\n        }\n    }\n    return True;\n}\n\nfunction candidate(...$args)\
    \ {\n    return prime_length(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"Hello\") !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"abcdcba\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"kittens\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"orange\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"wow\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"world\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"MadaM\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Wow\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"HI\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"go\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"gogo\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaaaaaaaaaaaaa\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Madam\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"M\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"0\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmptbs8ed4w.php:35\n\
    Stack trace:\n#0 /tmp/tmptbs8ed4w.php(45): test()\n#1 {main}\n  thrown in /tmp/tmptbs8ed4w.php\
    \ on line 35\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a string and returns True if the\
    \ string\n// length is a prime number or False otherwise\n// Examples\n// prime_length('Hello')\
    \ == True\n// prime_length('abcdcba') == True\n// prime_length('kittens') == True\n\
    // prime_length('orange') == False\nfunction prime_length($string) {\n    $length\
    \ = strlen($string);\n    if ($length == 1) {\n        return false;\n    }\n\
    \    for ($i = 2; $i < $length; $i++) {\n        if ($length % $i == 0) {\n  \
    \          return false;\n        }\n    }\n    return true;\n}\n\nfunction candidate(...$args)\
    \ {\n    return prime_length(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"Hello\") !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"abcdcba\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"kittens\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"orange\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"wow\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"world\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"MadaM\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Wow\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"HI\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"go\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"gogo\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaaaaaaaaaaaaa\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Madam\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"M\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"0\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmprrsilwck.php:35\n\
    Stack trace:\n#0 /tmp/tmprrsilwck.php(45): test()\n#1 {main}\n  thrown in /tmp/tmprrsilwck.php\
    \ on line 35\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a string and returns True if the\
    \ string\n// length is a prime number or False otherwise\n// Examples\n// prime_length('Hello')\
    \ == True\n// prime_length('abcdcba') == True\n// prime_length('kittens') == True\n\
    // prime_length('orange') == False\nfunction prime_length($string) {\n    $length\
    \ = strlen($string);\n    if ($length == 1) {\n        return false;\n    }\n\
    \    for ($i = 2; $i < $length; $i++) {\n        if ($length % $i == 0) {\n  \
    \          return false;\n        }\n    }\n    return true;\n}\n\nfunction candidate(...$args)\
    \ {\n    return prime_length(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"Hello\") !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"abcdcba\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"kittens\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"orange\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"wow\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"world\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"MadaM\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Wow\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"HI\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"go\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"gogo\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaaaaaaaaaaaaa\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Madam\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"M\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"0\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp2rd_de6f.php:35\n\
    Stack trace:\n#0 /tmp/tmp2rd_de6f.php(45): test()\n#1 {main}\n  thrown in /tmp/tmp2rd_de6f.php\
    \ on line 35\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a string and returns True if the\
    \ string\n// length is a prime number or False otherwise\n// Examples\n// prime_length('Hello')\
    \ == True\n// prime_length('abcdcba') == True\n// prime_length('kittens') == True\n\
    // prime_length('orange') == False\nfunction prime_length($string) {\n    $length\
    \ = strlen($string);\n    if ($length == 1) {\n        return false;\n    }\n\
    \    for ($i = 2; $i < $length; $i++) {\n        if ($length % $i == 0) {\n  \
    \          return false;\n        }\n    }\n    return true;\n}\n\nfunction candidate(...$args)\
    \ {\n    return prime_length(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"Hello\") !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"abcdcba\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"kittens\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"orange\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"wow\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"world\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"MadaM\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Wow\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"HI\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"go\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"gogo\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaaaaaaaaaaaaa\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Madam\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"M\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"0\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp6u9hisfp.php:35\n\
    Stack trace:\n#0 /tmp/tmp6u9hisfp.php(45): test()\n#1 {main}\n  thrown in /tmp/tmp6u9hisfp.php\
    \ on line 35\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a string and returns True if the\
    \ string\n// length is a prime number or False otherwise\n// Examples\n// prime_length('Hello')\
    \ == True\n// prime_length('abcdcba') == True\n// prime_length('kittens') == True\n\
    // prime_length('orange') == False\nfunction prime_length($string) {\n\t$length\
    \ = strlen($string);\n\tif ($length == 1) {\n\t\treturn false;\n\t}\n\tfor ($i\
    \ = 2; $i < $length; $i++) {\n\t\tif ($length % $i == 0) {\n\t\t\treturn false;\n\
    \t\t}\n\t}\n\treturn true;\n}\n\nfunction candidate(...$args) {\n    return prime_length(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello\") !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"abcdcba\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"kittens\") !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"orange\") !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"wow\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"world\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"MadaM\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Wow\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    HI\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    go\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    gogo\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aaaaaaaaaaaaaaa\") !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"Madam\") !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"M\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"0\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpa835sgir.php:35\n\
    Stack trace:\n#0 /tmp/tmpa835sgir.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpa835sgir.php\
    \ on line 35\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a string and returns True if the\
    \ string\n// length is a prime number or False otherwise\n// Examples\n// prime_length('Hello')\
    \ == True\n// prime_length('abcdcba') == True\n// prime_length('kittens') == True\n\
    // prime_length('orange') == False\nfunction prime_length($string) {\n\t$length\
    \ = strlen($string);\n\tif ($length == 1) {\n\t\treturn false;\n\t}\n\tfor ($i\
    \ = 2; $i < $length; $i++) {\n\t\tif ($length % $i == 0) {\n\t\t\treturn false;\n\
    \t\t}\n\t}\n\treturn true;\n}\necho prime_length('Hello') . PHP_EOL;\necho prime_length('abcdcba')\
    \ . PHP_EOL;\necho prime_length('kittens') . PHP_EOL;\necho prime_length('orange')\
    \ . PHP_EOL;\nfunction candidate(...$args) {\n    return prime_length(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello\") !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"abcdcba\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"kittens\") !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"orange\") !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"wow\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"world\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"MadaM\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Wow\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    HI\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    go\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    gogo\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aaaaaaaaaaaaaaa\") !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"Madam\") !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"M\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"0\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "1\n1\n1\n\n"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpnr3q1aee.php:38\n\
    Stack trace:\n#0 /tmp/tmpnr3q1aee.php(48): test()\n#1 {main}\n  thrown in /tmp/tmpnr3q1aee.php\
    \ on line 38\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a string and returns True if the\
    \ string\n// length is a prime number or False otherwise\n// Examples\n// prime_length('Hello')\
    \ == True\n// prime_length('abcdcba') == True\n// prime_length('kittens') == True\n\
    // prime_length('orange') == False\nfunction prime_length($string) {\n    $length\
    \ = strlen($string);\n    if ($length == 1) {\n        return false;\n    }\n\
    \    for ($i = 2; $i < $length; $i++) {\n        if ($length % $i == 0) {\n  \
    \          return false;\n        }\n    }\n    return true;\n}\n\nfunction candidate(...$args)\
    \ {\n    return prime_length(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"Hello\") !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"abcdcba\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"kittens\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"orange\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"wow\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"world\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"MadaM\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Wow\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"HI\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"go\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"gogo\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaaaaaaaaaaaaa\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Madam\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"M\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"0\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmptj32z2pa.php:35\n\
    Stack trace:\n#0 /tmp/tmptj32z2pa.php(45): test()\n#1 {main}\n  thrown in /tmp/tmptj32z2pa.php\
    \ on line 35\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a string and returns True if the\
    \ string\n// length is a prime number or False otherwise\n// Examples\n// prime_length('Hello')\
    \ == True\n// prime_length('abcdcba') == True\n// prime_length('kittens') == True\n\
    // prime_length('orange') == False\nfunction prime_length($string) {\n  $length\
    \ = strlen($string);\n  for ($i = 2; $i < $length; $i++) {\n    if ($length %\
    \ $i == 0) {\n      return False;\n    }\n  }\n  return True;\n}\n\necho prime_length('Hello')\
    \ . \"\\n\";\necho prime_length('abcdcba') . \"\\n\";\necho prime_length('kittens')\
    \ . \"\\n\";\necho prime_length('orange') . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return prime_length(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"Hello\") !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"abcdcba\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"kittens\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"orange\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"wow\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"world\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"MadaM\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Wow\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"HI\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"go\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"gogo\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaaaaaaaaaaaaa\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Madam\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"M\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"0\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "1\n1\n1\n\n"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpxng0p674.php:36\n\
    Stack trace:\n#0 /tmp/tmpxng0p674.php(46): test()\n#1 {main}\n  thrown in /tmp/tmpxng0p674.php\
    \ on line 36\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a string and returns True if the\
    \ string\n// length is a prime number or False otherwise\n// Examples\n// prime_length('Hello')\
    \ == True\n// prime_length('abcdcba') == True\n// prime_length('kittens') == True\n\
    // prime_length('orange') == False\nfunction prime_length($string) {\n    $length\
    \ = strlen($string);\n    if ($length == 1) {\n        return false;\n    }\n\
    \    for ($i = 2; $i < $length; $i++) {\n        if ($length % $i == 0) {\n  \
    \          return false;\n        }\n    }\n    return true;\n}\n\nfunction candidate(...$args)\
    \ {\n    return prime_length(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"Hello\") !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"abcdcba\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"kittens\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"orange\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"wow\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"world\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"MadaM\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Wow\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"HI\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"go\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"gogo\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaaaaaaaaaaaaa\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Madam\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"M\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"0\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp70ybp85h.php:35\n\
    Stack trace:\n#0 /tmp/tmp70ybp85h.php(45): test()\n#1 {main}\n  thrown in /tmp/tmp70ybp85h.php\
    \ on line 35\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a string and returns True if the\
    \ string\n// length is a prime number or False otherwise\n// Examples\n// prime_length('Hello')\
    \ == True\n// prime_length('abcdcba') == True\n// prime_length('kittens') == True\n\
    // prime_length('orange') == False\nfunction prime_length($string) {\n\t$length\
    \ = strlen($string);\n\tif ($length == 1) {\n\t\treturn false;\n\t}\n\tfor ($i\
    \ = 2; $i < $length; $i++) {\n\t\tif ($length % $i == 0) {\n\t\t\treturn false;\n\
    \t\t}\n\t}\n\treturn true;\n}\n\necho prime_length('Hello') . \"\\n\";\necho prime_length('abcdcba')\
    \ . \"\\n\";\necho prime_length('kittens') . \"\\n\";\necho prime_length('orange')\
    \ . \"\\n\";\nfunction candidate(...$args) {\n    return prime_length(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello\") !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"abcdcba\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"kittens\") !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"orange\") !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"wow\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"world\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"MadaM\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Wow\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    HI\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    go\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    gogo\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aaaaaaaaaaaaaaa\") !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"Madam\") !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"M\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"0\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "1\n1\n1\n\n"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpwlnx87vw.php:39\n\
    Stack trace:\n#0 /tmp/tmpwlnx87vw.php(49): test()\n#1 {main}\n  thrown in /tmp/tmpwlnx87vw.php\
    \ on line 39\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a string and returns True if the\
    \ string\n// length is a prime number or False otherwise\n// Examples\n// prime_length('Hello')\
    \ == True\n// prime_length('abcdcba') == True\n// prime_length('kittens') == True\n\
    // prime_length('orange') == False\nfunction prime_length($string) {\n    $length\
    \ = strlen($string);\n    if ($length == 1) {\n        return false;\n    }\n\
    \    for ($i = 2; $i < $length; $i++) {\n        if ($length % $i == 0) {\n  \
    \          return false;\n        }\n    }\n    return true;\n}\n\nfunction candidate(...$args)\
    \ {\n    return prime_length(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"Hello\") !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"abcdcba\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"kittens\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"orange\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"wow\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"world\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"MadaM\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Wow\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"HI\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"go\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"gogo\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaaaaaaaaaaaaa\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Madam\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"M\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"0\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp374aqnk0.php:35\n\
    Stack trace:\n#0 /tmp/tmp374aqnk0.php(45): test()\n#1 {main}\n  thrown in /tmp/tmp374aqnk0.php\
    \ on line 35\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a string and returns True if the\
    \ string\n// length is a prime number or False otherwise\n// Examples\n// prime_length('Hello')\
    \ == True\n// prime_length('abcdcba') == True\n// prime_length('kittens') == True\n\
    // prime_length('orange') == False\nfunction prime_length($string) {\n    $length\
    \ = strlen($string);\n    if ($length == 1) {\n        return False;\n    }\n\
    \    for ($i = 2; $i < $length; $i++) {\n        if ($length % $i == 0) {\n  \
    \          return False;\n        }\n    }\n    return True;\n}\n\nfunction candidate(...$args)\
    \ {\n    return prime_length(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"Hello\") !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"abcdcba\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"kittens\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"orange\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"wow\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"world\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"MadaM\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Wow\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"HI\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"go\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"gogo\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaaaaaaaaaaaaa\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Madam\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"M\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"0\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp2kf2nwca.php:35\n\
    Stack trace:\n#0 /tmp/tmp2kf2nwca.php(45): test()\n#1 {main}\n  thrown in /tmp/tmp2kf2nwca.php\
    \ on line 35\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a string and returns True if the\
    \ string\n// length is a prime number or False otherwise\n// Examples\n// prime_length('Hello')\
    \ == True\n// prime_length('abcdcba') == True\n// prime_length('kittens') == True\n\
    // prime_length('orange') == False\nfunction prime_length($string) {\n    $length\
    \ = strlen($string);\n    if ($length == 1) {\n        return false;\n    }\n\
    \    for ($i = 2; $i < $length; $i++) {\n        if ($length % $i == 0) {\n  \
    \          return false;\n        }\n    }\n    return true;\n}\necho prime_length('Hello')\
    \ ? 'True' : 'False';\necho \"\\n\";\necho prime_length('abcdcba') ? 'True' :\
    \ 'False';\necho \"\\n\";\necho prime_length('kittens') ? 'True' : 'False';\n\
    echo \"\\n\";\necho prime_length('orange') ? 'True' : 'False';\necho \"\\n\";\n\
    echo prime_length('a') ? 'True' : 'False';\necho \"\\n\";\necho prime_length('ab')\
    \ ? 'True' : 'False';\necho \"\\n\";\necho prime_length('abc') ? 'True' : 'False';\n\
    echo \"\\n\";\necho prime_length('abcd') ? 'True' : 'False';\necho \"\\n\";\n\
    echo prime_length('abcde') ? 'True' : 'False';\necho \"\\n\";\necho prime_length('abcdef')\
    \ ? 'True' : 'False';\necho \"\\n\";\necho prime_length('abcdefg') ? 'True' :\
    \ 'False';\necho \"\\n\";\necho prime_length('abcdefgh') ? 'True' : 'False';\n\
    echo \"\\n\";\necho prime_length('abcdefghi') ? 'True' : 'False';\necho \"\\n\"\
    ;\necho prime_length('abcdefghij') ? 'True' : 'False';\necho \"\\n\";\necho prime_length('abcdefghijk')\
    \ ? 'True' : 'False';\necho \"\\n\";\necho prime_length('abcdefghijkl') ? 'True'\
    \ : 'False';\necho \"\\n\";\necho prime_length('abcdefghijklm') ? 'True' : 'False';\n\
    echo \"\\n\";\necho prime_length('abcdefghijklmn') ? 'True' : 'False';\necho \"\
    \\n\";\necho prime_length('abcdefghijklmno') ? 'True' : 'False';\necho \"\\\n\
    function candidate(...$args) {\n    return prime_length(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"Hello\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"abcdcba\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"kittens\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"orange\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"wow\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"world\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"MadaM\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Wow\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"HI\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"go\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"gogo\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aaaaaaaaaaaaaaa\") !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Madam\") !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"M\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"0\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Parse error:  syntax error, unexpected identifier \"Hello\", expecting\
    \ \",\" or \";\" in /tmp/tmppsi6nn2l.php on line 64\n"
  exit_code: 255
  status: SyntaxError
- program: "<?php\n// Write a function that takes a string and returns True if the\
    \ string\n// length is a prime number or False otherwise\n// Examples\n// prime_length('Hello')\
    \ == True\n// prime_length('abcdcba') == True\n// prime_length('kittens') == True\n\
    // prime_length('orange') == False\nfunction prime_length($string) {\n    $length\
    \ = strlen($string);\n    if ($length == 1) {\n        return false;\n    }\n\
    \    for ($i = 2; $i < $length; $i++) {\n        if ($length % $i == 0) {\n  \
    \          return false;\n        }\n    }\n    return true;\n}\n\nfunction candidate(...$args)\
    \ {\n    return prime_length(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"Hello\") !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"abcdcba\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"kittens\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"orange\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"wow\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"world\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"MadaM\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Wow\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"HI\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"go\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"gogo\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaaaaaaaaaaaaa\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Madam\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"M\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"0\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmptsyq15to.php:35\n\
    Stack trace:\n#0 /tmp/tmptsyq15to.php(45): test()\n#1 {main}\n  thrown in /tmp/tmptsyq15to.php\
    \ on line 35\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a string and returns True if the\
    \ string\n// length is a prime number or False otherwise\n// Examples\n// prime_length('Hello')\
    \ == True\n// prime_length('abcdcba') == True\n// prime_length('kittens') == True\n\
    // prime_length('orange') == False\nfunction prime_length($string) {\n    $length\
    \ = strlen($string);\n    if ($length == 1) {\n        return False;\n    }\n\
    \    for ($i = 2; $i < $length; $i++) {\n        if ($length % $i == 0) {\n  \
    \          return False;\n        }\n    }\n    return True;\n}\n\nfunction candidate(...$args)\
    \ {\n    return prime_length(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"Hello\") !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"abcdcba\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"kittens\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"orange\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"wow\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"world\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"MadaM\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Wow\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"HI\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"go\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"gogo\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaaaaaaaaaaaaa\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Madam\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"M\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"0\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp0250qyyl.php:35\n\
    Stack trace:\n#0 /tmp/tmp0250qyyl.php(45): test()\n#1 {main}\n  thrown in /tmp/tmp0250qyyl.php\
    \ on line 35\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a string and returns True if the\
    \ string\n// length is a prime number or False otherwise\n// Examples\n// prime_length('Hello')\
    \ == True\n// prime_length('abcdcba') == True\n// prime_length('kittens') == True\n\
    // prime_length('orange') == False\nfunction prime_length($string) {\n    $length\
    \ = strlen($string);\n    if ($length == 1) {\n        return false;\n    }\n\
    \    for ($i = 2; $i < $length; $i++) {\n        if ($length % $i == 0) {\n  \
    \          return false;\n        }\n    }\n    return true;\n}\n\nfunction candidate(...$args)\
    \ {\n    return prime_length(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"Hello\") !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"abcdcba\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"kittens\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"orange\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"wow\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"world\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"MadaM\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Wow\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"HI\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"go\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"gogo\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaaaaaaaaaaaaa\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Madam\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"M\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"0\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpi602bxmq.php:35\n\
    Stack trace:\n#0 /tmp/tmpi602bxmq.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpi602bxmq.php\
    \ on line 35\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a string and returns True if the\
    \ string\n// length is a prime number or False otherwise\n// Examples\n// prime_length('Hello')\
    \ == True\n// prime_length('abcdcba') == True\n// prime_length('kittens') == True\n\
    // prime_length('orange') == False\nfunction prime_length($string) {\n    $length\
    \ = strlen($string);\n    if ($length < 2) {\n        return false;\n    }\n \
    \   for ($i = 2; $i < $length; $i++) {\n        if ($length % $i == 0) {\n   \
    \         return false;\n        }\n    }\n    return true;\n}\n\nfunction candidate(...$args)\
    \ {\n    return prime_length(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"Hello\") !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"abcdcba\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"kittens\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"orange\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"wow\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"world\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"MadaM\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Wow\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"HI\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"go\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"gogo\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaaaaaaaaaaaaa\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Madam\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"M\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"0\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that takes a string and returns True if the\
    \ string\n// length is a prime number or False otherwise\n// Examples\n// prime_length('Hello')\
    \ == True\n// prime_length('abcdcba') == True\n// prime_length('kittens') == True\n\
    // prime_length('orange') == False\nfunction prime_length($string) {\n    $string_length\
    \ = strlen($string);\n    for ($i = 2; $i < $string_length; $i++) {\n        if\
    \ ($string_length % $i == 0) {\n            return false;\n        }\n    }\n\
    \    return true;\n}\n\nfunction candidate(...$args) {\n    return prime_length(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello\") !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"abcdcba\") !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"kittens\") !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"orange\") !==\
    \ false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"wow\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"world\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"MadaM\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Wow\"\
    ) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\"\
    ) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    HI\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    go\") !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    gogo\") !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    aaaaaaaaaaaaaaa\") !== false) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"Madam\") !== true) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"M\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"0\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpid_x1f2n.php:32\n\
    Stack trace:\n#0 /tmp/tmpid_x1f2n.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpid_x1f2n.php\
    \ on line 32\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a string and returns True if the\
    \ string\n// length is a prime number or False otherwise\n// Examples\n// prime_length('Hello')\
    \ == True\n// prime_length('abcdcba') == True\n// prime_length('kittens') == True\n\
    // prime_length('orange') == False\nfunction prime_length($string) {\n    $length\
    \ = strlen($string);\n    if ($length < 2) {\n        return false;\n    }\n \
    \   for ($i = 2; $i < $length; $i++) {\n        if ($length % $i == 0) {\n   \
    \         return false;\n        }\n    }\n    return true;\n}\n\nfunction candidate(...$args)\
    \ {\n    return prime_length(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"Hello\") !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"abcdcba\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"kittens\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"orange\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"wow\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"world\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"MadaM\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Wow\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"HI\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"go\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"gogo\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaaaaaaaaaaaaa\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Madam\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"M\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"0\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that takes a string and returns True if the\
    \ string\n// length is a prime number or False otherwise\n// Examples\n// prime_length('Hello')\
    \ == True\n// prime_length('abcdcba') == True\n// prime_length('kittens') == True\n\
    // prime_length('orange') == False\nfunction prime_length($string) {\n    $length\
    \ = strlen($string);\n    if ($length == 1) {\n        return false;\n    }\n\
    \    for ($i = 2; $i < $length; $i++) {\n        if ($length % $i == 0) {\n  \
    \          return false;\n        }\n    }\n    return true;\n}\n\necho prime_length('Hello')\
    \ ? 'True' : 'False';\necho \"\\n\";\necho prime_length('abcdcba') ? 'True' :\
    \ 'False';\necho \"\\n\";\necho prime_length('kittens') ? 'True' : 'False';\n\
    echo \"\\n\";\necho prime_length('orange') ? 'True' : 'False';\necho \"\\n\";\n\
    function candidate(...$args) {\n    return prime_length(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"Hello\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"abcdcba\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"kittens\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"orange\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"wow\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"world\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"MadaM\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Wow\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"HI\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"go\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"gogo\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"aaaaaaaaaaaaaaa\") !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Madam\") !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"M\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"0\") !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "True\nTrue\nTrue\nFalse\n"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpqve7wa4p.php:43\n\
    Stack trace:\n#0 /tmp/tmpqve7wa4p.php(53): test()\n#1 {main}\n  thrown in /tmp/tmpqve7wa4p.php\
    \ on line 43\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a string and returns True if the\
    \ string\n// length is a prime number or False otherwise\n// Examples\n// prime_length('Hello')\
    \ == True\n// prime_length('abcdcba') == True\n// prime_length('kittens') == True\n\
    // prime_length('orange') == False\nfunction prime_length($string) {\n    $length\
    \ = strlen($string);\n    if ($length == 1) {\n        return false;\n    }\n\
    \    for ($i = 2; $i < $length; $i++) {\n        if ($length % $i == 0) {\n  \
    \          return false;\n        }\n    }\n    return true;\n}\n\nfunction candidate(...$args)\
    \ {\n    return prime_length(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"Hello\") !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"abcdcba\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"kittens\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"orange\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"wow\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"world\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"MadaM\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Wow\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"HI\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"go\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"gogo\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaaaaaaaaaaaaa\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Madam\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"M\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"0\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpokvqt4n4.php:35\n\
    Stack trace:\n#0 /tmp/tmpokvqt4n4.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpokvqt4n4.php\
    \ on line 35\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a string and returns True if the\
    \ string\n// length is a prime number or False otherwise\n// Examples\n// prime_length('Hello')\
    \ == True\n// prime_length('abcdcba') == True\n// prime_length('kittens') == True\n\
    // prime_length('orange') == False\nfunction prime_length($string) {\n    $length\
    \ = strlen($string);\n    if ($length == 1) {\n        return false;\n    }\n\
    \    for ($i = 2; $i < $length; $i++) {\n        if ($length % $i == 0) {\n  \
    \          return false;\n        }\n    }\n    return true;\n}\n\nfunction candidate(...$args)\
    \ {\n    return prime_length(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"Hello\") !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"abcdcba\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"kittens\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"orange\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"wow\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"world\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"MadaM\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Wow\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"HI\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"go\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"gogo\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaaaaaaaaaaaaa\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Madam\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"M\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"0\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpjbj6hxpu.php:35\n\
    Stack trace:\n#0 /tmp/tmpjbj6hxpu.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpjbj6hxpu.php\
    \ on line 35\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that takes a string and returns True if the\
    \ string\n// length is a prime number or False otherwise\n// Examples\n// prime_length('Hello')\
    \ == True\n// prime_length('abcdcba') == True\n// prime_length('kittens') == True\n\
    // prime_length('orange') == False\nfunction prime_length($string) {\n    $length\
    \ = strlen($string);\n    if ($length == 1) {\n        return false;\n    }\n\
    \    for ($i = 2; $i < $length; $i++) {\n        if ($length % $i == 0) {\n  \
    \          return false;\n        }\n    }\n    return true;\n}\n\nfunction candidate(...$args)\
    \ {\n    return prime_length(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"Hello\") !== true) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"abcdcba\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"kittens\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"orange\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"wow\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"world\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"MadaM\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Wow\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"HI\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"go\") !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"gogo\") !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaaaaaaaaaaaaa\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"Madam\") !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"M\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"0\") !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpgxfj6lt9.php:35\n\
    Stack trace:\n#0 /tmp/tmpgxfj6lt9.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpgxfj6lt9.php\
    \ on line 35\n"
  exit_code: 255
  status: Exception

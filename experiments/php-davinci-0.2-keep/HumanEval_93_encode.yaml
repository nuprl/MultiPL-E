name: HumanEval_93_encode
language: php
prompt: "<?php\n// Write a function that takes a message, and encodes in such a \n\
  // way that it swaps case of all letters, replaces all vowels in \n// the message\
  \ with the letter that appears 2 places ahead of that \n// vowel in the english\
  \ alphabet. \n// Assume only letters. \n// Examples:\n// >>> encode('test')\n//\
  \ 'TGST'\n// >>> encode('This is a message')\n// 'tHKS KS C MGSSCGG'\nfunction encode($message)\
  \ {\n"
tests: "function candidate(...$args) {\n    return encode(...$args);\n}\n\nfunction\
  \ test(): void {\n    if (candidate(\"TEST\") !== \"tgst\") { throw new Exception(\"\
  Test failed!\"); }\n    if (candidate(\"Mudasir\") !== \"mWDCSKR\") { throw new\
  \ Exception(\"Test failed!\"); }\n    if (candidate(\"YES\") !== \"ygs\") { throw\
  \ new Exception(\"Test failed!\"); }\n    if (candidate(\"This is a message\") !==\
  \ \"tHKS KS C MGSSCGG\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
  I DoNt KnOw WhAt tO WrItE\") !== \"k dQnT kNqW wHcT Tq wRkTg\") { throw new Exception(\"\
  Test failed!\"); }\n}\n\ntest();"
completions: ["    $vowels = ['a', 'e', 'i', 'o', 'u'];\n    $message = strtolower($message);\n\
    \    $message = str_split($message);\n    $encoded = [];\n    foreach ($message\
    \ as $letter) {\n        if (in_array($letter, $vowels)) {\n            $index\
    \ = array_search($letter, $vowels);\n            $index = ($index + 2) % 5;\n\
    \            $encoded[] = $vowels[$index];\n        } else {\n            $encoded[]\
    \ = $letter;\n        }\n    }\n    return strtoupper(implode('', $encoded));\n\
    }\n\necho encode('test') . PHP_EOL;\necho encode('This is a message') . PHP_EOL;",
  "    $vowels = ['a', 'e', 'i', 'o', 'u'];\n    $encoded = '';\n    for ($i = 0;\
    \ $i < strlen($message); $i++) {\n        $char = $message[$i];\n        if (in_array($char,\
    \ $vowels)) {\n            $encoded .= $vowels[(array_search($char, $vowels) +\
    \ 2) % 5];\n        } else if (ctype_upper($char)) {\n            $encoded .=\
    \ strtolower($char);\n        } else {\n            $encoded .= strtoupper($char);\n\
    \        }\n    }\n    return $encoded;\n}\n", "    $vowels = ['a', 'e', 'i',\
    \ 'o', 'u'];\n    $encoded = '';\n    for ($i = 0; $i < strlen($message); $i++)\
    \ {\n        $char = $message[$i];\n        if (ctype_alpha($char)) {\n      \
    \      if (in_array(strtolower($char), $vowels)) {\n                $encoded .=\
    \ $vowels[(array_search(strtolower($char), $vowels) + 2) % 5];\n            }\
    \ else {\n                $encoded .= $char;\n            }\n        } else {\n\
    \            $encoded .= $char;\n        }\n    }\n    return $encoded;\n}\n",
  "\t$vowels = array('a', 'e', 'i', 'o', 'u');\n\t$encoded = '';\n\tfor ($i = 0; $i\
    \ < strlen($message); $i++) {\n\t\tif (in_array($message[$i], $vowels)) {\n\t\t\
    \t$encoded .= $vowels[(array_search($message[$i], $vowels) + 2) % 5];\n\t\t} else\
    \ {\n\t\t\t$encoded .= strtoupper($message[$i]);\n\t\t}\n\t}\n\treturn $encoded;\n\
    }\n\necho encode('test') . \"\\n\";\necho encode('This is a message') . \"\\n\"\
    ;\n", "    $vowels = ['a', 'e', 'i', 'o', 'u'];\n    $encoded = '';\n    for ($i\
    \ = 0; $i < strlen($message); $i++) {\n        $char = $message[$i];\n       \
    \ if (in_array($char, $vowels)) {\n            $char = $vowels[(array_search($char,\
    \ $vowels) + 2) % 5];\n        }\n        $encoded .= strtoupper($char) === $char\
    \ ? strtolower($char) : strtoupper($char);\n    }\n    return $encoded;\n}\n\n\
    echo encode('test') . PHP_EOL;\necho encode('This is a message') . PHP_EOL;",
  "    $vowels = ['a', 'e', 'i', 'o', 'u'];\n    $encoded = '';\n    for ($i = 0;\
    \ $i < strlen($message); $i++) {\n        $char = $message[$i];\n        if (ctype_upper($char))\
    \ {\n            $char = strtolower($char);\n        } else {\n            $char\
    \ = strtoupper($char);\n        }\n        if (in_array($char, $vowels)) {\n \
    \           $char = $vowels[(array_search($char, $vowels) + 2) % 5];\n       \
    \ }\n        $encoded .= $char;\n    }\n    return $encoded;\n}\n", "\t$vowels\
    \ = ['a', 'e', 'i', 'o', 'u'];\n\t$message = strtolower($message);\n\t$encoded\
    \ = '';\n\tfor ($i = 0; $i < strlen($message); $i++) {\n\t\tif (in_array($message[$i],\
    \ $vowels)) {\n\t\t\t$encoded .= $vowels[(array_search($message[$i], $vowels)\
    \ + 2) % 5];\n\t\t} else {\n\t\t\t$encoded .= $message[$i];\n\t\t}\n\t}\n\treturn\
    \ strtoupper($encoded);\n}\n\necho encode('test') . \"\\n\";\necho encode('This\
    \ is a message') . \"\\n\";", "\t$vowels = array('a', 'e', 'i', 'o', 'u');\n\t\
    $new_message = '';\n\tfor ($i = 0; $i < strlen($message); $i++) {\n\t\t$char =\
    \ $message[$i];\n\t\tif (ctype_alpha($char)) {\n\t\t\tif (in_array($char, $vowels))\
    \ {\n\t\t\t\t$new_message .= $vowels[(array_search($char, $vowels) + 2) % 5];\n\
    \t\t\t} else {\n\t\t\t\t$new_message .= strtoupper($char);\n\t\t\t}\n\t\t} else\
    \ {\n\t\t\t$new_message .= $char;\n\t\t}\n\t}\n\treturn $new_message;\n}\n\necho\
    \ encode('test') . \"\\n\";\necho encode('This is a message') . \"\\n\";", "\t\
    $vowels = array('a', 'e', 'i', 'o', 'u');\n\t$encoded = '';\n\tfor ($i = 0; $i\
    \ < strlen($message); $i++) {\n\t\t$char = $message[$i];\n\t\tif (ctype_upper($char))\
    \ {\n\t\t\t$encoded .= strtolower($char);\n\t\t} elseif (ctype_lower($char)) {\n\
    \t\t\t$encoded .= strtoupper($char);\n\t\t} else {\n\t\t\t$encoded .= $char;\n\
    \t\t}\n\t}\n\tfor ($i = 0; $i < strlen($encoded); $i++) {\n\t\t$char = $encoded[$i];\n\
    \t\tif (in_array($char, $vowels)) {\n\t\t\t$index = array_search($char, $vowels);\n\
    \t\t\t$index = ($index + 2) % 5;\n\t\t\t$encoded[$i] = $vowels[$index];\n\t\t\
    }\n\t}\n\treturn $encoded;\n}\n\necho encode('test') . PHP_EOL;\necho encode('This\
    \ is a message') . PHP_EOL;", "  $vowels = ['a', 'e', 'i', 'o', 'u'];\n  $encoded\
    \ = '';\n  for ($i = 0; $i < strlen($message); $i++) {\n    $char = $message[$i];\n\
    \    if (in_array($char, $vowels)) {\n      $encoded .= $vowels[(array_search($char,\
    \ $vowels) + 2) % 5];\n    } else if (ctype_upper($char)) {\n      $encoded .=\
    \ strtolower($char);\n    } else {\n      $encoded .= strtoupper($char);\n   \
    \ }\n  }\n  return $encoded;\n}\n\necho encode('test') . PHP_EOL;\necho encode('This\
    \ is a message') . PHP_EOL;", "    $vowels = array('a', 'e', 'i', 'o', 'u');\n\
    \    $new_message = '';\n    for ($i = 0; $i < strlen($message); $i++) {\n   \
    \     $char = $message[$i];\n        if (ctype_upper($char)) {\n            $new_message\
    \ .= strtolower($char);\n        } elseif (ctype_lower($char)) {\n           \
    \ $new_message .= strtoupper($char);\n        } else {\n            $new_message\
    \ .= $char;\n        }\n    }\n    $message = $new_message;\n    for ($i = 0;\
    \ $i < strlen($message); $i++) {\n        $char = $message[$i];\n        if (in_array($char,\
    \ $vowels)) {\n            $index = array_search($char, $vowels);\n          \
    \  $new_index = ($index + 2) % 5;\n            $new_char = $vowels[$new_index];\n\
    \            $message[$i] = $new_char;\n        }\n    }\n    return $message;\n\
    }\n\necho encode('test') . PHP_EOL;\necho encode('This is a message') . PHP_EOL;",
  "\t$vowels = ['a', 'e', 'i', 'o', 'u'];\n\t$encoded = '';\n\tfor ($i = 0; $i < strlen($message);\
    \ $i++) {\n\t\t$char = $message[$i];\n\t\tif (in_array($char, $vowels)) {\n\t\t\
    \t$encoded .= $vowels[(array_search($char, $vowels) + 2) % 5];\n\t\t} else {\n\
    \t\t\t$encoded .= $char;\n\t\t}\n\t}\n\treturn strtoupper($encoded);\n}\n\necho\
    \ encode('test') . \"\\n\";\necho encode('This is a message') . \"\\n\";", " \
    \ $vowels = ['a', 'e', 'i', 'o', 'u'];\n  $encoded = '';\n  for ($i = 0; $i <\
    \ strlen($message); $i++) {\n    if (in_array($message[$i], $vowels)) {\n    \
    \  $encoded .= $vowels[(array_search($message[$i], $vowels) + 2) % 5];\n    }\
    \ else {\n      $encoded .= $message[$i];\n    }\n  }\n  return strtoupper($encoded);\n\
    }\n\necho encode('test') . PHP_EOL;\necho encode('This is a message') . PHP_EOL;",
  "    $vowels = ['a', 'e', 'i', 'o', 'u'];\n    $message = strtolower($message);\n\
    \    $encoded = '';\n    for ($i = 0; $i < strlen($message); $i++) {\n       \
    \ if (in_array($message[$i], $vowels)) {\n            $encoded .= $vowels[(array_search($message[$i],\
    \ $vowels) + 2) % 5];\n        } else {\n            $encoded .= $message[$i];\n\
    \        }\n    }\n    return strtoupper($encoded);\n}\n", "\t$vowels = array('a',\
    \ 'e', 'i', 'o', 'u');\n\t$newMessage = '';\n\tfor ($i = 0; $i < strlen($message);\
    \ $i++) {\n\t\tif (ctype_upper($message[$i])) {\n\t\t\t$newMessage .= strtolower($message[$i]);\n\
    \t\t} elseif (ctype_lower($message[$i])) {\n\t\t\t$newMessage .= strtoupper($message[$i]);\n\
    \t\t} else {\n\t\t\t$newMessage .= $message[$i];\n\t\t}\n\t}\n\tfor ($i = 0; $i\
    \ < strlen($newMessage); $i++) {\n\t\tif (in_array($newMessage[$i], $vowels))\
    \ {\n\t\t\t$newMessage[$i] = $vowels[(array_search($newMessage[$i], $vowels) +\
    \ 2) % 5];\n\t\t}\n\t}\n\treturn $newMessage;\n}\n\necho encode('test');\necho\
    \ \"\\n\";\necho encode('This is a message');\necho \"\\n\";", "    $vowels =\
    \ ['a', 'e', 'i', 'o', 'u'];\n    $message = strtolower($message);\n    $encoded\
    \ = '';\n    for ($i = 0; $i < strlen($message); $i++) {\n        if (in_array($message[$i],\
    \ $vowels)) {\n            $encoded .= $vowels[(array_search($message[$i], $vowels)\
    \ + 2) % 5];\n        } else {\n            $encoded .= $message[$i];\n      \
    \  }\n    }\n    return strtoupper($encoded);\n}\n", "\t$vowels = array('a', 'e',\
    \ 'i', 'o', 'u');\n\t$encoded = '';\n\tfor ($i = 0; $i < strlen($message); $i++)\
    \ {\n\t\t$char = $message[$i];\n\t\tif (ctype_upper($char)) {\n\t\t\t$encoded\
    \ .= strtolower($char);\n\t\t} elseif (ctype_lower($char)) {\n\t\t\t$encoded .=\
    \ strtoupper($char);\n\t\t} else {\n\t\t\t$encoded .= $char;\n\t\t}\n\t}\n\tfor\
    \ ($i = 0; $i < strlen($encoded); $i++) {\n\t\t$char = $encoded[$i];\n\t\tif (in_array($char,\
    \ $vowels)) {\n\t\t\t$encoded[$i] = $vowels[(array_search($char, $vowels) + 2)\
    \ % 5];\n\t\t}\n\t}\n\treturn $encoded;\n}\n\necho encode('test') . \"\\n\";\n\
    echo encode('This is a message') . \"\\n\";", "\t$alphabet = 'abcdefghijklmnopqrstuvwxyz';\n\
    \t$vowels = 'aeiou';\n\t$encoded = '';\n\tfor ($i = 0; $i < strlen($message);\
    \ $i++) {\n\t\t$char = $message[$i];\n\t\tif (ctype_upper($char)) {\n\t\t\t$char\
    \ = strtolower($char);\n\t\t}\n\t\tif (strpos($vowels, $char) !== false) {\n\t\
    \t\t$char = $alphabet[(strpos($alphabet, $char) + 2) % 26];\n\t\t}\n\t\t$encoded\
    \ .= $char;\n\t}\n\treturn $encoded;\n}\n", "    $vowels = array('a', 'e', 'i',\
    \ 'o', 'u');\n    $encoded = '';\n    for ($i = 0; $i < strlen($message); $i++)\
    \ {\n        $char = $message[$i];\n        if (ctype_upper($char)) {\n      \
    \      $char = strtolower($char);\n        } else {\n            $char = strtoupper($char);\n\
    \        }\n        if (in_array($char, $vowels)) {\n            $char = $vowels[(array_search($char,\
    \ $vowels) + 2) % 5];\n        }\n        $encoded .= $char;\n    }\n    return\
    \ $encoded;\n}\n", "    $vowels = array('a', 'e', 'i', 'o', 'u');\n    $new_message\
    \ = '';\n    for ($i = 0; $i < strlen($message); $i++) {\n        $letter = $message[$i];\n\
    \        if (ctype_upper($letter)) {\n            $new_message .= strtolower($letter);\n\
    \        } else if (ctype_lower($letter)) {\n            $new_message .= strtoupper($letter);\n\
    \        } else {\n            $new_message .= $letter;\n        }\n    }\n  \
    \  for ($i = 0; $i < strlen($new_message); $i++) {\n        $letter = $new_message[$i];\n\
    \        if (in_array($letter, $vowels)) {\n            $new_message[$i] = $vowels[(array_search($letter,\
    \ $vowels) + 2) % 5];\n        }\n    }\n    return $new_message;\n}\n", "   \
    \ $vowels = array('a', 'e', 'i', 'o', 'u');\n    $message = strtolower($message);\n\
    \    $message = str_split($message);\n    $result = '';\n    foreach ($message\
    \ as $char) {\n        if (in_array($char, $vowels)) {\n            $index = array_search($char,\
    \ $vowels);\n            $index = ($index + 2) % 5;\n            $result .= $vowels[$index];\n\
    \        } else {\n            $result .= $char;\n        }\n    }\n    return\
    \ $result;\n}\n", "\t$vowels = array('a', 'e', 'i', 'o', 'u');\n\t$encoded = '';\n\
    \tfor ($i = 0; $i < strlen($message); $i++) {\n\t\t$char = $message[$i];\n\t\t\
    if (ctype_upper($char)) {\n\t\t\t$encoded .= strtolower($char);\n\t\t} else if\
    \ (ctype_lower($char)) {\n\t\t\t$encoded .= strtoupper($char);\n\t\t} else {\n\
    \t\t\t$encoded .= $char;\n\t\t}\n\t}\n\tfor ($i = 0; $i < strlen($encoded); $i++)\
    \ {\n\t\t$char = $encoded[$i];\n\t\tif (in_array($char, $vowels)) {\n\t\t\t$encoded[$i]\
    \ = $vowels[(array_search($char, $vowels) + 2) % 5];\n\t\t}\n\t}\n\treturn $encoded;\n\
    }\n", "    $vowels = ['a', 'e', 'i', 'o', 'u'];\n    $encoded = '';\n    for ($i\
    \ = 0; $i < strlen($message); $i++) {\n        $char = $message[$i];\n       \
    \ if (ctype_upper($char)) {\n            $encoded .= strtolower($char);\n    \
    \    } elseif (ctype_lower($char)) {\n            $encoded .= strtoupper($char);\n\
    \        } else {\n            $encoded .= $char;\n        }\n    }\n    for ($i\
    \ = 0; $i < strlen($encoded); $i++) {\n        $char = $encoded[$i];\n       \
    \ if (in_array($char, $vowels)) {\n            $encoded[$i] = $vowels[(array_search($char,\
    \ $vowels) + 2) % 5];\n        }\n    }\n    return $encoded;\n}\n\necho encode('test')\
    \ . PHP_EOL;\necho encode('This is a message') . PHP_EOL;", "    $vowels = ['a',\
    \ 'e', 'i', 'o', 'u'];\n    $message = strtolower($message);\n    $encoded = '';\n\
    \    for ($i = 0; $i < strlen($message); $i++) {\n        if (in_array($message[$i],\
    \ $vowels)) {\n            $encoded .= $vowels[($vowels[array_search($message[$i],\
    \ $vowels)] + 2) % 5];\n        } else {\n            $encoded .= $message[$i];\n\
    \        }\n    }\n    return $encoded;\n}\n", "\t$vowels = array('a', 'e', 'i',\
    \ 'o', 'u');\n\t$message = strtolower($message);\n\t$message = str_split($message);\n\
    \tforeach ($message as $key => $value) {\n\t\tif (in_array($value, $vowels)) {\n\
    \t\t\t$message[$key] = $vowels[array_search($value, $vowels) + 2];\n\t\t}\n\t\
    }\n\treturn strtoupper(implode($message));\n}\n\necho encode('test');\necho \"\
    \\n\";\necho encode('This is a message');\necho \"\\n\";", "\t$vowels = array('a',\
    \ 'e', 'i', 'o', 'u');\n\t$message = strtolower($message);\n\t$message = str_split($message);\n\
    \t$newMessage = array();\n\tforeach ($message as $letter) {\n\t\tif (in_array($letter,\
    \ $vowels)) {\n\t\t\t$key = array_search($letter, $vowels);\n\t\t\tif ($key ==\
    \ 4) {\n\t\t\t\t$key = -1;\n\t\t\t}\n\t\t\t$newMessage[] = $vowels[$key + 2];\n\
    \t\t} else {\n\t\t\t$newMessage[] = $letter;\n\t\t}\n\t}\n\treturn strtoupper(implode('',\
    \ $newMessage));\n}\n\necho encode('test') . PHP_EOL;\necho encode('This is a\
    \ message') . PHP_EOL;", "\t$vowels = array('a', 'e', 'i', 'o', 'u');\n\t$encoded\
    \ = '';\n\tfor ($i = 0; $i < strlen($message); $i++) {\n\t\t$char = $message[$i];\n\
    \t\tif (ctype_alpha($char)) {\n\t\t\tif (ctype_upper($char)) {\n\t\t\t\t$char\
    \ = strtolower($char);\n\t\t\t} else {\n\t\t\t\t$char = strtoupper($char);\n\t\
    \t\t}\n\t\t\tif (in_array($char, $vowels)) {\n\t\t\t\t$index = array_search($char,\
    \ $vowels);\n\t\t\t\t$char = $vowels[($index + 2) % 5];\n\t\t\t}\n\t\t}\n\t\t\
    $encoded .= $char;\n\t}\n\treturn $encoded;\n}\n\necho encode('test') . \"\\n\"\
    ;\necho encode('This is a message') . \"\\n\";", "    $vowels = array('a', 'e',\
    \ 'i', 'o', 'u');\n    $encoded = '';\n    for ($i = 0; $i < strlen($message);\
    \ $i++) {\n        $char = $message[$i];\n        if (in_array($char, $vowels))\
    \ {\n            $encoded .= $vowels[(array_search($char, $vowels) + 2) % 5];\n\
    \        } else {\n            $encoded .= $char;\n        }\n    }\n    return\
    \ strtoupper($encoded);\n}\n", "\t$vowels = array('a', 'e', 'i', 'o', 'u');\n\t\
    $message = strtolower($message);\n\t$message = str_split($message);\n\t$newMessage\
    \ = '';\n\tforeach ($message as $letter) {\n\t\tif (in_array($letter, $vowels))\
    \ {\n\t\t\t$key = array_search($letter, $vowels);\n\t\t\t$key = ($key + 2) % 5;\n\
    \t\t\t$newMessage .= $vowels[$key];\n\t\t} else {\n\t\t\t$newMessage .= $letter;\n\
    \t\t}\n\t}\n\treturn strtoupper($newMessage);\n}\n\necho encode('test');\necho\
    \ \"\\n\";\necho encode('This is a message');\necho \"\\n\";", "    $vowels =\
    \ ['a', 'e', 'i', 'o', 'u'];\n    $newMessage = '';\n    for ($i = 0; $i < strlen($message);\
    \ $i++) {\n        $char = $message[$i];\n        if (ctype_upper($char)) {\n\
    \            $newMessage .= strtolower($char);\n        } elseif (ctype_lower($char))\
    \ {\n            $newMessage .= strtoupper($char);\n        } else {\n       \
    \     $newMessage .= $char;\n        }\n    }\n    for ($i = 0; $i < strlen($newMessage);\
    \ $i++) {\n        $char = $newMessage[$i];\n        if (in_array($char, $vowels))\
    \ {\n            $newMessage[$i] = $vowels[array_search($char, $vowels) + 2];\n\
    \        }\n    }\n    return $newMessage;\n}\n\necho encode('test') . PHP_EOL;\n\
    echo encode('This is a message') . PHP_EOL;", "\t$vowels = array('a', 'e', 'i',\
    \ 'o', 'u');\n\t$message = strtolower($message);\n\t$newMessage = '';\n\tfor ($i\
    \ = 0; $i < strlen($message); $i++) {\n\t\tif (in_array($message[$i], $vowels))\
    \ {\n\t\t\t$newMessage .= $vowels[(array_search($message[$i], $vowels) + 2) %\
    \ 5];\n\t\t} else {\n\t\t\t$newMessage .= $message[$i];\n\t\t}\n\t}\n\treturn\
    \ strtoupper($newMessage);\n}\n\necho encode('test') . PHP_EOL;\necho encode('This\
    \ is a message') . PHP_EOL;", "    $alphabet = 'abcdefghijklmnopqrstuvwxyz';\n\
    \    $vowels = 'aeiou';\n    $encoded = '';\n    for ($i = 0; $i < strlen($message);\
    \ $i++) {\n        $char = strtolower($message[$i]);\n        if (strpos($alphabet,\
    \ $char) !== false) {\n            if (strpos($vowels, $char) !== false) {\n \
    \               $encoded .= $alphabet[(strpos($alphabet, $char) + 2) % 26];\n\
    \            } else {\n                $encoded .= $alphabet[strpos($alphabet,\
    \ $char)];\n            }\n        } else {\n            $encoded .= $message[$i];\n\
    \        }\n    }\n    return $encoded;\n}\n", "\t$vowels = array('a', 'e', 'i',\
    \ 'o', 'u');\n\t$newMessage = '';\n\tfor ($i = 0; $i < strlen($message); $i++)\
    \ {\n\t\t$letter = $message[$i];\n\t\tif (ctype_upper($letter)) {\n\t\t\t$newMessage\
    \ .= strtolower($letter);\n\t\t} else if (ctype_lower($letter)) {\n\t\t\t$newMessage\
    \ .= strtoupper($letter);\n\t\t} else {\n\t\t\t$newMessage .= $letter;\n\t\t}\n\
    \t}\n\tfor ($i = 0; $i < strlen($newMessage); $i++) {\n\t\t$letter = $newMessage[$i];\n\
    \t\tif (in_array($letter, $vowels)) {\n\t\t\t$newMessage[$i] = $vowels[(array_search($letter,\
    \ $vowels) + 2) % 5];\n\t\t}\n\t}\n\treturn $newMessage;\n}\n\necho encode('test')\
    \ . \"\\n\";\necho encode('This is a message') . \"\\n\";", "\t$vowels = array('a',\
    \ 'e', 'i', 'o', 'u');\n\t$encoded = '';\n\tfor ($i = 0; $i < strlen($message);\
    \ $i++) {\n\t\tif (in_array($message[$i], $vowels)) {\n\t\t\t$encoded .= $vowels[(array_search($message[$i],\
    \ $vowels) + 2) % 5];\n\t\t} else {\n\t\t\t$encoded .= $message[$i];\n\t\t}\n\t\
    }\n\treturn strtoupper($encoded);\n}\n\necho encode('test') . \"\\n\";\necho encode('This\
    \ is a message') . \"\\n\";", "    $vowels = ['a', 'e', 'i', 'o', 'u'];\n    $newMessage\
    \ = '';\n    for ($i = 0; $i < strlen($message); $i++) {\n        $char = $message[$i];\n\
    \        if (in_array($char, $vowels)) {\n            $newMessage .= $vowels[(array_search($char,\
    \ $vowels) + 2) % 5];\n        } else {\n            $newMessage .= $char;\n \
    \       }\n    }\n    return strtoupper($newMessage);\n}\n", "    $alphabet =\
    \ 'abcdefghijklmnopqrstuvwxyz';\n    $vowels = 'aeiou';\n    $encoded = '';\n\
    \    for ($i = 0; $i < strlen($message); $i++) {\n        $char = strtolower($message[$i]);\n\
    \        if (strpos($alphabet, $char) !== false) {\n            $index = strpos($alphabet,\
    \ $char);\n            if (strpos($vowels, $char) !== false) {\n             \
    \   $index += 2;\n                if ($index > 25) {\n                    $index\
    \ -= 26;\n                }\n            }\n            $encoded .= $alphabet[$index];\n\
    \        } else {\n            $encoded .= $message[$i];\n        }\n    }\n \
    \   return $encoded;\n}\n\necho encode('test') . \"\\n\";\necho encode('This is\
    \ a message') . \"\\n\";", "\t$vowels = ['a', 'e', 'i', 'o', 'u'];\n\t$message\
    \ = strtolower($message);\n\t$encoded = '';\n\tfor ($i = 0; $i < strlen($message);\
    \ $i++) {\n\t\tif (in_array($message[$i], $vowels)) {\n\t\t\t$encoded .= $vowels[(array_search($message[$i],\
    \ $vowels) + 2) % 5];\n\t\t} else {\n\t\t\t$encoded .= $message[$i];\n\t\t}\n\t\
    }\n\treturn strtoupper($encoded);\n}\n\necho encode('test') . \"\\n\";\necho encode('This\
    \ is a message') . \"\\n\";", "    $vowels = ['a', 'e', 'i', 'o', 'u'];\n    $encoded\
    \ = '';\n    for ($i = 0; $i < strlen($message); $i++) {\n        $char = $message[$i];\n\
    \        if (in_array($char, $vowels)) {\n            $encoded .= $vowels[(array_search($char,\
    \ $vowels) + 2) % 5];\n        } else {\n            $encoded .= $char;\n    \
    \    }\n    }\n    return strtoupper($encoded);\n}\n", "\t$alphabet = array('a',\
    \ 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q',\
    \ 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z');\n\t$vowels = array('a', 'e', 'i',\
    \ 'o', 'u');\n\t$new_message = '';\n\tfor ($i = 0; $i < strlen($message); $i++)\
    \ {\n\t\tif (in_array($message[$i], $vowels)) {\n\t\t\t$new_message .= $alphabet[array_search($message[$i],\
    \ $alphabet) + 2];\n\t\t} else {\n\t\t\t$new_message .= $message[$i];\n\t\t}\n\
    \t}\n\treturn strtoupper($new_message);\n}\n\necho encode('test') . \"\\n\";\n\
    echo encode('This is a message') . \"\\n\";", "\t$vowels = array('a', 'e', 'i',\
    \ 'o', 'u');\n\t$message = strtolower($message);\n\t$message = str_split($message);\n\
    \t$encoded = array();\n\tforeach ($message as $letter) {\n\t\tif (in_array($letter,\
    \ $vowels)) {\n\t\t\t$index = array_search($letter, $vowels);\n\t\t\t$index =\
    \ $index + 2;\n\t\t\tif ($index >= count($vowels)) {\n\t\t\t\t$index = $index\
    \ - count($vowels);\n\t\t\t}\n\t\t\t$letter = $vowels[$index];\n\t\t}\n\t\t$encoded[]\
    \ = strtoupper($letter);\n\t}\n\treturn implode('', $encoded);\n}\n\necho encode('test')\
    \ . PHP_EOL;\necho encode('This is a message') . PHP_EOL;", "\t$vowels = array('a',\
    \ 'e', 'i', 'o', 'u');\n\t$encoded = '';\n\tfor ($i = 0; $i < strlen($message);\
    \ $i++) {\n\t\t$char = $message[$i];\n\t\tif (ctype_upper($char)) {\n\t\t\t$encoded\
    \ .= strtolower($char);\n\t\t} elseif (ctype_lower($char)) {\n\t\t\t$encoded .=\
    \ strtoupper($char);\n\t\t} else {\n\t\t\t$encoded .= $char;\n\t\t}\n\t}\n\tfor\
    \ ($i = 0; $i < strlen($encoded); $i++) {\n\t\t$char = $encoded[$i];\n\t\tif (in_array($char,\
    \ $vowels)) {\n\t\t\t$encoded[$i] = $vowels[(array_search($char, $vowels) + 2)\
    \ % 5];\n\t\t}\n\t}\n\treturn $encoded;\n}\n\necho encode('test') . \"\\n\";\n\
    echo encode('This is a message') . \"\\n\";", "    $vowels = array('a', 'e', 'i',\
    \ 'o', 'u');\n    $message = strtolower($message);\n    $message = str_split($message);\n\
    \    foreach ($message as $key => $value) {\n        if (in_array($value, $vowels))\
    \ {\n            $message[$key] = $vowels[array_search($value, $vowels) + 2];\n\
    \        }\n    }\n    return strtoupper(implode($message));\n}\n\necho encode('test');\n\
    echo \"\\n\";\necho encode('This is a message');\necho \"\\n\";", "\t$vowels =\
    \ array('a', 'e', 'i', 'o', 'u');\n\t$encoded = '';\n\tfor ($i = 0; $i < strlen($message);\
    \ $i++) {\n\t\t$char = $message[$i];\n\t\tif (ctype_upper($char)) {\n\t\t\t$encoded\
    \ .= strtolower($char);\n\t\t} else if (ctype_lower($char)) {\n\t\t\t$encoded\
    \ .= strtoupper($char);\n\t\t} else {\n\t\t\t$encoded .= $char;\n\t\t}\n\t}\n\t\
    for ($i = 0; $i < strlen($encoded); $i++) {\n\t\t$char = $encoded[$i];\n\t\tif\
    \ (in_array($char, $vowels)) {\n\t\t\t$encoded[$i] = $vowels[(array_search($char,\
    \ $vowels) + 2) % 5];\n\t\t}\n\t}\n\treturn $encoded;\n}\n", "    $vowels = ['a',\
    \ 'e', 'i', 'o', 'u'];\n    $message = strtolower($message);\n    $newMessage\
    \ = '';\n    for ($i = 0; $i < strlen($message); $i++) {\n        if (in_array($message[$i],\
    \ $vowels)) {\n            $newMessage .= $vowels[(array_search($message[$i],\
    \ $vowels) + 2) % 5];\n        } else {\n            $newMessage .= $message[$i];\n\
    \        }\n    }\n    return strtoupper($newMessage);\n}\n\necho encode('test')\
    \ . PHP_EOL;\necho encode('This is a message') . PHP_EOL;", "\t$message = strtolower($message);\n\
    \t$vowels = array('a', 'e', 'i', 'o', 'u');\n\t$newMessage = '';\n\tfor ($i =\
    \ 0; $i < strlen($message); $i++) {\n\t\tif (in_array($message[$i], $vowels))\
    \ {\n\t\t\t$newMessage .= $vowels[(array_search($message[$i], $vowels) + 2) %\
    \ 5];\n\t\t} else {\n\t\t\t$newMessage .= $message[$i];\n\t\t}\n\t}\n\treturn\
    \ $newMessage;\n}\n", "\t$vowels = ['a', 'e', 'i', 'o', 'u'];\n\t$encoded = '';\n\
    \tfor ($i = 0; $i < strlen($message); $i++) {\n\t\t$char = $message[$i];\n\t\t\
    if (in_array($char, $vowels)) {\n\t\t\t$encoded .= $vowels[(array_search($char,\
    \ $vowels) + 2) % 5];\n\t\t} else {\n\t\t\t$encoded .= $char;\n\t\t}\n\t}\n\t\
    return strtoupper($encoded);\n}\n\necho encode('test') . \"\\n\";\necho encode('This\
    \ is a message') . \"\\n\";", "\t$vowels = array('a', 'e', 'i', 'o', 'u');\n\t\
    $encoded = '';\n\tfor ($i = 0; $i < strlen($message); $i++) {\n\t\t$char = $message[$i];\n\
    \t\tif (ctype_upper($char)) {\n\t\t\t$encoded .= strtolower($char);\n\t\t} else\
    \ if (ctype_lower($char)) {\n\t\t\t$encoded .= strtoupper($char);\n\t\t} else\
    \ {\n\t\t\t$encoded .= $char;\n\t\t}\n\t}\n\tfor ($i = 0; $i < strlen($encoded);\
    \ $i++) {\n\t\t$char = $encoded[$i];\n\t\tif (in_array($char, $vowels)) {\n\t\t\
    \t$encoded[$i] = $vowels[(array_search($char, $vowels) + 2) % 5];\n\t\t}\n\t}\n\
    \treturn $encoded;\n}\n\necho encode('test') . \"\\n\";\necho encode('This is\
    \ a message') . \"\\n\";", "    $vowels = array('a', 'e', 'i', 'o', 'u');\n  \
    \  $encoded = '';\n    for ($i = 0; $i < strlen($message); $i++) {\n        $char\
    \ = strtolower($message[$i]);\n        if (in_array($char, $vowels)) {\n     \
    \       $index = array_search($char, $vowels);\n            $encoded .= $vowels[($index\
    \ + 2) % 5];\n        } else {\n            $encoded .= $char;\n        }\n  \
    \  }\n    return $encoded;\n}\n", "\t$vowels = ['a', 'e', 'i', 'o', 'u'];\n\t\
    $message = strtolower($message);\n\t$encoded = '';\n\tfor ($i = 0; $i < strlen($message);\
    \ $i++) {\n\t\tif (in_array($message[$i], $vowels)) {\n\t\t\t$encoded .= $vowels[(array_search($message[$i],\
    \ $vowels) + 2) % 5];\n\t\t} else {\n\t\t\t$encoded .= $message[$i];\n\t\t}\n\t\
    }\n\treturn strtoupper($encoded);\n}\n", "\t$vowels = array('a', 'e', 'i', 'o',\
    \ 'u');\n\t$message = strtolower($message);\n\t$encoded = '';\n\tfor ($i = 0;\
    \ $i < strlen($message); $i++) {\n\t\t$char = $message[$i];\n\t\tif (in_array($char,\
    \ $vowels)) {\n\t\t\t$encoded .= $vowels[(array_search($char, $vowels) + 2) %\
    \ 5];\n\t\t} else {\n\t\t\t$encoded .= $char;\n\t\t}\n\t}\n\treturn strtoupper($encoded);\n\
    }\n", "\t$vowels = ['a', 'e', 'i', 'o', 'u'];\n\t$encoded = '';\n\tfor ($i = 0;\
    \ $i < strlen($message); $i++) {\n\t\t$char = $message[$i];\n\t\tif (in_array($char,\
    \ $vowels)) {\n\t\t\t$encoded .= $vowels[(array_search($char, $vowels) + 2) %\
    \ 5];\n\t\t} else {\n\t\t\t$encoded .= $char;\n\t\t}\n\t}\n\treturn strtoupper($encoded);\n\
    }\n\necho encode('test') . \"\\n\";\necho encode('This is a message') . \"\\n\"\
    ;", "    $vowels = ['a', 'e', 'i', 'o', 'u'];\n    $message = strtolower($message);\n\
    \    $encoded = '';\n    for ($i = 0; $i < strlen($message); $i++) {\n       \
    \ if (in_array($message[$i], $vowels)) {\n            $encoded .= $vowels[(array_search($message[$i],\
    \ $vowels) + 2) % 5];\n        } else {\n            $encoded .= $message[$i];\n\
    \        }\n    }\n    return strtoupper($encoded);\n}\n", "    $vowels = ['a',\
    \ 'e', 'i', 'o', 'u'];\n    $encoded = '';\n    for ($i = 0; $i < strlen($message);\
    \ $i++) {\n        $char = $message[$i];\n        if (in_array($char, $vowels))\
    \ {\n            $encoded .= $vowels[(array_search($char, $vowels) + 2) % 5];\n\
    \        } else {\n            $encoded .= $char;\n        }\n    }\n    return\
    \ strtoupper($encoded);\n}\n\necho encode('test') . PHP_EOL;\necho encode('This\
    \ is a message') . PHP_EOL;", "    $vowels = array('a', 'e', 'i', 'o', 'u');\n\
    \    $encodedMessage = '';\n    for ($i = 0; $i < strlen($message); $i++) {\n\
    \        $char = $message[$i];\n        if (in_array($char, $vowels)) {\n    \
    \        $index = array_search($char, $vowels);\n            $index = ($index\
    \ + 2) % 5;\n            $encodedMessage .= $vowels[$index];\n        } else {\n\
    \            $encodedMessage .= $char;\n        }\n    }\n    return $encodedMessage;\n\
    }\n", "\t$vowels = array('a', 'e', 'i', 'o', 'u');\n\t$encoded = '';\n\tfor ($i\
    \ = 0; $i < strlen($message); $i++) {\n\t\t$char = $message[$i];\n\t\tif (ctype_upper($char))\
    \ {\n\t\t\t$encoded .= strtolower($char);\n\t\t} elseif (ctype_lower($char)) {\n\
    \t\t\t$encoded .= strtoupper($char);\n\t\t} else {\n\t\t\t$encoded .= $char;\n\
    \t\t}\n\t}\n\tfor ($i = 0; $i < strlen($encoded); $i++) {\n\t\t$char = $encoded[$i];\n\
    \t\tif (in_array($char, $vowels)) {\n\t\t\t$encoded[$i] = $vowels[(array_search($char,\
    \ $vowels) + 2) % 5];\n\t\t}\n\t}\n\treturn $encoded;\n}\n\necho encode('test')\
    \ . PHP_EOL;\necho encode('This is a message') . PHP_EOL;", "    $vowels = ['a',\
    \ 'e', 'i', 'o', 'u'];\n    $encoded = '';\n    for ($i = 0; $i < strlen($message);\
    \ $i++) {\n        $char = $message[$i];\n        if (in_array($char, $vowels))\
    \ {\n            $encoded .= $vowels[(array_search($char, $vowels) + 2) % 5];\n\
    \        } else {\n            $encoded .= $char;\n        }\n    }\n    return\
    \ strtoupper($encoded);\n}\n\necho encode('test') . PHP_EOL;\necho encode('This\
    \ is a message') . PHP_EOL;", "    $vowels = ['a', 'e', 'i', 'o', 'u'];\n    $encoded\
    \ = '';\n    for ($i = 0; $i < strlen($message); $i++) {\n        $char = $message[$i];\n\
    \        if (in_array($char, $vowels)) {\n            $encoded .= $vowels[(array_search($char,\
    \ $vowels) + 2) % 5];\n        } else {\n            $encoded .= $char;\n    \
    \    }\n    }\n    return strtoupper($encoded);\n}\n", "\t$vowels = ['a', 'e',\
    \ 'i', 'o', 'u'];\n\t$newMessage = '';\n\tfor ($i = 0; $i < strlen($message);\
    \ $i++) {\n\t\t$char = $message[$i];\n\t\tif (in_array($char, $vowels)) {\n\t\t\
    \t$newMessage .= $vowels[array_search($char, $vowels) + 2];\n\t\t} else {\n\t\t\
    \t$newMessage .= $char;\n\t\t}\n\t}\n\treturn strtoupper($newMessage);\n}\n",
  "\t$message = strtolower($message);\n\t$vowels = array('a', 'e', 'i', 'o', 'u');\n\
    \t$encoded = '';\n\tfor ($i = 0; $i < strlen($message); $i++) {\n\t\tif (in_array($message[$i],\
    \ $vowels)) {\n\t\t\t$encoded .= $vowels[(array_search($message[$i], $vowels)\
    \ + 2) % 5];\n\t\t} else {\n\t\t\t$encoded .= $message[$i];\n\t\t}\n\t}\n\treturn\
    \ strtoupper($encoded);\n}\n\necho encode('test') . \"\\n\";\necho encode('This\
    \ is a message') . \"\\n\";", "    $vowels = ['a', 'e', 'i', 'o', 'u'];\n    $encoded\
    \ = '';\n    for ($i = 0; $i < strlen($message); $i++) {\n        $char = $message[$i];\n\
    \        if (ctype_upper($char)) {\n            $encoded .= strtolower($char);\n\
    \        } else if (ctype_lower($char)) {\n            $encoded .= strtoupper($char);\n\
    \        } else {\n            $encoded .= $char;\n        }\n    }\n    for ($i\
    \ = 0; $i < strlen($encoded); $i++) {\n        $char = $encoded[$i];\n       \
    \ if (in_array($char, $vowels)) {\n            $index = array_search($char, $vowels);\n\
    \            $index += 2;\n            if ($index > 4) {\n                $index\
    \ -= 5;\n            }\n            $encoded[$i] = $vowels[$index];\n        }\n\
    \    }\n    return $encoded;\n}\n\necho encode('test') . PHP_EOL;\necho encode('This\
    \ is a message') . PHP_EOL;", "    $vowels = ['a', 'e', 'i', 'o', 'u'];\n    $encoded\
    \ = '';\n    for ($i = 0; $i < strlen($message); $i++) {\n        $char = $message[$i];\n\
    \        if (in_array($char, $vowels)) {\n            $encoded .= $vowels[(array_search($char,\
    \ $vowels) + 2) % 5];\n        } else {\n            $encoded .= $char;\n    \
    \    }\n    }\n    return strtoupper($encoded);\n}\n", "\t$alphabet = array('a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z');\n\
    \t$vowels = array('a','e','i','o','u');\n\t$message = strtolower($message);\n\t\
    $encoded = '';\n\tfor ($i=0; $i < strlen($message); $i++) { \n\t\tif (in_array($message[$i],\
    \ $vowels)) {\n\t\t\t$index = array_search($message[$i], $alphabet);\n\t\t\t$encoded\
    \ .= $alphabet[$index+2];\n\t\t} else {\n\t\t\t$encoded .= $message[$i];\n\t\t\
    }\n\t}\n\treturn strtoupper($encoded);\n}\n\necho encode('test');\necho \"\\n\"\
    ;\necho encode('This is a message');\necho \"\\n\";\n", "    $vowels = ['a', 'e',\
    \ 'i', 'o', 'u'];\n    $newMessage = '';\n    for ($i = 0; $i < strlen($message);\
    \ $i++) {\n        $char = $message[$i];\n        if (in_array($char, $vowels))\
    \ {\n            $newMessage .= $vowels[(array_search($char, $vowels) + 2) % 5];\n\
    \        } else {\n            $newMessage .= $char;\n        }\n    }\n    return\
    \ strtoupper($newMessage);\n}\n\necho encode('test');\necho \"\\n\";\necho encode('This\
    \ is a message');\necho \"\\n\";", "    $vowels = ['a', 'e', 'i', 'o', 'u'];\n\
    \    $encoded = '';\n    for ($i = 0; $i < strlen($message); $i++) {\n       \
    \ $char = $message[$i];\n        if (in_array($char, $vowels)) {\n           \
    \ $index = array_search($char, $vowels);\n            $encoded .= $vowels[($index\
    \ + 2) % 5];\n        } else {\n            $encoded .= $char;\n        }\n  \
    \  }\n    return strtoupper($encoded);\n}\n\necho encode('test');\necho \"\\n\"\
    ;\necho encode('This is a message');\necho \"\\n\";", "\t$vowels = ['a', 'e',\
    \ 'i', 'o', 'u'];\n\t$encoded = '';\n\tfor ($i = 0; $i < strlen($message); $i++)\
    \ {\n\t\t$char = $message[$i];\n\t\tif (in_array($char, $vowels)) {\n\t\t\t$encoded\
    \ .= $vowels[(array_search($char, $vowels) + 2) % 5];\n\t\t} else {\n\t\t\t$encoded\
    \ .= $char;\n\t\t}\n\t}\n\treturn strtoupper($encoded);\n}\n\necho encode('test')\
    \ . PHP_EOL;\necho encode('This is a message') . PHP_EOL;", "    $vowels = ['a',\
    \ 'e', 'i', 'o', 'u'];\n    $message = strtolower($message);\n    $encoded = '';\n\
    \    for ($i = 0; $i < strlen($message); $i++) {\n        if (in_array($message[$i],\
    \ $vowels)) {\n            $encoded .= $vowels[(array_search($message[$i], $vowels)\
    \ + 2) % 5];\n        } else {\n            $encoded .= $message[$i];\n      \
    \  }\n    }\n    return strtoupper($encoded);\n}\n", "    $vowels = ['a', 'e',\
    \ 'i', 'o', 'u'];\n    $message = strtolower($message);\n    $message = str_split($message);\n\
    \    $encoded = [];\n    foreach ($message as $letter) {\n        if (in_array($letter,\
    \ $vowels)) {\n            $index = array_search($letter, $vowels);\n        \
    \    $encoded[] = $vowels[($index + 2) % 5];\n        } else {\n            $encoded[]\
    \ = $letter;\n        }\n    }\n    return strtoupper(implode('', $encoded));\n\
    }\n", "    $vowels = array('a', 'e', 'i', 'o', 'u');\n    $message = strtolower($message);\n\
    \    $encoded = '';\n    for ($i = 0; $i < strlen($message); $i++) {\n       \
    \ if (in_array($message[$i], $vowels)) {\n            $encoded .= chr(ord($message[$i])\
    \ + 2);\n        } else {\n            $encoded .= $message[$i];\n        }\n\
    \    }\n    return strtoupper($encoded);\n}\n\necho encode('test') . \"\\n\";\n\
    echo encode('This is a message') . \"\\n\";", "    $vowels = ['a', 'e', 'i', 'o',\
    \ 'u'];\n    $message = strtolower($message);\n    $message = str_split($message);\n\
    \    for ($i = 0; $i < count($message); $i++) {\n        if (in_array($message[$i],\
    \ $vowels)) {\n            $message[$i] = $vowels[array_search($message[$i], $vowels)\
    \ + 2];\n        }\n    }\n    $message = implode($message);\n    $message = strtoupper($message);\n\
    \    return $message;\n}\n", "\t$vowels = array('a', 'e', 'i', 'o', 'u');\n\t\
    $newMessage = '';\n\tfor ($i = 0; $i < strlen($message); $i++) {\n\t\tif (in_array($message[$i],\
    \ $vowels)) {\n\t\t\t$newMessage .= $vowels[array_search($message[$i], $vowels)\
    \ + 2];\n\t\t} else {\n\t\t\t$newMessage .= $message[$i];\n\t\t}\n\t}\n\treturn\
    \ strtoupper($newMessage);\n}\necho encode('test');\necho encode('This is a message');",
  "\t$vowels = array('a', 'e', 'i', 'o', 'u');\n\t$newMessage = '';\n\tfor ($i = 0;\
    \ $i < strlen($message); $i++) {\n\t\t$letter = $message[$i];\n\t\tif (ctype_upper($letter))\
    \ {\n\t\t\t$letter = strtolower($letter);\n\t\t} else {\n\t\t\t$letter = strtoupper($letter);\n\
    \t\t}\n\t\tif (in_array($letter, $vowels)) {\n\t\t\t$letter = $vowels[(array_search($letter,\
    \ $vowels) + 2) % 5];\n\t\t}\n\t\t$newMessage .= $letter;\n\t}\n\treturn $newMessage;\n\
    }\n\necho encode('test') . \"\\n\";\necho encode('This is a message') . \"\\n\"\
    ;", "    $vowels = ['a', 'e', 'i', 'o', 'u'];\n    $encoded = '';\n    for ($i\
    \ = 0; $i < strlen($message); $i++) {\n        $char = $message[$i];\n       \
    \ if (ctype_upper($char)) {\n            $encoded .= strtolower($char);\n    \
    \    } else if (ctype_lower($char)) {\n            $encoded .= strtoupper($char);\n\
    \        } else {\n            $encoded .= $char;\n        }\n    }\n    for ($i\
    \ = 0; $i < strlen($encoded); $i++) {\n        $char = $encoded[$i];\n       \
    \ if (in_array($char, $vowels)) {\n            $encoded[$i] = $vowels[(array_search($char,\
    \ $vowels) + 2) % 5];\n        }\n    }\n    return $encoded;\n}\n", "    $vowels\
    \ = ['a', 'e', 'i', 'o', 'u'];\n    $encoded = '';\n    for ($i = 0; $i < strlen($message);\
    \ $i++) {\n        $char = $message[$i];\n        if (in_array($char, $vowels))\
    \ {\n            $encoded .= $vowels[(array_search($char, $vowels) + 2) % 5];\n\
    \        } else {\n            $encoded .= $char;\n        }\n    }\n    return\
    \ strtoupper($encoded);\n}\n", "    $vowels = ['a', 'e', 'i', 'o', 'u'];\n   \
    \ $encoded = '';\n    for ($i = 0; $i < strlen($message); $i++) {\n        $char\
    \ = $message[$i];\n        if (ctype_upper($char)) {\n            $encoded .=\
    \ strtolower($char);\n        } else if (ctype_lower($char)) {\n            $encoded\
    \ .= strtoupper($char);\n        } else {\n            $encoded .= $char;\n  \
    \      }\n    }\n    for ($i = 0; $i < strlen($encoded); $i++) {\n        $char\
    \ = $encoded[$i];\n        if (in_array($char, $vowels)) {\n            $index\
    \ = array_search($char, $vowels);\n            $encoded[$i] = $vowels[($index\
    \ + 2) % 5];\n        }\n    }\n    return $encoded;\n}\n\necho encode('test')\
    \ . PHP_EOL;\necho encode('This is a message') . PHP_EOL;", "\t$vowels = array('a',\
    \ 'e', 'i', 'o', 'u');\n\t$message = strtolower($message);\n\t$message = str_split($message);\n\
    \t$new_message = array();\n\tforeach ($message as $letter) {\n\t\tif (in_array($letter,\
    \ $vowels)) {\n\t\t\t$new_message[] = $vowels[array_search($letter, $vowels) +\
    \ 2];\n\t\t} else {\n\t\t\t$new_message[] = $letter;\n\t\t}\n\t}\n\treturn strtoupper(implode('',\
    \ $new_message));\n}\n\necho encode('test') . PHP_EOL;\necho encode('This is a\
    \ message') . PHP_EOL;", "\t$alphabet = array('a', 'b', 'c', 'd', 'e', 'f', 'g',\
    \ 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w',\
    \ 'x', 'y', 'z');\n\t$vowels = array('a', 'e', 'i', 'o', 'u');\n\t$encoded_message\
    \ = '';\n\tfor ($i = 0; $i < strlen($message); $i++) {\n\t\t$letter = strtolower($message[$i]);\n\
    \t\tif (in_array($letter, $alphabet)) {\n\t\t\tif (in_array($letter, $vowels))\
    \ {\n\t\t\t\t$index = array_search($letter, $vowels);\n\t\t\t\t$encoded_message\
    \ .= $vowels[($index + 2) % 5];\n\t\t\t} else {\n\t\t\t\t$index = array_search($letter,\
    \ $alphabet);\n\t\t\t\t$encoded_message .= $alphabet[($index + 2) % 26];\n\t\t\
    \t}\n\t\t} else {\n\t\t\t$encoded_message .= $message[$i];\n\t\t}\n\t}\n\treturn\
    \ $encoded_message;\n}\n\necho encode('test') . \"\\n\";\necho encode('This is\
    \ a message') . \"\\n\";", "    $vowels = ['a', 'e', 'i', 'o', 'u'];\n    $message\
    \ = strtolower($message);\n    $message = str_split($message);\n    $encoded =\
    \ '';\n    foreach ($message as $letter) {\n        if (in_array($letter, $vowels))\
    \ {\n            $index = array_search($letter, $vowels);\n            $index\
    \ = $index + 2;\n            if ($index > 4) {\n                $index = $index\
    \ - 5;\n            }\n            $letter = $vowels[$index];\n        }\n   \
    \     $encoded .= strtoupper($letter);\n    }\n    return $encoded;\n}\n", "\t\
    $vowels = ['a', 'e', 'i', 'o', 'u'];\n\t$message = strtolower($message);\n\t$encoded\
    \ = '';\n\tfor ($i = 0; $i < strlen($message); $i++) {\n\t\tif (in_array($message[$i],\
    \ $vowels)) {\n\t\t\t$encoded .= $vowels[(array_search($message[$i], $vowels)\
    \ + 2) % 5];\n\t\t} else {\n\t\t\t$encoded .= $message[$i];\n\t\t}\n\t}\n\treturn\
    \ strtoupper($encoded);\n}\n\necho encode('test') . \"\\n\";\necho encode('This\
    \ is a message') . \"\\n\";", "    $vowels = ['a', 'e', 'i', 'o', 'u'];\n    $message\
    \ = strtolower($message);\n    $message = str_split($message);\n    $encoded =\
    \ [];\n    foreach ($message as $char) {\n        if (in_array($char, $vowels))\
    \ {\n            $index = array_search($char, $vowels);\n            $index +=\
    \ 2;\n            if ($index > 4) {\n                $index = $index - 5;\n  \
    \          }\n            $encoded[] = $vowels[$index];\n        } else {\n  \
    \          $encoded[] = $char;\n        }\n    }\n    return strtoupper(implode('',\
    \ $encoded));\n}\n\necho encode('test') . \"\\n\";\necho encode('This is a message')\
    \ . \"\\n\";", "    $vowels = ['a', 'e', 'i', 'o', 'u'];\n    $encoded = '';\n\
    \    for ($i = 0; $i < strlen($message); $i++) {\n        $char = $message[$i];\n\
    \        if (in_array($char, $vowels)) {\n            $index = array_search($char,\
    \ $vowels);\n            $index += 2;\n            if ($index >= count($vowels))\
    \ {\n                $index -= count($vowels);\n            }\n            $char\
    \ = $vowels[$index];\n        }\n        $encoded .= strtoupper($char);\n    }\n\
    \    return $encoded;\n}\n", "\t$vowels = ['a', 'e', 'i', 'o', 'u'];\n\t$message\
    \ = strtolower($message);\n\t$encoded = '';\n\tfor ($i = 0; $i < strlen($message);\
    \ $i++) {\n\t\tif (in_array($message[$i], $vowels)) {\n\t\t\t$encoded .= $vowels[(array_search($message[$i],\
    \ $vowels) + 2) % 5];\n\t\t} else {\n\t\t\t$encoded .= $message[$i];\n\t\t}\n\t\
    }\n\treturn strtoupper($encoded);\n}\n\necho encode('test') . PHP_EOL;\necho encode('This\
    \ is a message') . PHP_EOL;", "\t$vowels = ['a', 'e', 'i', 'o', 'u'];\n\t$encoded\
    \ = '';\n\tfor ($i = 0; $i < strlen($message); $i++) {\n\t\t$char = $message[$i];\n\
    \t\tif (ctype_upper($char)) {\n\t\t\t$encoded .= strtolower($char);\n\t\t} elseif\
    \ (ctype_lower($char)) {\n\t\t\t$encoded .= strtoupper($char);\n\t\t} else {\n\
    \t\t\t$encoded .= $char;\n\t\t}\n\t}\n\tfor ($i = 0; $i < strlen($encoded); $i++)\
    \ {\n\t\t$char = $encoded[$i];\n\t\tif (in_array($char, $vowels)) {\n\t\t\t$index\
    \ = array_search($char, $vowels);\n\t\t\t$encoded[$i] = $vowels[($index + 2) %\
    \ 5];\n\t\t}\n\t}\n\treturn $encoded;\n}\n\necho encode('test') . PHP_EOL;\necho\
    \ encode('This is a message') . PHP_EOL;", "\t$vowels = ['a', 'e', 'i', 'o', 'u'];\n\
    \t$encoded = '';\n\tfor ($i = 0; $i < strlen($message); $i++) {\n\t\t$char = strtolower($message[$i]);\n\
    \t\tif (in_array($char, $vowels)) {\n\t\t\t$encoded .= $vowels[(array_search($char,\
    \ $vowels) + 2) % 5];\n\t\t} else {\n\t\t\t$encoded .= $char;\n\t\t}\n\t}\n\t\
    return $encoded;\n}\n", "    $alphabet = 'abcdefghijklmnopqrstuvwxyz';\n    $vowels\
    \ = 'aeiou';\n    $encoded = '';\n    for ($i = 0; $i < strlen($message); $i++)\
    \ {\n        $char = $message[$i];\n        if (ctype_alpha($char)) {\n      \
    \      if (ctype_upper($char)) {\n                $char = strtolower($char);\n\
    \            }\n            $pos = strpos($alphabet, $char);\n            if (strpos($vowels,\
    \ $char) !== false) {\n                $pos += 2;\n                if ($pos >\
    \ strlen($alphabet) - 1) {\n                    $pos -= strlen($alphabet);\n \
    \               }\n            }\n            $encoded .= $alphabet[$pos];\n \
    \       } else {\n            $encoded .= $char;\n        }\n    }\n    return\
    \ $encoded;\n}\n", "\t$vowels = array('a', 'e', 'i', 'o', 'u');\n\t$encoded =\
    \ '';\n\tfor ($i = 0; $i < strlen($message); $i++) {\n\t\t$char = $message[$i];\n\
    \t\tif (ctype_upper($char)) {\n\t\t\t$encoded .= strtolower($char);\n\t\t} elseif\
    \ (ctype_lower($char)) {\n\t\t\t$encoded .= strtoupper($char);\n\t\t} else {\n\
    \t\t\t$encoded .= $char;\n\t\t}\n\t}\n\tfor ($i = 0; $i < strlen($encoded); $i++)\
    \ {\n\t\t$char = $encoded[$i];\n\t\tif (in_array($char, $vowels)) {\n\t\t\t$index\
    \ = array_search($char, $vowels);\n\t\t\t$encoded[$i] = $vowels[($index + 2) %\
    \ 5];\n\t\t}\n\t}\n\treturn $encoded;\n}\n\necho encode('test') . \"\\n\";\necho\
    \ encode('This is a message') . \"\\n\";", "    $vowels = ['a', 'e', 'i', 'o',\
    \ 'u'];\n    $newMessage = '';\n    for ($i = 0; $i < strlen($message); $i++)\
    \ {\n        $char = $message[$i];\n        if (in_array($char, $vowels)) {\n\
    \            $newMessage .= $vowels[(array_search($char, $vowels) + 2) % 5];\n\
    \        } else {\n            $newMessage .= $char;\n        }\n    }\n    return\
    \ strtoupper($newMessage);\n}\n", "\t$vowels = ['a', 'e', 'i', 'o', 'u'];\n\t\
    $message = strtolower($message);\n\t$encoded = '';\n\tfor ($i = 0; $i < strlen($message);\
    \ $i++) {\n\t\tif (in_array($message[$i], $vowels)) {\n\t\t\t$encoded .= $vowels[(array_search($message[$i],\
    \ $vowels) + 2) % 5];\n\t\t} else {\n\t\t\t$encoded .= $message[$i];\n\t\t}\n\t\
    }\n\treturn strtoupper($encoded);\n}\n\necho encode('test') . PHP_EOL;\necho encode('This\
    \ is a message') . PHP_EOL;", "\t$message = strtolower($message);\n\t$vowels =\
    \ array('a', 'e', 'i', 'o', 'u');\n\t$new_message = '';\n\tfor ($i = 0; $i < strlen($message);\
    \ $i++) {\n\t\tif (in_array($message[$i], $vowels)) {\n\t\t\t$new_message .= $vowels[(array_search($message[$i],\
    \ $vowels) + 2) % 5];\n\t\t} else {\n\t\t\t$new_message .= $message[$i];\n\t\t\
    }\n\t}\n\treturn strtoupper($new_message);\n}\n\necho encode('test') . \"\\n\"\
    ;\necho encode('This is a message') . \"\\n\";", "    $vowels = array('a', 'e',\
    \ 'i', 'o', 'u');\n    $encoded = '';\n    for ($i = 0; $i < strlen($message);\
    \ $i++) {\n        $char = $message[$i];\n        if (in_array($char, $vowels))\
    \ {\n            $encoded .= $vowels[array_search($char, $vowels) + 2];\n    \
    \    } else {\n            $encoded .= $char;\n        }\n    }\n    return strtoupper($encoded);\n\
    }\n\necho encode('test') . \"\\n\";\necho encode('This is a message') . \"\\n\"\
    ;", "    $vowels = array('a', 'e', 'i', 'o', 'u');\n    $newMessage = '';\n  \
    \  for ($i = 0; $i < strlen($message); $i++) {\n        $char = $message[$i];\n\
    \        if (ctype_upper($char)) {\n            $newMessage .= strtolower($char);\n\
    \        } else if (ctype_lower($char)) {\n            $newMessage .= strtoupper($char);\n\
    \        } else {\n            $newMessage .= $char;\n        }\n    }\n    for\
    \ ($i = 0; $i < strlen($newMessage); $i++) {\n        $char = $newMessage[$i];\n\
    \        if (in_array($char, $vowels)) {\n            $newMessage[$i] = $vowels[(array_search($char,\
    \ $vowels) + 2) % 5];\n        }\n    }\n    return $newMessage;\n}\n", "    $vowels\
    \ = ['a', 'e', 'i', 'o', 'u'];\n    $encoded = '';\n    for ($i = 0; $i < strlen($message);\
    \ $i++) {\n        $char = $message[$i];\n        if (in_array($char, $vowels))\
    \ {\n            $encoded .= $vowels[(array_search($char, $vowels) + 2) % 5];\n\
    \        } else {\n            $encoded .= $char;\n        }\n    }\n    return\
    \ strtoupper($encoded);\n}\n\necho encode('test') . \"\\n\";\necho encode('This\
    \ is a message') . \"\\n\";", "\t$vowels = ['a', 'e', 'i', 'o', 'u'];\n\t$message\
    \ = strtolower($message);\n\t$encoded = '';\n\tfor ($i = 0; $i < strlen($message);\
    \ $i++) {\n\t\tif (in_array($message[$i], $vowels)) {\n\t\t\t$encoded .= $vowels[(array_search($message[$i],\
    \ $vowels) + 2) % 5];\n\t\t} else {\n\t\t\t$encoded .= $message[$i];\n\t\t}\n\t\
    }\n\treturn strtoupper($encoded);\n}\n", "  $vowels = array('a', 'e', 'i', 'o',\
    \ 'u');\n  $encoded = '';\n  for ($i = 0; $i < strlen($message); $i++) {\n   \
    \ $char = $message[$i];\n    if (ctype_upper($char)) {\n      $encoded .= strtolower($char);\n\
    \    } else if (ctype_lower($char)) {\n      $encoded .= strtoupper($char);\n\
    \    } else {\n      $encoded .= $char;\n    }\n  }\n  for ($i = 0; $i < strlen($encoded);\
    \ $i++) {\n    $char = $encoded[$i];\n    if (in_array($char, $vowels)) {\n  \
    \    $encoded[$i] = $vowels[(array_search($char, $vowels) + 2) % 5];\n    }\n\
    \  }\n  return $encoded;\n}\n\necho encode('test') . \"\\n\";\necho encode('This\
    \ is a message') . \"\\n\";", "    $vowels = ['a', 'e', 'i', 'o', 'u'];\n    $encoded\
    \ = '';\n    for ($i = 0; $i < strlen($message); $i++) {\n        $char = $message[$i];\n\
    \        if (in_array($char, $vowels)) {\n            $encoded .= $vowels[(array_search($char,\
    \ $vowels) + 2) % 5];\n        } else {\n            $encoded .= $char;\n    \
    \    }\n    }\n    return strtoupper($encoded);\n}\n", "    $vowels = ['a', 'e',\
    \ 'i', 'o', 'u'];\n    $encoded = '';\n    for ($i = 0; $i < strlen($message);\
    \ $i++) {\n        $char = strtolower($message[$i]);\n        if (in_array($char,\
    \ $vowels)) {\n            $encoded .= $vowels[(array_search($char, $vowels) +\
    \ 2) % 5];\n        } else {\n            $encoded .= $char;\n        }\n    }\n\
    \    return $encoded;\n}\n", "\t$vowels = ['a', 'e', 'i', 'o', 'u'];\n\t$message\
    \ = strtolower($message);\n\t$encoded = '';\n\tfor ($i = 0; $i < strlen($message);\
    \ $i++) {\n\t\tif (in_array($message[$i], $vowels)) {\n\t\t\tif ($message[$i]\
    \ == 'u') {\n\t\t\t\t$encoded .= 'a';\n\t\t\t} else {\n\t\t\t\t$encoded .= $vowels[array_search($message[$i],\
    \ $vowels) + 1];\n\t\t\t}\n\t\t} else {\n\t\t\t$encoded .= $message[$i];\n\t\t\
    }\n\t}\n\treturn strtoupper($encoded);\n}\n\necho encode('test') . PHP_EOL;\n\
    echo encode('This is a message') . PHP_EOL;", "\t$vowels = array('a', 'e', 'i',\
    \ 'o', 'u');\n\t$encoded = '';\n\tfor ($i = 0; $i < strlen($message); $i++) {\n\
    \t\t$char = $message[$i];\n\t\tif (ctype_upper($char)) {\n\t\t\t$encoded .= strtolower($char);\n\
    \t\t} elseif (ctype_lower($char)) {\n\t\t\t$encoded .= strtoupper($char);\n\t\t\
    } else {\n\t\t\t$encoded .= $char;\n\t\t}\n\t}\n\tfor ($i = 0; $i < strlen($encoded);\
    \ $i++) {\n\t\t$char = $encoded[$i];\n\t\tif (in_array($char, $vowels)) {\n\t\t\
    \t$encoded[$i] = $vowels[(array_search($char, $vowels) + 2) % 5];\n\t\t}\n\t}\n\
    \treturn $encoded;\n}\n\necho encode('test') . PHP_EOL;\necho encode('This is\
    \ a message') . PHP_EOL;", "  $vowels = ['a', 'e', 'i', 'o', 'u'];\n  $message\
    \ = strtolower($message);\n  $encoded = '';\n  for ($i = 0; $i < strlen($message);\
    \ $i++) {\n    if (in_array($message[$i], $vowels)) {\n      $encoded .= $vowels[(array_search($message[$i],\
    \ $vowels) + 2) % 5];\n    } else {\n      $encoded .= $message[$i];\n    }\n\
    \  }\n  return strtoupper($encoded);\n}\n\necho encode('test') . \"\\n\";\necho\
    \ encode('This is a message') . \"\\n\";", "    $vowels = ['a', 'e', 'i', 'o',\
    \ 'u'];\n    $message = strtolower($message);\n    $encoded = '';\n    for ($i\
    \ = 0; $i < strlen($message); $i++) {\n        if (in_array($message[$i], $vowels))\
    \ {\n            $encoded .= $vowels[(array_search($message[$i], $vowels) + 2)\
    \ % 5];\n        } else {\n            $encoded .= $message[$i];\n        }\n\
    \    }\n    return strtoupper($encoded);\n}\n\necho encode('test') . PHP_EOL;\n\
    echo encode('This is a message') . PHP_EOL;", "    $vowels = ['a', 'e', 'i', 'o',\
    \ 'u'];\n    $message = strtolower($message);\n    $encoded = '';\n    for ($i\
    \ = 0; $i < strlen($message); $i++) {\n        if (in_array($message[$i], $vowels))\
    \ {\n            $encoded .= $vowels[(array_search($message[$i], $vowels) + 2)\
    \ % 5];\n        } else {\n            $encoded .= $message[$i];\n        }\n\
    \    }\n    return strtoupper($encoded);\n}\n", "\t$vowels = array('a', 'e', 'i',\
    \ 'o', 'u');\n\t$encoded = '';\n\tfor ($i = 0; $i < strlen($message); $i++) {\n\
    \t\t$char = $message[$i];\n\t\tif (ctype_upper($char)) {\n\t\t\t$encoded .= strtolower($char);\n\
    \t\t} elseif (ctype_lower($char)) {\n\t\t\t$encoded .= strtoupper($char);\n\t\t\
    } else {\n\t\t\t$encoded .= $char;\n\t\t}\n\t}\n\tfor ($i = 0; $i < strlen($encoded);\
    \ $i++) {\n\t\t$char = $encoded[$i];\n\t\tif (in_array($char, $vowels)) {\n\t\t\
    \t$encoded[$i] = $vowels[(array_search($char, $vowels) + 2) % 5];\n\t\t}\n\t}\n\
    \treturn $encoded;\n}\n\necho encode('test') . PHP_EOL;\necho encode('This is\
    \ a message') . PHP_EOL;", "\t$vowels = ['a', 'e', 'i', 'o', 'u'];\n\t$encoded\
    \ = '';\n\tfor ($i = 0; $i < strlen($message); $i++) {\n\t\t$char = $message[$i];\n\
    \t\tif (ctype_upper($char)) {\n\t\t\t$encoded .= strtolower($char);\n\t\t} else\
    \ if (ctype_lower($char)) {\n\t\t\t$encoded .= strtoupper($char);\n\t\t} else\
    \ {\n\t\t\t$encoded .= $char;\n\t\t}\n\t}\n\tfor ($i = 0; $i < strlen($encoded);\
    \ $i++) {\n\t\t$char = $encoded[$i];\n\t\tif (in_array($char, $vowels)) {\n\t\t\
    \t$index = array_search($char, $vowels);\n\t\t\t$index = ($index + 2) % 5;\n\t\
    \t\t$encoded[$i] = $vowels[$index];\n\t\t}\n\t}\n\treturn $encoded;\n}\n", "\t\
    $vowels = ['a', 'e', 'i', 'o', 'u'];\n\t$message = strtolower($message);\n\t$encoded\
    \ = '';\n\tfor ($i = 0; $i < strlen($message); $i++) {\n\t\tif (in_array($message[$i],\
    \ $vowels)) {\n\t\t\t$encoded .= $vowels[(array_search($message[$i], $vowels)\
    \ + 2) % 5];\n\t\t} else {\n\t\t\t$encoded .= $message[$i];\n\t\t}\n\t}\n\treturn\
    \ strtoupper($encoded);\n}\n", "\t$vowels = array('a', 'e', 'i', 'o', 'u');\n\t\
    $message = strtolower($message);\n\t$message = str_split($message);\n\t$encoded\
    \ = array();\n\tforeach ($message as $letter) {\n\t\tif (in_array($letter, $vowels))\
    \ {\n\t\t\t$key = array_search($letter, $vowels);\n\t\t\tif ($key == 4) {\n\t\t\
    \t\t$key = -1;\n\t\t\t}\n\t\t\t$encoded[] = $vowels[$key + 2];\n\t\t} else {\n\
    \t\t\t$encoded[] = $letter;\n\t\t}\n\t}\n\t$encoded = implode($encoded);\n\t$encoded\
    \ = strtoupper($encoded);\n\treturn $encoded;\n}\n\necho encode('test') . PHP_EOL;\n\
    echo encode('This is a message') . PHP_EOL;", "    $vowels = ['a', 'e', 'i', 'o',\
    \ 'u'];\n    $message = strtolower($message);\n    $encoded = '';\n    for ($i\
    \ = 0; $i < strlen($message); $i++) {\n        if (in_array($message[$i], $vowels))\
    \ {\n            $encoded .= $vowels[(array_search($message[$i], $vowels) + 2)\
    \ % 5];\n        } else {\n            $encoded .= $message[$i];\n        }\n\
    \    }\n    return strtoupper($encoded);\n}\n", "\t$vowels = ['a', 'e', 'i', 'o',\
    \ 'u'];\n\t$message = strtolower($message);\n\t$encoded = '';\n\tfor ($i = 0;\
    \ $i < strlen($message); $i++) {\n\t\tif (in_array($message[$i], $vowels)) {\n\
    \t\t\t$index = array_search($message[$i], $vowels);\n\t\t\t$encoded .= $vowels[($index\
    \ + 2) % 5];\n\t\t} else {\n\t\t\t$encoded .= $message[$i];\n\t\t}\n\t}\n\treturn\
    \ strtoupper($encoded);\n}\n\necho encode('test') . PHP_EOL;\necho encode('This\
    \ is a message') . PHP_EOL;", "\t$vowels = array('a', 'e', 'i', 'o', 'u');\n\t\
    $message = strtolower($message);\n\t$encoded = '';\n\tfor ($i = 0; $i < strlen($message);\
    \ $i++) {\n\t\tif (in_array($message[$i], $vowels)) {\n\t\t\t$index = array_search($message[$i],\
    \ $vowels);\n\t\t\t$encoded .= $vowels[($index + 2) % 5];\n\t\t} else {\n\t\t\t\
    $encoded .= $message[$i];\n\t\t}\n\t}\n\treturn strtoupper($encoded);\n}\n\necho\
    \ encode('test') . \"\\n\";\necho encode('This is a message') . \"\\n\";", "\t\
    $vowels = array('a', 'e', 'i', 'o', 'u');\n\t$message = strtolower($message);\n\
    \t$message = str_split($message);\n\t$encoded = array();\n\tforeach ($message\
    \ as $letter) {\n\t\tif (in_array($letter, $vowels)) {\n\t\t\t$index = array_search($letter,\
    \ $vowels);\n\t\t\tif ($index == 4) {\n\t\t\t\t$index = -1;\n\t\t\t}\n\t\t\t$letter\
    \ = $vowels[$index + 2];\n\t\t}\n\t\t$encoded[] = strtoupper($letter);\n\t}\n\t\
    return implode($encoded);\n}\n\necho encode('test') . PHP_EOL;\necho encode('This\
    \ is a message') . PHP_EOL;", "    $vowels = array('a', 'e', 'i', 'o', 'u');\n\
    \    $newMessage = '';\n    for ($i = 0; $i < strlen($message); $i++) {\n    \
    \    $char = $message[$i];\n        if (in_array($char, $vowels)) {\n        \
    \    $newMessage .= $vowels[(array_search($char, $vowels) + 2) % 5];\n       \
    \ } else {\n            $newMessage .= $char;\n        }\n    }\n    return strtoupper($newMessage);\n\
    }\n", "\t$vowels = ['a', 'e', 'i', 'o', 'u'];\n\t$newMessage = '';\n\tfor ($i\
    \ = 0; $i < strlen($message); $i++) {\n\t\tif (in_array($message[$i], $vowels))\
    \ {\n\t\t\t$newMessage .= $vowels[array_search($message[$i], $vowels) + 2];\n\t\
    \t} else {\n\t\t\t$newMessage .= $message[$i];\n\t\t}\n\t}\n\treturn strtoupper($newMessage);\n\
    }\n\necho encode('test') . PHP_EOL;\necho encode('This is a message') . PHP_EOL;",
  "    $vowels = ['a', 'e', 'i', 'o', 'u'];\n    $encoded = '';\n    for ($i = 0;\
    \ $i < strlen($message); $i++) {\n        $char = $message[$i];\n        if (in_array($char,\
    \ $vowels)) {\n            $index = array_search($char, $vowels);\n          \
    \  $index += 2;\n            if ($index > 4) {\n                $index -= 5;\n\
    \            }\n            $encoded .= $vowels[$index];\n        } else {\n \
    \           $encoded .= $char;\n        }\n    }\n    return $encoded;\n}\n",
  "    $vowels = array('a', 'e', 'i', 'o', 'u');\n    $encoded = '';\n    for ($i\
    \ = 0; $i < strlen($message); $i++) {\n        $char = $message[$i];\n       \
    \ if (in_array($char, $vowels)) {\n            $encoded .= $vowels[(array_search($char,\
    \ $vowels) + 2) % 5];\n        } else {\n            $encoded .= $char;\n    \
    \    }\n    }\n    return strtoupper($encoded);\n}\n", "    $message = strtolower($message);\n\
    \    $vowels = array('a', 'e', 'i', 'o', 'u');\n    $message = str_split($message);\n\
    \    for ($i = 0; $i < count($message); $i++) {\n        if (in_array($message[$i],\
    \ $vowels)) {\n            $message[$i] = $vowels[(array_search($message[$i],\
    \ $vowels) + 2) % 5];\n        }\n    }\n    return strtoupper(implode($message));\n\
    }\n\necho encode('test');\necho \"\\n\";\necho encode('This is a message');\n\
    echo \"\\n\";", "    $vowels = ['a', 'e', 'i', 'o', 'u'];\n    $encoded = '';\n\
    \    for ($i = 0; $i < strlen($message); $i++) {\n        $char = $message[$i];\n\
    \        if (in_array($char, $vowels)) {\n            $index = array_search($char,\
    \ $vowels);\n            $encoded .= $vowels[($index + 2) % 5];\n        } else\
    \ {\n            $encoded .= $char;\n        }\n    }\n    return strtoupper($encoded);\n\
    }\n", "\t$alphabet = \"abcdefghijklmnopqrstuvwxyz\";\n\t$vowels = \"aeiou\";\n\
    \t$encoded = \"\";\n\tfor ($i = 0; $i < strlen($message); $i++) {\n\t\t$char =\
    \ $message[$i];\n\t\tif (ctype_upper($char)) {\n\t\t\t$char = strtolower($char);\n\
    \t\t}\n\t\tif (strpos($vowels, $char) !== false) {\n\t\t\t$char = $alphabet[(strpos($alphabet,\
    \ $char) + 2) % 26];\n\t\t}\n\t\t$encoded .= $char;\n\t}\n\treturn $encoded;\n\
    }\n", "    $vowels = array('a', 'e', 'i', 'o', 'u');\n    $encoded = '';\n   \
    \ for ($i = 0; $i < strlen($message); $i++) {\n        $char = $message[$i];\n\
    \        if (ctype_upper($char)) {\n            $char = strtolower($char);\n \
    \       } else {\n            $char = strtoupper($char);\n        }\n        if\
    \ (in_array($char, $vowels)) {\n            $char = $vowels[(array_search($char,\
    \ $vowels) + 2) % 5];\n        }\n        $encoded .= $char;\n    }\n    return\
    \ $encoded;\n}\n", "    $vowels = ['a', 'e', 'i', 'o', 'u'];\n    $encoded = '';\n\
    \    for ($i = 0; $i < strlen($message); $i++) {\n        $char = $message[$i];\n\
    \        if (in_array($char, $vowels)) {\n            $encoded .= $vowels[(array_search($char,\
    \ $vowels) + 2) % 5];\n        } else {\n            $encoded .= $char;\n    \
    \    }\n    }\n    return strtoupper($encoded);\n}\n\necho encode('test') . PHP_EOL;\n\
    echo encode('This is a message') . PHP_EOL;", "\t$vowels = array('a', 'e', 'i',\
    \ 'o', 'u');\n\t$encoded = '';\n\tfor ($i = 0; $i < strlen($message); $i++) {\n\
    \t\t$char = $message[$i];\n\t\tif (in_array($char, $vowels)) {\n\t\t\t$char =\
    \ $vowels[(array_search($char, $vowels) + 2) % 5];\n\t\t}\n\t\t$encoded .= $char;\n\
    \t}\n\treturn strtoupper($encoded);\n}\n", "    $vowels = ['a', 'e', 'i', 'o',\
    \ 'u'];\n    $message = strtolower($message);\n    $message = str_split($message);\n\
    \    $new_message = '';\n    foreach ($message as $letter) {\n        if (in_array($letter,\
    \ $vowels)) {\n            $new_message .= $vowels[array_search($letter, $vowels)\
    \ + 2];\n        } else {\n            $new_message .= $letter;\n        }\n \
    \   }\n    return strtoupper($new_message);\n}\n\necho encode('test') . PHP_EOL;\n\
    echo encode('This is a message') . PHP_EOL;", "\t$vowels = ['a', 'e', 'i', 'o',\
    \ 'u'];\n\t$message = strtolower($message);\n\t$encoded = '';\n\tfor ($i = 0;\
    \ $i < strlen($message); $i++) {\n\t\tif (in_array($message[$i], $vowels)) {\n\
    \t\t\t$encoded .= $vowels[(array_search($message[$i], $vowels) + 2) % 5];\n\t\t\
    } else {\n\t\t\t$encoded .= $message[$i];\n\t\t}\n\t}\n\treturn strtoupper($encoded);\n\
    }\n\necho encode('This is a message') . PHP_EOL;", "    $vowels = ['a', 'e', 'i',\
    \ 'o', 'u'];\n    $encoded = '';\n    for ($i = 0; $i < strlen($message); $i++)\
    \ {\n        $char = $message[$i];\n        if (ctype_alpha($char)) {\n      \
    \      if (in_array(strtolower($char), $vowels)) {\n                $encoded .=\
    \ $vowels[(array_search(strtolower($char), $vowels) + 2) % 5];\n            }\
    \ else {\n                $encoded .= $char;\n            }\n        } else {\n\
    \            $encoded .= $char;\n        }\n    }\n    return $encoded;\n}\n",
  "    $vowels = ['a', 'e', 'i', 'o', 'u'];\n    $message = strtolower($message);\n\
    \    $encoded = '';\n    for ($i = 0; $i < strlen($message); $i++) {\n       \
    \ if (in_array($message[$i], $vowels)) {\n            $encoded .= $vowels[(array_search($message[$i],\
    \ $vowels) + 2) % 5];\n        } else {\n            $encoded .= $message[$i];\n\
    \        }\n    }\n    return strtoupper($encoded);\n}\n", "\t$vowels = ['a',\
    \ 'e', 'i', 'o', 'u'];\n\t$encoded = '';\n\tfor ($i = 0; $i < strlen($message);\
    \ $i++) {\n\t\tif (in_array($message[$i], $vowels)) {\n\t\t\t$encoded .= $vowels[($vowels[array_search($message[$i],\
    \ $vowels)] + 2) % 5];\n\t\t} else {\n\t\t\t$encoded .= $message[$i];\n\t\t}\n\
    \t}\n\treturn $encoded;\n}\n\necho encode('test') . PHP_EOL;\necho encode('This\
    \ is a message') . PHP_EOL;", "\t$vowels = array('a', 'e', 'i', 'o', 'u');\n\t\
    $message = strtolower($message);\n\t$message = str_split($message);\n\tforeach\
    \ ($message as $key => $value) {\n\t\tif (in_array($value, $vowels)) {\n\t\t\t\
    $message[$key] = $vowels[array_search($value, $vowels) + 2];\n\t\t}\n\t}\n\treturn\
    \ strtoupper(implode($message));\n}\n\necho encode('test') . PHP_EOL;\necho encode('This\
    \ is a message') . PHP_EOL;", "\t$vowels = ['a', 'e', 'i', 'o', 'u'];\n\t$newMessage\
    \ = '';\n\tfor ($i = 0; $i < strlen($message); $i++) {\n\t\t$char = $message[$i];\n\
    \t\tif (in_array($char, $vowels)) {\n\t\t\t$newMessage .= getNextVowel($char);\n\
    \t\t} else {\n\t\t\t$newMessage .= $char;\n\t\t}\n\t}\n\treturn $newMessage;\n\
    }\n", "\t$vowels = array('a', 'e', 'i', 'o', 'u');\n\t$message = strtolower($message);\n\
    \t$encoded = '';\n\tfor ($i = 0; $i < strlen($message); $i++) {\n\t\tif (in_array($message[$i],\
    \ $vowels)) {\n\t\t\t$encoded .= $vowels[(array_search($message[$i], $vowels)\
    \ + 2) % 5];\n\t\t} else {\n\t\t\t$encoded .= $message[$i];\n\t\t}\n\t}\n\treturn\
    \ strtoupper($encoded);\n}\n\necho encode('test') . \"\\n\";\necho encode('This\
    \ is a message') . \"\\n\";", "\t$vowels = ['a', 'e', 'i', 'o', 'u'];\n\t$encoded\
    \ = '';\n\tfor ($i = 0; $i < strlen($message); $i++) {\n\t\t$letter = $message[$i];\n\
    \t\tif (in_array($letter, $vowels)) {\n\t\t\t$index = array_search($letter, $vowels);\n\
    \t\t\t$encoded .= $vowels[($index + 2) % 5];\n\t\t} else {\n\t\t\t$encoded .=\
    \ $letter;\n\t\t}\n\t}\n\treturn $encoded;\n}\n", "\t$vowels = array('a', 'e',\
    \ 'i', 'o', 'u');\n\t$newMessage = '';\n\tfor ($i = 0; $i < strlen($message);\
    \ $i++) {\n\t\tif (in_array($message[$i], $vowels)) {\n\t\t\t$newMessage .= $vowels[(array_search($message[$i],\
    \ $vowels) + 2) % 5];\n\t\t} else {\n\t\t\t$newMessage .= $message[$i];\n\t\t\
    }\n\t}\n\treturn $newMessage;\n}\n\necho encode('test') . \"\\n\";\necho encode('This\
    \ is a message') . \"\\n\";", "\t$vowels = array('a', 'e', 'i', 'o', 'u');\n\t\
    $encoded = '';\n\tfor ($i = 0; $i < strlen($message); $i++) {\n\t\t$char = $message[$i];\n\
    \t\t$isVowel = in_array($char, $vowels);\n\t\tif ($isVowel) {\n\t\t\t$char = $vowels[(array_search($char,\
    \ $vowels) + 2) % 5];\n\t\t}\n\t\t$encoded .= $char;\n\t}\n\treturn $encoded;\n\
    }\n", "    $vowels = ['a', 'e', 'i', 'o', 'u'];\n    $encoded = '';\n    for ($i\
    \ = 0; $i < strlen($message); $i++) {\n        $char = $message[$i];\n       \
    \ if (ctype_upper($char)) {\n            $encoded .= strtolower($char);\n    \
    \    } elseif (ctype_lower($char)) {\n            $encoded .= strtoupper($char);\n\
    \        } else {\n            $encoded .= $char;\n        }\n    }\n    for ($i\
    \ = 0; $i < strlen($encoded); $i++) {\n        $char = $encoded[$i];\n       \
    \ if (in_array($char, $vowels)) {\n            $encoded[$i] = $vowels[(array_search($char,\
    \ $vowels) + 2) % 5];\n        }\n    }\n    return $encoded;\n}\n\necho encode('test')\
    \ . PHP_EOL;\necho encode('This is a message') . PHP_EOL;", "\t$vowels = ['a',\
    \ 'e', 'i', 'o', 'u'];\n\t$encoded = '';\n\tfor ($i = 0; $i < strlen($message);\
    \ $i++) {\n\t\t$char = $message[$i];\n\t\tif (in_array($char, $vowels)) {\n\t\t\
    \t$encoded .= $vowels[(array_search($char, $vowels) + 2) % 5];\n\t\t} else if\
    \ (ctype_upper($char)) {\n\t\t\t$encoded .= strtolower($char);\n\t\t} else if\
    \ (ctype_lower($char)) {\n\t\t\t$encoded .= strtoupper($char);\n\t\t} else {\n\
    \t\t\t$encoded .= $char;\n\t\t}\n\t}\n\treturn $encoded;\n}\n", "\t$vowels = ['a',\
    \ 'e', 'i', 'o', 'u'];\n\t$message = strtolower($message);\n\t$encoded = '';\n\
    \tfor ($i = 0; $i < strlen($message); $i++) {\n\t\tif (in_array($message[$i],\
    \ $vowels)) {\n\t\t\t$encoded .= $vowels[(array_search($message[$i], $vowels)\
    \ + 2) % 5];\n\t\t} else {\n\t\t\t$encoded .= $message[$i];\n\t\t}\n\t}\n\treturn\
    \ strtoupper($encoded);\n}\n\necho encode('test') . PHP_EOL;\necho encode('This\
    \ is a message') . PHP_EOL;", "\t$vowels = array('a', 'e', 'i', 'o', 'u');\n\t\
    $message = strtolower($message);\n\t$message = str_split($message);\n\t$encoded\
    \ = '';\n\tforeach ($message as $char) {\n\t\tif (in_array($char, $vowels)) {\n\
    \t\t\t$index = array_search($char, $vowels);\n\t\t\t$index += 2;\n\t\t\tif ($index\
    \ > 4) {\n\t\t\t\t$index -= 5;\n\t\t\t}\n\t\t\t$encoded .= $vowels[$index];\n\t\
    \t} else {\n\t\t\t$encoded .= $char;\n\t\t}\n\t}\n\treturn strtoupper($encoded);\n\
    }\n\necho encode('test');\necho \"\\n\";\necho encode('This is a message');\n\
    echo \"\\n\";", "\t$vowels = ['a', 'e', 'i', 'o', 'u'];\n\t$message = strtolower($message);\n\
    \t$encoded = '';\n\tfor ($i = 0; $i < strlen($message); $i++) {\n\t\tif (in_array($message[$i],\
    \ $vowels)) {\n\t\t\t$encoded .= $vowels[(array_search($message[$i], $vowels)\
    \ + 2) % 5];\n\t\t} else {\n\t\t\t$encoded .= $message[$i];\n\t\t}\n\t}\n\treturn\
    \ strtoupper($encoded);\n}\n\necho encode('test') . PHP_EOL;\necho encode('This\
    \ is a message') . PHP_EOL;", "\t$vowels = ['a', 'e', 'i', 'o', 'u'];\n\t$message\
    \ = strtolower($message);\n\t$encoded = '';\n\tfor ($i = 0; $i < strlen($message);\
    \ $i++) {\n\t\tif (in_array($message[$i], $vowels)) {\n\t\t\t$encoded .= $vowels[(array_search($message[$i],\
    \ $vowels) + 2) % 5];\n\t\t} else {\n\t\t\t$encoded .= $message[$i];\n\t\t}\n\t\
    }\n\treturn strtoupper($encoded);\n}\n\necho encode('test') . \"\\n\";\necho encode('This\
    \ is a message') . \"\\n\";", "    $vowels = ['a', 'e', 'i', 'o', 'u'];\n    $encoded\
    \ = '';\n    for ($i = 0; $i < strlen($message); $i++) {\n        $char = $message[$i];\n\
    \        if (in_array($char, $vowels)) {\n            $index = array_search($char,\
    \ $vowels);\n            $encoded .= $vowels[($index + 2) % 5];\n        } else\
    \ {\n            $encoded .= $char;\n        }\n    }\n    return $encoded;\n\
    }\n", "\t$vowels = array('a', 'e', 'i', 'o', 'u');\n\t$encoded = '';\n\tfor ($i\
    \ = 0; $i < strlen($message); $i++) {\n\t\t$char = $message[$i];\n\t\tif (ctype_upper($char))\
    \ {\n\t\t\t$encoded .= strtolower($char);\n\t\t} else if (ctype_lower($char))\
    \ {\n\t\t\t$encoded .= strtoupper($char);\n\t\t} else {\n\t\t\t$encoded .= $char;\n\
    \t\t}\n\t}\n\tfor ($i = 0; $i < strlen($encoded); $i++) {\n\t\t$char = $encoded[$i];\n\
    \t\tif (in_array($char, $vowels)) {\n\t\t\t$encoded[$i] = $vowels[(array_search($char,\
    \ $vowels) + 2) % 5];\n\t\t}\n\t}\n\treturn $encoded;\n}\necho encode('test');\n\
    echo \"\\n\";\necho encode('This is a message');\necho \"\\n\";", "\t$vowels =\
    \ array('a', 'e', 'i', 'o', 'u');\n\t$encoded = '';\n\tfor ($i = 0; $i < strlen($message);\
    \ $i++) {\n\t\t$char = $message[$i];\n\t\tif (ctype_upper($char)) {\n\t\t\t$encoded\
    \ .= strtolower($char);\n\t\t} elseif (ctype_lower($char)) {\n\t\t\t$encoded .=\
    \ strtoupper($char);\n\t\t} else {\n\t\t\t$encoded .= $char;\n\t\t}\n\t}\n\tfor\
    \ ($i = 0; $i < strlen($encoded); $i++) {\n\t\t$char = $encoded[$i];\n\t\tif (in_array($char,\
    \ $vowels)) {\n\t\t\t$index = array_search($char, $vowels);\n\t\t\t$encoded[$i]\
    \ = $vowels[($index + 2) % 5];\n\t\t}\n\t}\n\treturn $encoded;\n}\n\necho encode('test')\
    \ . PHP_EOL;\necho encode('This is a message') . PHP_EOL;", "\t$vowels = array('a',\
    \ 'e', 'i', 'o', 'u');\n\t$newMessage = '';\n\tfor ($i = 0; $i < strlen($message);\
    \ $i++) {\n\t\t$letter = $message[$i];\n\t\tif (ctype_alpha($letter)) {\n\t\t\t\
    if (ctype_upper($letter)) {\n\t\t\t\t$letter = strtolower($letter);\n\t\t\t} else\
    \ {\n\t\t\t\t$letter = strtoupper($letter);\n\t\t\t}\n\t\t\tif (in_array($letter,\
    \ $vowels)) {\n\t\t\t\t$letter = $vowels[array_search($letter, $vowels) + 2];\n\
    \t\t\t}\n\t\t}\n\t\t$newMessage .= $letter;\n\t}\n\treturn $newMessage;\n}\n\n\
    echo encode('test') . \"\\n\";\necho encode('This is a message') . \"\\n\";",
  "\t$vowels = ['a', 'e', 'i', 'o', 'u'];\n\t$message = strtolower($message);\n\t\
    $message = str_split($message);\n\t$encoded = [];\n\tforeach ($message as $letter)\
    \ {\n\t\tif (in_array($letter, $vowels)) {\n\t\t\t$index = array_search($letter,\
    \ $vowels);\n\t\t\tif ($index == 4) {\n\t\t\t\t$encoded[] = $vowels[0];\n\t\t\t\
    } else {\n\t\t\t\t$encoded[] = $vowels[$index + 1];\n\t\t\t}\n\t\t} else {\n\t\
    \t\t$encoded[] = $letter;\n\t\t}\n\t}\n\treturn strtoupper(implode('', $encoded));\n\
    }\n\necho encode('test') . PHP_EOL;\necho encode('This is a message') . PHP_EOL;",
  "    $vowels = ['a', 'e', 'i', 'o', 'u'];\n    $encoded = '';\n    for ($i = 0;\
    \ $i < strlen($message); $i++) {\n        $char = $message[$i];\n        if (ctype_alpha($char))\
    \ {\n            if (ctype_upper($char)) {\n                $char = strtolower($char);\n\
    \            } else {\n                $char = strtoupper($char);\n          \
    \  }\n            if (in_array($char, $vowels)) {\n                $char = $vowels[(array_search($char,\
    \ $vowels) + 2) % 5];\n            }\n        }\n        $encoded .= $char;\n\
    \    }\n    return $encoded;\n}\n", "\t$vowels = ['a', 'e', 'i', 'o', 'u'];\n\t\
    $encoded = '';\n\tfor ($i = 0; $i < strlen($message); $i++) {\n\t\t$char = $message[$i];\n\
    \t\tif (in_array($char, $vowels)) {\n\t\t\t$encoded .= $vowels[(array_search($char,\
    \ $vowels) + 2) % 5];\n\t\t} else {\n\t\t\t$encoded .= $char;\n\t\t}\n\t}\n\t\
    return strtoupper($encoded);\n}\n\necho encode('test') . \"\\n\";\necho encode('This\
    \ is a message') . \"\\n\";", "\t$vowels = array('a', 'e', 'i', 'o', 'u');\n\t\
    $message = strtolower($message);\n\t$newMessage = '';\n\tfor ($i = 0; $i < strlen($message);\
    \ $i++) {\n\t\t$letter = $message[$i];\n\t\tif (in_array($letter, $vowels)) {\n\
    \t\t\t$newMessage .= $vowels[(array_search($letter, $vowels) + 2) % 5];\n\t\t\
    } else {\n\t\t\t$newMessage .= $letter;\n\t\t}\n\t}\n\treturn strtoupper($newMessage);\n\
    }\n\necho encode('test') . \"\\n\";\necho encode('This is a message') . \"\\n\"\
    ;\n", "    $vowels = ['a', 'e', 'i', 'o', 'u'];\n    $encoded = '';\n    for ($i\
    \ = 0; $i < strlen($message); $i++) {\n        $char = $message[$i];\n       \
    \ if (ctype_upper($char)) {\n            $char = strtolower($char);\n        }\
    \ else {\n            $char = strtoupper($char);\n        }\n        if (in_array($char,\
    \ $vowels)) {\n            $char = $vowels[(array_search($char, $vowels) + 2)\
    \ % 5];\n        }\n        $encoded .= $char;\n    }\n    return $encoded;\n\
    }\n", "    $vowels = ['a', 'e', 'i', 'o', 'u'];\n    $message = strtolower($message);\n\
    \    $message = str_split($message);\n    $encoded = [];\n    foreach ($message\
    \ as $letter) {\n        if (in_array($letter, $vowels)) {\n            $key =\
    \ array_search($letter, $vowels);\n            $key += 2;\n            if ($key\
    \ > 4) {\n                $key -= 5;\n            }\n            $letter = $vowels[$key];\n\
    \        }\n        $encoded[] = $letter;\n    }\n    return strtoupper(implode('',\
    \ $encoded));\n}\n", "    $vowels = ['a', 'e', 'i', 'o', 'u'];\n    $message =\
    \ strtolower($message);\n    $message = str_split($message);\n    foreach ($message\
    \ as $key => $value) {\n        if (in_array($value, $vowels)) {\n           \
    \ $message[$key] = $vowels[array_search($value, $vowels) + 2];\n        }\n  \
    \  }\n    return strtoupper(implode($message));\n}\n", "\t$vowels = array('a',\
    \ 'e', 'i', 'o', 'u');\n\t$message = strtolower($message);\n\t$message = str_split($message);\n\
    \t$encoded = array();\n\tforeach ($message as $char) {\n\t\tif (in_array($char,\
    \ $vowels)) {\n\t\t\t$index = array_search($char, $vowels);\n\t\t\t$index = ($index\
    \ + 2) % 5;\n\t\t\t$encoded[] = $vowels[$index];\n\t\t} else {\n\t\t\t$encoded[]\
    \ = $char;\n\t\t}\n\t}\n\treturn strtoupper(implode('', $encoded));\n}\n\necho\
    \ encode('test') . PHP_EOL;\necho encode('This is a message') . PHP_EOL;", " \
    \   $vowels = array('a', 'e', 'i', 'o', 'u');\n    $message = strtolower($message);\n\
    \    $message = str_split($message);\n    foreach ($message as $key => $value)\
    \ {\n        if (in_array($value, $vowels)) {\n            $message[$key] = $vowels[array_search($value,\
    \ $vowels) + 2];\n        }\n    }\n    return strtoupper(implode('', $message));\n\
    }\n", "\t$alphabet = 'abcdefghijklmnopqrstuvwxyz';\n\t$vowels = 'aeiou';\n\t$encoded\
    \ = '';\n\tfor ($i = 0; $i < strlen($message); $i++) {\n\t\t$letter = $message[$i];\n\
    \t\tif (ctype_alpha($letter)) {\n\t\t\t$letter = strtolower($letter);\n\t\t\t\
    $index = strpos($alphabet, $letter);\n\t\t\tif (strpos($vowels, $letter) !== false)\
    \ {\n\t\t\t\t$index += 2;\n\t\t\t\tif ($index > 25) {\n\t\t\t\t\t$index -= 26;\n\
    \t\t\t\t}\n\t\t\t}\n\t\t\t$encoded .= $alphabet[$index];\n\t\t} else {\n\t\t\t\
    $encoded .= $letter;\n\t\t}\n\t}\n\treturn $encoded;\n}\n\necho encode('test');\n\
    echo \"\\n\";\necho encode('This is a message');\necho \"\\n\";", "    $vowels\
    \ = ['a', 'e', 'i', 'o', 'u'];\n    $message = strtolower($message);\n    $encoded\
    \ = '';\n    for ($i = 0; $i < strlen($message); $i++) {\n        if (in_array($message[$i],\
    \ $vowels)) {\n            $index = array_search($message[$i], $vowels);\n   \
    \         $encoded .= $vowels[($index + 2) % 5];\n        } else {\n         \
    \   $encoded .= $message[$i];\n        }\n    }\n    return strtoupper($encoded);\n\
    }\n\necho encode('test') . PHP_EOL;\necho encode('This is a message') . PHP_EOL;",
  "\t$vowels = ['a', 'e', 'i', 'o', 'u'];\n\t$message = strtolower($message);\n\t\
    $encoded = '';\n\tfor ($i = 0; $i < strlen($message); $i++) {\n\t\tif (in_array($message[$i],\
    \ $vowels)) {\n\t\t\t$encoded .= $vowels[(array_search($message[$i], $vowels)\
    \ + 2) % 5];\n\t\t} else {\n\t\t\t$encoded .= $message[$i];\n\t\t}\n\t}\n\treturn\
    \ strtoupper($encoded);\n}\n\necho encode('test') . PHP_EOL;\necho encode('This\
    \ is a message') . PHP_EOL;", "\t$vowels = ['a', 'e', 'i', 'o', 'u'];\n\t$encoded\
    \ = '';\n\tfor ($i = 0; $i < strlen($message); $i++) {\n\t\t$char = $message[$i];\n\
    \t\tif (ctype_upper($char)) {\n\t\t\t$encoded .= strtolower($char);\n\t\t} elseif\
    \ (ctype_lower($char)) {\n\t\t\t$encoded .= strtoupper($char);\n\t\t} else {\n\
    \t\t\t$encoded .= $char;\n\t\t}\n\t}\n\tfor ($i = 0; $i < strlen($encoded); $i++)\
    \ {\n\t\t$char = $encoded[$i];\n\t\tif (in_array($char, $vowels)) {\n\t\t\t$index\
    \ = array_search($char, $vowels);\n\t\t\t$encoded[$i] = $vowels[($index + 2) %\
    \ 5];\n\t\t}\n\t}\n\treturn $encoded;\n}\n", "\t$vowels = ['a', 'e', 'i', 'o',\
    \ 'u'];\n\t$newMessage = '';\n\tfor ($i = 0; $i < strlen($message); $i++) {\n\t\
    \t$char = $message[$i];\n\t\tif (ctype_upper($char)) {\n\t\t\t$newMessage .= strtolower($char);\n\
    \t\t} else if (ctype_lower($char)) {\n\t\t\t$newMessage .= strtoupper($char);\n\
    \t\t} else {\n\t\t\t$newMessage .= $char;\n\t\t}\n\t}\n\tfor ($i = 0; $i < strlen($newMessage);\
    \ $i++) {\n\t\t$char = $newMessage[$i];\n\t\tif (in_array($char, $vowels)) {\n\
    \t\t\t$newMessage[$i] = chr(ord($char) + 2);\n\t\t}\n\t}\n\treturn $newMessage;\n\
    }\necho encode('test') . PHP_EOL;\necho encode('This is a message') . PHP_EOL;",
  "\t$vowels = array('a', 'e', 'i', 'o', 'u');\n\t$encoded = '';\n\tfor ($i = 0; $i\
    \ < strlen($message); $i++) {\n\t\t$char = $message[$i];\n\t\tif (ctype_upper($char))\
    \ {\n\t\t\t$encoded .= strtolower($char);\n\t\t} else if (ctype_lower($char))\
    \ {\n\t\t\t$encoded .= strtoupper($char);\n\t\t} else {\n\t\t\t$encoded .= $char;\n\
    \t\t}\n\t}\n\tfor ($i = 0; $i < strlen($encoded); $i++) {\n\t\t$char = $encoded[$i];\n\
    \t\tif (in_array($char, $vowels)) {\n\t\t\t$index = array_search($char, $vowels);\n\
    \t\t\t$encoded[$i] = $vowels[($index + 2) % 5];\n\t\t}\n\t}\n\treturn $encoded;\n\
    }\n\necho encode('test') . \"\\n\";\necho encode('This is a message') . \"\\n\"\
    ;", "    $vowels = ['a', 'e', 'i', 'o', 'u'];\n    $encoded = '';\n    for ($i\
    \ = 0; $i < strlen($message); $i++) {\n        $char = $message[$i];\n       \
    \ if (in_array($char, $vowels)) {\n            $encoded .= $vowels[(array_search($char,\
    \ $vowels) + 2) % 5];\n        } else {\n            $encoded .= $char;\n    \
    \    }\n    }\n    return strtoupper($encoded);\n}\n\necho encode('test') . \"\
    \\n\";\necho encode('This is a message') . \"\\n\";", "    $vowels = ['a', 'e',\
    \ 'i', 'o', 'u'];\n    $encoded = '';\n    for ($i = 0; $i < strlen($message);\
    \ $i++) {\n        $char = $message[$i];\n        if (in_array($char, $vowels))\
    \ {\n            $encoded .= $vowels[(array_search($char, $vowels) + 2) % 5];\n\
    \        } else if (ctype_upper($char)) {\n            $encoded .= strtolower($char);\n\
    \        } else {\n            $encoded .= strtoupper($char);\n        }\n   \
    \ }\n    return $encoded;\n}\n", "    $alphabet = 'abcdefghijklmnopqrstuvwxyz';\n\
    \    $vowels = 'aeiou';\n    $encoded = '';\n    for ($i = 0; $i < strlen($message);\
    \ $i++) {\n        $letter = $message[$i];\n        if (ctype_upper($letter))\
    \ {\n            $letter = strtolower($letter);\n            $encoded .= strtoupper($letter);\n\
    \        } else {\n            $encoded .= $letter;\n        }\n        if (strpos($vowels,\
    \ $letter) !== false) {\n            $encoded[$i] = $alphabet[(strpos($alphabet,\
    \ $letter) + 2) % 26];\n        }\n    }\n    return $encoded;\n}\n", "\t$vowels\
    \ = ['a', 'e', 'i', 'o', 'u'];\n\t$encoded = '';\n\tfor ($i = 0; $i < strlen($message);\
    \ $i++) {\n\t\t$char = $message[$i];\n\t\tif (ctype_upper($char)) {\n\t\t\t$encoded\
    \ .= strtolower($char);\n\t\t} elseif (ctype_lower($char)) {\n\t\t\t$encoded .=\
    \ strtoupper($char);\n\t\t} else {\n\t\t\t$encoded .= $char;\n\t\t}\n\t}\n\tfor\
    \ ($i = 0; $i < strlen($encoded); $i++) {\n\t\t$char = $encoded[$i];\n\t\tif (in_array($char,\
    \ $vowels)) {\n\t\t\t$index = array_search($char, $vowels);\n\t\t\t$encoded[$i]\
    \ = $vowels[($index + 2) % count($vowels)];\n\t\t}\n\t}\n\treturn $encoded;\n\
    }\n", "    $vowels = ['a', 'e', 'i', 'o', 'u'];\n    $encoded = '';\n    for ($i\
    \ = 0; $i < strlen($message); $i++) {\n        $char = $message[$i];\n       \
    \ if (in_array($char, $vowels)) {\n            $encoded .= $vowels[(array_search($char,\
    \ $vowels) + 2) % 5];\n        } else {\n            $encoded .= $char;\n    \
    \    }\n    }\n    return strtoupper($encoded);\n}\n", "    $vowels = ['a', 'e',\
    \ 'i', 'o', 'u'];\n    $encoded = '';\n    for ($i = 0; $i < strlen($message);\
    \ $i++) {\n        $char = $message[$i];\n        if (in_array($char, $vowels))\
    \ {\n            $encoded .= $vowels[(array_search($char, $vowels) + 2) % 5];\n\
    \        } else {\n            $encoded .= $char;\n        }\n    }\n    return\
    \ strtoupper($encoded);\n}\n\necho encode('test') . PHP_EOL;\necho encode('This\
    \ is a message') . PHP_EOL;", "    $vowels = ['a', 'e', 'i', 'o', 'u'];\n    $encoded\
    \ = '';\n    for ($i = 0; $i < strlen($message); $i++) {\n        $char = $message[$i];\n\
    \        if (in_array($char, $vowels)) {\n            $encoded .= $vowels[(array_search($char,\
    \ $vowels) + 2) % 5];\n        } else {\n            $encoded .= $char;\n    \
    \    }\n    }\n    return strtoupper($encoded);\n}\n", "\t$vowels = ['a', 'e',\
    \ 'i', 'o', 'u'];\n\t$encoded = '';\n\tfor ($i = 0; $i < strlen($message); $i++)\
    \ {\n\t\t$char = $message[$i];\n\t\tif (ctype_upper($char)) {\n\t\t\t$encoded\
    \ .= strtolower($char);\n\t\t} else if (ctype_lower($char)) {\n\t\t\t$encoded\
    \ .= strtoupper($char);\n\t\t} else {\n\t\t\t$encoded .= $char;\n\t\t}\n\t}\n\t\
    for ($i = 0; $i < strlen($encoded); $i++) {\n\t\t$char = $encoded[$i];\n\t\tif\
    \ (in_array($char, $vowels)) {\n\t\t\t$encoded[$i] = chr(ord($char) + 2);\n\t\t\
    }\n\t}\n\treturn $encoded;\n}\n\necho encode('test') . PHP_EOL;\necho encode('This\
    \ is a message') . PHP_EOL;", "\t$vowels = array('a', 'e', 'i', 'o', 'u');\n\t\
    $alphabet = array('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l',\
    \ 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z');\n\t$new_message\
    \ = '';\n\tfor ($i = 0; $i < strlen($message); $i++) {\n\t\t$letter = $message[$i];\n\
    \t\tif (ctype_upper($letter)) {\n\t\t\t$letter = strtolower($letter);\n\t\t} else\
    \ {\n\t\t\t$letter = strtoupper($letter);\n\t\t}\n\t\tif (in_array($letter, $vowels))\
    \ {\n\t\t\t$index = array_search($letter, $alphabet);\n\t\t\t$index += 2;\n\t\t\
    \t$letter = $alphabet[$index];\n\t\t}\n\t\t$new_message .= $letter;\n\t}\n\treturn\
    \ $new_message;\n}\necho encode('test') . \"\\n\";\necho encode('This is a message')\
    \ . \"\\n\";", "\t$vowels = array('a', 'e', 'i', 'o', 'u');\n\t$new_message =\
    \ '';\n\tfor ($i = 0; $i < strlen($message); $i++) {\n\t\t$letter = $message[$i];\n\
    \t\tif (ctype_upper($letter)) {\n\t\t\t$new_message .= strtolower($letter);\n\t\
    \t} else if (ctype_lower($letter)) {\n\t\t\t$new_message .= strtoupper($letter);\n\
    \t\t} else {\n\t\t\t$new_message .= $letter;\n\t\t}\n\t}\n\t$new_message = str_replace($vowels,\
    \ '', $new_message);\n\t$new_message = str_replace('a', 'c', $new_message);\n\t\
    $new_message = str_replace('e', 'g', $new_message);\n\t$new_message = str_replace('i',\
    \ 'k', $new_message);\n\t$new_message = str_replace('o', 'q', $new_message);\n\
    \t$new_message = str_replace('u', 's', $new_message);\n\treturn $new_message;\n\
    }\n\necho encode('test') . \"\\n\";\necho encode('This is a message') . \"\\n\"\
    ;", "\t$vowels = array('a', 'e', 'i', 'o', 'u');\n\t$encoded = '';\n\tfor ($i\
    \ = 0; $i < strlen($message); $i++) {\n\t\t$char = $message[$i];\n\t\tif (ctype_upper($char))\
    \ {\n\t\t\t$char = strtolower($char);\n\t\t} else {\n\t\t\t$char = strtoupper($char);\n\
    \t\t}\n\t\tif (in_array($char, $vowels)) {\n\t\t\t$char = $vowels[(array_search($char,\
    \ $vowels) + 2) % 5];\n\t\t}\n\t\t$encoded .= $char;\n\t}\n\treturn $encoded;\n\
    }\necho encode('test') . \"\\n\";\necho encode('This is a message') . \"\\n\";",
  "\t$vowels = ['a', 'e', 'i', 'o', 'u'];\n\t$encoded = '';\n\tfor ($i = 0; $i < strlen($message);\
    \ $i++) {\n\t\t$char = $message[$i];\n\t\tif (ctype_upper($char)) {\n\t\t\t$char\
    \ = strtolower($char);\n\t\t} else {\n\t\t\t$char = strtoupper($char);\n\t\t}\n\
    \t\tif (in_array($char, $vowels)) {\n\t\t\t$char = $vowels[(array_search($char,\
    \ $vowels) + 2) % 5];\n\t\t}\n\t\t$encoded .= $char;\n\t}\n\treturn $encoded;\n\
    }\n\necho encode('test') . PHP_EOL;\necho encode('This is a message') . PHP_EOL;",
  "  $vowels = ['a', 'e', 'i', 'o', 'u'];\n  $encoded = '';\n  for ($i = 0; $i < strlen($message);\
    \ $i++) {\n    $char = $message[$i];\n    if (in_array($char, $vowels)) {\n  \
    \    $encoded .= $vowels[(array_search($char, $vowels) + 2) % 5];\n    } else\
    \ if (ctype_upper($char)) {\n      $encoded .= strtolower($char);\n    } else\
    \ {\n      $encoded .= strtoupper($char);\n    }\n  }\n  return $encoded;\n}\n\
    \necho encode('test') . PHP_EOL;\necho encode('This is a message') . PHP_EOL;",
  "\t$vowels = ['a', 'e', 'i', 'o', 'u'];\n\t$encoded = '';\n\tfor ($i = 0; $i < strlen($message);\
    \ $i++) {\n\t\t$char = $message[$i];\n\t\tif (in_array($char, $vowels)) {\n\t\t\
    \t$char = $vowels[(array_search($char, $vowels) + 2) % 5];\n\t\t}\n\t\t$encoded\
    \ .= strtoupper($char);\n\t}\n\treturn $encoded;\n}\n", "    $vowels = ['a', 'e',\
    \ 'i', 'o', 'u'];\n    $encoded = '';\n    for ($i = 0; $i < strlen($message);\
    \ $i++) {\n        $char = $message[$i];\n        if (in_array($char, $vowels))\
    \ {\n            $encoded .= $vowels[(array_search($char, $vowels) + 2) % 5];\n\
    \        } else {\n            $encoded .= $char;\n        }\n    }\n    return\
    \ strtoupper($encoded);\n}\n", "\t$vowels = array('a', 'e', 'i', 'o', 'u');\n\t\
    $newMessage = '';\n\tfor ($i = 0; $i < strlen($message); $i++) {\n\t\t$char =\
    \ $message[$i];\n\t\tif (ctype_alpha($char)) {\n\t\t\tif (ctype_upper($char))\
    \ {\n\t\t\t\t$char = strtolower($char);\n\t\t\t} else {\n\t\t\t\t$char = strtoupper($char);\n\
    \t\t\t}\n\t\t\tif (in_array($char, $vowels)) {\n\t\t\t\t$char = $vowels[array_search($char,\
    \ $vowels) + 2];\n\t\t\t}\n\t\t}\n\t\t$newMessage .= $char;\n\t}\n\treturn $newMessage;\n\
    }\n\necho encode('test') . PHP_EOL;\necho encode('This is a message') . PHP_EOL;",
  "    $vowels = ['a', 'e', 'i', 'o', 'u'];\n    $encoded = '';\n    for ($i = 0;\
    \ $i < strlen($message); $i++) {\n        $char = $message[$i];\n        if (ctype_upper($char))\
    \ {\n            $char = strtolower($char);\n        } else {\n            $char\
    \ = strtoupper($char);\n        }\n        if (in_array($char, $vowels)) {\n \
    \           $index = array_search($char, $vowels);\n            $index += 2;\n\
    \            if ($index > 4) {\n                $index -= 5;\n            }\n\
    \            $char = $vowels[$index];\n        }\n        $encoded .= $char;\n\
    \    }\n    return $encoded;\n}\n", "    $vowels = ['a', 'e', 'i', 'o', 'u'];\n\
    \    $message = strtolower($message);\n    $encoded = '';\n    for ($i = 0; $i\
    \ < strlen($message); $i++) {\n        if (in_array($message[$i], $vowels)) {\n\
    \            $encoded .= $vowels[(array_search($message[$i], $vowels) + 2) % 5];\n\
    \        } else {\n            $encoded .= $message[$i];\n        }\n    }\n \
    \   return strtoupper($encoded);\n}\n", "    $vowels = ['a', 'e', 'i', 'o', 'u'];\n\
    \    $message = strtolower($message);\n    $message = str_split($message);\n \
    \   foreach ($message as $key => $char) {\n        if (in_array($char, $vowels))\
    \ {\n            $message[$key] = $vowels[array_search($char, $vowels) + 2];\n\
    \        }\n    }\n    return strtoupper(implode($message));\n}\n\necho encode('test');\n\
    echo \"\\n\";\necho encode('This is a message');\necho \"\\n\";", "\t$vowels =\
    \ ['a', 'e', 'i', 'o', 'u'];\n\t$message = strtolower($message);\n\t$encoded =\
    \ '';\n\tfor ($i = 0; $i < strlen($message); $i++) {\n\t\tif (in_array($message[$i],\
    \ $vowels)) {\n\t\t\t$encoded .= $vowels[(array_search($message[$i], $vowels)\
    \ + 2) % 5];\n\t\t} else {\n\t\t\t$encoded .= $message[$i];\n\t\t}\n\t}\n\treturn\
    \ strtoupper($encoded);\n}\n\necho encode('test') . PHP_EOL;\necho encode('This\
    \ is a message') . PHP_EOL;", "\t$vowels = array('a', 'e', 'i', 'o', 'u');\n\t\
    $encoded = '';\n\tfor ($i = 0; $i < strlen($message); $i++) {\n\t\t$char = $message[$i];\n\
    \t\tif (ctype_alpha($char)) {\n\t\t\tif (ctype_upper($char)) {\n\t\t\t\t$char\
    \ = strtolower($char);\n\t\t\t} else {\n\t\t\t\t$char = strtoupper($char);\n\t\
    \t\t}\n\t\t\tif (in_array($char, $vowels)) {\n\t\t\t\t$char = $vowels[(array_search($char,\
    \ $vowels) + 2) % 5];\n\t\t\t}\n\t\t}\n\t\t$encoded .= $char;\n\t}\n\treturn $encoded;\n\
    }\n\necho encode('test') . \"\\n\";\necho encode('This is a message') . \"\\n\"\
    ;", "    $vowels = ['a', 'e', 'i', 'o', 'u'];\n    $alphabet = ['a', 'b', 'c',\
    \ 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's',\
    \ 't', 'u', 'v', 'w', 'x', 'y', 'z'];\n    $message = strtolower($message);\n\
    \    $encoded = '';\n    for ($i = 0; $i < strlen($message); $i++) {\n       \
    \ if (in_array($message[$i], $vowels)) {\n            $encoded .= $alphabet[array_search($message[$i],\
    \ $alphabet) + 2];\n        } else {\n            $encoded .= $message[$i];\n\
    \        }\n    }\n    return strtoupper($encoded);\n}\n", "\t$vowels = ['a',\
    \ 'e', 'i', 'o', 'u'];\n\t$message = strtolower($message);\n\t$message = str_split($message);\n\
    \t$newMessage = [];\n\tforeach ($message as $char) {\n\t\tif (in_array($char,\
    \ $vowels)) {\n\t\t\t$index = array_search($char, $vowels);\n\t\t\t$newMessage[]\
    \ = $vowels[($index + 2) % 5];\n\t\t} else {\n\t\t\t$newMessage[] = $char;\n\t\
    \t}\n\t}\n\treturn strtoupper(implode('', $newMessage));\n}\n\necho encode('test')\
    \ . PHP_EOL;\necho encode('This is a message') . PHP_EOL;", "\t$vowels = ['a',\
    \ 'e', 'i', 'o', 'u'];\n\t$message = strtolower($message);\n\t$newMessage = '';\n\
    \tfor ($i = 0; $i < strlen($message); $i++) {\n\t\t$char = $message[$i];\n\t\t\
    if (in_array($char, $vowels)) {\n\t\t\t$newMessage .= $vowels[(array_search($char,\
    \ $vowels) + 2) % 5];\n\t\t} else {\n\t\t\t$newMessage .= $char;\n\t\t}\n\t}\n\
    \treturn strtoupper($newMessage);\n}\n\necho encode('test') . PHP_EOL;\necho encode('This\
    \ is a message') . PHP_EOL;", "\t$vowels = array('a', 'e', 'i', 'o', 'u');\n\t\
    $encoded = '';\n\tfor ($i = 0; $i < strlen($message); $i++) {\n\t\t$letter = $message[$i];\n\
    \t\tif (ctype_upper($letter)) {\n\t\t\t$encoded .= strtolower($letter);\n\t\t\
    } elseif (ctype_lower($letter)) {\n\t\t\t$encoded .= strtoupper($letter);\n\t\t\
    } else {\n\t\t\t$encoded .= $letter;\n\t\t}\n\t\tif (in_array($letter, $vowels))\
    \ {\n\t\t\t$encoded .= $vowels[(array_search($letter, $vowels) + 2) % 5];\n\t\t\
    }\n\t}\n\treturn $encoded;\n}\n\necho encode('test') . PHP_EOL;\necho encode('This\
    \ is a message') . PHP_EOL;", "    $vowels = ['a', 'e', 'i', 'o', 'u'];\n    $new_message\
    \ = '';\n    for ($i = 0; $i < strlen($message); $i++) {\n        $char = $message[$i];\n\
    \        if (in_array($char, $vowels)) {\n            $new_message .= $vowels[array_search($char,\
    \ $vowels) + 2];\n        } else {\n            $new_message .= $char;\n     \
    \   }\n    }\n    return strtoupper($new_message);\n}\n\necho encode('test') .\
    \ \"\\n\";\necho encode('This is a message') . \"\\n\";", "    $vowels = ['a',\
    \ 'e', 'i', 'o', 'u'];\n    $message = strtolower($message);\n    $message = str_split($message);\n\
    \    $encoded = [];\n    foreach ($message as $letter) {\n        if (in_array($letter,\
    \ $vowels)) {\n            $index = array_search($letter, $vowels);\n        \
    \    $index += 2;\n            if ($index > 4) {\n                $index -= 5;\n\
    \            }\n            $encoded[] = $vowels[$index];\n        } else {\n\
    \            $encoded[] = $letter;\n        }\n    }\n    return strtoupper(implode($encoded));\n\
    }\n", "\t$vowels = array('a', 'e', 'i', 'o', 'u');\n\t$encoded = '';\n\tfor ($i\
    \ = 0; $i < strlen($message); $i++) {\n\t\tif (ctype_upper($message[$i])) {\n\t\
    \t\t$encoded .= strtolower($message[$i]);\n\t\t} elseif (ctype_lower($message[$i]))\
    \ {\n\t\t\t$encoded .= strtoupper($message[$i]);\n\t\t} else {\n\t\t\t$encoded\
    \ .= $message[$i];\n\t\t}\n\t}\n\tfor ($i = 0; $i < strlen($encoded); $i++) {\n\
    \t\tif (in_array($encoded[$i], $vowels)) {\n\t\t\t$encoded[$i] = $vowels[array_search($encoded[$i],\
    \ $vowels) + 2];\n\t\t}\n\t}\n\treturn $encoded;\n}\n\necho encode('test') . PHP_EOL;\n\
    echo encode('This is a message') . PHP_EOL;", "    $vowels = ['a', 'e', 'i', 'o',\
    \ 'u'];\n    $encoded = '';\n    $message = strtolower($message);\n    for ($i\
    \ = 0; $i < strlen($message); $i++) {\n        $char = $message[$i];\n       \
    \ if (in_array($char, $vowels)) {\n            $encoded .= $vowels[(array_search($char,\
    \ $vowels) + 2) % 5];\n        } else {\n            $encoded .= $char;\n    \
    \    }\n    }\n    return strtoupper($encoded);\n}\n\necho encode('test') . \"\
    \\n\";\necho encode('This is a message') . \"\\n\";", "    $vowels = ['a', 'e',\
    \ 'i', 'o', 'u'];\n    $result = '';\n    for ($i = 0; $i < strlen($message);\
    \ $i++) {\n        $char = $message[$i];\n        if (in_array($char, $vowels))\
    \ {\n            $index = array_search($char, $vowels);\n            $result .=\
    \ $vowels[($index + 2) % 5];\n        } else {\n            $result .= strtoupper($char);\n\
    \        }\n    }\n    return $result;\n}\n\necho encode('test');\necho \"\\n\"\
    ;\necho encode('This is a message');\necho \"\\n\";", "    $vowels = ['a', 'e',\
    \ 'i', 'o', 'u'];\n    $message = strtolower($message);\n    $encoded = '';\n\
    \    for ($i = 0; $i < strlen($message); $i++) {\n        if (in_array($message[$i],\
    \ $vowels)) {\n            $encoded .= $vowels[(array_search($message[$i], $vowels)\
    \ + 2) % 5];\n        } else {\n            $encoded .= $message[$i];\n      \
    \  }\n    }\n    return strtoupper($encoded);\n}\n", "\t$vowels = array('a', 'e',\
    \ 'i', 'o', 'u');\n\t$new_message = '';\n\tfor ($i = 0; $i < strlen($message);\
    \ $i++) {\n\t\t$char = $message[$i];\n\t\tif (ctype_alpha($char)) {\n\t\t\tif\
    \ (ctype_upper($char)) {\n\t\t\t\t$char = strtolower($char);\n\t\t\t} else {\n\
    \t\t\t\t$char = strtoupper($char);\n\t\t\t}\n\t\t\tif (in_array($char, $vowels))\
    \ {\n\t\t\t\t$index = array_search($char, $vowels);\n\t\t\t\t$index = ($index\
    \ + 2) % 5;\n\t\t\t\t$char = $vowels[$index];\n\t\t\t}\n\t\t}\n\t\t$new_message\
    \ .= $char;\n\t}\n\treturn $new_message;\n}\necho encode('test') . \"\\n\";\n\
    echo encode('This is a message') . \"\\n\";", "\t$vowels = array('a', 'e', 'i',\
    \ 'o', 'u');\n\t$new_message = '';\n\tfor ($i = 0; $i < strlen($message); $i++)\
    \ {\n\t\t$letter = $message[$i];\n\t\tif (ctype_upper($letter)) {\n\t\t\t$letter\
    \ = strtolower($letter);\n\t\t} else {\n\t\t\t$letter = strtoupper($letter);\n\
    \t\t}\n\t\tif (in_array($letter, $vowels)) {\n\t\t\t$letter = $vowels[(array_search($letter,\
    \ $vowels) + 2) % 5];\n\t\t}\n\t\t$new_message .= $letter;\n\t}\n\treturn $new_message;\n\
    }\n\necho encode('test') . \"\\n\";\necho encode('This is a message') . \"\\n\"\
    ;\n", "\t$vowels = array('a', 'e', 'i', 'o', 'u');\n\t$message = strtolower($message);\n\
    \t$message = str_split($message);\n\t$new_message = array();\n\tforeach ($message\
    \ as $letter) {\n\t\tif (in_array($letter, $vowels)) {\n\t\t\t$letter = $vowels[array_search($letter,\
    \ $vowels) + 2];\n\t\t}\n\t\tarray_push($new_message, $letter);\n\t}\n\t$new_message\
    \ = implode($new_message);\n\t$new_message = strtoupper($new_message);\n\treturn\
    \ $new_message;\n}\n", "\t$vowels = array('a', 'e', 'i', 'o', 'u');\n\t$encoded\
    \ = '';\n\tfor ($i = 0; $i < strlen($message); $i++) {\n\t\t$char = $message[$i];\n\
    \t\tif (ctype_alpha($char)) {\n\t\t\tif (ctype_upper($char)) {\n\t\t\t\t$char\
    \ = strtolower($char);\n\t\t\t} else {\n\t\t\t\t$char = strtoupper($char);\n\t\
    \t\t}\n\t\t\tif (in_array($char, $vowels)) {\n\t\t\t\t$index = array_search($char,\
    \ $vowels);\n\t\t\t\t$char = $vowels[($index + 2) % 5];\n\t\t\t}\n\t\t}\n\t\t\
    $encoded .= $char;\n\t}\n\treturn $encoded;\n}\n\necho encode('test') . \"\\n\"\
    ;\necho encode('This is a message') . \"\\n\";", "    $vowels = ['a', 'e', 'i',\
    \ 'o', 'u'];\n    $encoded = '';\n    for ($i = 0; $i < strlen($message); $i++)\
    \ {\n        $char = $message[$i];\n        if (in_array($char, $vowels)) {\n\
    \            $encoded .= $vowels[(array_search($char, $vowels) + 2) % 5];\n  \
    \      } else {\n            $encoded .= $char;\n        }\n    }\n    return\
    \ strtoupper($encoded);\n}\n", "    $alphabet = ['a', 'b', 'c', 'd', 'e', 'f',\
    \ 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v',\
    \ 'w', 'x', 'y', 'z'];\n    $vowels = ['a', 'e', 'i', 'o', 'u'];\n    $message\
    \ = strtolower($message);\n    $encoded = '';\n    for ($i = 0; $i < strlen($message);\
    \ $i++) {\n        $letter = $message[$i];\n        if (in_array($letter, $vowels))\
    \ {\n            $index = array_search($letter, $alphabet);\n            $index\
    \ += 2;\n            if ($index > 25) {\n                $index -= 26;\n     \
    \       }\n            $encoded .= $alphabet[$index];\n        } else {\n    \
    \        $encoded .= $letter;\n        }\n    }\n    return $encoded;\n}\n", "\t\
    $message = strtolower($message);\n\t$vowels = array('a', 'e', 'i', 'o', 'u');\n\
    \t$alphabet = array('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l',\
    \ 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z');\n\t$newMessage\
    \ = \"\";\n\tfor ($i = 0; $i < strlen($message); $i++) {\n\t\tif (in_array($message[$i],\
    \ $vowels)) {\n\t\t\t$index = array_search($message[$i], $alphabet);\n\t\t\t$newMessage\
    \ .= $alphabet[$index + 2];\n\t\t} else {\n\t\t\t$newMessage .= $message[$i];\n\
    \t\t}\n\t}\n\treturn strtoupper($newMessage);\n}\n", "\t$message = strtolower($message);\n\
    \t$vowels = array('a', 'e', 'i', 'o', 'u');\n\t$vowels_encoded = array('c', 'g',\
    \ 'k', 'o', 's');\n\t$message_encoded = '';\n\tfor ($i = 0; $i < strlen($message);\
    \ $i++) {\n\t\tif (in_array($message[$i], $vowels)) {\n\t\t\t$message_encoded\
    \ .= $vowels_encoded[array_search($message[$i], $vowels)];\n\t\t} else {\n\t\t\
    \t$message_encoded .= $message[$i];\n\t\t}\n\t}\n\treturn strtoupper($message_encoded);\n\
    }\n", "    $vowels = ['a', 'e', 'i', 'o', 'u'];\n    $message = strtolower($message);\n\
    \    $message = str_split($message);\n    $encoded = [];\n    foreach ($message\
    \ as $letter) {\n        if (in_array($letter, $vowels)) {\n            $index\
    \ = array_search($letter, $vowels);\n            $index = ($index + 2) % 5;\n\
    \            $encoded[] = $vowels[$index];\n        } else {\n            $encoded[]\
    \ = $letter;\n        }\n    }\n    return strtoupper(implode('', $encoded));\n\
    }\n", "    $alphabet = 'abcdefghijklmnopqrstuvwxyz';\n    $vowels = 'aeiou';\n\
    \    $encoded = '';\n    for ($i = 0; $i < strlen($message); $i++) {\n       \
    \ $char = $message[$i];\n        if (ctype_upper($char)) {\n            $char\
    \ = strtolower($char);\n            $encoded .= strtoupper($char);\n        }\
    \ else {\n            $encoded .= $char;\n        }\n        if (strpos($vowels,\
    \ $char) !== false) {\n            $encoded[$i] = $alphabet[(strpos($alphabet,\
    \ $char) + 2) % 26];\n        }\n    }\n    return $encoded;\n}\n", "\t$vowels\
    \ = ['a', 'e', 'i', 'o', 'u'];\n\t$message = strtolower($message);\n\t$message\
    \ = str_split($message);\n\t$encoded = [];\n\tforeach ($message as $letter) {\n\
    \t\tif (in_array($letter, $vowels)) {\n\t\t\t$index = array_search($letter, $vowels);\n\
    \t\t\tif ($index == 4) {\n\t\t\t\t$encoded[] = $vowels[0];\n\t\t\t} else {\n\t\
    \t\t\t$encoded[] = $vowels[$index + 1];\n\t\t\t}\n\t\t} else {\n\t\t\t$encoded[]\
    \ = $letter;\n\t\t}\n\t}\n\treturn strtoupper(implode($encoded));\n}\n\necho encode('test')\
    \ . PHP_EOL;\necho encode('This is a message') . PHP_EOL;", "    $vowels = ['a',\
    \ 'e', 'i', 'o', 'u'];\n    $message = strtolower($message);\n    $message = str_split($message);\n\
    \    for ($i = 0; $i < count($message); $i++) {\n        if (in_array($message[$i],\
    \ $vowels)) {\n            $message[$i] = $vowels[(array_search($message[$i],\
    \ $vowels) + 2) % 5];\n        }\n    }\n    return strtoupper(implode($message));\n\
    }\necho encode('test') . \"\\n\";\necho encode('This is a message') . \"\\n\";",
  "\t$vowels = array('a', 'e', 'i', 'o', 'u');\n\t$message = strtolower($message);\n\
    \t$message = str_split($message);\n\tforeach ($message as $key => $letter) {\n\
    \t\tif (in_array($letter, $vowels)) {\n\t\t\t$message[$key] = $vowels[array_search($letter,\
    \ $vowels) + 2];\n\t\t}\n\t}\n\treturn strtoupper(implode($message));\n}\n\necho\
    \ encode('test') . PHP_EOL;\necho encode('This is a message') . PHP_EOL;", " \
    \   $vowels = ['a', 'e', 'i', 'o', 'u'];\n    $encoded = '';\n    for ($i = 0;\
    \ $i < strlen($message); $i++) {\n        $char = $message[$i];\n        if (in_array($char,\
    \ $vowels)) {\n            $encoded .= $vowels[(array_search($char, $vowels) +\
    \ 2) % 5];\n        } else {\n            $encoded .= $char;\n        }\n    }\n\
    \    return strtoupper($encoded);\n}\n", "    $vowels = array('a', 'e', 'i', 'o',\
    \ 'u');\n    $message = strtolower($message);\n    $message = str_split($message);\n\
    \    $new_message = array();\n    foreach ($message as $letter) {\n        if\
    \ (in_array($letter, $vowels)) {\n            $new_message[] = $vowels[array_search($letter,\
    \ $vowels) + 2];\n        } else {\n            $new_message[] = $letter;\n  \
    \      }\n    }\n    return strtoupper(implode('', $new_message));\n}\n\necho\
    \ encode('test');\necho \"\\n\";\necho encode('This is a message');\necho \"\\\
    n\";"]
stop_tokens:
- "\nfunction"
- "\n?>"
- "\n//"
- "\n#"

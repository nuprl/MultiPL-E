name: HumanEval_110_exchange
language: php
results:
- program: "<?php\n// In this problem, you will implement a function that takes two\
    \ lists of numbers,\n// and determines whether it is possible to perform an exchange\
    \ of elements\n// between them to make lst1 a list of only even numbers.\n// There\
    \ is no limit on the number of exchanged elements between lst1 and lst2.\n// If\
    \ it is possible to exchange elements between the lst1 and lst2 to make\n// all\
    \ the elements of lst1 to be even, return \"YES\".\n// Otherwise, return \"NO\"\
    .\n// For example:\n// exchange([1, 2, 3, 4], [1, 2, 3, 4]) => \"YES\"\n// exchange([1,\
    \ 2, 3, 4], [1, 5, 3, 4]) => \"NO\"\n// It is assumed that the input lists will\
    \ be non-empty.\nfunction exchange($lst1, $lst2) {\n    $odds = 0;\n    $evens\
    \ = 0;\n    for ($i = 0; $i < count($lst1); $i++) {\n        if ($lst1[$i] % 2\
    \ == 0) {\n            $evens++;\n        } else {\n            $odds++;\n   \
    \     }\n    }\n    for ($i = 0; $i < count($lst2); $i++) {\n        if ($lst2[$i]\
    \ % 2 == 0) {\n            $evens++;\n        } else {\n            $odds++;\n\
    \        }\n    }\n    if ($evens % 2 == 0) {\n        return \"YES\";\n    }\
    \ else {\n        return \"NO\";\n    }\n}\nfunction candidate(...$args) {\n \
    \   return exchange(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3, 4), array(1, 2, 3, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4), array(1, 5, 3, 4)) !== \"NO\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4), array(2,\
    \ 1, 4, 3)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 7, 3), array(2, 6, 4)) !== \"YES\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(5, 7, 3), array(2, 6, 3)) !== \"NO\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 6, 1, 8, 9), array(3,\
    \ 5, 5, 1, 1, 1)) !== \"NO\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(100, 200), array(200, 200)) !== \"YES\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpmzo4ijyf.php:44\n\
    Stack trace:\n#0 /tmp/tmpmzo4ijyf.php(50): test()\n#1 {main}\n  thrown in /tmp/tmpmzo4ijyf.php\
    \ on line 44\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// In this problem, you will implement a function that takes two\
    \ lists of numbers,\n// and determines whether it is possible to perform an exchange\
    \ of elements\n// between them to make lst1 a list of only even numbers.\n// There\
    \ is no limit on the number of exchanged elements between lst1 and lst2.\n// If\
    \ it is possible to exchange elements between the lst1 and lst2 to make\n// all\
    \ the elements of lst1 to be even, return \"YES\".\n// Otherwise, return \"NO\"\
    .\n// For example:\n// exchange([1, 2, 3, 4], [1, 2, 3, 4]) => \"YES\"\n// exchange([1,\
    \ 2, 3, 4], [1, 5, 3, 4]) => \"NO\"\n// It is assumed that the input lists will\
    \ be non-empty.\nfunction exchange($lst1, $lst2) {\n    $odds = array_filter($lst1,\
    \ function($n) { return $n % 2 == 1; });\n    $evens = array_filter($lst2, function($n)\
    \ { return $n % 2 == 0; });\n    return count($odds) == count($evens) ? \"YES\"\
    \ : \"NO\";\n}\n\nfunction candidate(...$args) {\n    return exchange(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4), array(1, 2,\
    \ 3, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4), array(1, 5, 3, 4)) !== \"NO\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4), array(2, 1, 4, 3)) !== \"YES\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 7, 3), array(2,\
    \ 6, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 7, 3), array(2, 6, 3)) !== \"NO\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(3, 2, 6, 1, 8, 9), array(3, 5, 5, 1, 1, 1)) !== \"\
    NO\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ 200), array(200, 200)) !== \"YES\") { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp60y7_neh.php:30\n\
    Stack trace:\n#0 /tmp/tmp60y7_neh.php(33): test()\n#1 {main}\n  thrown in /tmp/tmp60y7_neh.php\
    \ on line 30\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// In this problem, you will implement a function that takes two\
    \ lists of numbers,\n// and determines whether it is possible to perform an exchange\
    \ of elements\n// between them to make lst1 a list of only even numbers.\n// There\
    \ is no limit on the number of exchanged elements between lst1 and lst2.\n// If\
    \ it is possible to exchange elements between the lst1 and lst2 to make\n// all\
    \ the elements of lst1 to be even, return \"YES\".\n// Otherwise, return \"NO\"\
    .\n// For example:\n// exchange([1, 2, 3, 4], [1, 2, 3, 4]) => \"YES\"\n// exchange([1,\
    \ 2, 3, 4], [1, 5, 3, 4]) => \"NO\"\n// It is assumed that the input lists will\
    \ be non-empty.\nfunction exchange($lst1, $lst2) {\n    $odds = [];\n    $evens\
    \ = [];\n    for ($i = 0; $i < count($lst1); $i++) {\n        if ($lst1[$i] %\
    \ 2 === 0) {\n            $evens[] = $lst1[$i];\n        } else {\n          \
    \  $odds[] = $lst1[$i];\n        }\n    }\n    for ($i = 0; $i < count($lst2);\
    \ $i++) {\n        if ($lst2[$i] % 2 === 0) {\n            $evens[] = $lst2[$i];\n\
    \        } else {\n            $odds[] = $lst2[$i];\n        }\n    }\n    if\
    \ (count($evens) > count($odds)) {\n        return \"YES\";\n    } else {\n  \
    \      return \"NO\";\n    }\n}\necho exchange([1, 2, 3, 4], [1, 2, 3, 4]) . \"\
    \\n\";\necho exchange([1, 2, 3, 4], [1, 5, 3, 4]) . \"\\n\";\necho exchange([1,\
    \ 2, 3, 4], [1, 5, 3, 4, 6]) . \"\\n\";\necho exchange([1, 2, 3, 4], [1, 5, 3,\
    \ 4, 6, 8]) . \"\\n\";\necho exchange([1, 2, 3, 4], [1, 5, 3, 4, 6, 8, 10]) .\
    \ \"\\n\";\necho exchange([1, 2, 3, 4], [1, 5, 3, 4, 6, 8, 10, 12]) . \"\\n\"\
    ;\necho exchange([1, 2, 3, 4], [1, 5, 3, 4, 6, 8, 10, 12, 14]) . \"\\n\";\necho\
    \ exchange([1, 2, 3, 4], [1, 5, 3, 4, 6, 8, 10, 12, 14, 16]) . \"\\n\";\necho\
    \ exchange([1, 2, 3, 4], [1, 5, 3, 4, 6, 8, 10, 12, 14, 16, 18]) . \"\\n\";\n\
    echo exchange([1, 2, 3, 4], [1, 5, 3, 4,\nfunction candidate(...$args) {\n   \
    \ return exchange(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3, 4), array(1, 2, 3, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4), array(1, 5, 3, 4)) !== \"NO\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4), array(2,\
    \ 1, 4, 3)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 7, 3), array(2, 6, 4)) !== \"YES\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(5, 7, 3), array(2, 6, 3)) !== \"NO\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 6, 1, 8, 9), array(3,\
    \ 5, 5, 1, 1, 1)) !== \"NO\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(100, 200), array(200, 200)) !== \"YES\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Parse error:  syntax error, unexpected identifier \"candidate\", expecting\
    \ \"(\" in /tmp/tmp69t1v8db.php on line 46\n"
  exit_code: 255
  status: SyntaxError
- program: "<?php\n// In this problem, you will implement a function that takes two\
    \ lists of numbers,\n// and determines whether it is possible to perform an exchange\
    \ of elements\n// between them to make lst1 a list of only even numbers.\n// There\
    \ is no limit on the number of exchanged elements between lst1 and lst2.\n// If\
    \ it is possible to exchange elements between the lst1 and lst2 to make\n// all\
    \ the elements of lst1 to be even, return \"YES\".\n// Otherwise, return \"NO\"\
    .\n// For example:\n// exchange([1, 2, 3, 4], [1, 2, 3, 4]) => \"YES\"\n// exchange([1,\
    \ 2, 3, 4], [1, 5, 3, 4]) => \"NO\"\n// It is assumed that the input lists will\
    \ be non-empty.\nfunction exchange($lst1, $lst2) {\n  $lst1_odd = 0;\n  $lst2_odd\
    \ = 0;\n  for ($i = 0; $i < count($lst1); $i++) {\n    if ($lst1[$i] % 2 == 1)\
    \ {\n      $lst1_odd++;\n    }\n  }\n  for ($i = 0; $i < count($lst2); $i++) {\n\
    \    if ($lst2[$i] % 2 == 1) {\n      $lst2_odd++;\n    }\n  }\n  if ($lst1_odd\
    \ == $lst2_odd) {\n    return \"YES\";\n  } else {\n    return \"NO\";\n  }\n\
    }\n\nfunction candidate(...$args) {\n    return exchange(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 2, 3, 4), array(1, 2, 3, 4)) !==\
    \ \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4), array(1, 5, 3, 4)) !== \"NO\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4), array(2, 1, 4, 3)) !== \"YES\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 7, 3), array(2,\
    \ 6, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 7, 3), array(2, 6, 3)) !== \"NO\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(3, 2, 6, 1, 8, 9), array(3, 5, 5, 1, 1, 1)) !== \"\
    NO\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ 200), array(200, 200)) !== \"YES\") { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmppoo_oxj5.php:41\n\
    Stack trace:\n#0 /tmp/tmppoo_oxj5.php(47): test()\n#1 {main}\n  thrown in /tmp/tmppoo_oxj5.php\
    \ on line 41\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// In this problem, you will implement a function that takes two\
    \ lists of numbers,\n// and determines whether it is possible to perform an exchange\
    \ of elements\n// between them to make lst1 a list of only even numbers.\n// There\
    \ is no limit on the number of exchanged elements between lst1 and lst2.\n// If\
    \ it is possible to exchange elements between the lst1 and lst2 to make\n// all\
    \ the elements of lst1 to be even, return \"YES\".\n// Otherwise, return \"NO\"\
    .\n// For example:\n// exchange([1, 2, 3, 4], [1, 2, 3, 4]) => \"YES\"\n// exchange([1,\
    \ 2, 3, 4], [1, 5, 3, 4]) => \"NO\"\n// It is assumed that the input lists will\
    \ be non-empty.\nfunction exchange($lst1, $lst2) {\n    $odds = array_filter($lst1,\
    \ function($n) { return $n % 2; });\n    $evens = array_filter($lst2, function($n)\
    \ { return !($n % 2); });\n    return count($odds) == count($evens) ? \"YES\"\
    \ : \"NO\";\n}\n\nfunction candidate(...$args) {\n    return exchange(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4), array(1, 2,\
    \ 3, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4), array(1, 5, 3, 4)) !== \"NO\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4), array(2, 1, 4, 3)) !== \"YES\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 7, 3), array(2,\
    \ 6, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 7, 3), array(2, 6, 3)) !== \"NO\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(3, 2, 6, 1, 8, 9), array(3, 5, 5, 1, 1, 1)) !== \"\
    NO\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ 200), array(200, 200)) !== \"YES\") { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpbikyps27.php:30\n\
    Stack trace:\n#0 /tmp/tmpbikyps27.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpbikyps27.php\
    \ on line 30\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// In this problem, you will implement a function that takes two\
    \ lists of numbers,\n// and determines whether it is possible to perform an exchange\
    \ of elements\n// between them to make lst1 a list of only even numbers.\n// There\
    \ is no limit on the number of exchanged elements between lst1 and lst2.\n// If\
    \ it is possible to exchange elements between the lst1 and lst2 to make\n// all\
    \ the elements of lst1 to be even, return \"YES\".\n// Otherwise, return \"NO\"\
    .\n// For example:\n// exchange([1, 2, 3, 4], [1, 2, 3, 4]) => \"YES\"\n// exchange([1,\
    \ 2, 3, 4], [1, 5, 3, 4]) => \"NO\"\n// It is assumed that the input lists will\
    \ be non-empty.\nfunction exchange($lst1, $lst2) {\n    $even = 0;\n    $odd =\
    \ 0;\n    for ($i = 0; $i < count($lst1); $i++) {\n        if ($lst1[$i] % 2 ==\
    \ 0) {\n            $even++;\n        } else {\n            $odd++;\n        }\n\
    \    }\n    for ($i = 0; $i < count($lst2); $i++) {\n        if ($lst2[$i] % 2\
    \ == 0) {\n            $even++;\n        } else {\n            $odd++;\n     \
    \   }\n    }\n    if ($even % 2 == 0 && $odd % 2 == 0) {\n        return \"YES\"\
    ;\n    } else {\n        return \"NO\";\n    }\n}\n\nfunction candidate(...$args)\
    \ {\n    return exchange(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3, 4), array(1, 2, 3, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4), array(1, 5, 3, 4)) !== \"NO\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4), array(2,\
    \ 1, 4, 3)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 7, 3), array(2, 6, 4)) !== \"YES\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(5, 7, 3), array(2, 6, 3)) !== \"NO\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 6, 1, 8, 9), array(3,\
    \ 5, 5, 1, 1, 1)) !== \"NO\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(100, 200), array(200, 200)) !== \"YES\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpgc6_xcme.php:45\n\
    Stack trace:\n#0 /tmp/tmpgc6_xcme.php(51): test()\n#1 {main}\n  thrown in /tmp/tmpgc6_xcme.php\
    \ on line 45\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// In this problem, you will implement a function that takes two\
    \ lists of numbers,\n// and determines whether it is possible to perform an exchange\
    \ of elements\n// between them to make lst1 a list of only even numbers.\n// There\
    \ is no limit on the number of exchanged elements between lst1 and lst2.\n// If\
    \ it is possible to exchange elements between the lst1 and lst2 to make\n// all\
    \ the elements of lst1 to be even, return \"YES\".\n// Otherwise, return \"NO\"\
    .\n// For example:\n// exchange([1, 2, 3, 4], [1, 2, 3, 4]) => \"YES\"\n// exchange([1,\
    \ 2, 3, 4], [1, 5, 3, 4]) => \"NO\"\n// It is assumed that the input lists will\
    \ be non-empty.\nfunction exchange($lst1, $lst2) {\n    $even = 0;\n    $odd =\
    \ 0;\n    foreach ($lst1 as $value) {\n        if ($value % 2 == 0) {\n      \
    \      $even++;\n        } else {\n            $odd++;\n        }\n    }\n   \
    \ foreach ($lst2 as $value) {\n        if ($value % 2 == 0) {\n            $even++;\n\
    \        } else {\n            $odd++;\n        }\n    }\n    if ($even % 2 ==\
    \ 0 && $odd % 2 == 0) {\n        return \"YES\";\n    } else {\n        return\
    \ \"NO\";\n    }\n}\n\nfunction candidate(...$args) {\n    return exchange(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4), array(1, 2,\
    \ 3, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4), array(1, 5, 3, 4)) !== \"NO\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4), array(2, 1, 4, 3)) !== \"YES\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 7, 3), array(2,\
    \ 6, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 7, 3), array(2, 6, 3)) !== \"NO\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(3, 2, 6, 1, 8, 9), array(3, 5, 5, 1, 1, 1)) !== \"\
    NO\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ 200), array(200, 200)) !== \"YES\") { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpd1sgtulk.php:45\n\
    Stack trace:\n#0 /tmp/tmpd1sgtulk.php(51): test()\n#1 {main}\n  thrown in /tmp/tmpd1sgtulk.php\
    \ on line 45\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// In this problem, you will implement a function that takes two\
    \ lists of numbers,\n// and determines whether it is possible to perform an exchange\
    \ of elements\n// between them to make lst1 a list of only even numbers.\n// There\
    \ is no limit on the number of exchanged elements between lst1 and lst2.\n// If\
    \ it is possible to exchange elements between the lst1 and lst2 to make\n// all\
    \ the elements of lst1 to be even, return \"YES\".\n// Otherwise, return \"NO\"\
    .\n// For example:\n// exchange([1, 2, 3, 4], [1, 2, 3, 4]) => \"YES\"\n// exchange([1,\
    \ 2, 3, 4], [1, 5, 3, 4]) => \"NO\"\n// It is assumed that the input lists will\
    \ be non-empty.\nfunction exchange($lst1, $lst2) {\n    $odds = 0;\n    $evens\
    \ = 0;\n    for ($i = 0; $i < count($lst1); $i++) {\n        if ($lst1[$i] % 2\
    \ == 0) {\n            $evens++;\n        } else {\n            $odds++;\n   \
    \     }\n    }\n    for ($i = 0; $i < count($lst2); $i++) {\n        if ($lst2[$i]\
    \ % 2 == 0) {\n            $evens++;\n        } else {\n            $odds++;\n\
    \        }\n    }\n    if ($evens % 2 == 0) {\n        return \"YES\";\n    }\
    \ else {\n        return \"NO\";\n    }\n}\nfunction candidate(...$args) {\n \
    \   return exchange(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3, 4), array(1, 2, 3, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4), array(1, 5, 3, 4)) !== \"NO\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4), array(2,\
    \ 1, 4, 3)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 7, 3), array(2, 6, 4)) !== \"YES\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(5, 7, 3), array(2, 6, 3)) !== \"NO\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 6, 1, 8, 9), array(3,\
    \ 5, 5, 1, 1, 1)) !== \"NO\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(100, 200), array(200, 200)) !== \"YES\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp4r6hsa_9.php:44\n\
    Stack trace:\n#0 /tmp/tmp4r6hsa_9.php(50): test()\n#1 {main}\n  thrown in /tmp/tmp4r6hsa_9.php\
    \ on line 44\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// In this problem, you will implement a function that takes two\
    \ lists of numbers,\n// and determines whether it is possible to perform an exchange\
    \ of elements\n// between them to make lst1 a list of only even numbers.\n// There\
    \ is no limit on the number of exchanged elements between lst1 and lst2.\n// If\
    \ it is possible to exchange elements between the lst1 and lst2 to make\n// all\
    \ the elements of lst1 to be even, return \"YES\".\n// Otherwise, return \"NO\"\
    .\n// For example:\n// exchange([1, 2, 3, 4], [1, 2, 3, 4]) => \"YES\"\n// exchange([1,\
    \ 2, 3, 4], [1, 5, 3, 4]) => \"NO\"\n// It is assumed that the input lists will\
    \ be non-empty.\nfunction exchange($lst1, $lst2) {\n    $odds = 0;\n    foreach\
    \ ($lst1 as $num) {\n        if ($num % 2 != 0) {\n            $odds++;\n    \
    \    }\n    }\n    $evens = 0;\n    foreach ($lst2 as $num) {\n        if ($num\
    \ % 2 == 0) {\n            $evens++;\n        }\n    }\n    if ($odds == $evens)\
    \ {\n        return \"YES\";\n    } else {\n        return \"NO\";\n    }\n}\n\
    function candidate(...$args) {\n    return exchange(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 2, 3, 4), array(1, 2, 3, 4)) !==\
    \ \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4), array(1, 5, 3, 4)) !== \"NO\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4), array(2, 1, 4, 3)) !== \"YES\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 7, 3), array(2,\
    \ 6, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 7, 3), array(2, 6, 3)) !== \"NO\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(3, 2, 6, 1, 8, 9), array(3, 5, 5, 1, 1, 1)) !== \"\
    NO\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ 200), array(200, 200)) !== \"YES\") { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpn3sc7btw.php:43\n\
    Stack trace:\n#0 /tmp/tmpn3sc7btw.php(46): test()\n#1 {main}\n  thrown in /tmp/tmpn3sc7btw.php\
    \ on line 43\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// In this problem, you will implement a function that takes two\
    \ lists of numbers,\n// and determines whether it is possible to perform an exchange\
    \ of elements\n// between them to make lst1 a list of only even numbers.\n// There\
    \ is no limit on the number of exchanged elements between lst1 and lst2.\n// If\
    \ it is possible to exchange elements between the lst1 and lst2 to make\n// all\
    \ the elements of lst1 to be even, return \"YES\".\n// Otherwise, return \"NO\"\
    .\n// For example:\n// exchange([1, 2, 3, 4], [1, 2, 3, 4]) => \"YES\"\n// exchange([1,\
    \ 2, 3, 4], [1, 5, 3, 4]) => \"NO\"\n// It is assumed that the input lists will\
    \ be non-empty.\nfunction exchange($lst1, $lst2) {\n    $odds = 0;\n    foreach\
    \ ($lst1 as $num) {\n        if ($num % 2 != 0) {\n            $odds++;\n    \
    \    }\n    }\n    foreach ($lst2 as $num) {\n        if ($num % 2 != 0) {\n \
    \           $odds--;\n        }\n    }\n    if ($odds == 0) {\n        return\
    \ \"YES\";\n    } else {\n        return \"NO\";\n    }\n}\nfunction candidate(...$args)\
    \ {\n    return exchange(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3, 4), array(1, 2, 3, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4), array(1, 5, 3, 4)) !== \"NO\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4), array(2,\
    \ 1, 4, 3)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 7, 3), array(2, 6, 4)) !== \"YES\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(5, 7, 3), array(2, 6, 3)) !== \"NO\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 6, 1, 8, 9), array(3,\
    \ 5, 5, 1, 1, 1)) !== \"NO\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(100, 200), array(200, 200)) !== \"YES\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp_u5xbhci.php:39\n\
    Stack trace:\n#0 /tmp/tmp_u5xbhci.php(45): test()\n#1 {main}\n  thrown in /tmp/tmp_u5xbhci.php\
    \ on line 39\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// In this problem, you will implement a function that takes two\
    \ lists of numbers,\n// and determines whether it is possible to perform an exchange\
    \ of elements\n// between them to make lst1 a list of only even numbers.\n// There\
    \ is no limit on the number of exchanged elements between lst1 and lst2.\n// If\
    \ it is possible to exchange elements between the lst1 and lst2 to make\n// all\
    \ the elements of lst1 to be even, return \"YES\".\n// Otherwise, return \"NO\"\
    .\n// For example:\n// exchange([1, 2, 3, 4], [1, 2, 3, 4]) => \"YES\"\n// exchange([1,\
    \ 2, 3, 4], [1, 5, 3, 4]) => \"NO\"\n// It is assumed that the input lists will\
    \ be non-empty.\nfunction exchange($lst1, $lst2) {\n    $odds = array_filter($lst1,\
    \ function($n) { return $n % 2; });\n    $evens = array_filter($lst2, function($n)\
    \ { return !($n % 2); });\n    return count($odds) === count($evens) ? \"YES\"\
    \ : \"NO\";\n}\n\nfunction candidate(...$args) {\n    return exchange(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4), array(1, 2,\
    \ 3, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4), array(1, 5, 3, 4)) !== \"NO\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4), array(2, 1, 4, 3)) !== \"YES\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 7, 3), array(2,\
    \ 6, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 7, 3), array(2, 6, 3)) !== \"NO\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(3, 2, 6, 1, 8, 9), array(3, 5, 5, 1, 1, 1)) !== \"\
    NO\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ 200), array(200, 200)) !== \"YES\") { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmporpc0gow.php:30\n\
    Stack trace:\n#0 /tmp/tmporpc0gow.php(33): test()\n#1 {main}\n  thrown in /tmp/tmporpc0gow.php\
    \ on line 30\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// In this problem, you will implement a function that takes two\
    \ lists of numbers,\n// and determines whether it is possible to perform an exchange\
    \ of elements\n// between them to make lst1 a list of only even numbers.\n// There\
    \ is no limit on the number of exchanged elements between lst1 and lst2.\n// If\
    \ it is possible to exchange elements between the lst1 and lst2 to make\n// all\
    \ the elements of lst1 to be even, return \"YES\".\n// Otherwise, return \"NO\"\
    .\n// For example:\n// exchange([1, 2, 3, 4], [1, 2, 3, 4]) => \"YES\"\n// exchange([1,\
    \ 2, 3, 4], [1, 5, 3, 4]) => \"NO\"\n// It is assumed that the input lists will\
    \ be non-empty.\nfunction exchange($lst1, $lst2) {\n    $odds = array_filter($lst1,\
    \ function($n) {\n        return $n % 2 == 1;\n    });\n    $evens = array_filter($lst2,\
    \ function($n) {\n        return $n % 2 == 0;\n    });\n    return count($odds)\
    \ == count($evens) ? \"YES\" : \"NO\";\n}\n\nfunction candidate(...$args) {\n\
    \    return exchange(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3, 4), array(1, 2, 3, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4), array(1, 5, 3, 4)) !== \"NO\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4), array(2,\
    \ 1, 4, 3)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 7, 3), array(2, 6, 4)) !== \"YES\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(5, 7, 3), array(2, 6, 3)) !== \"NO\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 6, 1, 8, 9), array(3,\
    \ 5, 5, 1, 1, 1)) !== \"NO\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(100, 200), array(200, 200)) !== \"YES\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpigtf5778.php:34\n\
    Stack trace:\n#0 /tmp/tmpigtf5778.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpigtf5778.php\
    \ on line 34\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// In this problem, you will implement a function that takes two\
    \ lists of numbers,\n// and determines whether it is possible to perform an exchange\
    \ of elements\n// between them to make lst1 a list of only even numbers.\n// There\
    \ is no limit on the number of exchanged elements between lst1 and lst2.\n// If\
    \ it is possible to exchange elements between the lst1 and lst2 to make\n// all\
    \ the elements of lst1 to be even, return \"YES\".\n// Otherwise, return \"NO\"\
    .\n// For example:\n// exchange([1, 2, 3, 4], [1, 2, 3, 4]) => \"YES\"\n// exchange([1,\
    \ 2, 3, 4], [1, 5, 3, 4]) => \"NO\"\n// It is assumed that the input lists will\
    \ be non-empty.\nfunction exchange($lst1, $lst2) {\n  $odds = 0;\n  $evens = 0;\n\
    \  foreach ($lst1 as $num) {\n    if ($num % 2 == 0) {\n      $evens++;\n    }\
    \ else {\n      $odds++;\n    }\n  }\n  foreach ($lst2 as $num) {\n    if ($num\
    \ % 2 == 0) {\n      $evens++;\n    } else {\n      $odds++;\n    }\n  }\n  if\
    \ ($evens % 2 == 0) {\n    return \"YES\";\n  } else {\n    return \"NO\";\n \
    \ }\n}\n\nfunction candidate(...$args) {\n    return exchange(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(1, 2, 3, 4), array(1, 2, 3, 4))\
    \ !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4), array(1, 5, 3, 4)) !== \"NO\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4), array(2, 1, 4, 3)) !== \"YES\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 7, 3), array(2,\
    \ 6, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 7, 3), array(2, 6, 3)) !== \"NO\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(3, 2, 6, 1, 8, 9), array(3, 5, 5, 1, 1, 1)) !== \"\
    NO\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ 200), array(200, 200)) !== \"YES\") { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpnbnf2pyr.php:45\n\
    Stack trace:\n#0 /tmp/tmpnbnf2pyr.php(51): test()\n#1 {main}\n  thrown in /tmp/tmpnbnf2pyr.php\
    \ on line 45\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// In this problem, you will implement a function that takes two\
    \ lists of numbers,\n// and determines whether it is possible to perform an exchange\
    \ of elements\n// between them to make lst1 a list of only even numbers.\n// There\
    \ is no limit on the number of exchanged elements between lst1 and lst2.\n// If\
    \ it is possible to exchange elements between the lst1 and lst2 to make\n// all\
    \ the elements of lst1 to be even, return \"YES\".\n// Otherwise, return \"NO\"\
    .\n// For example:\n// exchange([1, 2, 3, 4], [1, 2, 3, 4]) => \"YES\"\n// exchange([1,\
    \ 2, 3, 4], [1, 5, 3, 4]) => \"NO\"\n// It is assumed that the input lists will\
    \ be non-empty.\nfunction exchange($lst1, $lst2) {\n    $lst1 = array_filter($lst1,\
    \ function($x) { return $x % 2 == 0; });\n    $lst2 = array_filter($lst2, function($x)\
    \ { return $x % 2 == 1; });\n    return count($lst1) >= count($lst2) ? \"YES\"\
    \ : \"NO\";\n}\n\nfunction candidate(...$args) {\n    return exchange(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4), array(1, 2,\
    \ 3, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4), array(1, 5, 3, 4)) !== \"NO\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4), array(2, 1, 4, 3)) !== \"YES\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 7, 3), array(2,\
    \ 6, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 7, 3), array(2, 6, 3)) !== \"NO\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(3, 2, 6, 1, 8, 9), array(3, 5, 5, 1, 1, 1)) !== \"\
    NO\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ 200), array(200, 200)) !== \"YES\") { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// In this problem, you will implement a function that takes two\
    \ lists of numbers,\n// and determines whether it is possible to perform an exchange\
    \ of elements\n// between them to make lst1 a list of only even numbers.\n// There\
    \ is no limit on the number of exchanged elements between lst1 and lst2.\n// If\
    \ it is possible to exchange elements between the lst1 and lst2 to make\n// all\
    \ the elements of lst1 to be even, return \"YES\".\n// Otherwise, return \"NO\"\
    .\n// For example:\n// exchange([1, 2, 3, 4], [1, 2, 3, 4]) => \"YES\"\n// exchange([1,\
    \ 2, 3, 4], [1, 5, 3, 4]) => \"NO\"\n// It is assumed that the input lists will\
    \ be non-empty.\nfunction exchange($lst1, $lst2) {\n  $odds = array_filter($lst1,\
    \ function($n) { return $n % 2; });\n  $evens = array_filter($lst2, function($n)\
    \ { return !($n % 2); });\n  return count($odds) <= count($evens) ? \"YES\" :\
    \ \"NO\";\n}\n\nfunction candidate(...$args) {\n    return exchange(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4), array(1, 2,\
    \ 3, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4), array(1, 5, 3, 4)) !== \"NO\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4), array(2, 1, 4, 3)) !== \"YES\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 7, 3), array(2,\
    \ 6, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 7, 3), array(2, 6, 3)) !== \"NO\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(3, 2, 6, 1, 8, 9), array(3, 5, 5, 1, 1, 1)) !== \"\
    NO\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ 200), array(200, 200)) !== \"YES\") { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// In this problem, you will implement a function that takes two\
    \ lists of numbers,\n// and determines whether it is possible to perform an exchange\
    \ of elements\n// between them to make lst1 a list of only even numbers.\n// There\
    \ is no limit on the number of exchanged elements between lst1 and lst2.\n// If\
    \ it is possible to exchange elements between the lst1 and lst2 to make\n// all\
    \ the elements of lst1 to be even, return \"YES\".\n// Otherwise, return \"NO\"\
    .\n// For example:\n// exchange([1, 2, 3, 4], [1, 2, 3, 4]) => \"YES\"\n// exchange([1,\
    \ 2, 3, 4], [1, 5, 3, 4]) => \"NO\"\n// It is assumed that the input lists will\
    \ be non-empty.\nfunction exchange($lst1, $lst2) {\n    $even = array_filter($lst1,\
    \ function($n) { return $n % 2 == 0; });\n    $odd = array_filter($lst2, function($n)\
    \ { return $n % 2 != 0; });\n    return count($even) + count($odd) >= count($lst1)\
    \ ? \"YES\" : \"NO\";\n}\n\nfunction candidate(...$args) {\n    return exchange(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4), array(1, 2,\
    \ 3, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4), array(1, 5, 3, 4)) !== \"NO\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4), array(2, 1, 4, 3)) !== \"YES\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 7, 3), array(2,\
    \ 6, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 7, 3), array(2, 6, 3)) !== \"NO\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(3, 2, 6, 1, 8, 9), array(3, 5, 5, 1, 1, 1)) !== \"\
    NO\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ 200), array(200, 200)) !== \"YES\") { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpk8cws1fs.php:25\n\
    Stack trace:\n#0 /tmp/tmpk8cws1fs.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpk8cws1fs.php\
    \ on line 25\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// In this problem, you will implement a function that takes two\
    \ lists of numbers,\n// and determines whether it is possible to perform an exchange\
    \ of elements\n// between them to make lst1 a list of only even numbers.\n// There\
    \ is no limit on the number of exchanged elements between lst1 and lst2.\n// If\
    \ it is possible to exchange elements between the lst1 and lst2 to make\n// all\
    \ the elements of lst1 to be even, return \"YES\".\n// Otherwise, return \"NO\"\
    .\n// For example:\n// exchange([1, 2, 3, 4], [1, 2, 3, 4]) => \"YES\"\n// exchange([1,\
    \ 2, 3, 4], [1, 5, 3, 4]) => \"NO\"\n// It is assumed that the input lists will\
    \ be non-empty.\nfunction exchange($lst1, $lst2) {\n    $lst1_odd = array_filter($lst1,\
    \ function($x) { return $x % 2; });\n    $lst2_even = array_filter($lst2, function($x)\
    \ { return !($x % 2); });\n    return count($lst1_odd) == count($lst2_even) ?\
    \ \"YES\" : \"NO\";\n}\n\nfunction candidate(...$args) {\n    return exchange(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4), array(1, 2,\
    \ 3, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4), array(1, 5, 3, 4)) !== \"NO\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4), array(2, 1, 4, 3)) !== \"YES\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 7, 3), array(2,\
    \ 6, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 7, 3), array(2, 6, 3)) !== \"NO\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(3, 2, 6, 1, 8, 9), array(3, 5, 5, 1, 1, 1)) !== \"\
    NO\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ 200), array(200, 200)) !== \"YES\") { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp73zvsufj.php:30\n\
    Stack trace:\n#0 /tmp/tmp73zvsufj.php(33): test()\n#1 {main}\n  thrown in /tmp/tmp73zvsufj.php\
    \ on line 30\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// In this problem, you will implement a function that takes two\
    \ lists of numbers,\n// and determines whether it is possible to perform an exchange\
    \ of elements\n// between them to make lst1 a list of only even numbers.\n// There\
    \ is no limit on the number of exchanged elements between lst1 and lst2.\n// If\
    \ it is possible to exchange elements between the lst1 and lst2 to make\n// all\
    \ the elements of lst1 to be even, return \"YES\".\n// Otherwise, return \"NO\"\
    .\n// For example:\n// exchange([1, 2, 3, 4], [1, 2, 3, 4]) => \"YES\"\n// exchange([1,\
    \ 2, 3, 4], [1, 5, 3, 4]) => \"NO\"\n// It is assumed that the input lists will\
    \ be non-empty.\nfunction exchange($lst1, $lst2) {\n    $odds1 = array_filter($lst1,\
    \ function($x) {\n        return $x % 2 == 1;\n    });\n    $odds2 = array_filter($lst2,\
    \ function($x) {\n        return $x % 2 == 1;\n    });\n    return count($odds1)\
    \ == count($odds2) ? \"YES\" : \"NO\";\n}\n\nfunction candidate(...$args) {\n\
    \    return exchange(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3, 4), array(1, 2, 3, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4), array(1, 5, 3, 4)) !== \"NO\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4), array(2,\
    \ 1, 4, 3)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 7, 3), array(2, 6, 4)) !== \"YES\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(5, 7, 3), array(2, 6, 3)) !== \"NO\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 6, 1, 8, 9), array(3,\
    \ 5, 5, 1, 1, 1)) !== \"NO\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(100, 200), array(200, 200)) !== \"YES\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpjqb12st2.php:31\n\
    Stack trace:\n#0 /tmp/tmpjqb12st2.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpjqb12st2.php\
    \ on line 31\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// In this problem, you will implement a function that takes two\
    \ lists of numbers,\n// and determines whether it is possible to perform an exchange\
    \ of elements\n// between them to make lst1 a list of only even numbers.\n// There\
    \ is no limit on the number of exchanged elements between lst1 and lst2.\n// If\
    \ it is possible to exchange elements between the lst1 and lst2 to make\n// all\
    \ the elements of lst1 to be even, return \"YES\".\n// Otherwise, return \"NO\"\
    .\n// For example:\n// exchange([1, 2, 3, 4], [1, 2, 3, 4]) => \"YES\"\n// exchange([1,\
    \ 2, 3, 4], [1, 5, 3, 4]) => \"NO\"\n// It is assumed that the input lists will\
    \ be non-empty.\nfunction exchange($lst1, $lst2) {\n    $odds = array_filter($lst1,\
    \ function($n) {\n        return $n % 2 !== 0;\n    });\n    $evens = array_filter($lst2,\
    \ function($n) {\n        return $n % 2 === 0;\n    });\n    return count($odds)\
    \ === count($evens) ? \"YES\" : \"NO\";\n}\n\nfunction candidate(...$args) {\n\
    \    return exchange(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3, 4), array(1, 2, 3, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4), array(1, 5, 3, 4)) !== \"NO\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4), array(2,\
    \ 1, 4, 3)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 7, 3), array(2, 6, 4)) !== \"YES\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(5, 7, 3), array(2, 6, 3)) !== \"NO\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 6, 1, 8, 9), array(3,\
    \ 5, 5, 1, 1, 1)) !== \"NO\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(100, 200), array(200, 200)) !== \"YES\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp8qhmltl8.php:34\n\
    Stack trace:\n#0 /tmp/tmp8qhmltl8.php(37): test()\n#1 {main}\n  thrown in /tmp/tmp8qhmltl8.php\
    \ on line 34\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// In this problem, you will implement a function that takes two\
    \ lists of numbers,\n// and determines whether it is possible to perform an exchange\
    \ of elements\n// between them to make lst1 a list of only even numbers.\n// There\
    \ is no limit on the number of exchanged elements between lst1 and lst2.\n// If\
    \ it is possible to exchange elements between the lst1 and lst2 to make\n// all\
    \ the elements of lst1 to be even, return \"YES\".\n// Otherwise, return \"NO\"\
    .\n// For example:\n// exchange([1, 2, 3, 4], [1, 2, 3, 4]) => \"YES\"\n// exchange([1,\
    \ 2, 3, 4], [1, 5, 3, 4]) => \"NO\"\n// It is assumed that the input lists will\
    \ be non-empty.\nfunction exchange($lst1, $lst2) {\n  $odds = 0;\n  $evens = 0;\n\
    \  foreach ($lst1 as $num) {\n    if ($num % 2 == 0) {\n      $evens++;\n    }\
    \ else {\n      $odds++;\n    }\n  }\n  foreach ($lst2 as $num) {\n    if ($num\
    \ % 2 == 0) {\n      $evens++;\n    } else {\n      $odds++;\n    }\n  }\n  if\
    \ ($evens > $odds) {\n    return \"YES\";\n  } else {\n    return \"NO\";\n  }\n\
    }\n\nfunction candidate(...$args) {\n    return exchange(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 2, 3, 4), array(1, 2, 3, 4)) !==\
    \ \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4), array(1, 5, 3, 4)) !== \"NO\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4), array(2, 1, 4, 3)) !== \"YES\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 7, 3), array(2,\
    \ 6, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 7, 3), array(2, 6, 3)) !== \"NO\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(3, 2, 6, 1, 8, 9), array(3, 5, 5, 1, 1, 1)) !== \"\
    NO\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ 200), array(200, 200)) !== \"YES\") { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpqgxg5myd.php:42\n\
    Stack trace:\n#0 /tmp/tmpqgxg5myd.php(51): test()\n#1 {main}\n  thrown in /tmp/tmpqgxg5myd.php\
    \ on line 42\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// In this problem, you will implement a function that takes two\
    \ lists of numbers,\n// and determines whether it is possible to perform an exchange\
    \ of elements\n// between them to make lst1 a list of only even numbers.\n// There\
    \ is no limit on the number of exchanged elements between lst1 and lst2.\n// If\
    \ it is possible to exchange elements between the lst1 and lst2 to make\n// all\
    \ the elements of lst1 to be even, return \"YES\".\n// Otherwise, return \"NO\"\
    .\n// For example:\n// exchange([1, 2, 3, 4], [1, 2, 3, 4]) => \"YES\"\n// exchange([1,\
    \ 2, 3, 4], [1, 5, 3, 4]) => \"NO\"\n// It is assumed that the input lists will\
    \ be non-empty.\nfunction exchange($lst1, $lst2) {\n    $lst1_odds = array_filter($lst1,\
    \ function($n) { return $n % 2 == 1; });\n    $lst2_evens = array_filter($lst2,\
    \ function($n) { return $n % 2 == 0; });\n    return count($lst1_odds) == count($lst2_evens)\
    \ ? \"YES\" : \"NO\";\n}\nfunction candidate(...$args) {\n    return exchange(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4), array(1, 2,\
    \ 3, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4), array(1, 5, 3, 4)) !== \"NO\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4), array(2, 1, 4, 3)) !== \"YES\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 7, 3), array(2,\
    \ 6, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 7, 3), array(2, 6, 3)) !== \"NO\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(3, 2, 6, 1, 8, 9), array(3, 5, 5, 1, 1, 1)) !== \"\
    NO\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ 200), array(200, 200)) !== \"YES\") { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp03flekd2.php:29\n\
    Stack trace:\n#0 /tmp/tmp03flekd2.php(32): test()\n#1 {main}\n  thrown in /tmp/tmp03flekd2.php\
    \ on line 29\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// In this problem, you will implement a function that takes two\
    \ lists of numbers,\n// and determines whether it is possible to perform an exchange\
    \ of elements\n// between them to make lst1 a list of only even numbers.\n// There\
    \ is no limit on the number of exchanged elements between lst1 and lst2.\n// If\
    \ it is possible to exchange elements between the lst1 and lst2 to make\n// all\
    \ the elements of lst1 to be even, return \"YES\".\n// Otherwise, return \"NO\"\
    .\n// For example:\n// exchange([1, 2, 3, 4], [1, 2, 3, 4]) => \"YES\"\n// exchange([1,\
    \ 2, 3, 4], [1, 5, 3, 4]) => \"NO\"\n// It is assumed that the input lists will\
    \ be non-empty.\nfunction exchange($lst1, $lst2) {\n  $odds = 0;\n  foreach ($lst1\
    \ as $num) {\n    if ($num % 2 != 0) {\n      $odds++;\n    }\n  }\n  foreach\
    \ ($lst2 as $num) {\n    if ($num % 2 != 0) {\n      $odds--;\n    }\n  }\n  if\
    \ ($odds == 0) {\n    return \"YES\";\n  } else {\n    return \"NO\";\n  }\n}\n\
    \necho exchange([1, 2, 3, 4], [1, 2, 3, 4]) . \"\\n\";\necho exchange([1, 2, 3,\
    \ 4], [1, 5, 3, 4]) . \"\\n\";\nfunction candidate(...$args) {\n    return exchange(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4), array(1, 2,\
    \ 3, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4), array(1, 5, 3, 4)) !== \"NO\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4), array(2, 1, 4, 3)) !== \"YES\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 7, 3), array(2,\
    \ 6, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 7, 3), array(2, 6, 3)) !== \"NO\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(3, 2, 6, 1, 8, 9), array(3, 5, 5, 1, 1, 1)) !== \"\
    NO\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ 200), array(200, 200)) !== \"YES\") { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: "YES\nNO\n"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpucahax_u.php:42\n\
    Stack trace:\n#0 /tmp/tmpucahax_u.php(48): test()\n#1 {main}\n  thrown in /tmp/tmpucahax_u.php\
    \ on line 42\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// In this problem, you will implement a function that takes two\
    \ lists of numbers,\n// and determines whether it is possible to perform an exchange\
    \ of elements\n// between them to make lst1 a list of only even numbers.\n// There\
    \ is no limit on the number of exchanged elements between lst1 and lst2.\n// If\
    \ it is possible to exchange elements between the lst1 and lst2 to make\n// all\
    \ the elements of lst1 to be even, return \"YES\".\n// Otherwise, return \"NO\"\
    .\n// For example:\n// exchange([1, 2, 3, 4], [1, 2, 3, 4]) => \"YES\"\n// exchange([1,\
    \ 2, 3, 4], [1, 5, 3, 4]) => \"NO\"\n// It is assumed that the input lists will\
    \ be non-empty.\nfunction exchange($lst1, $lst2) {\n  $even = array_filter($lst1,\
    \ function($num) {\n    return $num % 2 == 0;\n  });\n  $odd = array_filter($lst2,\
    \ function($num) {\n    return $num % 2 != 0;\n  });\n  if (count($even) + count($odd)\
    \ == count($lst1)) {\n    return \"YES\";\n  } else {\n    return \"NO\";\n  }\n\
    }\n\necho exchange([1, 2, 3, 4], [1, 2, 3, 4]) . \"\\n\";\necho exchange([1, 2,\
    \ 3, 4], [1, 5, 3, 4]) . \"\\n\";\nfunction candidate(...$args) {\n    return\
    \ exchange(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3, 4), array(1, 2, 3, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4), array(1, 5, 3, 4)) !== \"NO\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4), array(2,\
    \ 1, 4, 3)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 7, 3), array(2, 6, 4)) !== \"YES\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(5, 7, 3), array(2, 6, 3)) !== \"NO\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 6, 1, 8, 9), array(3,\
    \ 5, 5, 1, 1, 1)) !== \"NO\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(100, 200), array(200, 200)) !== \"YES\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "YES\nNO\n"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpbye72qb6.php:37\n\
    Stack trace:\n#0 /tmp/tmpbye72qb6.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpbye72qb6.php\
    \ on line 37\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// In this problem, you will implement a function that takes two\
    \ lists of numbers,\n// and determines whether it is possible to perform an exchange\
    \ of elements\n// between them to make lst1 a list of only even numbers.\n// There\
    \ is no limit on the number of exchanged elements between lst1 and lst2.\n// If\
    \ it is possible to exchange elements between the lst1 and lst2 to make\n// all\
    \ the elements of lst1 to be even, return \"YES\".\n// Otherwise, return \"NO\"\
    .\n// For example:\n// exchange([1, 2, 3, 4], [1, 2, 3, 4]) => \"YES\"\n// exchange([1,\
    \ 2, 3, 4], [1, 5, 3, 4]) => \"NO\"\n// It is assumed that the input lists will\
    \ be non-empty.\nfunction exchange($lst1, $lst2) {\n  $odds = 0;\n  $evens = 0;\n\
    \  for ($i = 0; $i < count($lst1); $i++) {\n    if ($lst1[$i] % 2 == 0) {\n  \
    \    $evens++;\n    } else {\n      $odds++;\n    }\n  }\n  for ($i = 0; $i <\
    \ count($lst2); $i++) {\n    if ($lst2[$i] % 2 == 0) {\n      $evens++;\n    }\
    \ else {\n      $odds++;\n    }\n  }\n  if ($evens % 2 == 0 && $odds % 2 == 0)\
    \ {\n    return \"YES\";\n  } else {\n    return \"NO\";\n  }\n}\n\nfunction candidate(...$args)\
    \ {\n    return exchange(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3, 4), array(1, 2, 3, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4), array(1, 5, 3, 4)) !== \"NO\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4), array(2,\
    \ 1, 4, 3)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 7, 3), array(2, 6, 4)) !== \"YES\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(5, 7, 3), array(2, 6, 3)) !== \"NO\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 6, 1, 8, 9), array(3,\
    \ 5, 5, 1, 1, 1)) !== \"NO\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(100, 200), array(200, 200)) !== \"YES\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp5cj7cb4o.php:45\n\
    Stack trace:\n#0 /tmp/tmp5cj7cb4o.php(51): test()\n#1 {main}\n  thrown in /tmp/tmp5cj7cb4o.php\
    \ on line 45\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// In this problem, you will implement a function that takes two\
    \ lists of numbers,\n// and determines whether it is possible to perform an exchange\
    \ of elements\n// between them to make lst1 a list of only even numbers.\n// There\
    \ is no limit on the number of exchanged elements between lst1 and lst2.\n// If\
    \ it is possible to exchange elements between the lst1 and lst2 to make\n// all\
    \ the elements of lst1 to be even, return \"YES\".\n// Otherwise, return \"NO\"\
    .\n// For example:\n// exchange([1, 2, 3, 4], [1, 2, 3, 4]) => \"YES\"\n// exchange([1,\
    \ 2, 3, 4], [1, 5, 3, 4]) => \"NO\"\n// It is assumed that the input lists will\
    \ be non-empty.\nfunction exchange($lst1, $lst2) {\n    $lst1 = array_filter($lst1,\
    \ function($x) { return $x % 2 == 0; });\n    $lst2 = array_filter($lst2, function($x)\
    \ { return $x % 2 == 1; });\n    return count($lst1) == count($lst2) ? \"YES\"\
    \ : \"NO\";\n}\n\nfunction candidate(...$args) {\n    return exchange(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4), array(1, 2,\
    \ 3, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4), array(1, 5, 3, 4)) !== \"NO\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4), array(2, 1, 4, 3)) !== \"YES\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 7, 3), array(2,\
    \ 6, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 7, 3), array(2, 6, 3)) !== \"NO\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(3, 2, 6, 1, 8, 9), array(3, 5, 5, 1, 1, 1)) !== \"\
    NO\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ 200), array(200, 200)) !== \"YES\") { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpjtit9sog.php:30\n\
    Stack trace:\n#0 /tmp/tmpjtit9sog.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpjtit9sog.php\
    \ on line 30\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// In this problem, you will implement a function that takes two\
    \ lists of numbers,\n// and determines whether it is possible to perform an exchange\
    \ of elements\n// between them to make lst1 a list of only even numbers.\n// There\
    \ is no limit on the number of exchanged elements between lst1 and lst2.\n// If\
    \ it is possible to exchange elements between the lst1 and lst2 to make\n// all\
    \ the elements of lst1 to be even, return \"YES\".\n// Otherwise, return \"NO\"\
    .\n// For example:\n// exchange([1, 2, 3, 4], [1, 2, 3, 4]) => \"YES\"\n// exchange([1,\
    \ 2, 3, 4], [1, 5, 3, 4]) => \"NO\"\n// It is assumed that the input lists will\
    \ be non-empty.\nfunction exchange($lst1, $lst2) {\n    $odds1 = array_filter($lst1,\
    \ function($n) { return $n % 2; });\n    $odds2 = array_filter($lst2, function($n)\
    \ { return $n % 2; });\n    return count($odds1) === count($odds2) ? \"YES\" :\
    \ \"NO\";\n}\n\nfunction candidate(...$args) {\n    return exchange(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4), array(1, 2,\
    \ 3, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4), array(1, 5, 3, 4)) !== \"NO\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4), array(2, 1, 4, 3)) !== \"YES\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 7, 3), array(2,\
    \ 6, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 7, 3), array(2, 6, 3)) !== \"NO\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(3, 2, 6, 1, 8, 9), array(3, 5, 5, 1, 1, 1)) !== \"\
    NO\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ 200), array(200, 200)) !== \"YES\") { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpamjxu62u.php:27\n\
    Stack trace:\n#0 /tmp/tmpamjxu62u.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpamjxu62u.php\
    \ on line 27\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// In this problem, you will implement a function that takes two\
    \ lists of numbers,\n// and determines whether it is possible to perform an exchange\
    \ of elements\n// between them to make lst1 a list of only even numbers.\n// There\
    \ is no limit on the number of exchanged elements between lst1 and lst2.\n// If\
    \ it is possible to exchange elements between the lst1 and lst2 to make\n// all\
    \ the elements of lst1 to be even, return \"YES\".\n// Otherwise, return \"NO\"\
    .\n// For example:\n// exchange([1, 2, 3, 4], [1, 2, 3, 4]) => \"YES\"\n// exchange([1,\
    \ 2, 3, 4], [1, 5, 3, 4]) => \"NO\"\n// It is assumed that the input lists will\
    \ be non-empty.\nfunction exchange($lst1, $lst2) {\n    $odds = [];\n    $evens\
    \ = [];\n    foreach ($lst1 as $num) {\n        if ($num % 2 == 0) {\n       \
    \     $evens[] = $num;\n        } else {\n            $odds[] = $num;\n      \
    \  }\n    }\n    foreach ($lst2 as $num) {\n        if ($num % 2 == 0) {\n   \
    \         $evens[] = $num;\n        } else {\n            $odds[] = $num;\n  \
    \      }\n    }\n    if (count($odds) > count($evens)) {\n        return \"NO\"\
    ;\n    } else {\n        return \"YES\";\n    }\n}\n\nfunction candidate(...$args)\
    \ {\n    return exchange(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3, 4), array(1, 2, 3, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4), array(1, 5, 3, 4)) !== \"NO\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4), array(2,\
    \ 1, 4, 3)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 7, 3), array(2, 6, 4)) !== \"YES\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(5, 7, 3), array(2, 6, 3)) !== \"NO\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 6, 1, 8, 9), array(3,\
    \ 5, 5, 1, 1, 1)) !== \"NO\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(100, 200), array(200, 200)) !== \"YES\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// In this problem, you will implement a function that takes two\
    \ lists of numbers,\n// and determines whether it is possible to perform an exchange\
    \ of elements\n// between them to make lst1 a list of only even numbers.\n// There\
    \ is no limit on the number of exchanged elements between lst1 and lst2.\n// If\
    \ it is possible to exchange elements between the lst1 and lst2 to make\n// all\
    \ the elements of lst1 to be even, return \"YES\".\n// Otherwise, return \"NO\"\
    .\n// For example:\n// exchange([1, 2, 3, 4], [1, 2, 3, 4]) => \"YES\"\n// exchange([1,\
    \ 2, 3, 4], [1, 5, 3, 4]) => \"NO\"\n// It is assumed that the input lists will\
    \ be non-empty.\nfunction exchange($lst1, $lst2) {\n  $evens = array_filter($lst1,\
    \ function($n) { return $n % 2 == 0; });\n  $odds = array_filter($lst2, function($n)\
    \ { return $n % 2 != 0; });\n  return count($evens) == count($odds) ? \"YES\"\
    \ : \"NO\";\n}\n\nfunction candidate(...$args) {\n    return exchange(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4), array(1, 2,\
    \ 3, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4), array(1, 5, 3, 4)) !== \"NO\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4), array(2, 1, 4, 3)) !== \"YES\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 7, 3), array(2,\
    \ 6, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 7, 3), array(2, 6, 3)) !== \"NO\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(3, 2, 6, 1, 8, 9), array(3, 5, 5, 1, 1, 1)) !== \"\
    NO\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ 200), array(200, 200)) !== \"YES\") { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp9xzxlfot.php:30\n\
    Stack trace:\n#0 /tmp/tmp9xzxlfot.php(33): test()\n#1 {main}\n  thrown in /tmp/tmp9xzxlfot.php\
    \ on line 30\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// In this problem, you will implement a function that takes two\
    \ lists of numbers,\n// and determines whether it is possible to perform an exchange\
    \ of elements\n// between them to make lst1 a list of only even numbers.\n// There\
    \ is no limit on the number of exchanged elements between lst1 and lst2.\n// If\
    \ it is possible to exchange elements between the lst1 and lst2 to make\n// all\
    \ the elements of lst1 to be even, return \"YES\".\n// Otherwise, return \"NO\"\
    .\n// For example:\n// exchange([1, 2, 3, 4], [1, 2, 3, 4]) => \"YES\"\n// exchange([1,\
    \ 2, 3, 4], [1, 5, 3, 4]) => \"NO\"\n// It is assumed that the input lists will\
    \ be non-empty.\nfunction exchange($lst1, $lst2) {\n    $lst1_odd = array_filter($lst1,\
    \ function($n) { return $n % 2; });\n    $lst2_even = array_filter($lst2, function($n)\
    \ { return !($n % 2); });\n    return count($lst1_odd) == count($lst2_even) ?\
    \ \"YES\" : \"NO\";\n}\n\nfunction candidate(...$args) {\n    return exchange(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4), array(1, 2,\
    \ 3, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4), array(1, 5, 3, 4)) !== \"NO\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4), array(2, 1, 4, 3)) !== \"YES\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 7, 3), array(2,\
    \ 6, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 7, 3), array(2, 6, 3)) !== \"NO\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(3, 2, 6, 1, 8, 9), array(3, 5, 5, 1, 1, 1)) !== \"\
    NO\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ 200), array(200, 200)) !== \"YES\") { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp0dhabqta.php:30\n\
    Stack trace:\n#0 /tmp/tmp0dhabqta.php(33): test()\n#1 {main}\n  thrown in /tmp/tmp0dhabqta.php\
    \ on line 30\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// In this problem, you will implement a function that takes two\
    \ lists of numbers,\n// and determines whether it is possible to perform an exchange\
    \ of elements\n// between them to make lst1 a list of only even numbers.\n// There\
    \ is no limit on the number of exchanged elements between lst1 and lst2.\n// If\
    \ it is possible to exchange elements between the lst1 and lst2 to make\n// all\
    \ the elements of lst1 to be even, return \"YES\".\n// Otherwise, return \"NO\"\
    .\n// For example:\n// exchange([1, 2, 3, 4], [1, 2, 3, 4]) => \"YES\"\n// exchange([1,\
    \ 2, 3, 4], [1, 5, 3, 4]) => \"NO\"\n// It is assumed that the input lists will\
    \ be non-empty.\nfunction exchange($lst1, $lst2) {\n    $lst1_odd = array_filter($lst1,\
    \ function($n) {\n        return $n % 2 != 0;\n    });\n    $lst2_even = array_filter($lst2,\
    \ function($n) {\n        return $n % 2 == 0;\n    });\n    return count($lst1_odd)\
    \ == count($lst2_even) ? \"YES\" : \"NO\";\n}\nfunction candidate(...$args) {\n\
    \    return exchange(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3, 4), array(1, 2, 3, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4), array(1, 5, 3, 4)) !== \"NO\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4), array(2,\
    \ 1, 4, 3)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 7, 3), array(2, 6, 4)) !== \"YES\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(5, 7, 3), array(2, 6, 3)) !== \"NO\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 6, 1, 8, 9), array(3,\
    \ 5, 5, 1, 1, 1)) !== \"NO\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(100, 200), array(200, 200)) !== \"YES\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp588ms5qf.php:33\n\
    Stack trace:\n#0 /tmp/tmp588ms5qf.php(36): test()\n#1 {main}\n  thrown in /tmp/tmp588ms5qf.php\
    \ on line 33\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// In this problem, you will implement a function that takes two\
    \ lists of numbers,\n// and determines whether it is possible to perform an exchange\
    \ of elements\n// between them to make lst1 a list of only even numbers.\n// There\
    \ is no limit on the number of exchanged elements between lst1 and lst2.\n// If\
    \ it is possible to exchange elements between the lst1 and lst2 to make\n// all\
    \ the elements of lst1 to be even, return \"YES\".\n// Otherwise, return \"NO\"\
    .\n// For example:\n// exchange([1, 2, 3, 4], [1, 2, 3, 4]) => \"YES\"\n// exchange([1,\
    \ 2, 3, 4], [1, 5, 3, 4]) => \"NO\"\n// It is assumed that the input lists will\
    \ be non-empty.\nfunction exchange($lst1, $lst2) {\n    $odds = [];\n    $evens\
    \ = [];\n    for ($i = 0; $i < count($lst1); $i++) {\n        if ($lst1[$i] %\
    \ 2 == 0) {\n            $evens[] = $lst1[$i];\n        } else {\n           \
    \ $odds[] = $lst1[$i];\n        }\n    }\n    for ($i = 0; $i < count($lst2);\
    \ $i++) {\n        if ($lst2[$i] % 2 == 0) {\n            $evens[] = $lst2[$i];\n\
    \        } else {\n            $odds[] = $lst2[$i];\n        }\n    }\n    if\
    \ (count($evens) >= count($odds)) {\n        return \"YES\";\n    } else {\n \
    \       return \"NO\";\n    }\n}\n\necho exchange([1, 2, 3, 4], [1, 2, 3, 4])\
    \ . \"\\n\";\necho exchange([1, 2, 3, 4], [1, 5, 3, 4]) . \"\\n\";\necho exchange([1,\
    \ 2, 3, 4], [1, 5, 3, 4, 6]) . \"\\n\";\necho exchange([1, 2, 3, 4], [1, 5, 3,\
    \ 4, 6, 7]) . \"\\n\";\necho exchange([1, 2, 3, 4], [1, 5, 3, 4, 6, 7, 8]) . \"\
    \\n\";\necho exchange([1, 2, 3, 4], [1, 5, 3, 4, 6, 7, 8, 9]) . \"\\n\";\necho\
    \ exchange([1, 2, 3, 4], [1, 5, 3, 4, 6, 7, 8, 9, 10]) . \"\\n\";\necho exchange([1,\
    \ 2, 3, 4], [1, 5, 3, 4, 6, 7, 8, 9, 10, 11]) . \"\\n\";\necho exchange([1, 2,\
    \ 3, 4], [1, 5, 3, 4, 6, 7, 8, 9, 10, 11, 12]) . \"\\n\";\necho exchange([1, 2,\
    \ 3, 4], [1, 5, 3, 4\nfunction candidate(...$args) {\n    return exchange(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4), array(1, 2,\
    \ 3, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4), array(1, 5, 3, 4)) !== \"NO\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4), array(2, 1, 4, 3)) !== \"YES\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 7, 3), array(2,\
    \ 6, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 7, 3), array(2, 6, 3)) !== \"NO\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(3, 2, 6, 1, 8, 9), array(3, 5, 5, 1, 1, 1)) !== \"\
    NO\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ 200), array(200, 200)) !== \"YES\") { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Parse error:  syntax error, unexpected token \"function\", expecting\
    \ \"]\" in /tmp/tmpmv4e__az.php on line 47\n"
  exit_code: 255
  status: SyntaxError
- program: "<?php\n// In this problem, you will implement a function that takes two\
    \ lists of numbers,\n// and determines whether it is possible to perform an exchange\
    \ of elements\n// between them to make lst1 a list of only even numbers.\n// There\
    \ is no limit on the number of exchanged elements between lst1 and lst2.\n// If\
    \ it is possible to exchange elements between the lst1 and lst2 to make\n// all\
    \ the elements of lst1 to be even, return \"YES\".\n// Otherwise, return \"NO\"\
    .\n// For example:\n// exchange([1, 2, 3, 4], [1, 2, 3, 4]) => \"YES\"\n// exchange([1,\
    \ 2, 3, 4], [1, 5, 3, 4]) => \"NO\"\n// It is assumed that the input lists will\
    \ be non-empty.\nfunction exchange($lst1, $lst2) {\n  $even = array_filter($lst1,\
    \ function($num) {\n    return $num % 2 == 0;\n  });\n  $odd = array_filter($lst2,\
    \ function($num) {\n    return $num % 2 != 0;\n  });\n  return count($even) ==\
    \ count($lst1) ? \"YES\" : \"NO\";\n}\n\nfunction candidate(...$args) {\n    return\
    \ exchange(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3, 4), array(1, 2, 3, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4), array(1, 5, 3, 4)) !== \"NO\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4), array(2,\
    \ 1, 4, 3)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 7, 3), array(2, 6, 4)) !== \"YES\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(5, 7, 3), array(2, 6, 3)) !== \"NO\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 6, 1, 8, 9), array(3,\
    \ 5, 5, 1, 1, 1)) !== \"NO\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(100, 200), array(200, 200)) !== \"YES\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpsqvwtht4.php:28\n\
    Stack trace:\n#0 /tmp/tmpsqvwtht4.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpsqvwtht4.php\
    \ on line 28\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// In this problem, you will implement a function that takes two\
    \ lists of numbers,\n// and determines whether it is possible to perform an exchange\
    \ of elements\n// between them to make lst1 a list of only even numbers.\n// There\
    \ is no limit on the number of exchanged elements between lst1 and lst2.\n// If\
    \ it is possible to exchange elements between the lst1 and lst2 to make\n// all\
    \ the elements of lst1 to be even, return \"YES\".\n// Otherwise, return \"NO\"\
    .\n// For example:\n// exchange([1, 2, 3, 4], [1, 2, 3, 4]) => \"YES\"\n// exchange([1,\
    \ 2, 3, 4], [1, 5, 3, 4]) => \"NO\"\n// It is assumed that the input lists will\
    \ be non-empty.\nfunction exchange($lst1, $lst2) {\n    $odds = array_filter($lst1,\
    \ function($x) {\n        return $x % 2 != 0;\n    });\n    $evens = array_filter($lst2,\
    \ function($x) {\n        return $x % 2 == 0;\n    });\n    return count($odds)\
    \ == count($evens) ? \"YES\" : \"NO\";\n}\n\nfunction candidate(...$args) {\n\
    \    return exchange(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3, 4), array(1, 2, 3, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4), array(1, 5, 3, 4)) !== \"NO\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4), array(2,\
    \ 1, 4, 3)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 7, 3), array(2, 6, 4)) !== \"YES\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(5, 7, 3), array(2, 6, 3)) !== \"NO\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 6, 1, 8, 9), array(3,\
    \ 5, 5, 1, 1, 1)) !== \"NO\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(100, 200), array(200, 200)) !== \"YES\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpcjz94yf3.php:34\n\
    Stack trace:\n#0 /tmp/tmpcjz94yf3.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpcjz94yf3.php\
    \ on line 34\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// In this problem, you will implement a function that takes two\
    \ lists of numbers,\n// and determines whether it is possible to perform an exchange\
    \ of elements\n// between them to make lst1 a list of only even numbers.\n// There\
    \ is no limit on the number of exchanged elements between lst1 and lst2.\n// If\
    \ it is possible to exchange elements between the lst1 and lst2 to make\n// all\
    \ the elements of lst1 to be even, return \"YES\".\n// Otherwise, return \"NO\"\
    .\n// For example:\n// exchange([1, 2, 3, 4], [1, 2, 3, 4]) => \"YES\"\n// exchange([1,\
    \ 2, 3, 4], [1, 5, 3, 4]) => \"NO\"\n// It is assumed that the input lists will\
    \ be non-empty.\nfunction exchange($lst1, $lst2) {\n    $lst1_odd = [];\n    $lst2_even\
    \ = [];\n    foreach ($lst1 as $num) {\n        if ($num % 2 !== 0) {\n      \
    \      $lst1_odd[] = $num;\n        }\n    }\n    foreach ($lst2 as $num) {\n\
    \        if ($num % 2 === 0) {\n            $lst2_even[] = $num;\n        }\n\
    \    }\n    if (count($lst1_odd) === count($lst2_even)) {\n        return \"YES\"\
    ;\n    } else {\n        return \"NO\";\n    }\n}\n\nfunction candidate(...$args)\
    \ {\n    return exchange(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3, 4), array(1, 2, 3, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4), array(1, 5, 3, 4)) !== \"NO\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4), array(2,\
    \ 1, 4, 3)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 7, 3), array(2, 6, 4)) !== \"YES\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(5, 7, 3), array(2, 6, 3)) !== \"NO\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 6, 1, 8, 9), array(3,\
    \ 5, 5, 1, 1, 1)) !== \"NO\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(100, 200), array(200, 200)) !== \"YES\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpvbde19v_.php:44\n\
    Stack trace:\n#0 /tmp/tmpvbde19v_.php(47): test()\n#1 {main}\n  thrown in /tmp/tmpvbde19v_.php\
    \ on line 44\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// In this problem, you will implement a function that takes two\
    \ lists of numbers,\n// and determines whether it is possible to perform an exchange\
    \ of elements\n// between them to make lst1 a list of only even numbers.\n// There\
    \ is no limit on the number of exchanged elements between lst1 and lst2.\n// If\
    \ it is possible to exchange elements between the lst1 and lst2 to make\n// all\
    \ the elements of lst1 to be even, return \"YES\".\n// Otherwise, return \"NO\"\
    .\n// For example:\n// exchange([1, 2, 3, 4], [1, 2, 3, 4]) => \"YES\"\n// exchange([1,\
    \ 2, 3, 4], [1, 5, 3, 4]) => \"NO\"\n// It is assumed that the input lists will\
    \ be non-empty.\nfunction exchange($lst1, $lst2) {\n    $even = 0;\n    $odd =\
    \ 0;\n    for ($i = 0; $i < count($lst1); $i++) {\n        if ($lst1[$i] % 2 ==\
    \ 0) {\n            $even++;\n        } else {\n            $odd++;\n        }\n\
    \    }\n    for ($i = 0; $i < count($lst2); $i++) {\n        if ($lst2[$i] % 2\
    \ == 0) {\n            $even++;\n        } else {\n            $odd++;\n     \
    \   }\n    }\n    if ($even % 2 == 0 && $odd % 2 == 0) {\n        return \"YES\"\
    ;\n    } else {\n        return \"NO\";\n    }\n}\n\nfunction candidate(...$args)\
    \ {\n    return exchange(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3, 4), array(1, 2, 3, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4), array(1, 5, 3, 4)) !== \"NO\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4), array(2,\
    \ 1, 4, 3)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 7, 3), array(2, 6, 4)) !== \"YES\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(5, 7, 3), array(2, 6, 3)) !== \"NO\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 6, 1, 8, 9), array(3,\
    \ 5, 5, 1, 1, 1)) !== \"NO\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(100, 200), array(200, 200)) !== \"YES\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmptiyflqjv.php:45\n\
    Stack trace:\n#0 /tmp/tmptiyflqjv.php(51): test()\n#1 {main}\n  thrown in /tmp/tmptiyflqjv.php\
    \ on line 45\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// In this problem, you will implement a function that takes two\
    \ lists of numbers,\n// and determines whether it is possible to perform an exchange\
    \ of elements\n// between them to make lst1 a list of only even numbers.\n// There\
    \ is no limit on the number of exchanged elements between lst1 and lst2.\n// If\
    \ it is possible to exchange elements between the lst1 and lst2 to make\n// all\
    \ the elements of lst1 to be even, return \"YES\".\n// Otherwise, return \"NO\"\
    .\n// For example:\n// exchange([1, 2, 3, 4], [1, 2, 3, 4]) => \"YES\"\n// exchange([1,\
    \ 2, 3, 4], [1, 5, 3, 4]) => \"NO\"\n// It is assumed that the input lists will\
    \ be non-empty.\nfunction exchange($lst1, $lst2) {\n    $odds = [];\n    $evens\
    \ = [];\n    foreach ($lst1 as $num) {\n        if ($num % 2 === 0) {\n      \
    \      $evens[] = $num;\n        } else {\n            $odds[] = $num;\n     \
    \   }\n    }\n    foreach ($lst2 as $num) {\n        if ($num % 2 === 0) {\n \
    \           $evens[] = $num;\n        } else {\n            $odds[] = $num;\n\
    \        }\n    }\n    return count($evens) > count($odds) ? \"YES\" : \"NO\"\
    ;\n}\n\nfunction candidate(...$args) {\n    return exchange(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(1, 2, 3, 4), array(1, 2, 3, 4))\
    \ !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4), array(1, 5, 3, 4)) !== \"NO\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4), array(2, 1, 4, 3)) !== \"YES\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 7, 3), array(2,\
    \ 6, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 7, 3), array(2, 6, 3)) !== \"NO\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(3, 2, 6, 1, 8, 9), array(3, 5, 5, 1, 1, 1)) !== \"\
    NO\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ 200), array(200, 200)) !== \"YES\") { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpakruu9am.php:38\n\
    Stack trace:\n#0 /tmp/tmpakruu9am.php(47): test()\n#1 {main}\n  thrown in /tmp/tmpakruu9am.php\
    \ on line 38\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// In this problem, you will implement a function that takes two\
    \ lists of numbers,\n// and determines whether it is possible to perform an exchange\
    \ of elements\n// between them to make lst1 a list of only even numbers.\n// There\
    \ is no limit on the number of exchanged elements between lst1 and lst2.\n// If\
    \ it is possible to exchange elements between the lst1 and lst2 to make\n// all\
    \ the elements of lst1 to be even, return \"YES\".\n// Otherwise, return \"NO\"\
    .\n// For example:\n// exchange([1, 2, 3, 4], [1, 2, 3, 4]) => \"YES\"\n// exchange([1,\
    \ 2, 3, 4], [1, 5, 3, 4]) => \"NO\"\n// It is assumed that the input lists will\
    \ be non-empty.\nfunction exchange($lst1, $lst2) {\n  $odds = array_filter($lst1,\
    \ function($n) { return $n % 2; });\n  $evens = array_filter($lst2, function($n)\
    \ { return !($n % 2); });\n  return count($odds) == count($evens) ? \"YES\" :\
    \ \"NO\";\n}\n\nfunction candidate(...$args) {\n    return exchange(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4), array(1, 2,\
    \ 3, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4), array(1, 5, 3, 4)) !== \"NO\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4), array(2, 1, 4, 3)) !== \"YES\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 7, 3), array(2,\
    \ 6, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 7, 3), array(2, 6, 3)) !== \"NO\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(3, 2, 6, 1, 8, 9), array(3, 5, 5, 1, 1, 1)) !== \"\
    NO\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ 200), array(200, 200)) !== \"YES\") { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpaoi9umvg.php:30\n\
    Stack trace:\n#0 /tmp/tmpaoi9umvg.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpaoi9umvg.php\
    \ on line 30\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// In this problem, you will implement a function that takes two\
    \ lists of numbers,\n// and determines whether it is possible to perform an exchange\
    \ of elements\n// between them to make lst1 a list of only even numbers.\n// There\
    \ is no limit on the number of exchanged elements between lst1 and lst2.\n// If\
    \ it is possible to exchange elements between the lst1 and lst2 to make\n// all\
    \ the elements of lst1 to be even, return \"YES\".\n// Otherwise, return \"NO\"\
    .\n// For example:\n// exchange([1, 2, 3, 4], [1, 2, 3, 4]) => \"YES\"\n// exchange([1,\
    \ 2, 3, 4], [1, 5, 3, 4]) => \"NO\"\n// It is assumed that the input lists will\
    \ be non-empty.\nfunction exchange($lst1, $lst2) {\n    $odds = array_filter($lst1,\
    \ function($n) { return $n % 2 !== 0; });\n    $evens = array_filter($lst2, function($n)\
    \ { return $n % 2 === 0; });\n    return count($odds) === count($evens) ? \"YES\"\
    \ : \"NO\";\n}\n\nfunction candidate(...$args) {\n    return exchange(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4), array(1, 2,\
    \ 3, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4), array(1, 5, 3, 4)) !== \"NO\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4), array(2, 1, 4, 3)) !== \"YES\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 7, 3), array(2,\
    \ 6, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 7, 3), array(2, 6, 3)) !== \"NO\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(3, 2, 6, 1, 8, 9), array(3, 5, 5, 1, 1, 1)) !== \"\
    NO\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ 200), array(200, 200)) !== \"YES\") { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp4yghk0y8.php:30\n\
    Stack trace:\n#0 /tmp/tmp4yghk0y8.php(33): test()\n#1 {main}\n  thrown in /tmp/tmp4yghk0y8.php\
    \ on line 30\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// In this problem, you will implement a function that takes two\
    \ lists of numbers,\n// and determines whether it is possible to perform an exchange\
    \ of elements\n// between them to make lst1 a list of only even numbers.\n// There\
    \ is no limit on the number of exchanged elements between lst1 and lst2.\n// If\
    \ it is possible to exchange elements between the lst1 and lst2 to make\n// all\
    \ the elements of lst1 to be even, return \"YES\".\n// Otherwise, return \"NO\"\
    .\n// For example:\n// exchange([1, 2, 3, 4], [1, 2, 3, 4]) => \"YES\"\n// exchange([1,\
    \ 2, 3, 4], [1, 5, 3, 4]) => \"NO\"\n// It is assumed that the input lists will\
    \ be non-empty.\nfunction exchange($lst1, $lst2) {\n  $odds = 0;\n  $evens = 0;\n\
    \  for ($i = 0; $i < count($lst1); $i++) {\n    if ($lst1[$i] % 2 == 0) {\n  \
    \    $evens++;\n    } else {\n      $odds++;\n    }\n  }\n  for ($i = 0; $i <\
    \ count($lst2); $i++) {\n    if ($lst2[$i] % 2 == 0) {\n      $evens++;\n    }\
    \ else {\n      $odds++;\n    }\n  }\n  if ($evens % 2 == 0) {\n    return \"\
    YES\";\n  } else {\n    return \"NO\";\n  }\n}\n\nfunction candidate(...$args)\
    \ {\n    return exchange(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3, 4), array(1, 2, 3, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4), array(1, 5, 3, 4)) !== \"NO\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4), array(2,\
    \ 1, 4, 3)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 7, 3), array(2, 6, 4)) !== \"YES\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(5, 7, 3), array(2, 6, 3)) !== \"NO\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 6, 1, 8, 9), array(3,\
    \ 5, 5, 1, 1, 1)) !== \"NO\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(100, 200), array(200, 200)) !== \"YES\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmphzstpm3f.php:45\n\
    Stack trace:\n#0 /tmp/tmphzstpm3f.php(51): test()\n#1 {main}\n  thrown in /tmp/tmphzstpm3f.php\
    \ on line 45\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// In this problem, you will implement a function that takes two\
    \ lists of numbers,\n// and determines whether it is possible to perform an exchange\
    \ of elements\n// between them to make lst1 a list of only even numbers.\n// There\
    \ is no limit on the number of exchanged elements between lst1 and lst2.\n// If\
    \ it is possible to exchange elements between the lst1 and lst2 to make\n// all\
    \ the elements of lst1 to be even, return \"YES\".\n// Otherwise, return \"NO\"\
    .\n// For example:\n// exchange([1, 2, 3, 4], [1, 2, 3, 4]) => \"YES\"\n// exchange([1,\
    \ 2, 3, 4], [1, 5, 3, 4]) => \"NO\"\n// It is assumed that the input lists will\
    \ be non-empty.\nfunction exchange($lst1, $lst2) {\n    $odds = 0;\n    $evens\
    \ = 0;\n    foreach ($lst1 as $num) {\n        if ($num % 2 == 0) {\n        \
    \    $evens++;\n        } else {\n            $odds++;\n        }\n    }\n   \
    \ foreach ($lst2 as $num) {\n        if ($num % 2 == 0) {\n            $evens++;\n\
    \        } else {\n            $odds++;\n        }\n    }\n    if ($evens > $odds)\
    \ {\n        return \"YES\";\n    } else {\n        return \"NO\";\n    }\n}\n\
    function candidate(...$args) {\n    return exchange(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 2, 3, 4), array(1, 2, 3, 4)) !==\
    \ \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4), array(1, 5, 3, 4)) !== \"NO\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4), array(2, 1, 4, 3)) !== \"YES\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 7, 3), array(2,\
    \ 6, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 7, 3), array(2, 6, 3)) !== \"NO\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(3, 2, 6, 1, 8, 9), array(3, 5, 5, 1, 1, 1)) !== \"\
    NO\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ 200), array(200, 200)) !== \"YES\") { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpjfxkh22l.php:41\n\
    Stack trace:\n#0 /tmp/tmpjfxkh22l.php(50): test()\n#1 {main}\n  thrown in /tmp/tmpjfxkh22l.php\
    \ on line 41\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// In this problem, you will implement a function that takes two\
    \ lists of numbers,\n// and determines whether it is possible to perform an exchange\
    \ of elements\n// between them to make lst1 a list of only even numbers.\n// There\
    \ is no limit on the number of exchanged elements between lst1 and lst2.\n// If\
    \ it is possible to exchange elements between the lst1 and lst2 to make\n// all\
    \ the elements of lst1 to be even, return \"YES\".\n// Otherwise, return \"NO\"\
    .\n// For example:\n// exchange([1, 2, 3, 4], [1, 2, 3, 4]) => \"YES\"\n// exchange([1,\
    \ 2, 3, 4], [1, 5, 3, 4]) => \"NO\"\n// It is assumed that the input lists will\
    \ be non-empty.\nfunction exchange($lst1, $lst2) {\n  $lst1 = array_filter($lst1,\
    \ function($x) { return $x % 2 == 0; });\n  $lst2 = array_filter($lst2, function($x)\
    \ { return $x % 2 == 1; });\n  return count($lst1) == count($lst2) ? \"YES\" :\
    \ \"NO\";\n}\n\nfunction candidate(...$args) {\n    return exchange(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4), array(1, 2,\
    \ 3, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4), array(1, 5, 3, 4)) !== \"NO\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4), array(2, 1, 4, 3)) !== \"YES\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 7, 3), array(2,\
    \ 6, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 7, 3), array(2, 6, 3)) !== \"NO\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(3, 2, 6, 1, 8, 9), array(3, 5, 5, 1, 1, 1)) !== \"\
    NO\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ 200), array(200, 200)) !== \"YES\") { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpwar3g7tl.php:30\n\
    Stack trace:\n#0 /tmp/tmpwar3g7tl.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpwar3g7tl.php\
    \ on line 30\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// In this problem, you will implement a function that takes two\
    \ lists of numbers,\n// and determines whether it is possible to perform an exchange\
    \ of elements\n// between them to make lst1 a list of only even numbers.\n// There\
    \ is no limit on the number of exchanged elements between lst1 and lst2.\n// If\
    \ it is possible to exchange elements between the lst1 and lst2 to make\n// all\
    \ the elements of lst1 to be even, return \"YES\".\n// Otherwise, return \"NO\"\
    .\n// For example:\n// exchange([1, 2, 3, 4], [1, 2, 3, 4]) => \"YES\"\n// exchange([1,\
    \ 2, 3, 4], [1, 5, 3, 4]) => \"NO\"\n// It is assumed that the input lists will\
    \ be non-empty.\nfunction exchange($lst1, $lst2) {\n    $odds = array_filter($lst1,\
    \ function($n) { return $n % 2; });\n    $evens = array_filter($lst2, function($n)\
    \ { return !($n % 2); });\n    return count($odds) == count($evens) ? \"YES\"\
    \ : \"NO\";\n}\n\nfunction candidate(...$args) {\n    return exchange(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4), array(1, 2,\
    \ 3, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4), array(1, 5, 3, 4)) !== \"NO\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4), array(2, 1, 4, 3)) !== \"YES\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 7, 3), array(2,\
    \ 6, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 7, 3), array(2, 6, 3)) !== \"NO\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(3, 2, 6, 1, 8, 9), array(3, 5, 5, 1, 1, 1)) !== \"\
    NO\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ 200), array(200, 200)) !== \"YES\") { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpyrijm0yx.php:30\n\
    Stack trace:\n#0 /tmp/tmpyrijm0yx.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpyrijm0yx.php\
    \ on line 30\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// In this problem, you will implement a function that takes two\
    \ lists of numbers,\n// and determines whether it is possible to perform an exchange\
    \ of elements\n// between them to make lst1 a list of only even numbers.\n// There\
    \ is no limit on the number of exchanged elements between lst1 and lst2.\n// If\
    \ it is possible to exchange elements between the lst1 and lst2 to make\n// all\
    \ the elements of lst1 to be even, return \"YES\".\n// Otherwise, return \"NO\"\
    .\n// For example:\n// exchange([1, 2, 3, 4], [1, 2, 3, 4]) => \"YES\"\n// exchange([1,\
    \ 2, 3, 4], [1, 5, 3, 4]) => \"NO\"\n// It is assumed that the input lists will\
    \ be non-empty.\nfunction exchange($lst1, $lst2) {\n    $odds = 0;\n    $evens\
    \ = 0;\n    for ($i = 0; $i < count($lst1); $i++) {\n        if ($lst1[$i] % 2\
    \ == 0) {\n            $evens++;\n        } else {\n            $odds++;\n   \
    \     }\n    }\n    for ($i = 0; $i < count($lst2); $i++) {\n        if ($lst2[$i]\
    \ % 2 == 0) {\n            $evens++;\n        } else {\n            $odds++;\n\
    \        }\n    }\n    if ($evens % 2 == 0) {\n        return \"YES\";\n    }\
    \ else {\n        return \"NO\";\n    }\n}\n\nfunction candidate(...$args) {\n\
    \    return exchange(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3, 4), array(1, 2, 3, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4), array(1, 5, 3, 4)) !== \"NO\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4), array(2,\
    \ 1, 4, 3)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 7, 3), array(2, 6, 4)) !== \"YES\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(5, 7, 3), array(2, 6, 3)) !== \"NO\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 6, 1, 8, 9), array(3,\
    \ 5, 5, 1, 1, 1)) !== \"NO\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(100, 200), array(200, 200)) !== \"YES\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmplvj3u1bp.php:45\n\
    Stack trace:\n#0 /tmp/tmplvj3u1bp.php(51): test()\n#1 {main}\n  thrown in /tmp/tmplvj3u1bp.php\
    \ on line 45\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// In this problem, you will implement a function that takes two\
    \ lists of numbers,\n// and determines whether it is possible to perform an exchange\
    \ of elements\n// between them to make lst1 a list of only even numbers.\n// There\
    \ is no limit on the number of exchanged elements between lst1 and lst2.\n// If\
    \ it is possible to exchange elements between the lst1 and lst2 to make\n// all\
    \ the elements of lst1 to be even, return \"YES\".\n// Otherwise, return \"NO\"\
    .\n// For example:\n// exchange([1, 2, 3, 4], [1, 2, 3, 4]) => \"YES\"\n// exchange([1,\
    \ 2, 3, 4], [1, 5, 3, 4]) => \"NO\"\n// It is assumed that the input lists will\
    \ be non-empty.\nfunction exchange($lst1, $lst2) {\n    $lst1_odd = array_filter($lst1,\
    \ function($x) { return $x % 2 == 1; });\n    $lst2_even = array_filter($lst2,\
    \ function($x) { return $x % 2 == 0; });\n    return count($lst1_odd) == count($lst2_even)\
    \ ? \"YES\" : \"NO\";\n}\nfunction candidate(...$args) {\n    return exchange(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4), array(1, 2,\
    \ 3, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4), array(1, 5, 3, 4)) !== \"NO\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4), array(2, 1, 4, 3)) !== \"YES\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 7, 3), array(2,\
    \ 6, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 7, 3), array(2, 6, 3)) !== \"NO\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(3, 2, 6, 1, 8, 9), array(3, 5, 5, 1, 1, 1)) !== \"\
    NO\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ 200), array(200, 200)) !== \"YES\") { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpzrrpcg0k.php:29\n\
    Stack trace:\n#0 /tmp/tmpzrrpcg0k.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpzrrpcg0k.php\
    \ on line 29\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// In this problem, you will implement a function that takes two\
    \ lists of numbers,\n// and determines whether it is possible to perform an exchange\
    \ of elements\n// between them to make lst1 a list of only even numbers.\n// There\
    \ is no limit on the number of exchanged elements between lst1 and lst2.\n// If\
    \ it is possible to exchange elements between the lst1 and lst2 to make\n// all\
    \ the elements of lst1 to be even, return \"YES\".\n// Otherwise, return \"NO\"\
    .\n// For example:\n// exchange([1, 2, 3, 4], [1, 2, 3, 4]) => \"YES\"\n// exchange([1,\
    \ 2, 3, 4], [1, 5, 3, 4]) => \"NO\"\n// It is assumed that the input lists will\
    \ be non-empty.\nfunction exchange($lst1, $lst2) {\n  $odds = 0;\n  $evens = 0;\n\
    \  foreach ($lst1 as $num) {\n    if ($num % 2 == 0) {\n      $evens++;\n    }\
    \ else {\n      $odds++;\n    }\n  }\n  foreach ($lst2 as $num) {\n    if ($num\
    \ % 2 == 0) {\n      $evens++;\n    } else {\n      $odds++;\n    }\n  }\n  if\
    \ ($evens % 2 == 0) {\n    return \"YES\";\n  } else {\n    return \"NO\";\n \
    \ }\n}\n\nfunction candidate(...$args) {\n    return exchange(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(1, 2, 3, 4), array(1, 2, 3, 4))\
    \ !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4), array(1, 5, 3, 4)) !== \"NO\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4), array(2, 1, 4, 3)) !== \"YES\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 7, 3), array(2,\
    \ 6, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 7, 3), array(2, 6, 3)) !== \"NO\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(3, 2, 6, 1, 8, 9), array(3, 5, 5, 1, 1, 1)) !== \"\
    NO\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ 200), array(200, 200)) !== \"YES\") { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpan3_a0ev.php:45\n\
    Stack trace:\n#0 /tmp/tmpan3_a0ev.php(51): test()\n#1 {main}\n  thrown in /tmp/tmpan3_a0ev.php\
    \ on line 45\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// In this problem, you will implement a function that takes two\
    \ lists of numbers,\n// and determines whether it is possible to perform an exchange\
    \ of elements\n// between them to make lst1 a list of only even numbers.\n// There\
    \ is no limit on the number of exchanged elements between lst1 and lst2.\n// If\
    \ it is possible to exchange elements between the lst1 and lst2 to make\n// all\
    \ the elements of lst1 to be even, return \"YES\".\n// Otherwise, return \"NO\"\
    .\n// For example:\n// exchange([1, 2, 3, 4], [1, 2, 3, 4]) => \"YES\"\n// exchange([1,\
    \ 2, 3, 4], [1, 5, 3, 4]) => \"NO\"\n// It is assumed that the input lists will\
    \ be non-empty.\nfunction exchange($lst1, $lst2) {\n  $odds = [];\n  $evens =\
    \ [];\n  $lst1 = array_filter($lst1, function($num) use (&$odds, &$evens) {\n\
    \    if ($num % 2 == 0) {\n      $evens[] = $num;\n      return false;\n    }\
    \ else {\n      $odds[] = $num;\n      return true;\n    }\n  });\n  $lst2 = array_filter($lst2,\
    \ function($num) use (&$odds, &$evens) {\n    if ($num % 2 == 0) {\n      $evens[]\
    \ = $num;\n      return false;\n    } else {\n      $odds[] = $num;\n      return\
    \ true;\n    }\n  });\n  if (count($lst1) == 0) {\n    return \"YES\";\n  } else\
    \ if (count($lst2) == 0) {\n    return \"NO\";\n  } else {\n    return \"NO\"\
    ;\n  }\n}\n\nfunction candidate(...$args) {\n    return exchange(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4), array(1, 2,\
    \ 3, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4), array(1, 5, 3, 4)) !== \"NO\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4), array(2, 1, 4, 3)) !== \"YES\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 7, 3), array(2,\
    \ 6, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 7, 3), array(2, 6, 3)) !== \"NO\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(3, 2, 6, 1, 8, 9), array(3, 5, 5, 1, 1, 1)) !== \"\
    NO\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ 200), array(200, 200)) !== \"YES\") { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp0yb4b_z8.php:48\n\
    Stack trace:\n#0 /tmp/tmp0yb4b_z8.php(57): test()\n#1 {main}\n  thrown in /tmp/tmp0yb4b_z8.php\
    \ on line 48\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// In this problem, you will implement a function that takes two\
    \ lists of numbers,\n// and determines whether it is possible to perform an exchange\
    \ of elements\n// between them to make lst1 a list of only even numbers.\n// There\
    \ is no limit on the number of exchanged elements between lst1 and lst2.\n// If\
    \ it is possible to exchange elements between the lst1 and lst2 to make\n// all\
    \ the elements of lst1 to be even, return \"YES\".\n// Otherwise, return \"NO\"\
    .\n// For example:\n// exchange([1, 2, 3, 4], [1, 2, 3, 4]) => \"YES\"\n// exchange([1,\
    \ 2, 3, 4], [1, 5, 3, 4]) => \"NO\"\n// It is assumed that the input lists will\
    \ be non-empty.\nfunction exchange($lst1, $lst2) {\n    $odds = 0;\n    $evens\
    \ = 0;\n    for ($i = 0; $i < count($lst1); $i++) {\n        if ($lst1[$i] % 2\
    \ == 0) {\n            $evens++;\n        } else {\n            $odds++;\n   \
    \     }\n    }\n    for ($i = 0; $i < count($lst2); $i++) {\n        if ($lst2[$i]\
    \ % 2 == 0) {\n            $evens++;\n        } else {\n            $odds++;\n\
    \        }\n    }\n    if ($evens % 2 == 0 && $odds % 2 == 0) {\n        return\
    \ \"YES\";\n    } else {\n        return \"NO\";\n    }\n}\n\nfunction candidate(...$args)\
    \ {\n    return exchange(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3, 4), array(1, 2, 3, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4), array(1, 5, 3, 4)) !== \"NO\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4), array(2,\
    \ 1, 4, 3)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 7, 3), array(2, 6, 4)) !== \"YES\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(5, 7, 3), array(2, 6, 3)) !== \"NO\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 6, 1, 8, 9), array(3,\
    \ 5, 5, 1, 1, 1)) !== \"NO\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(100, 200), array(200, 200)) !== \"YES\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp441niatx.php:45\n\
    Stack trace:\n#0 /tmp/tmp441niatx.php(51): test()\n#1 {main}\n  thrown in /tmp/tmp441niatx.php\
    \ on line 45\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// In this problem, you will implement a function that takes two\
    \ lists of numbers,\n// and determines whether it is possible to perform an exchange\
    \ of elements\n// between them to make lst1 a list of only even numbers.\n// There\
    \ is no limit on the number of exchanged elements between lst1 and lst2.\n// If\
    \ it is possible to exchange elements between the lst1 and lst2 to make\n// all\
    \ the elements of lst1 to be even, return \"YES\".\n// Otherwise, return \"NO\"\
    .\n// For example:\n// exchange([1, 2, 3, 4], [1, 2, 3, 4]) => \"YES\"\n// exchange([1,\
    \ 2, 3, 4], [1, 5, 3, 4]) => \"NO\"\n// It is assumed that the input lists will\
    \ be non-empty.\nfunction exchange($lst1, $lst2) {\n    $odds = array_filter($lst1,\
    \ function($n) { return $n % 2 == 1; });\n    $evens = array_filter($lst2, function($n)\
    \ { return $n % 2 == 0; });\n    return count($odds) == count($evens) ? \"YES\"\
    \ : \"NO\";\n}\n\nfunction candidate(...$args) {\n    return exchange(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4), array(1, 2,\
    \ 3, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4), array(1, 5, 3, 4)) !== \"NO\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4), array(2, 1, 4, 3)) !== \"YES\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 7, 3), array(2,\
    \ 6, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 7, 3), array(2, 6, 3)) !== \"NO\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(3, 2, 6, 1, 8, 9), array(3, 5, 5, 1, 1, 1)) !== \"\
    NO\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ 200), array(200, 200)) !== \"YES\") { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpulpo79he.php:30\n\
    Stack trace:\n#0 /tmp/tmpulpo79he.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpulpo79he.php\
    \ on line 30\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// In this problem, you will implement a function that takes two\
    \ lists of numbers,\n// and determines whether it is possible to perform an exchange\
    \ of elements\n// between them to make lst1 a list of only even numbers.\n// There\
    \ is no limit on the number of exchanged elements between lst1 and lst2.\n// If\
    \ it is possible to exchange elements between the lst1 and lst2 to make\n// all\
    \ the elements of lst1 to be even, return \"YES\".\n// Otherwise, return \"NO\"\
    .\n// For example:\n// exchange([1, 2, 3, 4], [1, 2, 3, 4]) => \"YES\"\n// exchange([1,\
    \ 2, 3, 4], [1, 5, 3, 4]) => \"NO\"\n// It is assumed that the input lists will\
    \ be non-empty.\nfunction exchange($lst1, $lst2) {\n    $lst1_odd = 0;\n    $lst2_odd\
    \ = 0;\n    foreach ($lst1 as $num) {\n        if ($num % 2 != 0) {\n        \
    \    $lst1_odd++;\n        }\n    }\n    foreach ($lst2 as $num) {\n        if\
    \ ($num % 2 != 0) {\n            $lst2_odd++;\n        }\n    }\n    if ($lst1_odd\
    \ == $lst2_odd) {\n        return \"YES\";\n    } else {\n        return \"NO\"\
    ;\n    }\n}\necho exchange([1, 2, 3, 4], [1, 2, 3, 4]) . \"\\n\";\necho exchange([1,\
    \ 2, 3, 4], [1, 5, 3, 4]) . \"\\n\";\nfunction candidate(...$args) {\n    return\
    \ exchange(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3, 4), array(1, 2, 3, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4), array(1, 5, 3, 4)) !== \"NO\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4), array(2,\
    \ 1, 4, 3)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 7, 3), array(2, 6, 4)) !== \"YES\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(5, 7, 3), array(2, 6, 3)) !== \"NO\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 6, 1, 8, 9), array(3,\
    \ 5, 5, 1, 1, 1)) !== \"NO\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(100, 200), array(200, 200)) !== \"YES\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "YES\nNO\n"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmplc8s28nh.php:42\n\
    Stack trace:\n#0 /tmp/tmplc8s28nh.php(48): test()\n#1 {main}\n  thrown in /tmp/tmplc8s28nh.php\
    \ on line 42\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// In this problem, you will implement a function that takes two\
    \ lists of numbers,\n// and determines whether it is possible to perform an exchange\
    \ of elements\n// between them to make lst1 a list of only even numbers.\n// There\
    \ is no limit on the number of exchanged elements between lst1 and lst2.\n// If\
    \ it is possible to exchange elements between the lst1 and lst2 to make\n// all\
    \ the elements of lst1 to be even, return \"YES\".\n// Otherwise, return \"NO\"\
    .\n// For example:\n// exchange([1, 2, 3, 4], [1, 2, 3, 4]) => \"YES\"\n// exchange([1,\
    \ 2, 3, 4], [1, 5, 3, 4]) => \"NO\"\n// It is assumed that the input lists will\
    \ be non-empty.\nfunction exchange($lst1, $lst2) {\n    $odd1 = array_filter($lst1,\
    \ function($n) { return $n % 2; });\n    $odd2 = array_filter($lst2, function($n)\
    \ { return $n % 2; });\n    return count($odd1) === count($odd2) ? \"YES\" : \"\
    NO\";\n}\n\nfunction candidate(...$args) {\n    return exchange(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4), array(1, 2, 3,\
    \ 4)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4), array(1, 5, 3, 4)) !== \"NO\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4), array(2, 1, 4, 3)) !== \"YES\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 7, 3), array(2,\
    \ 6, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 7, 3), array(2, 6, 3)) !== \"NO\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(3, 2, 6, 1, 8, 9), array(3, 5, 5, 1, 1, 1)) !== \"\
    NO\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ 200), array(200, 200)) !== \"YES\") { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpttxfetj4.php:27\n\
    Stack trace:\n#0 /tmp/tmpttxfetj4.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpttxfetj4.php\
    \ on line 27\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// In this problem, you will implement a function that takes two\
    \ lists of numbers,\n// and determines whether it is possible to perform an exchange\
    \ of elements\n// between them to make lst1 a list of only even numbers.\n// There\
    \ is no limit on the number of exchanged elements between lst1 and lst2.\n// If\
    \ it is possible to exchange elements between the lst1 and lst2 to make\n// all\
    \ the elements of lst1 to be even, return \"YES\".\n// Otherwise, return \"NO\"\
    .\n// For example:\n// exchange([1, 2, 3, 4], [1, 2, 3, 4]) => \"YES\"\n// exchange([1,\
    \ 2, 3, 4], [1, 5, 3, 4]) => \"NO\"\n// It is assumed that the input lists will\
    \ be non-empty.\nfunction exchange($lst1, $lst2) {\n  $lst1 = array_filter($lst1,\
    \ function($x) { return $x % 2 == 0; });\n  $lst2 = array_filter($lst2, function($x)\
    \ { return $x % 2 == 1; });\n  return (count($lst1) + count($lst2) == count($lst1)\
    \ + count($lst2)) ? \"YES\" : \"NO\";\n}\n\nfunction candidate(...$args) {\n \
    \   return exchange(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3, 4), array(1, 2, 3, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4), array(1, 5, 3, 4)) !== \"NO\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4), array(2,\
    \ 1, 4, 3)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 7, 3), array(2, 6, 4)) !== \"YES\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(5, 7, 3), array(2, 6, 3)) !== \"NO\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 6, 1, 8, 9), array(3,\
    \ 5, 5, 1, 1, 1)) !== \"NO\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(100, 200), array(200, 200)) !== \"YES\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpkl1ged86.php:25\n\
    Stack trace:\n#0 /tmp/tmpkl1ged86.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpkl1ged86.php\
    \ on line 25\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// In this problem, you will implement a function that takes two\
    \ lists of numbers,\n// and determines whether it is possible to perform an exchange\
    \ of elements\n// between them to make lst1 a list of only even numbers.\n// There\
    \ is no limit on the number of exchanged elements between lst1 and lst2.\n// If\
    \ it is possible to exchange elements between the lst1 and lst2 to make\n// all\
    \ the elements of lst1 to be even, return \"YES\".\n// Otherwise, return \"NO\"\
    .\n// For example:\n// exchange([1, 2, 3, 4], [1, 2, 3, 4]) => \"YES\"\n// exchange([1,\
    \ 2, 3, 4], [1, 5, 3, 4]) => \"NO\"\n// It is assumed that the input lists will\
    \ be non-empty.\nfunction exchange($lst1, $lst2) {\n    $lst1 = array_filter($lst1,\
    \ function($n) { return $n % 2 == 0; });\n    $lst2 = array_filter($lst2, function($n)\
    \ { return $n % 2 == 1; });\n    return count($lst1) == count($lst2) ? \"YES\"\
    \ : \"NO\";\n}\n\nfunction candidate(...$args) {\n    return exchange(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4), array(1, 2,\
    \ 3, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4), array(1, 5, 3, 4)) !== \"NO\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4), array(2, 1, 4, 3)) !== \"YES\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 7, 3), array(2,\
    \ 6, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 7, 3), array(2, 6, 3)) !== \"NO\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(3, 2, 6, 1, 8, 9), array(3, 5, 5, 1, 1, 1)) !== \"\
    NO\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ 200), array(200, 200)) !== \"YES\") { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmprmi5dl6p.php:30\n\
    Stack trace:\n#0 /tmp/tmprmi5dl6p.php(33): test()\n#1 {main}\n  thrown in /tmp/tmprmi5dl6p.php\
    \ on line 30\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// In this problem, you will implement a function that takes two\
    \ lists of numbers,\n// and determines whether it is possible to perform an exchange\
    \ of elements\n// between them to make lst1 a list of only even numbers.\n// There\
    \ is no limit on the number of exchanged elements between lst1 and lst2.\n// If\
    \ it is possible to exchange elements between the lst1 and lst2 to make\n// all\
    \ the elements of lst1 to be even, return \"YES\".\n// Otherwise, return \"NO\"\
    .\n// For example:\n// exchange([1, 2, 3, 4], [1, 2, 3, 4]) => \"YES\"\n// exchange([1,\
    \ 2, 3, 4], [1, 5, 3, 4]) => \"NO\"\n// It is assumed that the input lists will\
    \ be non-empty.\nfunction exchange($lst1, $lst2) {\n    $even = 0;\n    $odd =\
    \ 0;\n    foreach ($lst1 as $num) {\n        if ($num % 2 == 0) {\n          \
    \  $even++;\n        } else {\n            $odd++;\n        }\n    }\n    foreach\
    \ ($lst2 as $num) {\n        if ($num % 2 == 0) {\n            $even++;\n    \
    \    } else {\n            $odd++;\n        }\n    }\n    if ($even % 2 == 0 &&\
    \ $odd % 2 == 0) {\n        return \"YES\";\n    } else {\n        return \"NO\"\
    ;\n    }\n}\n\necho exchange([1, 2, 3, 4], [1, 2, 3, 4]) . \"\\n\";\necho exchange([1,\
    \ 2, 3, 4], [1, 5, 3, 4]) . \"\\n\";\necho exchange([1, 2, 3, 4], [1, 5, 3, 4,\
    \ 6]) . \"\\n\";\necho exchange([1, 2, 3, 4], [1, 5, 3, 4, 6, 7]) . \"\\n\";\n\
    echo exchange([1, 2, 3, 4], [1, 5, 3, 4, 6, 7, 8]) . \"\\n\";\necho exchange([1,\
    \ 2, 3, 4], [1, 5, 3, 4, 6, 7, 8, 9]) . \"\\n\";\necho exchange([1, 2, 3, 4],\
    \ [1, 5, 3, 4, 6, 7, 8, 9, 10]) . \"\\n\";\necho exchange([1, 2, 3, 4], [1, 5,\
    \ 3, 4, 6, 7, 8, 9, 10, 11]) . \"\\n\";\necho exchange([1, 2, 3, 4], [1, 5, 3,\
    \ 4, 6, 7, 8, 9, 10, 11, 12]) . \"\\n\";\necho exchange([1, 2, 3, 4], [1, 5, 3,\
    \ 4, 6, 7, 8, 9, 10, 11, 12, 13]) . \"\\n\";\necho exchange([1, 2, 3, 4], [1,\
    \ 5, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14]) . \"\\n\";\necho\nfunction candidate(...$args)\
    \ {\n    return exchange(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3, 4), array(1, 2, 3, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4), array(1, 5, 3, 4)) !== \"NO\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4), array(2,\
    \ 1, 4, 3)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 7, 3), array(2, 6, 4)) !== \"YES\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(5, 7, 3), array(2, 6, 3)) !== \"NO\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 6, 1, 8, 9), array(3,\
    \ 5, 5, 1, 1, 1)) !== \"NO\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(100, 200), array(200, 200)) !== \"YES\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Parse error:  syntax error, unexpected identifier \"candidate\", expecting\
    \ \"(\" in /tmp/tmpr7_tgms8.php on line 49\n"
  exit_code: 255
  status: SyntaxError
- program: "<?php\n// In this problem, you will implement a function that takes two\
    \ lists of numbers,\n// and determines whether it is possible to perform an exchange\
    \ of elements\n// between them to make lst1 a list of only even numbers.\n// There\
    \ is no limit on the number of exchanged elements between lst1 and lst2.\n// If\
    \ it is possible to exchange elements between the lst1 and lst2 to make\n// all\
    \ the elements of lst1 to be even, return \"YES\".\n// Otherwise, return \"NO\"\
    .\n// For example:\n// exchange([1, 2, 3, 4], [1, 2, 3, 4]) => \"YES\"\n// exchange([1,\
    \ 2, 3, 4], [1, 5, 3, 4]) => \"NO\"\n// It is assumed that the input lists will\
    \ be non-empty.\nfunction exchange($lst1, $lst2) {\n    $odds = [];\n    $evens\
    \ = [];\n    foreach ($lst1 as $num) {\n        if ($num % 2 === 0) {\n      \
    \      $evens[] = $num;\n        } else {\n            $odds[] = $num;\n     \
    \   }\n    }\n    foreach ($lst2 as $num) {\n        if ($num % 2 === 0) {\n \
    \           $evens[] = $num;\n        } else {\n            $odds[] = $num;\n\
    \        }\n    }\n    if (count($odds) === 0) {\n        return \"YES\";\n  \
    \  } else {\n        return \"NO\";\n    }\n}\necho exchange([1, 2, 3, 4], [1,\
    \ 2, 3, 4]) . \"\\n\";\necho exchange([1, 2, 3, 4], [1, 5, 3, 4]) . \"\\n\";\n\
    function candidate(...$args) {\n    return exchange(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 2, 3, 4), array(1, 2, 3, 4)) !==\
    \ \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4), array(1, 5, 3, 4)) !== \"NO\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4), array(2, 1, 4, 3)) !== \"YES\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 7, 3), array(2,\
    \ 6, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 7, 3), array(2, 6, 3)) !== \"NO\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(3, 2, 6, 1, 8, 9), array(3, 5, 5, 1, 1, 1)) !== \"\
    NO\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ 200), array(200, 200)) !== \"YES\") { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: "NO\nNO\n"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmphuy9lp5x.php:43\n\
    Stack trace:\n#0 /tmp/tmphuy9lp5x.php(52): test()\n#1 {main}\n  thrown in /tmp/tmphuy9lp5x.php\
    \ on line 43\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// In this problem, you will implement a function that takes two\
    \ lists of numbers,\n// and determines whether it is possible to perform an exchange\
    \ of elements\n// between them to make lst1 a list of only even numbers.\n// There\
    \ is no limit on the number of exchanged elements between lst1 and lst2.\n// If\
    \ it is possible to exchange elements between the lst1 and lst2 to make\n// all\
    \ the elements of lst1 to be even, return \"YES\".\n// Otherwise, return \"NO\"\
    .\n// For example:\n// exchange([1, 2, 3, 4], [1, 2, 3, 4]) => \"YES\"\n// exchange([1,\
    \ 2, 3, 4], [1, 5, 3, 4]) => \"NO\"\n// It is assumed that the input lists will\
    \ be non-empty.\nfunction exchange($lst1, $lst2) {\n    $odds = array_filter($lst1,\
    \ function($x) {\n        return $x % 2 == 1;\n    });\n    $evens = array_filter($lst2,\
    \ function($x) {\n        return $x % 2 == 0;\n    });\n    return count($odds)\
    \ == count($evens) ? \"YES\" : \"NO\";\n}\n\nfunction candidate(...$args) {\n\
    \    return exchange(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3, 4), array(1, 2, 3, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4), array(1, 5, 3, 4)) !== \"NO\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4), array(2,\
    \ 1, 4, 3)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 7, 3), array(2, 6, 4)) !== \"YES\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(5, 7, 3), array(2, 6, 3)) !== \"NO\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 6, 1, 8, 9), array(3,\
    \ 5, 5, 1, 1, 1)) !== \"NO\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(100, 200), array(200, 200)) !== \"YES\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp4u1tlot8.php:34\n\
    Stack trace:\n#0 /tmp/tmp4u1tlot8.php(37): test()\n#1 {main}\n  thrown in /tmp/tmp4u1tlot8.php\
    \ on line 34\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// In this problem, you will implement a function that takes two\
    \ lists of numbers,\n// and determines whether it is possible to perform an exchange\
    \ of elements\n// between them to make lst1 a list of only even numbers.\n// There\
    \ is no limit on the number of exchanged elements between lst1 and lst2.\n// If\
    \ it is possible to exchange elements between the lst1 and lst2 to make\n// all\
    \ the elements of lst1 to be even, return \"YES\".\n// Otherwise, return \"NO\"\
    .\n// For example:\n// exchange([1, 2, 3, 4], [1, 2, 3, 4]) => \"YES\"\n// exchange([1,\
    \ 2, 3, 4], [1, 5, 3, 4]) => \"NO\"\n// It is assumed that the input lists will\
    \ be non-empty.\nfunction exchange($lst1, $lst2) {\n    $odds = array_filter($lst1,\
    \ function($n) { return $n % 2 == 1; });\n    $evens = array_filter($lst2, function($n)\
    \ { return $n % 2 == 0; });\n    return count($odds) == count($evens) ? \"YES\"\
    \ : \"NO\";\n}\n\nfunction candidate(...$args) {\n    return exchange(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4), array(1, 2,\
    \ 3, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4), array(1, 5, 3, 4)) !== \"NO\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4), array(2, 1, 4, 3)) !== \"YES\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 7, 3), array(2,\
    \ 6, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 7, 3), array(2, 6, 3)) !== \"NO\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(3, 2, 6, 1, 8, 9), array(3, 5, 5, 1, 1, 1)) !== \"\
    NO\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ 200), array(200, 200)) !== \"YES\") { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpkdmm861y.php:30\n\
    Stack trace:\n#0 /tmp/tmpkdmm861y.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpkdmm861y.php\
    \ on line 30\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// In this problem, you will implement a function that takes two\
    \ lists of numbers,\n// and determines whether it is possible to perform an exchange\
    \ of elements\n// between them to make lst1 a list of only even numbers.\n// There\
    \ is no limit on the number of exchanged elements between lst1 and lst2.\n// If\
    \ it is possible to exchange elements between the lst1 and lst2 to make\n// all\
    \ the elements of lst1 to be even, return \"YES\".\n// Otherwise, return \"NO\"\
    .\n// For example:\n// exchange([1, 2, 3, 4], [1, 2, 3, 4]) => \"YES\"\n// exchange([1,\
    \ 2, 3, 4], [1, 5, 3, 4]) => \"NO\"\n// It is assumed that the input lists will\
    \ be non-empty.\nfunction exchange($lst1, $lst2) {\n    $lst1_odd = array_filter($lst1,\
    \ function($x) { return $x % 2; });\n    $lst2_even = array_filter($lst2, function($x)\
    \ { return !($x % 2); });\n    return count($lst1_odd) == count($lst2_even) ?\
    \ \"YES\" : \"NO\";\n}\n\nfunction candidate(...$args) {\n    return exchange(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4), array(1, 2,\
    \ 3, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4), array(1, 5, 3, 4)) !== \"NO\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4), array(2, 1, 4, 3)) !== \"YES\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 7, 3), array(2,\
    \ 6, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 7, 3), array(2, 6, 3)) !== \"NO\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(3, 2, 6, 1, 8, 9), array(3, 5, 5, 1, 1, 1)) !== \"\
    NO\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ 200), array(200, 200)) !== \"YES\") { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpzvvyjr_2.php:30\n\
    Stack trace:\n#0 /tmp/tmpzvvyjr_2.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpzvvyjr_2.php\
    \ on line 30\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// In this problem, you will implement a function that takes two\
    \ lists of numbers,\n// and determines whether it is possible to perform an exchange\
    \ of elements\n// between them to make lst1 a list of only even numbers.\n// There\
    \ is no limit on the number of exchanged elements between lst1 and lst2.\n// If\
    \ it is possible to exchange elements between the lst1 and lst2 to make\n// all\
    \ the elements of lst1 to be even, return \"YES\".\n// Otherwise, return \"NO\"\
    .\n// For example:\n// exchange([1, 2, 3, 4], [1, 2, 3, 4]) => \"YES\"\n// exchange([1,\
    \ 2, 3, 4], [1, 5, 3, 4]) => \"NO\"\n// It is assumed that the input lists will\
    \ be non-empty.\nfunction exchange($lst1, $lst2) {\n    $evens = array_filter($lst1,\
    \ function($n) { return $n % 2 == 0; });\n    $odds = array_filter($lst2, function($n)\
    \ { return $n % 2 == 1; });\n    return count($evens) + count($odds) == count($lst1)\
    \ + count($lst2) ? \"YES\" : \"NO\";\n}\n\nfunction candidate(...$args) {\n  \
    \  return exchange(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3, 4), array(1, 2, 3, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4), array(1, 5, 3, 4)) !== \"NO\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4), array(2,\
    \ 1, 4, 3)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 7, 3), array(2, 6, 4)) !== \"YES\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(5, 7, 3), array(2, 6, 3)) !== \"NO\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 6, 1, 8, 9), array(3,\
    \ 5, 5, 1, 1, 1)) !== \"NO\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(100, 200), array(200, 200)) !== \"YES\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpzr_wxk9g.php:24\n\
    Stack trace:\n#0 /tmp/tmpzr_wxk9g.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpzr_wxk9g.php\
    \ on line 24\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// In this problem, you will implement a function that takes two\
    \ lists of numbers,\n// and determines whether it is possible to perform an exchange\
    \ of elements\n// between them to make lst1 a list of only even numbers.\n// There\
    \ is no limit on the number of exchanged elements between lst1 and lst2.\n// If\
    \ it is possible to exchange elements between the lst1 and lst2 to make\n// all\
    \ the elements of lst1 to be even, return \"YES\".\n// Otherwise, return \"NO\"\
    .\n// For example:\n// exchange([1, 2, 3, 4], [1, 2, 3, 4]) => \"YES\"\n// exchange([1,\
    \ 2, 3, 4], [1, 5, 3, 4]) => \"NO\"\n// It is assumed that the input lists will\
    \ be non-empty.\nfunction exchange($lst1, $lst2) {\n  $lst1 = array_filter($lst1,\
    \ function($n) { return $n % 2 == 0; });\n  $lst2 = array_filter($lst2, function($n)\
    \ { return $n % 2 != 0; });\n  return count($lst1) == count($lst2) ? \"YES\" :\
    \ \"NO\";\n}\n\nfunction candidate(...$args) {\n    return exchange(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4), array(1, 2,\
    \ 3, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4), array(1, 5, 3, 4)) !== \"NO\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4), array(2, 1, 4, 3)) !== \"YES\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 7, 3), array(2,\
    \ 6, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 7, 3), array(2, 6, 3)) !== \"NO\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(3, 2, 6, 1, 8, 9), array(3, 5, 5, 1, 1, 1)) !== \"\
    NO\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ 200), array(200, 200)) !== \"YES\") { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp1uq8iu2o.php:30\n\
    Stack trace:\n#0 /tmp/tmp1uq8iu2o.php(33): test()\n#1 {main}\n  thrown in /tmp/tmp1uq8iu2o.php\
    \ on line 30\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// In this problem, you will implement a function that takes two\
    \ lists of numbers,\n// and determines whether it is possible to perform an exchange\
    \ of elements\n// between them to make lst1 a list of only even numbers.\n// There\
    \ is no limit on the number of exchanged elements between lst1 and lst2.\n// If\
    \ it is possible to exchange elements between the lst1 and lst2 to make\n// all\
    \ the elements of lst1 to be even, return \"YES\".\n// Otherwise, return \"NO\"\
    .\n// For example:\n// exchange([1, 2, 3, 4], [1, 2, 3, 4]) => \"YES\"\n// exchange([1,\
    \ 2, 3, 4], [1, 5, 3, 4]) => \"NO\"\n// It is assumed that the input lists will\
    \ be non-empty.\nfunction exchange($lst1, $lst2) {\n  $odds = 0;\n  foreach ($lst1\
    \ as $num) {\n    if ($num % 2 != 0) {\n      $odds++;\n    }\n  }\n  foreach\
    \ ($lst2 as $num) {\n    if ($num % 2 != 0) {\n      $odds--;\n    }\n  }\n  if\
    \ ($odds == 0) {\n    return \"YES\";\n  } else {\n    return \"NO\";\n  }\n}\n\
    \nfunction candidate(...$args) {\n    return exchange(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 2, 3, 4), array(1, 2, 3, 4)) !==\
    \ \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4), array(1, 5, 3, 4)) !== \"NO\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4), array(2, 1, 4, 3)) !== \"YES\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 7, 3), array(2,\
    \ 6, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 7, 3), array(2, 6, 3)) !== \"NO\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(3, 2, 6, 1, 8, 9), array(3, 5, 5, 1, 1, 1)) !== \"\
    NO\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ 200), array(200, 200)) !== \"YES\") { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp26__pn71.php:40\n\
    Stack trace:\n#0 /tmp/tmp26__pn71.php(46): test()\n#1 {main}\n  thrown in /tmp/tmp26__pn71.php\
    \ on line 40\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// In this problem, you will implement a function that takes two\
    \ lists of numbers,\n// and determines whether it is possible to perform an exchange\
    \ of elements\n// between them to make lst1 a list of only even numbers.\n// There\
    \ is no limit on the number of exchanged elements between lst1 and lst2.\n// If\
    \ it is possible to exchange elements between the lst1 and lst2 to make\n// all\
    \ the elements of lst1 to be even, return \"YES\".\n// Otherwise, return \"NO\"\
    .\n// For example:\n// exchange([1, 2, 3, 4], [1, 2, 3, 4]) => \"YES\"\n// exchange([1,\
    \ 2, 3, 4], [1, 5, 3, 4]) => \"NO\"\n// It is assumed that the input lists will\
    \ be non-empty.\nfunction exchange($lst1, $lst2) {\n  $lst1_odd = array_filter($lst1,\
    \ function($x) { return $x % 2; });\n  $lst2_even = array_filter($lst2, function($x)\
    \ { return !($x % 2); });\n  return count($lst1_odd) == count($lst2_even) ? \"\
    YES\" : \"NO\";\n}\n\necho exchange([1, 2, 3, 4], [1, 2, 3, 4]) . \"\\n\";\necho\
    \ exchange([1, 2, 3, 4], [1, 5, 3, 4]) . \"\\n\";\necho exchange([1, 2, 3, 4],\
    \ [1, 5, 3, 4, 6]) . \"\\n\";\necho exchange([1, 2, 3, 4], [1, 5, 3, 4, 6, 8])\
    \ . \"\\n\";\nfunction candidate(...$args) {\n    return exchange(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4), array(1, 2,\
    \ 3, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4), array(1, 5, 3, 4)) !== \"NO\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4), array(2, 1, 4, 3)) !== \"YES\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 7, 3), array(2,\
    \ 6, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 7, 3), array(2, 6, 3)) !== \"NO\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(3, 2, 6, 1, 8, 9), array(3, 5, 5, 1, 1, 1)) !== \"\
    NO\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ 200), array(200, 200)) !== \"YES\") { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: "YES\nNO\nYES\nNO\n"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpgm0rk21t.php:34\n\
    Stack trace:\n#0 /tmp/tmpgm0rk21t.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpgm0rk21t.php\
    \ on line 34\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// In this problem, you will implement a function that takes two\
    \ lists of numbers,\n// and determines whether it is possible to perform an exchange\
    \ of elements\n// between them to make lst1 a list of only even numbers.\n// There\
    \ is no limit on the number of exchanged elements between lst1 and lst2.\n// If\
    \ it is possible to exchange elements between the lst1 and lst2 to make\n// all\
    \ the elements of lst1 to be even, return \"YES\".\n// Otherwise, return \"NO\"\
    .\n// For example:\n// exchange([1, 2, 3, 4], [1, 2, 3, 4]) => \"YES\"\n// exchange([1,\
    \ 2, 3, 4], [1, 5, 3, 4]) => \"NO\"\n// It is assumed that the input lists will\
    \ be non-empty.\nfunction exchange($lst1, $lst2) {\n  $lst1_odd = array_filter($lst1,\
    \ function($n) { return $n % 2; });\n  $lst2_even = array_filter($lst2, function($n)\
    \ { return !($n % 2); });\n  return count($lst1_odd) == count($lst2_even) ? \"\
    YES\" : \"NO\";\n}\n\nfunction candidate(...$args) {\n    return exchange(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4), array(1, 2,\
    \ 3, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4), array(1, 5, 3, 4)) !== \"NO\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4), array(2, 1, 4, 3)) !== \"YES\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 7, 3), array(2,\
    \ 6, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 7, 3), array(2, 6, 3)) !== \"NO\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(3, 2, 6, 1, 8, 9), array(3, 5, 5, 1, 1, 1)) !== \"\
    NO\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ 200), array(200, 200)) !== \"YES\") { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpeam0bsa5.php:30\n\
    Stack trace:\n#0 /tmp/tmpeam0bsa5.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpeam0bsa5.php\
    \ on line 30\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// In this problem, you will implement a function that takes two\
    \ lists of numbers,\n// and determines whether it is possible to perform an exchange\
    \ of elements\n// between them to make lst1 a list of only even numbers.\n// There\
    \ is no limit on the number of exchanged elements between lst1 and lst2.\n// If\
    \ it is possible to exchange elements between the lst1 and lst2 to make\n// all\
    \ the elements of lst1 to be even, return \"YES\".\n// Otherwise, return \"NO\"\
    .\n// For example:\n// exchange([1, 2, 3, 4], [1, 2, 3, 4]) => \"YES\"\n// exchange([1,\
    \ 2, 3, 4], [1, 5, 3, 4]) => \"NO\"\n// It is assumed that the input lists will\
    \ be non-empty.\nfunction exchange($lst1, $lst2) {\n    $lst1_odd = array_filter($lst1,\
    \ function($n) { return $n % 2; });\n    $lst2_even = array_filter($lst2, function($n)\
    \ { return !($n % 2); });\n    return count($lst1_odd) == count($lst2_even) ?\
    \ \"YES\" : \"NO\";\n}\n\nfunction candidate(...$args) {\n    return exchange(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4), array(1, 2,\
    \ 3, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4), array(1, 5, 3, 4)) !== \"NO\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4), array(2, 1, 4, 3)) !== \"YES\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 7, 3), array(2,\
    \ 6, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 7, 3), array(2, 6, 3)) !== \"NO\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(3, 2, 6, 1, 8, 9), array(3, 5, 5, 1, 1, 1)) !== \"\
    NO\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ 200), array(200, 200)) !== \"YES\") { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpyvzdlmyq.php:30\n\
    Stack trace:\n#0 /tmp/tmpyvzdlmyq.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpyvzdlmyq.php\
    \ on line 30\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// In this problem, you will implement a function that takes two\
    \ lists of numbers,\n// and determines whether it is possible to perform an exchange\
    \ of elements\n// between them to make lst1 a list of only even numbers.\n// There\
    \ is no limit on the number of exchanged elements between lst1 and lst2.\n// If\
    \ it is possible to exchange elements between the lst1 and lst2 to make\n// all\
    \ the elements of lst1 to be even, return \"YES\".\n// Otherwise, return \"NO\"\
    .\n// For example:\n// exchange([1, 2, 3, 4], [1, 2, 3, 4]) => \"YES\"\n// exchange([1,\
    \ 2, 3, 4], [1, 5, 3, 4]) => \"NO\"\n// It is assumed that the input lists will\
    \ be non-empty.\nfunction exchange($lst1, $lst2) {\n    $evens = array_filter($lst1,\
    \ function($n) { return $n % 2 == 0; });\n    $odds = array_filter($lst2, function($n)\
    \ { return $n % 2 != 0; });\n    return count($evens) + count($odds) == count($lst1)\
    \ + count($lst2) ? \"YES\" : \"NO\";\n}\n\nfunction candidate(...$args) {\n  \
    \  return exchange(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3, 4), array(1, 2, 3, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4), array(1, 5, 3, 4)) !== \"NO\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4), array(2,\
    \ 1, 4, 3)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 7, 3), array(2, 6, 4)) !== \"YES\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(5, 7, 3), array(2, 6, 3)) !== \"NO\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 6, 1, 8, 9), array(3,\
    \ 5, 5, 1, 1, 1)) !== \"NO\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(100, 200), array(200, 200)) !== \"YES\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpjmbdcqal.php:24\n\
    Stack trace:\n#0 /tmp/tmpjmbdcqal.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpjmbdcqal.php\
    \ on line 24\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// In this problem, you will implement a function that takes two\
    \ lists of numbers,\n// and determines whether it is possible to perform an exchange\
    \ of elements\n// between them to make lst1 a list of only even numbers.\n// There\
    \ is no limit on the number of exchanged elements between lst1 and lst2.\n// If\
    \ it is possible to exchange elements between the lst1 and lst2 to make\n// all\
    \ the elements of lst1 to be even, return \"YES\".\n// Otherwise, return \"NO\"\
    .\n// For example:\n// exchange([1, 2, 3, 4], [1, 2, 3, 4]) => \"YES\"\n// exchange([1,\
    \ 2, 3, 4], [1, 5, 3, 4]) => \"NO\"\n// It is assumed that the input lists will\
    \ be non-empty.\nfunction exchange($lst1, $lst2) {\n    $lst1 = array_filter($lst1,\
    \ function($x) { return $x % 2 == 0; });\n    $lst2 = array_filter($lst2, function($x)\
    \ { return $x % 2 == 1; });\n    return count($lst1) == count($lst2) ? \"YES\"\
    \ : \"NO\";\n}\n\nfunction candidate(...$args) {\n    return exchange(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4), array(1, 2,\
    \ 3, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4), array(1, 5, 3, 4)) !== \"NO\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4), array(2, 1, 4, 3)) !== \"YES\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 7, 3), array(2,\
    \ 6, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 7, 3), array(2, 6, 3)) !== \"NO\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(3, 2, 6, 1, 8, 9), array(3, 5, 5, 1, 1, 1)) !== \"\
    NO\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ 200), array(200, 200)) !== \"YES\") { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpeuzmlbda.php:30\n\
    Stack trace:\n#0 /tmp/tmpeuzmlbda.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpeuzmlbda.php\
    \ on line 30\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// In this problem, you will implement a function that takes two\
    \ lists of numbers,\n// and determines whether it is possible to perform an exchange\
    \ of elements\n// between them to make lst1 a list of only even numbers.\n// There\
    \ is no limit on the number of exchanged elements between lst1 and lst2.\n// If\
    \ it is possible to exchange elements between the lst1 and lst2 to make\n// all\
    \ the elements of lst1 to be even, return \"YES\".\n// Otherwise, return \"NO\"\
    .\n// For example:\n// exchange([1, 2, 3, 4], [1, 2, 3, 4]) => \"YES\"\n// exchange([1,\
    \ 2, 3, 4], [1, 5, 3, 4]) => \"NO\"\n// It is assumed that the input lists will\
    \ be non-empty.\nfunction exchange($lst1, $lst2) {\n    $odds = array_filter($lst1,\
    \ function($x) { return $x % 2; });\n    $evens = array_filter($lst2, function($x)\
    \ { return !($x % 2); });\n    return count($odds) == count($evens) ? \"YES\"\
    \ : \"NO\";\n}\n\nfunction candidate(...$args) {\n    return exchange(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4), array(1, 2,\
    \ 3, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4), array(1, 5, 3, 4)) !== \"NO\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4), array(2, 1, 4, 3)) !== \"YES\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 7, 3), array(2,\
    \ 6, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 7, 3), array(2, 6, 3)) !== \"NO\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(3, 2, 6, 1, 8, 9), array(3, 5, 5, 1, 1, 1)) !== \"\
    NO\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ 200), array(200, 200)) !== \"YES\") { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp5b0b7rhv.php:30\n\
    Stack trace:\n#0 /tmp/tmp5b0b7rhv.php(33): test()\n#1 {main}\n  thrown in /tmp/tmp5b0b7rhv.php\
    \ on line 30\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// In this problem, you will implement a function that takes two\
    \ lists of numbers,\n// and determines whether it is possible to perform an exchange\
    \ of elements\n// between them to make lst1 a list of only even numbers.\n// There\
    \ is no limit on the number of exchanged elements between lst1 and lst2.\n// If\
    \ it is possible to exchange elements between the lst1 and lst2 to make\n// all\
    \ the elements of lst1 to be even, return \"YES\".\n// Otherwise, return \"NO\"\
    .\n// For example:\n// exchange([1, 2, 3, 4], [1, 2, 3, 4]) => \"YES\"\n// exchange([1,\
    \ 2, 3, 4], [1, 5, 3, 4]) => \"NO\"\n// It is assumed that the input lists will\
    \ be non-empty.\nfunction exchange($lst1, $lst2) {\n    $odds = array_filter($lst1,\
    \ function($n) { return $n % 2; });\n    $evens = array_filter($lst2, function($n)\
    \ { return !($n % 2); });\n    return count($odds) == count($evens) ? \"YES\"\
    \ : \"NO\";\n}\n\nfunction candidate(...$args) {\n    return exchange(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4), array(1, 2,\
    \ 3, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4), array(1, 5, 3, 4)) !== \"NO\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4), array(2, 1, 4, 3)) !== \"YES\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 7, 3), array(2,\
    \ 6, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 7, 3), array(2, 6, 3)) !== \"NO\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(3, 2, 6, 1, 8, 9), array(3, 5, 5, 1, 1, 1)) !== \"\
    NO\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ 200), array(200, 200)) !== \"YES\") { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpfkc3m76n.php:30\n\
    Stack trace:\n#0 /tmp/tmpfkc3m76n.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpfkc3m76n.php\
    \ on line 30\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// In this problem, you will implement a function that takes two\
    \ lists of numbers,\n// and determines whether it is possible to perform an exchange\
    \ of elements\n// between them to make lst1 a list of only even numbers.\n// There\
    \ is no limit on the number of exchanged elements between lst1 and lst2.\n// If\
    \ it is possible to exchange elements between the lst1 and lst2 to make\n// all\
    \ the elements of lst1 to be even, return \"YES\".\n// Otherwise, return \"NO\"\
    .\n// For example:\n// exchange([1, 2, 3, 4], [1, 2, 3, 4]) => \"YES\"\n// exchange([1,\
    \ 2, 3, 4], [1, 5, 3, 4]) => \"NO\"\n// It is assumed that the input lists will\
    \ be non-empty.\nfunction exchange($lst1, $lst2) {\n    $odds = 0;\n    $evens\
    \ = 0;\n    foreach ($lst1 as $num) {\n        if ($num % 2 == 0) {\n        \
    \    $evens++;\n        } else {\n            $odds++;\n        }\n    }\n   \
    \ foreach ($lst2 as $num) {\n        if ($num % 2 == 0) {\n            $evens++;\n\
    \        } else {\n            $odds++;\n        }\n    }\n    if ($evens % 2\
    \ == 0) {\n        return \"YES\";\n    } else {\n        return \"NO\";\n   \
    \ }\n}\n\nfunction candidate(...$args) {\n    return exchange(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(1, 2, 3, 4), array(1, 2, 3, 4))\
    \ !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4), array(1, 5, 3, 4)) !== \"NO\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4), array(2, 1, 4, 3)) !== \"YES\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 7, 3), array(2,\
    \ 6, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 7, 3), array(2, 6, 3)) !== \"NO\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(3, 2, 6, 1, 8, 9), array(3, 5, 5, 1, 1, 1)) !== \"\
    NO\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ 200), array(200, 200)) !== \"YES\") { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpi_fsk2ni.php:45\n\
    Stack trace:\n#0 /tmp/tmpi_fsk2ni.php(51): test()\n#1 {main}\n  thrown in /tmp/tmpi_fsk2ni.php\
    \ on line 45\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// In this problem, you will implement a function that takes two\
    \ lists of numbers,\n// and determines whether it is possible to perform an exchange\
    \ of elements\n// between them to make lst1 a list of only even numbers.\n// There\
    \ is no limit on the number of exchanged elements between lst1 and lst2.\n// If\
    \ it is possible to exchange elements between the lst1 and lst2 to make\n// all\
    \ the elements of lst1 to be even, return \"YES\".\n// Otherwise, return \"NO\"\
    .\n// For example:\n// exchange([1, 2, 3, 4], [1, 2, 3, 4]) => \"YES\"\n// exchange([1,\
    \ 2, 3, 4], [1, 5, 3, 4]) => \"NO\"\n// It is assumed that the input lists will\
    \ be non-empty.\nfunction exchange($lst1, $lst2) {\n  $lst1 = array_filter($lst1,\
    \ function($x) { return $x % 2 != 0; });\n  $lst2 = array_filter($lst2, function($x)\
    \ { return $x % 2 == 0; });\n  return count($lst1) == count($lst2) ? \"YES\" :\
    \ \"NO\";\n}\n\nfunction candidate(...$args) {\n    return exchange(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4), array(1, 2,\
    \ 3, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4), array(1, 5, 3, 4)) !== \"NO\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4), array(2, 1, 4, 3)) !== \"YES\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 7, 3), array(2,\
    \ 6, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 7, 3), array(2, 6, 3)) !== \"NO\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(3, 2, 6, 1, 8, 9), array(3, 5, 5, 1, 1, 1)) !== \"\
    NO\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ 200), array(200, 200)) !== \"YES\") { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp4e7ts5rt.php:30\n\
    Stack trace:\n#0 /tmp/tmp4e7ts5rt.php(33): test()\n#1 {main}\n  thrown in /tmp/tmp4e7ts5rt.php\
    \ on line 30\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// In this problem, you will implement a function that takes two\
    \ lists of numbers,\n// and determines whether it is possible to perform an exchange\
    \ of elements\n// between them to make lst1 a list of only even numbers.\n// There\
    \ is no limit on the number of exchanged elements between lst1 and lst2.\n// If\
    \ it is possible to exchange elements between the lst1 and lst2 to make\n// all\
    \ the elements of lst1 to be even, return \"YES\".\n// Otherwise, return \"NO\"\
    .\n// For example:\n// exchange([1, 2, 3, 4], [1, 2, 3, 4]) => \"YES\"\n// exchange([1,\
    \ 2, 3, 4], [1, 5, 3, 4]) => \"NO\"\n// It is assumed that the input lists will\
    \ be non-empty.\nfunction exchange($lst1, $lst2) {\n    $odds = array_filter($lst1,\
    \ function($n) { return $n % 2; });\n    $evens = array_filter($lst2, function($n)\
    \ { return !($n % 2); });\n    return count($odds) == count($evens) ? \"YES\"\
    \ : \"NO\";\n}\n\nfunction candidate(...$args) {\n    return exchange(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4), array(1, 2,\
    \ 3, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4), array(1, 5, 3, 4)) !== \"NO\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4), array(2, 1, 4, 3)) !== \"YES\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 7, 3), array(2,\
    \ 6, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 7, 3), array(2, 6, 3)) !== \"NO\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(3, 2, 6, 1, 8, 9), array(3, 5, 5, 1, 1, 1)) !== \"\
    NO\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ 200), array(200, 200)) !== \"YES\") { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp4x5zefis.php:30\n\
    Stack trace:\n#0 /tmp/tmp4x5zefis.php(33): test()\n#1 {main}\n  thrown in /tmp/tmp4x5zefis.php\
    \ on line 30\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// In this problem, you will implement a function that takes two\
    \ lists of numbers,\n// and determines whether it is possible to perform an exchange\
    \ of elements\n// between them to make lst1 a list of only even numbers.\n// There\
    \ is no limit on the number of exchanged elements between lst1 and lst2.\n// If\
    \ it is possible to exchange elements between the lst1 and lst2 to make\n// all\
    \ the elements of lst1 to be even, return \"YES\".\n// Otherwise, return \"NO\"\
    .\n// For example:\n// exchange([1, 2, 3, 4], [1, 2, 3, 4]) => \"YES\"\n// exchange([1,\
    \ 2, 3, 4], [1, 5, 3, 4]) => \"NO\"\n// It is assumed that the input lists will\
    \ be non-empty.\nfunction exchange($lst1, $lst2) {\n    $odds = [];\n    $evens\
    \ = [];\n    for ($i = 0; $i < count($lst1); $i++) {\n        if ($lst1[$i] %\
    \ 2 == 0) {\n            $evens[] = $lst1[$i];\n        } else {\n           \
    \ $odds[] = $lst1[$i];\n        }\n    }\n    for ($i = 0; $i < count($lst2);\
    \ $i++) {\n        if ($lst2[$i] % 2 == 0) {\n            $evens[] = $lst2[$i];\n\
    \        } else {\n            $odds[] = $lst2[$i];\n        }\n    }\n    if\
    \ (count($evens) >= count($odds)) {\n        return \"YES\";\n    } else {\n \
    \       return \"NO\";\n    }\n}\n\necho exchange([1, 2, 3, 4], [1, 2, 3, 4])\
    \ . \"\\n\";\necho exchange([1, 2, 3, 4], [1, 5, 3, 4]) . \"\\n\";\necho exchange([1,\
    \ 2, 3, 4], [1, 5, 3, 4, 6]) . \"\\n\";\necho exchange([1, 2, 3, 4], [1, 5, 3,\
    \ 4, 6, 7]) . \"\\n\";\necho exchange([1, 2, 3, 4], [1, 5, 3, 4, 6, 7, 8]) . \"\
    \\n\";\necho exchange([1, 2, 3, 4], [1, 5, 3, 4, 6, 7, 8, 9]) . \"\\n\";\necho\
    \ exchange([1, 2, 3, 4], [1, 5, 3, 4, 6, 7, 8, 9, 10]) . \"\\n\";\necho exchange([1,\
    \ 2, 3, 4], [1, 5, 3, 4, 6, 7, 8, 9, 10, 11]) . \"\\n\";\necho exchange([1, 2,\
    \ 3, 4], [1, 5, 3, 4, 6, 7, 8, 9, 10, 11, 12]) . \"\\n\";\necho exchange([1, 2,\
    \ 3, 4], [1, 5, 3, 4\nfunction candidate(...$args) {\n    return exchange(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4), array(1, 2,\
    \ 3, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4), array(1, 5, 3, 4)) !== \"NO\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4), array(2, 1, 4, 3)) !== \"YES\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 7, 3), array(2,\
    \ 6, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 7, 3), array(2, 6, 3)) !== \"NO\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(3, 2, 6, 1, 8, 9), array(3, 5, 5, 1, 1, 1)) !== \"\
    NO\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ 200), array(200, 200)) !== \"YES\") { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Parse error:  syntax error, unexpected token \"function\", expecting\
    \ \"]\" in /tmp/tmpnas_w2i1.php on line 47\n"
  exit_code: 255
  status: SyntaxError
- program: "<?php\n// In this problem, you will implement a function that takes two\
    \ lists of numbers,\n// and determines whether it is possible to perform an exchange\
    \ of elements\n// between them to make lst1 a list of only even numbers.\n// There\
    \ is no limit on the number of exchanged elements between lst1 and lst2.\n// If\
    \ it is possible to exchange elements between the lst1 and lst2 to make\n// all\
    \ the elements of lst1 to be even, return \"YES\".\n// Otherwise, return \"NO\"\
    .\n// For example:\n// exchange([1, 2, 3, 4], [1, 2, 3, 4]) => \"YES\"\n// exchange([1,\
    \ 2, 3, 4], [1, 5, 3, 4]) => \"NO\"\n// It is assumed that the input lists will\
    \ be non-empty.\nfunction exchange($lst1, $lst2) {\n  $lst1 = array_filter($lst1,\
    \ function($n) { return $n % 2 == 0; });\n  $lst2 = array_filter($lst2, function($n)\
    \ { return $n % 2 == 1; });\n  return count($lst1) >= count($lst2) ? \"YES\" :\
    \ \"NO\";\n}\n\nfunction candidate(...$args) {\n    return exchange(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4), array(1, 2,\
    \ 3, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4), array(1, 5, 3, 4)) !== \"NO\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4), array(2, 1, 4, 3)) !== \"YES\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 7, 3), array(2,\
    \ 6, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 7, 3), array(2, 6, 3)) !== \"NO\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(3, 2, 6, 1, 8, 9), array(3, 5, 5, 1, 1, 1)) !== \"\
    NO\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ 200), array(200, 200)) !== \"YES\") { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// In this problem, you will implement a function that takes two\
    \ lists of numbers,\n// and determines whether it is possible to perform an exchange\
    \ of elements\n// between them to make lst1 a list of only even numbers.\n// There\
    \ is no limit on the number of exchanged elements between lst1 and lst2.\n// If\
    \ it is possible to exchange elements between the lst1 and lst2 to make\n// all\
    \ the elements of lst1 to be even, return \"YES\".\n// Otherwise, return \"NO\"\
    .\n// For example:\n// exchange([1, 2, 3, 4], [1, 2, 3, 4]) => \"YES\"\n// exchange([1,\
    \ 2, 3, 4], [1, 5, 3, 4]) => \"NO\"\n// It is assumed that the input lists will\
    \ be non-empty.\nfunction exchange($lst1, $lst2) {\n    $odds = [];\n    $evens\
    \ = [];\n    for ($i = 0; $i < count($lst1); $i++) {\n        if ($lst1[$i] %\
    \ 2 == 0) {\n            $evens[] = $lst1[$i];\n        } else {\n           \
    \ $odds[] = $lst1[$i];\n        }\n    }\n    for ($i = 0; $i < count($lst2);\
    \ $i++) {\n        if ($lst2[$i] % 2 == 0) {\n            $evens[] = $lst2[$i];\n\
    \        } else {\n            $odds[] = $lst2[$i];\n        }\n    }\n    if\
    \ (count($evens) > count($odds)) {\n        return \"YES\";\n    } else {\n  \
    \      return \"NO\";\n    }\n}\n\necho exchange([1, 2, 3, 4], [1, 2, 3, 4]) .\
    \ \"\\n\";\necho exchange([1, 2, 3, 4], [1, 5, 3, 4]) . \"\\n\";\necho exchange([1,\
    \ 2, 3, 4], [1, 5, 3, 4, 6]) . \"\\n\";\necho exchange([1, 2, 3, 4], [1, 5, 3,\
    \ 4, 6, 7]) . \"\\n\";\necho exchange([1, 2, 3, 4], [1, 5, 3, 4, 6, 7, 8]) . \"\
    \\n\";\necho exchange([1, 2, 3, 4], [1, 5, 3, 4, 6, 7, 8, 9]) . \"\\n\";\necho\
    \ exchange([1, 2, 3, 4], [1, 5, 3, 4, 6, 7, 8, 9, 10]) . \"\\n\";\necho exchange([1,\
    \ 2, 3, 4], [1, 5, 3, 4, 6, 7, 8, 9, 10, 11]) . \"\\n\";\necho exchange([1, 2,\
    \ 3, 4], [1, 5, 3, 4, 6, 7, 8, 9, 10, 11, 12]) . \"\\n\";\necho exchange([1, 2,\
    \ 3, 4], [1, 5, 3, 4\nfunction candidate(...$args) {\n    return exchange(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4), array(1, 2,\
    \ 3, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4), array(1, 5, 3, 4)) !== \"NO\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4), array(2, 1, 4, 3)) !== \"YES\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 7, 3), array(2,\
    \ 6, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 7, 3), array(2, 6, 3)) !== \"NO\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(3, 2, 6, 1, 8, 9), array(3, 5, 5, 1, 1, 1)) !== \"\
    NO\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ 200), array(200, 200)) !== \"YES\") { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Parse error:  syntax error, unexpected token \"function\", expecting\
    \ \"]\" in /tmp/tmpxe5cpd4n.php on line 47\n"
  exit_code: 255
  status: SyntaxError
- program: "<?php\n// In this problem, you will implement a function that takes two\
    \ lists of numbers,\n// and determines whether it is possible to perform an exchange\
    \ of elements\n// between them to make lst1 a list of only even numbers.\n// There\
    \ is no limit on the number of exchanged elements between lst1 and lst2.\n// If\
    \ it is possible to exchange elements between the lst1 and lst2 to make\n// all\
    \ the elements of lst1 to be even, return \"YES\".\n// Otherwise, return \"NO\"\
    .\n// For example:\n// exchange([1, 2, 3, 4], [1, 2, 3, 4]) => \"YES\"\n// exchange([1,\
    \ 2, 3, 4], [1, 5, 3, 4]) => \"NO\"\n// It is assumed that the input lists will\
    \ be non-empty.\nfunction exchange($lst1, $lst2) {\n    $odds = array_filter($lst1,\
    \ function($n) {\n        return $n % 2;\n    });\n    $evens = array_filter($lst2,\
    \ function($n) {\n        return !($n % 2);\n    });\n    return count($odds)\
    \ == count($evens) ? \"YES\" : \"NO\";\n}\n\nfunction candidate(...$args) {\n\
    \    return exchange(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3, 4), array(1, 2, 3, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4), array(1, 5, 3, 4)) !== \"NO\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4), array(2,\
    \ 1, 4, 3)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 7, 3), array(2, 6, 4)) !== \"YES\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(5, 7, 3), array(2, 6, 3)) !== \"NO\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 6, 1, 8, 9), array(3,\
    \ 5, 5, 1, 1, 1)) !== \"NO\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(100, 200), array(200, 200)) !== \"YES\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpo96r385s.php:34\n\
    Stack trace:\n#0 /tmp/tmpo96r385s.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpo96r385s.php\
    \ on line 34\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// In this problem, you will implement a function that takes two\
    \ lists of numbers,\n// and determines whether it is possible to perform an exchange\
    \ of elements\n// between them to make lst1 a list of only even numbers.\n// There\
    \ is no limit on the number of exchanged elements between lst1 and lst2.\n// If\
    \ it is possible to exchange elements between the lst1 and lst2 to make\n// all\
    \ the elements of lst1 to be even, return \"YES\".\n// Otherwise, return \"NO\"\
    .\n// For example:\n// exchange([1, 2, 3, 4], [1, 2, 3, 4]) => \"YES\"\n// exchange([1,\
    \ 2, 3, 4], [1, 5, 3, 4]) => \"NO\"\n// It is assumed that the input lists will\
    \ be non-empty.\nfunction exchange($lst1, $lst2) {\n  $odds = [];\n  $evens =\
    \ [];\n  for ($i = 0; $i < count($lst1); $i++) {\n    if ($lst1[$i] % 2 == 0)\
    \ {\n      $evens[] = $lst1[$i];\n    } else {\n      $odds[] = $lst1[$i];\n \
    \   }\n  }\n  for ($i = 0; $i < count($lst2); $i++) {\n    if ($lst2[$i] % 2 ==\
    \ 0) {\n      $evens[] = $lst2[$i];\n    } else {\n      $odds[] = $lst2[$i];\n\
    \    }\n  }\n  if (count($evens) >= count($odds)) {\n    return \"YES\";\n  }\
    \ else {\n    return \"NO\";\n  }\n}\n\necho exchange([1, 2, 3, 4], [1, 2, 3,\
    \ 4]) . \"\\n\";\necho exchange([1, 2, 3, 4], [1, 5, 3, 4]) . \"\\n\";\necho exchange([1,\
    \ 2, 3, 4], [1, 5, 3, 4, 6]) . \"\\n\";\necho exchange([1, 2, 3, 4], [1, 5, 3,\
    \ 4, 6, 7]) . \"\\n\";\necho exchange([1, 2, 3, 4], [1, 5, 3, 4, 6, 7, 8]) . \"\
    \\n\";\necho exchange([1, 2, 3, 4], [1, 5, 3, 4, 6, 7, 8, 9]) . \"\\n\";\necho\
    \ exchange([1, 2, 3, 4], [1, 5, 3, 4, 6, 7, 8, 9, 10]) . \"\\n\";\necho exchange([1,\
    \ 2, 3, 4], [1, 5, 3, 4, 6, 7, 8, 9, 10, 11]) . \"\\n\";\necho exchange([1, 2,\
    \ 3, 4], [1, 5, 3, 4, 6, 7, 8, 9, 10, 11, 12]) . \"\\n\";\necho exchange([1, 2,\
    \ 3, 4], [1, 5, 3, 4\nfunction candidate(...$args) {\n    return exchange(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4), array(1, 2,\
    \ 3, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4), array(1, 5, 3, 4)) !== \"NO\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4), array(2, 1, 4, 3)) !== \"YES\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 7, 3), array(2,\
    \ 6, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 7, 3), array(2, 6, 3)) !== \"NO\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(3, 2, 6, 1, 8, 9), array(3, 5, 5, 1, 1, 1)) !== \"\
    NO\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ 200), array(200, 200)) !== \"YES\") { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Parse error:  syntax error, unexpected token \"function\", expecting\
    \ \"]\" in /tmp/tmpibquo6tc.php on line 47\n"
  exit_code: 255
  status: SyntaxError
- program: "<?php\n// In this problem, you will implement a function that takes two\
    \ lists of numbers,\n// and determines whether it is possible to perform an exchange\
    \ of elements\n// between them to make lst1 a list of only even numbers.\n// There\
    \ is no limit on the number of exchanged elements between lst1 and lst2.\n// If\
    \ it is possible to exchange elements between the lst1 and lst2 to make\n// all\
    \ the elements of lst1 to be even, return \"YES\".\n// Otherwise, return \"NO\"\
    .\n// For example:\n// exchange([1, 2, 3, 4], [1, 2, 3, 4]) => \"YES\"\n// exchange([1,\
    \ 2, 3, 4], [1, 5, 3, 4]) => \"NO\"\n// It is assumed that the input lists will\
    \ be non-empty.\nfunction exchange($lst1, $lst2) {\n  $odds = [];\n  foreach ($lst1\
    \ as $num) {\n    if ($num % 2 != 0) {\n      $odds[] = $num;\n    }\n  }\n  foreach\
    \ ($lst2 as $num) {\n    if ($num % 2 != 0) {\n      $odds[] = $num;\n    }\n\
    \  }\n  if (count($odds) % 2 == 0) {\n    return \"YES\";\n  } else {\n    return\
    \ \"NO\";\n  }\n}\n\nfunction candidate(...$args) {\n    return exchange(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4), array(1, 2,\
    \ 3, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4), array(1, 5, 3, 4)) !== \"NO\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4), array(2, 1, 4, 3)) !== \"YES\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 7, 3), array(2,\
    \ 6, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 7, 3), array(2, 6, 3)) !== \"NO\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(3, 2, 6, 1, 8, 9), array(3, 5, 5, 1, 1, 1)) !== \"\
    NO\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ 200), array(200, 200)) !== \"YES\") { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp1dxwn5op.php:40\n\
    Stack trace:\n#0 /tmp/tmp1dxwn5op.php(46): test()\n#1 {main}\n  thrown in /tmp/tmp1dxwn5op.php\
    \ on line 40\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// In this problem, you will implement a function that takes two\
    \ lists of numbers,\n// and determines whether it is possible to perform an exchange\
    \ of elements\n// between them to make lst1 a list of only even numbers.\n// There\
    \ is no limit on the number of exchanged elements between lst1 and lst2.\n// If\
    \ it is possible to exchange elements between the lst1 and lst2 to make\n// all\
    \ the elements of lst1 to be even, return \"YES\".\n// Otherwise, return \"NO\"\
    .\n// For example:\n// exchange([1, 2, 3, 4], [1, 2, 3, 4]) => \"YES\"\n// exchange([1,\
    \ 2, 3, 4], [1, 5, 3, 4]) => \"NO\"\n// It is assumed that the input lists will\
    \ be non-empty.\nfunction exchange($lst1, $lst2) {\n  $odds = [];\n  $evens =\
    \ [];\n  foreach ($lst1 as $num) {\n    if ($num % 2 == 0) {\n      $evens[] =\
    \ $num;\n    } else {\n      $odds[] = $num;\n    }\n  }\n  foreach ($lst2 as\
    \ $num) {\n    if ($num % 2 == 0) {\n      $evens[] = $num;\n    } else {\n  \
    \    $odds[] = $num;\n    }\n  }\n  if (count($odds) == 0) {\n    return \"YES\"\
    ;\n  } else {\n    return \"NO\";\n  }\n}\n\necho exchange([1, 2, 3, 4], [1, 2,\
    \ 3, 4]) . \"\\n\";\necho exchange([1, 2, 3, 4], [1, 5, 3, 4]) . \"\\n\";\necho\
    \ exchange([1, 2, 3, 4], [1, 5, 3, 4, 6]) . \"\\n\";\necho exchange([1, 2, 3,\
    \ 4], [1, 5, 3, 4, 6, 7]) . \"\\n\";\necho exchange([1, 2, 3, 4], [1, 5, 3, 4,\
    \ 6, 7, 8]) . \"\\n\";\necho exchange([1, 2, 3, 4], [1, 5, 3, 4, 6, 7, 8, 9])\
    \ . \"\\n\";\necho exchange([1, 2, 3, 4], [1, 5, 3, 4, 6, 7, 8, 9, 10]) . \"\\\
    n\";\necho exchange([1, 2, 3, 4], [1, 5, 3, 4, 6, 7, 8, 9, 10, 11]) . \"\\n\"\
    ;\necho exchange([1, 2, 3, 4], [1, 5, 3, 4, 6, 7, 8, 9, 10, 11, 12]) . \"\\n\"\
    ;\necho exchange([1, 2, 3, 4], [1, 5, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13]) . \"\\\
    n\";\necho exchange([1, 2, 3, 4], [1, 5, 3, 4, 6, 7, 8, 9, 10\nfunction candidate(...$args)\
    \ {\n    return exchange(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3, 4), array(1, 2, 3, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4), array(1, 5, 3, 4)) !== \"NO\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4), array(2,\
    \ 1, 4, 3)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 7, 3), array(2, 6, 4)) !== \"YES\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(5, 7, 3), array(2, 6, 3)) !== \"NO\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 6, 1, 8, 9), array(3,\
    \ 5, 5, 1, 1, 1)) !== \"NO\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(100, 200), array(200, 200)) !== \"YES\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Parse error:  syntax error, unexpected token \"function\", expecting\
    \ \"]\" in /tmp/tmp1dnznu38.php on line 48\n"
  exit_code: 255
  status: SyntaxError
- program: "<?php\n// In this problem, you will implement a function that takes two\
    \ lists of numbers,\n// and determines whether it is possible to perform an exchange\
    \ of elements\n// between them to make lst1 a list of only even numbers.\n// There\
    \ is no limit on the number of exchanged elements between lst1 and lst2.\n// If\
    \ it is possible to exchange elements between the lst1 and lst2 to make\n// all\
    \ the elements of lst1 to be even, return \"YES\".\n// Otherwise, return \"NO\"\
    .\n// For example:\n// exchange([1, 2, 3, 4], [1, 2, 3, 4]) => \"YES\"\n// exchange([1,\
    \ 2, 3, 4], [1, 5, 3, 4]) => \"NO\"\n// It is assumed that the input lists will\
    \ be non-empty.\nfunction exchange($lst1, $lst2) {\n    $even = 0;\n    $odd =\
    \ 0;\n    for ($i = 0; $i < count($lst1); $i++) {\n        if ($lst1[$i] % 2 ==\
    \ 0) {\n            $even++;\n        } else {\n            $odd++;\n        }\n\
    \    }\n    for ($i = 0; $i < count($lst2); $i++) {\n        if ($lst2[$i] % 2\
    \ == 0) {\n            $even++;\n        } else {\n            $odd++;\n     \
    \   }\n    }\n    if ($even % 2 == 0 && $odd % 2 == 0) {\n        return \"YES\"\
    ;\n    } else {\n        return \"NO\";\n    }\n}\n\nfunction candidate(...$args)\
    \ {\n    return exchange(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3, 4), array(1, 2, 3, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4), array(1, 5, 3, 4)) !== \"NO\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4), array(2,\
    \ 1, 4, 3)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 7, 3), array(2, 6, 4)) !== \"YES\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(5, 7, 3), array(2, 6, 3)) !== \"NO\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 6, 1, 8, 9), array(3,\
    \ 5, 5, 1, 1, 1)) !== \"NO\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(100, 200), array(200, 200)) !== \"YES\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpb0d3vnpz.php:45\n\
    Stack trace:\n#0 /tmp/tmpb0d3vnpz.php(51): test()\n#1 {main}\n  thrown in /tmp/tmpb0d3vnpz.php\
    \ on line 45\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// In this problem, you will implement a function that takes two\
    \ lists of numbers,\n// and determines whether it is possible to perform an exchange\
    \ of elements\n// between them to make lst1 a list of only even numbers.\n// There\
    \ is no limit on the number of exchanged elements between lst1 and lst2.\n// If\
    \ it is possible to exchange elements between the lst1 and lst2 to make\n// all\
    \ the elements of lst1 to be even, return \"YES\".\n// Otherwise, return \"NO\"\
    .\n// For example:\n// exchange([1, 2, 3, 4], [1, 2, 3, 4]) => \"YES\"\n// exchange([1,\
    \ 2, 3, 4], [1, 5, 3, 4]) => \"NO\"\n// It is assumed that the input lists will\
    \ be non-empty.\nfunction exchange($lst1, $lst2) {\n    $odds = array_filter($lst1,\
    \ function($x) { return $x % 2 == 1; });\n    $evens = array_filter($lst2, function($x)\
    \ { return $x % 2 == 0; });\n    return count($odds) == count($evens) ? \"YES\"\
    \ : \"NO\";\n}\n\nfunction candidate(...$args) {\n    return exchange(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4), array(1, 2,\
    \ 3, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4), array(1, 5, 3, 4)) !== \"NO\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4), array(2, 1, 4, 3)) !== \"YES\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 7, 3), array(2,\
    \ 6, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 7, 3), array(2, 6, 3)) !== \"NO\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(3, 2, 6, 1, 8, 9), array(3, 5, 5, 1, 1, 1)) !== \"\
    NO\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ 200), array(200, 200)) !== \"YES\") { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpch78j7me.php:30\n\
    Stack trace:\n#0 /tmp/tmpch78j7me.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpch78j7me.php\
    \ on line 30\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// In this problem, you will implement a function that takes two\
    \ lists of numbers,\n// and determines whether it is possible to perform an exchange\
    \ of elements\n// between them to make lst1 a list of only even numbers.\n// There\
    \ is no limit on the number of exchanged elements between lst1 and lst2.\n// If\
    \ it is possible to exchange elements between the lst1 and lst2 to make\n// all\
    \ the elements of lst1 to be even, return \"YES\".\n// Otherwise, return \"NO\"\
    .\n// For example:\n// exchange([1, 2, 3, 4], [1, 2, 3, 4]) => \"YES\"\n// exchange([1,\
    \ 2, 3, 4], [1, 5, 3, 4]) => \"NO\"\n// It is assumed that the input lists will\
    \ be non-empty.\nfunction exchange($lst1, $lst2) {\n  $lst1 = array_filter($lst1,\
    \ function($n) { return $n % 2 == 0; });\n  $lst2 = array_filter($lst2, function($n)\
    \ { return $n % 2 == 1; });\n  return count($lst1) >= count($lst2) ? \"YES\" :\
    \ \"NO\";\n}\n\necho exchange([1, 2, 3, 4], [1, 2, 3, 4]) . \"\\n\";\necho exchange([1,\
    \ 2, 3, 4], [1, 5, 3, 4]) . \"\\n\";\necho exchange([1, 2, 3, 4], [1, 5, 3, 4,\
    \ 6]) . \"\\n\";\necho exchange([1, 2, 3, 4], [1, 5, 3, 4, 6, 7]) . \"\\n\";\n\
    echo exchange([1, 2, 3, 4], [1, 5, 3, 4, 6, 7, 8]) . \"\\n\";\necho exchange([1,\
    \ 2, 3, 4], [1, 5, 3, 4, 6, 7, 8, 9]) . \"\\n\";\necho exchange([1, 2, 3, 4],\
    \ [1, 5, 3, 4, 6, 7, 8, 9, 10]) . \"\\n\";\necho exchange([1, 2, 3, 4], [1, 5,\
    \ 3, 4, 6, 7, 8, 9, 10, 11]) . \"\\n\";\necho exchange([1, 2, 3, 4], [1, 5, 3,\
    \ 4, 6, 7, 8, 9, 10, 11, 12]) . \"\\n\";\necho exchange([1, 2, 3, 4], [1, 5, 3,\
    \ 4, 6, 7, 8, 9, 10, 11, 12, 13]) . \"\\n\";\necho exchange([1, 2, 3, 4], [1,\
    \ 5, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14]) . \"\\n\";\necho exchange([1, 2, 3,\
    \ 4], [1, 5, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]) . \"\\n\";\necho exchange([1,\
    \ 2, 3, 4], [1, 5,\nfunction candidate(...$args) {\n    return exchange(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4), array(1, 2,\
    \ 3, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4), array(1, 5, 3, 4)) !== \"NO\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4), array(2, 1, 4, 3)) !== \"YES\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 7, 3), array(2,\
    \ 6, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 7, 3), array(2, 6, 3)) !== \"NO\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(3, 2, 6, 1, 8, 9), array(3, 5, 5, 1, 1, 1)) !== \"\
    NO\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ 200), array(200, 200)) !== \"YES\") { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Parse error:  syntax error, unexpected identifier \"candidate\", expecting\
    \ \"(\" in /tmp/tmpumwy6daa.php on line 32\n"
  exit_code: 255
  status: SyntaxError
- program: "<?php\n// In this problem, you will implement a function that takes two\
    \ lists of numbers,\n// and determines whether it is possible to perform an exchange\
    \ of elements\n// between them to make lst1 a list of only even numbers.\n// There\
    \ is no limit on the number of exchanged elements between lst1 and lst2.\n// If\
    \ it is possible to exchange elements between the lst1 and lst2 to make\n// all\
    \ the elements of lst1 to be even, return \"YES\".\n// Otherwise, return \"NO\"\
    .\n// For example:\n// exchange([1, 2, 3, 4], [1, 2, 3, 4]) => \"YES\"\n// exchange([1,\
    \ 2, 3, 4], [1, 5, 3, 4]) => \"NO\"\n// It is assumed that the input lists will\
    \ be non-empty.\nfunction exchange($lst1, $lst2) {\n    $odds = [];\n    $evens\
    \ = [];\n    foreach ($lst1 as $num) {\n        if ($num % 2 === 0) {\n      \
    \      $evens[] = $num;\n        } else {\n            $odds[] = $num;\n     \
    \   }\n    }\n    foreach ($lst2 as $num) {\n        if ($num % 2 === 0) {\n \
    \           $evens[] = $num;\n        } else {\n            $odds[] = $num;\n\
    \        }\n    }\n    return count($evens) > count($odds) ? \"YES\" : \"NO\"\
    ;\n}\n\necho exchange([1, 2, 3, 4], [1, 2, 3, 4]) . \"\\n\";\necho exchange([1,\
    \ 2, 3, 4], [1, 5, 3, 4]) . \"\\n\";\nfunction candidate(...$args) {\n    return\
    \ exchange(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3, 4), array(1, 2, 3, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4), array(1, 5, 3, 4)) !== \"NO\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4), array(2,\
    \ 1, 4, 3)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 7, 3), array(2, 6, 4)) !== \"YES\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(5, 7, 3), array(2, 6, 3)) !== \"NO\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 6, 1, 8, 9), array(3,\
    \ 5, 5, 1, 1, 1)) !== \"NO\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(100, 200), array(200, 200)) !== \"YES\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "NO\nNO\n"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpunt6lhpq.php:40\n\
    Stack trace:\n#0 /tmp/tmpunt6lhpq.php(49): test()\n#1 {main}\n  thrown in /tmp/tmpunt6lhpq.php\
    \ on line 40\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// In this problem, you will implement a function that takes two\
    \ lists of numbers,\n// and determines whether it is possible to perform an exchange\
    \ of elements\n// between them to make lst1 a list of only even numbers.\n// There\
    \ is no limit on the number of exchanged elements between lst1 and lst2.\n// If\
    \ it is possible to exchange elements between the lst1 and lst2 to make\n// all\
    \ the elements of lst1 to be even, return \"YES\".\n// Otherwise, return \"NO\"\
    .\n// For example:\n// exchange([1, 2, 3, 4], [1, 2, 3, 4]) => \"YES\"\n// exchange([1,\
    \ 2, 3, 4], [1, 5, 3, 4]) => \"NO\"\n// It is assumed that the input lists will\
    \ be non-empty.\nfunction exchange($lst1, $lst2) {\n    $odds = [];\n    $evens\
    \ = [];\n    for ($i = 0; $i < count($lst1); $i++) {\n        if ($lst1[$i] %\
    \ 2 == 0) {\n            $evens[] = $lst1[$i];\n        } else {\n           \
    \ $odds[] = $lst1[$i];\n        }\n    }\n    for ($i = 0; $i < count($lst2);\
    \ $i++) {\n        if ($lst2[$i] % 2 == 0) {\n            $evens[] = $lst2[$i];\n\
    \        } else {\n            $odds[] = $lst2[$i];\n        }\n    }\n    if\
    \ (count($evens) > count($odds)) {\n        return \"YES\";\n    } else {\n  \
    \      return \"NO\";\n    }\n}\n\nfunction candidate(...$args) {\n    return\
    \ exchange(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3, 4), array(1, 2, 3, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4), array(1, 5, 3, 4)) !== \"NO\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4), array(2,\
    \ 1, 4, 3)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 7, 3), array(2, 6, 4)) !== \"YES\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(5, 7, 3), array(2, 6, 3)) !== \"NO\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 6, 1, 8, 9), array(3,\
    \ 5, 5, 1, 1, 1)) !== \"NO\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(100, 200), array(200, 200)) !== \"YES\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpvtre75ta.php:42\n\
    Stack trace:\n#0 /tmp/tmpvtre75ta.php(51): test()\n#1 {main}\n  thrown in /tmp/tmpvtre75ta.php\
    \ on line 42\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// In this problem, you will implement a function that takes two\
    \ lists of numbers,\n// and determines whether it is possible to perform an exchange\
    \ of elements\n// between them to make lst1 a list of only even numbers.\n// There\
    \ is no limit on the number of exchanged elements between lst1 and lst2.\n// If\
    \ it is possible to exchange elements between the lst1 and lst2 to make\n// all\
    \ the elements of lst1 to be even, return \"YES\".\n// Otherwise, return \"NO\"\
    .\n// For example:\n// exchange([1, 2, 3, 4], [1, 2, 3, 4]) => \"YES\"\n// exchange([1,\
    \ 2, 3, 4], [1, 5, 3, 4]) => \"NO\"\n// It is assumed that the input lists will\
    \ be non-empty.\nfunction exchange($lst1, $lst2) {\n    $odds = [];\n    $evens\
    \ = [];\n    for ($i = 0; $i < count($lst1); $i++) {\n        if ($lst1[$i] %\
    \ 2 == 0) {\n            $evens[] = $lst1[$i];\n        } else {\n           \
    \ $odds[] = $lst1[$i];\n        }\n    }\n    for ($i = 0; $i < count($lst2);\
    \ $i++) {\n        if ($lst2[$i] % 2 == 0) {\n            $evens[] = $lst2[$i];\n\
    \        } else {\n            $odds[] = $lst2[$i];\n        }\n    }\n    if\
    \ (count($evens) >= count($odds)) {\n        return \"YES\";\n    } else {\n \
    \       return \"NO\";\n    }\n}\n\nfunction candidate(...$args) {\n    return\
    \ exchange(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3, 4), array(1, 2, 3, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4), array(1, 5, 3, 4)) !== \"NO\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4), array(2,\
    \ 1, 4, 3)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 7, 3), array(2, 6, 4)) !== \"YES\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(5, 7, 3), array(2, 6, 3)) !== \"NO\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 6, 1, 8, 9), array(3,\
    \ 5, 5, 1, 1, 1)) !== \"NO\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(100, 200), array(200, 200)) !== \"YES\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// In this problem, you will implement a function that takes two\
    \ lists of numbers,\n// and determines whether it is possible to perform an exchange\
    \ of elements\n// between them to make lst1 a list of only even numbers.\n// There\
    \ is no limit on the number of exchanged elements between lst1 and lst2.\n// If\
    \ it is possible to exchange elements between the lst1 and lst2 to make\n// all\
    \ the elements of lst1 to be even, return \"YES\".\n// Otherwise, return \"NO\"\
    .\n// For example:\n// exchange([1, 2, 3, 4], [1, 2, 3, 4]) => \"YES\"\n// exchange([1,\
    \ 2, 3, 4], [1, 5, 3, 4]) => \"NO\"\n// It is assumed that the input lists will\
    \ be non-empty.\nfunction exchange($lst1, $lst2) {\n    $odds1 = array_filter($lst1,\
    \ function($x) { return $x % 2; });\n    $odds2 = array_filter($lst2, function($x)\
    \ { return $x % 2; });\n    return count($odds1) == count($odds2) ? \"YES\" :\
    \ \"NO\";\n}\n\nfunction candidate(...$args) {\n    return exchange(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4), array(1, 2,\
    \ 3, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4), array(1, 5, 3, 4)) !== \"NO\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4), array(2, 1, 4, 3)) !== \"YES\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 7, 3), array(2,\
    \ 6, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 7, 3), array(2, 6, 3)) !== \"NO\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(3, 2, 6, 1, 8, 9), array(3, 5, 5, 1, 1, 1)) !== \"\
    NO\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ 200), array(200, 200)) !== \"YES\") { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpu_ihzppd.php:27\n\
    Stack trace:\n#0 /tmp/tmpu_ihzppd.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpu_ihzppd.php\
    \ on line 27\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// In this problem, you will implement a function that takes two\
    \ lists of numbers,\n// and determines whether it is possible to perform an exchange\
    \ of elements\n// between them to make lst1 a list of only even numbers.\n// There\
    \ is no limit on the number of exchanged elements between lst1 and lst2.\n// If\
    \ it is possible to exchange elements between the lst1 and lst2 to make\n// all\
    \ the elements of lst1 to be even, return \"YES\".\n// Otherwise, return \"NO\"\
    .\n// For example:\n// exchange([1, 2, 3, 4], [1, 2, 3, 4]) => \"YES\"\n// exchange([1,\
    \ 2, 3, 4], [1, 5, 3, 4]) => \"NO\"\n// It is assumed that the input lists will\
    \ be non-empty.\nfunction exchange($lst1, $lst2) {\n    $odds1 = array_filter($lst1,\
    \ function($n) { return $n % 2; });\n    $odds2 = array_filter($lst2, function($n)\
    \ { return $n % 2; });\n    return count($odds1) == count($odds2) ? \"YES\" :\
    \ \"NO\";\n}\n\nfunction candidate(...$args) {\n    return exchange(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4), array(1, 2,\
    \ 3, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4), array(1, 5, 3, 4)) !== \"NO\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4), array(2, 1, 4, 3)) !== \"YES\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 7, 3), array(2,\
    \ 6, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 7, 3), array(2, 6, 3)) !== \"NO\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(3, 2, 6, 1, 8, 9), array(3, 5, 5, 1, 1, 1)) !== \"\
    NO\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ 200), array(200, 200)) !== \"YES\") { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp25eylvgf.php:27\n\
    Stack trace:\n#0 /tmp/tmp25eylvgf.php(33): test()\n#1 {main}\n  thrown in /tmp/tmp25eylvgf.php\
    \ on line 27\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// In this problem, you will implement a function that takes two\
    \ lists of numbers,\n// and determines whether it is possible to perform an exchange\
    \ of elements\n// between them to make lst1 a list of only even numbers.\n// There\
    \ is no limit on the number of exchanged elements between lst1 and lst2.\n// If\
    \ it is possible to exchange elements between the lst1 and lst2 to make\n// all\
    \ the elements of lst1 to be even, return \"YES\".\n// Otherwise, return \"NO\"\
    .\n// For example:\n// exchange([1, 2, 3, 4], [1, 2, 3, 4]) => \"YES\"\n// exchange([1,\
    \ 2, 3, 4], [1, 5, 3, 4]) => \"NO\"\n// It is assumed that the input lists will\
    \ be non-empty.\nfunction exchange($lst1, $lst2) {\n    $lst1 = array_filter($lst1,\
    \ function($x) { return $x % 2 == 0; });\n    $lst2 = array_filter($lst2, function($x)\
    \ { return $x % 2 == 1; });\n    return count($lst1) >= count($lst2) ? \"YES\"\
    \ : \"NO\";\n}\n\nfunction candidate(...$args) {\n    return exchange(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4), array(1, 2,\
    \ 3, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4), array(1, 5, 3, 4)) !== \"NO\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4), array(2, 1, 4, 3)) !== \"YES\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 7, 3), array(2,\
    \ 6, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 7, 3), array(2, 6, 3)) !== \"NO\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(3, 2, 6, 1, 8, 9), array(3, 5, 5, 1, 1, 1)) !== \"\
    NO\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ 200), array(200, 200)) !== \"YES\") { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// In this problem, you will implement a function that takes two\
    \ lists of numbers,\n// and determines whether it is possible to perform an exchange\
    \ of elements\n// between them to make lst1 a list of only even numbers.\n// There\
    \ is no limit on the number of exchanged elements between lst1 and lst2.\n// If\
    \ it is possible to exchange elements between the lst1 and lst2 to make\n// all\
    \ the elements of lst1 to be even, return \"YES\".\n// Otherwise, return \"NO\"\
    .\n// For example:\n// exchange([1, 2, 3, 4], [1, 2, 3, 4]) => \"YES\"\n// exchange([1,\
    \ 2, 3, 4], [1, 5, 3, 4]) => \"NO\"\n// It is assumed that the input lists will\
    \ be non-empty.\nfunction exchange($lst1, $lst2) {\n    $odds = array_filter($lst1,\
    \ function($n) { return $n % 2 !== 0; });\n    $evens = array_filter($lst2, function($n)\
    \ { return $n % 2 === 0; });\n    return count($odds) === count($evens) ? \"YES\"\
    \ : \"NO\";\n}\n\nfunction candidate(...$args) {\n    return exchange(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4), array(1, 2,\
    \ 3, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4), array(1, 5, 3, 4)) !== \"NO\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4), array(2, 1, 4, 3)) !== \"YES\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 7, 3), array(2,\
    \ 6, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 7, 3), array(2, 6, 3)) !== \"NO\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(3, 2, 6, 1, 8, 9), array(3, 5, 5, 1, 1, 1)) !== \"\
    NO\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ 200), array(200, 200)) !== \"YES\") { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpqtk4db3m.php:30\n\
    Stack trace:\n#0 /tmp/tmpqtk4db3m.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpqtk4db3m.php\
    \ on line 30\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// In this problem, you will implement a function that takes two\
    \ lists of numbers,\n// and determines whether it is possible to perform an exchange\
    \ of elements\n// between them to make lst1 a list of only even numbers.\n// There\
    \ is no limit on the number of exchanged elements between lst1 and lst2.\n// If\
    \ it is possible to exchange elements between the lst1 and lst2 to make\n// all\
    \ the elements of lst1 to be even, return \"YES\".\n// Otherwise, return \"NO\"\
    .\n// For example:\n// exchange([1, 2, 3, 4], [1, 2, 3, 4]) => \"YES\"\n// exchange([1,\
    \ 2, 3, 4], [1, 5, 3, 4]) => \"NO\"\n// It is assumed that the input lists will\
    \ be non-empty.\nfunction exchange($lst1, $lst2) {\n    $lst1_odd = array_filter($lst1,\
    \ function($n) {\n        return $n % 2 == 1;\n    });\n    $lst2_even = array_filter($lst2,\
    \ function($n) {\n        return $n % 2 == 0;\n    });\n    return count($lst1_odd)\
    \ == count($lst2_even) ? \"YES\" : \"NO\";\n}\n\nfunction candidate(...$args)\
    \ {\n    return exchange(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3, 4), array(1, 2, 3, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4), array(1, 5, 3, 4)) !== \"NO\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4), array(2,\
    \ 1, 4, 3)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 7, 3), array(2, 6, 4)) !== \"YES\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(5, 7, 3), array(2, 6, 3)) !== \"NO\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 6, 1, 8, 9), array(3,\
    \ 5, 5, 1, 1, 1)) !== \"NO\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(100, 200), array(200, 200)) !== \"YES\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp62qghj6w.php:34\n\
    Stack trace:\n#0 /tmp/tmp62qghj6w.php(37): test()\n#1 {main}\n  thrown in /tmp/tmp62qghj6w.php\
    \ on line 34\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// In this problem, you will implement a function that takes two\
    \ lists of numbers,\n// and determines whether it is possible to perform an exchange\
    \ of elements\n// between them to make lst1 a list of only even numbers.\n// There\
    \ is no limit on the number of exchanged elements between lst1 and lst2.\n// If\
    \ it is possible to exchange elements between the lst1 and lst2 to make\n// all\
    \ the elements of lst1 to be even, return \"YES\".\n// Otherwise, return \"NO\"\
    .\n// For example:\n// exchange([1, 2, 3, 4], [1, 2, 3, 4]) => \"YES\"\n// exchange([1,\
    \ 2, 3, 4], [1, 5, 3, 4]) => \"NO\"\n// It is assumed that the input lists will\
    \ be non-empty.\nfunction exchange($lst1, $lst2) {\n    $even = array_filter($lst1,\
    \ function($n) { return $n % 2 == 0; });\n    $odd = array_filter($lst2, function($n)\
    \ { return $n % 2 != 0; });\n    return count($even) + count($odd) >= count($lst1)\
    \ ? \"YES\" : \"NO\";\n}\n\nfunction candidate(...$args) {\n    return exchange(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4), array(1, 2,\
    \ 3, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4), array(1, 5, 3, 4)) !== \"NO\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4), array(2, 1, 4, 3)) !== \"YES\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 7, 3), array(2,\
    \ 6, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 7, 3), array(2, 6, 3)) !== \"NO\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(3, 2, 6, 1, 8, 9), array(3, 5, 5, 1, 1, 1)) !== \"\
    NO\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ 200), array(200, 200)) !== \"YES\") { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpp1ra9l5f.php:25\n\
    Stack trace:\n#0 /tmp/tmpp1ra9l5f.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpp1ra9l5f.php\
    \ on line 25\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// In this problem, you will implement a function that takes two\
    \ lists of numbers,\n// and determines whether it is possible to perform an exchange\
    \ of elements\n// between them to make lst1 a list of only even numbers.\n// There\
    \ is no limit on the number of exchanged elements between lst1 and lst2.\n// If\
    \ it is possible to exchange elements between the lst1 and lst2 to make\n// all\
    \ the elements of lst1 to be even, return \"YES\".\n// Otherwise, return \"NO\"\
    .\n// For example:\n// exchange([1, 2, 3, 4], [1, 2, 3, 4]) => \"YES\"\n// exchange([1,\
    \ 2, 3, 4], [1, 5, 3, 4]) => \"NO\"\n// It is assumed that the input lists will\
    \ be non-empty.\nfunction exchange($lst1, $lst2) {\n  $odds = [];\n  $evens =\
    \ [];\n  foreach ($lst1 as $num) {\n    if ($num % 2 === 0) {\n      $evens[]\
    \ = $num;\n    } else {\n      $odds[] = $num;\n    }\n  }\n  foreach ($lst2 as\
    \ $num) {\n    if ($num % 2 === 0) {\n      $evens[] = $num;\n    } else {\n \
    \     $odds[] = $num;\n    }\n  }\n  return count($evens) > count($odds) ? \"\
    YES\" : \"NO\";\n}\n\nfunction candidate(...$args) {\n    return exchange(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4), array(1, 2,\
    \ 3, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4), array(1, 5, 3, 4)) !== \"NO\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4), array(2, 1, 4, 3)) !== \"YES\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 7, 3), array(2,\
    \ 6, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 7, 3), array(2, 6, 3)) !== \"NO\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(3, 2, 6, 1, 8, 9), array(3, 5, 5, 1, 1, 1)) !== \"\
    NO\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ 200), array(200, 200)) !== \"YES\") { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpq1chre1b.php:38\n\
    Stack trace:\n#0 /tmp/tmpq1chre1b.php(47): test()\n#1 {main}\n  thrown in /tmp/tmpq1chre1b.php\
    \ on line 38\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// In this problem, you will implement a function that takes two\
    \ lists of numbers,\n// and determines whether it is possible to perform an exchange\
    \ of elements\n// between them to make lst1 a list of only even numbers.\n// There\
    \ is no limit on the number of exchanged elements between lst1 and lst2.\n// If\
    \ it is possible to exchange elements between the lst1 and lst2 to make\n// all\
    \ the elements of lst1 to be even, return \"YES\".\n// Otherwise, return \"NO\"\
    .\n// For example:\n// exchange([1, 2, 3, 4], [1, 2, 3, 4]) => \"YES\"\n// exchange([1,\
    \ 2, 3, 4], [1, 5, 3, 4]) => \"NO\"\n// It is assumed that the input lists will\
    \ be non-empty.\nfunction exchange($lst1, $lst2) {\n  // Write your code here\n\
    \  // To print results to the standard output you can use print\n  // Example:\
    \ print \"Hello world!\";\n}\nfunction candidate(...$args) {\n    return exchange(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4), array(1, 2,\
    \ 3, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4), array(1, 5, 3, 4)) !== \"NO\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4), array(2, 1, 4, 3)) !== \"YES\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 7, 3), array(2,\
    \ 6, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 7, 3), array(2, 6, 3)) !== \"NO\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(3, 2, 6, 1, 8, 9), array(3, 5, 5, 1, 1, 1)) !== \"\
    NO\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ 200), array(200, 200)) !== \"YES\") { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpzmwd2x1a.php:23\n\
    Stack trace:\n#0 /tmp/tmpzmwd2x1a.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpzmwd2x1a.php\
    \ on line 23\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// In this problem, you will implement a function that takes two\
    \ lists of numbers,\n// and determines whether it is possible to perform an exchange\
    \ of elements\n// between them to make lst1 a list of only even numbers.\n// There\
    \ is no limit on the number of exchanged elements between lst1 and lst2.\n// If\
    \ it is possible to exchange elements between the lst1 and lst2 to make\n// all\
    \ the elements of lst1 to be even, return \"YES\".\n// Otherwise, return \"NO\"\
    .\n// For example:\n// exchange([1, 2, 3, 4], [1, 2, 3, 4]) => \"YES\"\n// exchange([1,\
    \ 2, 3, 4], [1, 5, 3, 4]) => \"NO\"\n// It is assumed that the input lists will\
    \ be non-empty.\nfunction exchange($lst1, $lst2) {\n    $odds = 0;\n    $evens\
    \ = 0;\n    foreach ($lst1 as $num) {\n        if ($num % 2 == 0) {\n        \
    \    $evens++;\n        } else {\n            $odds++;\n        }\n    }\n   \
    \ foreach ($lst2 as $num) {\n        if ($num % 2 == 0) {\n            $evens++;\n\
    \        } else {\n            $odds++;\n        }\n    }\n    if ($evens % 2\
    \ == 0) {\n        return \"YES\";\n    } else {\n        return \"NO\";\n   \
    \ }\n}\n\nfunction candidate(...$args) {\n    return exchange(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(1, 2, 3, 4), array(1, 2, 3, 4))\
    \ !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4), array(1, 5, 3, 4)) !== \"NO\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4), array(2, 1, 4, 3)) !== \"YES\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 7, 3), array(2,\
    \ 6, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 7, 3), array(2, 6, 3)) !== \"NO\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(3, 2, 6, 1, 8, 9), array(3, 5, 5, 1, 1, 1)) !== \"\
    NO\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ 200), array(200, 200)) !== \"YES\") { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp673cxv30.php:45\n\
    Stack trace:\n#0 /tmp/tmp673cxv30.php(51): test()\n#1 {main}\n  thrown in /tmp/tmp673cxv30.php\
    \ on line 45\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// In this problem, you will implement a function that takes two\
    \ lists of numbers,\n// and determines whether it is possible to perform an exchange\
    \ of elements\n// between them to make lst1 a list of only even numbers.\n// There\
    \ is no limit on the number of exchanged elements between lst1 and lst2.\n// If\
    \ it is possible to exchange elements between the lst1 and lst2 to make\n// all\
    \ the elements of lst1 to be even, return \"YES\".\n// Otherwise, return \"NO\"\
    .\n// For example:\n// exchange([1, 2, 3, 4], [1, 2, 3, 4]) => \"YES\"\n// exchange([1,\
    \ 2, 3, 4], [1, 5, 3, 4]) => \"NO\"\n// It is assumed that the input lists will\
    \ be non-empty.\nfunction exchange($lst1, $lst2) {\n  $lst1_even = array_filter($lst1,\
    \ function($num) {\n    return $num % 2 == 0;\n  });\n  $lst2_odd = array_filter($lst2,\
    \ function($num) {\n    return $num % 2 != 0;\n  });\n  return count($lst1_even)\
    \ + count($lst2_odd) >= count($lst1) ? \"YES\" : \"NO\";\n}\n\necho exchange([1,\
    \ 2, 3, 4], [1, 2, 3, 4]) . \"\\n\";\necho exchange([1, 2, 3, 4], [1, 5, 3, 4])\
    \ . \"\\n\";\nfunction candidate(...$args) {\n    return exchange(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4), array(1, 2,\
    \ 3, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4), array(1, 5, 3, 4)) !== \"NO\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4), array(2, 1, 4, 3)) !== \"YES\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 7, 3), array(2,\
    \ 6, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 7, 3), array(2, 6, 3)) !== \"NO\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(3, 2, 6, 1, 8, 9), array(3, 5, 5, 1, 1, 1)) !== \"\
    NO\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ 200), array(200, 200)) !== \"YES\") { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: "YES\nYES\n"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpkwrm1wi8.php:31\n\
    Stack trace:\n#0 /tmp/tmpkwrm1wi8.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpkwrm1wi8.php\
    \ on line 31\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// In this problem, you will implement a function that takes two\
    \ lists of numbers,\n// and determines whether it is possible to perform an exchange\
    \ of elements\n// between them to make lst1 a list of only even numbers.\n// There\
    \ is no limit on the number of exchanged elements between lst1 and lst2.\n// If\
    \ it is possible to exchange elements between the lst1 and lst2 to make\n// all\
    \ the elements of lst1 to be even, return \"YES\".\n// Otherwise, return \"NO\"\
    .\n// For example:\n// exchange([1, 2, 3, 4], [1, 2, 3, 4]) => \"YES\"\n// exchange([1,\
    \ 2, 3, 4], [1, 5, 3, 4]) => \"NO\"\n// It is assumed that the input lists will\
    \ be non-empty.\nfunction exchange($lst1, $lst2) {\n    $odds1 = array_filter($lst1,\
    \ function($n) {\n        return $n % 2;\n    });\n    $odds2 = array_filter($lst2,\
    \ function($n) {\n        return $n % 2;\n    });\n    return count($odds1) ===\
    \ count($odds2) ? \"YES\" : \"NO\";\n}\n\nfunction candidate(...$args) {\n   \
    \ return exchange(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3, 4), array(1, 2, 3, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4), array(1, 5, 3, 4)) !== \"NO\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4), array(2,\
    \ 1, 4, 3)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 7, 3), array(2, 6, 4)) !== \"YES\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(5, 7, 3), array(2, 6, 3)) !== \"NO\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 6, 1, 8, 9), array(3,\
    \ 5, 5, 1, 1, 1)) !== \"NO\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(100, 200), array(200, 200)) !== \"YES\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmplbit4qft.php:31\n\
    Stack trace:\n#0 /tmp/tmplbit4qft.php(37): test()\n#1 {main}\n  thrown in /tmp/tmplbit4qft.php\
    \ on line 31\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// In this problem, you will implement a function that takes two\
    \ lists of numbers,\n// and determines whether it is possible to perform an exchange\
    \ of elements\n// between them to make lst1 a list of only even numbers.\n// There\
    \ is no limit on the number of exchanged elements between lst1 and lst2.\n// If\
    \ it is possible to exchange elements between the lst1 and lst2 to make\n// all\
    \ the elements of lst1 to be even, return \"YES\".\n// Otherwise, return \"NO\"\
    .\n// For example:\n// exchange([1, 2, 3, 4], [1, 2, 3, 4]) => \"YES\"\n// exchange([1,\
    \ 2, 3, 4], [1, 5, 3, 4]) => \"NO\"\n// It is assumed that the input lists will\
    \ be non-empty.\nfunction exchange($lst1, $lst2) {\n    $evens = array_filter($lst1,\
    \ function($n) { return $n % 2 == 0; });\n    $odds = array_filter($lst2, function($n)\
    \ { return $n % 2 == 1; });\n    return count($evens) + count($odds) == count($lst1)\
    \ + count($lst2) ? \"YES\" : \"NO\";\n}\n\nfunction candidate(...$args) {\n  \
    \  return exchange(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3, 4), array(1, 2, 3, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4), array(1, 5, 3, 4)) !== \"NO\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4), array(2,\
    \ 1, 4, 3)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 7, 3), array(2, 6, 4)) !== \"YES\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(5, 7, 3), array(2, 6, 3)) !== \"NO\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 6, 1, 8, 9), array(3,\
    \ 5, 5, 1, 1, 1)) !== \"NO\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(100, 200), array(200, 200)) !== \"YES\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpbxi6aehv.php:24\n\
    Stack trace:\n#0 /tmp/tmpbxi6aehv.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpbxi6aehv.php\
    \ on line 24\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// In this problem, you will implement a function that takes two\
    \ lists of numbers,\n// and determines whether it is possible to perform an exchange\
    \ of elements\n// between them to make lst1 a list of only even numbers.\n// There\
    \ is no limit on the number of exchanged elements between lst1 and lst2.\n// If\
    \ it is possible to exchange elements between the lst1 and lst2 to make\n// all\
    \ the elements of lst1 to be even, return \"YES\".\n// Otherwise, return \"NO\"\
    .\n// For example:\n// exchange([1, 2, 3, 4], [1, 2, 3, 4]) => \"YES\"\n// exchange([1,\
    \ 2, 3, 4], [1, 5, 3, 4]) => \"NO\"\n// It is assumed that the input lists will\
    \ be non-empty.\nfunction exchange($lst1, $lst2) {\n  $odds = array_filter($lst1,\
    \ function($n) { return $n % 2 != 0; });\n  $evens = array_filter($lst2, function($n)\
    \ { return $n % 2 == 0; });\n  return count($odds) == count($evens) ? \"YES\"\
    \ : \"NO\";\n}\n\nfunction candidate(...$args) {\n    return exchange(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4), array(1, 2,\
    \ 3, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4), array(1, 5, 3, 4)) !== \"NO\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4), array(2, 1, 4, 3)) !== \"YES\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 7, 3), array(2,\
    \ 6, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 7, 3), array(2, 6, 3)) !== \"NO\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(3, 2, 6, 1, 8, 9), array(3, 5, 5, 1, 1, 1)) !== \"\
    NO\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ 200), array(200, 200)) !== \"YES\") { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpwix1_5kh.php:30\n\
    Stack trace:\n#0 /tmp/tmpwix1_5kh.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpwix1_5kh.php\
    \ on line 30\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// In this problem, you will implement a function that takes two\
    \ lists of numbers,\n// and determines whether it is possible to perform an exchange\
    \ of elements\n// between them to make lst1 a list of only even numbers.\n// There\
    \ is no limit on the number of exchanged elements between lst1 and lst2.\n// If\
    \ it is possible to exchange elements between the lst1 and lst2 to make\n// all\
    \ the elements of lst1 to be even, return \"YES\".\n// Otherwise, return \"NO\"\
    .\n// For example:\n// exchange([1, 2, 3, 4], [1, 2, 3, 4]) => \"YES\"\n// exchange([1,\
    \ 2, 3, 4], [1, 5, 3, 4]) => \"NO\"\n// It is assumed that the input lists will\
    \ be non-empty.\nfunction exchange($lst1, $lst2) {\n    $odds = 0;\n    $evens\
    \ = 0;\n    foreach ($lst1 as $num) {\n        if ($num % 2 == 0) {\n        \
    \    $evens++;\n        } else {\n            $odds++;\n        }\n    }\n   \
    \ foreach ($lst2 as $num) {\n        if ($num % 2 == 0) {\n            $evens++;\n\
    \        } else {\n            $odds++;\n        }\n    }\n    if ($evens % 2\
    \ == 0) {\n        return \"YES\";\n    } else {\n        return \"NO\";\n   \
    \ }\n}\n\nfunction candidate(...$args) {\n    return exchange(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(1, 2, 3, 4), array(1, 2, 3, 4))\
    \ !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4), array(1, 5, 3, 4)) !== \"NO\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4), array(2, 1, 4, 3)) !== \"YES\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 7, 3), array(2,\
    \ 6, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 7, 3), array(2, 6, 3)) !== \"NO\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(3, 2, 6, 1, 8, 9), array(3, 5, 5, 1, 1, 1)) !== \"\
    NO\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ 200), array(200, 200)) !== \"YES\") { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp3zye_4en.php:45\n\
    Stack trace:\n#0 /tmp/tmp3zye_4en.php(51): test()\n#1 {main}\n  thrown in /tmp/tmp3zye_4en.php\
    \ on line 45\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// In this problem, you will implement a function that takes two\
    \ lists of numbers,\n// and determines whether it is possible to perform an exchange\
    \ of elements\n// between them to make lst1 a list of only even numbers.\n// There\
    \ is no limit on the number of exchanged elements between lst1 and lst2.\n// If\
    \ it is possible to exchange elements between the lst1 and lst2 to make\n// all\
    \ the elements of lst1 to be even, return \"YES\".\n// Otherwise, return \"NO\"\
    .\n// For example:\n// exchange([1, 2, 3, 4], [1, 2, 3, 4]) => \"YES\"\n// exchange([1,\
    \ 2, 3, 4], [1, 5, 3, 4]) => \"NO\"\n// It is assumed that the input lists will\
    \ be non-empty.\nfunction exchange($lst1, $lst2) {\n  $odds = [];\n  $evens =\
    \ [];\n  foreach ($lst1 as $num) {\n    if ($num % 2 === 0) {\n      $evens[]\
    \ = $num;\n    } else {\n      $odds[] = $num;\n    }\n  }\n  foreach ($lst2 as\
    \ $num) {\n    if ($num % 2 === 0) {\n      $evens[] = $num;\n    } else {\n \
    \     $odds[] = $num;\n    }\n  }\n  if (count($evens) > count($odds)) {\n   \
    \ return \"YES\";\n  } else {\n    return \"NO\";\n  }\n}\n\nfunction candidate(...$args)\
    \ {\n    return exchange(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3, 4), array(1, 2, 3, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4), array(1, 5, 3, 4)) !== \"NO\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4), array(2,\
    \ 1, 4, 3)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 7, 3), array(2, 6, 4)) !== \"YES\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(5, 7, 3), array(2, 6, 3)) !== \"NO\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 6, 1, 8, 9), array(3,\
    \ 5, 5, 1, 1, 1)) !== \"NO\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(100, 200), array(200, 200)) !== \"YES\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp16eocy9p.php:42\n\
    Stack trace:\n#0 /tmp/tmp16eocy9p.php(51): test()\n#1 {main}\n  thrown in /tmp/tmp16eocy9p.php\
    \ on line 42\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// In this problem, you will implement a function that takes two\
    \ lists of numbers,\n// and determines whether it is possible to perform an exchange\
    \ of elements\n// between them to make lst1 a list of only even numbers.\n// There\
    \ is no limit on the number of exchanged elements between lst1 and lst2.\n// If\
    \ it is possible to exchange elements between the lst1 and lst2 to make\n// all\
    \ the elements of lst1 to be even, return \"YES\".\n// Otherwise, return \"NO\"\
    .\n// For example:\n// exchange([1, 2, 3, 4], [1, 2, 3, 4]) => \"YES\"\n// exchange([1,\
    \ 2, 3, 4], [1, 5, 3, 4]) => \"NO\"\n// It is assumed that the input lists will\
    \ be non-empty.\nfunction exchange($lst1, $lst2) {\n    $odds = [];\n    $evens\
    \ = [];\n    foreach ($lst1 as $num) {\n        if ($num % 2 == 0) {\n       \
    \     $evens[] = $num;\n        } else {\n            $odds[] = $num;\n      \
    \  }\n    }\n    foreach ($lst2 as $num) {\n        if ($num % 2 == 0) {\n   \
    \         $evens[] = $num;\n        } else {\n            $odds[] = $num;\n  \
    \      }\n    }\n    if (count($odds) == 0) {\n        return \"YES\";\n    }\
    \ else {\n        return \"NO\";\n    }\n}\n\nfunction candidate(...$args) {\n\
    \    return exchange(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3, 4), array(1, 2, 3, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4), array(1, 5, 3, 4)) !== \"NO\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4), array(2,\
    \ 1, 4, 3)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 7, 3), array(2, 6, 4)) !== \"YES\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(5, 7, 3), array(2, 6, 3)) !== \"NO\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 6, 1, 8, 9), array(3,\
    \ 5, 5, 1, 1, 1)) !== \"NO\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(100, 200), array(200, 200)) !== \"YES\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpi0mh1ism.php:42\n\
    Stack trace:\n#0 /tmp/tmpi0mh1ism.php(51): test()\n#1 {main}\n  thrown in /tmp/tmpi0mh1ism.php\
    \ on line 42\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// In this problem, you will implement a function that takes two\
    \ lists of numbers,\n// and determines whether it is possible to perform an exchange\
    \ of elements\n// between them to make lst1 a list of only even numbers.\n// There\
    \ is no limit on the number of exchanged elements between lst1 and lst2.\n// If\
    \ it is possible to exchange elements between the lst1 and lst2 to make\n// all\
    \ the elements of lst1 to be even, return \"YES\".\n// Otherwise, return \"NO\"\
    .\n// For example:\n// exchange([1, 2, 3, 4], [1, 2, 3, 4]) => \"YES\"\n// exchange([1,\
    \ 2, 3, 4], [1, 5, 3, 4]) => \"NO\"\n// It is assumed that the input lists will\
    \ be non-empty.\nfunction exchange($lst1, $lst2) {\n  $evens = array_filter($lst1,\
    \ function($x) { return $x % 2 == 0; });\n  $odds = array_filter($lst2, function($x)\
    \ { return $x % 2 != 0; });\n  return count($evens) == count($odds) ? \"YES\"\
    \ : \"NO\";\n}\n\nfunction candidate(...$args) {\n    return exchange(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4), array(1, 2,\
    \ 3, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4), array(1, 5, 3, 4)) !== \"NO\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4), array(2, 1, 4, 3)) !== \"YES\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 7, 3), array(2,\
    \ 6, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 7, 3), array(2, 6, 3)) !== \"NO\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(3, 2, 6, 1, 8, 9), array(3, 5, 5, 1, 1, 1)) !== \"\
    NO\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ 200), array(200, 200)) !== \"YES\") { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpfn86bggo.php:30\n\
    Stack trace:\n#0 /tmp/tmpfn86bggo.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpfn86bggo.php\
    \ on line 30\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// In this problem, you will implement a function that takes two\
    \ lists of numbers,\n// and determines whether it is possible to perform an exchange\
    \ of elements\n// between them to make lst1 a list of only even numbers.\n// There\
    \ is no limit on the number of exchanged elements between lst1 and lst2.\n// If\
    \ it is possible to exchange elements between the lst1 and lst2 to make\n// all\
    \ the elements of lst1 to be even, return \"YES\".\n// Otherwise, return \"NO\"\
    .\n// For example:\n// exchange([1, 2, 3, 4], [1, 2, 3, 4]) => \"YES\"\n// exchange([1,\
    \ 2, 3, 4], [1, 5, 3, 4]) => \"NO\"\n// It is assumed that the input lists will\
    \ be non-empty.\nfunction exchange($lst1, $lst2) {\n    $odd_lst1 = array_filter($lst1,\
    \ function($n) { return $n % 2; });\n    $odd_lst2 = array_filter($lst2, function($n)\
    \ { return $n % 2; });\n    return count($odd_lst1) == count($odd_lst2) ? \"YES\"\
    \ : \"NO\";\n}\n\nfunction candidate(...$args) {\n    return exchange(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4), array(1, 2,\
    \ 3, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4), array(1, 5, 3, 4)) !== \"NO\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4), array(2, 1, 4, 3)) !== \"YES\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 7, 3), array(2,\
    \ 6, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 7, 3), array(2, 6, 3)) !== \"NO\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(3, 2, 6, 1, 8, 9), array(3, 5, 5, 1, 1, 1)) !== \"\
    NO\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ 200), array(200, 200)) !== \"YES\") { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpa1mwiumr.php:27\n\
    Stack trace:\n#0 /tmp/tmpa1mwiumr.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpa1mwiumr.php\
    \ on line 27\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// In this problem, you will implement a function that takes two\
    \ lists of numbers,\n// and determines whether it is possible to perform an exchange\
    \ of elements\n// between them to make lst1 a list of only even numbers.\n// There\
    \ is no limit on the number of exchanged elements between lst1 and lst2.\n// If\
    \ it is possible to exchange elements between the lst1 and lst2 to make\n// all\
    \ the elements of lst1 to be even, return \"YES\".\n// Otherwise, return \"NO\"\
    .\n// For example:\n// exchange([1, 2, 3, 4], [1, 2, 3, 4]) => \"YES\"\n// exchange([1,\
    \ 2, 3, 4], [1, 5, 3, 4]) => \"NO\"\n// It is assumed that the input lists will\
    \ be non-empty.\nfunction exchange($lst1, $lst2) {\n    $odds = [];\n    $evens\
    \ = [];\n    foreach ($lst1 as $num) {\n        if ($num % 2 === 0) {\n      \
    \      $evens[] = $num;\n        } else {\n            $odds[] = $num;\n     \
    \   }\n    }\n    foreach ($lst2 as $num) {\n        if ($num % 2 === 0) {\n \
    \           $evens[] = $num;\n        } else {\n            $odds[] = $num;\n\
    \        }\n    }\n    if (count($evens) > count($odds)) {\n        return \"\
    YES\";\n    } else {\n        return \"NO\";\n    }\n}\n\nfunction candidate(...$args)\
    \ {\n    return exchange(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3, 4), array(1, 2, 3, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4), array(1, 5, 3, 4)) !== \"NO\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4), array(2,\
    \ 1, 4, 3)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 7, 3), array(2, 6, 4)) !== \"YES\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(5, 7, 3), array(2, 6, 3)) !== \"NO\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 6, 1, 8, 9), array(3,\
    \ 5, 5, 1, 1, 1)) !== \"NO\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(100, 200), array(200, 200)) !== \"YES\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp0tqgxzoa.php:42\n\
    Stack trace:\n#0 /tmp/tmp0tqgxzoa.php(51): test()\n#1 {main}\n  thrown in /tmp/tmp0tqgxzoa.php\
    \ on line 42\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// In this problem, you will implement a function that takes two\
    \ lists of numbers,\n// and determines whether it is possible to perform an exchange\
    \ of elements\n// between them to make lst1 a list of only even numbers.\n// There\
    \ is no limit on the number of exchanged elements between lst1 and lst2.\n// If\
    \ it is possible to exchange elements between the lst1 and lst2 to make\n// all\
    \ the elements of lst1 to be even, return \"YES\".\n// Otherwise, return \"NO\"\
    .\n// For example:\n// exchange([1, 2, 3, 4], [1, 2, 3, 4]) => \"YES\"\n// exchange([1,\
    \ 2, 3, 4], [1, 5, 3, 4]) => \"NO\"\n// It is assumed that the input lists will\
    \ be non-empty.\nfunction exchange($lst1, $lst2) {\n    $odds = [];\n    $evens\
    \ = [];\n    $exchange = \"NO\";\n    foreach ($lst1 as $num) {\n        if ($num\
    \ % 2 == 0) {\n            $evens[] = $num;\n        } else {\n            $odds[]\
    \ = $num;\n        }\n    }\n    foreach ($lst2 as $num) {\n        if ($num %\
    \ 2 == 0) {\n            $evens[] = $num;\n        } else {\n            $odds[]\
    \ = $num;\n        }\n    }\n    if (count($evens) > count($odds)) {\n       \
    \ $exchange = \"YES\";\n    }\n    return $exchange;\n}\n\nfunction candidate(...$args)\
    \ {\n    return exchange(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3, 4), array(1, 2, 3, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4), array(1, 5, 3, 4)) !== \"NO\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4), array(2,\
    \ 1, 4, 3)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 7, 3), array(2, 6, 4)) !== \"YES\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(5, 7, 3), array(2, 6, 3)) !== \"NO\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 6, 1, 8, 9), array(3,\
    \ 5, 5, 1, 1, 1)) !== \"NO\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(100, 200), array(200, 200)) !== \"YES\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp9c8tp688.php:42\n\
    Stack trace:\n#0 /tmp/tmp9c8tp688.php(51): test()\n#1 {main}\n  thrown in /tmp/tmp9c8tp688.php\
    \ on line 42\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// In this problem, you will implement a function that takes two\
    \ lists of numbers,\n// and determines whether it is possible to perform an exchange\
    \ of elements\n// between them to make lst1 a list of only even numbers.\n// There\
    \ is no limit on the number of exchanged elements between lst1 and lst2.\n// If\
    \ it is possible to exchange elements between the lst1 and lst2 to make\n// all\
    \ the elements of lst1 to be even, return \"YES\".\n// Otherwise, return \"NO\"\
    .\n// For example:\n// exchange([1, 2, 3, 4], [1, 2, 3, 4]) => \"YES\"\n// exchange([1,\
    \ 2, 3, 4], [1, 5, 3, 4]) => \"NO\"\n// It is assumed that the input lists will\
    \ be non-empty.\nfunction exchange($lst1, $lst2) {\n  $even = 0;\n  $odd = 0;\n\
    \  for ($i = 0; $i < count($lst1); $i++) {\n    if ($lst1[$i] % 2 == 0) {\n  \
    \    $even++;\n    } else {\n      $odd++;\n    }\n  }\n  for ($i = 0; $i < count($lst2);\
    \ $i++) {\n    if ($lst2[$i] % 2 == 0) {\n      $even++;\n    } else {\n     \
    \ $odd++;\n    }\n  }\n  if ($even > $odd) {\n    return \"YES\";\n  } else {\n\
    \    return \"NO\";\n  }\n}\n\nfunction candidate(...$args) {\n    return exchange(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4), array(1, 2,\
    \ 3, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4), array(1, 5, 3, 4)) !== \"NO\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4), array(2, 1, 4, 3)) !== \"YES\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 7, 3), array(2,\
    \ 6, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 7, 3), array(2, 6, 3)) !== \"NO\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(3, 2, 6, 1, 8, 9), array(3, 5, 5, 1, 1, 1)) !== \"\
    NO\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ 200), array(200, 200)) !== \"YES\") { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp_5mt2aam.php:42\n\
    Stack trace:\n#0 /tmp/tmp_5mt2aam.php(51): test()\n#1 {main}\n  thrown in /tmp/tmp_5mt2aam.php\
    \ on line 42\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// In this problem, you will implement a function that takes two\
    \ lists of numbers,\n// and determines whether it is possible to perform an exchange\
    \ of elements\n// between them to make lst1 a list of only even numbers.\n// There\
    \ is no limit on the number of exchanged elements between lst1 and lst2.\n// If\
    \ it is possible to exchange elements between the lst1 and lst2 to make\n// all\
    \ the elements of lst1 to be even, return \"YES\".\n// Otherwise, return \"NO\"\
    .\n// For example:\n// exchange([1, 2, 3, 4], [1, 2, 3, 4]) => \"YES\"\n// exchange([1,\
    \ 2, 3, 4], [1, 5, 3, 4]) => \"NO\"\n// It is assumed that the input lists will\
    \ be non-empty.\nfunction exchange($lst1, $lst2) {\n    $odds = [];\n    $evens\
    \ = [];\n    foreach ($lst1 as $num) {\n        if ($num % 2 === 0) {\n      \
    \      $evens[] = $num;\n        } else {\n            $odds[] = $num;\n     \
    \   }\n    }\n    foreach ($lst2 as $num) {\n        if ($num % 2 === 0) {\n \
    \           $evens[] = $num;\n        } else {\n            $odds[] = $num;\n\
    \        }\n    }\n    if (count($evens) > count($odds)) {\n        return \"\
    YES\";\n    } else {\n        return \"NO\";\n    }\n}\n\nfunction candidate(...$args)\
    \ {\n    return exchange(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3, 4), array(1, 2, 3, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4), array(1, 5, 3, 4)) !== \"NO\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4), array(2,\
    \ 1, 4, 3)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 7, 3), array(2, 6, 4)) !== \"YES\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(5, 7, 3), array(2, 6, 3)) !== \"NO\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 6, 1, 8, 9), array(3,\
    \ 5, 5, 1, 1, 1)) !== \"NO\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(100, 200), array(200, 200)) !== \"YES\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpkj2e8r3n.php:42\n\
    Stack trace:\n#0 /tmp/tmpkj2e8r3n.php(51): test()\n#1 {main}\n  thrown in /tmp/tmpkj2e8r3n.php\
    \ on line 42\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// In this problem, you will implement a function that takes two\
    \ lists of numbers,\n// and determines whether it is possible to perform an exchange\
    \ of elements\n// between them to make lst1 a list of only even numbers.\n// There\
    \ is no limit on the number of exchanged elements between lst1 and lst2.\n// If\
    \ it is possible to exchange elements between the lst1 and lst2 to make\n// all\
    \ the elements of lst1 to be even, return \"YES\".\n// Otherwise, return \"NO\"\
    .\n// For example:\n// exchange([1, 2, 3, 4], [1, 2, 3, 4]) => \"YES\"\n// exchange([1,\
    \ 2, 3, 4], [1, 5, 3, 4]) => \"NO\"\n// It is assumed that the input lists will\
    \ be non-empty.\nfunction exchange($lst1, $lst2) {\n    $odds = [];\n    $evens\
    \ = [];\n    foreach ($lst1 as $num) {\n        if ($num % 2 === 0) {\n      \
    \      $evens[] = $num;\n        } else {\n            $odds[] = $num;\n     \
    \   }\n    }\n    foreach ($lst2 as $num) {\n        if ($num % 2 === 0) {\n \
    \           $evens[] = $num;\n        } else {\n            $odds[] = $num;\n\
    \        }\n    }\n    if (count($evens) > count($odds)) {\n        return \"\
    YES\";\n    } else {\n        return \"NO\";\n    }\n}\n\nfunction candidate(...$args)\
    \ {\n    return exchange(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3, 4), array(1, 2, 3, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4), array(1, 5, 3, 4)) !== \"NO\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4), array(2,\
    \ 1, 4, 3)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 7, 3), array(2, 6, 4)) !== \"YES\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(5, 7, 3), array(2, 6, 3)) !== \"NO\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 6, 1, 8, 9), array(3,\
    \ 5, 5, 1, 1, 1)) !== \"NO\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(100, 200), array(200, 200)) !== \"YES\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp61bdjpyl.php:42\n\
    Stack trace:\n#0 /tmp/tmp61bdjpyl.php(51): test()\n#1 {main}\n  thrown in /tmp/tmp61bdjpyl.php\
    \ on line 42\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// In this problem, you will implement a function that takes two\
    \ lists of numbers,\n// and determines whether it is possible to perform an exchange\
    \ of elements\n// between them to make lst1 a list of only even numbers.\n// There\
    \ is no limit on the number of exchanged elements between lst1 and lst2.\n// If\
    \ it is possible to exchange elements between the lst1 and lst2 to make\n// all\
    \ the elements of lst1 to be even, return \"YES\".\n// Otherwise, return \"NO\"\
    .\n// For example:\n// exchange([1, 2, 3, 4], [1, 2, 3, 4]) => \"YES\"\n// exchange([1,\
    \ 2, 3, 4], [1, 5, 3, 4]) => \"NO\"\n// It is assumed that the input lists will\
    \ be non-empty.\nfunction exchange($lst1, $lst2) {\n    $odds1 = array_filter($lst1,\
    \ function($n) { return $n % 2 == 1; });\n    $odds2 = array_filter($lst2, function($n)\
    \ { return $n % 2 == 1; });\n    return count($odds1) == count($odds2) ? \"YES\"\
    \ : \"NO\";\n}\n\nfunction candidate(...$args) {\n    return exchange(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4), array(1, 2,\
    \ 3, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4), array(1, 5, 3, 4)) !== \"NO\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4), array(2, 1, 4, 3)) !== \"YES\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 7, 3), array(2,\
    \ 6, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 7, 3), array(2, 6, 3)) !== \"NO\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(3, 2, 6, 1, 8, 9), array(3, 5, 5, 1, 1, 1)) !== \"\
    NO\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ 200), array(200, 200)) !== \"YES\") { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpgd6kn9va.php:27\n\
    Stack trace:\n#0 /tmp/tmpgd6kn9va.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpgd6kn9va.php\
    \ on line 27\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// In this problem, you will implement a function that takes two\
    \ lists of numbers,\n// and determines whether it is possible to perform an exchange\
    \ of elements\n// between them to make lst1 a list of only even numbers.\n// There\
    \ is no limit on the number of exchanged elements between lst1 and lst2.\n// If\
    \ it is possible to exchange elements between the lst1 and lst2 to make\n// all\
    \ the elements of lst1 to be even, return \"YES\".\n// Otherwise, return \"NO\"\
    .\n// For example:\n// exchange([1, 2, 3, 4], [1, 2, 3, 4]) => \"YES\"\n// exchange([1,\
    \ 2, 3, 4], [1, 5, 3, 4]) => \"NO\"\n// It is assumed that the input lists will\
    \ be non-empty.\nfunction exchange($lst1, $lst2) {\n  $odds = [];\n  $evens =\
    \ [];\n  foreach ($lst1 as $num) {\n    if ($num % 2 === 0) {\n      $evens[]\
    \ = $num;\n    } else {\n      $odds[] = $num;\n    }\n  }\n  foreach ($lst2 as\
    \ $num) {\n    if ($num % 2 === 0) {\n      $evens[] = $num;\n    } else {\n \
    \     $odds[] = $num;\n    }\n  }\n  if (count($evens) > count($odds)) {\n   \
    \ return \"YES\";\n  } else {\n    return \"NO\";\n  }\n}\n\nfunction candidate(...$args)\
    \ {\n    return exchange(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3, 4), array(1, 2, 3, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4), array(1, 5, 3, 4)) !== \"NO\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4), array(2,\
    \ 1, 4, 3)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 7, 3), array(2, 6, 4)) !== \"YES\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(5, 7, 3), array(2, 6, 3)) !== \"NO\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 6, 1, 8, 9), array(3,\
    \ 5, 5, 1, 1, 1)) !== \"NO\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(100, 200), array(200, 200)) !== \"YES\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpjbthyhz6.php:42\n\
    Stack trace:\n#0 /tmp/tmpjbthyhz6.php(51): test()\n#1 {main}\n  thrown in /tmp/tmpjbthyhz6.php\
    \ on line 42\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// In this problem, you will implement a function that takes two\
    \ lists of numbers,\n// and determines whether it is possible to perform an exchange\
    \ of elements\n// between them to make lst1 a list of only even numbers.\n// There\
    \ is no limit on the number of exchanged elements between lst1 and lst2.\n// If\
    \ it is possible to exchange elements between the lst1 and lst2 to make\n// all\
    \ the elements of lst1 to be even, return \"YES\".\n// Otherwise, return \"NO\"\
    .\n// For example:\n// exchange([1, 2, 3, 4], [1, 2, 3, 4]) => \"YES\"\n// exchange([1,\
    \ 2, 3, 4], [1, 5, 3, 4]) => \"NO\"\n// It is assumed that the input lists will\
    \ be non-empty.\nfunction exchange($lst1, $lst2) {\n    $lst1 = array_filter($lst1,\
    \ function($n) { return $n % 2 == 0; });\n    $lst2 = array_filter($lst2, function($n)\
    \ { return $n % 2 == 1; });\n    return count($lst1) == count($lst2) ? \"YES\"\
    \ : \"NO\";\n}\n\nfunction candidate(...$args) {\n    return exchange(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4), array(1, 2,\
    \ 3, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4), array(1, 5, 3, 4)) !== \"NO\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4), array(2, 1, 4, 3)) !== \"YES\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 7, 3), array(2,\
    \ 6, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 7, 3), array(2, 6, 3)) !== \"NO\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(3, 2, 6, 1, 8, 9), array(3, 5, 5, 1, 1, 1)) !== \"\
    NO\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ 200), array(200, 200)) !== \"YES\") { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpnik8c7oc.php:30\n\
    Stack trace:\n#0 /tmp/tmpnik8c7oc.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpnik8c7oc.php\
    \ on line 30\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// In this problem, you will implement a function that takes two\
    \ lists of numbers,\n// and determines whether it is possible to perform an exchange\
    \ of elements\n// between them to make lst1 a list of only even numbers.\n// There\
    \ is no limit on the number of exchanged elements between lst1 and lst2.\n// If\
    \ it is possible to exchange elements between the lst1 and lst2 to make\n// all\
    \ the elements of lst1 to be even, return \"YES\".\n// Otherwise, return \"NO\"\
    .\n// For example:\n// exchange([1, 2, 3, 4], [1, 2, 3, 4]) => \"YES\"\n// exchange([1,\
    \ 2, 3, 4], [1, 5, 3, 4]) => \"NO\"\n// It is assumed that the input lists will\
    \ be non-empty.\nfunction exchange($lst1, $lst2) {\n    $odds = array_filter($lst1,\
    \ function($n) { return $n % 2; });\n    $evens = array_filter($lst2, function($n)\
    \ { return !($n % 2); });\n    return count($odds) == count($evens) ? \"YES\"\
    \ : \"NO\";\n}\n\nfunction candidate(...$args) {\n    return exchange(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4), array(1, 2,\
    \ 3, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4), array(1, 5, 3, 4)) !== \"NO\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4), array(2, 1, 4, 3)) !== \"YES\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 7, 3), array(2,\
    \ 6, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 7, 3), array(2, 6, 3)) !== \"NO\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(3, 2, 6, 1, 8, 9), array(3, 5, 5, 1, 1, 1)) !== \"\
    NO\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ 200), array(200, 200)) !== \"YES\") { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpo_86tu9j.php:30\n\
    Stack trace:\n#0 /tmp/tmpo_86tu9j.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpo_86tu9j.php\
    \ on line 30\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// In this problem, you will implement a function that takes two\
    \ lists of numbers,\n// and determines whether it is possible to perform an exchange\
    \ of elements\n// between them to make lst1 a list of only even numbers.\n// There\
    \ is no limit on the number of exchanged elements between lst1 and lst2.\n// If\
    \ it is possible to exchange elements between the lst1 and lst2 to make\n// all\
    \ the elements of lst1 to be even, return \"YES\".\n// Otherwise, return \"NO\"\
    .\n// For example:\n// exchange([1, 2, 3, 4], [1, 2, 3, 4]) => \"YES\"\n// exchange([1,\
    \ 2, 3, 4], [1, 5, 3, 4]) => \"NO\"\n// It is assumed that the input lists will\
    \ be non-empty.\nfunction exchange($lst1, $lst2) {\n  $odds = 0;\n  $evens = 0;\n\
    \  foreach ($lst1 as $num) {\n    if ($num % 2 == 0) {\n      $evens++;\n    }\
    \ else {\n      $odds++;\n    }\n  }\n  foreach ($lst2 as $num) {\n    if ($num\
    \ % 2 == 0) {\n      $evens++;\n    } else {\n      $odds++;\n    }\n  }\n  if\
    \ ($evens > $odds) {\n    return \"YES\";\n  } else {\n    return \"NO\";\n  }\n\
    }\n\nfunction candidate(...$args) {\n    return exchange(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 2, 3, 4), array(1, 2, 3, 4)) !==\
    \ \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4), array(1, 5, 3, 4)) !== \"NO\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4), array(2, 1, 4, 3)) !== \"YES\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 7, 3), array(2,\
    \ 6, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 7, 3), array(2, 6, 3)) !== \"NO\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(3, 2, 6, 1, 8, 9), array(3, 5, 5, 1, 1, 1)) !== \"\
    NO\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ 200), array(200, 200)) !== \"YES\") { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp3ydbh4sh.php:42\n\
    Stack trace:\n#0 /tmp/tmp3ydbh4sh.php(51): test()\n#1 {main}\n  thrown in /tmp/tmp3ydbh4sh.php\
    \ on line 42\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// In this problem, you will implement a function that takes two\
    \ lists of numbers,\n// and determines whether it is possible to perform an exchange\
    \ of elements\n// between them to make lst1 a list of only even numbers.\n// There\
    \ is no limit on the number of exchanged elements between lst1 and lst2.\n// If\
    \ it is possible to exchange elements between the lst1 and lst2 to make\n// all\
    \ the elements of lst1 to be even, return \"YES\".\n// Otherwise, return \"NO\"\
    .\n// For example:\n// exchange([1, 2, 3, 4], [1, 2, 3, 4]) => \"YES\"\n// exchange([1,\
    \ 2, 3, 4], [1, 5, 3, 4]) => \"NO\"\n// It is assumed that the input lists will\
    \ be non-empty.\nfunction exchange($lst1, $lst2) {\n  $odds = array_filter($lst1,\
    \ function($n) { return $n % 2; });\n  $evens = array_filter($lst2, function($n)\
    \ { return !($n % 2); });\n  return count($odds) == count($evens) ? \"YES\" :\
    \ \"NO\";\n}\n\nfunction candidate(...$args) {\n    return exchange(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4), array(1, 2,\
    \ 3, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4), array(1, 5, 3, 4)) !== \"NO\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4), array(2, 1, 4, 3)) !== \"YES\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 7, 3), array(2,\
    \ 6, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 7, 3), array(2, 6, 3)) !== \"NO\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(3, 2, 6, 1, 8, 9), array(3, 5, 5, 1, 1, 1)) !== \"\
    NO\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ 200), array(200, 200)) !== \"YES\") { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp4kn_5269.php:30\n\
    Stack trace:\n#0 /tmp/tmp4kn_5269.php(33): test()\n#1 {main}\n  thrown in /tmp/tmp4kn_5269.php\
    \ on line 30\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// In this problem, you will implement a function that takes two\
    \ lists of numbers,\n// and determines whether it is possible to perform an exchange\
    \ of elements\n// between them to make lst1 a list of only even numbers.\n// There\
    \ is no limit on the number of exchanged elements between lst1 and lst2.\n// If\
    \ it is possible to exchange elements between the lst1 and lst2 to make\n// all\
    \ the elements of lst1 to be even, return \"YES\".\n// Otherwise, return \"NO\"\
    .\n// For example:\n// exchange([1, 2, 3, 4], [1, 2, 3, 4]) => \"YES\"\n// exchange([1,\
    \ 2, 3, 4], [1, 5, 3, 4]) => \"NO\"\n// It is assumed that the input lists will\
    \ be non-empty.\nfunction exchange($lst1, $lst2) {\n    $lst1 = array_filter($lst1,\
    \ function($x) { return $x % 2 == 0; });\n    $lst2 = array_filter($lst2, function($x)\
    \ { return $x % 2 == 1; });\n    return count($lst1) + count($lst2) == count($lst1)\
    \ + count($lst2) ? \"YES\" : \"NO\";\n}\n\nfunction candidate(...$args) {\n  \
    \  return exchange(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3, 4), array(1, 2, 3, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4), array(1, 5, 3, 4)) !== \"NO\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4), array(2,\
    \ 1, 4, 3)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 7, 3), array(2, 6, 4)) !== \"YES\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(5, 7, 3), array(2, 6, 3)) !== \"NO\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 6, 1, 8, 9), array(3,\
    \ 5, 5, 1, 1, 1)) !== \"NO\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(100, 200), array(200, 200)) !== \"YES\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp6s3ql9sb.php:25\n\
    Stack trace:\n#0 /tmp/tmp6s3ql9sb.php(33): test()\n#1 {main}\n  thrown in /tmp/tmp6s3ql9sb.php\
    \ on line 25\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// In this problem, you will implement a function that takes two\
    \ lists of numbers,\n// and determines whether it is possible to perform an exchange\
    \ of elements\n// between them to make lst1 a list of only even numbers.\n// There\
    \ is no limit on the number of exchanged elements between lst1 and lst2.\n// If\
    \ it is possible to exchange elements between the lst1 and lst2 to make\n// all\
    \ the elements of lst1 to be even, return \"YES\".\n// Otherwise, return \"NO\"\
    .\n// For example:\n// exchange([1, 2, 3, 4], [1, 2, 3, 4]) => \"YES\"\n// exchange([1,\
    \ 2, 3, 4], [1, 5, 3, 4]) => \"NO\"\n// It is assumed that the input lists will\
    \ be non-empty.\nfunction exchange($lst1, $lst2) {\n  $odds = 0;\n  $evens = 0;\n\
    \  foreach ($lst1 as $num) {\n    if ($num % 2 == 0) {\n      $evens++;\n    }\
    \ else {\n      $odds++;\n    }\n  }\n  foreach ($lst2 as $num) {\n    if ($num\
    \ % 2 == 0) {\n      $evens++;\n    } else {\n      $odds++;\n    }\n  }\n  if\
    \ ($evens % 2 == 0 && $odds % 2 == 0) {\n    return \"YES\";\n  } else {\n   \
    \ return \"NO\";\n  }\n}\n\nfunction candidate(...$args) {\n    return exchange(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4), array(1, 2,\
    \ 3, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4), array(1, 5, 3, 4)) !== \"NO\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4), array(2, 1, 4, 3)) !== \"YES\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 7, 3), array(2,\
    \ 6, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 7, 3), array(2, 6, 3)) !== \"NO\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(3, 2, 6, 1, 8, 9), array(3, 5, 5, 1, 1, 1)) !== \"\
    NO\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ 200), array(200, 200)) !== \"YES\") { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpbrhm6dtq.php:45\n\
    Stack trace:\n#0 /tmp/tmpbrhm6dtq.php(51): test()\n#1 {main}\n  thrown in /tmp/tmpbrhm6dtq.php\
    \ on line 45\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// In this problem, you will implement a function that takes two\
    \ lists of numbers,\n// and determines whether it is possible to perform an exchange\
    \ of elements\n// between them to make lst1 a list of only even numbers.\n// There\
    \ is no limit on the number of exchanged elements between lst1 and lst2.\n// If\
    \ it is possible to exchange elements between the lst1 and lst2 to make\n// all\
    \ the elements of lst1 to be even, return \"YES\".\n// Otherwise, return \"NO\"\
    .\n// For example:\n// exchange([1, 2, 3, 4], [1, 2, 3, 4]) => \"YES\"\n// exchange([1,\
    \ 2, 3, 4], [1, 5, 3, 4]) => \"NO\"\n// It is assumed that the input lists will\
    \ be non-empty.\nfunction exchange($lst1, $lst2) {\n    $odds = [];\n    $evens\
    \ = [];\n    foreach ($lst1 as $num) {\n        if ($num % 2 === 0) {\n      \
    \      $evens[] = $num;\n        } else {\n            $odds[] = $num;\n     \
    \   }\n    }\n    foreach ($lst2 as $num) {\n        if ($num % 2 === 0) {\n \
    \           $evens[] = $num;\n        } else {\n            $odds[] = $num;\n\
    \        }\n    }\n    return count($evens) > count($odds) ? \"YES\" : \"NO\"\
    ;\n}\n\nfunction candidate(...$args) {\n    return exchange(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(1, 2, 3, 4), array(1, 2, 3, 4))\
    \ !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4), array(1, 5, 3, 4)) !== \"NO\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4), array(2, 1, 4, 3)) !== \"YES\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 7, 3), array(2,\
    \ 6, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 7, 3), array(2, 6, 3)) !== \"NO\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(3, 2, 6, 1, 8, 9), array(3, 5, 5, 1, 1, 1)) !== \"\
    NO\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ 200), array(200, 200)) !== \"YES\") { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp9brxlm5g.php:38\n\
    Stack trace:\n#0 /tmp/tmp9brxlm5g.php(47): test()\n#1 {main}\n  thrown in /tmp/tmp9brxlm5g.php\
    \ on line 38\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// In this problem, you will implement a function that takes two\
    \ lists of numbers,\n// and determines whether it is possible to perform an exchange\
    \ of elements\n// between them to make lst1 a list of only even numbers.\n// There\
    \ is no limit on the number of exchanged elements between lst1 and lst2.\n// If\
    \ it is possible to exchange elements between the lst1 and lst2 to make\n// all\
    \ the elements of lst1 to be even, return \"YES\".\n// Otherwise, return \"NO\"\
    .\n// For example:\n// exchange([1, 2, 3, 4], [1, 2, 3, 4]) => \"YES\"\n// exchange([1,\
    \ 2, 3, 4], [1, 5, 3, 4]) => \"NO\"\n// It is assumed that the input lists will\
    \ be non-empty.\nfunction exchange($lst1, $lst2) {\n  $odds = 0;\n  $evens = 0;\n\
    \  for ($i = 0; $i < count($lst1); $i++) {\n    if ($lst1[$i] % 2 == 0) {\n  \
    \    $evens++;\n    } else {\n      $odds++;\n    }\n  }\n  for ($i = 0; $i <\
    \ count($lst2); $i++) {\n    if ($lst2[$i] % 2 == 0) {\n      $evens++;\n    }\
    \ else {\n      $odds++;\n    }\n  }\n  if ($evens % 2 == 0) {\n    return \"\
    YES\";\n  } else {\n    return \"NO\";\n  }\n}\n\necho exchange([1, 2, 3, 4],\
    \ [1, 2, 3, 4]) . \"\\n\";\necho exchange([1, 2, 3, 4], [1, 5, 3, 4]) . \"\\n\"\
    ;\nfunction candidate(...$args) {\n    return exchange(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 2, 3, 4), array(1, 2, 3, 4)) !==\
    \ \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4), array(1, 5, 3, 4)) !== \"NO\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4), array(2, 1, 4, 3)) !== \"YES\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 7, 3), array(2,\
    \ 6, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 7, 3), array(2, 6, 3)) !== \"NO\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(3, 2, 6, 1, 8, 9), array(3, 5, 5, 1, 1, 1)) !== \"\
    NO\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ 200), array(200, 200)) !== \"YES\") { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: "YES\nNO\n"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp26cj40g2.php:47\n\
    Stack trace:\n#0 /tmp/tmp26cj40g2.php(53): test()\n#1 {main}\n  thrown in /tmp/tmp26cj40g2.php\
    \ on line 47\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// In this problem, you will implement a function that takes two\
    \ lists of numbers,\n// and determines whether it is possible to perform an exchange\
    \ of elements\n// between them to make lst1 a list of only even numbers.\n// There\
    \ is no limit on the number of exchanged elements between lst1 and lst2.\n// If\
    \ it is possible to exchange elements between the lst1 and lst2 to make\n// all\
    \ the elements of lst1 to be even, return \"YES\".\n// Otherwise, return \"NO\"\
    .\n// For example:\n// exchange([1, 2, 3, 4], [1, 2, 3, 4]) => \"YES\"\n// exchange([1,\
    \ 2, 3, 4], [1, 5, 3, 4]) => \"NO\"\n// It is assumed that the input lists will\
    \ be non-empty.\nfunction exchange($lst1, $lst2) {\n  $lst1 = array_filter($lst1,\
    \ function($n) {\n    return $n % 2 == 0;\n  });\n  $lst2 = array_filter($lst2,\
    \ function($n) {\n    return $n % 2 == 1;\n  });\n  return count($lst1) == count($lst2)\
    \ ? \"YES\" : \"NO\";\n}\n\nfunction candidate(...$args) {\n    return exchange(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4), array(1, 2,\
    \ 3, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4), array(1, 5, 3, 4)) !== \"NO\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4), array(2, 1, 4, 3)) !== \"YES\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 7, 3), array(2,\
    \ 6, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 7, 3), array(2, 6, 3)) !== \"NO\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(3, 2, 6, 1, 8, 9), array(3, 5, 5, 1, 1, 1)) !== \"\
    NO\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ 200), array(200, 200)) !== \"YES\") { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpnzlodn6w.php:34\n\
    Stack trace:\n#0 /tmp/tmpnzlodn6w.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpnzlodn6w.php\
    \ on line 34\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// In this problem, you will implement a function that takes two\
    \ lists of numbers,\n// and determines whether it is possible to perform an exchange\
    \ of elements\n// between them to make lst1 a list of only even numbers.\n// There\
    \ is no limit on the number of exchanged elements between lst1 and lst2.\n// If\
    \ it is possible to exchange elements between the lst1 and lst2 to make\n// all\
    \ the elements of lst1 to be even, return \"YES\".\n// Otherwise, return \"NO\"\
    .\n// For example:\n// exchange([1, 2, 3, 4], [1, 2, 3, 4]) => \"YES\"\n// exchange([1,\
    \ 2, 3, 4], [1, 5, 3, 4]) => \"NO\"\n// It is assumed that the input lists will\
    \ be non-empty.\nfunction exchange($lst1, $lst2) {\n  $lst1_odd = array_filter($lst1,\
    \ function($num) {\n    return $num % 2 == 1;\n  });\n  $lst2_even = array_filter($lst2,\
    \ function($num) {\n    return $num % 2 == 0;\n  });\n  return count($lst1_odd)\
    \ == count($lst2_even) ? \"YES\" : \"NO\";\n}\n\nfunction candidate(...$args)\
    \ {\n    return exchange(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3, 4), array(1, 2, 3, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4), array(1, 5, 3, 4)) !== \"NO\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4), array(2,\
    \ 1, 4, 3)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 7, 3), array(2, 6, 4)) !== \"YES\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(5, 7, 3), array(2, 6, 3)) !== \"NO\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 6, 1, 8, 9), array(3,\
    \ 5, 5, 1, 1, 1)) !== \"NO\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(100, 200), array(200, 200)) !== \"YES\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpf629wnqb.php:34\n\
    Stack trace:\n#0 /tmp/tmpf629wnqb.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpf629wnqb.php\
    \ on line 34\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// In this problem, you will implement a function that takes two\
    \ lists of numbers,\n// and determines whether it is possible to perform an exchange\
    \ of elements\n// between them to make lst1 a list of only even numbers.\n// There\
    \ is no limit on the number of exchanged elements between lst1 and lst2.\n// If\
    \ it is possible to exchange elements between the lst1 and lst2 to make\n// all\
    \ the elements of lst1 to be even, return \"YES\".\n// Otherwise, return \"NO\"\
    .\n// For example:\n// exchange([1, 2, 3, 4], [1, 2, 3, 4]) => \"YES\"\n// exchange([1,\
    \ 2, 3, 4], [1, 5, 3, 4]) => \"NO\"\n// It is assumed that the input lists will\
    \ be non-empty.\nfunction exchange($lst1, $lst2) {\n    $odds = array_filter($lst1,\
    \ function($n) { return $n % 2 == 1; });\n    $evens = array_filter($lst2, function($n)\
    \ { return $n % 2 == 0; });\n    return count($odds) == count($evens) ? \"YES\"\
    \ : \"NO\";\n}\n\nfunction candidate(...$args) {\n    return exchange(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4), array(1, 2,\
    \ 3, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4), array(1, 5, 3, 4)) !== \"NO\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4), array(2, 1, 4, 3)) !== \"YES\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 7, 3), array(2,\
    \ 6, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 7, 3), array(2, 6, 3)) !== \"NO\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(3, 2, 6, 1, 8, 9), array(3, 5, 5, 1, 1, 1)) !== \"\
    NO\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ 200), array(200, 200)) !== \"YES\") { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpdxuzuuei.php:30\n\
    Stack trace:\n#0 /tmp/tmpdxuzuuei.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpdxuzuuei.php\
    \ on line 30\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// In this problem, you will implement a function that takes two\
    \ lists of numbers,\n// and determines whether it is possible to perform an exchange\
    \ of elements\n// between them to make lst1 a list of only even numbers.\n// There\
    \ is no limit on the number of exchanged elements between lst1 and lst2.\n// If\
    \ it is possible to exchange elements between the lst1 and lst2 to make\n// all\
    \ the elements of lst1 to be even, return \"YES\".\n// Otherwise, return \"NO\"\
    .\n// For example:\n// exchange([1, 2, 3, 4], [1, 2, 3, 4]) => \"YES\"\n// exchange([1,\
    \ 2, 3, 4], [1, 5, 3, 4]) => \"NO\"\n// It is assumed that the input lists will\
    \ be non-empty.\nfunction exchange($lst1, $lst2) {\n    $odds = 0;\n    $evens\
    \ = 0;\n    foreach ($lst1 as $num) {\n        if ($num % 2 == 0) {\n        \
    \    $evens++;\n        } else {\n            $odds++;\n        }\n    }\n   \
    \ foreach ($lst2 as $num) {\n        if ($num % 2 == 0) {\n            $evens++;\n\
    \        } else {\n            $odds++;\n        }\n    }\n    if ($evens % 2\
    \ == 0) {\n        return \"YES\";\n    } else {\n        return \"NO\";\n   \
    \ }\n}\necho exchange([1, 2, 3, 4], [1, 2, 3, 4]) . \"\\n\";\necho exchange([1,\
    \ 2, 3, 4], [1, 5, 3, 4]) . \"\\n\";\nfunction candidate(...$args) {\n    return\
    \ exchange(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3, 4), array(1, 2, 3, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4), array(1, 5, 3, 4)) !== \"NO\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4), array(2,\
    \ 1, 4, 3)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 7, 3), array(2, 6, 4)) !== \"YES\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(5, 7, 3), array(2, 6, 3)) !== \"NO\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 6, 1, 8, 9), array(3,\
    \ 5, 5, 1, 1, 1)) !== \"NO\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(100, 200), array(200, 200)) !== \"YES\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "YES\nNO\n"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp1uu7dqvk.php:46\n\
    Stack trace:\n#0 /tmp/tmp1uu7dqvk.php(52): test()\n#1 {main}\n  thrown in /tmp/tmp1uu7dqvk.php\
    \ on line 46\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// In this problem, you will implement a function that takes two\
    \ lists of numbers,\n// and determines whether it is possible to perform an exchange\
    \ of elements\n// between them to make lst1 a list of only even numbers.\n// There\
    \ is no limit on the number of exchanged elements between lst1 and lst2.\n// If\
    \ it is possible to exchange elements between the lst1 and lst2 to make\n// all\
    \ the elements of lst1 to be even, return \"YES\".\n// Otherwise, return \"NO\"\
    .\n// For example:\n// exchange([1, 2, 3, 4], [1, 2, 3, 4]) => \"YES\"\n// exchange([1,\
    \ 2, 3, 4], [1, 5, 3, 4]) => \"NO\"\n// It is assumed that the input lists will\
    \ be non-empty.\nfunction exchange($lst1, $lst2) {\n    $evens = array_filter($lst1,\
    \ function($n) { return $n % 2 == 0; });\n    $odds = array_filter($lst2, function($n)\
    \ { return $n % 2 != 0; });\n    return count($evens) + count($odds) >= count($lst1)\
    \ ? \"YES\" : \"NO\";\n}\n\nfunction candidate(...$args) {\n    return exchange(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4), array(1, 2,\
    \ 3, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4), array(1, 5, 3, 4)) !== \"NO\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4), array(2, 1, 4, 3)) !== \"YES\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 7, 3), array(2,\
    \ 6, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 7, 3), array(2, 6, 3)) !== \"NO\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(3, 2, 6, 1, 8, 9), array(3, 5, 5, 1, 1, 1)) !== \"\
    NO\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ 200), array(200, 200)) !== \"YES\") { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpk5b4jzt9.php:25\n\
    Stack trace:\n#0 /tmp/tmpk5b4jzt9.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpk5b4jzt9.php\
    \ on line 25\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// In this problem, you will implement a function that takes two\
    \ lists of numbers,\n// and determines whether it is possible to perform an exchange\
    \ of elements\n// between them to make lst1 a list of only even numbers.\n// There\
    \ is no limit on the number of exchanged elements between lst1 and lst2.\n// If\
    \ it is possible to exchange elements between the lst1 and lst2 to make\n// all\
    \ the elements of lst1 to be even, return \"YES\".\n// Otherwise, return \"NO\"\
    .\n// For example:\n// exchange([1, 2, 3, 4], [1, 2, 3, 4]) => \"YES\"\n// exchange([1,\
    \ 2, 3, 4], [1, 5, 3, 4]) => \"NO\"\n// It is assumed that the input lists will\
    \ be non-empty.\nfunction exchange($lst1, $lst2) {\n  $odds = array_filter($lst1,\
    \ function($n) { return $n % 2; });\n  $evens = array_filter($lst2, function($n)\
    \ { return !($n % 2); });\n  return count($odds) == count($evens) ? \"YES\" :\
    \ \"NO\";\n}\n\necho exchange([1, 2, 3, 4], [1, 2, 3, 4]) . \"\\n\";\necho exchange([1,\
    \ 2, 3, 4], [1, 5, 3, 4]) . \"\\n\";\necho exchange([1, 2, 3, 4], [1, 5, 3, 4,\
    \ 6]) . \"\\n\";\necho exchange([1, 2, 3, 4], [1, 5, 3, 4, 6, 8]) . \"\\n\";\n\
    echo exchange([1, 2, 3, 4], [1, 5, 3, 4, 6, 8, 10]) . \"\\n\";\necho exchange([1,\
    \ 2, 3, 4], [1, 5, 3, 4, 6, 8, 10, 12]) . \"\\n\";\necho exchange([1, 2, 3, 4],\
    \ [1, 5, 3, 4, 6, 8, 10, 12, 14]) . \"\\n\";\necho exchange([1, 2, 3, 4], [1,\
    \ 5, 3, 4, 6, 8, 10, 12, 14, 16]) . \"\\n\";\necho exchange([1, 2, 3, 4], [1,\
    \ 5, 3, 4, 6, 8, 10, 12, 14, 16, 18]) . \"\\n\";\necho exchange([1, 2, 3, 4],\
    \ [1, 5, 3, 4, 6, 8, 10, 12, 14, 16, 18, 20]) . \"\\n\";\necho exchange([1, 2,\
    \ 3, 4], [1, 5, 3, 4, 6, 8, 10, 12, 14, 16, 18, 20, 22]) . \"\\n\";\necho exchange([1,\
    \ 2, 3, 4], [1, 5, 3, 4, 6, 8, 10, 12, 14, 16, 18, 20, 22, 24]) . \"\\n\";\necho\
    \ exchange([1, 2, 3, 4], [1, 5, 3, 4, 6, 8\nfunction candidate(...$args) {\n \
    \   return exchange(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3, 4), array(1, 2, 3, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4), array(1, 5, 3, 4)) !== \"NO\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4), array(2,\
    \ 1, 4, 3)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 7, 3), array(2, 6, 4)) !== \"YES\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(5, 7, 3), array(2, 6, 3)) !== \"NO\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 6, 1, 8, 9), array(3,\
    \ 5, 5, 1, 1, 1)) !== \"NO\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(100, 200), array(200, 200)) !== \"YES\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Parse error:  syntax error, unexpected token \"function\", expecting\
    \ \"]\" in /tmp/tmp2sdpl098.php on line 32\n"
  exit_code: 255
  status: SyntaxError
- program: "<?php\n// In this problem, you will implement a function that takes two\
    \ lists of numbers,\n// and determines whether it is possible to perform an exchange\
    \ of elements\n// between them to make lst1 a list of only even numbers.\n// There\
    \ is no limit on the number of exchanged elements between lst1 and lst2.\n// If\
    \ it is possible to exchange elements between the lst1 and lst2 to make\n// all\
    \ the elements of lst1 to be even, return \"YES\".\n// Otherwise, return \"NO\"\
    .\n// For example:\n// exchange([1, 2, 3, 4], [1, 2, 3, 4]) => \"YES\"\n// exchange([1,\
    \ 2, 3, 4], [1, 5, 3, 4]) => \"NO\"\n// It is assumed that the input lists will\
    \ be non-empty.\nfunction exchange($lst1, $lst2) {\n  $odds1 = array_filter($lst1,\
    \ function($n) { return $n % 2; });\n  $odds2 = array_filter($lst2, function($n)\
    \ { return $n % 2; });\n  return count($odds1) == count($odds2) ? \"YES\" : \"\
    NO\";\n}\n\nfunction candidate(...$args) {\n    return exchange(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4), array(1, 2, 3,\
    \ 4)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4), array(1, 5, 3, 4)) !== \"NO\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4), array(2, 1, 4, 3)) !== \"YES\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 7, 3), array(2,\
    \ 6, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 7, 3), array(2, 6, 3)) !== \"NO\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(3, 2, 6, 1, 8, 9), array(3, 5, 5, 1, 1, 1)) !== \"\
    NO\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ 200), array(200, 200)) !== \"YES\") { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpmzfnpupy.php:27\n\
    Stack trace:\n#0 /tmp/tmpmzfnpupy.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpmzfnpupy.php\
    \ on line 27\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// In this problem, you will implement a function that takes two\
    \ lists of numbers,\n// and determines whether it is possible to perform an exchange\
    \ of elements\n// between them to make lst1 a list of only even numbers.\n// There\
    \ is no limit on the number of exchanged elements between lst1 and lst2.\n// If\
    \ it is possible to exchange elements between the lst1 and lst2 to make\n// all\
    \ the elements of lst1 to be even, return \"YES\".\n// Otherwise, return \"NO\"\
    .\n// For example:\n// exchange([1, 2, 3, 4], [1, 2, 3, 4]) => \"YES\"\n// exchange([1,\
    \ 2, 3, 4], [1, 5, 3, 4]) => \"NO\"\n// It is assumed that the input lists will\
    \ be non-empty.\nfunction exchange($lst1, $lst2) {\n    $odds = [];\n    $evens\
    \ = [];\n    foreach ($lst1 as $num) {\n        if ($num % 2 === 0) {\n      \
    \      $evens[] = $num;\n        } else {\n            $odds[] = $num;\n     \
    \   }\n    }\n    foreach ($lst2 as $num) {\n        if ($num % 2 === 0) {\n \
    \           $evens[] = $num;\n        } else {\n            $odds[] = $num;\n\
    \        }\n    }\n    return count($evens) >= count($odds) ? \"YES\" : \"NO\"\
    ;\n}\n\nfunction candidate(...$args) {\n    return exchange(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(1, 2, 3, 4), array(1, 2, 3, 4))\
    \ !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4), array(1, 5, 3, 4)) !== \"NO\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4), array(2, 1, 4, 3)) !== \"YES\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 7, 3), array(2,\
    \ 6, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 7, 3), array(2, 6, 3)) !== \"NO\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(3, 2, 6, 1, 8, 9), array(3, 5, 5, 1, 1, 1)) !== \"\
    NO\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ 200), array(200, 200)) !== \"YES\") { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// In this problem, you will implement a function that takes two\
    \ lists of numbers,\n// and determines whether it is possible to perform an exchange\
    \ of elements\n// between them to make lst1 a list of only even numbers.\n// There\
    \ is no limit on the number of exchanged elements between lst1 and lst2.\n// If\
    \ it is possible to exchange elements between the lst1 and lst2 to make\n// all\
    \ the elements of lst1 to be even, return \"YES\".\n// Otherwise, return \"NO\"\
    .\n// For example:\n// exchange([1, 2, 3, 4], [1, 2, 3, 4]) => \"YES\"\n// exchange([1,\
    \ 2, 3, 4], [1, 5, 3, 4]) => \"NO\"\n// It is assumed that the input lists will\
    \ be non-empty.\nfunction exchange($lst1, $lst2) {\n    $lst1 = array_filter($lst1,\
    \ function($x) { return $x % 2 == 0; });\n    $lst2 = array_filter($lst2, function($x)\
    \ { return $x % 2 == 1; });\n    return count($lst1) == count($lst2) ? \"YES\"\
    \ : \"NO\";\n}\n\nfunction candidate(...$args) {\n    return exchange(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4), array(1, 2,\
    \ 3, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4), array(1, 5, 3, 4)) !== \"NO\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4), array(2, 1, 4, 3)) !== \"YES\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 7, 3), array(2,\
    \ 6, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 7, 3), array(2, 6, 3)) !== \"NO\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(3, 2, 6, 1, 8, 9), array(3, 5, 5, 1, 1, 1)) !== \"\
    NO\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ 200), array(200, 200)) !== \"YES\") { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpgwi_d69w.php:30\n\
    Stack trace:\n#0 /tmp/tmpgwi_d69w.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpgwi_d69w.php\
    \ on line 30\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// In this problem, you will implement a function that takes two\
    \ lists of numbers,\n// and determines whether it is possible to perform an exchange\
    \ of elements\n// between them to make lst1 a list of only even numbers.\n// There\
    \ is no limit on the number of exchanged elements between lst1 and lst2.\n// If\
    \ it is possible to exchange elements between the lst1 and lst2 to make\n// all\
    \ the elements of lst1 to be even, return \"YES\".\n// Otherwise, return \"NO\"\
    .\n// For example:\n// exchange([1, 2, 3, 4], [1, 2, 3, 4]) => \"YES\"\n// exchange([1,\
    \ 2, 3, 4], [1, 5, 3, 4]) => \"NO\"\n// It is assumed that the input lists will\
    \ be non-empty.\nfunction exchange($lst1, $lst2) {\n    $odds = array_filter($lst1,\
    \ function($num) {\n        return $num % 2 == 1;\n    });\n    $evens = array_filter($lst2,\
    \ function($num) {\n        return $num % 2 == 0;\n    });\n    return count($odds)\
    \ == count($evens) ? \"YES\" : \"NO\";\n}\n\nfunction candidate(...$args) {\n\
    \    return exchange(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3, 4), array(1, 2, 3, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4), array(1, 5, 3, 4)) !== \"NO\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4), array(2,\
    \ 1, 4, 3)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 7, 3), array(2, 6, 4)) !== \"YES\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(5, 7, 3), array(2, 6, 3)) !== \"NO\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 6, 1, 8, 9), array(3,\
    \ 5, 5, 1, 1, 1)) !== \"NO\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(100, 200), array(200, 200)) !== \"YES\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp0qddpr33.php:34\n\
    Stack trace:\n#0 /tmp/tmp0qddpr33.php(37): test()\n#1 {main}\n  thrown in /tmp/tmp0qddpr33.php\
    \ on line 34\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// In this problem, you will implement a function that takes two\
    \ lists of numbers,\n// and determines whether it is possible to perform an exchange\
    \ of elements\n// between them to make lst1 a list of only even numbers.\n// There\
    \ is no limit on the number of exchanged elements between lst1 and lst2.\n// If\
    \ it is possible to exchange elements between the lst1 and lst2 to make\n// all\
    \ the elements of lst1 to be even, return \"YES\".\n// Otherwise, return \"NO\"\
    .\n// For example:\n// exchange([1, 2, 3, 4], [1, 2, 3, 4]) => \"YES\"\n// exchange([1,\
    \ 2, 3, 4], [1, 5, 3, 4]) => \"NO\"\n// It is assumed that the input lists will\
    \ be non-empty.\nfunction exchange($lst1, $lst2) {\n    $odds = 0;\n    $evens\
    \ = 0;\n    foreach ($lst1 as $num) {\n        if ($num % 2 == 0) {\n        \
    \    $evens++;\n        } else {\n            $odds++;\n        }\n    }\n   \
    \ foreach ($lst2 as $num) {\n        if ($num % 2 == 0) {\n            $evens++;\n\
    \        } else {\n            $odds++;\n        }\n    }\n    if ($evens > $odds)\
    \ {\n        return \"YES\";\n    } else {\n        return \"NO\";\n    }\n}\n\
    \nfunction candidate(...$args) {\n    return exchange(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 2, 3, 4), array(1, 2, 3, 4)) !==\
    \ \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4), array(1, 5, 3, 4)) !== \"NO\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4), array(2, 1, 4, 3)) !== \"YES\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 7, 3), array(2,\
    \ 6, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 7, 3), array(2, 6, 3)) !== \"NO\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(3, 2, 6, 1, 8, 9), array(3, 5, 5, 1, 1, 1)) !== \"\
    NO\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ 200), array(200, 200)) !== \"YES\") { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpgqmum4hl.php:42\n\
    Stack trace:\n#0 /tmp/tmpgqmum4hl.php(51): test()\n#1 {main}\n  thrown in /tmp/tmpgqmum4hl.php\
    \ on line 42\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// In this problem, you will implement a function that takes two\
    \ lists of numbers,\n// and determines whether it is possible to perform an exchange\
    \ of elements\n// between them to make lst1 a list of only even numbers.\n// There\
    \ is no limit on the number of exchanged elements between lst1 and lst2.\n// If\
    \ it is possible to exchange elements between the lst1 and lst2 to make\n// all\
    \ the elements of lst1 to be even, return \"YES\".\n// Otherwise, return \"NO\"\
    .\n// For example:\n// exchange([1, 2, 3, 4], [1, 2, 3, 4]) => \"YES\"\n// exchange([1,\
    \ 2, 3, 4], [1, 5, 3, 4]) => \"NO\"\n// It is assumed that the input lists will\
    \ be non-empty.\nfunction exchange($lst1, $lst2) {\n    $odds = 0;\n    $evens\
    \ = 0;\n    foreach ($lst1 as $num) {\n        if ($num % 2 == 0) {\n        \
    \    $evens++;\n        } else {\n            $odds++;\n        }\n    }\n   \
    \ foreach ($lst2 as $num) {\n        if ($num % 2 == 0) {\n            $evens++;\n\
    \        } else {\n            $odds++;\n        }\n    }\n    if ($evens % 2\
    \ == 0) {\n        return \"YES\";\n    } else {\n        return \"NO\";\n   \
    \ }\n}\nfunction candidate(...$args) {\n    return exchange(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(1, 2, 3, 4), array(1, 2, 3, 4))\
    \ !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4), array(1, 5, 3, 4)) !== \"NO\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4), array(2, 1, 4, 3)) !== \"YES\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 7, 3), array(2,\
    \ 6, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 7, 3), array(2, 6, 3)) !== \"NO\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(3, 2, 6, 1, 8, 9), array(3, 5, 5, 1, 1, 1)) !== \"\
    NO\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ 200), array(200, 200)) !== \"YES\") { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmphj55nczm.php:44\n\
    Stack trace:\n#0 /tmp/tmphj55nczm.php(50): test()\n#1 {main}\n  thrown in /tmp/tmphj55nczm.php\
    \ on line 44\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// In this problem, you will implement a function that takes two\
    \ lists of numbers,\n// and determines whether it is possible to perform an exchange\
    \ of elements\n// between them to make lst1 a list of only even numbers.\n// There\
    \ is no limit on the number of exchanged elements between lst1 and lst2.\n// If\
    \ it is possible to exchange elements between the lst1 and lst2 to make\n// all\
    \ the elements of lst1 to be even, return \"YES\".\n// Otherwise, return \"NO\"\
    .\n// For example:\n// exchange([1, 2, 3, 4], [1, 2, 3, 4]) => \"YES\"\n// exchange([1,\
    \ 2, 3, 4], [1, 5, 3, 4]) => \"NO\"\n// It is assumed that the input lists will\
    \ be non-empty.\nfunction exchange($lst1, $lst2) {\n  $lst1 = array_filter($lst1,\
    \ function($x) { return $x % 2 == 0; });\n  $lst2 = array_filter($lst2, function($x)\
    \ { return $x % 2 == 1; });\n  return count($lst1) == count($lst2) ? \"YES\" :\
    \ \"NO\";\n}\n\nfunction candidate(...$args) {\n    return exchange(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4), array(1, 2,\
    \ 3, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4), array(1, 5, 3, 4)) !== \"NO\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4), array(2, 1, 4, 3)) !== \"YES\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 7, 3), array(2,\
    \ 6, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 7, 3), array(2, 6, 3)) !== \"NO\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(3, 2, 6, 1, 8, 9), array(3, 5, 5, 1, 1, 1)) !== \"\
    NO\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ 200), array(200, 200)) !== \"YES\") { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpnpo2xg69.php:30\n\
    Stack trace:\n#0 /tmp/tmpnpo2xg69.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpnpo2xg69.php\
    \ on line 30\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// In this problem, you will implement a function that takes two\
    \ lists of numbers,\n// and determines whether it is possible to perform an exchange\
    \ of elements\n// between them to make lst1 a list of only even numbers.\n// There\
    \ is no limit on the number of exchanged elements between lst1 and lst2.\n// If\
    \ it is possible to exchange elements between the lst1 and lst2 to make\n// all\
    \ the elements of lst1 to be even, return \"YES\".\n// Otherwise, return \"NO\"\
    .\n// For example:\n// exchange([1, 2, 3, 4], [1, 2, 3, 4]) => \"YES\"\n// exchange([1,\
    \ 2, 3, 4], [1, 5, 3, 4]) => \"NO\"\n// It is assumed that the input lists will\
    \ be non-empty.\nfunction exchange($lst1, $lst2) {\n    $evens = array_filter($lst1,\
    \ function($x) { return $x % 2 == 0; });\n    $odds = array_filter($lst2, function($x)\
    \ { return $x % 2 == 1; });\n    return count($evens) == count($odds) ? \"YES\"\
    \ : \"NO\";\n}\n\nfunction candidate(...$args) {\n    return exchange(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4), array(1, 2,\
    \ 3, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4), array(1, 5, 3, 4)) !== \"NO\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4), array(2, 1, 4, 3)) !== \"YES\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 7, 3), array(2,\
    \ 6, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 7, 3), array(2, 6, 3)) !== \"NO\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(3, 2, 6, 1, 8, 9), array(3, 5, 5, 1, 1, 1)) !== \"\
    NO\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ 200), array(200, 200)) !== \"YES\") { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpaqrmbfft.php:30\n\
    Stack trace:\n#0 /tmp/tmpaqrmbfft.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpaqrmbfft.php\
    \ on line 30\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// In this problem, you will implement a function that takes two\
    \ lists of numbers,\n// and determines whether it is possible to perform an exchange\
    \ of elements\n// between them to make lst1 a list of only even numbers.\n// There\
    \ is no limit on the number of exchanged elements between lst1 and lst2.\n// If\
    \ it is possible to exchange elements between the lst1 and lst2 to make\n// all\
    \ the elements of lst1 to be even, return \"YES\".\n// Otherwise, return \"NO\"\
    .\n// For example:\n// exchange([1, 2, 3, 4], [1, 2, 3, 4]) => \"YES\"\n// exchange([1,\
    \ 2, 3, 4], [1, 5, 3, 4]) => \"NO\"\n// It is assumed that the input lists will\
    \ be non-empty.\nfunction exchange($lst1, $lst2) {\n    $odds = [];\n    $evens\
    \ = [];\n    foreach ($lst1 as $num) {\n        if ($num % 2 === 0) {\n      \
    \      $evens[] = $num;\n        } else {\n            $odds[] = $num;\n     \
    \   }\n    }\n    foreach ($lst2 as $num) {\n        if ($num % 2 === 0) {\n \
    \           $evens[] = $num;\n        } else {\n            $odds[] = $num;\n\
    \        }\n    }\n    if (count($evens) > count($odds)) {\n        return \"\
    YES\";\n    } else {\n        return \"NO\";\n    }\n}\n\nfunction candidate(...$args)\
    \ {\n    return exchange(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3, 4), array(1, 2, 3, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4), array(1, 5, 3, 4)) !== \"NO\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4), array(2,\
    \ 1, 4, 3)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 7, 3), array(2, 6, 4)) !== \"YES\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(5, 7, 3), array(2, 6, 3)) !== \"NO\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 6, 1, 8, 9), array(3,\
    \ 5, 5, 1, 1, 1)) !== \"NO\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(100, 200), array(200, 200)) !== \"YES\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp1sge6iew.php:42\n\
    Stack trace:\n#0 /tmp/tmp1sge6iew.php(51): test()\n#1 {main}\n  thrown in /tmp/tmp1sge6iew.php\
    \ on line 42\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// In this problem, you will implement a function that takes two\
    \ lists of numbers,\n// and determines whether it is possible to perform an exchange\
    \ of elements\n// between them to make lst1 a list of only even numbers.\n// There\
    \ is no limit on the number of exchanged elements between lst1 and lst2.\n// If\
    \ it is possible to exchange elements between the lst1 and lst2 to make\n// all\
    \ the elements of lst1 to be even, return \"YES\".\n// Otherwise, return \"NO\"\
    .\n// For example:\n// exchange([1, 2, 3, 4], [1, 2, 3, 4]) => \"YES\"\n// exchange([1,\
    \ 2, 3, 4], [1, 5, 3, 4]) => \"NO\"\n// It is assumed that the input lists will\
    \ be non-empty.\nfunction exchange($lst1, $lst2) {\n  $lst1 = array_filter($lst1,\
    \ function($num) {\n    return $num % 2 === 0;\n  });\n  $lst2 = array_filter($lst2,\
    \ function($num) {\n    return $num % 2 === 1;\n  });\n  return count($lst1) ===\
    \ count($lst2) ? \"YES\" : \"NO\";\n}\n\nfunction candidate(...$args) {\n    return\
    \ exchange(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3, 4), array(1, 2, 3, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4), array(1, 5, 3, 4)) !== \"NO\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4), array(2,\
    \ 1, 4, 3)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 7, 3), array(2, 6, 4)) !== \"YES\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(5, 7, 3), array(2, 6, 3)) !== \"NO\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 6, 1, 8, 9), array(3,\
    \ 5, 5, 1, 1, 1)) !== \"NO\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(100, 200), array(200, 200)) !== \"YES\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpplc7pwf4.php:34\n\
    Stack trace:\n#0 /tmp/tmpplc7pwf4.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpplc7pwf4.php\
    \ on line 34\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// In this problem, you will implement a function that takes two\
    \ lists of numbers,\n// and determines whether it is possible to perform an exchange\
    \ of elements\n// between them to make lst1 a list of only even numbers.\n// There\
    \ is no limit on the number of exchanged elements between lst1 and lst2.\n// If\
    \ it is possible to exchange elements between the lst1 and lst2 to make\n// all\
    \ the elements of lst1 to be even, return \"YES\".\n// Otherwise, return \"NO\"\
    .\n// For example:\n// exchange([1, 2, 3, 4], [1, 2, 3, 4]) => \"YES\"\n// exchange([1,\
    \ 2, 3, 4], [1, 5, 3, 4]) => \"NO\"\n// It is assumed that the input lists will\
    \ be non-empty.\nfunction exchange($lst1, $lst2) {\n    $even = 0;\n    $odd =\
    \ 0;\n    for ($i = 0; $i < count($lst1); $i++) {\n        if ($lst1[$i] % 2 ==\
    \ 0) {\n            $even++;\n        } else {\n            $odd++;\n        }\n\
    \    }\n    for ($i = 0; $i < count($lst2); $i++) {\n        if ($lst2[$i] % 2\
    \ == 0) {\n            $even++;\n        } else {\n            $odd++;\n     \
    \   }\n    }\n    if ($even % 2 == 0) {\n        return \"YES\";\n    } else {\n\
    \        return \"NO\";\n    }\n}\necho exchange([1, 2, 3, 4], [1, 2, 3, 4]) .\
    \ \"\\n\";\necho exchange([1, 2, 3, 4], [1, 5, 3, 4]) . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return exchange(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3, 4), array(1, 2, 3, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4), array(1, 5, 3, 4)) !== \"NO\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4), array(2,\
    \ 1, 4, 3)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 7, 3), array(2, 6, 4)) !== \"YES\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(5, 7, 3), array(2, 6, 3)) !== \"NO\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 6, 1, 8, 9), array(3,\
    \ 5, 5, 1, 1, 1)) !== \"NO\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(100, 200), array(200, 200)) !== \"YES\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "YES\nNO\n"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpqfpk1vjd.php:46\n\
    Stack trace:\n#0 /tmp/tmpqfpk1vjd.php(52): test()\n#1 {main}\n  thrown in /tmp/tmpqfpk1vjd.php\
    \ on line 46\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// In this problem, you will implement a function that takes two\
    \ lists of numbers,\n// and determines whether it is possible to perform an exchange\
    \ of elements\n// between them to make lst1 a list of only even numbers.\n// There\
    \ is no limit on the number of exchanged elements between lst1 and lst2.\n// If\
    \ it is possible to exchange elements between the lst1 and lst2 to make\n// all\
    \ the elements of lst1 to be even, return \"YES\".\n// Otherwise, return \"NO\"\
    .\n// For example:\n// exchange([1, 2, 3, 4], [1, 2, 3, 4]) => \"YES\"\n// exchange([1,\
    \ 2, 3, 4], [1, 5, 3, 4]) => \"NO\"\n// It is assumed that the input lists will\
    \ be non-empty.\nfunction exchange($lst1, $lst2) {\n  $odds = 0;\n  $evens = 0;\n\
    \  foreach ($lst1 as $num) {\n    if ($num % 2 == 0) {\n      $evens++;\n    }\
    \ else {\n      $odds++;\n    }\n  }\n  foreach ($lst2 as $num) {\n    if ($num\
    \ % 2 == 0) {\n      $evens++;\n    } else {\n      $odds++;\n    }\n  }\n  if\
    \ ($evens % 2 == 0 && $odds % 2 == 0) {\n    return \"YES\";\n  } else {\n   \
    \ return \"NO\";\n  }\n}\n\necho exchange([1, 2, 3, 4], [1, 2, 3, 4]) . \"\\n\"\
    ;\necho exchange([1, 2, 3, 4], [1, 5, 3, 4]) . \"\\n\";\necho exchange([1, 2,\
    \ 3, 4], [1, 2, 3, 4, 5]) . \"\\n\";\necho exchange([1, 2, 3, 4], [1, 2, 3, 4,\
    \ 5, 6]) . \"\\n\";\necho exchange([1, 2, 3, 4], [1, 2, 3, 4, 5, 6, 7]) . \"\\\
    n\";\necho exchange([1, 2, 3, 4], [1, 2, 3, 4, 5, 6, 7, 8]) . \"\\n\";\necho exchange([1,\
    \ 2, 3, 4], [1, 2, 3, 4, 5, 6, 7, 8, 9]) . \"\\n\";\necho exchange([1, 2, 3, 4],\
    \ [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]) . \"\\n\";\necho exchange([1, 2, 3, 4], [1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]) . \"\\n\";\necho exchange([1, 2, 3, 4], [1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]) . \"\\n\";\necho exchange([1, 2, 3, 4],\
    \ [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12,\nfunction candidate(...$args) {\n  \
    \  return exchange(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3, 4), array(1, 2, 3, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4), array(1, 5, 3, 4)) !== \"NO\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4), array(2,\
    \ 1, 4, 3)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 7, 3), array(2, 6, 4)) !== \"YES\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(5, 7, 3), array(2, 6, 3)) !== \"NO\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 6, 1, 8, 9), array(3,\
    \ 5, 5, 1, 1, 1)) !== \"NO\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(100, 200), array(200, 200)) !== \"YES\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Parse error:  syntax error, unexpected identifier \"candidate\", expecting\
    \ \"(\" in /tmp/tmpgvw6ofh6.php on line 48\n"
  exit_code: 255
  status: SyntaxError
- program: "<?php\n// In this problem, you will implement a function that takes two\
    \ lists of numbers,\n// and determines whether it is possible to perform an exchange\
    \ of elements\n// between them to make lst1 a list of only even numbers.\n// There\
    \ is no limit on the number of exchanged elements between lst1 and lst2.\n// If\
    \ it is possible to exchange elements between the lst1 and lst2 to make\n// all\
    \ the elements of lst1 to be even, return \"YES\".\n// Otherwise, return \"NO\"\
    .\n// For example:\n// exchange([1, 2, 3, 4], [1, 2, 3, 4]) => \"YES\"\n// exchange([1,\
    \ 2, 3, 4], [1, 5, 3, 4]) => \"NO\"\n// It is assumed that the input lists will\
    \ be non-empty.\nfunction exchange($lst1, $lst2) {\n    $lst1 = array_filter($lst1,\
    \ function($n) { return $n % 2 == 0; });\n    $lst2 = array_filter($lst2, function($n)\
    \ { return $n % 2 != 0; });\n    return count($lst1) == count($lst2) ? \"YES\"\
    \ : \"NO\";\n}\n\nfunction candidate(...$args) {\n    return exchange(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4), array(1, 2,\
    \ 3, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4), array(1, 5, 3, 4)) !== \"NO\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4), array(2, 1, 4, 3)) !== \"YES\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 7, 3), array(2,\
    \ 6, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 7, 3), array(2, 6, 3)) !== \"NO\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(3, 2, 6, 1, 8, 9), array(3, 5, 5, 1, 1, 1)) !== \"\
    NO\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ 200), array(200, 200)) !== \"YES\") { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpm1tpy4ss.php:30\n\
    Stack trace:\n#0 /tmp/tmpm1tpy4ss.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpm1tpy4ss.php\
    \ on line 30\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// In this problem, you will implement a function that takes two\
    \ lists of numbers,\n// and determines whether it is possible to perform an exchange\
    \ of elements\n// between them to make lst1 a list of only even numbers.\n// There\
    \ is no limit on the number of exchanged elements between lst1 and lst2.\n// If\
    \ it is possible to exchange elements between the lst1 and lst2 to make\n// all\
    \ the elements of lst1 to be even, return \"YES\".\n// Otherwise, return \"NO\"\
    .\n// For example:\n// exchange([1, 2, 3, 4], [1, 2, 3, 4]) => \"YES\"\n// exchange([1,\
    \ 2, 3, 4], [1, 5, 3, 4]) => \"NO\"\n// It is assumed that the input lists will\
    \ be non-empty.\nfunction exchange($lst1, $lst2) {\n    $odd_count = 0;\n    $even_count\
    \ = 0;\n    foreach ($lst1 as $num) {\n        if ($num % 2 == 0) {\n        \
    \    $even_count++;\n        } else {\n            $odd_count++;\n        }\n\
    \    }\n    foreach ($lst2 as $num) {\n        if ($num % 2 == 0) {\n        \
    \    $even_count++;\n        } else {\n            $odd_count++;\n        }\n\
    \    }\n    if ($even_count > $odd_count) {\n        return \"YES\";\n    } else\
    \ {\n        return \"NO\";\n    }\n}\n\nfunction candidate(...$args) {\n    return\
    \ exchange(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3, 4), array(1, 2, 3, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4), array(1, 5, 3, 4)) !== \"NO\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4), array(2,\
    \ 1, 4, 3)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 7, 3), array(2, 6, 4)) !== \"YES\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(5, 7, 3), array(2, 6, 3)) !== \"NO\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 6, 1, 8, 9), array(3,\
    \ 5, 5, 1, 1, 1)) !== \"NO\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(100, 200), array(200, 200)) !== \"YES\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp0i_6qetw.php:42\n\
    Stack trace:\n#0 /tmp/tmp0i_6qetw.php(51): test()\n#1 {main}\n  thrown in /tmp/tmp0i_6qetw.php\
    \ on line 42\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// In this problem, you will implement a function that takes two\
    \ lists of numbers,\n// and determines whether it is possible to perform an exchange\
    \ of elements\n// between them to make lst1 a list of only even numbers.\n// There\
    \ is no limit on the number of exchanged elements between lst1 and lst2.\n// If\
    \ it is possible to exchange elements between the lst1 and lst2 to make\n// all\
    \ the elements of lst1 to be even, return \"YES\".\n// Otherwise, return \"NO\"\
    .\n// For example:\n// exchange([1, 2, 3, 4], [1, 2, 3, 4]) => \"YES\"\n// exchange([1,\
    \ 2, 3, 4], [1, 5, 3, 4]) => \"NO\"\n// It is assumed that the input lists will\
    \ be non-empty.\nfunction exchange($lst1, $lst2) {\n    $lst1_odd = array_filter($lst1,\
    \ function($n) { return $n % 2; });\n    $lst2_even = array_filter($lst2, function($n)\
    \ { return !($n % 2); });\n    return count($lst1_odd) == count($lst2_even) ?\
    \ \"YES\" : \"NO\";\n}\n\nfunction candidate(...$args) {\n    return exchange(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4), array(1, 2,\
    \ 3, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4), array(1, 5, 3, 4)) !== \"NO\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4), array(2, 1, 4, 3)) !== \"YES\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 7, 3), array(2,\
    \ 6, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 7, 3), array(2, 6, 3)) !== \"NO\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(3, 2, 6, 1, 8, 9), array(3, 5, 5, 1, 1, 1)) !== \"\
    NO\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ 200), array(200, 200)) !== \"YES\") { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpp4b9fb75.php:30\n\
    Stack trace:\n#0 /tmp/tmpp4b9fb75.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpp4b9fb75.php\
    \ on line 30\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// In this problem, you will implement a function that takes two\
    \ lists of numbers,\n// and determines whether it is possible to perform an exchange\
    \ of elements\n// between them to make lst1 a list of only even numbers.\n// There\
    \ is no limit on the number of exchanged elements between lst1 and lst2.\n// If\
    \ it is possible to exchange elements between the lst1 and lst2 to make\n// all\
    \ the elements of lst1 to be even, return \"YES\".\n// Otherwise, return \"NO\"\
    .\n// For example:\n// exchange([1, 2, 3, 4], [1, 2, 3, 4]) => \"YES\"\n// exchange([1,\
    \ 2, 3, 4], [1, 5, 3, 4]) => \"NO\"\n// It is assumed that the input lists will\
    \ be non-empty.\nfunction exchange($lst1, $lst2) {\n    $lst1_odd = array_filter($lst1,\
    \ function($n) { return $n % 2; });\n    $lst2_even = array_filter($lst2, function($n)\
    \ { return !($n % 2); });\n    return count($lst1_odd) == count($lst2_even) ?\
    \ \"YES\" : \"NO\";\n}\n\necho exchange([1, 2, 3, 4], [1, 2, 3, 4]) . \"\\n\"\
    ;\necho exchange([1, 2, 3, 4], [1, 5, 3, 4]) . \"\\n\";\necho exchange([1, 2,\
    \ 3, 4], [1, 5, 3, 4, 6]) . \"\\n\";\necho exchange([1, 2, 3, 4], [1, 5, 3, 4,\
    \ 6, 8]) . \"\\n\";\necho exchange([1, 2, 3, 4], [1, 5, 3, 4, 6, 8, 10]) . \"\\\
    n\";\necho exchange([1, 2, 3, 4], [1, 5, 3, 4, 6, 8, 10, 12]) . \"\\n\";\necho\
    \ exchange([1, 2, 3, 4], [1, 5, 3, 4, 6, 8, 10, 12, 14]) . \"\\n\";\necho exchange([1,\
    \ 2, 3, 4], [1, 5, 3, 4, 6, 8, 10, 12, 14, 16]) . \"\\n\";\necho exchange([1,\
    \ 2, 3, 4], [1, 5, 3, 4, 6, 8, 10, 12, 14, 16, 18]) . \"\\n\";\necho exchange([1,\
    \ 2, 3, 4], [1, 5, 3, 4, 6, 8, 10, 12, 14, 16, 18, 20]) . \"\\n\";\necho exchange([1,\
    \ 2, 3, 4], [1, 5, 3, 4, 6, 8, 10, 12, 14, 16, 18, 20, 22]) . \"\\n\";\necho exchange([1,\
    \ 2, 3, 4], [1, 5, 3, 4, 6, 8, 10, 12, 14, 16, 18, 20, 22, 24]) . \"\\n\";\necho\
    \ exchange([1, 2, 3, 4],\nfunction candidate(...$args) {\n    return exchange(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4), array(1, 2,\
    \ 3, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4), array(1, 5, 3, 4)) !== \"NO\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4), array(2, 1, 4, 3)) !== \"YES\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 7, 3), array(2,\
    \ 6, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 7, 3), array(2, 6, 3)) !== \"NO\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(3, 2, 6, 1, 8, 9), array(3, 5, 5, 1, 1, 1)) !== \"\
    NO\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ 200), array(200, 200)) !== \"YES\") { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Parse error:  syntax error, unexpected identifier \"candidate\", expecting\
    \ \"(\" in /tmp/tmp22qtpf1e.php on line 32\n"
  exit_code: 255
  status: SyntaxError
- program: "<?php\n// In this problem, you will implement a function that takes two\
    \ lists of numbers,\n// and determines whether it is possible to perform an exchange\
    \ of elements\n// between them to make lst1 a list of only even numbers.\n// There\
    \ is no limit on the number of exchanged elements between lst1 and lst2.\n// If\
    \ it is possible to exchange elements between the lst1 and lst2 to make\n// all\
    \ the elements of lst1 to be even, return \"YES\".\n// Otherwise, return \"NO\"\
    .\n// For example:\n// exchange([1, 2, 3, 4], [1, 2, 3, 4]) => \"YES\"\n// exchange([1,\
    \ 2, 3, 4], [1, 5, 3, 4]) => \"NO\"\n// It is assumed that the input lists will\
    \ be non-empty.\nfunction exchange($lst1, $lst2) {\n    $lst1 = array_filter($lst1,\
    \ function($n) {\n        return $n % 2 == 0;\n    });\n    $lst2 = array_filter($lst2,\
    \ function($n) {\n        return $n % 2 != 0;\n    });\n    return count($lst1)\
    \ + count($lst2) == count($lst1) + count($lst2) ? \"YES\" : \"NO\";\n}\n\nfunction\
    \ candidate(...$args) {\n    return exchange(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, 2, 3, 4), array(1, 2, 3, 4)) !== \"YES\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3,\
    \ 4), array(1, 5, 3, 4)) !== \"NO\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(1, 2, 3, 4), array(2, 1, 4, 3)) !== \"YES\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 7, 3), array(2,\
    \ 6, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 7, 3), array(2, 6, 3)) !== \"NO\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(3, 2, 6, 1, 8, 9), array(3, 5, 5, 1, 1, 1)) !== \"\
    NO\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ 200), array(200, 200)) !== \"YES\") { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp0jx55for.php:29\n\
    Stack trace:\n#0 /tmp/tmp0jx55for.php(37): test()\n#1 {main}\n  thrown in /tmp/tmp0jx55for.php\
    \ on line 29\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// In this problem, you will implement a function that takes two\
    \ lists of numbers,\n// and determines whether it is possible to perform an exchange\
    \ of elements\n// between them to make lst1 a list of only even numbers.\n// There\
    \ is no limit on the number of exchanged elements between lst1 and lst2.\n// If\
    \ it is possible to exchange elements between the lst1 and lst2 to make\n// all\
    \ the elements of lst1 to be even, return \"YES\".\n// Otherwise, return \"NO\"\
    .\n// For example:\n// exchange([1, 2, 3, 4], [1, 2, 3, 4]) => \"YES\"\n// exchange([1,\
    \ 2, 3, 4], [1, 5, 3, 4]) => \"NO\"\n// It is assumed that the input lists will\
    \ be non-empty.\nfunction exchange($lst1, $lst2) {\n  $lst1_even = array_filter($lst1,\
    \ function($n) { return $n % 2 == 0; });\n  $lst2_odd = array_filter($lst2, function($n)\
    \ { return $n % 2 != 0; });\n  return count($lst1_even) + count($lst2_odd) >=\
    \ count($lst1) ? \"YES\" : \"NO\";\n}\n\nfunction candidate(...$args) {\n    return\
    \ exchange(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3, 4), array(1, 2, 3, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4), array(1, 5, 3, 4)) !== \"NO\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4), array(2,\
    \ 1, 4, 3)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 7, 3), array(2, 6, 4)) !== \"YES\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(5, 7, 3), array(2, 6, 3)) !== \"NO\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 6, 1, 8, 9), array(3,\
    \ 5, 5, 1, 1, 1)) !== \"NO\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(100, 200), array(200, 200)) !== \"YES\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmphc2hzyt5.php:25\n\
    Stack trace:\n#0 /tmp/tmphc2hzyt5.php(33): test()\n#1 {main}\n  thrown in /tmp/tmphc2hzyt5.php\
    \ on line 25\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// In this problem, you will implement a function that takes two\
    \ lists of numbers,\n// and determines whether it is possible to perform an exchange\
    \ of elements\n// between them to make lst1 a list of only even numbers.\n// There\
    \ is no limit on the number of exchanged elements between lst1 and lst2.\n// If\
    \ it is possible to exchange elements between the lst1 and lst2 to make\n// all\
    \ the elements of lst1 to be even, return \"YES\".\n// Otherwise, return \"NO\"\
    .\n// For example:\n// exchange([1, 2, 3, 4], [1, 2, 3, 4]) => \"YES\"\n// exchange([1,\
    \ 2, 3, 4], [1, 5, 3, 4]) => \"NO\"\n// It is assumed that the input lists will\
    \ be non-empty.\nfunction exchange($lst1, $lst2) {\n    $odds = array_filter($lst1,\
    \ function($n) {\n        return $n % 2;\n    });\n    $evens = array_filter($lst2,\
    \ function($n) {\n        return !($n % 2);\n    });\n    return count($odds)\
    \ === count($evens) ? \"YES\" : \"NO\";\n}\n\nfunction candidate(...$args) {\n\
    \    return exchange(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3, 4), array(1, 2, 3, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4), array(1, 5, 3, 4)) !== \"NO\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4), array(2,\
    \ 1, 4, 3)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 7, 3), array(2, 6, 4)) !== \"YES\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(5, 7, 3), array(2, 6, 3)) !== \"NO\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 6, 1, 8, 9), array(3,\
    \ 5, 5, 1, 1, 1)) !== \"NO\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(100, 200), array(200, 200)) !== \"YES\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp9_doxpmd.php:34\n\
    Stack trace:\n#0 /tmp/tmp9_doxpmd.php(37): test()\n#1 {main}\n  thrown in /tmp/tmp9_doxpmd.php\
    \ on line 34\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// In this problem, you will implement a function that takes two\
    \ lists of numbers,\n// and determines whether it is possible to perform an exchange\
    \ of elements\n// between them to make lst1 a list of only even numbers.\n// There\
    \ is no limit on the number of exchanged elements between lst1 and lst2.\n// If\
    \ it is possible to exchange elements between the lst1 and lst2 to make\n// all\
    \ the elements of lst1 to be even, return \"YES\".\n// Otherwise, return \"NO\"\
    .\n// For example:\n// exchange([1, 2, 3, 4], [1, 2, 3, 4]) => \"YES\"\n// exchange([1,\
    \ 2, 3, 4], [1, 5, 3, 4]) => \"NO\"\n// It is assumed that the input lists will\
    \ be non-empty.\nfunction exchange($lst1, $lst2) {\n  $lst1 = array_filter($lst1,\
    \ function($n) { return $n % 2 == 0; });\n  $lst2 = array_filter($lst2, function($n)\
    \ { return $n % 2 == 1; });\n  return count($lst1) == count($lst2) ? \"YES\" :\
    \ \"NO\";\n}\n\nfunction candidate(...$args) {\n    return exchange(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4), array(1, 2,\
    \ 3, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4), array(1, 5, 3, 4)) !== \"NO\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4), array(2, 1, 4, 3)) !== \"YES\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 7, 3), array(2,\
    \ 6, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 7, 3), array(2, 6, 3)) !== \"NO\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(3, 2, 6, 1, 8, 9), array(3, 5, 5, 1, 1, 1)) !== \"\
    NO\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ 200), array(200, 200)) !== \"YES\") { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpl78c0c7h.php:30\n\
    Stack trace:\n#0 /tmp/tmpl78c0c7h.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpl78c0c7h.php\
    \ on line 30\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// In this problem, you will implement a function that takes two\
    \ lists of numbers,\n// and determines whether it is possible to perform an exchange\
    \ of elements\n// between them to make lst1 a list of only even numbers.\n// There\
    \ is no limit on the number of exchanged elements between lst1 and lst2.\n// If\
    \ it is possible to exchange elements between the lst1 and lst2 to make\n// all\
    \ the elements of lst1 to be even, return \"YES\".\n// Otherwise, return \"NO\"\
    .\n// For example:\n// exchange([1, 2, 3, 4], [1, 2, 3, 4]) => \"YES\"\n// exchange([1,\
    \ 2, 3, 4], [1, 5, 3, 4]) => \"NO\"\n// It is assumed that the input lists will\
    \ be non-empty.\nfunction exchange($lst1, $lst2) {\n    $odds = [];\n    $evens\
    \ = [];\n    foreach ($lst1 as $num) {\n        if ($num % 2 === 0) {\n      \
    \      $evens[] = $num;\n        } else {\n            $odds[] = $num;\n     \
    \   }\n    }\n    foreach ($lst2 as $num) {\n        if ($num % 2 === 0) {\n \
    \           $evens[] = $num;\n        } else {\n            $odds[] = $num;\n\
    \        }\n    }\n    if (count($odds) === 0) {\n        return \"YES\";\n  \
    \  } elseif (count($evens) === 0) {\n        return \"NO\";\n    } else {\n  \
    \      return \"YES\";\n    }\n}\n\nfunction candidate(...$args) {\n    return\
    \ exchange(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3, 4), array(1, 2, 3, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4), array(1, 5, 3, 4)) !== \"NO\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4), array(2,\
    \ 1, 4, 3)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 7, 3), array(2, 6, 4)) !== \"YES\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(5, 7, 3), array(2, 6, 3)) !== \"NO\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 6, 1, 8, 9), array(3,\
    \ 5, 5, 1, 1, 1)) !== \"NO\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(100, 200), array(200, 200)) !== \"YES\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp2djz9y3w.php:45\n\
    Stack trace:\n#0 /tmp/tmp2djz9y3w.php(53): test()\n#1 {main}\n  thrown in /tmp/tmp2djz9y3w.php\
    \ on line 45\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// In this problem, you will implement a function that takes two\
    \ lists of numbers,\n// and determines whether it is possible to perform an exchange\
    \ of elements\n// between them to make lst1 a list of only even numbers.\n// There\
    \ is no limit on the number of exchanged elements between lst1 and lst2.\n// If\
    \ it is possible to exchange elements between the lst1 and lst2 to make\n// all\
    \ the elements of lst1 to be even, return \"YES\".\n// Otherwise, return \"NO\"\
    .\n// For example:\n// exchange([1, 2, 3, 4], [1, 2, 3, 4]) => \"YES\"\n// exchange([1,\
    \ 2, 3, 4], [1, 5, 3, 4]) => \"NO\"\n// It is assumed that the input lists will\
    \ be non-empty.\nfunction exchange($lst1, $lst2) {\n    $lst1_odd = array_filter($lst1,\
    \ function($n) { return $n % 2 == 1; });\n    $lst2_even = array_filter($lst2,\
    \ function($n) { return $n % 2 == 0; });\n    return count($lst1_odd) == count($lst2_even)\
    \ ? \"YES\" : \"NO\";\n}\n\necho exchange([1, 2, 3, 4], [1, 2, 3, 4]) . \"\\n\"\
    ;\necho exchange([1, 2, 3, 4], [1, 5, 3, 4]) . \"\\n\";\necho exchange([1, 2,\
    \ 3, 4], [1, 5, 3, 4, 6]) . \"\\n\";\necho exchange([1, 2, 3, 4], [1, 5, 3, 4,\
    \ 6, 7]) . \"\\n\";\necho exchange([1, 2, 3, 4], [1, 5, 3, 4, 6, 7, 8]) . \"\\\
    n\";\necho exchange([1, 2, 3, 4], [1, 5, 3, 4, 6, 7, 8, 9]) . \"\\n\";\necho exchange([1,\
    \ 2, 3, 4], [1, 5, 3, 4, 6, 7, 8, 9, 10]) . \"\\n\";\necho exchange([1, 2, 3,\
    \ 4], [1, 5, 3, 4, 6, 7, 8, 9, 10, 11]) . \"\\n\";\necho exchange([1, 2, 3, 4],\
    \ [1, 5, 3, 4, 6, 7, 8, 9, 10, 11, 12]) . \"\\n\";\necho exchange([1, 2, 3, 4],\
    \ [1, 5, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13]) . \"\\n\";\necho exchange([1, 2, 3,\
    \ 4], [1, 5, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14]) . \"\\n\";\necho exchange([1,\
    \ 2, 3, 4], [1, 5, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15]) . \"\\n\";\necho\
    \ exchange([1, 2, 3\nfunction candidate(...$args) {\n    return exchange(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4), array(1, 2,\
    \ 3, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4), array(1, 5, 3, 4)) !== \"NO\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4), array(2, 1, 4, 3)) !== \"YES\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 7, 3), array(2,\
    \ 6, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 7, 3), array(2, 6, 3)) !== \"NO\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(3, 2, 6, 1, 8, 9), array(3, 5, 5, 1, 1, 1)) !== \"\
    NO\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ 200), array(200, 200)) !== \"YES\") { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Parse error:  syntax error, unexpected token \"function\", expecting\
    \ \"]\" in /tmp/tmpw85v9nwp.php on line 32\n"
  exit_code: 255
  status: SyntaxError
- program: "<?php\n// In this problem, you will implement a function that takes two\
    \ lists of numbers,\n// and determines whether it is possible to perform an exchange\
    \ of elements\n// between them to make lst1 a list of only even numbers.\n// There\
    \ is no limit on the number of exchanged elements between lst1 and lst2.\n// If\
    \ it is possible to exchange elements between the lst1 and lst2 to make\n// all\
    \ the elements of lst1 to be even, return \"YES\".\n// Otherwise, return \"NO\"\
    .\n// For example:\n// exchange([1, 2, 3, 4], [1, 2, 3, 4]) => \"YES\"\n// exchange([1,\
    \ 2, 3, 4], [1, 5, 3, 4]) => \"NO\"\n// It is assumed that the input lists will\
    \ be non-empty.\nfunction exchange($lst1, $lst2) {\n    $odds = [];\n    $evens\
    \ = [];\n    foreach ($lst1 as $num) {\n        if ($num % 2 == 0) {\n       \
    \     $evens[] = $num;\n        } else {\n            $odds[] = $num;\n      \
    \  }\n    }\n    foreach ($lst2 as $num) {\n        if ($num % 2 == 0) {\n   \
    \         $evens[] = $num;\n        } else {\n            $odds[] = $num;\n  \
    \      }\n    }\n    if (count($odds) == 0) {\n        return \"YES\";\n    }\
    \ elseif (count($evens) == 0) {\n        return \"NO\";\n    } else {\n      \
    \  return \"YES\";\n    }\n}\n\nfunction candidate(...$args) {\n    return exchange(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4), array(1, 2,\
    \ 3, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4), array(1, 5, 3, 4)) !== \"NO\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4), array(2, 1, 4, 3)) !== \"YES\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 7, 3), array(2,\
    \ 6, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 7, 3), array(2, 6, 3)) !== \"NO\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(3, 2, 6, 1, 8, 9), array(3, 5, 5, 1, 1, 1)) !== \"\
    NO\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ 200), array(200, 200)) !== \"YES\") { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpk459l2la.php:45\n\
    Stack trace:\n#0 /tmp/tmpk459l2la.php(53): test()\n#1 {main}\n  thrown in /tmp/tmpk459l2la.php\
    \ on line 45\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// In this problem, you will implement a function that takes two\
    \ lists of numbers,\n// and determines whether it is possible to perform an exchange\
    \ of elements\n// between them to make lst1 a list of only even numbers.\n// There\
    \ is no limit on the number of exchanged elements between lst1 and lst2.\n// If\
    \ it is possible to exchange elements between the lst1 and lst2 to make\n// all\
    \ the elements of lst1 to be even, return \"YES\".\n// Otherwise, return \"NO\"\
    .\n// For example:\n// exchange([1, 2, 3, 4], [1, 2, 3, 4]) => \"YES\"\n// exchange([1,\
    \ 2, 3, 4], [1, 5, 3, 4]) => \"NO\"\n// It is assumed that the input lists will\
    \ be non-empty.\nfunction exchange($lst1, $lst2) {\n  $odds = array_filter($lst1,\
    \ function($num) {\n    return $num % 2 !== 0;\n  });\n  $evens = array_filter($lst2,\
    \ function($num) {\n    return $num % 2 === 0;\n  });\n  return count($odds) ===\
    \ count($evens) ? \"YES\" : \"NO\";\n}\n\necho exchange([1, 2, 3, 4], [1, 2, 3,\
    \ 4]) . \"\\n\";\necho exchange([1, 2, 3, 4], [1, 5, 3, 4]) . \"\\n\";\necho exchange([1,\
    \ 2, 3, 4], [1, 5, 3, 4, 6]) . \"\\n\";\necho exchange([1, 2, 3, 4], [1, 5, 3,\
    \ 4, 6, 8]) . \"\\n\";\necho exchange([1, 2, 3, 4], [1, 5, 3, 4, 6, 8, 10]) .\
    \ \"\\n\";\necho exchange([1, 2, 3, 4], [1, 5, 3, 4, 6, 8, 10, 12]) . \"\\n\"\
    ;\necho exchange([1, 2, 3, 4], [1, 5, 3, 4, 6, 8, 10, 12, 14]) . \"\\n\";\necho\
    \ exchange([1, 2, 3, 4], [1, 5, 3, 4, 6, 8, 10, 12, 14, 16]) . \"\\n\";\necho\
    \ exchange([1, 2, 3, 4], [1, 5, 3, 4, 6, 8, 10, 12, 14, 16, 18]) . \"\\n\";\n\
    echo exchange([1, 2, 3, 4], [1, 5, 3, 4, 6, 8, 10, 12, 14, 16, 18, 20]) . \"\\\
    n\";\necho exchange([1, 2, 3, 4], [1, 5, 3, 4, 6, 8, 10, 12, 14, 16, 18, 20, 22])\
    \ . \"\\n\";\necho exchange([1, 2, 3, 4], [1, 5, 3, 4, 6, 8, 10, 12, 14, 16, 18,\
    \ 20, 22, 24]) . \"\\n\";\necho exchange([1, 2, 3, 4],\nfunction candidate(...$args)\
    \ {\n    return exchange(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3, 4), array(1, 2, 3, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4), array(1, 5, 3, 4)) !== \"NO\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4), array(2,\
    \ 1, 4, 3)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 7, 3), array(2, 6, 4)) !== \"YES\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(5, 7, 3), array(2, 6, 3)) !== \"NO\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 6, 1, 8, 9), array(3,\
    \ 5, 5, 1, 1, 1)) !== \"NO\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(100, 200), array(200, 200)) !== \"YES\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Parse error:  syntax error, unexpected identifier \"candidate\", expecting\
    \ \"(\" in /tmp/tmpb7fy9k0b.php on line 36\n"
  exit_code: 255
  status: SyntaxError
- program: "<?php\n// In this problem, you will implement a function that takes two\
    \ lists of numbers,\n// and determines whether it is possible to perform an exchange\
    \ of elements\n// between them to make lst1 a list of only even numbers.\n// There\
    \ is no limit on the number of exchanged elements between lst1 and lst2.\n// If\
    \ it is possible to exchange elements between the lst1 and lst2 to make\n// all\
    \ the elements of lst1 to be even, return \"YES\".\n// Otherwise, return \"NO\"\
    .\n// For example:\n// exchange([1, 2, 3, 4], [1, 2, 3, 4]) => \"YES\"\n// exchange([1,\
    \ 2, 3, 4], [1, 5, 3, 4]) => \"NO\"\n// It is assumed that the input lists will\
    \ be non-empty.\nfunction exchange($lst1, $lst2) {\n    $lst1_odd = array_filter($lst1,\
    \ function($n) { return $n % 2 == 1; });\n    $lst2_even = array_filter($lst2,\
    \ function($n) { return $n % 2 == 0; });\n    return count($lst1_odd) == count($lst2_even)\
    \ ? \"YES\" : \"NO\";\n}\nfunction candidate(...$args) {\n    return exchange(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4), array(1, 2,\
    \ 3, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4), array(1, 5, 3, 4)) !== \"NO\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4), array(2, 1, 4, 3)) !== \"YES\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 7, 3), array(2,\
    \ 6, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 7, 3), array(2, 6, 3)) !== \"NO\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(3, 2, 6, 1, 8, 9), array(3, 5, 5, 1, 1, 1)) !== \"\
    NO\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ 200), array(200, 200)) !== \"YES\") { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpux351umu.php:29\n\
    Stack trace:\n#0 /tmp/tmpux351umu.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpux351umu.php\
    \ on line 29\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// In this problem, you will implement a function that takes two\
    \ lists of numbers,\n// and determines whether it is possible to perform an exchange\
    \ of elements\n// between them to make lst1 a list of only even numbers.\n// There\
    \ is no limit on the number of exchanged elements between lst1 and lst2.\n// If\
    \ it is possible to exchange elements between the lst1 and lst2 to make\n// all\
    \ the elements of lst1 to be even, return \"YES\".\n// Otherwise, return \"NO\"\
    .\n// For example:\n// exchange([1, 2, 3, 4], [1, 2, 3, 4]) => \"YES\"\n// exchange([1,\
    \ 2, 3, 4], [1, 5, 3, 4]) => \"NO\"\n// It is assumed that the input lists will\
    \ be non-empty.\nfunction exchange($lst1, $lst2) {\n    $lst1 = array_filter($lst1,\
    \ function($n) {\n        return $n % 2 == 0;\n    });\n    $lst2 = array_filter($lst2,\
    \ function($n) {\n        return $n % 2 == 1;\n    });\n    return count($lst1)\
    \ == count($lst2) ? \"YES\" : \"NO\";\n}\n\nfunction candidate(...$args) {\n \
    \   return exchange(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3, 4), array(1, 2, 3, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4), array(1, 5, 3, 4)) !== \"NO\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4), array(2,\
    \ 1, 4, 3)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 7, 3), array(2, 6, 4)) !== \"YES\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(5, 7, 3), array(2, 6, 3)) !== \"NO\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 6, 1, 8, 9), array(3,\
    \ 5, 5, 1, 1, 1)) !== \"NO\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(100, 200), array(200, 200)) !== \"YES\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpmpj9y6rx.php:34\n\
    Stack trace:\n#0 /tmp/tmpmpj9y6rx.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpmpj9y6rx.php\
    \ on line 34\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// In this problem, you will implement a function that takes two\
    \ lists of numbers,\n// and determines whether it is possible to perform an exchange\
    \ of elements\n// between them to make lst1 a list of only even numbers.\n// There\
    \ is no limit on the number of exchanged elements between lst1 and lst2.\n// If\
    \ it is possible to exchange elements between the lst1 and lst2 to make\n// all\
    \ the elements of lst1 to be even, return \"YES\".\n// Otherwise, return \"NO\"\
    .\n// For example:\n// exchange([1, 2, 3, 4], [1, 2, 3, 4]) => \"YES\"\n// exchange([1,\
    \ 2, 3, 4], [1, 5, 3, 4]) => \"NO\"\n// It is assumed that the input lists will\
    \ be non-empty.\nfunction exchange($lst1, $lst2) {\n    $odds = array_filter($lst1,\
    \ function($x) { return $x % 2; });\n    $evens = array_filter($lst2, function($x)\
    \ { return !($x % 2); });\n    return count($odds) == count($evens) ? \"YES\"\
    \ : \"NO\";\n}\n\nfunction candidate(...$args) {\n    return exchange(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4), array(1, 2,\
    \ 3, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4), array(1, 5, 3, 4)) !== \"NO\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4), array(2, 1, 4, 3)) !== \"YES\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 7, 3), array(2,\
    \ 6, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 7, 3), array(2, 6, 3)) !== \"NO\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(3, 2, 6, 1, 8, 9), array(3, 5, 5, 1, 1, 1)) !== \"\
    NO\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ 200), array(200, 200)) !== \"YES\") { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpiyc8peiz.php:30\n\
    Stack trace:\n#0 /tmp/tmpiyc8peiz.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpiyc8peiz.php\
    \ on line 30\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// In this problem, you will implement a function that takes two\
    \ lists of numbers,\n// and determines whether it is possible to perform an exchange\
    \ of elements\n// between them to make lst1 a list of only even numbers.\n// There\
    \ is no limit on the number of exchanged elements between lst1 and lst2.\n// If\
    \ it is possible to exchange elements between the lst1 and lst2 to make\n// all\
    \ the elements of lst1 to be even, return \"YES\".\n// Otherwise, return \"NO\"\
    .\n// For example:\n// exchange([1, 2, 3, 4], [1, 2, 3, 4]) => \"YES\"\n// exchange([1,\
    \ 2, 3, 4], [1, 5, 3, 4]) => \"NO\"\n// It is assumed that the input lists will\
    \ be non-empty.\nfunction exchange($lst1, $lst2) {\n  $odds = 0;\n  $evens = 0;\n\
    \  foreach ($lst1 as $num) {\n    if ($num % 2 === 0) {\n      $evens++;\n   \
    \ } else {\n      $odds++;\n    }\n  }\n  foreach ($lst2 as $num) {\n    if ($num\
    \ % 2 === 0) {\n      $evens++;\n    } else {\n      $odds++;\n    }\n  }\n  if\
    \ ($evens % 2 === 0) {\n    return \"YES\";\n  } else {\n    return \"NO\";\n\
    \  }\n}\n\nfunction candidate(...$args) {\n    return exchange(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4), array(1, 2, 3,\
    \ 4)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4), array(1, 5, 3, 4)) !== \"NO\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4), array(2, 1, 4, 3)) !== \"YES\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 7, 3), array(2,\
    \ 6, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 7, 3), array(2, 6, 3)) !== \"NO\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(3, 2, 6, 1, 8, 9), array(3, 5, 5, 1, 1, 1)) !== \"\
    NO\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ 200), array(200, 200)) !== \"YES\") { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpzstaabcp.php:45\n\
    Stack trace:\n#0 /tmp/tmpzstaabcp.php(51): test()\n#1 {main}\n  thrown in /tmp/tmpzstaabcp.php\
    \ on line 45\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// In this problem, you will implement a function that takes two\
    \ lists of numbers,\n// and determines whether it is possible to perform an exchange\
    \ of elements\n// between them to make lst1 a list of only even numbers.\n// There\
    \ is no limit on the number of exchanged elements between lst1 and lst2.\n// If\
    \ it is possible to exchange elements between the lst1 and lst2 to make\n// all\
    \ the elements of lst1 to be even, return \"YES\".\n// Otherwise, return \"NO\"\
    .\n// For example:\n// exchange([1, 2, 3, 4], [1, 2, 3, 4]) => \"YES\"\n// exchange([1,\
    \ 2, 3, 4], [1, 5, 3, 4]) => \"NO\"\n// It is assumed that the input lists will\
    \ be non-empty.\nfunction exchange($lst1, $lst2) {\n  $odds = array_filter($lst1,\
    \ function($n) {\n    return $n % 2 != 0;\n  });\n  $evens = array_filter($lst2,\
    \ function($n) {\n    return $n % 2 == 0;\n  });\n  return count($odds) == count($evens)\
    \ ? \"YES\" : \"NO\";\n}\n\nfunction candidate(...$args) {\n    return exchange(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4), array(1, 2,\
    \ 3, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4), array(1, 5, 3, 4)) !== \"NO\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4), array(2, 1, 4, 3)) !== \"YES\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 7, 3), array(2,\
    \ 6, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 7, 3), array(2, 6, 3)) !== \"NO\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(3, 2, 6, 1, 8, 9), array(3, 5, 5, 1, 1, 1)) !== \"\
    NO\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ 200), array(200, 200)) !== \"YES\") { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp5_ezbynf.php:34\n\
    Stack trace:\n#0 /tmp/tmp5_ezbynf.php(37): test()\n#1 {main}\n  thrown in /tmp/tmp5_ezbynf.php\
    \ on line 34\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// In this problem, you will implement a function that takes two\
    \ lists of numbers,\n// and determines whether it is possible to perform an exchange\
    \ of elements\n// between them to make lst1 a list of only even numbers.\n// There\
    \ is no limit on the number of exchanged elements between lst1 and lst2.\n// If\
    \ it is possible to exchange elements between the lst1 and lst2 to make\n// all\
    \ the elements of lst1 to be even, return \"YES\".\n// Otherwise, return \"NO\"\
    .\n// For example:\n// exchange([1, 2, 3, 4], [1, 2, 3, 4]) => \"YES\"\n// exchange([1,\
    \ 2, 3, 4], [1, 5, 3, 4]) => \"NO\"\n// It is assumed that the input lists will\
    \ be non-empty.\nfunction exchange($lst1, $lst2) {\n    $odds = array_filter($lst1,\
    \ function($n) { return $n % 2; });\n    $evens = array_filter($lst2, function($n)\
    \ { return !($n % 2); });\n    return count($odds) === count($evens) ? \"YES\"\
    \ : \"NO\";\n}\n\nfunction candidate(...$args) {\n    return exchange(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4), array(1, 2,\
    \ 3, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4), array(1, 5, 3, 4)) !== \"NO\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4), array(2, 1, 4, 3)) !== \"YES\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 7, 3), array(2,\
    \ 6, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 7, 3), array(2, 6, 3)) !== \"NO\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(3, 2, 6, 1, 8, 9), array(3, 5, 5, 1, 1, 1)) !== \"\
    NO\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ 200), array(200, 200)) !== \"YES\") { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpg9_qqsqe.php:30\n\
    Stack trace:\n#0 /tmp/tmpg9_qqsqe.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpg9_qqsqe.php\
    \ on line 30\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// In this problem, you will implement a function that takes two\
    \ lists of numbers,\n// and determines whether it is possible to perform an exchange\
    \ of elements\n// between them to make lst1 a list of only even numbers.\n// There\
    \ is no limit on the number of exchanged elements between lst1 and lst2.\n// If\
    \ it is possible to exchange elements between the lst1 and lst2 to make\n// all\
    \ the elements of lst1 to be even, return \"YES\".\n// Otherwise, return \"NO\"\
    .\n// For example:\n// exchange([1, 2, 3, 4], [1, 2, 3, 4]) => \"YES\"\n// exchange([1,\
    \ 2, 3, 4], [1, 5, 3, 4]) => \"NO\"\n// It is assumed that the input lists will\
    \ be non-empty.\nfunction exchange($lst1, $lst2) {\n  $odds = array_filter($lst1,\
    \ function($n) { return $n % 2; });\n  $evens = array_filter($lst2, function($n)\
    \ { return !($n % 2); });\n  return count($odds) == count($evens) ? \"YES\" :\
    \ \"NO\";\n}\n\nfunction candidate(...$args) {\n    return exchange(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4), array(1, 2,\
    \ 3, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4), array(1, 5, 3, 4)) !== \"NO\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4), array(2, 1, 4, 3)) !== \"YES\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 7, 3), array(2,\
    \ 6, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 7, 3), array(2, 6, 3)) !== \"NO\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(3, 2, 6, 1, 8, 9), array(3, 5, 5, 1, 1, 1)) !== \"\
    NO\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ 200), array(200, 200)) !== \"YES\") { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp9jno1ar5.php:30\n\
    Stack trace:\n#0 /tmp/tmp9jno1ar5.php(33): test()\n#1 {main}\n  thrown in /tmp/tmp9jno1ar5.php\
    \ on line 30\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// In this problem, you will implement a function that takes two\
    \ lists of numbers,\n// and determines whether it is possible to perform an exchange\
    \ of elements\n// between them to make lst1 a list of only even numbers.\n// There\
    \ is no limit on the number of exchanged elements between lst1 and lst2.\n// If\
    \ it is possible to exchange elements between the lst1 and lst2 to make\n// all\
    \ the elements of lst1 to be even, return \"YES\".\n// Otherwise, return \"NO\"\
    .\n// For example:\n// exchange([1, 2, 3, 4], [1, 2, 3, 4]) => \"YES\"\n// exchange([1,\
    \ 2, 3, 4], [1, 5, 3, 4]) => \"NO\"\n// It is assumed that the input lists will\
    \ be non-empty.\nfunction exchange($lst1, $lst2) {\n    $even = array_filter($lst1,\
    \ function($n) { return $n % 2 == 0; });\n    $odd = array_filter($lst2, function($n)\
    \ { return $n % 2 == 1; });\n    return count($even) + count($odd) == count($lst1)\
    \ + count($lst2) ? \"YES\" : \"NO\";\n}\n\nfunction candidate(...$args) {\n  \
    \  return exchange(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3, 4), array(1, 2, 3, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4), array(1, 5, 3, 4)) !== \"NO\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4), array(2,\
    \ 1, 4, 3)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 7, 3), array(2, 6, 4)) !== \"YES\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(5, 7, 3), array(2, 6, 3)) !== \"NO\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 6, 1, 8, 9), array(3,\
    \ 5, 5, 1, 1, 1)) !== \"NO\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(100, 200), array(200, 200)) !== \"YES\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpz04nj_z0.php:24\n\
    Stack trace:\n#0 /tmp/tmpz04nj_z0.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpz04nj_z0.php\
    \ on line 24\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// In this problem, you will implement a function that takes two\
    \ lists of numbers,\n// and determines whether it is possible to perform an exchange\
    \ of elements\n// between them to make lst1 a list of only even numbers.\n// There\
    \ is no limit on the number of exchanged elements between lst1 and lst2.\n// If\
    \ it is possible to exchange elements between the lst1 and lst2 to make\n// all\
    \ the elements of lst1 to be even, return \"YES\".\n// Otherwise, return \"NO\"\
    .\n// For example:\n// exchange([1, 2, 3, 4], [1, 2, 3, 4]) => \"YES\"\n// exchange([1,\
    \ 2, 3, 4], [1, 5, 3, 4]) => \"NO\"\n// It is assumed that the input lists will\
    \ be non-empty.\nfunction exchange($lst1, $lst2) {\n  $odds1 = array_filter($lst1,\
    \ function($n) { return $n % 2; });\n  $odds2 = array_filter($lst2, function($n)\
    \ { return $n % 2; });\n  return count($odds1) == count($odds2) ? \"YES\" : \"\
    NO\";\n}\n\nfunction candidate(...$args) {\n    return exchange(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4), array(1, 2, 3,\
    \ 4)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4), array(1, 5, 3, 4)) !== \"NO\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4), array(2, 1, 4, 3)) !== \"YES\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 7, 3), array(2,\
    \ 6, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 7, 3), array(2, 6, 3)) !== \"NO\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(3, 2, 6, 1, 8, 9), array(3, 5, 5, 1, 1, 1)) !== \"\
    NO\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ 200), array(200, 200)) !== \"YES\") { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp5zq2h6ki.php:27\n\
    Stack trace:\n#0 /tmp/tmp5zq2h6ki.php(33): test()\n#1 {main}\n  thrown in /tmp/tmp5zq2h6ki.php\
    \ on line 27\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// In this problem, you will implement a function that takes two\
    \ lists of numbers,\n// and determines whether it is possible to perform an exchange\
    \ of elements\n// between them to make lst1 a list of only even numbers.\n// There\
    \ is no limit on the number of exchanged elements between lst1 and lst2.\n// If\
    \ it is possible to exchange elements between the lst1 and lst2 to make\n// all\
    \ the elements of lst1 to be even, return \"YES\".\n// Otherwise, return \"NO\"\
    .\n// For example:\n// exchange([1, 2, 3, 4], [1, 2, 3, 4]) => \"YES\"\n// exchange([1,\
    \ 2, 3, 4], [1, 5, 3, 4]) => \"NO\"\n// It is assumed that the input lists will\
    \ be non-empty.\nfunction exchange($lst1, $lst2) {\n    $odds = array_filter($lst1,\
    \ function($x) {\n        return $x % 2 != 0;\n    });\n    $evens = array_filter($lst2,\
    \ function($x) {\n        return $x % 2 == 0;\n    });\n    return count($odds)\
    \ == count($evens) ? \"YES\" : \"NO\";\n}\n\nfunction candidate(...$args) {\n\
    \    return exchange(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3, 4), array(1, 2, 3, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4), array(1, 5, 3, 4)) !== \"NO\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4), array(2,\
    \ 1, 4, 3)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 7, 3), array(2, 6, 4)) !== \"YES\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(5, 7, 3), array(2, 6, 3)) !== \"NO\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 6, 1, 8, 9), array(3,\
    \ 5, 5, 1, 1, 1)) !== \"NO\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(100, 200), array(200, 200)) !== \"YES\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpf36fbp5t.php:34\n\
    Stack trace:\n#0 /tmp/tmpf36fbp5t.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpf36fbp5t.php\
    \ on line 34\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// In this problem, you will implement a function that takes two\
    \ lists of numbers,\n// and determines whether it is possible to perform an exchange\
    \ of elements\n// between them to make lst1 a list of only even numbers.\n// There\
    \ is no limit on the number of exchanged elements between lst1 and lst2.\n// If\
    \ it is possible to exchange elements between the lst1 and lst2 to make\n// all\
    \ the elements of lst1 to be even, return \"YES\".\n// Otherwise, return \"NO\"\
    .\n// For example:\n// exchange([1, 2, 3, 4], [1, 2, 3, 4]) => \"YES\"\n// exchange([1,\
    \ 2, 3, 4], [1, 5, 3, 4]) => \"NO\"\n// It is assumed that the input lists will\
    \ be non-empty.\nfunction exchange($lst1, $lst2) {\n    $odd1 = array_filter($lst1,\
    \ function($n) { return $n % 2 == 1; });\n    $odd2 = array_filter($lst2, function($n)\
    \ { return $n % 2 == 1; });\n    return count($odd1) == count($odd2) ? \"YES\"\
    \ : \"NO\";\n}\n\nfunction candidate(...$args) {\n    return exchange(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4), array(1, 2,\
    \ 3, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4), array(1, 5, 3, 4)) !== \"NO\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4), array(2, 1, 4, 3)) !== \"YES\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 7, 3), array(2,\
    \ 6, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 7, 3), array(2, 6, 3)) !== \"NO\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(3, 2, 6, 1, 8, 9), array(3, 5, 5, 1, 1, 1)) !== \"\
    NO\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ 200), array(200, 200)) !== \"YES\") { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpwebjhxm0.php:27\n\
    Stack trace:\n#0 /tmp/tmpwebjhxm0.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpwebjhxm0.php\
    \ on line 27\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// In this problem, you will implement a function that takes two\
    \ lists of numbers,\n// and determines whether it is possible to perform an exchange\
    \ of elements\n// between them to make lst1 a list of only even numbers.\n// There\
    \ is no limit on the number of exchanged elements between lst1 and lst2.\n// If\
    \ it is possible to exchange elements between the lst1 and lst2 to make\n// all\
    \ the elements of lst1 to be even, return \"YES\".\n// Otherwise, return \"NO\"\
    .\n// For example:\n// exchange([1, 2, 3, 4], [1, 2, 3, 4]) => \"YES\"\n// exchange([1,\
    \ 2, 3, 4], [1, 5, 3, 4]) => \"NO\"\n// It is assumed that the input lists will\
    \ be non-empty.\nfunction exchange($lst1, $lst2) {\n  $lst1_even = array_filter($lst1,\
    \ function($n) {\n    return $n % 2 == 0;\n  });\n  $lst2_odd = array_filter($lst2,\
    \ function($n) {\n    return $n % 2 != 0;\n  });\n  if (count($lst1_even) >= count($lst2_odd))\
    \ {\n    return \"YES\";\n  } else {\n    return \"NO\";\n  }\n}\n\nfunction candidate(...$args)\
    \ {\n    return exchange(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3, 4), array(1, 2, 3, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4), array(1, 5, 3, 4)) !== \"NO\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4), array(2,\
    \ 1, 4, 3)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 7, 3), array(2, 6, 4)) !== \"YES\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(5, 7, 3), array(2, 6, 3)) !== \"NO\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 6, 1, 8, 9), array(3,\
    \ 5, 5, 1, 1, 1)) !== \"NO\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(100, 200), array(200, 200)) !== \"YES\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// In this problem, you will implement a function that takes two\
    \ lists of numbers,\n// and determines whether it is possible to perform an exchange\
    \ of elements\n// between them to make lst1 a list of only even numbers.\n// There\
    \ is no limit on the number of exchanged elements between lst1 and lst2.\n// If\
    \ it is possible to exchange elements between the lst1 and lst2 to make\n// all\
    \ the elements of lst1 to be even, return \"YES\".\n// Otherwise, return \"NO\"\
    .\n// For example:\n// exchange([1, 2, 3, 4], [1, 2, 3, 4]) => \"YES\"\n// exchange([1,\
    \ 2, 3, 4], [1, 5, 3, 4]) => \"NO\"\n// It is assumed that the input lists will\
    \ be non-empty.\nfunction exchange($lst1, $lst2) {\n  $even = 0;\n  $odd = 0;\n\
    \  foreach ($lst1 as $value) {\n    if ($value % 2 == 0) {\n      $even++;\n \
    \   } else {\n      $odd++;\n    }\n  }\n  foreach ($lst2 as $value) {\n    if\
    \ ($value % 2 == 0) {\n      $even++;\n    } else {\n      $odd++;\n    }\n  }\n\
    \  if ($even % 2 == 0 && $odd % 2 == 0) {\n    return \"YES\";\n  } else {\n \
    \   return \"NO\";\n  }\n}\n\nfunction candidate(...$args) {\n    return exchange(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4), array(1, 2,\
    \ 3, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4), array(1, 5, 3, 4)) !== \"NO\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4), array(2, 1, 4, 3)) !== \"YES\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 7, 3), array(2,\
    \ 6, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 7, 3), array(2, 6, 3)) !== \"NO\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(3, 2, 6, 1, 8, 9), array(3, 5, 5, 1, 1, 1)) !== \"\
    NO\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ 200), array(200, 200)) !== \"YES\") { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp2fv1xsu6.php:45\n\
    Stack trace:\n#0 /tmp/tmp2fv1xsu6.php(51): test()\n#1 {main}\n  thrown in /tmp/tmp2fv1xsu6.php\
    \ on line 45\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// In this problem, you will implement a function that takes two\
    \ lists of numbers,\n// and determines whether it is possible to perform an exchange\
    \ of elements\n// between them to make lst1 a list of only even numbers.\n// There\
    \ is no limit on the number of exchanged elements between lst1 and lst2.\n// If\
    \ it is possible to exchange elements between the lst1 and lst2 to make\n// all\
    \ the elements of lst1 to be even, return \"YES\".\n// Otherwise, return \"NO\"\
    .\n// For example:\n// exchange([1, 2, 3, 4], [1, 2, 3, 4]) => \"YES\"\n// exchange([1,\
    \ 2, 3, 4], [1, 5, 3, 4]) => \"NO\"\n// It is assumed that the input lists will\
    \ be non-empty.\nfunction exchange($lst1, $lst2) {\n    $odds = [];\n    $evens\
    \ = [];\n    foreach ($lst1 as $num) {\n        if ($num % 2 === 0) {\n      \
    \      $evens[] = $num;\n        } else {\n            $odds[] = $num;\n     \
    \   }\n    }\n    foreach ($lst2 as $num) {\n        if ($num % 2 === 0) {\n \
    \           $evens[] = $num;\n        } else {\n            $odds[] = $num;\n\
    \        }\n    }\n    if (count($odds) === 0) {\n        return \"YES\";\n  \
    \  } elseif (count($evens) === 0) {\n        return \"NO\";\n    } else {\n  \
    \      return \"YES\";\n    }\n}\n\nfunction candidate(...$args) {\n    return\
    \ exchange(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3, 4), array(1, 2, 3, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4), array(1, 5, 3, 4)) !== \"NO\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4), array(2,\
    \ 1, 4, 3)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 7, 3), array(2, 6, 4)) !== \"YES\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(5, 7, 3), array(2, 6, 3)) !== \"NO\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 6, 1, 8, 9), array(3,\
    \ 5, 5, 1, 1, 1)) !== \"NO\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(100, 200), array(200, 200)) !== \"YES\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpbxwc3rxw.php:45\n\
    Stack trace:\n#0 /tmp/tmpbxwc3rxw.php(53): test()\n#1 {main}\n  thrown in /tmp/tmpbxwc3rxw.php\
    \ on line 45\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// In this problem, you will implement a function that takes two\
    \ lists of numbers,\n// and determines whether it is possible to perform an exchange\
    \ of elements\n// between them to make lst1 a list of only even numbers.\n// There\
    \ is no limit on the number of exchanged elements between lst1 and lst2.\n// If\
    \ it is possible to exchange elements between the lst1 and lst2 to make\n// all\
    \ the elements of lst1 to be even, return \"YES\".\n// Otherwise, return \"NO\"\
    .\n// For example:\n// exchange([1, 2, 3, 4], [1, 2, 3, 4]) => \"YES\"\n// exchange([1,\
    \ 2, 3, 4], [1, 5, 3, 4]) => \"NO\"\n// It is assumed that the input lists will\
    \ be non-empty.\nfunction exchange($lst1, $lst2) {\n  $evens = array_filter($lst1,\
    \ function($n) {\n    return $n % 2 == 0;\n  });\n  $odds = array_filter($lst2,\
    \ function($n) {\n    return $n % 2 != 0;\n  });\n  return count($evens) == count($odds)\
    \ ? \"YES\" : \"NO\";\n}\n\nfunction candidate(...$args) {\n    return exchange(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4), array(1, 2,\
    \ 3, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4), array(1, 5, 3, 4)) !== \"NO\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4), array(2, 1, 4, 3)) !== \"YES\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 7, 3), array(2,\
    \ 6, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 7, 3), array(2, 6, 3)) !== \"NO\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(3, 2, 6, 1, 8, 9), array(3, 5, 5, 1, 1, 1)) !== \"\
    NO\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ 200), array(200, 200)) !== \"YES\") { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp0g0xv1qw.php:34\n\
    Stack trace:\n#0 /tmp/tmp0g0xv1qw.php(37): test()\n#1 {main}\n  thrown in /tmp/tmp0g0xv1qw.php\
    \ on line 34\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// In this problem, you will implement a function that takes two\
    \ lists of numbers,\n// and determines whether it is possible to perform an exchange\
    \ of elements\n// between them to make lst1 a list of only even numbers.\n// There\
    \ is no limit on the number of exchanged elements between lst1 and lst2.\n// If\
    \ it is possible to exchange elements between the lst1 and lst2 to make\n// all\
    \ the elements of lst1 to be even, return \"YES\".\n// Otherwise, return \"NO\"\
    .\n// For example:\n// exchange([1, 2, 3, 4], [1, 2, 3, 4]) => \"YES\"\n// exchange([1,\
    \ 2, 3, 4], [1, 5, 3, 4]) => \"NO\"\n// It is assumed that the input lists will\
    \ be non-empty.\nfunction exchange($lst1, $lst2) {\n    $evens = array_filter($lst1,\
    \ function($n) { return $n % 2 == 0; });\n    $odds = array_filter($lst2, function($n)\
    \ { return $n % 2 != 0; });\n    return count($evens) == count($odds) ? \"YES\"\
    \ : \"NO\";\n}\n\nfunction candidate(...$args) {\n    return exchange(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4), array(1, 2,\
    \ 3, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4), array(1, 5, 3, 4)) !== \"NO\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4), array(2, 1, 4, 3)) !== \"YES\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 7, 3), array(2,\
    \ 6, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 7, 3), array(2, 6, 3)) !== \"NO\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(3, 2, 6, 1, 8, 9), array(3, 5, 5, 1, 1, 1)) !== \"\
    NO\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ 200), array(200, 200)) !== \"YES\") { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpgi_wvpcu.php:30\n\
    Stack trace:\n#0 /tmp/tmpgi_wvpcu.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpgi_wvpcu.php\
    \ on line 30\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// In this problem, you will implement a function that takes two\
    \ lists of numbers,\n// and determines whether it is possible to perform an exchange\
    \ of elements\n// between them to make lst1 a list of only even numbers.\n// There\
    \ is no limit on the number of exchanged elements between lst1 and lst2.\n// If\
    \ it is possible to exchange elements between the lst1 and lst2 to make\n// all\
    \ the elements of lst1 to be even, return \"YES\".\n// Otherwise, return \"NO\"\
    .\n// For example:\n// exchange([1, 2, 3, 4], [1, 2, 3, 4]) => \"YES\"\n// exchange([1,\
    \ 2, 3, 4], [1, 5, 3, 4]) => \"NO\"\n// It is assumed that the input lists will\
    \ be non-empty.\nfunction exchange($lst1, $lst2) {\n  $odds = array_filter($lst1,\
    \ function($n) { return $n % 2; });\n  $evens = array_filter($lst2, function($n)\
    \ { return !($n % 2); });\n  return count($odds) == count($evens) ? \"YES\" :\
    \ \"NO\";\n}\n\nfunction candidate(...$args) {\n    return exchange(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4), array(1, 2,\
    \ 3, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4), array(1, 5, 3, 4)) !== \"NO\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4), array(2, 1, 4, 3)) !== \"YES\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 7, 3), array(2,\
    \ 6, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 7, 3), array(2, 6, 3)) !== \"NO\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(3, 2, 6, 1, 8, 9), array(3, 5, 5, 1, 1, 1)) !== \"\
    NO\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ 200), array(200, 200)) !== \"YES\") { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpvl2jrghu.php:30\n\
    Stack trace:\n#0 /tmp/tmpvl2jrghu.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpvl2jrghu.php\
    \ on line 30\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// In this problem, you will implement a function that takes two\
    \ lists of numbers,\n// and determines whether it is possible to perform an exchange\
    \ of elements\n// between them to make lst1 a list of only even numbers.\n// There\
    \ is no limit on the number of exchanged elements between lst1 and lst2.\n// If\
    \ it is possible to exchange elements between the lst1 and lst2 to make\n// all\
    \ the elements of lst1 to be even, return \"YES\".\n// Otherwise, return \"NO\"\
    .\n// For example:\n// exchange([1, 2, 3, 4], [1, 2, 3, 4]) => \"YES\"\n// exchange([1,\
    \ 2, 3, 4], [1, 5, 3, 4]) => \"NO\"\n// It is assumed that the input lists will\
    \ be non-empty.\nfunction exchange($lst1, $lst2) {\n    $odds = [];\n    foreach\
    \ ($lst1 as $num) {\n        if ($num % 2 !== 0) {\n            $odds[] = $num;\n\
    \        }\n    }\n    foreach ($lst2 as $num) {\n        if ($num % 2 !== 0)\
    \ {\n            $odds[] = $num;\n        }\n    }\n    return count($odds) ===\
    \ count(array_unique($odds)) ? \"YES\" : \"NO\";\n}\n\nfunction candidate(...$args)\
    \ {\n    return exchange(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3, 4), array(1, 2, 3, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4), array(1, 5, 3, 4)) !== \"NO\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4), array(2,\
    \ 1, 4, 3)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 7, 3), array(2, 6, 4)) !== \"YES\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(5, 7, 3), array(2, 6, 3)) !== \"NO\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 6, 1, 8, 9), array(3,\
    \ 5, 5, 1, 1, 1)) !== \"NO\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(100, 200), array(200, 200)) !== \"YES\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpn82ysdop.php:33\n\
    Stack trace:\n#0 /tmp/tmpn82ysdop.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpn82ysdop.php\
    \ on line 33\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// In this problem, you will implement a function that takes two\
    \ lists of numbers,\n// and determines whether it is possible to perform an exchange\
    \ of elements\n// between them to make lst1 a list of only even numbers.\n// There\
    \ is no limit on the number of exchanged elements between lst1 and lst2.\n// If\
    \ it is possible to exchange elements between the lst1 and lst2 to make\n// all\
    \ the elements of lst1 to be even, return \"YES\".\n// Otherwise, return \"NO\"\
    .\n// For example:\n// exchange([1, 2, 3, 4], [1, 2, 3, 4]) => \"YES\"\n// exchange([1,\
    \ 2, 3, 4], [1, 5, 3, 4]) => \"NO\"\n// It is assumed that the input lists will\
    \ be non-empty.\nfunction exchange($lst1, $lst2) {\n    $odds = [];\n    $evens\
    \ = [];\n    foreach ($lst1 as $num) {\n        if ($num % 2 === 0) {\n      \
    \      $evens[] = $num;\n        } else {\n            $odds[] = $num;\n     \
    \   }\n    }\n    foreach ($lst2 as $num) {\n        if ($num % 2 === 0) {\n \
    \           $evens[] = $num;\n        } else {\n            $odds[] = $num;\n\
    \        }\n    }\n    if (count($evens) > count($odds)) {\n        return \"\
    YES\";\n    } else {\n        return \"NO\";\n    }\n}\n\nfunction candidate(...$args)\
    \ {\n    return exchange(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3, 4), array(1, 2, 3, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4), array(1, 5, 3, 4)) !== \"NO\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4), array(2,\
    \ 1, 4, 3)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 7, 3), array(2, 6, 4)) !== \"YES\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(5, 7, 3), array(2, 6, 3)) !== \"NO\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 6, 1, 8, 9), array(3,\
    \ 5, 5, 1, 1, 1)) !== \"NO\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(100, 200), array(200, 200)) !== \"YES\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp1vf4nps1.php:42\n\
    Stack trace:\n#0 /tmp/tmp1vf4nps1.php(51): test()\n#1 {main}\n  thrown in /tmp/tmp1vf4nps1.php\
    \ on line 42\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// In this problem, you will implement a function that takes two\
    \ lists of numbers,\n// and determines whether it is possible to perform an exchange\
    \ of elements\n// between them to make lst1 a list of only even numbers.\n// There\
    \ is no limit on the number of exchanged elements between lst1 and lst2.\n// If\
    \ it is possible to exchange elements between the lst1 and lst2 to make\n// all\
    \ the elements of lst1 to be even, return \"YES\".\n// Otherwise, return \"NO\"\
    .\n// For example:\n// exchange([1, 2, 3, 4], [1, 2, 3, 4]) => \"YES\"\n// exchange([1,\
    \ 2, 3, 4], [1, 5, 3, 4]) => \"NO\"\n// It is assumed that the input lists will\
    \ be non-empty.\nfunction exchange($lst1, $lst2) {\n    $odds = [];\n    $evens\
    \ = [];\n    foreach ($lst1 as $num) {\n        if ($num % 2 === 0) {\n      \
    \      $evens[] = $num;\n        } else {\n            $odds[] = $num;\n     \
    \   }\n    }\n    foreach ($lst2 as $num) {\n        if ($num % 2 === 0) {\n \
    \           $evens[] = $num;\n        } else {\n            $odds[] = $num;\n\
    \        }\n    }\n    if (count($evens) > count($odds)) {\n        return \"\
    YES\";\n    } else {\n        return \"NO\";\n    }\n}\nfunction candidate(...$args)\
    \ {\n    return exchange(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3, 4), array(1, 2, 3, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4), array(1, 5, 3, 4)) !== \"NO\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4), array(2,\
    \ 1, 4, 3)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 7, 3), array(2, 6, 4)) !== \"YES\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(5, 7, 3), array(2, 6, 3)) !== \"NO\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 6, 1, 8, 9), array(3,\
    \ 5, 5, 1, 1, 1)) !== \"NO\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(100, 200), array(200, 200)) !== \"YES\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpj_fmogpb.php:41\n\
    Stack trace:\n#0 /tmp/tmpj_fmogpb.php(50): test()\n#1 {main}\n  thrown in /tmp/tmpj_fmogpb.php\
    \ on line 41\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// In this problem, you will implement a function that takes two\
    \ lists of numbers,\n// and determines whether it is possible to perform an exchange\
    \ of elements\n// between them to make lst1 a list of only even numbers.\n// There\
    \ is no limit on the number of exchanged elements between lst1 and lst2.\n// If\
    \ it is possible to exchange elements between the lst1 and lst2 to make\n// all\
    \ the elements of lst1 to be even, return \"YES\".\n// Otherwise, return \"NO\"\
    .\n// For example:\n// exchange([1, 2, 3, 4], [1, 2, 3, 4]) => \"YES\"\n// exchange([1,\
    \ 2, 3, 4], [1, 5, 3, 4]) => \"NO\"\n// It is assumed that the input lists will\
    \ be non-empty.\nfunction exchange($lst1, $lst2) {\n    $evens = 0;\n    $odds\
    \ = 0;\n    foreach ($lst1 as $num) {\n        if ($num % 2 == 0) {\n        \
    \    $evens++;\n        } else {\n            $odds++;\n        }\n    }\n   \
    \ foreach ($lst2 as $num) {\n        if ($num % 2 == 0) {\n            $evens++;\n\
    \        } else {\n            $odds++;\n        }\n    }\n    if ($evens % 2\
    \ == 0) {\n        return \"YES\";\n    } else {\n        return \"NO\";\n   \
    \ }\n}\nfunction candidate(...$args) {\n    return exchange(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(1, 2, 3, 4), array(1, 2, 3, 4))\
    \ !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4), array(1, 5, 3, 4)) !== \"NO\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4), array(2, 1, 4, 3)) !== \"YES\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 7, 3), array(2,\
    \ 6, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 7, 3), array(2, 6, 3)) !== \"NO\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(3, 2, 6, 1, 8, 9), array(3, 5, 5, 1, 1, 1)) !== \"\
    NO\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ 200), array(200, 200)) !== \"YES\") { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp7r9wp9n_.php:44\n\
    Stack trace:\n#0 /tmp/tmp7r9wp9n_.php(50): test()\n#1 {main}\n  thrown in /tmp/tmp7r9wp9n_.php\
    \ on line 44\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// In this problem, you will implement a function that takes two\
    \ lists of numbers,\n// and determines whether it is possible to perform an exchange\
    \ of elements\n// between them to make lst1 a list of only even numbers.\n// There\
    \ is no limit on the number of exchanged elements between lst1 and lst2.\n// If\
    \ it is possible to exchange elements between the lst1 and lst2 to make\n// all\
    \ the elements of lst1 to be even, return \"YES\".\n// Otherwise, return \"NO\"\
    .\n// For example:\n// exchange([1, 2, 3, 4], [1, 2, 3, 4]) => \"YES\"\n// exchange([1,\
    \ 2, 3, 4], [1, 5, 3, 4]) => \"NO\"\n// It is assumed that the input lists will\
    \ be non-empty.\nfunction exchange($lst1, $lst2) {\n  $odds = [];\n  $evens =\
    \ [];\n  foreach ($lst1 as $num) {\n    if ($num % 2 == 0) {\n      $evens[] =\
    \ $num;\n    } else {\n      $odds[] = $num;\n    }\n  }\n  foreach ($lst2 as\
    \ $num) {\n    if ($num % 2 == 0) {\n      $evens[] = $num;\n    } else {\n  \
    \    $odds[] = $num;\n    }\n  }\n  return count($evens) > count($odds) ? \"YES\"\
    \ : \"NO\";\n}\n\nfunction candidate(...$args) {\n    return exchange(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4), array(1, 2,\
    \ 3, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4), array(1, 5, 3, 4)) !== \"NO\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4), array(2, 1, 4, 3)) !== \"YES\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 7, 3), array(2,\
    \ 6, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 7, 3), array(2, 6, 3)) !== \"NO\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(3, 2, 6, 1, 8, 9), array(3, 5, 5, 1, 1, 1)) !== \"\
    NO\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ 200), array(200, 200)) !== \"YES\") { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpyj5wo0ia.php:38\n\
    Stack trace:\n#0 /tmp/tmpyj5wo0ia.php(47): test()\n#1 {main}\n  thrown in /tmp/tmpyj5wo0ia.php\
    \ on line 38\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// In this problem, you will implement a function that takes two\
    \ lists of numbers,\n// and determines whether it is possible to perform an exchange\
    \ of elements\n// between them to make lst1 a list of only even numbers.\n// There\
    \ is no limit on the number of exchanged elements between lst1 and lst2.\n// If\
    \ it is possible to exchange elements between the lst1 and lst2 to make\n// all\
    \ the elements of lst1 to be even, return \"YES\".\n// Otherwise, return \"NO\"\
    .\n// For example:\n// exchange([1, 2, 3, 4], [1, 2, 3, 4]) => \"YES\"\n// exchange([1,\
    \ 2, 3, 4], [1, 5, 3, 4]) => \"NO\"\n// It is assumed that the input lists will\
    \ be non-empty.\nfunction exchange($lst1, $lst2) {\n  $odds1 = array_filter($lst1,\
    \ function($n) { return $n % 2; });\n  $odds2 = array_filter($lst2, function($n)\
    \ { return $n % 2; });\n  return count($odds1) == count($odds2) ? \"YES\" : \"\
    NO\";\n}\n\nfunction candidate(...$args) {\n    return exchange(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4), array(1, 2, 3,\
    \ 4)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4), array(1, 5, 3, 4)) !== \"NO\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4), array(2, 1, 4, 3)) !== \"YES\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 7, 3), array(2,\
    \ 6, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 7, 3), array(2, 6, 3)) !== \"NO\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(3, 2, 6, 1, 8, 9), array(3, 5, 5, 1, 1, 1)) !== \"\
    NO\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ 200), array(200, 200)) !== \"YES\") { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpyze1k9g2.php:27\n\
    Stack trace:\n#0 /tmp/tmpyze1k9g2.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpyze1k9g2.php\
    \ on line 27\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// In this problem, you will implement a function that takes two\
    \ lists of numbers,\n// and determines whether it is possible to perform an exchange\
    \ of elements\n// between them to make lst1 a list of only even numbers.\n// There\
    \ is no limit on the number of exchanged elements between lst1 and lst2.\n// If\
    \ it is possible to exchange elements between the lst1 and lst2 to make\n// all\
    \ the elements of lst1 to be even, return \"YES\".\n// Otherwise, return \"NO\"\
    .\n// For example:\n// exchange([1, 2, 3, 4], [1, 2, 3, 4]) => \"YES\"\n// exchange([1,\
    \ 2, 3, 4], [1, 5, 3, 4]) => \"NO\"\n// It is assumed that the input lists will\
    \ be non-empty.\nfunction exchange($lst1, $lst2) {\n    $odds = array_filter($lst1,\
    \ function($n) { return $n % 2; });\n    $evens = array_filter($lst2, function($n)\
    \ { return !($n % 2); });\n    return count($odds) == count($evens) ? \"YES\"\
    \ : \"NO\";\n}\n\nfunction candidate(...$args) {\n    return exchange(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4), array(1, 2,\
    \ 3, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4), array(1, 5, 3, 4)) !== \"NO\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4), array(2, 1, 4, 3)) !== \"YES\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 7, 3), array(2,\
    \ 6, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 7, 3), array(2, 6, 3)) !== \"NO\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(3, 2, 6, 1, 8, 9), array(3, 5, 5, 1, 1, 1)) !== \"\
    NO\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ 200), array(200, 200)) !== \"YES\") { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp9afpt8yk.php:30\n\
    Stack trace:\n#0 /tmp/tmp9afpt8yk.php(33): test()\n#1 {main}\n  thrown in /tmp/tmp9afpt8yk.php\
    \ on line 30\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// In this problem, you will implement a function that takes two\
    \ lists of numbers,\n// and determines whether it is possible to perform an exchange\
    \ of elements\n// between them to make lst1 a list of only even numbers.\n// There\
    \ is no limit on the number of exchanged elements between lst1 and lst2.\n// If\
    \ it is possible to exchange elements between the lst1 and lst2 to make\n// all\
    \ the elements of lst1 to be even, return \"YES\".\n// Otherwise, return \"NO\"\
    .\n// For example:\n// exchange([1, 2, 3, 4], [1, 2, 3, 4]) => \"YES\"\n// exchange([1,\
    \ 2, 3, 4], [1, 5, 3, 4]) => \"NO\"\n// It is assumed that the input lists will\
    \ be non-empty.\nfunction exchange($lst1, $lst2) {\n  $even = 0;\n  $odd = 0;\n\
    \  foreach ($lst1 as $value) {\n    if ($value % 2 == 0) {\n      $even++;\n \
    \   } else {\n      $odd++;\n    }\n  }\n  foreach ($lst2 as $value) {\n    if\
    \ ($value % 2 == 0) {\n      $even++;\n    } else {\n      $odd++;\n    }\n  }\n\
    \  if ($even % 2 == 0 && $odd % 2 == 0) {\n    return \"YES\";\n  } else {\n \
    \   return \"NO\";\n  }\n}\n\nfunction candidate(...$args) {\n    return exchange(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4), array(1, 2,\
    \ 3, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4), array(1, 5, 3, 4)) !== \"NO\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4), array(2, 1, 4, 3)) !== \"YES\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 7, 3), array(2,\
    \ 6, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 7, 3), array(2, 6, 3)) !== \"NO\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(3, 2, 6, 1, 8, 9), array(3, 5, 5, 1, 1, 1)) !== \"\
    NO\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ 200), array(200, 200)) !== \"YES\") { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp3z2spwxn.php:45\n\
    Stack trace:\n#0 /tmp/tmp3z2spwxn.php(51): test()\n#1 {main}\n  thrown in /tmp/tmp3z2spwxn.php\
    \ on line 45\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// In this problem, you will implement a function that takes two\
    \ lists of numbers,\n// and determines whether it is possible to perform an exchange\
    \ of elements\n// between them to make lst1 a list of only even numbers.\n// There\
    \ is no limit on the number of exchanged elements between lst1 and lst2.\n// If\
    \ it is possible to exchange elements between the lst1 and lst2 to make\n// all\
    \ the elements of lst1 to be even, return \"YES\".\n// Otherwise, return \"NO\"\
    .\n// For example:\n// exchange([1, 2, 3, 4], [1, 2, 3, 4]) => \"YES\"\n// exchange([1,\
    \ 2, 3, 4], [1, 5, 3, 4]) => \"NO\"\n// It is assumed that the input lists will\
    \ be non-empty.\nfunction exchange($lst1, $lst2) {\n    $lst1_odd = array_filter($lst1,\
    \ function($n) {\n        return $n % 2;\n    });\n    $lst2_even = array_filter($lst2,\
    \ function($n) {\n        return !($n % 2);\n    });\n    return count($lst1_odd)\
    \ == count($lst2_even) ? \"YES\" : \"NO\";\n}\n\nfunction candidate(...$args)\
    \ {\n    return exchange(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3, 4), array(1, 2, 3, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4), array(1, 5, 3, 4)) !== \"NO\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4), array(2,\
    \ 1, 4, 3)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 7, 3), array(2, 6, 4)) !== \"YES\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(5, 7, 3), array(2, 6, 3)) !== \"NO\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 6, 1, 8, 9), array(3,\
    \ 5, 5, 1, 1, 1)) !== \"NO\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(100, 200), array(200, 200)) !== \"YES\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpjksphlky.php:34\n\
    Stack trace:\n#0 /tmp/tmpjksphlky.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpjksphlky.php\
    \ on line 34\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// In this problem, you will implement a function that takes two\
    \ lists of numbers,\n// and determines whether it is possible to perform an exchange\
    \ of elements\n// between them to make lst1 a list of only even numbers.\n// There\
    \ is no limit on the number of exchanged elements between lst1 and lst2.\n// If\
    \ it is possible to exchange elements between the lst1 and lst2 to make\n// all\
    \ the elements of lst1 to be even, return \"YES\".\n// Otherwise, return \"NO\"\
    .\n// For example:\n// exchange([1, 2, 3, 4], [1, 2, 3, 4]) => \"YES\"\n// exchange([1,\
    \ 2, 3, 4], [1, 5, 3, 4]) => \"NO\"\n// It is assumed that the input lists will\
    \ be non-empty.\nfunction exchange($lst1, $lst2) {\n    $even = array_filter($lst1,\
    \ function($x) {\n        return $x % 2 == 0;\n    });\n    $odd = array_filter($lst2,\
    \ function($x) {\n        return $x % 2 != 0;\n    });\n    return count($even)\
    \ == count($odd) ? \"YES\" : \"NO\";\n}\n\necho exchange([1, 2, 3, 4], [1, 2,\
    \ 3, 4]) . \"\\n\";\necho exchange([1, 2, 3, 4], [1, 5, 3, 4]) . \"\\n\";\necho\
    \ exchange([1, 2, 3, 4], [1, 5, 3, 4, 6]) . \"\\n\";\necho exchange([1, 2, 3,\
    \ 4], [1, 5, 3, 4, 6, 7]) . \"\\n\";\necho exchange([1, 2, 3, 4], [1, 5, 3, 4,\
    \ 6, 7, 8]) . \"\\n\";\necho exchange([1, 2, 3, 4], [1, 5, 3, 4, 6, 7, 8, 9])\
    \ . \"\\n\";\necho exchange([1, 2, 3, 4], [1, 5, 3, 4, 6, 7, 8, 9, 10]) . \"\\\
    n\";\necho exchange([1, 2, 3, 4], [1, 5, 3, 4, 6, 7, 8, 9, 10, 11]) . \"\\n\"\
    ;\necho exchange([1, 2, 3, 4], [1, 5, 3, 4, 6, 7, 8, 9, 10, 11, 12]) . \"\\n\"\
    ;\necho exchange([1, 2, 3, 4], [1, 5, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13]) . \"\\\
    n\";\necho exchange([1, 2, 3, 4], [1, 5, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14])\
    \ . \"\\n\";\necho exchange([1, 2, 3, 4], [1, 5, 3, 4, 6, 7, 8, 9, 10, 11, 12,\
    \ 13, 14, 15]) . \"\\n\";\necho exchange([1, 2, 3, 4], [1, 5,\nfunction candidate(...$args)\
    \ {\n    return exchange(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3, 4), array(1, 2, 3, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4), array(1, 5, 3, 4)) !== \"NO\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4), array(2,\
    \ 1, 4, 3)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 7, 3), array(2, 6, 4)) !== \"YES\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(5, 7, 3), array(2, 6, 3)) !== \"NO\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 6, 1, 8, 9), array(3,\
    \ 5, 5, 1, 1, 1)) !== \"NO\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(100, 200), array(200, 200)) !== \"YES\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Parse error:  syntax error, unexpected identifier \"candidate\", expecting\
    \ \"(\" in /tmp/tmph2kyyafv.php on line 36\n"
  exit_code: 255
  status: SyntaxError
- program: "<?php\n// In this problem, you will implement a function that takes two\
    \ lists of numbers,\n// and determines whether it is possible to perform an exchange\
    \ of elements\n// between them to make lst1 a list of only even numbers.\n// There\
    \ is no limit on the number of exchanged elements between lst1 and lst2.\n// If\
    \ it is possible to exchange elements between the lst1 and lst2 to make\n// all\
    \ the elements of lst1 to be even, return \"YES\".\n// Otherwise, return \"NO\"\
    .\n// For example:\n// exchange([1, 2, 3, 4], [1, 2, 3, 4]) => \"YES\"\n// exchange([1,\
    \ 2, 3, 4], [1, 5, 3, 4]) => \"NO\"\n// It is assumed that the input lists will\
    \ be non-empty.\nfunction exchange($lst1, $lst2) {\n  $odds = [];\n  $evens =\
    \ [];\n  foreach ($lst1 as $num) {\n    if ($num % 2 === 0) {\n      $evens[]\
    \ = $num;\n    } else {\n      $odds[] = $num;\n    }\n  }\n  foreach ($lst2 as\
    \ $num) {\n    if ($num % 2 === 0) {\n      $evens[] = $num;\n    } else {\n \
    \     $odds[] = $num;\n    }\n  }\n  if (count($evens) > count($odds)) {\n   \
    \ return \"YES\";\n  } else {\n    return \"NO\";\n  }\n}\n\nfunction candidate(...$args)\
    \ {\n    return exchange(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3, 4), array(1, 2, 3, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4), array(1, 5, 3, 4)) !== \"NO\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4), array(2,\
    \ 1, 4, 3)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 7, 3), array(2, 6, 4)) !== \"YES\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(5, 7, 3), array(2, 6, 3)) !== \"NO\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 6, 1, 8, 9), array(3,\
    \ 5, 5, 1, 1, 1)) !== \"NO\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(100, 200), array(200, 200)) !== \"YES\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpd_7rtvc0.php:42\n\
    Stack trace:\n#0 /tmp/tmpd_7rtvc0.php(51): test()\n#1 {main}\n  thrown in /tmp/tmpd_7rtvc0.php\
    \ on line 42\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// In this problem, you will implement a function that takes two\
    \ lists of numbers,\n// and determines whether it is possible to perform an exchange\
    \ of elements\n// between them to make lst1 a list of only even numbers.\n// There\
    \ is no limit on the number of exchanged elements between lst1 and lst2.\n// If\
    \ it is possible to exchange elements between the lst1 and lst2 to make\n// all\
    \ the elements of lst1 to be even, return \"YES\".\n// Otherwise, return \"NO\"\
    .\n// For example:\n// exchange([1, 2, 3, 4], [1, 2, 3, 4]) => \"YES\"\n// exchange([1,\
    \ 2, 3, 4], [1, 5, 3, 4]) => \"NO\"\n// It is assumed that the input lists will\
    \ be non-empty.\nfunction exchange($lst1, $lst2) {\n    $odds = [];\n    $evens\
    \ = [];\n    foreach ($lst1 as $number) {\n        if ($number % 2 === 0) {\n\
    \            $evens[] = $number;\n        } else {\n            $odds[] = $number;\n\
    \        }\n    }\n    foreach ($lst2 as $number) {\n        if ($number % 2 ===\
    \ 0) {\n            $evens[] = $number;\n        } else {\n            $odds[]\
    \ = $number;\n        }\n    }\n    if (count($odds) === 0) {\n        return\
    \ \"YES\";\n    } elseif (count($evens) === 0) {\n        return \"NO\";\n   \
    \ } else {\n        return \"YES\";\n    }\n}\n\nfunction candidate(...$args)\
    \ {\n    return exchange(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3, 4), array(1, 2, 3, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4), array(1, 5, 3, 4)) !== \"NO\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4), array(2,\
    \ 1, 4, 3)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 7, 3), array(2, 6, 4)) !== \"YES\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(5, 7, 3), array(2, 6, 3)) !== \"NO\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 6, 1, 8, 9), array(3,\
    \ 5, 5, 1, 1, 1)) !== \"NO\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(100, 200), array(200, 200)) !== \"YES\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp3734jjhm.php:45\n\
    Stack trace:\n#0 /tmp/tmp3734jjhm.php(53): test()\n#1 {main}\n  thrown in /tmp/tmp3734jjhm.php\
    \ on line 45\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// In this problem, you will implement a function that takes two\
    \ lists of numbers,\n// and determines whether it is possible to perform an exchange\
    \ of elements\n// between them to make lst1 a list of only even numbers.\n// There\
    \ is no limit on the number of exchanged elements between lst1 and lst2.\n// If\
    \ it is possible to exchange elements between the lst1 and lst2 to make\n// all\
    \ the elements of lst1 to be even, return \"YES\".\n// Otherwise, return \"NO\"\
    .\n// For example:\n// exchange([1, 2, 3, 4], [1, 2, 3, 4]) => \"YES\"\n// exchange([1,\
    \ 2, 3, 4], [1, 5, 3, 4]) => \"NO\"\n// It is assumed that the input lists will\
    \ be non-empty.\nfunction exchange($lst1, $lst2) {\n    $even = array_filter($lst1,\
    \ function($n) { return $n % 2 == 0; });\n    $odd = array_filter($lst2, function($n)\
    \ { return $n % 2 != 0; });\n    return count($even) + count($odd) >= count($lst1)\
    \ ? \"YES\" : \"NO\";\n}\n\nfunction candidate(...$args) {\n    return exchange(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4), array(1, 2,\
    \ 3, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4), array(1, 5, 3, 4)) !== \"NO\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4), array(2, 1, 4, 3)) !== \"YES\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 7, 3), array(2,\
    \ 6, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 7, 3), array(2, 6, 3)) !== \"NO\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(3, 2, 6, 1, 8, 9), array(3, 5, 5, 1, 1, 1)) !== \"\
    NO\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ 200), array(200, 200)) !== \"YES\") { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp8pr1r0tc.php:25\n\
    Stack trace:\n#0 /tmp/tmp8pr1r0tc.php(33): test()\n#1 {main}\n  thrown in /tmp/tmp8pr1r0tc.php\
    \ on line 25\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// In this problem, you will implement a function that takes two\
    \ lists of numbers,\n// and determines whether it is possible to perform an exchange\
    \ of elements\n// between them to make lst1 a list of only even numbers.\n// There\
    \ is no limit on the number of exchanged elements between lst1 and lst2.\n// If\
    \ it is possible to exchange elements between the lst1 and lst2 to make\n// all\
    \ the elements of lst1 to be even, return \"YES\".\n// Otherwise, return \"NO\"\
    .\n// For example:\n// exchange([1, 2, 3, 4], [1, 2, 3, 4]) => \"YES\"\n// exchange([1,\
    \ 2, 3, 4], [1, 5, 3, 4]) => \"NO\"\n// It is assumed that the input lists will\
    \ be non-empty.\nfunction exchange($lst1, $lst2) {\n    $odds = [];\n    $evens\
    \ = [];\n    foreach ($lst1 as $num) {\n        if ($num % 2 === 0) {\n      \
    \      $evens[] = $num;\n        } else {\n            $odds[] = $num;\n     \
    \   }\n    }\n    foreach ($lst2 as $num) {\n        if ($num % 2 === 0) {\n \
    \           $evens[] = $num;\n        } else {\n            $odds[] = $num;\n\
    \        }\n    }\n    if (count($odds) > count($evens)) {\n        return \"\
    NO\";\n    }\n    return \"YES\";\n}\n\nfunction candidate(...$args) {\n    return\
    \ exchange(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3, 4), array(1, 2, 3, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4), array(1, 5, 3, 4)) !== \"NO\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4), array(2,\
    \ 1, 4, 3)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 7, 3), array(2, 6, 4)) !== \"YES\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(5, 7, 3), array(2, 6, 3)) !== \"NO\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 6, 1, 8, 9), array(3,\
    \ 5, 5, 1, 1, 1)) !== \"NO\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(100, 200), array(200, 200)) !== \"YES\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// In this problem, you will implement a function that takes two\
    \ lists of numbers,\n// and determines whether it is possible to perform an exchange\
    \ of elements\n// between them to make lst1 a list of only even numbers.\n// There\
    \ is no limit on the number of exchanged elements between lst1 and lst2.\n// If\
    \ it is possible to exchange elements between the lst1 and lst2 to make\n// all\
    \ the elements of lst1 to be even, return \"YES\".\n// Otherwise, return \"NO\"\
    .\n// For example:\n// exchange([1, 2, 3, 4], [1, 2, 3, 4]) => \"YES\"\n// exchange([1,\
    \ 2, 3, 4], [1, 5, 3, 4]) => \"NO\"\n// It is assumed that the input lists will\
    \ be non-empty.\nfunction exchange($lst1, $lst2) {\n  $evens = array_filter($lst1,\
    \ function($num) {\n    return $num % 2 == 0;\n  });\n  $odds = array_filter($lst2,\
    \ function($num) {\n    return $num % 2 != 0;\n  });\n  return count($evens) ==\
    \ count($odds) ? \"YES\" : \"NO\";\n}\n\nfunction candidate(...$args) {\n    return\
    \ exchange(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3, 4), array(1, 2, 3, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4), array(1, 5, 3, 4)) !== \"NO\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4), array(2,\
    \ 1, 4, 3)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 7, 3), array(2, 6, 4)) !== \"YES\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(5, 7, 3), array(2, 6, 3)) !== \"NO\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 6, 1, 8, 9), array(3,\
    \ 5, 5, 1, 1, 1)) !== \"NO\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(100, 200), array(200, 200)) !== \"YES\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmptjmg0rir.php:34\n\
    Stack trace:\n#0 /tmp/tmptjmg0rir.php(37): test()\n#1 {main}\n  thrown in /tmp/tmptjmg0rir.php\
    \ on line 34\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// In this problem, you will implement a function that takes two\
    \ lists of numbers,\n// and determines whether it is possible to perform an exchange\
    \ of elements\n// between them to make lst1 a list of only even numbers.\n// There\
    \ is no limit on the number of exchanged elements between lst1 and lst2.\n// If\
    \ it is possible to exchange elements between the lst1 and lst2 to make\n// all\
    \ the elements of lst1 to be even, return \"YES\".\n// Otherwise, return \"NO\"\
    .\n// For example:\n// exchange([1, 2, 3, 4], [1, 2, 3, 4]) => \"YES\"\n// exchange([1,\
    \ 2, 3, 4], [1, 5, 3, 4]) => \"NO\"\n// It is assumed that the input lists will\
    \ be non-empty.\nfunction exchange($lst1, $lst2) {\n    $odds = 0;\n    foreach\
    \ ($lst1 as $num) {\n        if ($num % 2 !== 0) {\n            $odds++;\n   \
    \     }\n    }\n    foreach ($lst2 as $num) {\n        if ($num % 2 !== 0) {\n\
    \            $odds--;\n        }\n    }\n    return $odds === 0 ? \"YES\" : \"\
    NO\";\n}\n\nfunction candidate(...$args) {\n    return exchange(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4), array(1, 2, 3,\
    \ 4)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4), array(1, 5, 3, 4)) !== \"NO\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4), array(2, 1, 4, 3)) !== \"YES\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 7, 3), array(2,\
    \ 6, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 7, 3), array(2, 6, 3)) !== \"NO\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(3, 2, 6, 1, 8, 9), array(3, 5, 5, 1, 1, 1)) !== \"\
    NO\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ 200), array(200, 200)) !== \"YES\") { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp5u5olflr.php:36\n\
    Stack trace:\n#0 /tmp/tmp5u5olflr.php(42): test()\n#1 {main}\n  thrown in /tmp/tmp5u5olflr.php\
    \ on line 36\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// In this problem, you will implement a function that takes two\
    \ lists of numbers,\n// and determines whether it is possible to perform an exchange\
    \ of elements\n// between them to make lst1 a list of only even numbers.\n// There\
    \ is no limit on the number of exchanged elements between lst1 and lst2.\n// If\
    \ it is possible to exchange elements between the lst1 and lst2 to make\n// all\
    \ the elements of lst1 to be even, return \"YES\".\n// Otherwise, return \"NO\"\
    .\n// For example:\n// exchange([1, 2, 3, 4], [1, 2, 3, 4]) => \"YES\"\n// exchange([1,\
    \ 2, 3, 4], [1, 5, 3, 4]) => \"NO\"\n// It is assumed that the input lists will\
    \ be non-empty.\nfunction exchange($lst1, $lst2) {\n    $odds = array_filter($lst1,\
    \ function($n) { return $n % 2 !== 0; });\n    $evens = array_filter($lst2, function($n)\
    \ { return $n % 2 === 0; });\n    return count($odds) === count($evens) ? \"YES\"\
    \ : \"NO\";\n}\n\nfunction candidate(...$args) {\n    return exchange(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4), array(1, 2,\
    \ 3, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4), array(1, 5, 3, 4)) !== \"NO\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4), array(2, 1, 4, 3)) !== \"YES\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 7, 3), array(2,\
    \ 6, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 7, 3), array(2, 6, 3)) !== \"NO\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(3, 2, 6, 1, 8, 9), array(3, 5, 5, 1, 1, 1)) !== \"\
    NO\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ 200), array(200, 200)) !== \"YES\") { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp_ws823kq.php:30\n\
    Stack trace:\n#0 /tmp/tmp_ws823kq.php(33): test()\n#1 {main}\n  thrown in /tmp/tmp_ws823kq.php\
    \ on line 30\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// In this problem, you will implement a function that takes two\
    \ lists of numbers,\n// and determines whether it is possible to perform an exchange\
    \ of elements\n// between them to make lst1 a list of only even numbers.\n// There\
    \ is no limit on the number of exchanged elements between lst1 and lst2.\n// If\
    \ it is possible to exchange elements between the lst1 and lst2 to make\n// all\
    \ the elements of lst1 to be even, return \"YES\".\n// Otherwise, return \"NO\"\
    .\n// For example:\n// exchange([1, 2, 3, 4], [1, 2, 3, 4]) => \"YES\"\n// exchange([1,\
    \ 2, 3, 4], [1, 5, 3, 4]) => \"NO\"\n// It is assumed that the input lists will\
    \ be non-empty.\nfunction exchange($lst1, $lst2) {\n    $even = 0;\n    $odd =\
    \ 0;\n    foreach ($lst1 as $value) {\n        if ($value % 2 == 0) {\n      \
    \      $even++;\n        } else {\n            $odd++;\n        }\n    }\n   \
    \ foreach ($lst2 as $value) {\n        if ($value % 2 == 0) {\n            $even++;\n\
    \        } else {\n            $odd++;\n        }\n    }\n    if ($even % 2 ==\
    \ 0) {\n        return \"YES\";\n    } else {\n        return \"NO\";\n    }\n\
    }\n\nfunction candidate(...$args) {\n    return exchange(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 2, 3, 4), array(1, 2, 3, 4)) !==\
    \ \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4), array(1, 5, 3, 4)) !== \"NO\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4), array(2, 1, 4, 3)) !== \"YES\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 7, 3), array(2,\
    \ 6, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 7, 3), array(2, 6, 3)) !== \"NO\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(3, 2, 6, 1, 8, 9), array(3, 5, 5, 1, 1, 1)) !== \"\
    NO\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ 200), array(200, 200)) !== \"YES\") { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpjw7250b7.php:45\n\
    Stack trace:\n#0 /tmp/tmpjw7250b7.php(51): test()\n#1 {main}\n  thrown in /tmp/tmpjw7250b7.php\
    \ on line 45\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// In this problem, you will implement a function that takes two\
    \ lists of numbers,\n// and determines whether it is possible to perform an exchange\
    \ of elements\n// between them to make lst1 a list of only even numbers.\n// There\
    \ is no limit on the number of exchanged elements between lst1 and lst2.\n// If\
    \ it is possible to exchange elements between the lst1 and lst2 to make\n// all\
    \ the elements of lst1 to be even, return \"YES\".\n// Otherwise, return \"NO\"\
    .\n// For example:\n// exchange([1, 2, 3, 4], [1, 2, 3, 4]) => \"YES\"\n// exchange([1,\
    \ 2, 3, 4], [1, 5, 3, 4]) => \"NO\"\n// It is assumed that the input lists will\
    \ be non-empty.\nfunction exchange($lst1, $lst2) {\n    $odds = 0;\n    $evens\
    \ = 0;\n    foreach ($lst1 as $number) {\n        if ($number % 2 == 0) {\n  \
    \          $evens++;\n        } else {\n            $odds++;\n        }\n    }\n\
    \    foreach ($lst2 as $number) {\n        if ($number % 2 == 0) {\n         \
    \   $evens++;\n        } else {\n            $odds++;\n        }\n    }\n    if\
    \ ($evens % 2 == 0) {\n        return \"YES\";\n    } else {\n        return \"\
    NO\";\n    }\n}\nfunction candidate(...$args) {\n    return exchange(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4), array(1, 2,\
    \ 3, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4), array(1, 5, 3, 4)) !== \"NO\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4), array(2, 1, 4, 3)) !== \"YES\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 7, 3), array(2,\
    \ 6, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 7, 3), array(2, 6, 3)) !== \"NO\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(3, 2, 6, 1, 8, 9), array(3, 5, 5, 1, 1, 1)) !== \"\
    NO\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ 200), array(200, 200)) !== \"YES\") { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp6jv1vaa5.php:44\n\
    Stack trace:\n#0 /tmp/tmp6jv1vaa5.php(50): test()\n#1 {main}\n  thrown in /tmp/tmp6jv1vaa5.php\
    \ on line 44\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// In this problem, you will implement a function that takes two\
    \ lists of numbers,\n// and determines whether it is possible to perform an exchange\
    \ of elements\n// between them to make lst1 a list of only even numbers.\n// There\
    \ is no limit on the number of exchanged elements between lst1 and lst2.\n// If\
    \ it is possible to exchange elements between the lst1 and lst2 to make\n// all\
    \ the elements of lst1 to be even, return \"YES\".\n// Otherwise, return \"NO\"\
    .\n// For example:\n// exchange([1, 2, 3, 4], [1, 2, 3, 4]) => \"YES\"\n// exchange([1,\
    \ 2, 3, 4], [1, 5, 3, 4]) => \"NO\"\n// It is assumed that the input lists will\
    \ be non-empty.\nfunction exchange($lst1, $lst2) {\n    $evens = array_filter($lst1,\
    \ function($n) { return $n % 2 == 0; });\n    $odds = array_filter($lst2, function($n)\
    \ { return $n % 2 == 1; });\n    return count($evens) == count($odds) ? \"YES\"\
    \ : \"NO\";\n}\n\nfunction candidate(...$args) {\n    return exchange(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4), array(1, 2,\
    \ 3, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4), array(1, 5, 3, 4)) !== \"NO\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4), array(2, 1, 4, 3)) !== \"YES\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 7, 3), array(2,\
    \ 6, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 7, 3), array(2, 6, 3)) !== \"NO\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(3, 2, 6, 1, 8, 9), array(3, 5, 5, 1, 1, 1)) !== \"\
    NO\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ 200), array(200, 200)) !== \"YES\") { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmplage_66f.php:30\n\
    Stack trace:\n#0 /tmp/tmplage_66f.php(33): test()\n#1 {main}\n  thrown in /tmp/tmplage_66f.php\
    \ on line 30\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// In this problem, you will implement a function that takes two\
    \ lists of numbers,\n// and determines whether it is possible to perform an exchange\
    \ of elements\n// between them to make lst1 a list of only even numbers.\n// There\
    \ is no limit on the number of exchanged elements between lst1 and lst2.\n// If\
    \ it is possible to exchange elements between the lst1 and lst2 to make\n// all\
    \ the elements of lst1 to be even, return \"YES\".\n// Otherwise, return \"NO\"\
    .\n// For example:\n// exchange([1, 2, 3, 4], [1, 2, 3, 4]) => \"YES\"\n// exchange([1,\
    \ 2, 3, 4], [1, 5, 3, 4]) => \"NO\"\n// It is assumed that the input lists will\
    \ be non-empty.\nfunction exchange($lst1, $lst2) {\n  $evens = 0;\n  $odds = 0;\n\
    \  foreach ($lst1 as $num) {\n    if ($num % 2 == 0) {\n      $evens++;\n    }\
    \ else {\n      $odds++;\n    }\n  }\n  foreach ($lst2 as $num) {\n    if ($num\
    \ % 2 == 0) {\n      $evens++;\n    } else {\n      $odds++;\n    }\n  }\n  if\
    \ ($evens > $odds) {\n    return \"YES\";\n  } else {\n    return \"NO\";\n  }\n\
    }\n\nfunction candidate(...$args) {\n    return exchange(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 2, 3, 4), array(1, 2, 3, 4)) !==\
    \ \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4), array(1, 5, 3, 4)) !== \"NO\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4), array(2, 1, 4, 3)) !== \"YES\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 7, 3), array(2,\
    \ 6, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 7, 3), array(2, 6, 3)) !== \"NO\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(3, 2, 6, 1, 8, 9), array(3, 5, 5, 1, 1, 1)) !== \"\
    NO\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ 200), array(200, 200)) !== \"YES\") { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpt3dbigkp.php:42\n\
    Stack trace:\n#0 /tmp/tmpt3dbigkp.php(51): test()\n#1 {main}\n  thrown in /tmp/tmpt3dbigkp.php\
    \ on line 42\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// In this problem, you will implement a function that takes two\
    \ lists of numbers,\n// and determines whether it is possible to perform an exchange\
    \ of elements\n// between them to make lst1 a list of only even numbers.\n// There\
    \ is no limit on the number of exchanged elements between lst1 and lst2.\n// If\
    \ it is possible to exchange elements between the lst1 and lst2 to make\n// all\
    \ the elements of lst1 to be even, return \"YES\".\n// Otherwise, return \"NO\"\
    .\n// For example:\n// exchange([1, 2, 3, 4], [1, 2, 3, 4]) => \"YES\"\n// exchange([1,\
    \ 2, 3, 4], [1, 5, 3, 4]) => \"NO\"\n// It is assumed that the input lists will\
    \ be non-empty.\nfunction exchange($lst1, $lst2) {\n    $odds = [];\n    $evens\
    \ = [];\n    foreach ($lst1 as $num) {\n        if ($num % 2 === 0) {\n      \
    \      $evens[] = $num;\n        } else {\n            $odds[] = $num;\n     \
    \   }\n    }\n    foreach ($lst2 as $num) {\n        if ($num % 2 === 0) {\n \
    \           $evens[] = $num;\n        } else {\n            $odds[] = $num;\n\
    \        }\n    }\n    if (count($evens) > count($odds)) {\n        return \"\
    YES\";\n    } else {\n        return \"NO\";\n    }\n}\n\nfunction candidate(...$args)\
    \ {\n    return exchange(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3, 4), array(1, 2, 3, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4), array(1, 5, 3, 4)) !== \"NO\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4), array(2,\
    \ 1, 4, 3)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 7, 3), array(2, 6, 4)) !== \"YES\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(5, 7, 3), array(2, 6, 3)) !== \"NO\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 6, 1, 8, 9), array(3,\
    \ 5, 5, 1, 1, 1)) !== \"NO\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(100, 200), array(200, 200)) !== \"YES\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpuz8bqw7p.php:42\n\
    Stack trace:\n#0 /tmp/tmpuz8bqw7p.php(51): test()\n#1 {main}\n  thrown in /tmp/tmpuz8bqw7p.php\
    \ on line 42\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// In this problem, you will implement a function that takes two\
    \ lists of numbers,\n// and determines whether it is possible to perform an exchange\
    \ of elements\n// between them to make lst1 a list of only even numbers.\n// There\
    \ is no limit on the number of exchanged elements between lst1 and lst2.\n// If\
    \ it is possible to exchange elements between the lst1 and lst2 to make\n// all\
    \ the elements of lst1 to be even, return \"YES\".\n// Otherwise, return \"NO\"\
    .\n// For example:\n// exchange([1, 2, 3, 4], [1, 2, 3, 4]) => \"YES\"\n// exchange([1,\
    \ 2, 3, 4], [1, 5, 3, 4]) => \"NO\"\n// It is assumed that the input lists will\
    \ be non-empty.\nfunction exchange($lst1, $lst2) {\n    $odds = [];\n    $evens\
    \ = [];\n    foreach ($lst1 as $num) {\n        if ($num % 2 === 0) {\n      \
    \      $evens[] = $num;\n        } else {\n            $odds[] = $num;\n     \
    \   }\n    }\n    foreach ($lst2 as $num) {\n        if ($num % 2 === 0) {\n \
    \           $evens[] = $num;\n        } else {\n            $odds[] = $num;\n\
    \        }\n    }\n    if (count($odds) === 0) {\n        return \"YES\";\n  \
    \  } elseif (count($evens) === 0) {\n        return \"NO\";\n    } else {\n  \
    \      return \"YES\";\n    }\n}\n\nfunction candidate(...$args) {\n    return\
    \ exchange(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3, 4), array(1, 2, 3, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4), array(1, 5, 3, 4)) !== \"NO\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4), array(2,\
    \ 1, 4, 3)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 7, 3), array(2, 6, 4)) !== \"YES\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(5, 7, 3), array(2, 6, 3)) !== \"NO\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 6, 1, 8, 9), array(3,\
    \ 5, 5, 1, 1, 1)) !== \"NO\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(100, 200), array(200, 200)) !== \"YES\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpedmth9xb.php:45\n\
    Stack trace:\n#0 /tmp/tmpedmth9xb.php(53): test()\n#1 {main}\n  thrown in /tmp/tmpedmth9xb.php\
    \ on line 45\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// In this problem, you will implement a function that takes two\
    \ lists of numbers,\n// and determines whether it is possible to perform an exchange\
    \ of elements\n// between them to make lst1 a list of only even numbers.\n// There\
    \ is no limit on the number of exchanged elements between lst1 and lst2.\n// If\
    \ it is possible to exchange elements between the lst1 and lst2 to make\n// all\
    \ the elements of lst1 to be even, return \"YES\".\n// Otherwise, return \"NO\"\
    .\n// For example:\n// exchange([1, 2, 3, 4], [1, 2, 3, 4]) => \"YES\"\n// exchange([1,\
    \ 2, 3, 4], [1, 5, 3, 4]) => \"NO\"\n// It is assumed that the input lists will\
    \ be non-empty.\nfunction exchange($lst1, $lst2) {\n  $odds = array_filter($lst1,\
    \ function($n) { return $n % 2 != 0; });\n  $evens = array_filter($lst2, function($n)\
    \ { return $n % 2 == 0; });\n  return count($odds) == count($evens) ? \"YES\"\
    \ : \"NO\";\n}\n\nfunction candidate(...$args) {\n    return exchange(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4), array(1, 2,\
    \ 3, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4), array(1, 5, 3, 4)) !== \"NO\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4), array(2, 1, 4, 3)) !== \"YES\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 7, 3), array(2,\
    \ 6, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 7, 3), array(2, 6, 3)) !== \"NO\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(3, 2, 6, 1, 8, 9), array(3, 5, 5, 1, 1, 1)) !== \"\
    NO\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ 200), array(200, 200)) !== \"YES\") { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpt9m8z34d.php:30\n\
    Stack trace:\n#0 /tmp/tmpt9m8z34d.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpt9m8z34d.php\
    \ on line 30\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// In this problem, you will implement a function that takes two\
    \ lists of numbers,\n// and determines whether it is possible to perform an exchange\
    \ of elements\n// between them to make lst1 a list of only even numbers.\n// There\
    \ is no limit on the number of exchanged elements between lst1 and lst2.\n// If\
    \ it is possible to exchange elements between the lst1 and lst2 to make\n// all\
    \ the elements of lst1 to be even, return \"YES\".\n// Otherwise, return \"NO\"\
    .\n// For example:\n// exchange([1, 2, 3, 4], [1, 2, 3, 4]) => \"YES\"\n// exchange([1,\
    \ 2, 3, 4], [1, 5, 3, 4]) => \"NO\"\n// It is assumed that the input lists will\
    \ be non-empty.\nfunction exchange($lst1, $lst2) {\n  $odds = 0;\n  $evens = 0;\n\
    \  for ($i = 0; $i < count($lst1); $i++) {\n    if ($lst1[$i] % 2 == 0) {\n  \
    \    $evens++;\n    } else {\n      $odds++;\n    }\n  }\n  for ($i = 0; $i <\
    \ count($lst2); $i++) {\n    if ($lst2[$i] % 2 == 0) {\n      $evens++;\n    }\
    \ else {\n      $odds++;\n    }\n  }\n  if ($evens > $odds) {\n    return \"YES\"\
    ;\n  } else {\n    return \"NO\";\n  }\n}\necho exchange([1, 2, 3, 4], [1, 2,\
    \ 3, 4]) . \"\\n\";\necho exchange([1, 2, 3, 4], [1, 5, 3, 4]) . \"\\n\";\nfunction\
    \ candidate(...$args) {\n    return exchange(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, 2, 3, 4), array(1, 2, 3, 4)) !== \"YES\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3,\
    \ 4), array(1, 5, 3, 4)) !== \"NO\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(1, 2, 3, 4), array(2, 1, 4, 3)) !== \"YES\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 7, 3), array(2,\
    \ 6, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 7, 3), array(2, 6, 3)) !== \"NO\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(3, 2, 6, 1, 8, 9), array(3, 5, 5, 1, 1, 1)) !== \"\
    NO\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ 200), array(200, 200)) !== \"YES\") { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: "NO\nNO\n"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpyz9f8hxq.php:43\n\
    Stack trace:\n#0 /tmp/tmpyz9f8hxq.php(52): test()\n#1 {main}\n  thrown in /tmp/tmpyz9f8hxq.php\
    \ on line 43\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// In this problem, you will implement a function that takes two\
    \ lists of numbers,\n// and determines whether it is possible to perform an exchange\
    \ of elements\n// between them to make lst1 a list of only even numbers.\n// There\
    \ is no limit on the number of exchanged elements between lst1 and lst2.\n// If\
    \ it is possible to exchange elements between the lst1 and lst2 to make\n// all\
    \ the elements of lst1 to be even, return \"YES\".\n// Otherwise, return \"NO\"\
    .\n// For example:\n// exchange([1, 2, 3, 4], [1, 2, 3, 4]) => \"YES\"\n// exchange([1,\
    \ 2, 3, 4], [1, 5, 3, 4]) => \"NO\"\n// It is assumed that the input lists will\
    \ be non-empty.\nfunction exchange($lst1, $lst2) {\n  // Your code here\n}\n\n\
    function candidate(...$args) {\n    return exchange(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 2, 3, 4), array(1, 2, 3, 4)) !==\
    \ \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4), array(1, 5, 3, 4)) !== \"NO\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4), array(2, 1, 4, 3)) !== \"YES\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 7, 3), array(2,\
    \ 6, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 7, 3), array(2, 6, 3)) !== \"NO\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(3, 2, 6, 1, 8, 9), array(3, 5, 5, 1, 1, 1)) !== \"\
    NO\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ 200), array(200, 200)) !== \"YES\") { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpzn38qfgm.php:22\n\
    Stack trace:\n#0 /tmp/tmpzn38qfgm.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpzn38qfgm.php\
    \ on line 22\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// In this problem, you will implement a function that takes two\
    \ lists of numbers,\n// and determines whether it is possible to perform an exchange\
    \ of elements\n// between them to make lst1 a list of only even numbers.\n// There\
    \ is no limit on the number of exchanged elements between lst1 and lst2.\n// If\
    \ it is possible to exchange elements between the lst1 and lst2 to make\n// all\
    \ the elements of lst1 to be even, return \"YES\".\n// Otherwise, return \"NO\"\
    .\n// For example:\n// exchange([1, 2, 3, 4], [1, 2, 3, 4]) => \"YES\"\n// exchange([1,\
    \ 2, 3, 4], [1, 5, 3, 4]) => \"NO\"\n// It is assumed that the input lists will\
    \ be non-empty.\nfunction exchange($lst1, $lst2) {\n    $lst1 = array_filter($lst1,\
    \ function($x) { return $x % 2 == 0; });\n    $lst2 = array_filter($lst2, function($x)\
    \ { return $x % 2 == 1; });\n    return count($lst1) == count($lst2) ? \"YES\"\
    \ : \"NO\";\n}\n\nfunction candidate(...$args) {\n    return exchange(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4), array(1, 2,\
    \ 3, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4), array(1, 5, 3, 4)) !== \"NO\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4), array(2, 1, 4, 3)) !== \"YES\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 7, 3), array(2,\
    \ 6, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 7, 3), array(2, 6, 3)) !== \"NO\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(3, 2, 6, 1, 8, 9), array(3, 5, 5, 1, 1, 1)) !== \"\
    NO\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ 200), array(200, 200)) !== \"YES\") { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmphxys_kp4.php:30\n\
    Stack trace:\n#0 /tmp/tmphxys_kp4.php(33): test()\n#1 {main}\n  thrown in /tmp/tmphxys_kp4.php\
    \ on line 30\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// In this problem, you will implement a function that takes two\
    \ lists of numbers,\n// and determines whether it is possible to perform an exchange\
    \ of elements\n// between them to make lst1 a list of only even numbers.\n// There\
    \ is no limit on the number of exchanged elements between lst1 and lst2.\n// If\
    \ it is possible to exchange elements between the lst1 and lst2 to make\n// all\
    \ the elements of lst1 to be even, return \"YES\".\n// Otherwise, return \"NO\"\
    .\n// For example:\n// exchange([1, 2, 3, 4], [1, 2, 3, 4]) => \"YES\"\n// exchange([1,\
    \ 2, 3, 4], [1, 5, 3, 4]) => \"NO\"\n// It is assumed that the input lists will\
    \ be non-empty.\nfunction exchange($lst1, $lst2) {\n    $odds = [];\n    $evens\
    \ = [];\n    foreach ($lst1 as $num) {\n        if ($num % 2 == 0) {\n       \
    \     $evens[] = $num;\n        } else {\n            $odds[] = $num;\n      \
    \  }\n    }\n    foreach ($lst2 as $num) {\n        if ($num % 2 == 0) {\n   \
    \         $evens[] = $num;\n        } else {\n            $odds[] = $num;\n  \
    \      }\n    }\n    if (count($odds) == 0) {\n        return \"YES\";\n    }\
    \ elseif (count($evens) == 0) {\n        return \"NO\";\n    } else {\n      \
    \  return \"YES\";\n    }\n}\n\nfunction candidate(...$args) {\n    return exchange(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4), array(1, 2,\
    \ 3, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4), array(1, 5, 3, 4)) !== \"NO\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4), array(2, 1, 4, 3)) !== \"YES\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 7, 3), array(2,\
    \ 6, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 7, 3), array(2, 6, 3)) !== \"NO\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(3, 2, 6, 1, 8, 9), array(3, 5, 5, 1, 1, 1)) !== \"\
    NO\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ 200), array(200, 200)) !== \"YES\") { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpqacu8xsa.php:45\n\
    Stack trace:\n#0 /tmp/tmpqacu8xsa.php(53): test()\n#1 {main}\n  thrown in /tmp/tmpqacu8xsa.php\
    \ on line 45\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// In this problem, you will implement a function that takes two\
    \ lists of numbers,\n// and determines whether it is possible to perform an exchange\
    \ of elements\n// between them to make lst1 a list of only even numbers.\n// There\
    \ is no limit on the number of exchanged elements between lst1 and lst2.\n// If\
    \ it is possible to exchange elements between the lst1 and lst2 to make\n// all\
    \ the elements of lst1 to be even, return \"YES\".\n// Otherwise, return \"NO\"\
    .\n// For example:\n// exchange([1, 2, 3, 4], [1, 2, 3, 4]) => \"YES\"\n// exchange([1,\
    \ 2, 3, 4], [1, 5, 3, 4]) => \"NO\"\n// It is assumed that the input lists will\
    \ be non-empty.\nfunction exchange($lst1, $lst2) {\n  $lst1 = array_filter($lst1,\
    \ function($x) { return $x % 2; });\n  $lst2 = array_filter($lst2, function($x)\
    \ { return !($x % 2); });\n  return count($lst1) == count($lst2) ? \"YES\" : \"\
    NO\";\n}\n\nfunction candidate(...$args) {\n    return exchange(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4), array(1, 2, 3,\
    \ 4)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4), array(1, 5, 3, 4)) !== \"NO\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4), array(2, 1, 4, 3)) !== \"YES\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 7, 3), array(2,\
    \ 6, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 7, 3), array(2, 6, 3)) !== \"NO\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(3, 2, 6, 1, 8, 9), array(3, 5, 5, 1, 1, 1)) !== \"\
    NO\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ 200), array(200, 200)) !== \"YES\") { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp60u4zv2c.php:30\n\
    Stack trace:\n#0 /tmp/tmp60u4zv2c.php(33): test()\n#1 {main}\n  thrown in /tmp/tmp60u4zv2c.php\
    \ on line 30\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// In this problem, you will implement a function that takes two\
    \ lists of numbers,\n// and determines whether it is possible to perform an exchange\
    \ of elements\n// between them to make lst1 a list of only even numbers.\n// There\
    \ is no limit on the number of exchanged elements between lst1 and lst2.\n// If\
    \ it is possible to exchange elements between the lst1 and lst2 to make\n// all\
    \ the elements of lst1 to be even, return \"YES\".\n// Otherwise, return \"NO\"\
    .\n// For example:\n// exchange([1, 2, 3, 4], [1, 2, 3, 4]) => \"YES\"\n// exchange([1,\
    \ 2, 3, 4], [1, 5, 3, 4]) => \"NO\"\n// It is assumed that the input lists will\
    \ be non-empty.\nfunction exchange($lst1, $lst2) {\n    $odds = [];\n    foreach\
    \ ($lst1 as $num) {\n        if ($num % 2 !== 0) {\n            $odds[] = $num;\n\
    \        }\n    }\n    foreach ($lst2 as $num) {\n        if ($num % 2 !== 0)\
    \ {\n            $odds[] = $num;\n        }\n    }\n    if (count($odds) % 2 ===\
    \ 0) {\n        return \"YES\";\n    }\n    return \"NO\";\n}\n\necho exchange([1,\
    \ 2, 3, 4], [1, 2, 3, 4]) . PHP_EOL;\necho exchange([1, 2, 3, 4], [1, 5, 3, 4])\
    \ . PHP_EOL;\nfunction candidate(...$args) {\n    return exchange(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4), array(1, 2,\
    \ 3, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4), array(1, 5, 3, 4)) !== \"NO\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4), array(2, 1, 4, 3)) !== \"YES\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 7, 3), array(2,\
    \ 6, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 7, 3), array(2, 6, 3)) !== \"NO\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(3, 2, 6, 1, 8, 9), array(3, 5, 5, 1, 1, 1)) !== \"\
    NO\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ 200), array(200, 200)) !== \"YES\") { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: "YES\nNO\n"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpbix4nv29.php:41\n\
    Stack trace:\n#0 /tmp/tmpbix4nv29.php(47): test()\n#1 {main}\n  thrown in /tmp/tmpbix4nv29.php\
    \ on line 41\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// In this problem, you will implement a function that takes two\
    \ lists of numbers,\n// and determines whether it is possible to perform an exchange\
    \ of elements\n// between them to make lst1 a list of only even numbers.\n// There\
    \ is no limit on the number of exchanged elements between lst1 and lst2.\n// If\
    \ it is possible to exchange elements between the lst1 and lst2 to make\n// all\
    \ the elements of lst1 to be even, return \"YES\".\n// Otherwise, return \"NO\"\
    .\n// For example:\n// exchange([1, 2, 3, 4], [1, 2, 3, 4]) => \"YES\"\n// exchange([1,\
    \ 2, 3, 4], [1, 5, 3, 4]) => \"NO\"\n// It is assumed that the input lists will\
    \ be non-empty.\nfunction exchange($lst1, $lst2) {\n    $odds = [];\n    $evens\
    \ = [];\n    foreach ($lst1 as $num) {\n        if ($num % 2 === 0) {\n      \
    \      $evens[] = $num;\n        } else {\n            $odds[] = $num;\n     \
    \   }\n    }\n    foreach ($lst2 as $num) {\n        if ($num % 2 === 0) {\n \
    \           $evens[] = $num;\n        } else {\n            $odds[] = $num;\n\
    \        }\n    }\n    if (count($evens) > count($odds)) {\n        return \"\
    YES\";\n    } else {\n        return \"NO\";\n    }\n}\n\necho exchange([1, 2,\
    \ 3, 4], [1, 2, 3, 4]) . PHP_EOL;\necho exchange([1, 2, 3, 4], [1, 5, 3, 4]) .\
    \ PHP_EOL;\nfunction candidate(...$args) {\n    return exchange(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4), array(1, 2, 3,\
    \ 4)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4), array(1, 5, 3, 4)) !== \"NO\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4), array(2, 1, 4, 3)) !== \"YES\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 7, 3), array(2,\
    \ 6, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 7, 3), array(2, 6, 3)) !== \"NO\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(3, 2, 6, 1, 8, 9), array(3, 5, 5, 1, 1, 1)) !== \"\
    NO\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ 200), array(200, 200)) !== \"YES\") { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: "NO\nNO\n"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpkop2muj5.php:44\n\
    Stack trace:\n#0 /tmp/tmpkop2muj5.php(53): test()\n#1 {main}\n  thrown in /tmp/tmpkop2muj5.php\
    \ on line 44\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// In this problem, you will implement a function that takes two\
    \ lists of numbers,\n// and determines whether it is possible to perform an exchange\
    \ of elements\n// between them to make lst1 a list of only even numbers.\n// There\
    \ is no limit on the number of exchanged elements between lst1 and lst2.\n// If\
    \ it is possible to exchange elements between the lst1 and lst2 to make\n// all\
    \ the elements of lst1 to be even, return \"YES\".\n// Otherwise, return \"NO\"\
    .\n// For example:\n// exchange([1, 2, 3, 4], [1, 2, 3, 4]) => \"YES\"\n// exchange([1,\
    \ 2, 3, 4], [1, 5, 3, 4]) => \"NO\"\n// It is assumed that the input lists will\
    \ be non-empty.\nfunction exchange($lst1, $lst2) {\n    $lst1 = array_filter($lst1,\
    \ function($n) { return $n % 2 === 0; });\n    $lst2 = array_filter($lst2, function($n)\
    \ { return $n % 2 !== 0; });\n    return count($lst1) === count($lst2) ? \"YES\"\
    \ : \"NO\";\n}\n\nfunction candidate(...$args) {\n    return exchange(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4), array(1, 2,\
    \ 3, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4), array(1, 5, 3, 4)) !== \"NO\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4), array(2, 1, 4, 3)) !== \"YES\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 7, 3), array(2,\
    \ 6, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 7, 3), array(2, 6, 3)) !== \"NO\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(3, 2, 6, 1, 8, 9), array(3, 5, 5, 1, 1, 1)) !== \"\
    NO\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ 200), array(200, 200)) !== \"YES\") { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpnjx_qada.php:30\n\
    Stack trace:\n#0 /tmp/tmpnjx_qada.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpnjx_qada.php\
    \ on line 30\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// In this problem, you will implement a function that takes two\
    \ lists of numbers,\n// and determines whether it is possible to perform an exchange\
    \ of elements\n// between them to make lst1 a list of only even numbers.\n// There\
    \ is no limit on the number of exchanged elements between lst1 and lst2.\n// If\
    \ it is possible to exchange elements between the lst1 and lst2 to make\n// all\
    \ the elements of lst1 to be even, return \"YES\".\n// Otherwise, return \"NO\"\
    .\n// For example:\n// exchange([1, 2, 3, 4], [1, 2, 3, 4]) => \"YES\"\n// exchange([1,\
    \ 2, 3, 4], [1, 5, 3, 4]) => \"NO\"\n// It is assumed that the input lists will\
    \ be non-empty.\nfunction exchange($lst1, $lst2) {\n    $odds = [];\n    $evens\
    \ = [];\n    foreach ($lst1 as $num) {\n        if ($num % 2 === 0) {\n      \
    \      $evens[] = $num;\n        } else {\n            $odds[] = $num;\n     \
    \   }\n    }\n    foreach ($lst2 as $num) {\n        if ($num % 2 === 0) {\n \
    \           $evens[] = $num;\n        } else {\n            $odds[] = $num;\n\
    \        }\n    }\n    if (count($evens) > count($odds)) {\n        return \"\
    YES\";\n    } else {\n        return \"NO\";\n    }\n}\n\nfunction candidate(...$args)\
    \ {\n    return exchange(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 2, 3, 4), array(1, 2, 3, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4), array(1, 5, 3, 4)) !== \"NO\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4), array(2,\
    \ 1, 4, 3)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 7, 3), array(2, 6, 4)) !== \"YES\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(5, 7, 3), array(2, 6, 3)) !== \"NO\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(3, 2, 6, 1, 8, 9), array(3,\
    \ 5, 5, 1, 1, 1)) !== \"NO\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(100, 200), array(200, 200)) !== \"YES\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp977a2qec.php:42\n\
    Stack trace:\n#0 /tmp/tmp977a2qec.php(51): test()\n#1 {main}\n  thrown in /tmp/tmp977a2qec.php\
    \ on line 42\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// In this problem, you will implement a function that takes two\
    \ lists of numbers,\n// and determines whether it is possible to perform an exchange\
    \ of elements\n// between them to make lst1 a list of only even numbers.\n// There\
    \ is no limit on the number of exchanged elements between lst1 and lst2.\n// If\
    \ it is possible to exchange elements between the lst1 and lst2 to make\n// all\
    \ the elements of lst1 to be even, return \"YES\".\n// Otherwise, return \"NO\"\
    .\n// For example:\n// exchange([1, 2, 3, 4], [1, 2, 3, 4]) => \"YES\"\n// exchange([1,\
    \ 2, 3, 4], [1, 5, 3, 4]) => \"NO\"\n// It is assumed that the input lists will\
    \ be non-empty.\nfunction exchange($lst1, $lst2) {\n    $lst1 = array_filter($lst1,\
    \ function($n) {\n        return $n % 2 == 0;\n    });\n    $lst2 = array_filter($lst2,\
    \ function($n) {\n        return $n % 2 != 0;\n    });\n    return count($lst1)\
    \ + count($lst2) == count($lst1) + count($lst2) ? \"YES\" : \"NO\";\n}\n\nfunction\
    \ candidate(...$args) {\n    return exchange(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, 2, 3, 4), array(1, 2, 3, 4)) !== \"YES\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3,\
    \ 4), array(1, 5, 3, 4)) !== \"NO\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(1, 2, 3, 4), array(2, 1, 4, 3)) !== \"YES\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 7, 3), array(2,\
    \ 6, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 7, 3), array(2, 6, 3)) !== \"NO\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(3, 2, 6, 1, 8, 9), array(3, 5, 5, 1, 1, 1)) !== \"\
    NO\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ 200), array(200, 200)) !== \"YES\") { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpsc4sses0.php:29\n\
    Stack trace:\n#0 /tmp/tmpsc4sses0.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpsc4sses0.php\
    \ on line 29\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// In this problem, you will implement a function that takes two\
    \ lists of numbers,\n// and determines whether it is possible to perform an exchange\
    \ of elements\n// between them to make lst1 a list of only even numbers.\n// There\
    \ is no limit on the number of exchanged elements between lst1 and lst2.\n// If\
    \ it is possible to exchange elements between the lst1 and lst2 to make\n// all\
    \ the elements of lst1 to be even, return \"YES\".\n// Otherwise, return \"NO\"\
    .\n// For example:\n// exchange([1, 2, 3, 4], [1, 2, 3, 4]) => \"YES\"\n// exchange([1,\
    \ 2, 3, 4], [1, 5, 3, 4]) => \"NO\"\n// It is assumed that the input lists will\
    \ be non-empty.\nfunction exchange($lst1, $lst2) {\n    $odds = [];\n    $evens\
    \ = [];\n    $odds_in_lst2 = [];\n    $evens_in_lst2 = [];\n    foreach ($lst1\
    \ as $num) {\n        if ($num % 2 == 0) {\n            $evens[] = $num;\n   \
    \     } else {\n            $odds[] = $num;\n        }\n    }\n    foreach ($lst2\
    \ as $num) {\n        if ($num % 2 == 0) {\n            $evens_in_lst2[] = $num;\n\
    \        } else {\n            $odds_in_lst2[] = $num;\n        }\n    }\n   \
    \ if (count($odds) == 0) {\n        return \"YES\";\n    } else if (count($evens_in_lst2)\
    \ >= count($odds)) {\n        return \"YES\";\n    } else {\n        return \"\
    NO\";\n    }\n}\n\nfunction candidate(...$args) {\n    return exchange(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4), array(1, 2,\
    \ 3, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4), array(1, 5, 3, 4)) !== \"NO\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4), array(2, 1, 4, 3)) !== \"YES\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 7, 3), array(2,\
    \ 6, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 7, 3), array(2, 6, 3)) !== \"NO\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(3, 2, 6, 1, 8, 9), array(3, 5, 5, 1, 1, 1)) !== \"\
    NO\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ 200), array(200, 200)) !== \"YES\") { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// In this problem, you will implement a function that takes two\
    \ lists of numbers,\n// and determines whether it is possible to perform an exchange\
    \ of elements\n// between them to make lst1 a list of only even numbers.\n// There\
    \ is no limit on the number of exchanged elements between lst1 and lst2.\n// If\
    \ it is possible to exchange elements between the lst1 and lst2 to make\n// all\
    \ the elements of lst1 to be even, return \"YES\".\n// Otherwise, return \"NO\"\
    .\n// For example:\n// exchange([1, 2, 3, 4], [1, 2, 3, 4]) => \"YES\"\n// exchange([1,\
    \ 2, 3, 4], [1, 5, 3, 4]) => \"NO\"\n// It is assumed that the input lists will\
    \ be non-empty.\nfunction exchange($lst1, $lst2) {\n    $lst1 = array_filter($lst1,\
    \ function($x) { return $x % 2 == 0; });\n    $lst2 = array_filter($lst2, function($x)\
    \ { return $x % 2 == 1; });\n    return count($lst1) >= count($lst2) ? \"YES\"\
    \ : \"NO\";\n}\n\nfunction candidate(...$args) {\n    return exchange(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4), array(1, 2,\
    \ 3, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4), array(1, 5, 3, 4)) !== \"NO\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4), array(2, 1, 4, 3)) !== \"YES\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 7, 3), array(2,\
    \ 6, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 7, 3), array(2, 6, 3)) !== \"NO\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(3, 2, 6, 1, 8, 9), array(3, 5, 5, 1, 1, 1)) !== \"\
    NO\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ 200), array(200, 200)) !== \"YES\") { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// In this problem, you will implement a function that takes two\
    \ lists of numbers,\n// and determines whether it is possible to perform an exchange\
    \ of elements\n// between them to make lst1 a list of only even numbers.\n// There\
    \ is no limit on the number of exchanged elements between lst1 and lst2.\n// If\
    \ it is possible to exchange elements between the lst1 and lst2 to make\n// all\
    \ the elements of lst1 to be even, return \"YES\".\n// Otherwise, return \"NO\"\
    .\n// For example:\n// exchange([1, 2, 3, 4], [1, 2, 3, 4]) => \"YES\"\n// exchange([1,\
    \ 2, 3, 4], [1, 5, 3, 4]) => \"NO\"\n// It is assumed that the input lists will\
    \ be non-empty.\nfunction exchange($lst1, $lst2) {\n    $odds = [];\n    $evens\
    \ = [];\n    foreach ($lst1 as $num) {\n        if ($num % 2 == 0) {\n       \
    \     $evens[] = $num;\n        } else {\n            $odds[] = $num;\n      \
    \  }\n    }\n    foreach ($lst2 as $num) {\n        if ($num % 2 == 0) {\n   \
    \         $evens[] = $num;\n        } else {\n            $odds[] = $num;\n  \
    \      }\n    }\n    if (count($odds) == 0) {\n        return \"YES\";\n    }\
    \ elseif (count($evens) == 0) {\n        return \"NO\";\n    } else {\n      \
    \  return \"YES\";\n    }\n}\n\nfunction candidate(...$args) {\n    return exchange(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 2, 3, 4), array(1, 2,\
    \ 3, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 4), array(1, 5, 3, 4)) !== \"NO\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4), array(2, 1, 4, 3)) !== \"YES\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(5, 7, 3), array(2,\
    \ 6, 4)) !== \"YES\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5,\
    \ 7, 3), array(2, 6, 3)) !== \"NO\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(3, 2, 6, 1, 8, 9), array(3, 5, 5, 1, 1, 1)) !== \"\
    NO\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100,\
    \ 200), array(200, 200)) !== \"YES\") { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp3lx8w6x_.php:45\n\
    Stack trace:\n#0 /tmp/tmp3lx8w6x_.php(53): test()\n#1 {main}\n  thrown in /tmp/tmp3lx8w6x_.php\
    \ on line 45\n"
  exit_code: 255
  status: Exception

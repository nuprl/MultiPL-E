name: HumanEval_145_order_by_points
language: php
results:
- program: "<?php\n// Write a function which sorts the given list of integers\n//\
    \ in ascending order according to the sum of their digits.\n// Note: if there\
    \ are several items with similar sum of their digits,\n// order them based on\
    \ their index in original list.\n// For example:\n// >>> order_by_points([1, 11,\
    \ -1, -11, -12]) == [-1, -11, 1, -12, 11]\n// >>> order_by_points([]) == []\n\
    function order_by_points($nums) {\n    $nums_with_points = [];\n    foreach ($nums\
    \ as $key => $num) {\n        $points = 0;\n        $num_str = strval($num);\n\
    \        for ($i = 0; $i < strlen($num_str); $i++) {\n            $points += intval($num_str[$i]);\n\
    \        }\n        $nums_with_points[$key] = $points;\n    }\n    asort($nums_with_points);\n\
    \    $result = [];\n    foreach ($nums_with_points as $key => $points) {\n   \
    \     $result[] = $nums[$key];\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return order_by_points(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(array(1, 11, -1, -11, -12)) !== array(-1, -11, 1, -12, 11)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1234, 423,\
    \ 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46)) !== array(0, 2, 3, 6,\
    \ 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, -11, -32, 43, 54, -98, 2, -3))\
    \ !== array(-3, -32, -98, -11, 1, 2, 43, 54)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11)) !== array(1,\
    \ 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(0, 6, 6, -76, -21, 23, 4)) !== array(-76, -21, 0, 4,\
    \ 23, 6, 6)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp1f8yv6oo.php:32\n\
    Stack trace:\n#0 /tmp/tmp1f8yv6oo.php(40): test()\n#1 {main}\n  thrown in /tmp/tmp1f8yv6oo.php\
    \ on line 32\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function which sorts the given list of integers\n//\
    \ in ascending order according to the sum of their digits.\n// Note: if there\
    \ are several items with similar sum of their digits,\n// order them based on\
    \ their index in original list.\n// For example:\n// >>> order_by_points([1, 11,\
    \ -1, -11, -12]) == [-1, -11, 1, -12, 11]\n// >>> order_by_points([]) == []\n\
    function order_by_points($nums) {\n    $sum_of_digits = array_map(function($num)\
    \ {\n        $sum = 0;\n        while ($num > 0) {\n            $sum += $num %\
    \ 10;\n            $num = intval($num / 10);\n        }\n        return $sum;\n\
    \    }, $nums);\n    array_multisort($sum_of_digits, SORT_ASC, $nums);\n    return\
    \ $nums;\n}\n\nfunction candidate(...$args) {\n    return order_by_points(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 11, -1, -11, -12)) !==\
    \ array(-1, -11, 1, -12, 11)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56,\
    \ 0, 46)) !== array(0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463,\
    \ 3457)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -11, -32, 43, 54, -98, 2, -3)) !== array(-3, -32, -98, -11, 1, 2, 43, 54)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11)) !== array(1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 6, 6, -76, -21,\
    \ 23, 4)) !== array(-76, -21, 0, 4, 23, 6, 6)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpj4d8jijo.php:27\n\
    Stack trace:\n#0 /tmp/tmpj4d8jijo.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpj4d8jijo.php\
    \ on line 27\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function which sorts the given list of integers\n//\
    \ in ascending order according to the sum of their digits.\n// Note: if there\
    \ are several items with similar sum of their digits,\n// order them based on\
    \ their index in original list.\n// For example:\n// >>> order_by_points([1, 11,\
    \ -1, -11, -12]) == [-1, -11, 1, -12, 11]\n// >>> order_by_points([]) == []\n\
    function order_by_points($nums) {\n    $nums_with_points = [];\n    foreach ($nums\
    \ as $index => $num) {\n        $nums_with_points[$index] = [$num, sum_of_digits($num)];\n\
    \    }\n    usort($nums_with_points, function ($a, $b) {\n        if ($a[1] ==\
    \ $b[1]) {\n            return $a[0] - $b[0];\n        }\n        return $a[1]\
    \ - $b[1];\n    });\n    $result = [];\n    foreach ($nums_with_points as $num_with_points)\
    \ {\n        $result[] = $num_with_points[0];\n    }\n    return $result;\n}\n\
    \nfunction candidate(...$args) {\n    return order_by_points(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(1, 11, -1, -11, -12)) !== array(-1,\
    \ -11, 1, -12, 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46)) !== array(0, 2,\
    \ 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, -11, -32, 43, 54, -98, 2, -3))\
    \ !== array(-3, -32, -98, -11, 1, 2, 43, 54)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11)) !== array(1,\
    \ 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(0, 6, 6, -76, -21, 23, 4)) !== array(-76, -21, 0, 4,\
    \ 23, 6, 6)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Error: Call to undefined function sum_of_digits()\
    \ in /tmp/tmp8lh21lkk.php:12\nStack trace:\n#0 /tmp/tmp8lh21lkk.php(28): order_by_points()\n\
    #1 /tmp/tmp8lh21lkk.php(32): candidate()\n#2 /tmp/tmp8lh21lkk.php(40): test()\n\
    #3 {main}\n  thrown in /tmp/tmp8lh21lkk.php on line 12\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function which sorts the given list of integers\n//\
    \ in ascending order according to the sum of their digits.\n// Note: if there\
    \ are several items with similar sum of their digits,\n// order them based on\
    \ their index in original list.\n// For example:\n// >>> order_by_points([1, 11,\
    \ -1, -11, -12]) == [-1, -11, 1, -12, 11]\n// >>> order_by_points([]) == []\n\
    function order_by_points($nums) {\n    // Write your code here\n    $result =\
    \ [];\n    $sum = [];\n    foreach ($nums as $key => $value) {\n        $sum[$key]\
    \ = array_sum(str_split($value));\n    }\n    asort($sum);\n    foreach ($sum\
    \ as $key => $value) {\n        $result[] = $nums[$key];\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return order_by_points(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(array(1, 11, -1, -11, -12)) !== array(-1,\
    \ -11, 1, -12, 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46)) !== array(0, 2,\
    \ 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, -11, -32, 43, 54, -98, 2, -3))\
    \ !== array(-3, -32, -98, -11, 1, 2, 43, 54)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11)) !== array(1,\
    \ 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(0, 6, 6, -76, -21, 23, 4)) !== array(-76, -21, 0, 4,\
    \ 23, 6, 6)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp9tk8d0h6.php:28\n\
    Stack trace:\n#0 /tmp/tmp9tk8d0h6.php(36): test()\n#1 {main}\n  thrown in /tmp/tmp9tk8d0h6.php\
    \ on line 28\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function which sorts the given list of integers\n//\
    \ in ascending order according to the sum of their digits.\n// Note: if there\
    \ are several items with similar sum of their digits,\n// order them based on\
    \ their index in original list.\n// For example:\n// >>> order_by_points([1, 11,\
    \ -1, -11, -12]) == [-1, -11, 1, -12, 11]\n// >>> order_by_points([]) == []\n\
    function order_by_points($nums) {\n    $sum_nums = array_map(function($num) {\n\
    \        return array_sum(str_split(abs($num)));\n    }, $nums);\n    array_multisort($sum_nums,\
    \ SORT_ASC, $nums);\n    return $nums;\n}\n\nfunction candidate(...$args) {\n\
    \    return order_by_points(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 11, -1, -11, -12)) !== array(-1, -11, 1, -12, 11)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1234, 423, 463, 145, 2, 423, 423,\
    \ 53, 6, 37, 3457, 3, 56, 0, 46)) !== array(0, 2, 3, 6, 53, 423, 423, 423, 1234,\
    \ 145, 37, 46, 56, 463, 3457)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, -11, -32, 43, 54, -98, 2, -3)) !== array(-3,\
    \ -32, -98, -11, 1, 2, 43, 54)) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11)) !== array(1, 10, 2,\
    \ 11, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(0, 6, 6, -76, -21, 23, 4)) !== array(-76, -21, 0, 4, 23, 6,\
    \ 6)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpises6qn3.php:22\n\
    Stack trace:\n#0 /tmp/tmpises6qn3.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpises6qn3.php\
    \ on line 22\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function which sorts the given list of integers\n//\
    \ in ascending order according to the sum of their digits.\n// Note: if there\
    \ are several items with similar sum of their digits,\n// order them based on\
    \ their index in original list.\n// For example:\n// >>> order_by_points([1, 11,\
    \ -1, -11, -12]) == [-1, -11, 1, -12, 11]\n// >>> order_by_points([]) == []\n\
    function order_by_points($nums) {\n    $sums = [];\n    foreach ($nums as $key\
    \ => $num) {\n        $sums[$key] = array_sum(str_split($num));\n    }\n    asort($sums);\n\
    \    $result = [];\n    foreach ($sums as $key => $sum) {\n        $result[] =\
    \ $nums[$key];\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return order_by_points(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(array(1, 11, -1, -11, -12)) !== array(-1, -11, 1, -12, 11)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1234, 423,\
    \ 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46)) !== array(0, 2, 3, 6,\
    \ 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, -11, -32, 43, 54, -98, 2, -3))\
    \ !== array(-3, -32, -98, -11, 1, 2, 43, 54)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11)) !== array(1,\
    \ 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(0, 6, 6, -76, -21, 23, 4)) !== array(-76, -21, 0, 4,\
    \ 23, 6, 6)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp17xp467u.php:27\n\
    Stack trace:\n#0 /tmp/tmp17xp467u.php(35): test()\n#1 {main}\n  thrown in /tmp/tmp17xp467u.php\
    \ on line 27\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function which sorts the given list of integers\n//\
    \ in ascending order according to the sum of their digits.\n// Note: if there\
    \ are several items with similar sum of their digits,\n// order them based on\
    \ their index in original list.\n// For example:\n// >>> order_by_points([1, 11,\
    \ -1, -11, -12]) == [-1, -11, 1, -12, 11]\n// >>> order_by_points([]) == []\n\
    function order_by_points($nums) {\n    $sums = array_map(function($num) {\n  \
    \      $sum = 0;\n        while ($num > 0) {\n            $sum += $num % 10;\n\
    \            $num = floor($num / 10);\n        }\n        return $sum;\n    },\
    \ $nums);\n    array_multisort($sums, $nums);\n    return $nums;\n}\n\nfunction\
    \ candidate(...$args) {\n    return order_by_points(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 11, -1, -11, -12)) !== array(-1,\
    \ -11, 1, -12, 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46)) !== array(0, 2,\
    \ 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, -11, -32, 43, 54, -98, 2, -3))\
    \ !== array(-3, -32, -98, -11, 1, 2, 43, 54)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11)) !== array(1,\
    \ 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(0, 6, 6, -76, -21, 23, 4)) !== array(-76, -21, 0, 4,\
    \ 23, 6, 6)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpnxtq5txe.php:27\n\
    Stack trace:\n#0 /tmp/tmpnxtq5txe.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpnxtq5txe.php\
    \ on line 27\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function which sorts the given list of integers\n//\
    \ in ascending order according to the sum of their digits.\n// Note: if there\
    \ are several items with similar sum of their digits,\n// order them based on\
    \ their index in original list.\n// For example:\n// >>> order_by_points([1, 11,\
    \ -1, -11, -12]) == [-1, -11, 1, -12, 11]\n// >>> order_by_points([]) == []\n\
    function order_by_points($nums) {\n    $sums = [];\n    foreach ($nums as $key\
    \ => $num) {\n        $sums[$key] = array_sum(str_split($num));\n    }\n    array_multisort($sums,\
    \ SORT_ASC, $nums);\n    return $nums;\n}\n\nfunction candidate(...$args) {\n\
    \    return order_by_points(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 11, -1, -11, -12)) !== array(-1, -11, 1, -12, 11)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1234, 423, 463, 145, 2, 423, 423,\
    \ 53, 6, 37, 3457, 3, 56, 0, 46)) !== array(0, 2, 3, 6, 53, 423, 423, 423, 1234,\
    \ 145, 37, 46, 56, 463, 3457)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, -11, -32, 43, 54, -98, 2, -3)) !== array(-3,\
    \ -32, -98, -11, 1, 2, 43, 54)) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11)) !== array(1, 10, 2,\
    \ 11, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(0, 6, 6, -76, -21, 23, 4)) !== array(-76, -21, 0, 4, 23, 6,\
    \ 6)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp0p9l6al3.php:23\n\
    Stack trace:\n#0 /tmp/tmp0p9l6al3.php(31): test()\n#1 {main}\n  thrown in /tmp/tmp0p9l6al3.php\
    \ on line 23\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function which sorts the given list of integers\n//\
    \ in ascending order according to the sum of their digits.\n// Note: if there\
    \ are several items with similar sum of their digits,\n// order them based on\
    \ their index in original list.\n// For example:\n// >>> order_by_points([1, 11,\
    \ -1, -11, -12]) == [-1, -11, 1, -12, 11]\n// >>> order_by_points([]) == []\n\
    function order_by_points($nums) {\n  $sums = [];\n  foreach ($nums as $i => $num)\
    \ {\n    $sums[$i] = array_sum(str_split($num));\n  }\n  asort($sums);\n  $result\
    \ = [];\n  foreach ($sums as $i => $sum) {\n    $result[] = $nums[$i];\n  }\n\
    \  return $result;\n}\n\nfunction candidate(...$args) {\n    return order_by_points(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 11, -1, -11, -12)) !==\
    \ array(-1, -11, 1, -12, 11)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56,\
    \ 0, 46)) !== array(0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463,\
    \ 3457)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -11, -32, 43, 54, -98, 2, -3)) !== array(-3, -32, -98, -11, 1, 2, 43, 54)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11)) !== array(1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 6, 6, -76, -21,\
    \ 23, 4)) !== array(-76, -21, 0, 4, 23, 6, 6)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp_hwri84y.php:27\n\
    Stack trace:\n#0 /tmp/tmp_hwri84y.php(35): test()\n#1 {main}\n  thrown in /tmp/tmp_hwri84y.php\
    \ on line 27\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function which sorts the given list of integers\n//\
    \ in ascending order according to the sum of their digits.\n// Note: if there\
    \ are several items with similar sum of their digits,\n// order them based on\
    \ their index in original list.\n// For example:\n// >>> order_by_points([1, 11,\
    \ -1, -11, -12]) == [-1, -11, 1, -12, 11]\n// >>> order_by_points([]) == []\n\
    function order_by_points($nums) {\n    $result = [];\n    foreach ($nums as $key\
    \ => $num) {\n        $sum = 0;\n        while ($num != 0) {\n            $sum\
    \ += $num % 10;\n            $num = (int)($num / 10);\n        }\n        $result[$key]\
    \ = $sum;\n    }\n    asort($result);\n    $result = array_keys($result);\n  \
    \  foreach ($result as $key => $value) {\n        $result[$key] = $nums[$value];\n\
    \    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return order_by_points(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 11, -1, -11, -12)) !==\
    \ array(-1, -11, 1, -12, 11)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56,\
    \ 0, 46)) !== array(0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463,\
    \ 3457)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -11, -32, 43, 54, -98, 2, -3)) !== array(-3, -32, -98, -11, 1, 2, 43, 54)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11)) !== array(1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 6, 6, -76, -21,\
    \ 23, 4)) !== array(-76, -21, 0, 4, 23, 6, 6)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpe09_zadz.php:32\n\
    Stack trace:\n#0 /tmp/tmpe09_zadz.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpe09_zadz.php\
    \ on line 32\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function which sorts the given list of integers\n//\
    \ in ascending order according to the sum of their digits.\n// Note: if there\
    \ are several items with similar sum of their digits,\n// order them based on\
    \ their index in original list.\n// For example:\n// >>> order_by_points([1, 11,\
    \ -1, -11, -12]) == [-1, -11, 1, -12, 11]\n// >>> order_by_points([]) == []\n\
    function order_by_points($nums) {\n    $sums = array_map(function($num) {\n  \
    \      $sum = 0;\n        $num = abs($num);\n        while ($num > 0) {\n    \
    \        $sum += $num % 10;\n            $num = floor($num / 10);\n        }\n\
    \        return $sum;\n    }, $nums);\n    array_multisort($sums, SORT_ASC, $nums);\n\
    \    return $nums;\n}\n\nfunction candidate(...$args) {\n    return order_by_points(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 11, -1, -11, -12)) !==\
    \ array(-1, -11, 1, -12, 11)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56,\
    \ 0, 46)) !== array(0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463,\
    \ 3457)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -11, -32, 43, 54, -98, 2, -3)) !== array(-3, -32, -98, -11, 1, 2, 43, 54)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11)) !== array(1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 6, 6, -76, -21,\
    \ 23, 4)) !== array(-76, -21, 0, 4, 23, 6, 6)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp3ig4e5cm.php:28\n\
    Stack trace:\n#0 /tmp/tmp3ig4e5cm.php(36): test()\n#1 {main}\n  thrown in /tmp/tmp3ig4e5cm.php\
    \ on line 28\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function which sorts the given list of integers\n//\
    \ in ascending order according to the sum of their digits.\n// Note: if there\
    \ are several items with similar sum of their digits,\n// order them based on\
    \ their index in original list.\n// For example:\n// >>> order_by_points([1, 11,\
    \ -1, -11, -12]) == [-1, -11, 1, -12, 11]\n// >>> order_by_points([]) == []\n\
    function order_by_points($nums) {\n    $result = [];\n    foreach ($nums as $key\
    \ => $num) {\n        $result[$key] = array_sum(str_split($num));\n    }\n   \
    \ asort($result);\n    $result = array_keys($result);\n    $result = array_map(function($key)\
    \ use ($nums) {\n        return $nums[$key];\n    }, $result);\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return order_by_points(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(array(1, 11, -1, -11, -12)) !== array(-1,\
    \ -11, 1, -12, 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46)) !== array(0, 2,\
    \ 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, -11, -32, 43, 54, -98, 2, -3))\
    \ !== array(-3, -32, -98, -11, 1, 2, 43, 54)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11)) !== array(1,\
    \ 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(0, 6, 6, -76, -21, 23, 4)) !== array(-76, -21, 0, 4,\
    \ 23, 6, 6)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpsdx1a6v_.php:27\n\
    Stack trace:\n#0 /tmp/tmpsdx1a6v_.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpsdx1a6v_.php\
    \ on line 27\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function which sorts the given list of integers\n//\
    \ in ascending order according to the sum of their digits.\n// Note: if there\
    \ are several items with similar sum of their digits,\n// order them based on\
    \ their index in original list.\n// For example:\n// >>> order_by_points([1, 11,\
    \ -1, -11, -12]) == [-1, -11, 1, -12, 11]\n// >>> order_by_points([]) == []\n\
    function order_by_points($nums) {\n    $sums = array_map(function($num) {\n  \
    \      $sum = 0;\n        $num = abs($num);\n        while ($num > 0) {\n    \
    \        $sum += $num % 10;\n            $num = floor($num / 10);\n        }\n\
    \        return $sum;\n    }, $nums);\n    array_multisort($sums, SORT_ASC, $nums);\n\
    \    return $nums;\n}\n\nfunction candidate(...$args) {\n    return order_by_points(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 11, -1, -11, -12)) !==\
    \ array(-1, -11, 1, -12, 11)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56,\
    \ 0, 46)) !== array(0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463,\
    \ 3457)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -11, -32, 43, 54, -98, 2, -3)) !== array(-3, -32, -98, -11, 1, 2, 43, 54)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11)) !== array(1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 6, 6, -76, -21,\
    \ 23, 4)) !== array(-76, -21, 0, 4, 23, 6, 6)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpc9jcxaw6.php:28\n\
    Stack trace:\n#0 /tmp/tmpc9jcxaw6.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpc9jcxaw6.php\
    \ on line 28\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function which sorts the given list of integers\n//\
    \ in ascending order according to the sum of their digits.\n// Note: if there\
    \ are several items with similar sum of their digits,\n// order them based on\
    \ their index in original list.\n// For example:\n// >>> order_by_points([1, 11,\
    \ -1, -11, -12]) == [-1, -11, 1, -12, 11]\n// >>> order_by_points([]) == []\n\
    function order_by_points($nums) {\n    $sums = array_map(function($num) {\n  \
    \      $sum = 0;\n        while ($num > 0) {\n            $sum += $num % 10;\n\
    \            $num = floor($num / 10);\n        }\n        return $sum;\n    },\
    \ $nums);\n    $result = [];\n    for ($i = 0; $i < count($nums); $i++) {\n  \
    \      $min = min($sums);\n        $index = array_search($min, $sums);\n     \
    \   $result[] = $nums[$index];\n        unset($sums[$index]);\n        unset($nums[$index]);\n\
    \        $sums = array_values($sums);\n        $nums = array_values($nums);\n\
    \    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return order_by_points(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 11, -1, -11, -12)) !==\
    \ array(-1, -11, 1, -12, 11)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56,\
    \ 0, 46)) !== array(0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463,\
    \ 3457)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -11, -32, 43, 54, -98, 2, -3)) !== array(-3, -32, -98, -11, 1, 2, 43, 54)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11)) !== array(1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 6, 6, -76, -21,\
    \ 23, 4)) !== array(-76, -21, 0, 4, 23, 6, 6)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpwdgrz44r.php:36\n\
    Stack trace:\n#0 /tmp/tmpwdgrz44r.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpwdgrz44r.php\
    \ on line 36\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function which sorts the given list of integers\n//\
    \ in ascending order according to the sum of their digits.\n// Note: if there\
    \ are several items with similar sum of their digits,\n// order them based on\
    \ their index in original list.\n// For example:\n// >>> order_by_points([1, 11,\
    \ -1, -11, -12]) == [-1, -11, 1, -12, 11]\n// >>> order_by_points([]) == []\n\
    function order_by_points($nums) {\n    $sum_of_digits = function($num) {\n   \
    \     $sum = 0;\n        while ($num > 0) {\n            $sum += $num % 10;\n\
    \            $num = floor($num / 10);\n        }\n        return $sum;\n    };\n\
    \n    $sums = array_map($sum_of_digits, $nums);\n    $sums_and_indexes = array_map(function($num,\
    \ $index) {\n        return [$num, $index];\n    }, $sums, array_keys($sums));\n\
    \    usort($sums_and_indexes, function($a, $b) {\n        if ($a[0] == $b[0])\
    \ {\n            return $a[1] - $b[1];\n        }\n        return $a[0] - $b[0];\n\
    \    });\n    $sorted_indexes = array_map(function($item) {\n        return $item[1];\n\
    \    }, $sums_and_indexes);\n    $result = [];\n    foreach ($sorted_indexes as\
    \ $index) {\n        $result[] = $nums[$index];\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return order_by_points(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(array(1, 11, -1, -11, -12)) !== array(-1,\
    \ -11, 1, -12, 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46)) !== array(0, 2,\
    \ 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, -11, -32, 43, 54, -98, 2, -3))\
    \ !== array(-3, -32, -98, -11, 1, 2, 43, 54)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11)) !== array(1,\
    \ 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(0, 6, 6, -76, -21, 23, 4)) !== array(-76, -21, 0, 4,\
    \ 23, 6, 6)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp71vpxjoa.php:44\n\
    Stack trace:\n#0 /tmp/tmp71vpxjoa.php(52): test()\n#1 {main}\n  thrown in /tmp/tmp71vpxjoa.php\
    \ on line 44\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function which sorts the given list of integers\n//\
    \ in ascending order according to the sum of their digits.\n// Note: if there\
    \ are several items with similar sum of their digits,\n// order them based on\
    \ their index in original list.\n// For example:\n// >>> order_by_points([1, 11,\
    \ -1, -11, -12]) == [-1, -11, 1, -12, 11]\n// >>> order_by_points([]) == []\n\
    function order_by_points($nums) {\n    $result = [];\n    $sum = 0;\n    foreach\
    \ ($nums as $key => $value) {\n        $sum = 0;\n        $value = abs($value);\n\
    \        while ($value > 0) {\n            $sum += $value % 10;\n            $value\
    \ = (int)($value / 10);\n        }\n        $result[$key] = $sum;\n    }\n   \
    \ asort($result);\n    $result = array_keys($result);\n    $result = array_map(function\
    \ ($value) use ($nums) {\n        return $nums[$value];\n    }, $result);\n  \
    \  return $result;\n}\n\nfunction candidate(...$args) {\n    return order_by_points(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 11, -1, -11, -12)) !==\
    \ array(-1, -11, 1, -12, 11)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56,\
    \ 0, 46)) !== array(0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463,\
    \ 3457)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -11, -32, 43, 54, -98, 2, -3)) !== array(-3, -32, -98, -11, 1, 2, 43, 54)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11)) !== array(1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 6, 6, -76, -21,\
    \ 23, 4)) !== array(-76, -21, 0, 4, 23, 6, 6)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpjb5koz15.php:34\n\
    Stack trace:\n#0 /tmp/tmpjb5koz15.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpjb5koz15.php\
    \ on line 34\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function which sorts the given list of integers\n//\
    \ in ascending order according to the sum of their digits.\n// Note: if there\
    \ are several items with similar sum of their digits,\n// order them based on\
    \ their index in original list.\n// For example:\n// >>> order_by_points([1, 11,\
    \ -1, -11, -12]) == [-1, -11, 1, -12, 11]\n// >>> order_by_points([]) == []\n\
    function order_by_points($nums) {\n    $sums = [];\n    foreach ($nums as $key\
    \ => $num) {\n        $sum = 0;\n        $num = abs($num);\n        while ($num\
    \ > 0) {\n            $sum += $num % 10;\n            $num = floor($num / 10);\n\
    \        }\n        $sums[$key] = $sum;\n    }\n    asort($sums);\n    $result\
    \ = [];\n    foreach ($sums as $key => $sum) {\n        $result[] = $nums[$key];\n\
    \    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return order_by_points(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 11, -1, -11, -12)) !==\
    \ array(-1, -11, 1, -12, 11)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56,\
    \ 0, 46)) !== array(0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463,\
    \ 3457)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -11, -32, 43, 54, -98, 2, -3)) !== array(-3, -32, -98, -11, 1, 2, 43, 54)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11)) !== array(1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 6, 6, -76, -21,\
    \ 23, 4)) !== array(-76, -21, 0, 4, 23, 6, 6)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpzmnb7g8r.php:33\n\
    Stack trace:\n#0 /tmp/tmpzmnb7g8r.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpzmnb7g8r.php\
    \ on line 33\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function which sorts the given list of integers\n//\
    \ in ascending order according to the sum of their digits.\n// Note: if there\
    \ are several items with similar sum of their digits,\n// order them based on\
    \ their index in original list.\n// For example:\n// >>> order_by_points([1, 11,\
    \ -1, -11, -12]) == [-1, -11, 1, -12, 11]\n// >>> order_by_points([]) == []\n\
    function order_by_points($nums) {\n    $sum = [];\n    foreach ($nums as $key\
    \ => $value) {\n        $sum[$key] = array_sum(str_split($value));\n    }\n  \
    \  array_multisort($sum, SORT_ASC, $nums);\n    return $nums;\n}\n\nfunction candidate(...$args)\
    \ {\n    return order_by_points(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(array(1, 11, -1, -11, -12)) !== array(-1, -11, 1, -12, 11)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1234, 423,\
    \ 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46)) !== array(0, 2, 3, 6,\
    \ 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, -11, -32, 43, 54, -98, 2, -3))\
    \ !== array(-3, -32, -98, -11, 1, 2, 43, 54)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11)) !== array(1,\
    \ 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(0, 6, 6, -76, -21, 23, 4)) !== array(-76, -21, 0, 4,\
    \ 23, 6, 6)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpd5it1ggv.php:23\n\
    Stack trace:\n#0 /tmp/tmpd5it1ggv.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpd5it1ggv.php\
    \ on line 23\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function which sorts the given list of integers\n//\
    \ in ascending order according to the sum of their digits.\n// Note: if there\
    \ are several items with similar sum of their digits,\n// order them based on\
    \ their index in original list.\n// For example:\n// >>> order_by_points([1, 11,\
    \ -1, -11, -12]) == [-1, -11, 1, -12, 11]\n// >>> order_by_points([]) == []\n\
    function order_by_points($nums) {\n    $sums = [];\n    foreach ($nums as $key\
    \ => $num) {\n        $sums[$key] = array_sum(str_split($num));\n    }\n    array_multisort($sums,\
    \ SORT_ASC, $nums);\n    return $nums;\n}\n\nfunction candidate(...$args) {\n\
    \    return order_by_points(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 11, -1, -11, -12)) !== array(-1, -11, 1, -12, 11)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1234, 423, 463, 145, 2, 423, 423,\
    \ 53, 6, 37, 3457, 3, 56, 0, 46)) !== array(0, 2, 3, 6, 53, 423, 423, 423, 1234,\
    \ 145, 37, 46, 56, 463, 3457)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, -11, -32, 43, 54, -98, 2, -3)) !== array(-3,\
    \ -32, -98, -11, 1, 2, 43, 54)) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11)) !== array(1, 10, 2,\
    \ 11, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(0, 6, 6, -76, -21, 23, 4)) !== array(-76, -21, 0, 4, 23, 6,\
    \ 6)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpk7cwlfcf.php:23\n\
    Stack trace:\n#0 /tmp/tmpk7cwlfcf.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpk7cwlfcf.php\
    \ on line 23\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function which sorts the given list of integers\n//\
    \ in ascending order according to the sum of their digits.\n// Note: if there\
    \ are several items with similar sum of their digits,\n// order them based on\
    \ their index in original list.\n// For example:\n// >>> order_by_points([1, 11,\
    \ -1, -11, -12]) == [-1, -11, 1, -12, 11]\n// >>> order_by_points([]) == []\n\
    function order_by_points($nums) {\n  $result = [];\n  foreach ($nums as $key =>\
    \ $num) {\n    $sum = 0;\n    $num = abs($num);\n    while ($num > 0) {\n    \
    \  $sum += $num % 10;\n      $num = floor($num / 10);\n    }\n    $result[$key]\
    \ = $sum;\n  }\n  asort($result);\n  $result = array_keys($result);\n  $result\
    \ = array_map(function($key) use ($nums) {\n    return $nums[$key];\n  }, $result);\n\
    \  return $result;\n}\n\nfunction candidate(...$args) {\n    return order_by_points(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 11, -1, -11, -12)) !==\
    \ array(-1, -11, 1, -12, 11)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56,\
    \ 0, 46)) !== array(0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463,\
    \ 3457)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -11, -32, 43, 54, -98, 2, -3)) !== array(-3, -32, -98, -11, 1, 2, 43, 54)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11)) !== array(1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 6, 6, -76, -21,\
    \ 23, 4)) !== array(-76, -21, 0, 4, 23, 6, 6)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp0ymz7o1y.php:33\n\
    Stack trace:\n#0 /tmp/tmp0ymz7o1y.php(41): test()\n#1 {main}\n  thrown in /tmp/tmp0ymz7o1y.php\
    \ on line 33\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function which sorts the given list of integers\n//\
    \ in ascending order according to the sum of their digits.\n// Note: if there\
    \ are several items with similar sum of their digits,\n// order them based on\
    \ their index in original list.\n// For example:\n// >>> order_by_points([1, 11,\
    \ -1, -11, -12]) == [-1, -11, 1, -12, 11]\n// >>> order_by_points([]) == []\n\
    function order_by_points($nums) {\n    $arr = [];\n    foreach ($nums as $key\
    \ => $num) {\n        $arr[$key] = array_sum(str_split($num));\n    }\n    asort($arr);\n\
    \    $result = [];\n    foreach ($arr as $key => $value) {\n        $result[]\
    \ = $nums[$key];\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return order_by_points(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(array(1, 11, -1, -11, -12)) !== array(-1, -11, 1, -12, 11)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1234, 423,\
    \ 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46)) !== array(0, 2, 3, 6,\
    \ 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, -11, -32, 43, 54, -98, 2, -3))\
    \ !== array(-3, -32, -98, -11, 1, 2, 43, 54)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11)) !== array(1,\
    \ 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(0, 6, 6, -76, -21, 23, 4)) !== array(-76, -21, 0, 4,\
    \ 23, 6, 6)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpvjr4t6fx.php:27\n\
    Stack trace:\n#0 /tmp/tmpvjr4t6fx.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpvjr4t6fx.php\
    \ on line 27\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function which sorts the given list of integers\n//\
    \ in ascending order according to the sum of their digits.\n// Note: if there\
    \ are several items with similar sum of their digits,\n// order them based on\
    \ their index in original list.\n// For example:\n// >>> order_by_points([1, 11,\
    \ -1, -11, -12]) == [-1, -11, 1, -12, 11]\n// >>> order_by_points([]) == []\n\
    function order_by_points($nums) {\n    $nums_with_points = [];\n    foreach ($nums\
    \ as $index => $num) {\n        $nums_with_points[$index] = [\n            'num'\
    \ => $num,\n            'points' => array_sum(str_split(abs($num)))\n        ];\n\
    \    }\n    usort($nums_with_points, function ($a, $b) {\n        if ($a['points']\
    \ == $b['points']) {\n            return $a['index'] - $b['index'];\n        }\n\
    \        return $a['points'] - $b['points'];\n    });\n    return array_column($nums_with_points,\
    \ 'num');\n}\n\nfunction candidate(...$args) {\n    return order_by_points(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 11, -1, -11, -12)) !==\
    \ array(-1, -11, 1, -12, 11)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56,\
    \ 0, 46)) !== array(0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463,\
    \ 3457)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -11, -32, 43, 54, -98, 2, -3)) !== array(-3, -32, -98, -11, 1, 2, 43, 54)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11)) !== array(1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 6, 6, -76, -21,\
    \ 23, 4)) !== array(-76, -21, 0, 4, 23, 6, 6)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Warning:  Undefined array key \"index\" in /tmp/tmp6opnooh2.php on\
    \ line 19\nPHP Warning:  Undefined array key \"index\" in /tmp/tmp6opnooh2.php\
    \ on line 19\nPHP Warning:  Undefined array key \"index\" in /tmp/tmp6opnooh2.php\
    \ on line 19\nPHP Warning:  Undefined array key \"index\" in /tmp/tmp6opnooh2.php\
    \ on line 19\nPHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp6opnooh2.php:31\n\
    Stack trace:\n#0 /tmp/tmp6opnooh2.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp6opnooh2.php\
    \ on line 31\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function which sorts the given list of integers\n//\
    \ in ascending order according to the sum of their digits.\n// Note: if there\
    \ are several items with similar sum of their digits,\n// order them based on\
    \ their index in original list.\n// For example:\n// >>> order_by_points([1, 11,\
    \ -1, -11, -12]) == [-1, -11, 1, -12, 11]\n// >>> order_by_points([]) == []\n\
    function order_by_points($nums) {\n    $sum_of_digits = array_map(function($num)\
    \ {\n        $sum = 0;\n        $num = abs($num);\n        while ($num > 0) {\n\
    \            $sum += $num % 10;\n            $num = intval($num / 10);\n     \
    \   }\n        return $sum;\n    }, $nums);\n    array_multisort($sum_of_digits,\
    \ SORT_ASC, $nums);\n    return $nums;\n}\n\nfunction candidate(...$args) {\n\
    \    return order_by_points(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 11, -1, -11, -12)) !== array(-1, -11, 1, -12, 11)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1234, 423, 463, 145, 2, 423, 423,\
    \ 53, 6, 37, 3457, 3, 56, 0, 46)) !== array(0, 2, 3, 6, 53, 423, 423, 423, 1234,\
    \ 145, 37, 46, 56, 463, 3457)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, -11, -32, 43, 54, -98, 2, -3)) !== array(-3,\
    \ -32, -98, -11, 1, 2, 43, 54)) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11)) !== array(1, 10, 2,\
    \ 11, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(0, 6, 6, -76, -21, 23, 4)) !== array(-76, -21, 0, 4, 23, 6,\
    \ 6)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp6u452o0p.php:28\n\
    Stack trace:\n#0 /tmp/tmp6u452o0p.php(36): test()\n#1 {main}\n  thrown in /tmp/tmp6u452o0p.php\
    \ on line 28\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function which sorts the given list of integers\n//\
    \ in ascending order according to the sum of their digits.\n// Note: if there\
    \ are several items with similar sum of their digits,\n// order them based on\
    \ their index in original list.\n// For example:\n// >>> order_by_points([1, 11,\
    \ -1, -11, -12]) == [-1, -11, 1, -12, 11]\n// >>> order_by_points([]) == []\n\
    function order_by_points($nums) {\n    $nums_with_points = [];\n    foreach ($nums\
    \ as $index => $num) {\n        $points = 0;\n        $num_str = strval($num);\n\
    \        for ($i = 0; $i < strlen($num_str); $i++) {\n            $points += intval($num_str[$i]);\n\
    \        }\n        $nums_with_points[] = [$index, $points, $num];\n    }\n  \
    \  usort($nums_with_points, function ($a, $b) {\n        if ($a[1] == $b[1]) {\n\
    \            return $a[0] - $b[0];\n        }\n        return $a[1] - $b[1];\n\
    \    });\n    $result = [];\n    foreach ($nums_with_points as $num_with_points)\
    \ {\n        $result[] = $num_with_points[2];\n    }\n    return $result;\n}\n\
    \nfunction candidate(...$args) {\n    return order_by_points(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(1, 11, -1, -11, -12)) !== array(-1,\
    \ -11, 1, -12, 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46)) !== array(0, 2,\
    \ 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, -11, -32, 43, 54, -98, 2, -3))\
    \ !== array(-3, -32, -98, -11, 1, 2, 43, 54)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11)) !== array(1,\
    \ 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(0, 6, 6, -76, -21, 23, 4)) !== array(-76, -21, 0, 4,\
    \ 23, 6, 6)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpf0qt_718.php:37\n\
    Stack trace:\n#0 /tmp/tmpf0qt_718.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpf0qt_718.php\
    \ on line 37\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function which sorts the given list of integers\n//\
    \ in ascending order according to the sum of their digits.\n// Note: if there\
    \ are several items with similar sum of their digits,\n// order them based on\
    \ their index in original list.\n// For example:\n// >>> order_by_points([1, 11,\
    \ -1, -11, -12]) == [-1, -11, 1, -12, 11]\n// >>> order_by_points([]) == []\n\
    function order_by_points($nums) {\n    $sums = [];\n    foreach ($nums as $key\
    \ => $num) {\n        $sums[$key] = array_sum(str_split($num));\n    }\n    asort($sums);\n\
    \    $result = [];\n    foreach ($sums as $key => $sum) {\n        $result[] =\
    \ $nums[$key];\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return order_by_points(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(array(1, 11, -1, -11, -12)) !== array(-1, -11, 1, -12, 11)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1234, 423,\
    \ 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46)) !== array(0, 2, 3, 6,\
    \ 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, -11, -32, 43, 54, -98, 2, -3))\
    \ !== array(-3, -32, -98, -11, 1, 2, 43, 54)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11)) !== array(1,\
    \ 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(0, 6, 6, -76, -21, 23, 4)) !== array(-76, -21, 0, 4,\
    \ 23, 6, 6)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpm9r9dd1p.php:27\n\
    Stack trace:\n#0 /tmp/tmpm9r9dd1p.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpm9r9dd1p.php\
    \ on line 27\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function which sorts the given list of integers\n//\
    \ in ascending order according to the sum of their digits.\n// Note: if there\
    \ are several items with similar sum of their digits,\n// order them based on\
    \ their index in original list.\n// For example:\n// >>> order_by_points([1, 11,\
    \ -1, -11, -12]) == [-1, -11, 1, -12, 11]\n// >>> order_by_points([]) == []\n\
    function order_by_points($nums) {\n    $sums = [];\n    foreach ($nums as $key\
    \ => $num) {\n        $sums[$key] = array_sum(str_split($num));\n    }\n    array_multisort($sums,\
    \ SORT_ASC, $nums);\n    return $nums;\n}\n\nfunction candidate(...$args) {\n\
    \    return order_by_points(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 11, -1, -11, -12)) !== array(-1, -11, 1, -12, 11)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1234, 423, 463, 145, 2, 423, 423,\
    \ 53, 6, 37, 3457, 3, 56, 0, 46)) !== array(0, 2, 3, 6, 53, 423, 423, 423, 1234,\
    \ 145, 37, 46, 56, 463, 3457)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, -11, -32, 43, 54, -98, 2, -3)) !== array(-3,\
    \ -32, -98, -11, 1, 2, 43, 54)) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11)) !== array(1, 10, 2,\
    \ 11, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(0, 6, 6, -76, -21, 23, 4)) !== array(-76, -21, 0, 4, 23, 6,\
    \ 6)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp83mhbxol.php:23\n\
    Stack trace:\n#0 /tmp/tmp83mhbxol.php(31): test()\n#1 {main}\n  thrown in /tmp/tmp83mhbxol.php\
    \ on line 23\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function which sorts the given list of integers\n//\
    \ in ascending order according to the sum of their digits.\n// Note: if there\
    \ are several items with similar sum of their digits,\n// order them based on\
    \ their index in original list.\n// For example:\n// >>> order_by_points([1, 11,\
    \ -1, -11, -12]) == [-1, -11, 1, -12, 11]\n// >>> order_by_points([]) == []\n\
    function order_by_points($nums) {\n    $nums_with_points = [];\n    foreach ($nums\
    \ as $key => $num) {\n        $nums_with_points[$key] = [\n            'num' =>\
    \ $num,\n            'points' => array_sum(str_split(abs($num)))\n        ];\n\
    \    }\n    usort($nums_with_points, function ($a, $b) {\n        if ($a['points']\
    \ == $b['points']) {\n            return $a['num'] <=> $b['num'];\n        }\n\
    \        return $a['points'] <=> $b['points'];\n    });\n    return array_column($nums_with_points,\
    \ 'num');\n}\n\nfunction candidate(...$args) {\n    return order_by_points(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 11, -1, -11, -12)) !==\
    \ array(-1, -11, 1, -12, 11)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56,\
    \ 0, 46)) !== array(0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463,\
    \ 3457)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -11, -32, 43, 54, -98, 2, -3)) !== array(-3, -32, -98, -11, 1, 2, 43, 54)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11)) !== array(1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 6, 6, -76, -21,\
    \ 23, 4)) !== array(-76, -21, 0, 4, 23, 6, 6)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp97syit2_.php:31\n\
    Stack trace:\n#0 /tmp/tmp97syit2_.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp97syit2_.php\
    \ on line 31\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function which sorts the given list of integers\n//\
    \ in ascending order according to the sum of their digits.\n// Note: if there\
    \ are several items with similar sum of their digits,\n// order them based on\
    \ their index in original list.\n// For example:\n// >>> order_by_points([1, 11,\
    \ -1, -11, -12]) == [-1, -11, 1, -12, 11]\n// >>> order_by_points([]) == []\n\
    function order_by_points($nums) {\n    $sums = [];\n    foreach ($nums as $i =>\
    \ $num) {\n        $sums[$i] = sum_digits($num);\n    }\n    array_multisort($sums,\
    \ $nums);\n    return $nums;\n}\n\nfunction candidate(...$args) {\n    return\
    \ order_by_points(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 11, -1, -11, -12)) !== array(-1, -11, 1, -12, 11)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1234, 423, 463, 145, 2, 423, 423,\
    \ 53, 6, 37, 3457, 3, 56, 0, 46)) !== array(0, 2, 3, 6, 53, 423, 423, 423, 1234,\
    \ 145, 37, 46, 56, 463, 3457)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, -11, -32, 43, 54, -98, 2, -3)) !== array(-3,\
    \ -32, -98, -11, 1, 2, 43, 54)) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11)) !== array(1, 10, 2,\
    \ 11, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(0, 6, 6, -76, -21, 23, 4)) !== array(-76, -21, 0, 4, 23, 6,\
    \ 6)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Error: Call to undefined function sum_digits()\
    \ in /tmp/tmpa1avu9nf.php:12\nStack trace:\n#0 /tmp/tmpa1avu9nf.php(19): order_by_points()\n\
    #1 /tmp/tmpa1avu9nf.php(23): candidate()\n#2 /tmp/tmpa1avu9nf.php(31): test()\n\
    #3 {main}\n  thrown in /tmp/tmpa1avu9nf.php on line 12\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function which sorts the given list of integers\n//\
    \ in ascending order according to the sum of their digits.\n// Note: if there\
    \ are several items with similar sum of their digits,\n// order them based on\
    \ their index in original list.\n// For example:\n// >>> order_by_points([1, 11,\
    \ -1, -11, -12]) == [-1, -11, 1, -12, 11]\n// >>> order_by_points([]) == []\n\
    function order_by_points($nums) {\n    $nums_with_points = [];\n    foreach ($nums\
    \ as $key => $num) {\n        $nums_with_points[$key] = [\n            'num' =>\
    \ $num,\n            'points' => array_sum(str_split($num))\n        ];\n    }\n\
    \    usort($nums_with_points, function ($a, $b) {\n        if ($a['points'] ==\
    \ $b['points']) {\n            return $a['num'] <=> $b['num'];\n        }\n  \
    \      return $a['points'] <=> $b['points'];\n    });\n    return array_column($nums_with_points,\
    \ 'num');\n}\n\nfunction candidate(...$args) {\n    return order_by_points(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 11, -1, -11, -12)) !==\
    \ array(-1, -11, 1, -12, 11)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56,\
    \ 0, 46)) !== array(0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463,\
    \ 3457)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -11, -32, 43, 54, -98, 2, -3)) !== array(-3, -32, -98, -11, 1, 2, 43, 54)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11)) !== array(1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 6, 6, -76, -21,\
    \ 23, 4)) !== array(-76, -21, 0, 4, 23, 6, 6)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp916ridjc.php:31\n\
    Stack trace:\n#0 /tmp/tmp916ridjc.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp916ridjc.php\
    \ on line 31\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function which sorts the given list of integers\n//\
    \ in ascending order according to the sum of their digits.\n// Note: if there\
    \ are several items with similar sum of their digits,\n// order them based on\
    \ their index in original list.\n// For example:\n// >>> order_by_points([1, 11,\
    \ -1, -11, -12]) == [-1, -11, 1, -12, 11]\n// >>> order_by_points([]) == []\n\
    function order_by_points($nums) {\n    $sums = [];\n    foreach ($nums as $key\
    \ => $num) {\n        $sum = 0;\n        $num = abs($num);\n        while ($num\
    \ > 0) {\n            $sum += $num % 10;\n            $num = (int)($num / 10);\n\
    \        }\n        $sums[$key] = $sum;\n    }\n    asort($sums);\n    $result\
    \ = [];\n    foreach ($sums as $key => $sum) {\n        $result[] = $nums[$key];\n\
    \    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return order_by_points(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 11, -1, -11, -12)) !==\
    \ array(-1, -11, 1, -12, 11)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56,\
    \ 0, 46)) !== array(0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463,\
    \ 3457)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -11, -32, 43, 54, -98, 2, -3)) !== array(-3, -32, -98, -11, 1, 2, 43, 54)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11)) !== array(1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 6, 6, -76, -21,\
    \ 23, 4)) !== array(-76, -21, 0, 4, 23, 6, 6)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpndw7xnx9.php:33\n\
    Stack trace:\n#0 /tmp/tmpndw7xnx9.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpndw7xnx9.php\
    \ on line 33\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function which sorts the given list of integers\n//\
    \ in ascending order according to the sum of their digits.\n// Note: if there\
    \ are several items with similar sum of their digits,\n// order them based on\
    \ their index in original list.\n// For example:\n// >>> order_by_points([1, 11,\
    \ -1, -11, -12]) == [-1, -11, 1, -12, 11]\n// >>> order_by_points([]) == []\n\
    function order_by_points($nums) {\n    $nums_with_points = [];\n    foreach ($nums\
    \ as $key => $num) {\n        $nums_with_points[$key] = [\n            'num' =>\
    \ $num,\n            'points' => sum_of_digits($num)\n        ];\n    }\n    usort($nums_with_points,\
    \ function ($a, $b) {\n        if ($a['points'] == $b['points']) {\n         \
    \   return $a['num'] - $b['num'];\n        }\n        return $a['points'] - $b['points'];\n\
    \    });\n    $result = [];\n    foreach ($nums_with_points as $num_with_points)\
    \ {\n        $result[] = $num_with_points['num'];\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return order_by_points(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(array(1, 11, -1, -11, -12)) !== array(-1,\
    \ -11, 1, -12, 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46)) !== array(0, 2,\
    \ 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, -11, -32, 43, 54, -98, 2, -3))\
    \ !== array(-3, -32, -98, -11, 1, 2, 43, 54)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11)) !== array(1,\
    \ 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(0, 6, 6, -76, -21, 23, 4)) !== array(-76, -21, 0, 4,\
    \ 23, 6, 6)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Error: Call to undefined function sum_of_digits()\
    \ in /tmp/tmp5jd58wvm.php:14\nStack trace:\n#0 /tmp/tmp5jd58wvm.php(31): order_by_points()\n\
    #1 /tmp/tmp5jd58wvm.php(35): candidate()\n#2 /tmp/tmp5jd58wvm.php(43): test()\n\
    #3 {main}\n  thrown in /tmp/tmp5jd58wvm.php on line 14\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function which sorts the given list of integers\n//\
    \ in ascending order according to the sum of their digits.\n// Note: if there\
    \ are several items with similar sum of their digits,\n// order them based on\
    \ their index in original list.\n// For example:\n// >>> order_by_points([1, 11,\
    \ -1, -11, -12]) == [-1, -11, 1, -12, 11]\n// >>> order_by_points([]) == []\n\
    function order_by_points($nums) {\n  $sums = [];\n  foreach ($nums as $key =>\
    \ $num) {\n    $sums[$key] = array_sum(str_split($num));\n  }\n  asort($sums);\n\
    \  $result = [];\n  foreach ($sums as $key => $sum) {\n    $result[] = $nums[$key];\n\
    \  }\n  return $result;\n}\n\nfunction candidate(...$args) {\n    return order_by_points(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 11, -1, -11, -12)) !==\
    \ array(-1, -11, 1, -12, 11)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56,\
    \ 0, 46)) !== array(0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463,\
    \ 3457)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -11, -32, 43, 54, -98, 2, -3)) !== array(-3, -32, -98, -11, 1, 2, 43, 54)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11)) !== array(1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 6, 6, -76, -21,\
    \ 23, 4)) !== array(-76, -21, 0, 4, 23, 6, 6)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp7asnuzu5.php:27\n\
    Stack trace:\n#0 /tmp/tmp7asnuzu5.php(35): test()\n#1 {main}\n  thrown in /tmp/tmp7asnuzu5.php\
    \ on line 27\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function which sorts the given list of integers\n//\
    \ in ascending order according to the sum of their digits.\n// Note: if there\
    \ are several items with similar sum of their digits,\n// order them based on\
    \ their index in original list.\n// For example:\n// >>> order_by_points([1, 11,\
    \ -1, -11, -12]) == [-1, -11, 1, -12, 11]\n// >>> order_by_points([]) == []\n\
    function order_by_points($nums) {\n    $result = [];\n    foreach ($nums as $key\
    \ => $num) {\n        $result[$key] = array_sum(str_split($num));\n    }\n   \
    \ asort($result);\n    $result = array_keys($result);\n    foreach ($result as\
    \ $key => $value) {\n        $result[$key] = $nums[$value];\n    }\n    return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return order_by_points(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 11, -1, -11, -12)) !==\
    \ array(-1, -11, 1, -12, 11)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56,\
    \ 0, 46)) !== array(0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463,\
    \ 3457)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -11, -32, 43, 54, -98, 2, -3)) !== array(-3, -32, -98, -11, 1, 2, 43, 54)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11)) !== array(1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 6, 6, -76, -21,\
    \ 23, 4)) !== array(-76, -21, 0, 4, 23, 6, 6)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpqh9a3uyb.php:27\n\
    Stack trace:\n#0 /tmp/tmpqh9a3uyb.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpqh9a3uyb.php\
    \ on line 27\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function which sorts the given list of integers\n//\
    \ in ascending order according to the sum of their digits.\n// Note: if there\
    \ are several items with similar sum of their digits,\n// order them based on\
    \ their index in original list.\n// For example:\n// >>> order_by_points([1, 11,\
    \ -1, -11, -12]) == [-1, -11, 1, -12, 11]\n// >>> order_by_points([]) == []\n\
    function order_by_points($nums) {\n    $sums = [];\n    foreach ($nums as $key\
    \ => $num) {\n        $sum = 0;\n        $num = abs($num);\n        while ($num\
    \ > 0) {\n            $sum += $num % 10;\n            $num = (int)($num / 10);\n\
    \        }\n        $sums[$key] = $sum;\n    }\n    asort($sums);\n    $result\
    \ = [];\n    foreach ($sums as $key => $sum) {\n        $result[] = $nums[$key];\n\
    \    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return order_by_points(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 11, -1, -11, -12)) !==\
    \ array(-1, -11, 1, -12, 11)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56,\
    \ 0, 46)) !== array(0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463,\
    \ 3457)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -11, -32, 43, 54, -98, 2, -3)) !== array(-3, -32, -98, -11, 1, 2, 43, 54)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11)) !== array(1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 6, 6, -76, -21,\
    \ 23, 4)) !== array(-76, -21, 0, 4, 23, 6, 6)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpij015e74.php:33\n\
    Stack trace:\n#0 /tmp/tmpij015e74.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpij015e74.php\
    \ on line 33\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function which sorts the given list of integers\n//\
    \ in ascending order according to the sum of their digits.\n// Note: if there\
    \ are several items with similar sum of their digits,\n// order them based on\
    \ their index in original list.\n// For example:\n// >>> order_by_points([1, 11,\
    \ -1, -11, -12]) == [-1, -11, 1, -12, 11]\n// >>> order_by_points([]) == []\n\
    function order_by_points($nums) {\n    $sums = array_map(function($num) {\n  \
    \      $sum = 0;\n        $num = abs($num);\n        while ($num > 0) {\n    \
    \        $sum += $num % 10;\n            $num = (int)($num / 10);\n        }\n\
    \        return $sum;\n    }, $nums);\n    array_multisort($sums, SORT_ASC, $nums);\n\
    \    return $nums;\n}\n\nfunction candidate(...$args) {\n    return order_by_points(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 11, -1, -11, -12)) !==\
    \ array(-1, -11, 1, -12, 11)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56,\
    \ 0, 46)) !== array(0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463,\
    \ 3457)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -11, -32, 43, 54, -98, 2, -3)) !== array(-3, -32, -98, -11, 1, 2, 43, 54)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11)) !== array(1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 6, 6, -76, -21,\
    \ 23, 4)) !== array(-76, -21, 0, 4, 23, 6, 6)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp4std8vc0.php:28\n\
    Stack trace:\n#0 /tmp/tmp4std8vc0.php(36): test()\n#1 {main}\n  thrown in /tmp/tmp4std8vc0.php\
    \ on line 28\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function which sorts the given list of integers\n//\
    \ in ascending order according to the sum of their digits.\n// Note: if there\
    \ are several items with similar sum of their digits,\n// order them based on\
    \ their index in original list.\n// For example:\n// >>> order_by_points([1, 11,\
    \ -1, -11, -12]) == [-1, -11, 1, -12, 11]\n// >>> order_by_points([]) == []\n\
    function order_by_points($nums) {\n    $sums = array_map(function($n) {\n    \
    \    return array_sum(str_split($n));\n    }, $nums);\n    array_multisort($sums,\
    \ $nums);\n    return $nums;\n}\n\nfunction candidate(...$args) {\n    return\
    \ order_by_points(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 11, -1, -11, -12)) !== array(-1, -11, 1, -12, 11)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1234, 423, 463, 145, 2, 423, 423,\
    \ 53, 6, 37, 3457, 3, 56, 0, 46)) !== array(0, 2, 3, 6, 53, 423, 423, 423, 1234,\
    \ 145, 37, 46, 56, 463, 3457)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, -11, -32, 43, 54, -98, 2, -3)) !== array(-3,\
    \ -32, -98, -11, 1, 2, 43, 54)) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11)) !== array(1, 10, 2,\
    \ 11, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(0, 6, 6, -76, -21, 23, 4)) !== array(-76, -21, 0, 4, 23, 6,\
    \ 6)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp9_2jvqrb.php:22\n\
    Stack trace:\n#0 /tmp/tmp9_2jvqrb.php(30): test()\n#1 {main}\n  thrown in /tmp/tmp9_2jvqrb.php\
    \ on line 22\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function which sorts the given list of integers\n//\
    \ in ascending order according to the sum of their digits.\n// Note: if there\
    \ are several items with similar sum of their digits,\n// order them based on\
    \ their index in original list.\n// For example:\n// >>> order_by_points([1, 11,\
    \ -1, -11, -12]) == [-1, -11, 1, -12, 11]\n// >>> order_by_points([]) == []\n\
    function order_by_points($nums) {\n    $sums = [];\n    foreach ($nums as $key\
    \ => $num) {\n        $sum = 0;\n        $num = abs($num);\n        while ($num\
    \ > 0) {\n            $sum += $num % 10;\n            $num = floor($num / 10);\n\
    \        }\n        $sums[$key] = $sum;\n    }\n    asort($sums);\n    $result\
    \ = [];\n    foreach ($sums as $key => $sum) {\n        $result[] = $nums[$key];\n\
    \    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return order_by_points(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 11, -1, -11, -12)) !==\
    \ array(-1, -11, 1, -12, 11)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56,\
    \ 0, 46)) !== array(0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463,\
    \ 3457)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -11, -32, 43, 54, -98, 2, -3)) !== array(-3, -32, -98, -11, 1, 2, 43, 54)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11)) !== array(1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 6, 6, -76, -21,\
    \ 23, 4)) !== array(-76, -21, 0, 4, 23, 6, 6)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmppih2rh6e.php:33\n\
    Stack trace:\n#0 /tmp/tmppih2rh6e.php(41): test()\n#1 {main}\n  thrown in /tmp/tmppih2rh6e.php\
    \ on line 33\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function which sorts the given list of integers\n//\
    \ in ascending order according to the sum of their digits.\n// Note: if there\
    \ are several items with similar sum of their digits,\n// order them based on\
    \ their index in original list.\n// For example:\n// >>> order_by_points([1, 11,\
    \ -1, -11, -12]) == [-1, -11, 1, -12, 11]\n// >>> order_by_points([]) == []\n\
    function order_by_points($nums) {\n    $points = array_map(function($num) {\n\
    \        return array_sum(str_split($num));\n    }, $nums);\n    array_multisort($points,\
    \ SORT_ASC, $nums);\n    return $nums;\n}\n\nfunction candidate(...$args) {\n\
    \    return order_by_points(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 11, -1, -11, -12)) !== array(-1, -11, 1, -12, 11)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1234, 423, 463, 145, 2, 423, 423,\
    \ 53, 6, 37, 3457, 3, 56, 0, 46)) !== array(0, 2, 3, 6, 53, 423, 423, 423, 1234,\
    \ 145, 37, 46, 56, 463, 3457)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, -11, -32, 43, 54, -98, 2, -3)) !== array(-3,\
    \ -32, -98, -11, 1, 2, 43, 54)) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11)) !== array(1, 10, 2,\
    \ 11, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(0, 6, 6, -76, -21, 23, 4)) !== array(-76, -21, 0, 4, 23, 6,\
    \ 6)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpg9_s4vkk.php:22\n\
    Stack trace:\n#0 /tmp/tmpg9_s4vkk.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpg9_s4vkk.php\
    \ on line 22\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function which sorts the given list of integers\n//\
    \ in ascending order according to the sum of their digits.\n// Note: if there\
    \ are several items with similar sum of their digits,\n// order them based on\
    \ their index in original list.\n// For example:\n// >>> order_by_points([1, 11,\
    \ -1, -11, -12]) == [-1, -11, 1, -12, 11]\n// >>> order_by_points([]) == []\n\
    function order_by_points($nums) {\n    $sum = [];\n    foreach ($nums as $key\
    \ => $value) {\n        $sum[$key] = array_sum(str_split($value));\n    }\n  \
    \  array_multisort($sum, SORT_ASC, $nums);\n    return $nums;\n}\n\nfunction candidate(...$args)\
    \ {\n    return order_by_points(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(array(1, 11, -1, -11, -12)) !== array(-1, -11, 1, -12, 11)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1234, 423,\
    \ 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46)) !== array(0, 2, 3, 6,\
    \ 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, -11, -32, 43, 54, -98, 2, -3))\
    \ !== array(-3, -32, -98, -11, 1, 2, 43, 54)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11)) !== array(1,\
    \ 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(0, 6, 6, -76, -21, 23, 4)) !== array(-76, -21, 0, 4,\
    \ 23, 6, 6)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp14sh_8fu.php:23\n\
    Stack trace:\n#0 /tmp/tmp14sh_8fu.php(31): test()\n#1 {main}\n  thrown in /tmp/tmp14sh_8fu.php\
    \ on line 23\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function which sorts the given list of integers\n//\
    \ in ascending order according to the sum of their digits.\n// Note: if there\
    \ are several items with similar sum of their digits,\n// order them based on\
    \ their index in original list.\n// For example:\n// >>> order_by_points([1, 11,\
    \ -1, -11, -12]) == [-1, -11, 1, -12, 11]\n// >>> order_by_points([]) == []\n\
    function order_by_points($nums) {\n    $sums = [];\n    foreach ($nums as $key\
    \ => $num) {\n        $sum = 0;\n        $num = abs($num);\n        while ($num\
    \ > 0) {\n            $sum += $num % 10;\n            $num = (int)($num / 10);\n\
    \        }\n        $sums[$key] = $sum;\n    }\n    asort($sums);\n    $result\
    \ = [];\n    foreach ($sums as $key => $sum) {\n        $result[] = $nums[$key];\n\
    \    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return order_by_points(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 11, -1, -11, -12)) !==\
    \ array(-1, -11, 1, -12, 11)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56,\
    \ 0, 46)) !== array(0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463,\
    \ 3457)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -11, -32, 43, 54, -98, 2, -3)) !== array(-3, -32, -98, -11, 1, 2, 43, 54)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11)) !== array(1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 6, 6, -76, -21,\
    \ 23, 4)) !== array(-76, -21, 0, 4, 23, 6, 6)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpdwyzza5p.php:33\n\
    Stack trace:\n#0 /tmp/tmpdwyzza5p.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpdwyzza5p.php\
    \ on line 33\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function which sorts the given list of integers\n//\
    \ in ascending order according to the sum of their digits.\n// Note: if there\
    \ are several items with similar sum of their digits,\n// order them based on\
    \ their index in original list.\n// For example:\n// >>> order_by_points([1, 11,\
    \ -1, -11, -12]) == [-1, -11, 1, -12, 11]\n// >>> order_by_points([]) == []\n\
    function order_by_points($nums) {\n    $sums = [];\n    foreach ($nums as $key\
    \ => $num) {\n        $sums[$key] = array_sum(str_split($num));\n    }\n    asort($sums);\n\
    \    $result = [];\n    foreach ($sums as $key => $sum) {\n        $result[] =\
    \ $nums[$key];\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return order_by_points(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(array(1, 11, -1, -11, -12)) !== array(-1, -11, 1, -12, 11)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1234, 423,\
    \ 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46)) !== array(0, 2, 3, 6,\
    \ 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, -11, -32, 43, 54, -98, 2, -3))\
    \ !== array(-3, -32, -98, -11, 1, 2, 43, 54)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11)) !== array(1,\
    \ 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(0, 6, 6, -76, -21, 23, 4)) !== array(-76, -21, 0, 4,\
    \ 23, 6, 6)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpzab3dftw.php:27\n\
    Stack trace:\n#0 /tmp/tmpzab3dftw.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpzab3dftw.php\
    \ on line 27\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function which sorts the given list of integers\n//\
    \ in ascending order according to the sum of their digits.\n// Note: if there\
    \ are several items with similar sum of their digits,\n// order them based on\
    \ their index in original list.\n// For example:\n// >>> order_by_points([1, 11,\
    \ -1, -11, -12]) == [-1, -11, 1, -12, 11]\n// >>> order_by_points([]) == []\n\
    function order_by_points($nums) {\n    $result = [];\n    foreach ($nums as $key\
    \ => $num) {\n        $result[$key] = array_sum(str_split($num));\n    }\n   \
    \ asort($result);\n    $result = array_keys($result);\n    $result = array_map(function($num)\
    \ use ($nums) {\n        return $nums[$num];\n    }, $result);\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return order_by_points(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(array(1, 11, -1, -11, -12)) !== array(-1,\
    \ -11, 1, -12, 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46)) !== array(0, 2,\
    \ 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, -11, -32, 43, 54, -98, 2, -3))\
    \ !== array(-3, -32, -98, -11, 1, 2, 43, 54)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11)) !== array(1,\
    \ 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(0, 6, 6, -76, -21, 23, 4)) !== array(-76, -21, 0, 4,\
    \ 23, 6, 6)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp5cw2kgl7.php:27\n\
    Stack trace:\n#0 /tmp/tmp5cw2kgl7.php(35): test()\n#1 {main}\n  thrown in /tmp/tmp5cw2kgl7.php\
    \ on line 27\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function which sorts the given list of integers\n//\
    \ in ascending order according to the sum of their digits.\n// Note: if there\
    \ are several items with similar sum of their digits,\n// order them based on\
    \ their index in original list.\n// For example:\n// >>> order_by_points([1, 11,\
    \ -1, -11, -12]) == [-1, -11, 1, -12, 11]\n// >>> order_by_points([]) == []\n\
    function order_by_points($nums) {\n    $sum_nums = [];\n    foreach ($nums as\
    \ $key => $num) {\n        $sum_nums[$key] = array_sum(str_split($num));\n   \
    \ }\n    asort($sum_nums);\n    $result = [];\n    foreach ($sum_nums as $key\
    \ => $sum_num) {\n        $result[] = $nums[$key];\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return order_by_points(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(array(1, 11, -1, -11, -12)) !== array(-1,\
    \ -11, 1, -12, 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46)) !== array(0, 2,\
    \ 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, -11, -32, 43, 54, -98, 2, -3))\
    \ !== array(-3, -32, -98, -11, 1, 2, 43, 54)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11)) !== array(1,\
    \ 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(0, 6, 6, -76, -21, 23, 4)) !== array(-76, -21, 0, 4,\
    \ 23, 6, 6)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmps18bqycm.php:27\n\
    Stack trace:\n#0 /tmp/tmps18bqycm.php(35): test()\n#1 {main}\n  thrown in /tmp/tmps18bqycm.php\
    \ on line 27\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function which sorts the given list of integers\n//\
    \ in ascending order according to the sum of their digits.\n// Note: if there\
    \ are several items with similar sum of their digits,\n// order them based on\
    \ their index in original list.\n// For example:\n// >>> order_by_points([1, 11,\
    \ -1, -11, -12]) == [-1, -11, 1, -12, 11]\n// >>> order_by_points([]) == []\n\
    function order_by_points($nums) {\n    $sums = [];\n    foreach ($nums as $key\
    \ => $num) {\n        $sums[$key] = array_sum(str_split($num));\n    }\n    array_multisort($sums,\
    \ SORT_ASC, $nums);\n    return $nums;\n}\n\nfunction candidate(...$args) {\n\
    \    return order_by_points(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 11, -1, -11, -12)) !== array(-1, -11, 1, -12, 11)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1234, 423, 463, 145, 2, 423, 423,\
    \ 53, 6, 37, 3457, 3, 56, 0, 46)) !== array(0, 2, 3, 6, 53, 423, 423, 423, 1234,\
    \ 145, 37, 46, 56, 463, 3457)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, -11, -32, 43, 54, -98, 2, -3)) !== array(-3,\
    \ -32, -98, -11, 1, 2, 43, 54)) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11)) !== array(1, 10, 2,\
    \ 11, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(0, 6, 6, -76, -21, 23, 4)) !== array(-76, -21, 0, 4, 23, 6,\
    \ 6)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpjppceu_l.php:23\n\
    Stack trace:\n#0 /tmp/tmpjppceu_l.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpjppceu_l.php\
    \ on line 23\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function which sorts the given list of integers\n//\
    \ in ascending order according to the sum of their digits.\n// Note: if there\
    \ are several items with similar sum of their digits,\n// order them based on\
    \ their index in original list.\n// For example:\n// >>> order_by_points([1, 11,\
    \ -1, -11, -12]) == [-1, -11, 1, -12, 11]\n// >>> order_by_points([]) == []\n\
    function order_by_points($nums) {\n    $nums_with_points = [];\n    foreach ($nums\
    \ as $key => $num) {\n        $nums_with_points[$key] = [\n            'num' =>\
    \ $num,\n            'points' => array_sum(str_split(abs($num)))\n        ];\n\
    \    }\n    usort($nums_with_points, function ($a, $b) {\n        if ($a['points']\
    \ == $b['points']) {\n            return $a['num'] <=> $b['num'];\n        }\n\
    \        return $a['points'] <=> $b['points'];\n    });\n    return array_column($nums_with_points,\
    \ 'num');\n}\n\nfunction candidate(...$args) {\n    return order_by_points(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 11, -1, -11, -12)) !==\
    \ array(-1, -11, 1, -12, 11)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56,\
    \ 0, 46)) !== array(0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463,\
    \ 3457)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -11, -32, 43, 54, -98, 2, -3)) !== array(-3, -32, -98, -11, 1, 2, 43, 54)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11)) !== array(1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 6, 6, -76, -21,\
    \ 23, 4)) !== array(-76, -21, 0, 4, 23, 6, 6)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpkkdba5nh.php:31\n\
    Stack trace:\n#0 /tmp/tmpkkdba5nh.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpkkdba5nh.php\
    \ on line 31\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function which sorts the given list of integers\n//\
    \ in ascending order according to the sum of their digits.\n// Note: if there\
    \ are several items with similar sum of their digits,\n// order them based on\
    \ their index in original list.\n// For example:\n// >>> order_by_points([1, 11,\
    \ -1, -11, -12]) == [-1, -11, 1, -12, 11]\n// >>> order_by_points([]) == []\n\
    function order_by_points($nums) {\n    $sums = [];\n    foreach ($nums as $key\
    \ => $num) {\n        $sums[$key] = array_sum(str_split($num));\n    }\n    asort($sums);\n\
    \    $result = [];\n    foreach ($sums as $key => $sum) {\n        $result[] =\
    \ $nums[$key];\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return order_by_points(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(array(1, 11, -1, -11, -12)) !== array(-1, -11, 1, -12, 11)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1234, 423,\
    \ 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46)) !== array(0, 2, 3, 6,\
    \ 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, -11, -32, 43, 54, -98, 2, -3))\
    \ !== array(-3, -32, -98, -11, 1, 2, 43, 54)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11)) !== array(1,\
    \ 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(0, 6, 6, -76, -21, 23, 4)) !== array(-76, -21, 0, 4,\
    \ 23, 6, 6)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpswtqj3v2.php:27\n\
    Stack trace:\n#0 /tmp/tmpswtqj3v2.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpswtqj3v2.php\
    \ on line 27\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function which sorts the given list of integers\n//\
    \ in ascending order according to the sum of their digits.\n// Note: if there\
    \ are several items with similar sum of their digits,\n// order them based on\
    \ their index in original list.\n// For example:\n// >>> order_by_points([1, 11,\
    \ -1, -11, -12]) == [-1, -11, 1, -12, 11]\n// >>> order_by_points([]) == []\n\
    function order_by_points($nums) {\n    $nums = array_map(function($num) {\n  \
    \      return [$num, array_sum(str_split($num))];\n    }, $nums);\n    usort($nums,\
    \ function($a, $b) {\n        if ($a[1] == $b[1]) {\n            return 0;\n \
    \       }\n        return ($a[1] < $b[1]) ? -1 : 1;\n    });\n    return array_map(function($num)\
    \ {\n        return $num[0];\n    }, $nums);\n}\n\nfunction candidate(...$args)\
    \ {\n    return order_by_points(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(array(1, 11, -1, -11, -12)) !== array(-1, -11, 1, -12, 11)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1234, 423,\
    \ 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46)) !== array(0, 2, 3, 6,\
    \ 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, -11, -32, 43, 54, -98, 2, -3))\
    \ !== array(-3, -32, -98, -11, 1, 2, 43, 54)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11)) !== array(1,\
    \ 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(0, 6, 6, -76, -21, 23, 4)) !== array(-76, -21, 0, 4,\
    \ 23, 6, 6)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp1vvvt1xy.php:29\n\
    Stack trace:\n#0 /tmp/tmp1vvvt1xy.php(37): test()\n#1 {main}\n  thrown in /tmp/tmp1vvvt1xy.php\
    \ on line 29\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function which sorts the given list of integers\n//\
    \ in ascending order according to the sum of their digits.\n// Note: if there\
    \ are several items with similar sum of their digits,\n// order them based on\
    \ their index in original list.\n// For example:\n// >>> order_by_points([1, 11,\
    \ -1, -11, -12]) == [-1, -11, 1, -12, 11]\n// >>> order_by_points([]) == []\n\
    function order_by_points($nums) {\n    $sum_of_digits = array_map(function($num)\
    \ {\n        return array_sum(str_split($num));\n    }, $nums);\n    array_multisort($sum_of_digits,\
    \ SORT_ASC, $nums);\n    return $nums;\n}\n\nfunction candidate(...$args) {\n\
    \    return order_by_points(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 11, -1, -11, -12)) !== array(-1, -11, 1, -12, 11)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1234, 423, 463, 145, 2, 423, 423,\
    \ 53, 6, 37, 3457, 3, 56, 0, 46)) !== array(0, 2, 3, 6, 53, 423, 423, 423, 1234,\
    \ 145, 37, 46, 56, 463, 3457)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, -11, -32, 43, 54, -98, 2, -3)) !== array(-3,\
    \ -32, -98, -11, 1, 2, 43, 54)) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11)) !== array(1, 10, 2,\
    \ 11, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(0, 6, 6, -76, -21, 23, 4)) !== array(-76, -21, 0, 4, 23, 6,\
    \ 6)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpmnnier_m.php:22\n\
    Stack trace:\n#0 /tmp/tmpmnnier_m.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpmnnier_m.php\
    \ on line 22\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function which sorts the given list of integers\n//\
    \ in ascending order according to the sum of their digits.\n// Note: if there\
    \ are several items with similar sum of their digits,\n// order them based on\
    \ their index in original list.\n// For example:\n// >>> order_by_points([1, 11,\
    \ -1, -11, -12]) == [-1, -11, 1, -12, 11]\n// >>> order_by_points([]) == []\n\
    function order_by_points($nums) {\n    $result = [];\n    $sums = [];\n    foreach\
    \ ($nums as $key => $num) {\n        $sum = 0;\n        $num = abs($num);\n  \
    \      while ($num > 0) {\n            $sum += $num % 10;\n            $num =\
    \ (int)($num / 10);\n        }\n        $sums[$key] = $sum;\n    }\n    asort($sums);\n\
    \    foreach ($sums as $key => $sum) {\n        $result[] = $nums[$key];\n   \
    \ }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return order_by_points(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 11, -1, -11, -12)) !==\
    \ array(-1, -11, 1, -12, 11)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56,\
    \ 0, 46)) !== array(0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463,\
    \ 3457)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -11, -32, 43, 54, -98, 2, -3)) !== array(-3, -32, -98, -11, 1, 2, 43, 54)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11)) !== array(1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 6, 6, -76, -21,\
    \ 23, 4)) !== array(-76, -21, 0, 4, 23, 6, 6)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp9qpznm60.php:33\n\
    Stack trace:\n#0 /tmp/tmp9qpznm60.php(41): test()\n#1 {main}\n  thrown in /tmp/tmp9qpznm60.php\
    \ on line 33\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function which sorts the given list of integers\n//\
    \ in ascending order according to the sum of their digits.\n// Note: if there\
    \ are several items with similar sum of their digits,\n// order them based on\
    \ their index in original list.\n// For example:\n// >>> order_by_points([1, 11,\
    \ -1, -11, -12]) == [-1, -11, 1, -12, 11]\n// >>> order_by_points([]) == []\n\
    function order_by_points($nums) {\n    $sum = array_map(function($num) {\n   \
    \     return array_sum(str_split($num));\n    }, $nums);\n    array_multisort($sum,\
    \ SORT_ASC, $nums);\n    return $nums;\n}\n\nfunction candidate(...$args) {\n\
    \    return order_by_points(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 11, -1, -11, -12)) !== array(-1, -11, 1, -12, 11)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1234, 423, 463, 145, 2, 423, 423,\
    \ 53, 6, 37, 3457, 3, 56, 0, 46)) !== array(0, 2, 3, 6, 53, 423, 423, 423, 1234,\
    \ 145, 37, 46, 56, 463, 3457)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, -11, -32, 43, 54, -98, 2, -3)) !== array(-3,\
    \ -32, -98, -11, 1, 2, 43, 54)) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11)) !== array(1, 10, 2,\
    \ 11, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(0, 6, 6, -76, -21, 23, 4)) !== array(-76, -21, 0, 4, 23, 6,\
    \ 6)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpciepg8ft.php:22\n\
    Stack trace:\n#0 /tmp/tmpciepg8ft.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpciepg8ft.php\
    \ on line 22\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function which sorts the given list of integers\n//\
    \ in ascending order according to the sum of their digits.\n// Note: if there\
    \ are several items with similar sum of their digits,\n// order them based on\
    \ their index in original list.\n// For example:\n// >>> order_by_points([1, 11,\
    \ -1, -11, -12]) == [-1, -11, 1, -12, 11]\n// >>> order_by_points([]) == []\n\
    function order_by_points($nums) {\n    $result = [];\n    foreach ($nums as $key\
    \ => $num) {\n        $sum = 0;\n        $num = abs($num);\n        while ($num\
    \ > 0) {\n            $sum += $num % 10;\n            $num = floor($num / 10);\n\
    \        }\n        $result[$key] = $sum;\n    }\n    asort($result);\n    $result\
    \ = array_keys($result);\n    $result = array_map(function ($key) use ($nums)\
    \ {\n        return $nums[$key];\n    }, $result);\n    return $result;\n}\n\n\
    function candidate(...$args) {\n    return order_by_points(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 11, -1, -11, -12)) !== array(-1,\
    \ -11, 1, -12, 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46)) !== array(0, 2,\
    \ 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, -11, -32, 43, 54, -98, 2, -3))\
    \ !== array(-3, -32, -98, -11, 1, 2, 43, 54)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11)) !== array(1,\
    \ 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(0, 6, 6, -76, -21, 23, 4)) !== array(-76, -21, 0, 4,\
    \ 23, 6, 6)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpk0w77pev.php:33\n\
    Stack trace:\n#0 /tmp/tmpk0w77pev.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpk0w77pev.php\
    \ on line 33\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function which sorts the given list of integers\n//\
    \ in ascending order according to the sum of their digits.\n// Note: if there\
    \ are several items with similar sum of their digits,\n// order them based on\
    \ their index in original list.\n// For example:\n// >>> order_by_points([1, 11,\
    \ -1, -11, -12]) == [-1, -11, 1, -12, 11]\n// >>> order_by_points([]) == []\n\
    function order_by_points($nums) {\n    $sums = [];\n    foreach ($nums as $index\
    \ => $num) {\n        $sums[$index] = array_sum(str_split($num));\n    }\n   \
    \ asort($sums);\n    $result = [];\n    foreach ($sums as $index => $sum) {\n\
    \        $result[] = $nums[$index];\n    }\n    return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return order_by_points(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 11, -1, -11, -12)) !== array(-1,\
    \ -11, 1, -12, 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46)) !== array(0, 2,\
    \ 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, -11, -32, 43, 54, -98, 2, -3))\
    \ !== array(-3, -32, -98, -11, 1, 2, 43, 54)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11)) !== array(1,\
    \ 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(0, 6, 6, -76, -21, 23, 4)) !== array(-76, -21, 0, 4,\
    \ 23, 6, 6)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpv44s5884.php:27\n\
    Stack trace:\n#0 /tmp/tmpv44s5884.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpv44s5884.php\
    \ on line 27\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function which sorts the given list of integers\n//\
    \ in ascending order according to the sum of their digits.\n// Note: if there\
    \ are several items with similar sum of their digits,\n// order them based on\
    \ their index in original list.\n// For example:\n// >>> order_by_points([1, 11,\
    \ -1, -11, -12]) == [-1, -11, 1, -12, 11]\n// >>> order_by_points([]) == []\n\
    function order_by_points($nums) {\n    $result = [];\n    $sums = [];\n    foreach\
    \ ($nums as $key => $num) {\n        $sum = 0;\n        $num = abs($num);\n  \
    \      while ($num > 0) {\n            $sum += $num % 10;\n            $num =\
    \ (int)($num / 10);\n        }\n        $sums[$key] = $sum;\n    }\n    asort($sums);\n\
    \    foreach ($sums as $key => $sum) {\n        $result[] = $nums[$key];\n   \
    \ }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return order_by_points(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 11, -1, -11, -12)) !==\
    \ array(-1, -11, 1, -12, 11)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56,\
    \ 0, 46)) !== array(0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463,\
    \ 3457)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -11, -32, 43, 54, -98, 2, -3)) !== array(-3, -32, -98, -11, 1, 2, 43, 54)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11)) !== array(1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 6, 6, -76, -21,\
    \ 23, 4)) !== array(-76, -21, 0, 4, 23, 6, 6)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpqzu547fa.php:33\n\
    Stack trace:\n#0 /tmp/tmpqzu547fa.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpqzu547fa.php\
    \ on line 33\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function which sorts the given list of integers\n//\
    \ in ascending order according to the sum of their digits.\n// Note: if there\
    \ are several items with similar sum of their digits,\n// order them based on\
    \ their index in original list.\n// For example:\n// >>> order_by_points([1, 11,\
    \ -1, -11, -12]) == [-1, -11, 1, -12, 11]\n// >>> order_by_points([]) == []\n\
    function order_by_points($nums) {\n    $sums = [];\n    foreach ($nums as $index\
    \ => $num) {\n        $sum = array_sum(str_split($num));\n        $sums[$index]\
    \ = $sum;\n    }\n    asort($sums);\n    $result = [];\n    foreach ($sums as\
    \ $index => $sum) {\n        $result[] = $nums[$index];\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return order_by_points(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(array(1, 11, -1, -11, -12)) !== array(-1,\
    \ -11, 1, -12, 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46)) !== array(0, 2,\
    \ 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, -11, -32, 43, 54, -98, 2, -3))\
    \ !== array(-3, -32, -98, -11, 1, 2, 43, 54)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11)) !== array(1,\
    \ 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(0, 6, 6, -76, -21, 23, 4)) !== array(-76, -21, 0, 4,\
    \ 23, 6, 6)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmphk2mddjq.php:28\n\
    Stack trace:\n#0 /tmp/tmphk2mddjq.php(36): test()\n#1 {main}\n  thrown in /tmp/tmphk2mddjq.php\
    \ on line 28\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function which sorts the given list of integers\n//\
    \ in ascending order according to the sum of their digits.\n// Note: if there\
    \ are several items with similar sum of their digits,\n// order them based on\
    \ their index in original list.\n// For example:\n// >>> order_by_points([1, 11,\
    \ -1, -11, -12]) == [-1, -11, 1, -12, 11]\n// >>> order_by_points([]) == []\n\
    function order_by_points($nums) {\n    $result = [];\n    $sum = [];\n    $i =\
    \ 0;\n    foreach ($nums as $num) {\n        $sum[$i] = array_sum(str_split($num));\n\
    \        $i++;\n    }\n    asort($sum);\n    foreach ($sum as $key => $value)\
    \ {\n        $result[] = $nums[$key];\n    }\n    return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return order_by_points(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 11, -1, -11, -12)) !== array(-1,\
    \ -11, 1, -12, 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46)) !== array(0, 2,\
    \ 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, -11, -32, 43, 54, -98, 2, -3))\
    \ !== array(-3, -32, -98, -11, 1, 2, 43, 54)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11)) !== array(1,\
    \ 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(0, 6, 6, -76, -21, 23, 4)) !== array(-76, -21, 0, 4,\
    \ 23, 6, 6)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpesj2josb.php:29\n\
    Stack trace:\n#0 /tmp/tmpesj2josb.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpesj2josb.php\
    \ on line 29\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function which sorts the given list of integers\n//\
    \ in ascending order according to the sum of their digits.\n// Note: if there\
    \ are several items with similar sum of their digits,\n// order them based on\
    \ their index in original list.\n// For example:\n// >>> order_by_points([1, 11,\
    \ -1, -11, -12]) == [-1, -11, 1, -12, 11]\n// >>> order_by_points([]) == []\n\
    function order_by_points($nums) {\n    $result = [];\n    foreach ($nums as $key\
    \ => $value) {\n        $result[$key] = array_sum(str_split($value));\n    }\n\
    \    asort($result);\n    $result = array_keys($result);\n    foreach ($result\
    \ as $key => $value) {\n        $result[$key] = $nums[$value];\n    }\n    return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return order_by_points(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 11, -1, -11, -12)) !==\
    \ array(-1, -11, 1, -12, 11)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56,\
    \ 0, 46)) !== array(0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463,\
    \ 3457)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -11, -32, 43, 54, -98, 2, -3)) !== array(-3, -32, -98, -11, 1, 2, 43, 54)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11)) !== array(1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 6, 6, -76, -21,\
    \ 23, 4)) !== array(-76, -21, 0, 4, 23, 6, 6)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpifebukey.php:27\n\
    Stack trace:\n#0 /tmp/tmpifebukey.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpifebukey.php\
    \ on line 27\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function which sorts the given list of integers\n//\
    \ in ascending order according to the sum of their digits.\n// Note: if there\
    \ are several items with similar sum of their digits,\n// order them based on\
    \ their index in original list.\n// For example:\n// >>> order_by_points([1, 11,\
    \ -1, -11, -12]) == [-1, -11, 1, -12, 11]\n// >>> order_by_points([]) == []\n\
    function order_by_points($nums) {\n    $nums_sums = [];\n    foreach ($nums as\
    \ $key => $num) {\n        $nums_sums[$key] = array_sum(str_split($num));\n  \
    \  }\n    asort($nums_sums);\n    $result = [];\n    foreach ($nums_sums as $key\
    \ => $sum) {\n        $result[] = $nums[$key];\n    }\n    return $result;\n}\n\
    \nfunction candidate(...$args) {\n    return order_by_points(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(1, 11, -1, -11, -12)) !== array(-1,\
    \ -11, 1, -12, 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46)) !== array(0, 2,\
    \ 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, -11, -32, 43, 54, -98, 2, -3))\
    \ !== array(-3, -32, -98, -11, 1, 2, 43, 54)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11)) !== array(1,\
    \ 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(0, 6, 6, -76, -21, 23, 4)) !== array(-76, -21, 0, 4,\
    \ 23, 6, 6)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpz9y3cv5h.php:27\n\
    Stack trace:\n#0 /tmp/tmpz9y3cv5h.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpz9y3cv5h.php\
    \ on line 27\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function which sorts the given list of integers\n//\
    \ in ascending order according to the sum of their digits.\n// Note: if there\
    \ are several items with similar sum of their digits,\n// order them based on\
    \ their index in original list.\n// For example:\n// >>> order_by_points([1, 11,\
    \ -1, -11, -12]) == [-1, -11, 1, -12, 11]\n// >>> order_by_points([]) == []\n\
    function order_by_points($nums) {\n    $result = [];\n    $sum = [];\n    foreach\
    \ ($nums as $key => $value) {\n        $sum[$key] = array_sum(str_split($value));\n\
    \    }\n    asort($sum);\n    foreach ($sum as $key => $value) {\n        $result[]\
    \ = $nums[$key];\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return order_by_points(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(array(1, 11, -1, -11, -12)) !== array(-1, -11, 1, -12, 11)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1234, 423,\
    \ 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46)) !== array(0, 2, 3, 6,\
    \ 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, -11, -32, 43, 54, -98, 2, -3))\
    \ !== array(-3, -32, -98, -11, 1, 2, 43, 54)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11)) !== array(1,\
    \ 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(0, 6, 6, -76, -21, 23, 4)) !== array(-76, -21, 0, 4,\
    \ 23, 6, 6)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmph7mthw0p.php:27\n\
    Stack trace:\n#0 /tmp/tmph7mthw0p.php(35): test()\n#1 {main}\n  thrown in /tmp/tmph7mthw0p.php\
    \ on line 27\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function which sorts the given list of integers\n//\
    \ in ascending order according to the sum of their digits.\n// Note: if there\
    \ are several items with similar sum of their digits,\n// order them based on\
    \ their index in original list.\n// For example:\n// >>> order_by_points([1, 11,\
    \ -1, -11, -12]) == [-1, -11, 1, -12, 11]\n// >>> order_by_points([]) == []\n\
    function order_by_points($nums) {\n    $sums = [];\n    foreach ($nums as $key\
    \ => $num) {\n        $sum = 0;\n        $num = abs($num);\n        while ($num\
    \ > 0) {\n            $sum += $num % 10;\n            $num = (int)($num / 10);\n\
    \        }\n        $sums[$key] = $sum;\n    }\n    array_multisort($sums, SORT_ASC,\
    \ $nums);\n    return $nums;\n}\n\nfunction candidate(...$args) {\n    return\
    \ order_by_points(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 11, -1, -11, -12)) !== array(-1, -11, 1, -12, 11)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1234, 423, 463, 145, 2, 423, 423,\
    \ 53, 6, 37, 3457, 3, 56, 0, 46)) !== array(0, 2, 3, 6, 53, 423, 423, 423, 1234,\
    \ 145, 37, 46, 56, 463, 3457)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, -11, -32, 43, 54, -98, 2, -3)) !== array(-3,\
    \ -32, -98, -11, 1, 2, 43, 54)) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11)) !== array(1, 10, 2,\
    \ 11, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(0, 6, 6, -76, -21, 23, 4)) !== array(-76, -21, 0, 4, 23, 6,\
    \ 6)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpbc6e0t14.php:29\n\
    Stack trace:\n#0 /tmp/tmpbc6e0t14.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpbc6e0t14.php\
    \ on line 29\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function which sorts the given list of integers\n//\
    \ in ascending order according to the sum of their digits.\n// Note: if there\
    \ are several items with similar sum of their digits,\n// order them based on\
    \ their index in original list.\n// For example:\n// >>> order_by_points([1, 11,\
    \ -1, -11, -12]) == [-1, -11, 1, -12, 11]\n// >>> order_by_points([]) == []\n\
    function order_by_points($nums) {\n    $sums = [];\n    foreach ($nums as $index\
    \ => $num) {\n        $sum = 0;\n        $num = abs($num);\n        while ($num\
    \ > 0) {\n            $sum += $num % 10;\n            $num = floor($num / 10);\n\
    \        }\n        $sums[$index] = $sum;\n    }\n    asort($sums);\n    $result\
    \ = [];\n    foreach ($sums as $index => $sum) {\n        $result[] = $nums[$index];\n\
    \    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return order_by_points(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 11, -1, -11, -12)) !==\
    \ array(-1, -11, 1, -12, 11)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56,\
    \ 0, 46)) !== array(0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463,\
    \ 3457)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -11, -32, 43, 54, -98, 2, -3)) !== array(-3, -32, -98, -11, 1, 2, 43, 54)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11)) !== array(1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 6, 6, -76, -21,\
    \ 23, 4)) !== array(-76, -21, 0, 4, 23, 6, 6)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpyvd04uu6.php:33\n\
    Stack trace:\n#0 /tmp/tmpyvd04uu6.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpyvd04uu6.php\
    \ on line 33\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function which sorts the given list of integers\n//\
    \ in ascending order according to the sum of their digits.\n// Note: if there\
    \ are several items with similar sum of their digits,\n// order them based on\
    \ their index in original list.\n// For example:\n// >>> order_by_points([1, 11,\
    \ -1, -11, -12]) == [-1, -11, 1, -12, 11]\n// >>> order_by_points([]) == []\n\
    function order_by_points($nums) {\n    $result = [];\n    foreach ($nums as $key\
    \ => $num) {\n        $result[$key] = array_sum(str_split($num));\n    }\n   \
    \ asort($result);\n    $result = array_keys($result);\n    foreach ($result as\
    \ $key => $value) {\n        $result[$key] = $nums[$value];\n    }\n    return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return order_by_points(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 11, -1, -11, -12)) !==\
    \ array(-1, -11, 1, -12, 11)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56,\
    \ 0, 46)) !== array(0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463,\
    \ 3457)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -11, -32, 43, 54, -98, 2, -3)) !== array(-3, -32, -98, -11, 1, 2, 43, 54)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11)) !== array(1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 6, 6, -76, -21,\
    \ 23, 4)) !== array(-76, -21, 0, 4, 23, 6, 6)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp8gjziwc1.php:27\n\
    Stack trace:\n#0 /tmp/tmp8gjziwc1.php(35): test()\n#1 {main}\n  thrown in /tmp/tmp8gjziwc1.php\
    \ on line 27\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function which sorts the given list of integers\n//\
    \ in ascending order according to the sum of their digits.\n// Note: if there\
    \ are several items with similar sum of their digits,\n// order them based on\
    \ their index in original list.\n// For example:\n// >>> order_by_points([1, 11,\
    \ -1, -11, -12]) == [-1, -11, 1, -12, 11]\n// >>> order_by_points([]) == []\n\
    function order_by_points($nums) {\n    $sums = [];\n    foreach ($nums as $key\
    \ => $num) {\n        $sums[$key] = array_sum(str_split($num));\n    }\n    asort($sums);\n\
    \    $result = [];\n    foreach ($sums as $key => $sum) {\n        $result[] =\
    \ $nums[$key];\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return order_by_points(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(array(1, 11, -1, -11, -12)) !== array(-1, -11, 1, -12, 11)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1234, 423,\
    \ 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46)) !== array(0, 2, 3, 6,\
    \ 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, -11, -32, 43, 54, -98, 2, -3))\
    \ !== array(-3, -32, -98, -11, 1, 2, 43, 54)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11)) !== array(1,\
    \ 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(0, 6, 6, -76, -21, 23, 4)) !== array(-76, -21, 0, 4,\
    \ 23, 6, 6)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpf772tgry.php:27\n\
    Stack trace:\n#0 /tmp/tmpf772tgry.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpf772tgry.php\
    \ on line 27\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function which sorts the given list of integers\n//\
    \ in ascending order according to the sum of their digits.\n// Note: if there\
    \ are several items with similar sum of their digits,\n// order them based on\
    \ their index in original list.\n// For example:\n// >>> order_by_points([1, 11,\
    \ -1, -11, -12]) == [-1, -11, 1, -12, 11]\n// >>> order_by_points([]) == []\n\
    function order_by_points($nums) {\n    $nums_with_points = [];\n    foreach ($nums\
    \ as $key => $num) {\n        $nums_with_points[$key] = [\n            'num' =>\
    \ $num,\n            'points' => array_sum(str_split(abs($num)))\n        ];\n\
    \    }\n    usort($nums_with_points, function ($a, $b) {\n        if ($a['points']\
    \ == $b['points']) {\n            return $a['num'] <=> $b['num'];\n        }\n\
    \        return $a['points'] <=> $b['points'];\n    });\n    return array_column($nums_with_points,\
    \ 'num');\n}\n\nfunction candidate(...$args) {\n    return order_by_points(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 11, -1, -11, -12)) !==\
    \ array(-1, -11, 1, -12, 11)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56,\
    \ 0, 46)) !== array(0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463,\
    \ 3457)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -11, -32, 43, 54, -98, 2, -3)) !== array(-3, -32, -98, -11, 1, 2, 43, 54)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11)) !== array(1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 6, 6, -76, -21,\
    \ 23, 4)) !== array(-76, -21, 0, 4, 23, 6, 6)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpbfgt1wug.php:31\n\
    Stack trace:\n#0 /tmp/tmpbfgt1wug.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpbfgt1wug.php\
    \ on line 31\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function which sorts the given list of integers\n//\
    \ in ascending order according to the sum of their digits.\n// Note: if there\
    \ are several items with similar sum of their digits,\n// order them based on\
    \ their index in original list.\n// For example:\n// >>> order_by_points([1, 11,\
    \ -1, -11, -12]) == [-1, -11, 1, -12, 11]\n// >>> order_by_points([]) == []\n\
    function order_by_points($nums) {\n    $sums = [];\n    foreach ($nums as $key\
    \ => $num) {\n        $sums[$key] = array_sum(str_split($num));\n    }\n    array_multisort($sums,\
    \ SORT_ASC, $nums);\n    return $nums;\n}\n\nfunction candidate(...$args) {\n\
    \    return order_by_points(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 11, -1, -11, -12)) !== array(-1, -11, 1, -12, 11)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1234, 423, 463, 145, 2, 423, 423,\
    \ 53, 6, 37, 3457, 3, 56, 0, 46)) !== array(0, 2, 3, 6, 53, 423, 423, 423, 1234,\
    \ 145, 37, 46, 56, 463, 3457)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, -11, -32, 43, 54, -98, 2, -3)) !== array(-3,\
    \ -32, -98, -11, 1, 2, 43, 54)) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11)) !== array(1, 10, 2,\
    \ 11, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(0, 6, 6, -76, -21, 23, 4)) !== array(-76, -21, 0, 4, 23, 6,\
    \ 6)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp8qtklzid.php:23\n\
    Stack trace:\n#0 /tmp/tmp8qtklzid.php(31): test()\n#1 {main}\n  thrown in /tmp/tmp8qtklzid.php\
    \ on line 23\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function which sorts the given list of integers\n//\
    \ in ascending order according to the sum of their digits.\n// Note: if there\
    \ are several items with similar sum of their digits,\n// order them based on\
    \ their index in original list.\n// For example:\n// >>> order_by_points([1, 11,\
    \ -1, -11, -12]) == [-1, -11, 1, -12, 11]\n// >>> order_by_points([]) == []\n\
    function order_by_points($nums) {\n    $sums = [];\n    foreach ($nums as $key\
    \ => $num) {\n        $sums[$key] = array_sum(str_split($num));\n    }\n    asort($sums);\n\
    \    $result = [];\n    foreach ($sums as $key => $sum) {\n        $result[] =\
    \ $nums[$key];\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return order_by_points(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(array(1, 11, -1, -11, -12)) !== array(-1, -11, 1, -12, 11)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1234, 423,\
    \ 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46)) !== array(0, 2, 3, 6,\
    \ 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, -11, -32, 43, 54, -98, 2, -3))\
    \ !== array(-3, -32, -98, -11, 1, 2, 43, 54)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11)) !== array(1,\
    \ 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(0, 6, 6, -76, -21, 23, 4)) !== array(-76, -21, 0, 4,\
    \ 23, 6, 6)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpkno_cyym.php:27\n\
    Stack trace:\n#0 /tmp/tmpkno_cyym.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpkno_cyym.php\
    \ on line 27\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function which sorts the given list of integers\n//\
    \ in ascending order according to the sum of their digits.\n// Note: if there\
    \ are several items with similar sum of their digits,\n// order them based on\
    \ their index in original list.\n// For example:\n// >>> order_by_points([1, 11,\
    \ -1, -11, -12]) == [-1, -11, 1, -12, 11]\n// >>> order_by_points([]) == []\n\
    function order_by_points($nums) {\n    $sum_digits = function($num) {\n      \
    \  $sum = 0;\n        while ($num > 0) {\n            $sum += $num % 10;\n   \
    \         $num = floor($num / 10);\n        }\n        return $sum;\n    };\n\
    \    $sums = array_map($sum_digits, $nums);\n    $sorted = array_multisort($sums,\
    \ $nums);\n    return $nums;\n}\n\nfunction candidate(...$args) {\n    return\
    \ order_by_points(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 11, -1, -11, -12)) !== array(-1, -11, 1, -12, 11)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1234, 423, 463, 145, 2, 423, 423,\
    \ 53, 6, 37, 3457, 3, 56, 0, 46)) !== array(0, 2, 3, 6, 53, 423, 423, 423, 1234,\
    \ 145, 37, 46, 56, 463, 3457)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, -11, -32, 43, 54, -98, 2, -3)) !== array(-3,\
    \ -32, -98, -11, 1, 2, 43, 54)) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11)) !== array(1, 10, 2,\
    \ 11, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(0, 6, 6, -76, -21, 23, 4)) !== array(-76, -21, 0, 4, 23, 6,\
    \ 6)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmph45ww7ta.php:28\n\
    Stack trace:\n#0 /tmp/tmph45ww7ta.php(36): test()\n#1 {main}\n  thrown in /tmp/tmph45ww7ta.php\
    \ on line 28\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function which sorts the given list of integers\n//\
    \ in ascending order according to the sum of their digits.\n// Note: if there\
    \ are several items with similar sum of their digits,\n// order them based on\
    \ their index in original list.\n// For example:\n// >>> order_by_points([1, 11,\
    \ -1, -11, -12]) == [-1, -11, 1, -12, 11]\n// >>> order_by_points([]) == []\n\
    function order_by_points($nums) {\n    $result = [];\n    $sums = [];\n    foreach\
    \ ($nums as $key => $num) {\n        $sum = 0;\n        foreach (str_split($num)\
    \ as $digit) {\n            $sum += $digit;\n        }\n        $sums[$key] =\
    \ $sum;\n    }\n    asort($sums);\n    foreach ($sums as $key => $sum) {\n   \
    \     $result[] = $nums[$key];\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return order_by_points(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(array(1, 11, -1, -11, -12)) !== array(-1, -11, 1, -12, 11)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1234, 423,\
    \ 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46)) !== array(0, 2, 3, 6,\
    \ 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, -11, -32, 43, 54, -98, 2, -3))\
    \ !== array(-3, -32, -98, -11, 1, 2, 43, 54)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11)) !== array(1,\
    \ 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(0, 6, 6, -76, -21, 23, 4)) !== array(-76, -21, 0, 4,\
    \ 23, 6, 6)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught TypeError: Unsupported operand types: int +\
    \ string in /tmp/tmpugm8hoyo.php:15\nStack trace:\n#0 /tmp/tmpugm8hoyo.php(27):\
    \ order_by_points()\n#1 /tmp/tmpugm8hoyo.php(31): candidate()\n#2 /tmp/tmpugm8hoyo.php(39):\
    \ test()\n#3 {main}\n  thrown in /tmp/tmpugm8hoyo.php on line 15\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function which sorts the given list of integers\n//\
    \ in ascending order according to the sum of their digits.\n// Note: if there\
    \ are several items with similar sum of their digits,\n// order them based on\
    \ their index in original list.\n// For example:\n// >>> order_by_points([1, 11,\
    \ -1, -11, -12]) == [-1, -11, 1, -12, 11]\n// >>> order_by_points([]) == []\n\
    function order_by_points($nums) {\n    $arr = [];\n    foreach ($nums as $key\
    \ => $num) {\n        $arr[$key] = array_sum(str_split($num));\n    }\n    asort($arr);\n\
    \    $res = [];\n    foreach ($arr as $key => $value) {\n        $res[] = $nums[$key];\n\
    \    }\n    return $res;\n}\n\nfunction candidate(...$args) {\n    return order_by_points(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 11, -1, -11, -12)) !==\
    \ array(-1, -11, 1, -12, 11)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56,\
    \ 0, 46)) !== array(0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463,\
    \ 3457)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -11, -32, 43, 54, -98, 2, -3)) !== array(-3, -32, -98, -11, 1, 2, 43, 54)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11)) !== array(1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 6, 6, -76, -21,\
    \ 23, 4)) !== array(-76, -21, 0, 4, 23, 6, 6)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpkfkl96im.php:27\n\
    Stack trace:\n#0 /tmp/tmpkfkl96im.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpkfkl96im.php\
    \ on line 27\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function which sorts the given list of integers\n//\
    \ in ascending order according to the sum of their digits.\n// Note: if there\
    \ are several items with similar sum of their digits,\n// order them based on\
    \ their index in original list.\n// For example:\n// >>> order_by_points([1, 11,\
    \ -1, -11, -12]) == [-1, -11, 1, -12, 11]\n// >>> order_by_points([]) == []\n\
    function order_by_points($nums) {\n    $sum_nums = [];\n    foreach ($nums as\
    \ $key => $num) {\n        $sum_nums[$key] = array_sum(str_split($num));\n   \
    \ }\n    asort($sum_nums);\n    $result = [];\n    foreach ($sum_nums as $key\
    \ => $sum_num) {\n        $result[] = $nums[$key];\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return order_by_points(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(array(1, 11, -1, -11, -12)) !== array(-1,\
    \ -11, 1, -12, 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46)) !== array(0, 2,\
    \ 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, -11, -32, 43, 54, -98, 2, -3))\
    \ !== array(-3, -32, -98, -11, 1, 2, 43, 54)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11)) !== array(1,\
    \ 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(0, 6, 6, -76, -21, 23, 4)) !== array(-76, -21, 0, 4,\
    \ 23, 6, 6)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmptyabua3g.php:27\n\
    Stack trace:\n#0 /tmp/tmptyabua3g.php(35): test()\n#1 {main}\n  thrown in /tmp/tmptyabua3g.php\
    \ on line 27\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function which sorts the given list of integers\n//\
    \ in ascending order according to the sum of their digits.\n// Note: if there\
    \ are several items with similar sum of their digits,\n// order them based on\
    \ their index in original list.\n// For example:\n// >>> order_by_points([1, 11,\
    \ -1, -11, -12]) == [-1, -11, 1, -12, 11]\n// >>> order_by_points([]) == []\n\
    function order_by_points($nums) {\n    $sums = array_map(function($num) {\n  \
    \      $sum = 0;\n        while ($num > 0) {\n            $sum += $num % 10;\n\
    \            $num = floor($num / 10);\n        }\n        return $sum;\n    },\
    \ $nums);\n    array_multisort($sums, $nums);\n    return $nums;\n}\n\nfunction\
    \ candidate(...$args) {\n    return order_by_points(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 11, -1, -11, -12)) !== array(-1,\
    \ -11, 1, -12, 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46)) !== array(0, 2,\
    \ 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, -11, -32, 43, 54, -98, 2, -3))\
    \ !== array(-3, -32, -98, -11, 1, 2, 43, 54)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11)) !== array(1,\
    \ 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(0, 6, 6, -76, -21, 23, 4)) !== array(-76, -21, 0, 4,\
    \ 23, 6, 6)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpfh6h4aj3.php:27\n\
    Stack trace:\n#0 /tmp/tmpfh6h4aj3.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpfh6h4aj3.php\
    \ on line 27\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function which sorts the given list of integers\n//\
    \ in ascending order according to the sum of their digits.\n// Note: if there\
    \ are several items with similar sum of their digits,\n// order them based on\
    \ their index in original list.\n// For example:\n// >>> order_by_points([1, 11,\
    \ -1, -11, -12]) == [-1, -11, 1, -12, 11]\n// >>> order_by_points([]) == []\n\
    function order_by_points($nums) {\n    $sum = [];\n    foreach ($nums as $key\
    \ => $num) {\n        $sum[$key] = array_sum(str_split($num));\n    }\n    array_multisort($sum,\
    \ SORT_ASC, $nums);\n    return $nums;\n}\n\nfunction candidate(...$args) {\n\
    \    return order_by_points(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 11, -1, -11, -12)) !== array(-1, -11, 1, -12, 11)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1234, 423, 463, 145, 2, 423, 423,\
    \ 53, 6, 37, 3457, 3, 56, 0, 46)) !== array(0, 2, 3, 6, 53, 423, 423, 423, 1234,\
    \ 145, 37, 46, 56, 463, 3457)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, -11, -32, 43, 54, -98, 2, -3)) !== array(-3,\
    \ -32, -98, -11, 1, 2, 43, 54)) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11)) !== array(1, 10, 2,\
    \ 11, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(0, 6, 6, -76, -21, 23, 4)) !== array(-76, -21, 0, 4, 23, 6,\
    \ 6)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpito_vf8c.php:23\n\
    Stack trace:\n#0 /tmp/tmpito_vf8c.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpito_vf8c.php\
    \ on line 23\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function which sorts the given list of integers\n//\
    \ in ascending order according to the sum of their digits.\n// Note: if there\
    \ are several items with similar sum of their digits,\n// order them based on\
    \ their index in original list.\n// For example:\n// >>> order_by_points([1, 11,\
    \ -1, -11, -12]) == [-1, -11, 1, -12, 11]\n// >>> order_by_points([]) == []\n\
    function order_by_points($nums) {\n    $sums = array_map(function($num) {\n  \
    \      $sum = 0;\n        while ($num > 0) {\n            $sum += $num % 10;\n\
    \            $num = (int)($num / 10);\n        }\n        return $sum;\n    },\
    \ $nums);\n    array_multisort($sums, $nums);\n    return $nums;\n}\n\nfunction\
    \ candidate(...$args) {\n    return order_by_points(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 11, -1, -11, -12)) !== array(-1,\
    \ -11, 1, -12, 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46)) !== array(0, 2,\
    \ 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, -11, -32, 43, 54, -98, 2, -3))\
    \ !== array(-3, -32, -98, -11, 1, 2, 43, 54)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11)) !== array(1,\
    \ 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(0, 6, 6, -76, -21, 23, 4)) !== array(-76, -21, 0, 4,\
    \ 23, 6, 6)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp0g33ijvn.php:27\n\
    Stack trace:\n#0 /tmp/tmp0g33ijvn.php(35): test()\n#1 {main}\n  thrown in /tmp/tmp0g33ijvn.php\
    \ on line 27\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function which sorts the given list of integers\n//\
    \ in ascending order according to the sum of their digits.\n// Note: if there\
    \ are several items with similar sum of their digits,\n// order them based on\
    \ their index in original list.\n// For example:\n// >>> order_by_points([1, 11,\
    \ -1, -11, -12]) == [-1, -11, 1, -12, 11]\n// >>> order_by_points([]) == []\n\
    function order_by_points($nums) {\n    $sums = [];\n    foreach ($nums as $index\
    \ => $num) {\n        $sums[$index] = array_sum(str_split($num));\n    }\n   \
    \ asort($sums);\n    $result = [];\n    foreach ($sums as $index => $sum) {\n\
    \        $result[] = $nums[$index];\n    }\n    return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return order_by_points(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 11, -1, -11, -12)) !== array(-1,\
    \ -11, 1, -12, 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46)) !== array(0, 2,\
    \ 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, -11, -32, 43, 54, -98, 2, -3))\
    \ !== array(-3, -32, -98, -11, 1, 2, 43, 54)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11)) !== array(1,\
    \ 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(0, 6, 6, -76, -21, 23, 4)) !== array(-76, -21, 0, 4,\
    \ 23, 6, 6)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmplugz1epr.php:27\n\
    Stack trace:\n#0 /tmp/tmplugz1epr.php(35): test()\n#1 {main}\n  thrown in /tmp/tmplugz1epr.php\
    \ on line 27\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function which sorts the given list of integers\n//\
    \ in ascending order according to the sum of their digits.\n// Note: if there\
    \ are several items with similar sum of their digits,\n// order them based on\
    \ their index in original list.\n// For example:\n// >>> order_by_points([1, 11,\
    \ -1, -11, -12]) == [-1, -11, 1, -12, 11]\n// >>> order_by_points([]) == []\n\
    function order_by_points($nums) {\n    $sums = [];\n    foreach ($nums as $index\
    \ => $num) {\n        $sums[$index] = array_sum(str_split($num));\n    }\n   \
    \ asort($sums);\n    $result = [];\n    foreach ($sums as $index => $sum) {\n\
    \        $result[] = $nums[$index];\n    }\n    return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return order_by_points(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 11, -1, -11, -12)) !== array(-1,\
    \ -11, 1, -12, 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46)) !== array(0, 2,\
    \ 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, -11, -32, 43, 54, -98, 2, -3))\
    \ !== array(-3, -32, -98, -11, 1, 2, 43, 54)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11)) !== array(1,\
    \ 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(0, 6, 6, -76, -21, 23, 4)) !== array(-76, -21, 0, 4,\
    \ 23, 6, 6)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpujnol44q.php:27\n\
    Stack trace:\n#0 /tmp/tmpujnol44q.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpujnol44q.php\
    \ on line 27\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function which sorts the given list of integers\n//\
    \ in ascending order according to the sum of their digits.\n// Note: if there\
    \ are several items with similar sum of their digits,\n// order them based on\
    \ their index in original list.\n// For example:\n// >>> order_by_points([1, 11,\
    \ -1, -11, -12]) == [-1, -11, 1, -12, 11]\n// >>> order_by_points([]) == []\n\
    function order_by_points($nums) {\n    $result = [];\n    foreach ($nums as $key\
    \ => $value) {\n        $sum = 0;\n        $value = abs($value);\n        while\
    \ ($value > 0) {\n            $sum += $value % 10;\n            $value = (int)($value\
    \ / 10);\n        }\n        $result[$key] = $sum;\n    }\n    asort($result);\n\
    \    $result = array_keys($result);\n    foreach ($result as $key => $value) {\n\
    \        $result[$key] = $nums[$value];\n    }\n    return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return order_by_points(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 11, -1, -11, -12)) !== array(-1,\
    \ -11, 1, -12, 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46)) !== array(0, 2,\
    \ 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, -11, -32, 43, 54, -98, 2, -3))\
    \ !== array(-3, -32, -98, -11, 1, 2, 43, 54)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11)) !== array(1,\
    \ 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(0, 6, 6, -76, -21, 23, 4)) !== array(-76, -21, 0, 4,\
    \ 23, 6, 6)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp5p_w88vm.php:33\n\
    Stack trace:\n#0 /tmp/tmp5p_w88vm.php(41): test()\n#1 {main}\n  thrown in /tmp/tmp5p_w88vm.php\
    \ on line 33\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function which sorts the given list of integers\n//\
    \ in ascending order according to the sum of their digits.\n// Note: if there\
    \ are several items with similar sum of their digits,\n// order them based on\
    \ their index in original list.\n// For example:\n// >>> order_by_points([1, 11,\
    \ -1, -11, -12]) == [-1, -11, 1, -12, 11]\n// >>> order_by_points([]) == []\n\
    function order_by_points($nums) {\n    $result = [];\n    $sums = [];\n    foreach\
    \ ($nums as $key => $num) {\n        $sum = 0;\n        foreach (str_split($num)\
    \ as $digit) {\n            $sum += $digit;\n        }\n        $sums[$key] =\
    \ $sum;\n    }\n    asort($sums);\n    foreach ($sums as $key => $sum) {\n   \
    \     $result[] = $nums[$key];\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return order_by_points(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(array(1, 11, -1, -11, -12)) !== array(-1, -11, 1, -12, 11)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1234, 423,\
    \ 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46)) !== array(0, 2, 3, 6,\
    \ 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, -11, -32, 43, 54, -98, 2, -3))\
    \ !== array(-3, -32, -98, -11, 1, 2, 43, 54)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11)) !== array(1,\
    \ 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(0, 6, 6, -76, -21, 23, 4)) !== array(-76, -21, 0, 4,\
    \ 23, 6, 6)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught TypeError: Unsupported operand types: int +\
    \ string in /tmp/tmp6e7qk2ty.php:15\nStack trace:\n#0 /tmp/tmp6e7qk2ty.php(27):\
    \ order_by_points()\n#1 /tmp/tmp6e7qk2ty.php(31): candidate()\n#2 /tmp/tmp6e7qk2ty.php(39):\
    \ test()\n#3 {main}\n  thrown in /tmp/tmp6e7qk2ty.php on line 15\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function which sorts the given list of integers\n//\
    \ in ascending order according to the sum of their digits.\n// Note: if there\
    \ are several items with similar sum of their digits,\n// order them based on\
    \ their index in original list.\n// For example:\n// >>> order_by_points([1, 11,\
    \ -1, -11, -12]) == [-1, -11, 1, -12, 11]\n// >>> order_by_points([]) == []\n\
    function order_by_points($nums) {\n    $sums = array_map(function($num) {\n  \
    \      return array_sum(str_split($num));\n    }, $nums);\n    array_multisort($sums,\
    \ $nums);\n    return $nums;\n}\n\nfunction candidate(...$args) {\n    return\
    \ order_by_points(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 11, -1, -11, -12)) !== array(-1, -11, 1, -12, 11)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1234, 423, 463, 145, 2, 423, 423,\
    \ 53, 6, 37, 3457, 3, 56, 0, 46)) !== array(0, 2, 3, 6, 53, 423, 423, 423, 1234,\
    \ 145, 37, 46, 56, 463, 3457)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, -11, -32, 43, 54, -98, 2, -3)) !== array(-3,\
    \ -32, -98, -11, 1, 2, 43, 54)) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11)) !== array(1, 10, 2,\
    \ 11, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(0, 6, 6, -76, -21, 23, 4)) !== array(-76, -21, 0, 4, 23, 6,\
    \ 6)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmplkpjz1k2.php:22\n\
    Stack trace:\n#0 /tmp/tmplkpjz1k2.php(30): test()\n#1 {main}\n  thrown in /tmp/tmplkpjz1k2.php\
    \ on line 22\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function which sorts the given list of integers\n//\
    \ in ascending order according to the sum of their digits.\n// Note: if there\
    \ are several items with similar sum of their digits,\n// order them based on\
    \ their index in original list.\n// For example:\n// >>> order_by_points([1, 11,\
    \ -1, -11, -12]) == [-1, -11, 1, -12, 11]\n// >>> order_by_points([]) == []\n\
    function order_by_points($nums) {\n    $result = [];\n    $sums = [];\n    foreach\
    \ ($nums as $key => $num) {\n        $sum = 0;\n        $num = abs($num);\n  \
    \      while ($num > 0) {\n            $sum += $num % 10;\n            $num =\
    \ floor($num / 10);\n        }\n        $sums[$key] = $sum;\n    }\n    asort($sums);\n\
    \    foreach ($sums as $key => $sum) {\n        $result[] = $nums[$key];\n   \
    \ }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return order_by_points(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 11, -1, -11, -12)) !==\
    \ array(-1, -11, 1, -12, 11)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56,\
    \ 0, 46)) !== array(0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463,\
    \ 3457)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -11, -32, 43, 54, -98, 2, -3)) !== array(-3, -32, -98, -11, 1, 2, 43, 54)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11)) !== array(1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 6, 6, -76, -21,\
    \ 23, 4)) !== array(-76, -21, 0, 4, 23, 6, 6)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp57rtsg5r.php:33\n\
    Stack trace:\n#0 /tmp/tmp57rtsg5r.php(41): test()\n#1 {main}\n  thrown in /tmp/tmp57rtsg5r.php\
    \ on line 33\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function which sorts the given list of integers\n//\
    \ in ascending order according to the sum of their digits.\n// Note: if there\
    \ are several items with similar sum of their digits,\n// order them based on\
    \ their index in original list.\n// For example:\n// >>> order_by_points([1, 11,\
    \ -1, -11, -12]) == [-1, -11, 1, -12, 11]\n// >>> order_by_points([]) == []\n\
    function order_by_points($nums) {\n    $sums = [];\n    foreach ($nums as $i =>\
    \ $num) {\n        $sum = 0;\n        $num = abs($num);\n        while ($num >\
    \ 0) {\n            $sum += $num % 10;\n            $num = floor($num / 10);\n\
    \        }\n        $sums[$i] = $sum;\n    }\n    asort($sums);\n    $result =\
    \ [];\n    foreach ($sums as $i => $sum) {\n        $result[] = $nums[$i];\n \
    \   }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return order_by_points(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 11, -1, -11, -12)) !==\
    \ array(-1, -11, 1, -12, 11)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56,\
    \ 0, 46)) !== array(0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463,\
    \ 3457)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -11, -32, 43, 54, -98, 2, -3)) !== array(-3, -32, -98, -11, 1, 2, 43, 54)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11)) !== array(1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 6, 6, -76, -21,\
    \ 23, 4)) !== array(-76, -21, 0, 4, 23, 6, 6)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp7ss5mzfa.php:33\n\
    Stack trace:\n#0 /tmp/tmp7ss5mzfa.php(41): test()\n#1 {main}\n  thrown in /tmp/tmp7ss5mzfa.php\
    \ on line 33\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function which sorts the given list of integers\n//\
    \ in ascending order according to the sum of their digits.\n// Note: if there\
    \ are several items with similar sum of their digits,\n// order them based on\
    \ their index in original list.\n// For example:\n// >>> order_by_points([1, 11,\
    \ -1, -11, -12]) == [-1, -11, 1, -12, 11]\n// >>> order_by_points([]) == []\n\
    function order_by_points($nums) {\n    $sums = [];\n    foreach ($nums as $key\
    \ => $num) {\n        $sums[$key] = array_sum(str_split($num));\n    }\n    asort($sums);\n\
    \    $result = [];\n    foreach ($sums as $key => $sum) {\n        $result[] =\
    \ $nums[$key];\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return order_by_points(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(array(1, 11, -1, -11, -12)) !== array(-1, -11, 1, -12, 11)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1234, 423,\
    \ 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46)) !== array(0, 2, 3, 6,\
    \ 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, -11, -32, 43, 54, -98, 2, -3))\
    \ !== array(-3, -32, -98, -11, 1, 2, 43, 54)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11)) !== array(1,\
    \ 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(0, 6, 6, -76, -21, 23, 4)) !== array(-76, -21, 0, 4,\
    \ 23, 6, 6)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp9yungd5x.php:27\n\
    Stack trace:\n#0 /tmp/tmp9yungd5x.php(35): test()\n#1 {main}\n  thrown in /tmp/tmp9yungd5x.php\
    \ on line 27\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function which sorts the given list of integers\n//\
    \ in ascending order according to the sum of their digits.\n// Note: if there\
    \ are several items with similar sum of their digits,\n// order them based on\
    \ their index in original list.\n// For example:\n// >>> order_by_points([1, 11,\
    \ -1, -11, -12]) == [-1, -11, 1, -12, 11]\n// >>> order_by_points([]) == []\n\
    function order_by_points($nums) {\n    $sums = array_map(function($num) {\n  \
    \      return array_sum(str_split($num));\n    }, $nums);\n    array_multisort($sums,\
    \ $nums);\n    return $nums;\n}\n\nfunction candidate(...$args) {\n    return\
    \ order_by_points(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 11, -1, -11, -12)) !== array(-1, -11, 1, -12, 11)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1234, 423, 463, 145, 2, 423, 423,\
    \ 53, 6, 37, 3457, 3, 56, 0, 46)) !== array(0, 2, 3, 6, 53, 423, 423, 423, 1234,\
    \ 145, 37, 46, 56, 463, 3457)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, -11, -32, 43, 54, -98, 2, -3)) !== array(-3,\
    \ -32, -98, -11, 1, 2, 43, 54)) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11)) !== array(1, 10, 2,\
    \ 11, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(0, 6, 6, -76, -21, 23, 4)) !== array(-76, -21, 0, 4, 23, 6,\
    \ 6)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpo6m6gnk7.php:22\n\
    Stack trace:\n#0 /tmp/tmpo6m6gnk7.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpo6m6gnk7.php\
    \ on line 22\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function which sorts the given list of integers\n//\
    \ in ascending order according to the sum of their digits.\n// Note: if there\
    \ are several items with similar sum of their digits,\n// order them based on\
    \ their index in original list.\n// For example:\n// >>> order_by_points([1, 11,\
    \ -1, -11, -12]) == [-1, -11, 1, -12, 11]\n// >>> order_by_points([]) == []\n\
    function order_by_points($nums) {\n    $nums_with_points = [];\n    foreach ($nums\
    \ as $index => $num) {\n        $points = 0;\n        $num_str = (string)$num;\n\
    \        for ($i = 0; $i < strlen($num_str); $i++) {\n            $points += (int)$num_str[$i];\n\
    \        }\n        $nums_with_points[] = [$points, $index, $num];\n    }\n  \
    \  usort($nums_with_points, function ($a, $b) {\n        if ($a[0] == $b[0]) {\n\
    \            return $a[1] - $b[1];\n        }\n        return $a[0] - $b[0];\n\
    \    });\n    $result = [];\n    foreach ($nums_with_points as $num_with_points)\
    \ {\n        $result[] = $num_with_points[2];\n    }\n    return $result;\n}\n\
    \nfunction candidate(...$args) {\n    return order_by_points(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(1, 11, -1, -11, -12)) !== array(-1,\
    \ -11, 1, -12, 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46)) !== array(0, 2,\
    \ 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, -11, -32, 43, 54, -98, 2, -3))\
    \ !== array(-3, -32, -98, -11, 1, 2, 43, 54)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11)) !== array(1,\
    \ 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(0, 6, 6, -76, -21, 23, 4)) !== array(-76, -21, 0, 4,\
    \ 23, 6, 6)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmph312qj3i.php:37\n\
    Stack trace:\n#0 /tmp/tmph312qj3i.php(45): test()\n#1 {main}\n  thrown in /tmp/tmph312qj3i.php\
    \ on line 37\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function which sorts the given list of integers\n//\
    \ in ascending order according to the sum of their digits.\n// Note: if there\
    \ are several items with similar sum of their digits,\n// order them based on\
    \ their index in original list.\n// For example:\n// >>> order_by_points([1, 11,\
    \ -1, -11, -12]) == [-1, -11, 1, -12, 11]\n// >>> order_by_points([]) == []\n\
    function order_by_points($nums) {\n    $sum_nums = [];\n    foreach ($nums as\
    \ $key => $num) {\n        $sum_nums[$key] = array_sum(str_split($num));\n   \
    \ }\n    asort($sum_nums);\n    $result = [];\n    foreach ($sum_nums as $key\
    \ => $sum_num) {\n        $result[] = $nums[$key];\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return order_by_points(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(array(1, 11, -1, -11, -12)) !== array(-1,\
    \ -11, 1, -12, 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46)) !== array(0, 2,\
    \ 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, -11, -32, 43, 54, -98, 2, -3))\
    \ !== array(-3, -32, -98, -11, 1, 2, 43, 54)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11)) !== array(1,\
    \ 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(0, 6, 6, -76, -21, 23, 4)) !== array(-76, -21, 0, 4,\
    \ 23, 6, 6)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpexb1s5if.php:27\n\
    Stack trace:\n#0 /tmp/tmpexb1s5if.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpexb1s5if.php\
    \ on line 27\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function which sorts the given list of integers\n//\
    \ in ascending order according to the sum of their digits.\n// Note: if there\
    \ are several items with similar sum of their digits,\n// order them based on\
    \ their index in original list.\n// For example:\n// >>> order_by_points([1, 11,\
    \ -1, -11, -12]) == [-1, -11, 1, -12, 11]\n// >>> order_by_points([]) == []\n\
    function order_by_points($nums) {\n    $sums = [];\n    foreach ($nums as $index\
    \ => $num) {\n        $sums[$index] = array_sum(str_split($num));\n    }\n   \
    \ asort($sums);\n    $result = [];\n    foreach ($sums as $index => $sum) {\n\
    \        $result[] = $nums[$index];\n    }\n    return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return order_by_points(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 11, -1, -11, -12)) !== array(-1,\
    \ -11, 1, -12, 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46)) !== array(0, 2,\
    \ 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, -11, -32, 43, 54, -98, 2, -3))\
    \ !== array(-3, -32, -98, -11, 1, 2, 43, 54)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11)) !== array(1,\
    \ 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(0, 6, 6, -76, -21, 23, 4)) !== array(-76, -21, 0, 4,\
    \ 23, 6, 6)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp8vambniu.php:27\n\
    Stack trace:\n#0 /tmp/tmp8vambniu.php(35): test()\n#1 {main}\n  thrown in /tmp/tmp8vambniu.php\
    \ on line 27\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function which sorts the given list of integers\n//\
    \ in ascending order according to the sum of their digits.\n// Note: if there\
    \ are several items with similar sum of their digits,\n// order them based on\
    \ their index in original list.\n// For example:\n// >>> order_by_points([1, 11,\
    \ -1, -11, -12]) == [-1, -11, 1, -12, 11]\n// >>> order_by_points([]) == []\n\
    function order_by_points($nums) {\n    $result = [];\n    $sum = [];\n    foreach\
    \ ($nums as $key => $num) {\n        $sum[$key] = array_sum(str_split($num));\n\
    \    }\n    asort($sum);\n    foreach ($sum as $key => $value) {\n        $result[]\
    \ = $nums[$key];\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return order_by_points(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(array(1, 11, -1, -11, -12)) !== array(-1, -11, 1, -12, 11)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1234, 423,\
    \ 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46)) !== array(0, 2, 3, 6,\
    \ 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, -11, -32, 43, 54, -98, 2, -3))\
    \ !== array(-3, -32, -98, -11, 1, 2, 43, 54)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11)) !== array(1,\
    \ 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(0, 6, 6, -76, -21, 23, 4)) !== array(-76, -21, 0, 4,\
    \ 23, 6, 6)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp68gw8pkr.php:27\n\
    Stack trace:\n#0 /tmp/tmp68gw8pkr.php(35): test()\n#1 {main}\n  thrown in /tmp/tmp68gw8pkr.php\
    \ on line 27\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function which sorts the given list of integers\n//\
    \ in ascending order according to the sum of their digits.\n// Note: if there\
    \ are several items with similar sum of their digits,\n// order them based on\
    \ their index in original list.\n// For example:\n// >>> order_by_points([1, 11,\
    \ -1, -11, -12]) == [-1, -11, 1, -12, 11]\n// >>> order_by_points([]) == []\n\
    function order_by_points($nums) {\n    $result = [];\n    $sum = [];\n    foreach\
    \ ($nums as $key => $value) {\n        $sum[$key] = array_sum(str_split($value));\n\
    \    }\n    asort($sum);\n    foreach ($sum as $key => $value) {\n        $result[]\
    \ = $nums[$key];\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return order_by_points(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(array(1, 11, -1, -11, -12)) !== array(-1, -11, 1, -12, 11)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1234, 423,\
    \ 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46)) !== array(0, 2, 3, 6,\
    \ 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, -11, -32, 43, 54, -98, 2, -3))\
    \ !== array(-3, -32, -98, -11, 1, 2, 43, 54)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11)) !== array(1,\
    \ 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(0, 6, 6, -76, -21, 23, 4)) !== array(-76, -21, 0, 4,\
    \ 23, 6, 6)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpwn636_jw.php:27\n\
    Stack trace:\n#0 /tmp/tmpwn636_jw.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpwn636_jw.php\
    \ on line 27\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function which sorts the given list of integers\n//\
    \ in ascending order according to the sum of their digits.\n// Note: if there\
    \ are several items with similar sum of their digits,\n// order them based on\
    \ their index in original list.\n// For example:\n// >>> order_by_points([1, 11,\
    \ -1, -11, -12]) == [-1, -11, 1, -12, 11]\n// >>> order_by_points([]) == []\n\
    function order_by_points($nums) {\n    $nums_with_points = [];\n    foreach ($nums\
    \ as $index => $num) {\n        $nums_with_points[$index] = [\n            'num'\
    \ => $num,\n            'points' => array_sum(str_split(abs($num)))\n        ];\n\
    \    }\n    usort($nums_with_points, function ($a, $b) {\n        if ($a['points']\
    \ == $b['points']) {\n            return $a['index'] - $b['index'];\n        }\n\
    \        return $a['points'] - $b['points'];\n    });\n    return array_column($nums_with_points,\
    \ 'num');\n}\n\nfunction candidate(...$args) {\n    return order_by_points(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 11, -1, -11, -12)) !==\
    \ array(-1, -11, 1, -12, 11)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56,\
    \ 0, 46)) !== array(0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463,\
    \ 3457)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -11, -32, 43, 54, -98, 2, -3)) !== array(-3, -32, -98, -11, 1, 2, 43, 54)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11)) !== array(1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 6, 6, -76, -21,\
    \ 23, 4)) !== array(-76, -21, 0, 4, 23, 6, 6)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Warning:  Undefined array key \"index\" in /tmp/tmpzc4lc61k.php on\
    \ line 19\nPHP Warning:  Undefined array key \"index\" in /tmp/tmpzc4lc61k.php\
    \ on line 19\nPHP Warning:  Undefined array key \"index\" in /tmp/tmpzc4lc61k.php\
    \ on line 19\nPHP Warning:  Undefined array key \"index\" in /tmp/tmpzc4lc61k.php\
    \ on line 19\nPHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpzc4lc61k.php:31\n\
    Stack trace:\n#0 /tmp/tmpzc4lc61k.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpzc4lc61k.php\
    \ on line 31\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function which sorts the given list of integers\n//\
    \ in ascending order according to the sum of their digits.\n// Note: if there\
    \ are several items with similar sum of their digits,\n// order them based on\
    \ their index in original list.\n// For example:\n// >>> order_by_points([1, 11,\
    \ -1, -11, -12]) == [-1, -11, 1, -12, 11]\n// >>> order_by_points([]) == []\n\
    function order_by_points($nums) {\n    $nums_with_points = [];\n    foreach ($nums\
    \ as $index => $num) {\n        $points = 0;\n        $num_str = strval($num);\n\
    \        for ($i = 0; $i < strlen($num_str); $i++) {\n            $points += intval($num_str[$i]);\n\
    \        }\n        $nums_with_points[] = [$index, $points, $num];\n    }\n  \
    \  usort($nums_with_points, function ($a, $b) {\n        if ($a[1] == $b[1]) {\n\
    \            return $a[0] - $b[0];\n        }\n        return $a[1] - $b[1];\n\
    \    });\n    $result = [];\n    foreach ($nums_with_points as $num_with_points)\
    \ {\n        $result[] = $num_with_points[2];\n    }\n    return $result;\n}\n\
    \nfunction candidate(...$args) {\n    return order_by_points(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(1, 11, -1, -11, -12)) !== array(-1,\
    \ -11, 1, -12, 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46)) !== array(0, 2,\
    \ 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, -11, -32, 43, 54, -98, 2, -3))\
    \ !== array(-3, -32, -98, -11, 1, 2, 43, 54)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11)) !== array(1,\
    \ 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(0, 6, 6, -76, -21, 23, 4)) !== array(-76, -21, 0, 4,\
    \ 23, 6, 6)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp1il0oy2t.php:37\n\
    Stack trace:\n#0 /tmp/tmp1il0oy2t.php(45): test()\n#1 {main}\n  thrown in /tmp/tmp1il0oy2t.php\
    \ on line 37\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function which sorts the given list of integers\n//\
    \ in ascending order according to the sum of their digits.\n// Note: if there\
    \ are several items with similar sum of their digits,\n// order them based on\
    \ their index in original list.\n// For example:\n// >>> order_by_points([1, 11,\
    \ -1, -11, -12]) == [-1, -11, 1, -12, 11]\n// >>> order_by_points([]) == []\n\
    function order_by_points($nums) {\n    $sums = [];\n    foreach ($nums as $key\
    \ => $num) {\n        $sums[$key] = array_sum(str_split($num));\n    }\n    asort($sums);\n\
    \    $result = [];\n    foreach ($sums as $key => $sum) {\n        $result[] =\
    \ $nums[$key];\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return order_by_points(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(array(1, 11, -1, -11, -12)) !== array(-1, -11, 1, -12, 11)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1234, 423,\
    \ 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46)) !== array(0, 2, 3, 6,\
    \ 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, -11, -32, 43, 54, -98, 2, -3))\
    \ !== array(-3, -32, -98, -11, 1, 2, 43, 54)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11)) !== array(1,\
    \ 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(0, 6, 6, -76, -21, 23, 4)) !== array(-76, -21, 0, 4,\
    \ 23, 6, 6)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmptvh40e7z.php:27\n\
    Stack trace:\n#0 /tmp/tmptvh40e7z.php(35): test()\n#1 {main}\n  thrown in /tmp/tmptvh40e7z.php\
    \ on line 27\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function which sorts the given list of integers\n//\
    \ in ascending order according to the sum of their digits.\n// Note: if there\
    \ are several items with similar sum of their digits,\n// order them based on\
    \ their index in original list.\n// For example:\n// >>> order_by_points([1, 11,\
    \ -1, -11, -12]) == [-1, -11, 1, -12, 11]\n// >>> order_by_points([]) == []\n\
    function order_by_points($nums) {\n    $sum = [];\n    foreach ($nums as $key\
    \ => $value) {\n        $sum[$key] = array_sum(str_split($value));\n    }\n  \
    \  array_multisort($sum, SORT_ASC, $nums);\n    return $nums;\n}\n\nfunction candidate(...$args)\
    \ {\n    return order_by_points(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(array(1, 11, -1, -11, -12)) !== array(-1, -11, 1, -12, 11)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1234, 423,\
    \ 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46)) !== array(0, 2, 3, 6,\
    \ 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, -11, -32, 43, 54, -98, 2, -3))\
    \ !== array(-3, -32, -98, -11, 1, 2, 43, 54)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11)) !== array(1,\
    \ 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(0, 6, 6, -76, -21, 23, 4)) !== array(-76, -21, 0, 4,\
    \ 23, 6, 6)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp_sb574e6.php:23\n\
    Stack trace:\n#0 /tmp/tmp_sb574e6.php(31): test()\n#1 {main}\n  thrown in /tmp/tmp_sb574e6.php\
    \ on line 23\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function which sorts the given list of integers\n//\
    \ in ascending order according to the sum of their digits.\n// Note: if there\
    \ are several items with similar sum of their digits,\n// order them based on\
    \ their index in original list.\n// For example:\n// >>> order_by_points([1, 11,\
    \ -1, -11, -12]) == [-1, -11, 1, -12, 11]\n// >>> order_by_points([]) == []\n\
    function order_by_points($nums) {\n    $sum_of_digits = [];\n    foreach ($nums\
    \ as $key => $num) {\n        $sum_of_digits[$key] = array_sum(str_split($num));\n\
    \    }\n    array_multisort($sum_of_digits, SORT_ASC, $nums);\n    return $nums;\n\
    }\n\nfunction candidate(...$args) {\n    return order_by_points(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(array(1, 11, -1, -11, -12)) !== array(-1,\
    \ -11, 1, -12, 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46)) !== array(0, 2,\
    \ 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, -11, -32, 43, 54, -98, 2, -3))\
    \ !== array(-3, -32, -98, -11, 1, 2, 43, 54)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11)) !== array(1,\
    \ 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(0, 6, 6, -76, -21, 23, 4)) !== array(-76, -21, 0, 4,\
    \ 23, 6, 6)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpzjy84za1.php:23\n\
    Stack trace:\n#0 /tmp/tmpzjy84za1.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpzjy84za1.php\
    \ on line 23\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function which sorts the given list of integers\n//\
    \ in ascending order according to the sum of their digits.\n// Note: if there\
    \ are several items with similar sum of their digits,\n// order them based on\
    \ their index in original list.\n// For example:\n// >>> order_by_points([1, 11,\
    \ -1, -11, -12]) == [-1, -11, 1, -12, 11]\n// >>> order_by_points([]) == []\n\
    function order_by_points($nums) {\n    $sum = array_map(function($num) {\n   \
    \     $sum = 0;\n        $num = abs($num);\n        while ($num > 0) {\n     \
    \       $sum += $num % 10;\n            $num = floor($num / 10);\n        }\n\
    \        return $sum;\n    }, $nums);\n    array_multisort($sum, SORT_ASC, $nums);\n\
    \    return $nums;\n}\n\nfunction candidate(...$args) {\n    return order_by_points(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 11, -1, -11, -12)) !==\
    \ array(-1, -11, 1, -12, 11)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56,\
    \ 0, 46)) !== array(0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463,\
    \ 3457)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -11, -32, 43, 54, -98, 2, -3)) !== array(-3, -32, -98, -11, 1, 2, 43, 54)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11)) !== array(1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 6, 6, -76, -21,\
    \ 23, 4)) !== array(-76, -21, 0, 4, 23, 6, 6)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpwqm2hbrs.php:28\n\
    Stack trace:\n#0 /tmp/tmpwqm2hbrs.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpwqm2hbrs.php\
    \ on line 28\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function which sorts the given list of integers\n//\
    \ in ascending order according to the sum of their digits.\n// Note: if there\
    \ are several items with similar sum of their digits,\n// order them based on\
    \ their index in original list.\n// For example:\n// >>> order_by_points([1, 11,\
    \ -1, -11, -12]) == [-1, -11, 1, -12, 11]\n// >>> order_by_points([]) == []\n\
    function order_by_points($nums) {\n    $result = [];\n    $sums = [];\n    foreach\
    \ ($nums as $key => $num) {\n        $sum = 0;\n        $num = abs($num);\n  \
    \      while ($num > 0) {\n            $sum += $num % 10;\n            $num =\
    \ floor($num / 10);\n        }\n        $sums[$key] = $sum;\n    }\n    asort($sums);\n\
    \    foreach ($sums as $key => $sum) {\n        $result[] = $nums[$key];\n   \
    \ }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return order_by_points(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 11, -1, -11, -12)) !==\
    \ array(-1, -11, 1, -12, 11)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56,\
    \ 0, 46)) !== array(0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463,\
    \ 3457)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -11, -32, 43, 54, -98, 2, -3)) !== array(-3, -32, -98, -11, 1, 2, 43, 54)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11)) !== array(1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 6, 6, -76, -21,\
    \ 23, 4)) !== array(-76, -21, 0, 4, 23, 6, 6)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpfe9kxx0l.php:33\n\
    Stack trace:\n#0 /tmp/tmpfe9kxx0l.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpfe9kxx0l.php\
    \ on line 33\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function which sorts the given list of integers\n//\
    \ in ascending order according to the sum of their digits.\n// Note: if there\
    \ are several items with similar sum of their digits,\n// order them based on\
    \ their index in original list.\n// For example:\n// >>> order_by_points([1, 11,\
    \ -1, -11, -12]) == [-1, -11, 1, -12, 11]\n// >>> order_by_points([]) == []\n\
    function order_by_points($nums) {\n    $sums = array_map(function($num) {\n  \
    \      return array_sum(str_split($num));\n    }, $nums);\n    array_multisort($sums,\
    \ $nums);\n    return $nums;\n}\n\nfunction candidate(...$args) {\n    return\
    \ order_by_points(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 11, -1, -11, -12)) !== array(-1, -11, 1, -12, 11)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1234, 423, 463, 145, 2, 423, 423,\
    \ 53, 6, 37, 3457, 3, 56, 0, 46)) !== array(0, 2, 3, 6, 53, 423, 423, 423, 1234,\
    \ 145, 37, 46, 56, 463, 3457)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, -11, -32, 43, 54, -98, 2, -3)) !== array(-3,\
    \ -32, -98, -11, 1, 2, 43, 54)) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11)) !== array(1, 10, 2,\
    \ 11, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(0, 6, 6, -76, -21, 23, 4)) !== array(-76, -21, 0, 4, 23, 6,\
    \ 6)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpm9sov8lx.php:22\n\
    Stack trace:\n#0 /tmp/tmpm9sov8lx.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpm9sov8lx.php\
    \ on line 22\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function which sorts the given list of integers\n//\
    \ in ascending order according to the sum of their digits.\n// Note: if there\
    \ are several items with similar sum of their digits,\n// order them based on\
    \ their index in original list.\n// For example:\n// >>> order_by_points([1, 11,\
    \ -1, -11, -12]) == [-1, -11, 1, -12, 11]\n// >>> order_by_points([]) == []\n\
    function order_by_points($nums) {\n    $sums = [];\n    foreach ($nums as $key\
    \ => $num) {\n        $sum = 0;\n        $num = abs($num);\n        while ($num\
    \ > 0) {\n            $sum += $num % 10;\n            $num = (int)($num / 10);\n\
    \        }\n        $sums[$key] = $sum;\n    }\n    asort($sums);\n    $result\
    \ = [];\n    foreach ($sums as $key => $sum) {\n        $result[] = $nums[$key];\n\
    \    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return order_by_points(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 11, -1, -11, -12)) !==\
    \ array(-1, -11, 1, -12, 11)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56,\
    \ 0, 46)) !== array(0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463,\
    \ 3457)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -11, -32, 43, 54, -98, 2, -3)) !== array(-3, -32, -98, -11, 1, 2, 43, 54)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11)) !== array(1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 6, 6, -76, -21,\
    \ 23, 4)) !== array(-76, -21, 0, 4, 23, 6, 6)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp795kfgzq.php:33\n\
    Stack trace:\n#0 /tmp/tmp795kfgzq.php(41): test()\n#1 {main}\n  thrown in /tmp/tmp795kfgzq.php\
    \ on line 33\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function which sorts the given list of integers\n//\
    \ in ascending order according to the sum of their digits.\n// Note: if there\
    \ are several items with similar sum of their digits,\n// order them based on\
    \ their index in original list.\n// For example:\n// >>> order_by_points([1, 11,\
    \ -1, -11, -12]) == [-1, -11, 1, -12, 11]\n// >>> order_by_points([]) == []\n\
    function order_by_points($nums) {\n    $result = [];\n    $sum = [];\n    foreach\
    \ ($nums as $key => $num) {\n        $sum[$key] = array_sum(str_split($num));\n\
    \    }\n    asort($sum);\n    foreach ($sum as $key => $value) {\n        $result[]\
    \ = $nums[$key];\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return order_by_points(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(array(1, 11, -1, -11, -12)) !== array(-1, -11, 1, -12, 11)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1234, 423,\
    \ 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46)) !== array(0, 2, 3, 6,\
    \ 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, -11, -32, 43, 54, -98, 2, -3))\
    \ !== array(-3, -32, -98, -11, 1, 2, 43, 54)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11)) !== array(1,\
    \ 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(0, 6, 6, -76, -21, 23, 4)) !== array(-76, -21, 0, 4,\
    \ 23, 6, 6)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpf1cixzzb.php:27\n\
    Stack trace:\n#0 /tmp/tmpf1cixzzb.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpf1cixzzb.php\
    \ on line 27\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function which sorts the given list of integers\n//\
    \ in ascending order according to the sum of their digits.\n// Note: if there\
    \ are several items with similar sum of their digits,\n// order them based on\
    \ their index in original list.\n// For example:\n// >>> order_by_points([1, 11,\
    \ -1, -11, -12]) == [-1, -11, 1, -12, 11]\n// >>> order_by_points([]) == []\n\
    function order_by_points($nums) {\n    $sum_of_digits = array_map(function($num)\
    \ {\n        $sum = 0;\n        $num = abs($num);\n        while ($num > 0) {\n\
    \            $sum += $num % 10;\n            $num = floor($num / 10);\n      \
    \  }\n        return $sum;\n    }, $nums);\n    array_multisort($sum_of_digits,\
    \ SORT_ASC, $nums);\n    return $nums;\n}\n\nfunction candidate(...$args) {\n\
    \    return order_by_points(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 11, -1, -11, -12)) !== array(-1, -11, 1, -12, 11)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1234, 423, 463, 145, 2, 423, 423,\
    \ 53, 6, 37, 3457, 3, 56, 0, 46)) !== array(0, 2, 3, 6, 53, 423, 423, 423, 1234,\
    \ 145, 37, 46, 56, 463, 3457)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, -11, -32, 43, 54, -98, 2, -3)) !== array(-3,\
    \ -32, -98, -11, 1, 2, 43, 54)) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11)) !== array(1, 10, 2,\
    \ 11, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(0, 6, 6, -76, -21, 23, 4)) !== array(-76, -21, 0, 4, 23, 6,\
    \ 6)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpo_61327f.php:28\n\
    Stack trace:\n#0 /tmp/tmpo_61327f.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpo_61327f.php\
    \ on line 28\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function which sorts the given list of integers\n//\
    \ in ascending order according to the sum of their digits.\n// Note: if there\
    \ are several items with similar sum of their digits,\n// order them based on\
    \ their index in original list.\n// For example:\n// >>> order_by_points([1, 11,\
    \ -1, -11, -12]) == [-1, -11, 1, -12, 11]\n// >>> order_by_points([]) == []\n\
    function order_by_points($nums) {\n    $sums = [];\n    foreach ($nums as $key\
    \ => $num) {\n        $sums[$key] = array_sum(str_split($num));\n    }\n    array_multisort($sums,\
    \ SORT_ASC, $nums);\n    return $nums;\n}\n\nfunction candidate(...$args) {\n\
    \    return order_by_points(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 11, -1, -11, -12)) !== array(-1, -11, 1, -12, 11)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1234, 423, 463, 145, 2, 423, 423,\
    \ 53, 6, 37, 3457, 3, 56, 0, 46)) !== array(0, 2, 3, 6, 53, 423, 423, 423, 1234,\
    \ 145, 37, 46, 56, 463, 3457)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, -11, -32, 43, 54, -98, 2, -3)) !== array(-3,\
    \ -32, -98, -11, 1, 2, 43, 54)) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11)) !== array(1, 10, 2,\
    \ 11, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(0, 6, 6, -76, -21, 23, 4)) !== array(-76, -21, 0, 4, 23, 6,\
    \ 6)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpay8n4ag7.php:23\n\
    Stack trace:\n#0 /tmp/tmpay8n4ag7.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpay8n4ag7.php\
    \ on line 23\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function which sorts the given list of integers\n//\
    \ in ascending order according to the sum of their digits.\n// Note: if there\
    \ are several items with similar sum of their digits,\n// order them based on\
    \ their index in original list.\n// For example:\n// >>> order_by_points([1, 11,\
    \ -1, -11, -12]) == [-1, -11, 1, -12, 11]\n// >>> order_by_points([]) == []\n\
    function order_by_points($nums) {\n    $sums = [];\n    foreach ($nums as $key\
    \ => $num) {\n        $sums[$key] = sum_of_digits($num);\n    }\n    array_multisort($sums,\
    \ SORT_ASC, $nums);\n    return $nums;\n}\n\nfunction candidate(...$args) {\n\
    \    return order_by_points(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 11, -1, -11, -12)) !== array(-1, -11, 1, -12, 11)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1234, 423, 463, 145, 2, 423, 423,\
    \ 53, 6, 37, 3457, 3, 56, 0, 46)) !== array(0, 2, 3, 6, 53, 423, 423, 423, 1234,\
    \ 145, 37, 46, 56, 463, 3457)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, -11, -32, 43, 54, -98, 2, -3)) !== array(-3,\
    \ -32, -98, -11, 1, 2, 43, 54)) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11)) !== array(1, 10, 2,\
    \ 11, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(0, 6, 6, -76, -21, 23, 4)) !== array(-76, -21, 0, 4, 23, 6,\
    \ 6)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Error: Call to undefined function sum_of_digits()\
    \ in /tmp/tmpp0suc9yh.php:12\nStack trace:\n#0 /tmp/tmpp0suc9yh.php(19): order_by_points()\n\
    #1 /tmp/tmpp0suc9yh.php(23): candidate()\n#2 /tmp/tmpp0suc9yh.php(31): test()\n\
    #3 {main}\n  thrown in /tmp/tmpp0suc9yh.php on line 12\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function which sorts the given list of integers\n//\
    \ in ascending order according to the sum of their digits.\n// Note: if there\
    \ are several items with similar sum of their digits,\n// order them based on\
    \ their index in original list.\n// For example:\n// >>> order_by_points([1, 11,\
    \ -1, -11, -12]) == [-1, -11, 1, -12, 11]\n// >>> order_by_points([]) == []\n\
    function order_by_points($nums) {\n    $sum = array_map(function($num) {\n   \
    \     return array_sum(str_split($num));\n    }, $nums);\n    array_multisort($sum,\
    \ SORT_ASC, $nums);\n    return $nums;\n}\n\nfunction candidate(...$args) {\n\
    \    return order_by_points(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 11, -1, -11, -12)) !== array(-1, -11, 1, -12, 11)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1234, 423, 463, 145, 2, 423, 423,\
    \ 53, 6, 37, 3457, 3, 56, 0, 46)) !== array(0, 2, 3, 6, 53, 423, 423, 423, 1234,\
    \ 145, 37, 46, 56, 463, 3457)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, -11, -32, 43, 54, -98, 2, -3)) !== array(-3,\
    \ -32, -98, -11, 1, 2, 43, 54)) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11)) !== array(1, 10, 2,\
    \ 11, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(0, 6, 6, -76, -21, 23, 4)) !== array(-76, -21, 0, 4, 23, 6,\
    \ 6)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp9h65aqha.php:22\n\
    Stack trace:\n#0 /tmp/tmp9h65aqha.php(30): test()\n#1 {main}\n  thrown in /tmp/tmp9h65aqha.php\
    \ on line 22\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function which sorts the given list of integers\n//\
    \ in ascending order according to the sum of their digits.\n// Note: if there\
    \ are several items with similar sum of their digits,\n// order them based on\
    \ their index in original list.\n// For example:\n// >>> order_by_points([1, 11,\
    \ -1, -11, -12]) == [-1, -11, 1, -12, 11]\n// >>> order_by_points([]) == []\n\
    function order_by_points($nums) {\n    $nums_with_points = [];\n    foreach ($nums\
    \ as $key => $num) {\n        $nums_with_points[$key] = [\n            'num' =>\
    \ $num,\n            'points' => array_sum(str_split(abs($num)))\n        ];\n\
    \    }\n    usort($nums_with_points, function ($a, $b) {\n        if ($a['points']\
    \ == $b['points']) {\n            return $a['num'] <=> $b['num'];\n        }\n\
    \        return $a['points'] <=> $b['points'];\n    });\n    return array_column($nums_with_points,\
    \ 'num');\n}\n\nfunction candidate(...$args) {\n    return order_by_points(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 11, -1, -11, -12)) !==\
    \ array(-1, -11, 1, -12, 11)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56,\
    \ 0, 46)) !== array(0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463,\
    \ 3457)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -11, -32, 43, 54, -98, 2, -3)) !== array(-3, -32, -98, -11, 1, 2, 43, 54)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11)) !== array(1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 6, 6, -76, -21,\
    \ 23, 4)) !== array(-76, -21, 0, 4, 23, 6, 6)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpi74vum7y.php:31\n\
    Stack trace:\n#0 /tmp/tmpi74vum7y.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpi74vum7y.php\
    \ on line 31\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function which sorts the given list of integers\n//\
    \ in ascending order according to the sum of their digits.\n// Note: if there\
    \ are several items with similar sum of their digits,\n// order them based on\
    \ their index in original list.\n// For example:\n// >>> order_by_points([1, 11,\
    \ -1, -11, -12]) == [-1, -11, 1, -12, 11]\n// >>> order_by_points([]) == []\n\
    function order_by_points($nums) {\n    $sums = array_map(function($n) {\n    \
    \    return array_sum(str_split($n));\n    }, $nums);\n    array_multisort($sums,\
    \ $nums);\n    return $nums;\n}\n\nfunction candidate(...$args) {\n    return\
    \ order_by_points(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 11, -1, -11, -12)) !== array(-1, -11, 1, -12, 11)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1234, 423, 463, 145, 2, 423, 423,\
    \ 53, 6, 37, 3457, 3, 56, 0, 46)) !== array(0, 2, 3, 6, 53, 423, 423, 423, 1234,\
    \ 145, 37, 46, 56, 463, 3457)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, -11, -32, 43, 54, -98, 2, -3)) !== array(-3,\
    \ -32, -98, -11, 1, 2, 43, 54)) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11)) !== array(1, 10, 2,\
    \ 11, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(0, 6, 6, -76, -21, 23, 4)) !== array(-76, -21, 0, 4, 23, 6,\
    \ 6)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp93_ydzg1.php:22\n\
    Stack trace:\n#0 /tmp/tmp93_ydzg1.php(30): test()\n#1 {main}\n  thrown in /tmp/tmp93_ydzg1.php\
    \ on line 22\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function which sorts the given list of integers\n//\
    \ in ascending order according to the sum of their digits.\n// Note: if there\
    \ are several items with similar sum of their digits,\n// order them based on\
    \ their index in original list.\n// For example:\n// >>> order_by_points([1, 11,\
    \ -1, -11, -12]) == [-1, -11, 1, -12, 11]\n// >>> order_by_points([]) == []\n\
    function order_by_points($nums) {\n    $sum_nums = [];\n    foreach ($nums as\
    \ $key => $value) {\n        $sum_nums[$key] = array_sum(str_split($value));\n\
    \    }\n    array_multisort($sum_nums, SORT_ASC, $nums);\n    return $nums;\n\
    }\n\nfunction candidate(...$args) {\n    return order_by_points(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(array(1, 11, -1, -11, -12)) !== array(-1,\
    \ -11, 1, -12, 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46)) !== array(0, 2,\
    \ 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, -11, -32, 43, 54, -98, 2, -3))\
    \ !== array(-3, -32, -98, -11, 1, 2, 43, 54)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11)) !== array(1,\
    \ 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(0, 6, 6, -76, -21, 23, 4)) !== array(-76, -21, 0, 4,\
    \ 23, 6, 6)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpty62fuc0.php:23\n\
    Stack trace:\n#0 /tmp/tmpty62fuc0.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpty62fuc0.php\
    \ on line 23\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function which sorts the given list of integers\n//\
    \ in ascending order according to the sum of their digits.\n// Note: if there\
    \ are several items with similar sum of their digits,\n// order them based on\
    \ their index in original list.\n// For example:\n// >>> order_by_points([1, 11,\
    \ -1, -11, -12]) == [-1, -11, 1, -12, 11]\n// >>> order_by_points([]) == []\n\
    function order_by_points($nums) {\n    $result = [];\n    $sums = [];\n    foreach\
    \ ($nums as $key => $num) {\n        $sum = 0;\n        $num = abs($num);\n  \
    \      while ($num > 0) {\n            $sum += $num % 10;\n            $num =\
    \ floor($num / 10);\n        }\n        $sums[$key] = $sum;\n    }\n    asort($sums);\n\
    \    foreach ($sums as $key => $sum) {\n        $result[] = $nums[$key];\n   \
    \ }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return order_by_points(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 11, -1, -11, -12)) !==\
    \ array(-1, -11, 1, -12, 11)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56,\
    \ 0, 46)) !== array(0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463,\
    \ 3457)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -11, -32, 43, 54, -98, 2, -3)) !== array(-3, -32, -98, -11, 1, 2, 43, 54)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11)) !== array(1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 6, 6, -76, -21,\
    \ 23, 4)) !== array(-76, -21, 0, 4, 23, 6, 6)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpwhwunrlg.php:33\n\
    Stack trace:\n#0 /tmp/tmpwhwunrlg.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpwhwunrlg.php\
    \ on line 33\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function which sorts the given list of integers\n//\
    \ in ascending order according to the sum of their digits.\n// Note: if there\
    \ are several items with similar sum of their digits,\n// order them based on\
    \ their index in original list.\n// For example:\n// >>> order_by_points([1, 11,\
    \ -1, -11, -12]) == [-1, -11, 1, -12, 11]\n// >>> order_by_points([]) == []\n\
    function order_by_points($nums) {\n    $sums = [];\n    foreach ($nums as $key\
    \ => $num) {\n        $sums[$key] = array_sum(str_split($num));\n    }\n    asort($sums);\n\
    \    $result = [];\n    foreach ($sums as $key => $sum) {\n        $result[] =\
    \ $nums[$key];\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return order_by_points(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(array(1, 11, -1, -11, -12)) !== array(-1, -11, 1, -12, 11)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1234, 423,\
    \ 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46)) !== array(0, 2, 3, 6,\
    \ 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, -11, -32, 43, 54, -98, 2, -3))\
    \ !== array(-3, -32, -98, -11, 1, 2, 43, 54)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11)) !== array(1,\
    \ 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(0, 6, 6, -76, -21, 23, 4)) !== array(-76, -21, 0, 4,\
    \ 23, 6, 6)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp2prbcyhc.php:27\n\
    Stack trace:\n#0 /tmp/tmp2prbcyhc.php(35): test()\n#1 {main}\n  thrown in /tmp/tmp2prbcyhc.php\
    \ on line 27\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function which sorts the given list of integers\n//\
    \ in ascending order according to the sum of their digits.\n// Note: if there\
    \ are several items with similar sum of their digits,\n// order them based on\
    \ their index in original list.\n// For example:\n// >>> order_by_points([1, 11,\
    \ -1, -11, -12]) == [-1, -11, 1, -12, 11]\n// >>> order_by_points([]) == []\n\
    function order_by_points($nums) {\n    $sums = [];\n    foreach ($nums as $key\
    \ => $num) {\n        $sum = 0;\n        $num = abs($num);\n        while ($num\
    \ > 0) {\n            $sum += $num % 10;\n            $num = (int)($num / 10);\n\
    \        }\n        $sums[$key] = $sum;\n    }\n    asort($sums);\n    $result\
    \ = [];\n    foreach ($sums as $key => $sum) {\n        $result[] = $nums[$key];\n\
    \    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return order_by_points(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 11, -1, -11, -12)) !==\
    \ array(-1, -11, 1, -12, 11)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56,\
    \ 0, 46)) !== array(0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463,\
    \ 3457)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -11, -32, 43, 54, -98, 2, -3)) !== array(-3, -32, -98, -11, 1, 2, 43, 54)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11)) !== array(1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 6, 6, -76, -21,\
    \ 23, 4)) !== array(-76, -21, 0, 4, 23, 6, 6)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpet59ozrq.php:33\n\
    Stack trace:\n#0 /tmp/tmpet59ozrq.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpet59ozrq.php\
    \ on line 33\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function which sorts the given list of integers\n//\
    \ in ascending order according to the sum of their digits.\n// Note: if there\
    \ are several items with similar sum of their digits,\n// order them based on\
    \ their index in original list.\n// For example:\n// >>> order_by_points([1, 11,\
    \ -1, -11, -12]) == [-1, -11, 1, -12, 11]\n// >>> order_by_points([]) == []\n\
    function order_by_points($nums) {\n    $nums_with_points = [];\n    foreach ($nums\
    \ as $key => $num) {\n        $nums_with_points[$key] = [\n            'num' =>\
    \ $num,\n            'points' => array_sum(str_split(abs($num)))\n        ];\n\
    \    }\n    usort($nums_with_points, function ($a, $b) {\n        if ($a['points']\
    \ == $b['points']) {\n            return $a['num'] <=> $b['num'];\n        }\n\
    \        return $a['points'] <=> $b['points'];\n    });\n    return array_column($nums_with_points,\
    \ 'num');\n}\n\nfunction candidate(...$args) {\n    return order_by_points(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 11, -1, -11, -12)) !==\
    \ array(-1, -11, 1, -12, 11)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56,\
    \ 0, 46)) !== array(0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463,\
    \ 3457)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -11, -32, 43, 54, -98, 2, -3)) !== array(-3, -32, -98, -11, 1, 2, 43, 54)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11)) !== array(1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 6, 6, -76, -21,\
    \ 23, 4)) !== array(-76, -21, 0, 4, 23, 6, 6)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmph99hx4lg.php:31\n\
    Stack trace:\n#0 /tmp/tmph99hx4lg.php(39): test()\n#1 {main}\n  thrown in /tmp/tmph99hx4lg.php\
    \ on line 31\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function which sorts the given list of integers\n//\
    \ in ascending order according to the sum of their digits.\n// Note: if there\
    \ are several items with similar sum of their digits,\n// order them based on\
    \ their index in original list.\n// For example:\n// >>> order_by_points([1, 11,\
    \ -1, -11, -12]) == [-1, -11, 1, -12, 11]\n// >>> order_by_points([]) == []\n\
    function order_by_points($nums) {\n    $sums = [];\n    foreach ($nums as $key\
    \ => $num) {\n        $sums[$key] = array_sum(str_split($num));\n    }\n    array_multisort($sums,\
    \ SORT_ASC, $nums);\n    return $nums;\n}\n\nfunction candidate(...$args) {\n\
    \    return order_by_points(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 11, -1, -11, -12)) !== array(-1, -11, 1, -12, 11)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1234, 423, 463, 145, 2, 423, 423,\
    \ 53, 6, 37, 3457, 3, 56, 0, 46)) !== array(0, 2, 3, 6, 53, 423, 423, 423, 1234,\
    \ 145, 37, 46, 56, 463, 3457)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, -11, -32, 43, 54, -98, 2, -3)) !== array(-3,\
    \ -32, -98, -11, 1, 2, 43, 54)) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11)) !== array(1, 10, 2,\
    \ 11, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(0, 6, 6, -76, -21, 23, 4)) !== array(-76, -21, 0, 4, 23, 6,\
    \ 6)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpp3c0e495.php:23\n\
    Stack trace:\n#0 /tmp/tmpp3c0e495.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpp3c0e495.php\
    \ on line 23\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function which sorts the given list of integers\n//\
    \ in ascending order according to the sum of their digits.\n// Note: if there\
    \ are several items with similar sum of their digits,\n// order them based on\
    \ their index in original list.\n// For example:\n// >>> order_by_points([1, 11,\
    \ -1, -11, -12]) == [-1, -11, 1, -12, 11]\n// >>> order_by_points([]) == []\n\
    function order_by_points($nums) {\n    $sums = [];\n    foreach ($nums as $key\
    \ => $num) {\n        $sum = 0;\n        $num = abs($num);\n        while ($num\
    \ > 0) {\n            $sum += $num % 10;\n            $num = (int)($num / 10);\n\
    \        }\n        $sums[$key] = $sum;\n    }\n    asort($sums);\n    $result\
    \ = [];\n    foreach ($sums as $key => $sum) {\n        $result[] = $nums[$key];\n\
    \    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return order_by_points(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 11, -1, -11, -12)) !==\
    \ array(-1, -11, 1, -12, 11)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56,\
    \ 0, 46)) !== array(0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463,\
    \ 3457)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -11, -32, 43, 54, -98, 2, -3)) !== array(-3, -32, -98, -11, 1, 2, 43, 54)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11)) !== array(1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 6, 6, -76, -21,\
    \ 23, 4)) !== array(-76, -21, 0, 4, 23, 6, 6)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp86f6yq0n.php:33\n\
    Stack trace:\n#0 /tmp/tmp86f6yq0n.php(41): test()\n#1 {main}\n  thrown in /tmp/tmp86f6yq0n.php\
    \ on line 33\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function which sorts the given list of integers\n//\
    \ in ascending order according to the sum of their digits.\n// Note: if there\
    \ are several items with similar sum of their digits,\n// order them based on\
    \ their index in original list.\n// For example:\n// >>> order_by_points([1, 11,\
    \ -1, -11, -12]) == [-1, -11, 1, -12, 11]\n// >>> order_by_points([]) == []\n\
    function order_by_points($nums) {\n    $result = [];\n    foreach ($nums as $key\
    \ => $num) {\n        $result[$key] = array_sum(str_split($num));\n    }\n   \
    \ asort($result);\n    $result = array_keys($result);\n    foreach ($result as\
    \ $key => $value) {\n        $result[$key] = $nums[$value];\n    }\n    return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return order_by_points(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 11, -1, -11, -12)) !==\
    \ array(-1, -11, 1, -12, 11)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56,\
    \ 0, 46)) !== array(0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463,\
    \ 3457)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -11, -32, 43, 54, -98, 2, -3)) !== array(-3, -32, -98, -11, 1, 2, 43, 54)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11)) !== array(1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 6, 6, -76, -21,\
    \ 23, 4)) !== array(-76, -21, 0, 4, 23, 6, 6)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpm_1yss6s.php:27\n\
    Stack trace:\n#0 /tmp/tmpm_1yss6s.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpm_1yss6s.php\
    \ on line 27\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function which sorts the given list of integers\n//\
    \ in ascending order according to the sum of their digits.\n// Note: if there\
    \ are several items with similar sum of their digits,\n// order them based on\
    \ their index in original list.\n// For example:\n// >>> order_by_points([1, 11,\
    \ -1, -11, -12]) == [-1, -11, 1, -12, 11]\n// >>> order_by_points([]) == []\n\
    function order_by_points($nums) {\n    $result = [];\n    $sums = [];\n    foreach\
    \ ($nums as $key => $num) {\n        $sum = 0;\n        $num = abs($num);\n  \
    \      while ($num > 0) {\n            $sum += $num % 10;\n            $num =\
    \ floor($num / 10);\n        }\n        $sums[$key] = $sum;\n    }\n    asort($sums);\n\
    \    foreach ($sums as $key => $sum) {\n        $result[] = $nums[$key];\n   \
    \ }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return order_by_points(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 11, -1, -11, -12)) !==\
    \ array(-1, -11, 1, -12, 11)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56,\
    \ 0, 46)) !== array(0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463,\
    \ 3457)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -11, -32, 43, 54, -98, 2, -3)) !== array(-3, -32, -98, -11, 1, 2, 43, 54)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11)) !== array(1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 6, 6, -76, -21,\
    \ 23, 4)) !== array(-76, -21, 0, 4, 23, 6, 6)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpncurry7g.php:33\n\
    Stack trace:\n#0 /tmp/tmpncurry7g.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpncurry7g.php\
    \ on line 33\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function which sorts the given list of integers\n//\
    \ in ascending order according to the sum of their digits.\n// Note: if there\
    \ are several items with similar sum of their digits,\n// order them based on\
    \ their index in original list.\n// For example:\n// >>> order_by_points([1, 11,\
    \ -1, -11, -12]) == [-1, -11, 1, -12, 11]\n// >>> order_by_points([]) == []\n\
    function order_by_points($nums) {\n    $sum = [];\n    foreach ($nums as $key\
    \ => $value) {\n        $sum[$key] = array_sum(str_split($value));\n    }\n  \
    \  array_multisort($sum, SORT_ASC, $nums);\n    return $nums;\n}\n\nfunction candidate(...$args)\
    \ {\n    return order_by_points(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(array(1, 11, -1, -11, -12)) !== array(-1, -11, 1, -12, 11)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1234, 423,\
    \ 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46)) !== array(0, 2, 3, 6,\
    \ 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, -11, -32, 43, 54, -98, 2, -3))\
    \ !== array(-3, -32, -98, -11, 1, 2, 43, 54)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11)) !== array(1,\
    \ 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(0, 6, 6, -76, -21, 23, 4)) !== array(-76, -21, 0, 4,\
    \ 23, 6, 6)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpf0fmz0kl.php:23\n\
    Stack trace:\n#0 /tmp/tmpf0fmz0kl.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpf0fmz0kl.php\
    \ on line 23\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function which sorts the given list of integers\n//\
    \ in ascending order according to the sum of their digits.\n// Note: if there\
    \ are several items with similar sum of their digits,\n// order them based on\
    \ their index in original list.\n// For example:\n// >>> order_by_points([1, 11,\
    \ -1, -11, -12]) == [-1, -11, 1, -12, 11]\n// >>> order_by_points([]) == []\n\
    function order_by_points($nums) {\n    $nums_with_points = [];\n    foreach ($nums\
    \ as $index => $num) {\n        $nums_with_points[$index] = [\n            'num'\
    \ => $num,\n            'points' => array_sum(str_split(abs($num)))\n        ];\n\
    \    }\n    usort($nums_with_points, function ($a, $b) {\n        if ($a['points']\
    \ == $b['points']) {\n            return $a['index'] - $b['index'];\n        }\n\
    \        return $a['points'] - $b['points'];\n    });\n    return array_column($nums_with_points,\
    \ 'num');\n}\n\nfunction candidate(...$args) {\n    return order_by_points(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 11, -1, -11, -12)) !==\
    \ array(-1, -11, 1, -12, 11)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56,\
    \ 0, 46)) !== array(0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463,\
    \ 3457)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -11, -32, 43, 54, -98, 2, -3)) !== array(-3, -32, -98, -11, 1, 2, 43, 54)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11)) !== array(1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 6, 6, -76, -21,\
    \ 23, 4)) !== array(-76, -21, 0, 4, 23, 6, 6)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Warning:  Undefined array key \"index\" in /tmp/tmplip64uwk.php on\
    \ line 19\nPHP Warning:  Undefined array key \"index\" in /tmp/tmplip64uwk.php\
    \ on line 19\nPHP Warning:  Undefined array key \"index\" in /tmp/tmplip64uwk.php\
    \ on line 19\nPHP Warning:  Undefined array key \"index\" in /tmp/tmplip64uwk.php\
    \ on line 19\nPHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmplip64uwk.php:31\n\
    Stack trace:\n#0 /tmp/tmplip64uwk.php(39): test()\n#1 {main}\n  thrown in /tmp/tmplip64uwk.php\
    \ on line 31\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function which sorts the given list of integers\n//\
    \ in ascending order according to the sum of their digits.\n// Note: if there\
    \ are several items with similar sum of their digits,\n// order them based on\
    \ their index in original list.\n// For example:\n// >>> order_by_points([1, 11,\
    \ -1, -11, -12]) == [-1, -11, 1, -12, 11]\n// >>> order_by_points([]) == []\n\
    function order_by_points($nums) {\n    $sums = [];\n    foreach ($nums as $key\
    \ => $num) {\n        $sums[$key] = array_sum(str_split($num));\n    }\n    array_multisort($sums,\
    \ SORT_ASC, $nums);\n    return $nums;\n}\n\nfunction candidate(...$args) {\n\
    \    return order_by_points(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 11, -1, -11, -12)) !== array(-1, -11, 1, -12, 11)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1234, 423, 463, 145, 2, 423, 423,\
    \ 53, 6, 37, 3457, 3, 56, 0, 46)) !== array(0, 2, 3, 6, 53, 423, 423, 423, 1234,\
    \ 145, 37, 46, 56, 463, 3457)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, -11, -32, 43, 54, -98, 2, -3)) !== array(-3,\
    \ -32, -98, -11, 1, 2, 43, 54)) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11)) !== array(1, 10, 2,\
    \ 11, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(0, 6, 6, -76, -21, 23, 4)) !== array(-76, -21, 0, 4, 23, 6,\
    \ 6)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpg01wh7fb.php:23\n\
    Stack trace:\n#0 /tmp/tmpg01wh7fb.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpg01wh7fb.php\
    \ on line 23\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function which sorts the given list of integers\n//\
    \ in ascending order according to the sum of their digits.\n// Note: if there\
    \ are several items with similar sum of their digits,\n// order them based on\
    \ their index in original list.\n// For example:\n// >>> order_by_points([1, 11,\
    \ -1, -11, -12]) == [-1, -11, 1, -12, 11]\n// >>> order_by_points([]) == []\n\
    function order_by_points($nums) {\n  $sum_nums = [];\n  foreach ($nums as $key\
    \ => $num) {\n    $sum_nums[$key] = array_sum(str_split($num));\n  }\n  array_multisort($sum_nums,\
    \ SORT_ASC, $nums);\n  return $nums;\n}\n\nfunction candidate(...$args) {\n  \
    \  return order_by_points(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 11, -1, -11, -12)) !== array(-1, -11, 1, -12, 11)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1234, 423, 463, 145, 2, 423, 423,\
    \ 53, 6, 37, 3457, 3, 56, 0, 46)) !== array(0, 2, 3, 6, 53, 423, 423, 423, 1234,\
    \ 145, 37, 46, 56, 463, 3457)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, -11, -32, 43, 54, -98, 2, -3)) !== array(-3,\
    \ -32, -98, -11, 1, 2, 43, 54)) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11)) !== array(1, 10, 2,\
    \ 11, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(0, 6, 6, -76, -21, 23, 4)) !== array(-76, -21, 0, 4, 23, 6,\
    \ 6)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmppvpfbgqh.php:23\n\
    Stack trace:\n#0 /tmp/tmppvpfbgqh.php(31): test()\n#1 {main}\n  thrown in /tmp/tmppvpfbgqh.php\
    \ on line 23\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function which sorts the given list of integers\n//\
    \ in ascending order according to the sum of their digits.\n// Note: if there\
    \ are several items with similar sum of their digits,\n// order them based on\
    \ their index in original list.\n// For example:\n// >>> order_by_points([1, 11,\
    \ -1, -11, -12]) == [-1, -11, 1, -12, 11]\n// >>> order_by_points([]) == []\n\
    function order_by_points($nums) {\n    $arr = [];\n    foreach ($nums as $key\
    \ => $num) {\n        $arr[$key] = array_sum(str_split($num));\n    }\n    asort($arr);\n\
    \    $result = [];\n    foreach ($arr as $key => $value) {\n        $result[]\
    \ = $nums[$key];\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return order_by_points(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(array(1, 11, -1, -11, -12)) !== array(-1, -11, 1, -12, 11)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1234, 423,\
    \ 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46)) !== array(0, 2, 3, 6,\
    \ 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, -11, -32, 43, 54, -98, 2, -3))\
    \ !== array(-3, -32, -98, -11, 1, 2, 43, 54)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11)) !== array(1,\
    \ 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(0, 6, 6, -76, -21, 23, 4)) !== array(-76, -21, 0, 4,\
    \ 23, 6, 6)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp65_5idv4.php:27\n\
    Stack trace:\n#0 /tmp/tmp65_5idv4.php(35): test()\n#1 {main}\n  thrown in /tmp/tmp65_5idv4.php\
    \ on line 27\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function which sorts the given list of integers\n//\
    \ in ascending order according to the sum of their digits.\n// Note: if there\
    \ are several items with similar sum of their digits,\n// order them based on\
    \ their index in original list.\n// For example:\n// >>> order_by_points([1, 11,\
    \ -1, -11, -12]) == [-1, -11, 1, -12, 11]\n// >>> order_by_points([]) == []\n\
    function order_by_points($nums) {\n    $sum = array_map(function($num) {\n   \
    \     $sum = 0;\n        $num_str = strval($num);\n        for ($i = 0; $i < strlen($num_str);\
    \ $i++) {\n            $sum += intval($num_str[$i]);\n        }\n        return\
    \ $sum;\n    }, $nums);\n    array_multisort($sum, SORT_ASC, $nums);\n    return\
    \ $nums;\n}\n\nfunction candidate(...$args) {\n    return order_by_points(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 11, -1, -11, -12)) !==\
    \ array(-1, -11, 1, -12, 11)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56,\
    \ 0, 46)) !== array(0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463,\
    \ 3457)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -11, -32, 43, 54, -98, 2, -3)) !== array(-3, -32, -98, -11, 1, 2, 43, 54)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11)) !== array(1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 6, 6, -76, -21,\
    \ 23, 4)) !== array(-76, -21, 0, 4, 23, 6, 6)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp5ptbxg7_.php:27\n\
    Stack trace:\n#0 /tmp/tmp5ptbxg7_.php(35): test()\n#1 {main}\n  thrown in /tmp/tmp5ptbxg7_.php\
    \ on line 27\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function which sorts the given list of integers\n//\
    \ in ascending order according to the sum of their digits.\n// Note: if there\
    \ are several items with similar sum of their digits,\n// order them based on\
    \ their index in original list.\n// For example:\n// >>> order_by_points([1, 11,\
    \ -1, -11, -12]) == [-1, -11, 1, -12, 11]\n// >>> order_by_points([]) == []\n\
    function order_by_points($nums) {\n    $result = [];\n    $points = [];\n    foreach\
    \ ($nums as $key => $num) {\n        $points[$key] = array_sum(str_split($num));\n\
    \    }\n    asort($points);\n    foreach ($points as $key => $point) {\n     \
    \   $result[] = $nums[$key];\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return order_by_points(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(array(1, 11, -1, -11, -12)) !== array(-1, -11, 1, -12, 11)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1234, 423,\
    \ 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46)) !== array(0, 2, 3, 6,\
    \ 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, -11, -32, 43, 54, -98, 2, -3))\
    \ !== array(-3, -32, -98, -11, 1, 2, 43, 54)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11)) !== array(1,\
    \ 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(0, 6, 6, -76, -21, 23, 4)) !== array(-76, -21, 0, 4,\
    \ 23, 6, 6)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpgu_lzyio.php:27\n\
    Stack trace:\n#0 /tmp/tmpgu_lzyio.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpgu_lzyio.php\
    \ on line 27\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function which sorts the given list of integers\n//\
    \ in ascending order according to the sum of their digits.\n// Note: if there\
    \ are several items with similar sum of their digits,\n// order them based on\
    \ their index in original list.\n// For example:\n// >>> order_by_points([1, 11,\
    \ -1, -11, -12]) == [-1, -11, 1, -12, 11]\n// >>> order_by_points([]) == []\n\
    function order_by_points($nums) {\n    $sums = [];\n    foreach ($nums as $index\
    \ => $num) {\n        $sum = 0;\n        $num = abs($num);\n        while ($num\
    \ > 0) {\n            $sum += $num % 10;\n            $num = floor($num / 10);\n\
    \        }\n        $sums[$index] = $sum;\n    }\n    asort($sums);\n    $result\
    \ = [];\n    foreach ($sums as $index => $sum) {\n        $result[] = $nums[$index];\n\
    \    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return order_by_points(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 11, -1, -11, -12)) !==\
    \ array(-1, -11, 1, -12, 11)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56,\
    \ 0, 46)) !== array(0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463,\
    \ 3457)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -11, -32, 43, 54, -98, 2, -3)) !== array(-3, -32, -98, -11, 1, 2, 43, 54)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11)) !== array(1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 6, 6, -76, -21,\
    \ 23, 4)) !== array(-76, -21, 0, 4, 23, 6, 6)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpauyyi7zi.php:33\n\
    Stack trace:\n#0 /tmp/tmpauyyi7zi.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpauyyi7zi.php\
    \ on line 33\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function which sorts the given list of integers\n//\
    \ in ascending order according to the sum of their digits.\n// Note: if there\
    \ are several items with similar sum of their digits,\n// order them based on\
    \ their index in original list.\n// For example:\n// >>> order_by_points([1, 11,\
    \ -1, -11, -12]) == [-1, -11, 1, -12, 11]\n// >>> order_by_points([]) == []\n\
    function order_by_points($nums) {\n    $result = [];\n    $sum = [];\n    foreach\
    \ ($nums as $key => $value) {\n        $sum[$key] = array_sum(str_split($value));\n\
    \    }\n    asort($sum);\n    foreach ($sum as $key => $value) {\n        $result[]\
    \ = $nums[$key];\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return order_by_points(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(array(1, 11, -1, -11, -12)) !== array(-1, -11, 1, -12, 11)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1234, 423,\
    \ 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46)) !== array(0, 2, 3, 6,\
    \ 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, -11, -32, 43, 54, -98, 2, -3))\
    \ !== array(-3, -32, -98, -11, 1, 2, 43, 54)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11)) !== array(1,\
    \ 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(0, 6, 6, -76, -21, 23, 4)) !== array(-76, -21, 0, 4,\
    \ 23, 6, 6)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpyjio_jvy.php:27\n\
    Stack trace:\n#0 /tmp/tmpyjio_jvy.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpyjio_jvy.php\
    \ on line 27\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function which sorts the given list of integers\n//\
    \ in ascending order according to the sum of their digits.\n// Note: if there\
    \ are several items with similar sum of their digits,\n// order them based on\
    \ their index in original list.\n// For example:\n// >>> order_by_points([1, 11,\
    \ -1, -11, -12]) == [-1, -11, 1, -12, 11]\n// >>> order_by_points([]) == []\n\
    function order_by_points($nums) {\n    $sum_of_digits = array_map(function($num)\
    \ {\n        $sum = 0;\n        $num = abs($num);\n        while ($num > 0) {\n\
    \            $sum += $num % 10;\n            $num = floor($num / 10);\n      \
    \  }\n        return $sum;\n    }, $nums);\n    array_multisort($sum_of_digits,\
    \ SORT_ASC, $nums);\n    return $nums;\n}\n\nfunction candidate(...$args) {\n\
    \    return order_by_points(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 11, -1, -11, -12)) !== array(-1, -11, 1, -12, 11)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1234, 423, 463, 145, 2, 423, 423,\
    \ 53, 6, 37, 3457, 3, 56, 0, 46)) !== array(0, 2, 3, 6, 53, 423, 423, 423, 1234,\
    \ 145, 37, 46, 56, 463, 3457)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, -11, -32, 43, 54, -98, 2, -3)) !== array(-3,\
    \ -32, -98, -11, 1, 2, 43, 54)) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11)) !== array(1, 10, 2,\
    \ 11, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(0, 6, 6, -76, -21, 23, 4)) !== array(-76, -21, 0, 4, 23, 6,\
    \ 6)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp5qmxjhq6.php:28\n\
    Stack trace:\n#0 /tmp/tmp5qmxjhq6.php(36): test()\n#1 {main}\n  thrown in /tmp/tmp5qmxjhq6.php\
    \ on line 28\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function which sorts the given list of integers\n//\
    \ in ascending order according to the sum of their digits.\n// Note: if there\
    \ are several items with similar sum of their digits,\n// order them based on\
    \ their index in original list.\n// For example:\n// >>> order_by_points([1, 11,\
    \ -1, -11, -12]) == [-1, -11, 1, -12, 11]\n// >>> order_by_points([]) == []\n\
    function order_by_points($nums) {\n    $sums = [];\n    foreach ($nums as $key\
    \ => $num) {\n        $sum = 0;\n        $num = abs($num);\n        while ($num\
    \ > 0) {\n            $sum += $num % 10;\n            $num = floor($num / 10);\n\
    \        }\n        $sums[$key] = $sum;\n    }\n    asort($sums);\n    $result\
    \ = [];\n    foreach ($sums as $key => $sum) {\n        $result[] = $nums[$key];\n\
    \    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return order_by_points(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 11, -1, -11, -12)) !==\
    \ array(-1, -11, 1, -12, 11)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56,\
    \ 0, 46)) !== array(0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463,\
    \ 3457)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -11, -32, 43, 54, -98, 2, -3)) !== array(-3, -32, -98, -11, 1, 2, 43, 54)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11)) !== array(1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 6, 6, -76, -21,\
    \ 23, 4)) !== array(-76, -21, 0, 4, 23, 6, 6)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp4q6jhje8.php:33\n\
    Stack trace:\n#0 /tmp/tmp4q6jhje8.php(41): test()\n#1 {main}\n  thrown in /tmp/tmp4q6jhje8.php\
    \ on line 33\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function which sorts the given list of integers\n//\
    \ in ascending order according to the sum of their digits.\n// Note: if there\
    \ are several items with similar sum of their digits,\n// order them based on\
    \ their index in original list.\n// For example:\n// >>> order_by_points([1, 11,\
    \ -1, -11, -12]) == [-1, -11, 1, -12, 11]\n// >>> order_by_points([]) == []\n\
    function order_by_points($nums) {\n    $sums = [];\n    foreach ($nums as $index\
    \ => $num) {\n        $sum = 0;\n        $num = abs($num);\n        while ($num\
    \ > 0) {\n            $sum += $num % 10;\n            $num = (int)($num / 10);\n\
    \        }\n        $sums[$index] = $sum;\n    }\n    asort($sums);\n    $result\
    \ = [];\n    foreach ($sums as $index => $sum) {\n        $result[] = $nums[$index];\n\
    \    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return order_by_points(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 11, -1, -11, -12)) !==\
    \ array(-1, -11, 1, -12, 11)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56,\
    \ 0, 46)) !== array(0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463,\
    \ 3457)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -11, -32, 43, 54, -98, 2, -3)) !== array(-3, -32, -98, -11, 1, 2, 43, 54)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11)) !== array(1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 6, 6, -76, -21,\
    \ 23, 4)) !== array(-76, -21, 0, 4, 23, 6, 6)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmptvw7wqwf.php:33\n\
    Stack trace:\n#0 /tmp/tmptvw7wqwf.php(41): test()\n#1 {main}\n  thrown in /tmp/tmptvw7wqwf.php\
    \ on line 33\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function which sorts the given list of integers\n//\
    \ in ascending order according to the sum of their digits.\n// Note: if there\
    \ are several items with similar sum of their digits,\n// order them based on\
    \ their index in original list.\n// For example:\n// >>> order_by_points([1, 11,\
    \ -1, -11, -12]) == [-1, -11, 1, -12, 11]\n// >>> order_by_points([]) == []\n\
    function order_by_points($nums) {\n    $sum = [];\n    foreach ($nums as $key\
    \ => $value) {\n        $sum[$key] = array_sum(str_split($value));\n    }\n  \
    \  array_multisort($sum, SORT_ASC, $nums);\n    return $nums;\n}\n\nfunction candidate(...$args)\
    \ {\n    return order_by_points(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(array(1, 11, -1, -11, -12)) !== array(-1, -11, 1, -12, 11)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1234, 423,\
    \ 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46)) !== array(0, 2, 3, 6,\
    \ 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, -11, -32, 43, 54, -98, 2, -3))\
    \ !== array(-3, -32, -98, -11, 1, 2, 43, 54)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11)) !== array(1,\
    \ 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(0, 6, 6, -76, -21, 23, 4)) !== array(-76, -21, 0, 4,\
    \ 23, 6, 6)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmphqjxs3k5.php:23\n\
    Stack trace:\n#0 /tmp/tmphqjxs3k5.php(31): test()\n#1 {main}\n  thrown in /tmp/tmphqjxs3k5.php\
    \ on line 23\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function which sorts the given list of integers\n//\
    \ in ascending order according to the sum of their digits.\n// Note: if there\
    \ are several items with similar sum of their digits,\n// order them based on\
    \ their index in original list.\n// For example:\n// >>> order_by_points([1, 11,\
    \ -1, -11, -12]) == [-1, -11, 1, -12, 11]\n// >>> order_by_points([]) == []\n\
    function order_by_points($nums) {\n    $sums = array_map(function($num) {\n  \
    \      return array_sum(str_split($num));\n    }, $nums);\n    array_multisort($sums,\
    \ $nums);\n    return $nums;\n}\n\nfunction candidate(...$args) {\n    return\
    \ order_by_points(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 11, -1, -11, -12)) !== array(-1, -11, 1, -12, 11)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1234, 423, 463, 145, 2, 423, 423,\
    \ 53, 6, 37, 3457, 3, 56, 0, 46)) !== array(0, 2, 3, 6, 53, 423, 423, 423, 1234,\
    \ 145, 37, 46, 56, 463, 3457)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, -11, -32, 43, 54, -98, 2, -3)) !== array(-3,\
    \ -32, -98, -11, 1, 2, 43, 54)) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11)) !== array(1, 10, 2,\
    \ 11, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(0, 6, 6, -76, -21, 23, 4)) !== array(-76, -21, 0, 4, 23, 6,\
    \ 6)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp2gjzvxj2.php:22\n\
    Stack trace:\n#0 /tmp/tmp2gjzvxj2.php(30): test()\n#1 {main}\n  thrown in /tmp/tmp2gjzvxj2.php\
    \ on line 22\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function which sorts the given list of integers\n//\
    \ in ascending order according to the sum of their digits.\n// Note: if there\
    \ are several items with similar sum of their digits,\n// order them based on\
    \ their index in original list.\n// For example:\n// >>> order_by_points([1, 11,\
    \ -1, -11, -12]) == [-1, -11, 1, -12, 11]\n// >>> order_by_points([]) == []\n\
    function order_by_points($nums) {\n    $sum_nums = array_map(function($num) {\n\
    \        $sum = 0;\n        $num = abs($num);\n        while ($num > 0) {\n  \
    \          $sum += $num % 10;\n            $num = floor($num / 10);\n        }\n\
    \        return $sum;\n    }, $nums);\n    array_multisort($sum_nums, $nums);\n\
    \    return $nums;\n}\n\nfunction candidate(...$args) {\n    return order_by_points(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 11, -1, -11, -12)) !==\
    \ array(-1, -11, 1, -12, 11)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56,\
    \ 0, 46)) !== array(0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463,\
    \ 3457)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -11, -32, 43, 54, -98, 2, -3)) !== array(-3, -32, -98, -11, 1, 2, 43, 54)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11)) !== array(1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 6, 6, -76, -21,\
    \ 23, 4)) !== array(-76, -21, 0, 4, 23, 6, 6)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmptawcmu0m.php:28\n\
    Stack trace:\n#0 /tmp/tmptawcmu0m.php(36): test()\n#1 {main}\n  thrown in /tmp/tmptawcmu0m.php\
    \ on line 28\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function which sorts the given list of integers\n//\
    \ in ascending order according to the sum of their digits.\n// Note: if there\
    \ are several items with similar sum of their digits,\n// order them based on\
    \ their index in original list.\n// For example:\n// >>> order_by_points([1, 11,\
    \ -1, -11, -12]) == [-1, -11, 1, -12, 11]\n// >>> order_by_points([]) == []\n\
    function order_by_points($nums) {\n    $sums = [];\n    foreach ($nums as $key\
    \ => $num) {\n        $sums[$key] = array_sum(str_split($num));\n    }\n    asort($sums);\n\
    \    $result = [];\n    foreach ($sums as $key => $sum) {\n        $result[] =\
    \ $nums[$key];\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return order_by_points(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(array(1, 11, -1, -11, -12)) !== array(-1, -11, 1, -12, 11)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1234, 423,\
    \ 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46)) !== array(0, 2, 3, 6,\
    \ 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, -11, -32, 43, 54, -98, 2, -3))\
    \ !== array(-3, -32, -98, -11, 1, 2, 43, 54)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11)) !== array(1,\
    \ 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(0, 6, 6, -76, -21, 23, 4)) !== array(-76, -21, 0, 4,\
    \ 23, 6, 6)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp9dnmyvze.php:27\n\
    Stack trace:\n#0 /tmp/tmp9dnmyvze.php(35): test()\n#1 {main}\n  thrown in /tmp/tmp9dnmyvze.php\
    \ on line 27\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function which sorts the given list of integers\n//\
    \ in ascending order according to the sum of their digits.\n// Note: if there\
    \ are several items with similar sum of their digits,\n// order them based on\
    \ their index in original list.\n// For example:\n// >>> order_by_points([1, 11,\
    \ -1, -11, -12]) == [-1, -11, 1, -12, 11]\n// >>> order_by_points([]) == []\n\
    function order_by_points($nums) {\n    $result = [];\n    foreach ($nums as $key\
    \ => $value) {\n        $result[$key] = array_sum(str_split($value));\n    }\n\
    \    asort($result);\n    $result = array_keys($result);\n    foreach ($result\
    \ as $key => $value) {\n        $result[$key] = $nums[$value];\n    }\n    return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return order_by_points(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 11, -1, -11, -12)) !==\
    \ array(-1, -11, 1, -12, 11)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56,\
    \ 0, 46)) !== array(0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463,\
    \ 3457)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -11, -32, 43, 54, -98, 2, -3)) !== array(-3, -32, -98, -11, 1, 2, 43, 54)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11)) !== array(1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 6, 6, -76, -21,\
    \ 23, 4)) !== array(-76, -21, 0, 4, 23, 6, 6)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp2x_eih4o.php:27\n\
    Stack trace:\n#0 /tmp/tmp2x_eih4o.php(35): test()\n#1 {main}\n  thrown in /tmp/tmp2x_eih4o.php\
    \ on line 27\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function which sorts the given list of integers\n//\
    \ in ascending order according to the sum of their digits.\n// Note: if there\
    \ are several items with similar sum of their digits,\n// order them based on\
    \ their index in original list.\n// For example:\n// >>> order_by_points([1, 11,\
    \ -1, -11, -12]) == [-1, -11, 1, -12, 11]\n// >>> order_by_points([]) == []\n\
    function order_by_points($nums) {\n    $sums = [];\n    foreach ($nums as $key\
    \ => $num) {\n        $sums[$key] = array_sum(str_split($num));\n    }\n    asort($sums);\n\
    \    $result = [];\n    foreach ($sums as $key => $sum) {\n        $result[] =\
    \ $nums[$key];\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return order_by_points(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(array(1, 11, -1, -11, -12)) !== array(-1, -11, 1, -12, 11)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1234, 423,\
    \ 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46)) !== array(0, 2, 3, 6,\
    \ 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, -11, -32, 43, 54, -98, 2, -3))\
    \ !== array(-3, -32, -98, -11, 1, 2, 43, 54)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11)) !== array(1,\
    \ 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(0, 6, 6, -76, -21, 23, 4)) !== array(-76, -21, 0, 4,\
    \ 23, 6, 6)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpr2fi12g5.php:27\n\
    Stack trace:\n#0 /tmp/tmpr2fi12g5.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpr2fi12g5.php\
    \ on line 27\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function which sorts the given list of integers\n//\
    \ in ascending order according to the sum of their digits.\n// Note: if there\
    \ are several items with similar sum of their digits,\n// order them based on\
    \ their index in original list.\n// For example:\n// >>> order_by_points([1, 11,\
    \ -1, -11, -12]) == [-1, -11, 1, -12, 11]\n// >>> order_by_points([]) == []\n\
    function order_by_points($nums) {\n    $nums_with_points = [];\n    foreach ($nums\
    \ as $key => $num) {\n        $nums_with_points[$key] = [\n            'num' =>\
    \ $num,\n            'points' => array_sum(str_split(abs($num)))\n        ];\n\
    \    }\n    usort($nums_with_points, function ($a, $b) {\n        if ($a['points']\
    \ === $b['points']) {\n            return $a['num'] <=> $b['num'];\n        }\n\
    \        return $a['points'] <=> $b['points'];\n    });\n    return array_column($nums_with_points,\
    \ 'num');\n}\n\nfunction candidate(...$args) {\n    return order_by_points(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 11, -1, -11, -12)) !==\
    \ array(-1, -11, 1, -12, 11)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56,\
    \ 0, 46)) !== array(0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463,\
    \ 3457)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -11, -32, 43, 54, -98, 2, -3)) !== array(-3, -32, -98, -11, 1, 2, 43, 54)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11)) !== array(1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 6, 6, -76, -21,\
    \ 23, 4)) !== array(-76, -21, 0, 4, 23, 6, 6)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp0zwuj7ho.php:31\n\
    Stack trace:\n#0 /tmp/tmp0zwuj7ho.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp0zwuj7ho.php\
    \ on line 31\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function which sorts the given list of integers\n//\
    \ in ascending order according to the sum of their digits.\n// Note: if there\
    \ are several items with similar sum of their digits,\n// order them based on\
    \ their index in original list.\n// For example:\n// >>> order_by_points([1, 11,\
    \ -1, -11, -12]) == [-1, -11, 1, -12, 11]\n// >>> order_by_points([]) == []\n\
    function order_by_points($nums) {\n    $sums = [];\n    foreach ($nums as $i =>\
    \ $num) {\n        $sums[$i] = array_sum(str_split($num));\n    }\n    asort($sums);\n\
    \    $result = [];\n    foreach ($sums as $i => $sum) {\n        $result[] = $nums[$i];\n\
    \    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return order_by_points(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 11, -1, -11, -12)) !==\
    \ array(-1, -11, 1, -12, 11)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56,\
    \ 0, 46)) !== array(0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463,\
    \ 3457)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -11, -32, 43, 54, -98, 2, -3)) !== array(-3, -32, -98, -11, 1, 2, 43, 54)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11)) !== array(1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 6, 6, -76, -21,\
    \ 23, 4)) !== array(-76, -21, 0, 4, 23, 6, 6)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpna17xx__.php:27\n\
    Stack trace:\n#0 /tmp/tmpna17xx__.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpna17xx__.php\
    \ on line 27\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function which sorts the given list of integers\n//\
    \ in ascending order according to the sum of their digits.\n// Note: if there\
    \ are several items with similar sum of their digits,\n// order them based on\
    \ their index in original list.\n// For example:\n// >>> order_by_points([1, 11,\
    \ -1, -11, -12]) == [-1, -11, 1, -12, 11]\n// >>> order_by_points([]) == []\n\
    function order_by_points($nums) {\n    $sum = [];\n    foreach ($nums as $key\
    \ => $value) {\n        $sum[$key] = array_sum(str_split($value));\n    }\n  \
    \  array_multisort($sum, SORT_ASC, $nums);\n    return $nums;\n}\n\nfunction candidate(...$args)\
    \ {\n    return order_by_points(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(array(1, 11, -1, -11, -12)) !== array(-1, -11, 1, -12, 11)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1234, 423,\
    \ 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46)) !== array(0, 2, 3, 6,\
    \ 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, -11, -32, 43, 54, -98, 2, -3))\
    \ !== array(-3, -32, -98, -11, 1, 2, 43, 54)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11)) !== array(1,\
    \ 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(0, 6, 6, -76, -21, 23, 4)) !== array(-76, -21, 0, 4,\
    \ 23, 6, 6)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpwb6eqrdf.php:23\n\
    Stack trace:\n#0 /tmp/tmpwb6eqrdf.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpwb6eqrdf.php\
    \ on line 23\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function which sorts the given list of integers\n//\
    \ in ascending order according to the sum of their digits.\n// Note: if there\
    \ are several items with similar sum of their digits,\n// order them based on\
    \ their index in original list.\n// For example:\n// >>> order_by_points([1, 11,\
    \ -1, -11, -12]) == [-1, -11, 1, -12, 11]\n// >>> order_by_points([]) == []\n\
    function order_by_points($nums) {\n    $result = [];\n    $sums = [];\n    foreach\
    \ ($nums as $key => $num) {\n        $sum = 0;\n        $num = abs($num);\n  \
    \      while ($num > 0) {\n            $sum += $num % 10;\n            $num =\
    \ (int)($num / 10);\n        }\n        $sums[$key] = $sum;\n    }\n    asort($sums);\n\
    \    foreach ($sums as $key => $sum) {\n        $result[] = $nums[$key];\n   \
    \ }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return order_by_points(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 11, -1, -11, -12)) !==\
    \ array(-1, -11, 1, -12, 11)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56,\
    \ 0, 46)) !== array(0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463,\
    \ 3457)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -11, -32, 43, 54, -98, 2, -3)) !== array(-3, -32, -98, -11, 1, 2, 43, 54)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11)) !== array(1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 6, 6, -76, -21,\
    \ 23, 4)) !== array(-76, -21, 0, 4, 23, 6, 6)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpbc4y453l.php:33\n\
    Stack trace:\n#0 /tmp/tmpbc4y453l.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpbc4y453l.php\
    \ on line 33\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function which sorts the given list of integers\n//\
    \ in ascending order according to the sum of their digits.\n// Note: if there\
    \ are several items with similar sum of their digits,\n// order them based on\
    \ their index in original list.\n// For example:\n// >>> order_by_points([1, 11,\
    \ -1, -11, -12]) == [-1, -11, 1, -12, 11]\n// >>> order_by_points([]) == []\n\
    function order_by_points($nums) {\n    $result = [];\n    $sum = [];\n    foreach\
    \ ($nums as $key => $value) {\n        $sum[$key] = array_sum(str_split($value));\n\
    \    }\n    asort($sum);\n    foreach ($sum as $key => $value) {\n        $result[]\
    \ = $nums[$key];\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return order_by_points(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(array(1, 11, -1, -11, -12)) !== array(-1, -11, 1, -12, 11)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1234, 423,\
    \ 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46)) !== array(0, 2, 3, 6,\
    \ 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, -11, -32, 43, 54, -98, 2, -3))\
    \ !== array(-3, -32, -98, -11, 1, 2, 43, 54)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11)) !== array(1,\
    \ 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(0, 6, 6, -76, -21, 23, 4)) !== array(-76, -21, 0, 4,\
    \ 23, 6, 6)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp61nm79wf.php:27\n\
    Stack trace:\n#0 /tmp/tmp61nm79wf.php(35): test()\n#1 {main}\n  thrown in /tmp/tmp61nm79wf.php\
    \ on line 27\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function which sorts the given list of integers\n//\
    \ in ascending order according to the sum of their digits.\n// Note: if there\
    \ are several items with similar sum of their digits,\n// order them based on\
    \ their index in original list.\n// For example:\n// >>> order_by_points([1, 11,\
    \ -1, -11, -12]) == [-1, -11, 1, -12, 11]\n// >>> order_by_points([]) == []\n\
    function order_by_points($nums) {\n    $sums = array_map(function($num) {\n  \
    \      return array_sum(str_split($num));\n    }, $nums);\n    array_multisort($sums,\
    \ $nums);\n    return $nums;\n}\n\nfunction candidate(...$args) {\n    return\
    \ order_by_points(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 11, -1, -11, -12)) !== array(-1, -11, 1, -12, 11)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1234, 423, 463, 145, 2, 423, 423,\
    \ 53, 6, 37, 3457, 3, 56, 0, 46)) !== array(0, 2, 3, 6, 53, 423, 423, 423, 1234,\
    \ 145, 37, 46, 56, 463, 3457)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, -11, -32, 43, 54, -98, 2, -3)) !== array(-3,\
    \ -32, -98, -11, 1, 2, 43, 54)) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11)) !== array(1, 10, 2,\
    \ 11, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(0, 6, 6, -76, -21, 23, 4)) !== array(-76, -21, 0, 4, 23, 6,\
    \ 6)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpkkxtvrdp.php:22\n\
    Stack trace:\n#0 /tmp/tmpkkxtvrdp.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpkkxtvrdp.php\
    \ on line 22\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function which sorts the given list of integers\n//\
    \ in ascending order according to the sum of their digits.\n// Note: if there\
    \ are several items with similar sum of their digits,\n// order them based on\
    \ their index in original list.\n// For example:\n// >>> order_by_points([1, 11,\
    \ -1, -11, -12]) == [-1, -11, 1, -12, 11]\n// >>> order_by_points([]) == []\n\
    function order_by_points($nums) {\n    $sums = [];\n    foreach ($nums as $key\
    \ => $num) {\n        $sum = 0;\n        $num = abs($num);\n        while ($num\
    \ > 0) {\n            $sum += $num % 10;\n            $num = floor($num / 10);\n\
    \        }\n        $sums[$key] = $sum;\n    }\n    asort($sums);\n    $result\
    \ = [];\n    foreach ($sums as $key => $sum) {\n        $result[] = $nums[$key];\n\
    \    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return order_by_points(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 11, -1, -11, -12)) !==\
    \ array(-1, -11, 1, -12, 11)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56,\
    \ 0, 46)) !== array(0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463,\
    \ 3457)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -11, -32, 43, 54, -98, 2, -3)) !== array(-3, -32, -98, -11, 1, 2, 43, 54)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11)) !== array(1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 6, 6, -76, -21,\
    \ 23, 4)) !== array(-76, -21, 0, 4, 23, 6, 6)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp4qw732fe.php:33\n\
    Stack trace:\n#0 /tmp/tmp4qw732fe.php(41): test()\n#1 {main}\n  thrown in /tmp/tmp4qw732fe.php\
    \ on line 33\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function which sorts the given list of integers\n//\
    \ in ascending order according to the sum of their digits.\n// Note: if there\
    \ are several items with similar sum of their digits,\n// order them based on\
    \ their index in original list.\n// For example:\n// >>> order_by_points([1, 11,\
    \ -1, -11, -12]) == [-1, -11, 1, -12, 11]\n// >>> order_by_points([]) == []\n\
    function order_by_points($nums) {\n    $sums = [];\n    foreach ($nums as $key\
    \ => $num) {\n        $sum = 0;\n        $num = abs($num);\n        while ($num\
    \ > 0) {\n            $sum += $num % 10;\n            $num = floor($num / 10);\n\
    \        }\n        $sums[$key] = $sum;\n    }\n    asort($sums);\n    $result\
    \ = [];\n    foreach ($sums as $key => $sum) {\n        $result[] = $nums[$key];\n\
    \    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return order_by_points(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 11, -1, -11, -12)) !==\
    \ array(-1, -11, 1, -12, 11)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56,\
    \ 0, 46)) !== array(0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463,\
    \ 3457)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -11, -32, 43, 54, -98, 2, -3)) !== array(-3, -32, -98, -11, 1, 2, 43, 54)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11)) !== array(1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 6, 6, -76, -21,\
    \ 23, 4)) !== array(-76, -21, 0, 4, 23, 6, 6)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpr8y0_gb0.php:33\n\
    Stack trace:\n#0 /tmp/tmpr8y0_gb0.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpr8y0_gb0.php\
    \ on line 33\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function which sorts the given list of integers\n//\
    \ in ascending order according to the sum of their digits.\n// Note: if there\
    \ are several items with similar sum of their digits,\n// order them based on\
    \ their index in original list.\n// For example:\n// >>> order_by_points([1, 11,\
    \ -1, -11, -12]) == [-1, -11, 1, -12, 11]\n// >>> order_by_points([]) == []\n\
    function order_by_points($nums) {\n    $sum_nums = [];\n    foreach ($nums as\
    \ $key => $num) {\n        $sum_nums[$key] = array_sum(str_split($num));\n   \
    \ }\n    array_multisort($sum_nums, SORT_ASC, $nums);\n    return $nums;\n}\n\n\
    function candidate(...$args) {\n    return order_by_points(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 11, -1, -11, -12)) !== array(-1,\
    \ -11, 1, -12, 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46)) !== array(0, 2,\
    \ 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, -11, -32, 43, 54, -98, 2, -3))\
    \ !== array(-3, -32, -98, -11, 1, 2, 43, 54)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11)) !== array(1,\
    \ 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(0, 6, 6, -76, -21, 23, 4)) !== array(-76, -21, 0, 4,\
    \ 23, 6, 6)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpt0h15750.php:23\n\
    Stack trace:\n#0 /tmp/tmpt0h15750.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpt0h15750.php\
    \ on line 23\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function which sorts the given list of integers\n//\
    \ in ascending order according to the sum of their digits.\n// Note: if there\
    \ are several items with similar sum of their digits,\n// order them based on\
    \ their index in original list.\n// For example:\n// >>> order_by_points([1, 11,\
    \ -1, -11, -12]) == [-1, -11, 1, -12, 11]\n// >>> order_by_points([]) == []\n\
    function order_by_points($nums) {\n    $result = [];\n    $nums_with_points =\
    \ [];\n    foreach ($nums as $key => $num) {\n        $nums_with_points[$key]\
    \ = [\n            'num' => $num,\n            'points' => array_sum(str_split($num))\n\
    \        ];\n    }\n    usort($nums_with_points, function ($a, $b) {\n       \
    \ if ($a['points'] == $b['points']) {\n            return $a['num'] <=> $b['num'];\n\
    \        }\n        return $a['points'] <=> $b['points'];\n    });\n    foreach\
    \ ($nums_with_points as $num_with_points) {\n        $result[] = $num_with_points['num'];\n\
    \    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return order_by_points(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 11, -1, -11, -12)) !==\
    \ array(-1, -11, 1, -12, 11)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56,\
    \ 0, 46)) !== array(0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463,\
    \ 3457)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -11, -32, 43, 54, -98, 2, -3)) !== array(-3, -32, -98, -11, 1, 2, 43, 54)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11)) !== array(1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 6, 6, -76, -21,\
    \ 23, 4)) !== array(-76, -21, 0, 4, 23, 6, 6)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp2s1sprrm.php:35\n\
    Stack trace:\n#0 /tmp/tmp2s1sprrm.php(43): test()\n#1 {main}\n  thrown in /tmp/tmp2s1sprrm.php\
    \ on line 35\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function which sorts the given list of integers\n//\
    \ in ascending order according to the sum of their digits.\n// Note: if there\
    \ are several items with similar sum of their digits,\n// order them based on\
    \ their index in original list.\n// For example:\n// >>> order_by_points([1, 11,\
    \ -1, -11, -12]) == [-1, -11, 1, -12, 11]\n// >>> order_by_points([]) == []\n\
    function order_by_points($nums) {\n    $sums = [];\n    foreach ($nums as $key\
    \ => $num) {\n        $sums[$key] = array_sum(str_split($num));\n    }\n    asort($sums);\n\
    \    $result = [];\n    foreach ($sums as $key => $sum) {\n        $result[] =\
    \ $nums[$key];\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return order_by_points(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(array(1, 11, -1, -11, -12)) !== array(-1, -11, 1, -12, 11)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1234, 423,\
    \ 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46)) !== array(0, 2, 3, 6,\
    \ 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, -11, -32, 43, 54, -98, 2, -3))\
    \ !== array(-3, -32, -98, -11, 1, 2, 43, 54)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11)) !== array(1,\
    \ 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(0, 6, 6, -76, -21, 23, 4)) !== array(-76, -21, 0, 4,\
    \ 23, 6, 6)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp3rn1lr9_.php:27\n\
    Stack trace:\n#0 /tmp/tmp3rn1lr9_.php(35): test()\n#1 {main}\n  thrown in /tmp/tmp3rn1lr9_.php\
    \ on line 27\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function which sorts the given list of integers\n//\
    \ in ascending order according to the sum of their digits.\n// Note: if there\
    \ are several items with similar sum of their digits,\n// order them based on\
    \ their index in original list.\n// For example:\n// >>> order_by_points([1, 11,\
    \ -1, -11, -12]) == [-1, -11, 1, -12, 11]\n// >>> order_by_points([]) == []\n\
    function order_by_points($nums) {\n    $sums = array_map(function($num) {\n  \
    \      $sum = 0;\n        $num = abs($num);\n        while ($num > 0) {\n    \
    \        $sum += $num % 10;\n            $num = (int)($num / 10);\n        }\n\
    \        return $sum;\n    }, $nums);\n    array_multisort($sums, SORT_ASC, $nums);\n\
    \    return $nums;\n}\n\nfunction candidate(...$args) {\n    return order_by_points(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 11, -1, -11, -12)) !==\
    \ array(-1, -11, 1, -12, 11)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56,\
    \ 0, 46)) !== array(0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463,\
    \ 3457)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -11, -32, 43, 54, -98, 2, -3)) !== array(-3, -32, -98, -11, 1, 2, 43, 54)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11)) !== array(1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 6, 6, -76, -21,\
    \ 23, 4)) !== array(-76, -21, 0, 4, 23, 6, 6)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpimyzneln.php:28\n\
    Stack trace:\n#0 /tmp/tmpimyzneln.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpimyzneln.php\
    \ on line 28\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function which sorts the given list of integers\n//\
    \ in ascending order according to the sum of their digits.\n// Note: if there\
    \ are several items with similar sum of their digits,\n// order them based on\
    \ their index in original list.\n// For example:\n// >>> order_by_points([1, 11,\
    \ -1, -11, -12]) == [-1, -11, 1, -12, 11]\n// >>> order_by_points([]) == []\n\
    function order_by_points($nums) {\n    $sums = [];\n    foreach ($nums as $key\
    \ => $num) {\n        $sum = 0;\n        $num = abs($num);\n        while ($num\
    \ > 0) {\n            $sum += $num % 10;\n            $num = intval($num / 10);\n\
    \        }\n        $sums[$key] = $sum;\n    }\n    asort($sums);\n    $result\
    \ = [];\n    foreach ($sums as $key => $sum) {\n        $result[] = $nums[$key];\n\
    \    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return order_by_points(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 11, -1, -11, -12)) !==\
    \ array(-1, -11, 1, -12, 11)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56,\
    \ 0, 46)) !== array(0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463,\
    \ 3457)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -11, -32, 43, 54, -98, 2, -3)) !== array(-3, -32, -98, -11, 1, 2, 43, 54)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11)) !== array(1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 6, 6, -76, -21,\
    \ 23, 4)) !== array(-76, -21, 0, 4, 23, 6, 6)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp4d9bhin_.php:33\n\
    Stack trace:\n#0 /tmp/tmp4d9bhin_.php(41): test()\n#1 {main}\n  thrown in /tmp/tmp4d9bhin_.php\
    \ on line 33\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function which sorts the given list of integers\n//\
    \ in ascending order according to the sum of their digits.\n// Note: if there\
    \ are several items with similar sum of their digits,\n// order them based on\
    \ their index in original list.\n// For example:\n// >>> order_by_points([1, 11,\
    \ -1, -11, -12]) == [-1, -11, 1, -12, 11]\n// >>> order_by_points([]) == []\n\
    function order_by_points($nums) {\n    $sums = [];\n    foreach ($nums as $key\
    \ => $num) {\n        $sums[$key] = array_sum(str_split($num));\n    }\n    array_multisort($sums,\
    \ SORT_ASC, $nums);\n    return $nums;\n}\n\nfunction candidate(...$args) {\n\
    \    return order_by_points(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 11, -1, -11, -12)) !== array(-1, -11, 1, -12, 11)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1234, 423, 463, 145, 2, 423, 423,\
    \ 53, 6, 37, 3457, 3, 56, 0, 46)) !== array(0, 2, 3, 6, 53, 423, 423, 423, 1234,\
    \ 145, 37, 46, 56, 463, 3457)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, -11, -32, 43, 54, -98, 2, -3)) !== array(-3,\
    \ -32, -98, -11, 1, 2, 43, 54)) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11)) !== array(1, 10, 2,\
    \ 11, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(0, 6, 6, -76, -21, 23, 4)) !== array(-76, -21, 0, 4, 23, 6,\
    \ 6)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp7tshlnam.php:23\n\
    Stack trace:\n#0 /tmp/tmp7tshlnam.php(31): test()\n#1 {main}\n  thrown in /tmp/tmp7tshlnam.php\
    \ on line 23\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function which sorts the given list of integers\n//\
    \ in ascending order according to the sum of their digits.\n// Note: if there\
    \ are several items with similar sum of their digits,\n// order them based on\
    \ their index in original list.\n// For example:\n// >>> order_by_points([1, 11,\
    \ -1, -11, -12]) == [-1, -11, 1, -12, 11]\n// >>> order_by_points([]) == []\n\
    function order_by_points($nums) {\n    $sums = [];\n    foreach ($nums as $key\
    \ => $num) {\n        $sum = 0;\n        while ($num != 0) {\n            $sum\
    \ += $num % 10;\n            $num = (int)($num / 10);\n        }\n        $sums[$key]\
    \ = $sum;\n    }\n    array_multisort($sums, SORT_ASC, $nums);\n    return $nums;\n\
    }\n\nfunction candidate(...$args) {\n    return order_by_points(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(array(1, 11, -1, -11, -12)) !== array(-1,\
    \ -11, 1, -12, 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46)) !== array(0, 2,\
    \ 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, -11, -32, 43, 54, -98, 2, -3))\
    \ !== array(-3, -32, -98, -11, 1, 2, 43, 54)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11)) !== array(1,\
    \ 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(0, 6, 6, -76, -21, 23, 4)) !== array(-76, -21, 0, 4,\
    \ 23, 6, 6)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpcmhcb5lb.php:28\n\
    Stack trace:\n#0 /tmp/tmpcmhcb5lb.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpcmhcb5lb.php\
    \ on line 28\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function which sorts the given list of integers\n//\
    \ in ascending order according to the sum of their digits.\n// Note: if there\
    \ are several items with similar sum of their digits,\n// order them based on\
    \ their index in original list.\n// For example:\n// >>> order_by_points([1, 11,\
    \ -1, -11, -12]) == [-1, -11, 1, -12, 11]\n// >>> order_by_points([]) == []\n\
    function order_by_points($nums) {\n    $points = array_map(function($num) {\n\
    \        return array_sum(str_split($num));\n    }, $nums);\n    array_multisort($points,\
    \ SORT_ASC, $nums);\n    return $nums;\n}\n\nfunction candidate(...$args) {\n\
    \    return order_by_points(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 11, -1, -11, -12)) !== array(-1, -11, 1, -12, 11)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1234, 423, 463, 145, 2, 423, 423,\
    \ 53, 6, 37, 3457, 3, 56, 0, 46)) !== array(0, 2, 3, 6, 53, 423, 423, 423, 1234,\
    \ 145, 37, 46, 56, 463, 3457)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, -11, -32, 43, 54, -98, 2, -3)) !== array(-3,\
    \ -32, -98, -11, 1, 2, 43, 54)) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11)) !== array(1, 10, 2,\
    \ 11, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(0, 6, 6, -76, -21, 23, 4)) !== array(-76, -21, 0, 4, 23, 6,\
    \ 6)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpvqmvx2ug.php:22\n\
    Stack trace:\n#0 /tmp/tmpvqmvx2ug.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpvqmvx2ug.php\
    \ on line 22\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function which sorts the given list of integers\n//\
    \ in ascending order according to the sum of their digits.\n// Note: if there\
    \ are several items with similar sum of their digits,\n// order them based on\
    \ their index in original list.\n// For example:\n// >>> order_by_points([1, 11,\
    \ -1, -11, -12]) == [-1, -11, 1, -12, 11]\n// >>> order_by_points([]) == []\n\
    function order_by_points($nums) {\n    $result = [];\n    $sum = [];\n    foreach\
    \ ($nums as $key => $value) {\n        $sum[$key] = array_sum(str_split($value));\n\
    \    }\n    asort($sum);\n    foreach ($sum as $key => $value) {\n        $result[]\
    \ = $nums[$key];\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return order_by_points(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(array(1, 11, -1, -11, -12)) !== array(-1, -11, 1, -12, 11)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1234, 423,\
    \ 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46)) !== array(0, 2, 3, 6,\
    \ 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, -11, -32, 43, 54, -98, 2, -3))\
    \ !== array(-3, -32, -98, -11, 1, 2, 43, 54)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11)) !== array(1,\
    \ 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(0, 6, 6, -76, -21, 23, 4)) !== array(-76, -21, 0, 4,\
    \ 23, 6, 6)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmplbd47de3.php:27\n\
    Stack trace:\n#0 /tmp/tmplbd47de3.php(35): test()\n#1 {main}\n  thrown in /tmp/tmplbd47de3.php\
    \ on line 27\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function which sorts the given list of integers\n//\
    \ in ascending order according to the sum of their digits.\n// Note: if there\
    \ are several items with similar sum of their digits,\n// order them based on\
    \ their index in original list.\n// For example:\n// >>> order_by_points([1, 11,\
    \ -1, -11, -12]) == [-1, -11, 1, -12, 11]\n// >>> order_by_points([]) == []\n\
    function order_by_points($nums) {\n    $sum_nums = [];\n    foreach ($nums as\
    \ $key => $num) {\n        $sum_nums[$key] = sum_digits($num);\n    }\n    asort($sum_nums);\n\
    \    $result = [];\n    foreach ($sum_nums as $key => $sum_num) {\n        $result[]\
    \ = $nums[$key];\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return order_by_points(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(array(1, 11, -1, -11, -12)) !== array(-1, -11, 1, -12, 11)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1234, 423,\
    \ 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46)) !== array(0, 2, 3, 6,\
    \ 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, -11, -32, 43, 54, -98, 2, -3))\
    \ !== array(-3, -32, -98, -11, 1, 2, 43, 54)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11)) !== array(1,\
    \ 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(0, 6, 6, -76, -21, 23, 4)) !== array(-76, -21, 0, 4,\
    \ 23, 6, 6)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Error: Call to undefined function sum_digits()\
    \ in /tmp/tmp8ohcmpep.php:12\nStack trace:\n#0 /tmp/tmp8ohcmpep.php(23): order_by_points()\n\
    #1 /tmp/tmp8ohcmpep.php(27): candidate()\n#2 /tmp/tmp8ohcmpep.php(35): test()\n\
    #3 {main}\n  thrown in /tmp/tmp8ohcmpep.php on line 12\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function which sorts the given list of integers\n//\
    \ in ascending order according to the sum of their digits.\n// Note: if there\
    \ are several items with similar sum of their digits,\n// order them based on\
    \ their index in original list.\n// For example:\n// >>> order_by_points([1, 11,\
    \ -1, -11, -12]) == [-1, -11, 1, -12, 11]\n// >>> order_by_points([]) == []\n\
    function order_by_points($nums) {\n    $result = [];\n    $sums = [];\n    foreach\
    \ ($nums as $key => $num) {\n        $sum = 0;\n        $num = abs($num);\n  \
    \      while ($num > 0) {\n            $sum += $num % 10;\n            $num =\
    \ floor($num / 10);\n        }\n        $sums[$key] = $sum;\n    }\n    asort($sums);\n\
    \    foreach ($sums as $key => $sum) {\n        $result[] = $nums[$key];\n   \
    \ }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return order_by_points(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 11, -1, -11, -12)) !==\
    \ array(-1, -11, 1, -12, 11)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56,\
    \ 0, 46)) !== array(0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463,\
    \ 3457)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -11, -32, 43, 54, -98, 2, -3)) !== array(-3, -32, -98, -11, 1, 2, 43, 54)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11)) !== array(1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 6, 6, -76, -21,\
    \ 23, 4)) !== array(-76, -21, 0, 4, 23, 6, 6)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmptby1v2jr.php:33\n\
    Stack trace:\n#0 /tmp/tmptby1v2jr.php(41): test()\n#1 {main}\n  thrown in /tmp/tmptby1v2jr.php\
    \ on line 33\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function which sorts the given list of integers\n//\
    \ in ascending order according to the sum of their digits.\n// Note: if there\
    \ are several items with similar sum of their digits,\n// order them based on\
    \ their index in original list.\n// For example:\n// >>> order_by_points([1, 11,\
    \ -1, -11, -12]) == [-1, -11, 1, -12, 11]\n// >>> order_by_points([]) == []\n\
    function order_by_points($nums) {\n    $result = [];\n    foreach ($nums as $key\
    \ => $num) {\n        $result[$key] = array_sum(str_split($num));\n    }\n   \
    \ asort($result);\n    $result = array_keys($result);\n    foreach ($result as\
    \ $key => $value) {\n        $result[$key] = $nums[$value];\n    }\n    return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return order_by_points(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 11, -1, -11, -12)) !==\
    \ array(-1, -11, 1, -12, 11)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56,\
    \ 0, 46)) !== array(0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463,\
    \ 3457)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -11, -32, 43, 54, -98, 2, -3)) !== array(-3, -32, -98, -11, 1, 2, 43, 54)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11)) !== array(1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 6, 6, -76, -21,\
    \ 23, 4)) !== array(-76, -21, 0, 4, 23, 6, 6)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp5vzxqzm3.php:27\n\
    Stack trace:\n#0 /tmp/tmp5vzxqzm3.php(35): test()\n#1 {main}\n  thrown in /tmp/tmp5vzxqzm3.php\
    \ on line 27\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function which sorts the given list of integers\n//\
    \ in ascending order according to the sum of their digits.\n// Note: if there\
    \ are several items with similar sum of their digits,\n// order them based on\
    \ their index in original list.\n// For example:\n// >>> order_by_points([1, 11,\
    \ -1, -11, -12]) == [-1, -11, 1, -12, 11]\n// >>> order_by_points([]) == []\n\
    function order_by_points($nums) {\n    $sums = [];\n    foreach ($nums as $index\
    \ => $num) {\n        $sum = 0;\n        $num = abs($num);\n        while ($num\
    \ > 0) {\n            $sum += $num % 10;\n            $num = floor($num / 10);\n\
    \        }\n        $sums[$index] = $sum;\n    }\n    asort($sums);\n    $result\
    \ = [];\n    foreach ($sums as $index => $sum) {\n        $result[] = $nums[$index];\n\
    \    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return order_by_points(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 11, -1, -11, -12)) !==\
    \ array(-1, -11, 1, -12, 11)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56,\
    \ 0, 46)) !== array(0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463,\
    \ 3457)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -11, -32, 43, 54, -98, 2, -3)) !== array(-3, -32, -98, -11, 1, 2, 43, 54)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11)) !== array(1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 6, 6, -76, -21,\
    \ 23, 4)) !== array(-76, -21, 0, 4, 23, 6, 6)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp_uhrd0y6.php:33\n\
    Stack trace:\n#0 /tmp/tmp_uhrd0y6.php(41): test()\n#1 {main}\n  thrown in /tmp/tmp_uhrd0y6.php\
    \ on line 33\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function which sorts the given list of integers\n//\
    \ in ascending order according to the sum of their digits.\n// Note: if there\
    \ are several items with similar sum of their digits,\n// order them based on\
    \ their index in original list.\n// For example:\n// >>> order_by_points([1, 11,\
    \ -1, -11, -12]) == [-1, -11, 1, -12, 11]\n// >>> order_by_points([]) == []\n\
    function order_by_points($nums) {\n    $result = [];\n    foreach ($nums as $key\
    \ => $num) {\n        $result[$key] = array_sum(str_split($num));\n    }\n   \
    \ asort($result);\n    $result = array_keys($result);\n    $result = array_map(function($num)\
    \ use ($nums) {\n        return $nums[$num];\n    }, $result);\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return order_by_points(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(array(1, 11, -1, -11, -12)) !== array(-1,\
    \ -11, 1, -12, 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46)) !== array(0, 2,\
    \ 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, -11, -32, 43, 54, -98, 2, -3))\
    \ !== array(-3, -32, -98, -11, 1, 2, 43, 54)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11)) !== array(1,\
    \ 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(0, 6, 6, -76, -21, 23, 4)) !== array(-76, -21, 0, 4,\
    \ 23, 6, 6)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp7awoz6sy.php:27\n\
    Stack trace:\n#0 /tmp/tmp7awoz6sy.php(35): test()\n#1 {main}\n  thrown in /tmp/tmp7awoz6sy.php\
    \ on line 27\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function which sorts the given list of integers\n//\
    \ in ascending order according to the sum of their digits.\n// Note: if there\
    \ are several items with similar sum of their digits,\n// order them based on\
    \ their index in original list.\n// For example:\n// >>> order_by_points([1, 11,\
    \ -1, -11, -12]) == [-1, -11, 1, -12, 11]\n// >>> order_by_points([]) == []\n\
    function order_by_points($nums) {\n    $sums = array_map(function($n) {\n    \
    \    $sum = 0;\n        while ($n > 0) {\n            $sum += $n % 10;\n     \
    \       $n = intval($n / 10);\n        }\n        return $sum;\n    }, $nums);\n\
    \    array_multisort($sums, $nums);\n    return $nums;\n}\n\nfunction candidate(...$args)\
    \ {\n    return order_by_points(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(array(1, 11, -1, -11, -12)) !== array(-1, -11, 1, -12, 11)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1234, 423,\
    \ 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46)) !== array(0, 2, 3, 6,\
    \ 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, -11, -32, 43, 54, -98, 2, -3))\
    \ !== array(-3, -32, -98, -11, 1, 2, 43, 54)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11)) !== array(1,\
    \ 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(0, 6, 6, -76, -21, 23, 4)) !== array(-76, -21, 0, 4,\
    \ 23, 6, 6)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpyi1_4gg2.php:27\n\
    Stack trace:\n#0 /tmp/tmpyi1_4gg2.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpyi1_4gg2.php\
    \ on line 27\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function which sorts the given list of integers\n//\
    \ in ascending order according to the sum of their digits.\n// Note: if there\
    \ are several items with similar sum of their digits,\n// order them based on\
    \ their index in original list.\n// For example:\n// >>> order_by_points([1, 11,\
    \ -1, -11, -12]) == [-1, -11, 1, -12, 11]\n// >>> order_by_points([]) == []\n\
    function order_by_points($nums) {\n    $nums_with_points = [];\n    foreach ($nums\
    \ as $index => $num) {\n        $nums_with_points[$index] = [\n            'num'\
    \ => $num,\n            'points' => array_sum(str_split(abs($num)))\n        ];\n\
    \    }\n    usort($nums_with_points, function ($a, $b) {\n        if ($a['points']\
    \ == $b['points']) {\n            return $a['index'] - $b['index'];\n        }\n\
    \        return $a['points'] - $b['points'];\n    });\n    return array_column($nums_with_points,\
    \ 'num');\n}\n\nfunction candidate(...$args) {\n    return order_by_points(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 11, -1, -11, -12)) !==\
    \ array(-1, -11, 1, -12, 11)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56,\
    \ 0, 46)) !== array(0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463,\
    \ 3457)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -11, -32, 43, 54, -98, 2, -3)) !== array(-3, -32, -98, -11, 1, 2, 43, 54)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11)) !== array(1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 6, 6, -76, -21,\
    \ 23, 4)) !== array(-76, -21, 0, 4, 23, 6, 6)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Warning:  Undefined array key \"index\" in /tmp/tmp_xgtrgq8.php on\
    \ line 19\nPHP Warning:  Undefined array key \"index\" in /tmp/tmp_xgtrgq8.php\
    \ on line 19\nPHP Warning:  Undefined array key \"index\" in /tmp/tmp_xgtrgq8.php\
    \ on line 19\nPHP Warning:  Undefined array key \"index\" in /tmp/tmp_xgtrgq8.php\
    \ on line 19\nPHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp_xgtrgq8.php:31\n\
    Stack trace:\n#0 /tmp/tmp_xgtrgq8.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp_xgtrgq8.php\
    \ on line 31\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function which sorts the given list of integers\n//\
    \ in ascending order according to the sum of their digits.\n// Note: if there\
    \ are several items with similar sum of their digits,\n// order them based on\
    \ their index in original list.\n// For example:\n// >>> order_by_points([1, 11,\
    \ -1, -11, -12]) == [-1, -11, 1, -12, 11]\n// >>> order_by_points([]) == []\n\
    function order_by_points($nums) {\n    $sums = array_map(function($num) {\n  \
    \      return array_sum(str_split($num));\n    }, $nums);\n    array_multisort($sums,\
    \ $nums);\n    return $nums;\n}\n\nfunction candidate(...$args) {\n    return\
    \ order_by_points(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 11, -1, -11, -12)) !== array(-1, -11, 1, -12, 11)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1234, 423, 463, 145, 2, 423, 423,\
    \ 53, 6, 37, 3457, 3, 56, 0, 46)) !== array(0, 2, 3, 6, 53, 423, 423, 423, 1234,\
    \ 145, 37, 46, 56, 463, 3457)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, -11, -32, 43, 54, -98, 2, -3)) !== array(-3,\
    \ -32, -98, -11, 1, 2, 43, 54)) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11)) !== array(1, 10, 2,\
    \ 11, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(0, 6, 6, -76, -21, 23, 4)) !== array(-76, -21, 0, 4, 23, 6,\
    \ 6)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp5f8fuei2.php:22\n\
    Stack trace:\n#0 /tmp/tmp5f8fuei2.php(30): test()\n#1 {main}\n  thrown in /tmp/tmp5f8fuei2.php\
    \ on line 22\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function which sorts the given list of integers\n//\
    \ in ascending order according to the sum of their digits.\n// Note: if there\
    \ are several items with similar sum of their digits,\n// order them based on\
    \ their index in original list.\n// For example:\n// >>> order_by_points([1, 11,\
    \ -1, -11, -12]) == [-1, -11, 1, -12, 11]\n// >>> order_by_points([]) == []\n\
    function order_by_points($nums) {\n    $result = [];\n    foreach ($nums as $key\
    \ => $num) {\n        $sum = 0;\n        $num = abs($num);\n        while ($num\
    \ > 0) {\n            $sum += $num % 10;\n            $num = floor($num / 10);\n\
    \        }\n        $result[$key] = $sum;\n    }\n    asort($result);\n    $result\
    \ = array_keys($result);\n    $result = array_map(function ($key) use ($nums)\
    \ {\n        return $nums[$key];\n    }, $result);\n    return $result;\n}\n\n\
    function candidate(...$args) {\n    return order_by_points(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 11, -1, -11, -12)) !== array(-1,\
    \ -11, 1, -12, 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46)) !== array(0, 2,\
    \ 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, -11, -32, 43, 54, -98, 2, -3))\
    \ !== array(-3, -32, -98, -11, 1, 2, 43, 54)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11)) !== array(1,\
    \ 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(0, 6, 6, -76, -21, 23, 4)) !== array(-76, -21, 0, 4,\
    \ 23, 6, 6)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpc8m0f2li.php:33\n\
    Stack trace:\n#0 /tmp/tmpc8m0f2li.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpc8m0f2li.php\
    \ on line 33\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function which sorts the given list of integers\n//\
    \ in ascending order according to the sum of their digits.\n// Note: if there\
    \ are several items with similar sum of their digits,\n// order them based on\
    \ their index in original list.\n// For example:\n// >>> order_by_points([1, 11,\
    \ -1, -11, -12]) == [-1, -11, 1, -12, 11]\n// >>> order_by_points([]) == []\n\
    function order_by_points($nums) {\n    $sum_of_digits = [];\n    foreach ($nums\
    \ as $key => $num) {\n        $sum_of_digits[$key] = array_sum(str_split($num));\n\
    \    }\n    array_multisort($sum_of_digits, SORT_ASC, $nums);\n    return $nums;\n\
    }\n\nfunction candidate(...$args) {\n    return order_by_points(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(array(1, 11, -1, -11, -12)) !== array(-1,\
    \ -11, 1, -12, 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46)) !== array(0, 2,\
    \ 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, -11, -32, 43, 54, -98, 2, -3))\
    \ !== array(-3, -32, -98, -11, 1, 2, 43, 54)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11)) !== array(1,\
    \ 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(0, 6, 6, -76, -21, 23, 4)) !== array(-76, -21, 0, 4,\
    \ 23, 6, 6)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp0oj5kthb.php:23\n\
    Stack trace:\n#0 /tmp/tmp0oj5kthb.php(31): test()\n#1 {main}\n  thrown in /tmp/tmp0oj5kthb.php\
    \ on line 23\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function which sorts the given list of integers\n//\
    \ in ascending order according to the sum of their digits.\n// Note: if there\
    \ are several items with similar sum of their digits,\n// order them based on\
    \ their index in original list.\n// For example:\n// >>> order_by_points([1, 11,\
    \ -1, -11, -12]) == [-1, -11, 1, -12, 11]\n// >>> order_by_points([]) == []\n\
    function order_by_points($nums) {\n    $nums_sorted = [];\n    $nums_sorted_index\
    \ = [];\n    $nums_sorted_sum = [];\n    $nums_sorted_sum_index = [];\n    for\
    \ ($i = 0; $i < count($nums); $i++) {\n        $nums_sorted[$i] = $nums[$i];\n\
    \        $nums_sorted_index[$i] = $i;\n        $nums_sorted_sum[$i] = 0;\n   \
    \     $nums_sorted_sum_index[$i] = 0;\n        $nums_sorted_sum[$i] = sum_of_digits($nums[$i]);\n\
    \        $nums_sorted_sum_index[$i] = $i;\n    }\n    array_multisort($nums_sorted_sum,\
    \ $nums_sorted_sum_index);\n    for ($i = 0; $i < count($nums); $i++) {\n    \
    \    $nums_sorted[$i] = $nums[$nums_sorted_sum_index[$i]];\n    }\n    return\
    \ $nums_sorted;\n}\n\nfunction candidate(...$args) {\n    return order_by_points(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 11, -1, -11, -12)) !==\
    \ array(-1, -11, 1, -12, 11)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56,\
    \ 0, 46)) !== array(0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463,\
    \ 3457)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -11, -32, 43, 54, -98, 2, -3)) !== array(-3, -32, -98, -11, 1, 2, 43, 54)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11)) !== array(1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 6, 6, -76, -21,\
    \ 23, 4)) !== array(-76, -21, 0, 4, 23, 6, 6)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Error: Call to undefined function sum_of_digits()\
    \ in /tmp/tmp7x_i3_uw.php:19\nStack trace:\n#0 /tmp/tmp7x_i3_uw.php(30): order_by_points()\n\
    #1 /tmp/tmp7x_i3_uw.php(34): candidate()\n#2 /tmp/tmp7x_i3_uw.php(42): test()\n\
    #3 {main}\n  thrown in /tmp/tmp7x_i3_uw.php on line 19\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function which sorts the given list of integers\n//\
    \ in ascending order according to the sum of their digits.\n// Note: if there\
    \ are several items with similar sum of their digits,\n// order them based on\
    \ their index in original list.\n// For example:\n// >>> order_by_points([1, 11,\
    \ -1, -11, -12]) == [-1, -11, 1, -12, 11]\n// >>> order_by_points([]) == []\n\
    function order_by_points($nums) {\n  $sums = [];\n  foreach ($nums as $key =>\
    \ $num) {\n    $sums[$key] = array_sum(str_split($num));\n  }\n  asort($sums);\n\
    \  $result = [];\n  foreach ($sums as $key => $sum) {\n    $result[] = $nums[$key];\n\
    \  }\n  return $result;\n}\n\nfunction candidate(...$args) {\n    return order_by_points(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 11, -1, -11, -12)) !==\
    \ array(-1, -11, 1, -12, 11)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56,\
    \ 0, 46)) !== array(0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463,\
    \ 3457)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -11, -32, 43, 54, -98, 2, -3)) !== array(-3, -32, -98, -11, 1, 2, 43, 54)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11)) !== array(1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 6, 6, -76, -21,\
    \ 23, 4)) !== array(-76, -21, 0, 4, 23, 6, 6)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpzn5tyt7n.php:27\n\
    Stack trace:\n#0 /tmp/tmpzn5tyt7n.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpzn5tyt7n.php\
    \ on line 27\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function which sorts the given list of integers\n//\
    \ in ascending order according to the sum of their digits.\n// Note: if there\
    \ are several items with similar sum of their digits,\n// order them based on\
    \ their index in original list.\n// For example:\n// >>> order_by_points([1, 11,\
    \ -1, -11, -12]) == [-1, -11, 1, -12, 11]\n// >>> order_by_points([]) == []\n\
    function order_by_points($nums) {\n    $nums_with_points = [];\n    foreach ($nums\
    \ as $key => $num) {\n        $nums_with_points[$key] = [\n            'num' =>\
    \ $num,\n            'points' => array_sum(str_split(abs($num)))\n        ];\n\
    \    }\n    usort($nums_with_points, function ($a, $b) {\n        if ($a['points']\
    \ == $b['points']) {\n            return $a['num'] <=> $b['num'];\n        }\n\
    \        return $a['points'] <=> $b['points'];\n    });\n    return array_column($nums_with_points,\
    \ 'num');\n}\n\nfunction candidate(...$args) {\n    return order_by_points(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 11, -1, -11, -12)) !==\
    \ array(-1, -11, 1, -12, 11)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56,\
    \ 0, 46)) !== array(0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463,\
    \ 3457)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -11, -32, 43, 54, -98, 2, -3)) !== array(-3, -32, -98, -11, 1, 2, 43, 54)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11)) !== array(1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 6, 6, -76, -21,\
    \ 23, 4)) !== array(-76, -21, 0, 4, 23, 6, 6)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpoc_u20lo.php:31\n\
    Stack trace:\n#0 /tmp/tmpoc_u20lo.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpoc_u20lo.php\
    \ on line 31\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function which sorts the given list of integers\n//\
    \ in ascending order according to the sum of their digits.\n// Note: if there\
    \ are several items with similar sum of their digits,\n// order them based on\
    \ their index in original list.\n// For example:\n// >>> order_by_points([1, 11,\
    \ -1, -11, -12]) == [-1, -11, 1, -12, 11]\n// >>> order_by_points([]) == []\n\
    function order_by_points($nums) {\n    $sums = array_map(function($num) {\n  \
    \      return array_sum(str_split($num));\n    }, $nums);\n    array_multisort($sums,\
    \ $nums);\n    return $nums;\n}\n\nfunction candidate(...$args) {\n    return\
    \ order_by_points(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 11, -1, -11, -12)) !== array(-1, -11, 1, -12, 11)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1234, 423, 463, 145, 2, 423, 423,\
    \ 53, 6, 37, 3457, 3, 56, 0, 46)) !== array(0, 2, 3, 6, 53, 423, 423, 423, 1234,\
    \ 145, 37, 46, 56, 463, 3457)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, -11, -32, 43, 54, -98, 2, -3)) !== array(-3,\
    \ -32, -98, -11, 1, 2, 43, 54)) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11)) !== array(1, 10, 2,\
    \ 11, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(0, 6, 6, -76, -21, 23, 4)) !== array(-76, -21, 0, 4, 23, 6,\
    \ 6)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp0wlh4yo6.php:22\n\
    Stack trace:\n#0 /tmp/tmp0wlh4yo6.php(30): test()\n#1 {main}\n  thrown in /tmp/tmp0wlh4yo6.php\
    \ on line 22\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function which sorts the given list of integers\n//\
    \ in ascending order according to the sum of their digits.\n// Note: if there\
    \ are several items with similar sum of their digits,\n// order them based on\
    \ their index in original list.\n// For example:\n// >>> order_by_points([1, 11,\
    \ -1, -11, -12]) == [-1, -11, 1, -12, 11]\n// >>> order_by_points([]) == []\n\
    function order_by_points($nums) {\n    $sum = [];\n    foreach ($nums as $key\
    \ => $value) {\n        $sum[$key] = array_sum(str_split($value));\n    }\n  \
    \  array_multisort($sum, SORT_ASC, $nums);\n    return $nums;\n}\n\nfunction candidate(...$args)\
    \ {\n    return order_by_points(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(array(1, 11, -1, -11, -12)) !== array(-1, -11, 1, -12, 11)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1234, 423,\
    \ 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46)) !== array(0, 2, 3, 6,\
    \ 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, -11, -32, 43, 54, -98, 2, -3))\
    \ !== array(-3, -32, -98, -11, 1, 2, 43, 54)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11)) !== array(1,\
    \ 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(0, 6, 6, -76, -21, 23, 4)) !== array(-76, -21, 0, 4,\
    \ 23, 6, 6)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp50kxmltk.php:23\n\
    Stack trace:\n#0 /tmp/tmp50kxmltk.php(31): test()\n#1 {main}\n  thrown in /tmp/tmp50kxmltk.php\
    \ on line 23\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function which sorts the given list of integers\n//\
    \ in ascending order according to the sum of their digits.\n// Note: if there\
    \ are several items with similar sum of their digits,\n// order them based on\
    \ their index in original list.\n// For example:\n// >>> order_by_points([1, 11,\
    \ -1, -11, -12]) == [-1, -11, 1, -12, 11]\n// >>> order_by_points([]) == []\n\
    function order_by_points($nums) {\n    $sums = array_map(function($num) {\n  \
    \      $sum = 0;\n        while ($num > 0) {\n            $sum += $num % 10;\n\
    \            $num = (int)($num / 10);\n        }\n        return $sum;\n    },\
    \ $nums);\n    array_multisort($sums, $nums);\n    return $nums;\n}\n\nfunction\
    \ candidate(...$args) {\n    return order_by_points(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 11, -1, -11, -12)) !== array(-1,\
    \ -11, 1, -12, 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46)) !== array(0, 2,\
    \ 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, -11, -32, 43, 54, -98, 2, -3))\
    \ !== array(-3, -32, -98, -11, 1, 2, 43, 54)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11)) !== array(1,\
    \ 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(0, 6, 6, -76, -21, 23, 4)) !== array(-76, -21, 0, 4,\
    \ 23, 6, 6)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp0vdlobef.php:27\n\
    Stack trace:\n#0 /tmp/tmp0vdlobef.php(35): test()\n#1 {main}\n  thrown in /tmp/tmp0vdlobef.php\
    \ on line 27\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function which sorts the given list of integers\n//\
    \ in ascending order according to the sum of their digits.\n// Note: if there\
    \ are several items with similar sum of their digits,\n// order them based on\
    \ their index in original list.\n// For example:\n// >>> order_by_points([1, 11,\
    \ -1, -11, -12]) == [-1, -11, 1, -12, 11]\n// >>> order_by_points([]) == []\n\
    function order_by_points($nums) {\n    $sum_nums = array_map(function($num) {\n\
    \        $sum = 0;\n        $num = abs($num);\n        while ($num > 0) {\n  \
    \          $sum += $num % 10;\n            $num = (int)($num / 10);\n        }\n\
    \        return $sum;\n    }, $nums);\n    $sum_nums_with_index = array_map(function($num,\
    \ $index) {\n        return [$num, $index];\n    }, $sum_nums, array_keys($sum_nums));\n\
    \    usort($sum_nums_with_index, function($a, $b) {\n        if ($a[0] == $b[0])\
    \ {\n            return $a[1] - $b[1];\n        }\n        return $a[0] - $b[0];\n\
    \    });\n    $result = array_map(function($sum_num_with_index) use ($nums) {\n\
    \        return $nums[$sum_num_with_index[1]];\n    }, $sum_nums_with_index);\n\
    \    return $result;\n}\n\nfunction candidate(...$args) {\n    return order_by_points(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 11, -1, -11, -12)) !==\
    \ array(-1, -11, 1, -12, 11)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56,\
    \ 0, 46)) !== array(0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463,\
    \ 3457)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -11, -32, 43, 54, -98, 2, -3)) !== array(-3, -32, -98, -11, 1, 2, 43, 54)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11)) !== array(1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 6, 6, -76, -21,\
    \ 23, 4)) !== array(-76, -21, 0, 4, 23, 6, 6)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpfodjdi20.php:39\n\
    Stack trace:\n#0 /tmp/tmpfodjdi20.php(47): test()\n#1 {main}\n  thrown in /tmp/tmpfodjdi20.php\
    \ on line 39\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function which sorts the given list of integers\n//\
    \ in ascending order according to the sum of their digits.\n// Note: if there\
    \ are several items with similar sum of their digits,\n// order them based on\
    \ their index in original list.\n// For example:\n// >>> order_by_points([1, 11,\
    \ -1, -11, -12]) == [-1, -11, 1, -12, 11]\n// >>> order_by_points([]) == []\n\
    function order_by_points($nums) {\n    $sums = [];\n    foreach ($nums as $key\
    \ => $num) {\n        $sum = 0;\n        $num = abs($num);\n        while ($num\
    \ > 0) {\n            $sum += $num % 10;\n            $num = floor($num / 10);\n\
    \        }\n        $sums[$key] = $sum;\n    }\n    asort($sums);\n    $result\
    \ = [];\n    foreach ($sums as $key => $sum) {\n        $result[] = $nums[$key];\n\
    \    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return order_by_points(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 11, -1, -11, -12)) !==\
    \ array(-1, -11, 1, -12, 11)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56,\
    \ 0, 46)) !== array(0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463,\
    \ 3457)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -11, -32, 43, 54, -98, 2, -3)) !== array(-3, -32, -98, -11, 1, 2, 43, 54)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11)) !== array(1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 6, 6, -76, -21,\
    \ 23, 4)) !== array(-76, -21, 0, 4, 23, 6, 6)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp_a1vwg0w.php:33\n\
    Stack trace:\n#0 /tmp/tmp_a1vwg0w.php(41): test()\n#1 {main}\n  thrown in /tmp/tmp_a1vwg0w.php\
    \ on line 33\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function which sorts the given list of integers\n//\
    \ in ascending order according to the sum of their digits.\n// Note: if there\
    \ are several items with similar sum of their digits,\n// order them based on\
    \ their index in original list.\n// For example:\n// >>> order_by_points([1, 11,\
    \ -1, -11, -12]) == [-1, -11, 1, -12, 11]\n// >>> order_by_points([]) == []\n\
    function order_by_points($nums) {\n    $sums = [];\n    foreach ($nums as $key\
    \ => $num) {\n        $sums[$key] = array_sum(str_split($num));\n    }\n    asort($sums);\n\
    \    $result = [];\n    foreach ($sums as $key => $sum) {\n        $result[] =\
    \ $nums[$key];\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return order_by_points(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(array(1, 11, -1, -11, -12)) !== array(-1, -11, 1, -12, 11)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1234, 423,\
    \ 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46)) !== array(0, 2, 3, 6,\
    \ 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, -11, -32, 43, 54, -98, 2, -3))\
    \ !== array(-3, -32, -98, -11, 1, 2, 43, 54)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11)) !== array(1,\
    \ 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(0, 6, 6, -76, -21, 23, 4)) !== array(-76, -21, 0, 4,\
    \ 23, 6, 6)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpr96vapi9.php:27\n\
    Stack trace:\n#0 /tmp/tmpr96vapi9.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpr96vapi9.php\
    \ on line 27\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function which sorts the given list of integers\n//\
    \ in ascending order according to the sum of their digits.\n// Note: if there\
    \ are several items with similar sum of their digits,\n// order them based on\
    \ their index in original list.\n// For example:\n// >>> order_by_points([1, 11,\
    \ -1, -11, -12]) == [-1, -11, 1, -12, 11]\n// >>> order_by_points([]) == []\n\
    function order_by_points($nums) {\n    $sums = [];\n    foreach ($nums as $key\
    \ => $num) {\n        $sums[$key] = sum_of_digits($num);\n    }\n    asort($sums);\n\
    \    $result = [];\n    foreach ($sums as $key => $sum) {\n        $result[] =\
    \ $nums[$key];\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return order_by_points(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(array(1, 11, -1, -11, -12)) !== array(-1, -11, 1, -12, 11)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1234, 423,\
    \ 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46)) !== array(0, 2, 3, 6,\
    \ 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, -11, -32, 43, 54, -98, 2, -3))\
    \ !== array(-3, -32, -98, -11, 1, 2, 43, 54)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11)) !== array(1,\
    \ 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(0, 6, 6, -76, -21, 23, 4)) !== array(-76, -21, 0, 4,\
    \ 23, 6, 6)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Error: Call to undefined function sum_of_digits()\
    \ in /tmp/tmppga8ylrz.php:12\nStack trace:\n#0 /tmp/tmppga8ylrz.php(23): order_by_points()\n\
    #1 /tmp/tmppga8ylrz.php(27): candidate()\n#2 /tmp/tmppga8ylrz.php(35): test()\n\
    #3 {main}\n  thrown in /tmp/tmppga8ylrz.php on line 12\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function which sorts the given list of integers\n//\
    \ in ascending order according to the sum of their digits.\n// Note: if there\
    \ are several items with similar sum of their digits,\n// order them based on\
    \ their index in original list.\n// For example:\n// >>> order_by_points([1, 11,\
    \ -1, -11, -12]) == [-1, -11, 1, -12, 11]\n// >>> order_by_points([]) == []\n\
    function order_by_points($nums) {\n    $sum = array_map(function($n) {\n     \
    \   $sum = 0;\n        while ($n) {\n            $sum += $n % 10;\n          \
    \  $n = intval($n / 10);\n        }\n        return $sum;\n    }, $nums);\n  \
    \  array_multisort($sum, SORT_ASC, $nums);\n    return $nums;\n}\n\nfunction candidate(...$args)\
    \ {\n    return order_by_points(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(array(1, 11, -1, -11, -12)) !== array(-1, -11, 1, -12, 11)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1234, 423,\
    \ 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46)) !== array(0, 2, 3, 6,\
    \ 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, -11, -32, 43, 54, -98, 2, -3))\
    \ !== array(-3, -32, -98, -11, 1, 2, 43, 54)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11)) !== array(1,\
    \ 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(0, 6, 6, -76, -21, 23, 4)) !== array(-76, -21, 0, 4,\
    \ 23, 6, 6)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpx0ye7jph.php:27\n\
    Stack trace:\n#0 /tmp/tmpx0ye7jph.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpx0ye7jph.php\
    \ on line 27\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function which sorts the given list of integers\n//\
    \ in ascending order according to the sum of their digits.\n// Note: if there\
    \ are several items with similar sum of their digits,\n// order them based on\
    \ their index in original list.\n// For example:\n// >>> order_by_points([1, 11,\
    \ -1, -11, -12]) == [-1, -11, 1, -12, 11]\n// >>> order_by_points([]) == []\n\
    function order_by_points($nums) {\n    $sum = [];\n    foreach ($nums as $key\
    \ => $num) {\n        $sum[$key] = array_sum(str_split($num));\n    }\n    array_multisort($sum,\
    \ SORT_ASC, $nums);\n    return $nums;\n}\n\nfunction candidate(...$args) {\n\
    \    return order_by_points(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 11, -1, -11, -12)) !== array(-1, -11, 1, -12, 11)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1234, 423, 463, 145, 2, 423, 423,\
    \ 53, 6, 37, 3457, 3, 56, 0, 46)) !== array(0, 2, 3, 6, 53, 423, 423, 423, 1234,\
    \ 145, 37, 46, 56, 463, 3457)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, -11, -32, 43, 54, -98, 2, -3)) !== array(-3,\
    \ -32, -98, -11, 1, 2, 43, 54)) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11)) !== array(1, 10, 2,\
    \ 11, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(0, 6, 6, -76, -21, 23, 4)) !== array(-76, -21, 0, 4, 23, 6,\
    \ 6)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmphp30mjqi.php:23\n\
    Stack trace:\n#0 /tmp/tmphp30mjqi.php(31): test()\n#1 {main}\n  thrown in /tmp/tmphp30mjqi.php\
    \ on line 23\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function which sorts the given list of integers\n//\
    \ in ascending order according to the sum of their digits.\n// Note: if there\
    \ are several items with similar sum of their digits,\n// order them based on\
    \ their index in original list.\n// For example:\n// >>> order_by_points([1, 11,\
    \ -1, -11, -12]) == [-1, -11, 1, -12, 11]\n// >>> order_by_points([]) == []\n\
    function order_by_points($nums) {\n    $sum = array_map(function($num) {\n   \
    \     return array_sum(str_split($num));\n    }, $nums);\n    array_multisort($sum,\
    \ SORT_ASC, $nums);\n    return $nums;\n}\n\nfunction candidate(...$args) {\n\
    \    return order_by_points(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 11, -1, -11, -12)) !== array(-1, -11, 1, -12, 11)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1234, 423, 463, 145, 2, 423, 423,\
    \ 53, 6, 37, 3457, 3, 56, 0, 46)) !== array(0, 2, 3, 6, 53, 423, 423, 423, 1234,\
    \ 145, 37, 46, 56, 463, 3457)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, -11, -32, 43, 54, -98, 2, -3)) !== array(-3,\
    \ -32, -98, -11, 1, 2, 43, 54)) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11)) !== array(1, 10, 2,\
    \ 11, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(0, 6, 6, -76, -21, 23, 4)) !== array(-76, -21, 0, 4, 23, 6,\
    \ 6)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpdvuwupdr.php:22\n\
    Stack trace:\n#0 /tmp/tmpdvuwupdr.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpdvuwupdr.php\
    \ on line 22\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function which sorts the given list of integers\n//\
    \ in ascending order according to the sum of their digits.\n// Note: if there\
    \ are several items with similar sum of their digits,\n// order them based on\
    \ their index in original list.\n// For example:\n// >>> order_by_points([1, 11,\
    \ -1, -11, -12]) == [-1, -11, 1, -12, 11]\n// >>> order_by_points([]) == []\n\
    function order_by_points($nums) {\n    $new_nums = [];\n    $new_nums_sum = [];\n\
    \    foreach ($nums as $key => $num) {\n        $new_nums[$key] = $num;\n    \
    \    $new_nums_sum[$key] = array_sum(str_split($num));\n    }\n    array_multisort($new_nums_sum,\
    \ SORT_ASC, $new_nums);\n    return $new_nums;\n}\n\nfunction candidate(...$args)\
    \ {\n    return order_by_points(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(array(1, 11, -1, -11, -12)) !== array(-1, -11, 1, -12, 11)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1234, 423,\
    \ 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46)) !== array(0, 2, 3, 6,\
    \ 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, -11, -32, 43, 54, -98, 2, -3))\
    \ !== array(-3, -32, -98, -11, 1, 2, 43, 54)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11)) !== array(1,\
    \ 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(0, 6, 6, -76, -21, 23, 4)) !== array(-76, -21, 0, 4,\
    \ 23, 6, 6)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp2zh384j8.php:25\n\
    Stack trace:\n#0 /tmp/tmp2zh384j8.php(33): test()\n#1 {main}\n  thrown in /tmp/tmp2zh384j8.php\
    \ on line 25\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function which sorts the given list of integers\n//\
    \ in ascending order according to the sum of their digits.\n// Note: if there\
    \ are several items with similar sum of their digits,\n// order them based on\
    \ their index in original list.\n// For example:\n// >>> order_by_points([1, 11,\
    \ -1, -11, -12]) == [-1, -11, 1, -12, 11]\n// >>> order_by_points([]) == []\n\
    function order_by_points($nums) {\n    $sum_digits = array_map(function($num)\
    \ {\n        $sum = 0;\n        $num = abs($num);\n        while ($num > 0) {\n\
    \            $sum += $num % 10;\n            $num = floor($num / 10);\n      \
    \  }\n        return $sum;\n    }, $nums);\n    array_multisort($sum_digits, $nums);\n\
    \    return $nums;\n}\n\nfunction candidate(...$args) {\n    return order_by_points(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 11, -1, -11, -12)) !==\
    \ array(-1, -11, 1, -12, 11)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56,\
    \ 0, 46)) !== array(0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463,\
    \ 3457)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -11, -32, 43, 54, -98, 2, -3)) !== array(-3, -32, -98, -11, 1, 2, 43, 54)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11)) !== array(1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 6, 6, -76, -21,\
    \ 23, 4)) !== array(-76, -21, 0, 4, 23, 6, 6)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpd_hhy6ud.php:28\n\
    Stack trace:\n#0 /tmp/tmpd_hhy6ud.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpd_hhy6ud.php\
    \ on line 28\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function which sorts the given list of integers\n//\
    \ in ascending order according to the sum of their digits.\n// Note: if there\
    \ are several items with similar sum of their digits,\n// order them based on\
    \ their index in original list.\n// For example:\n// >>> order_by_points([1, 11,\
    \ -1, -11, -12]) == [-1, -11, 1, -12, 11]\n// >>> order_by_points([]) == []\n\
    function order_by_points($nums) {\n    $nums_with_points = [];\n    foreach ($nums\
    \ as $index => $num) {\n        $nums_with_points[$index] = [\n            'num'\
    \ => $num,\n            'points' => array_sum(str_split(abs($num)))\n        ];\n\
    \    }\n    usort($nums_with_points, function ($a, $b) {\n        if ($a['points']\
    \ == $b['points']) {\n            return $a['index'] - $b['index'];\n        }\n\
    \        return $a['points'] - $b['points'];\n    });\n    return array_column($nums_with_points,\
    \ 'num');\n}\n\nfunction candidate(...$args) {\n    return order_by_points(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 11, -1, -11, -12)) !==\
    \ array(-1, -11, 1, -12, 11)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56,\
    \ 0, 46)) !== array(0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463,\
    \ 3457)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -11, -32, 43, 54, -98, 2, -3)) !== array(-3, -32, -98, -11, 1, 2, 43, 54)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11)) !== array(1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 6, 6, -76, -21,\
    \ 23, 4)) !== array(-76, -21, 0, 4, 23, 6, 6)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Warning:  Undefined array key \"index\" in /tmp/tmpjgrey6ep.php on\
    \ line 19\nPHP Warning:  Undefined array key \"index\" in /tmp/tmpjgrey6ep.php\
    \ on line 19\nPHP Warning:  Undefined array key \"index\" in /tmp/tmpjgrey6ep.php\
    \ on line 19\nPHP Warning:  Undefined array key \"index\" in /tmp/tmpjgrey6ep.php\
    \ on line 19\nPHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpjgrey6ep.php:31\n\
    Stack trace:\n#0 /tmp/tmpjgrey6ep.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpjgrey6ep.php\
    \ on line 31\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function which sorts the given list of integers\n//\
    \ in ascending order according to the sum of their digits.\n// Note: if there\
    \ are several items with similar sum of their digits,\n// order them based on\
    \ their index in original list.\n// For example:\n// >>> order_by_points([1, 11,\
    \ -1, -11, -12]) == [-1, -11, 1, -12, 11]\n// >>> order_by_points([]) == []\n\
    function order_by_points($nums) {\n    $sums = [];\n    foreach ($nums as $key\
    \ => $num) {\n        $sum = 0;\n        $num = abs($num);\n        while ($num\
    \ > 0) {\n            $sum += $num % 10;\n            $num = (int)($num / 10);\n\
    \        }\n        $sums[$key] = $sum;\n    }\n    asort($sums);\n    $result\
    \ = [];\n    foreach ($sums as $key => $sum) {\n        $result[] = $nums[$key];\n\
    \    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return order_by_points(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 11, -1, -11, -12)) !==\
    \ array(-1, -11, 1, -12, 11)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56,\
    \ 0, 46)) !== array(0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463,\
    \ 3457)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -11, -32, 43, 54, -98, 2, -3)) !== array(-3, -32, -98, -11, 1, 2, 43, 54)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11)) !== array(1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 6, 6, -76, -21,\
    \ 23, 4)) !== array(-76, -21, 0, 4, 23, 6, 6)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpp57dss7b.php:33\n\
    Stack trace:\n#0 /tmp/tmpp57dss7b.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpp57dss7b.php\
    \ on line 33\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function which sorts the given list of integers\n//\
    \ in ascending order according to the sum of their digits.\n// Note: if there\
    \ are several items with similar sum of their digits,\n// order them based on\
    \ their index in original list.\n// For example:\n// >>> order_by_points([1, 11,\
    \ -1, -11, -12]) == [-1, -11, 1, -12, 11]\n// >>> order_by_points([]) == []\n\
    function order_by_points($nums) {\n    $result = [];\n    foreach ($nums as $key\
    \ => $num) {\n        $sum = 0;\n        $num = abs($num);\n        while ($num\
    \ > 0) {\n            $sum += $num % 10;\n            $num = floor($num / 10);\n\
    \        }\n        $result[$key] = $sum;\n    }\n    asort($result);\n    $result\
    \ = array_keys($result);\n    $result = array_map(function ($key) use ($nums)\
    \ {\n        return $nums[$key];\n    }, $result);\n    return $result;\n}\n\n\
    function candidate(...$args) {\n    return order_by_points(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 11, -1, -11, -12)) !== array(-1,\
    \ -11, 1, -12, 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46)) !== array(0, 2,\
    \ 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, -11, -32, 43, 54, -98, 2, -3))\
    \ !== array(-3, -32, -98, -11, 1, 2, 43, 54)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11)) !== array(1,\
    \ 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(0, 6, 6, -76, -21, 23, 4)) !== array(-76, -21, 0, 4,\
    \ 23, 6, 6)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpr_9xovxq.php:33\n\
    Stack trace:\n#0 /tmp/tmpr_9xovxq.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpr_9xovxq.php\
    \ on line 33\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function which sorts the given list of integers\n//\
    \ in ascending order according to the sum of their digits.\n// Note: if there\
    \ are several items with similar sum of their digits,\n// order them based on\
    \ their index in original list.\n// For example:\n// >>> order_by_points([1, 11,\
    \ -1, -11, -12]) == [-1, -11, 1, -12, 11]\n// >>> order_by_points([]) == []\n\
    function order_by_points($nums) {\n    $result = [];\n    foreach ($nums as $key\
    \ => $num) {\n        $result[$key] = array_sum(str_split($num));\n    }\n   \
    \ asort($result);\n    $result = array_keys($result);\n    $result = array_map(function($item)\
    \ use ($nums) {\n        return $nums[$item];\n    }, $result);\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return order_by_points(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(array(1, 11, -1, -11, -12)) !== array(-1,\
    \ -11, 1, -12, 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46)) !== array(0, 2,\
    \ 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, -11, -32, 43, 54, -98, 2, -3))\
    \ !== array(-3, -32, -98, -11, 1, 2, 43, 54)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11)) !== array(1,\
    \ 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(0, 6, 6, -76, -21, 23, 4)) !== array(-76, -21, 0, 4,\
    \ 23, 6, 6)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpo1fp5qh3.php:27\n\
    Stack trace:\n#0 /tmp/tmpo1fp5qh3.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpo1fp5qh3.php\
    \ on line 27\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function which sorts the given list of integers\n//\
    \ in ascending order according to the sum of their digits.\n// Note: if there\
    \ are several items with similar sum of their digits,\n// order them based on\
    \ their index in original list.\n// For example:\n// >>> order_by_points([1, 11,\
    \ -1, -11, -12]) == [-1, -11, 1, -12, 11]\n// >>> order_by_points([]) == []\n\
    function order_by_points($nums) {\n    $sums = [];\n    foreach ($nums as $key\
    \ => $num) {\n        $sum = 0;\n        $num = (string) abs($num);\n        for\
    \ ($i = 0; $i < strlen($num); $i++) {\n            $sum += $num[$i];\n       \
    \ }\n        $sums[$key] = $sum;\n    }\n    asort($sums);\n    $result = [];\n\
    \    foreach ($sums as $key => $sum) {\n        $result[] = $nums[$key];\n   \
    \ }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return order_by_points(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 11, -1, -11, -12)) !==\
    \ array(-1, -11, 1, -12, 11)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56,\
    \ 0, 46)) !== array(0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463,\
    \ 3457)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -11, -32, 43, 54, -98, 2, -3)) !== array(-3, -32, -98, -11, 1, 2, 43, 54)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11)) !== array(1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 6, 6, -76, -21,\
    \ 23, 4)) !== array(-76, -21, 0, 4, 23, 6, 6)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp0vhn1qgk.php:32\n\
    Stack trace:\n#0 /tmp/tmp0vhn1qgk.php(40): test()\n#1 {main}\n  thrown in /tmp/tmp0vhn1qgk.php\
    \ on line 32\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function which sorts the given list of integers\n//\
    \ in ascending order according to the sum of their digits.\n// Note: if there\
    \ are several items with similar sum of their digits,\n// order them based on\
    \ their index in original list.\n// For example:\n// >>> order_by_points([1, 11,\
    \ -1, -11, -12]) == [-1, -11, 1, -12, 11]\n// >>> order_by_points([]) == []\n\
    function order_by_points($nums) {\n    $nums_with_points = [];\n    foreach ($nums\
    \ as $index => $num) {\n        $nums_with_points[$index] = [\n            'num'\
    \ => $num,\n            'points' => array_sum(str_split(abs($num)))\n        ];\n\
    \    }\n    usort($nums_with_points, function ($a, $b) {\n        if ($a['points']\
    \ == $b['points']) {\n            return $a['index'] - $b['index'];\n        }\n\
    \        return $a['points'] - $b['points'];\n    });\n    return array_column($nums_with_points,\
    \ 'num');\n}\n\nfunction candidate(...$args) {\n    return order_by_points(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 11, -1, -11, -12)) !==\
    \ array(-1, -11, 1, -12, 11)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56,\
    \ 0, 46)) !== array(0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463,\
    \ 3457)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -11, -32, 43, 54, -98, 2, -3)) !== array(-3, -32, -98, -11, 1, 2, 43, 54)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11)) !== array(1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 6, 6, -76, -21,\
    \ 23, 4)) !== array(-76, -21, 0, 4, 23, 6, 6)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Warning:  Undefined array key \"index\" in /tmp/tmpmwua28oz.php on\
    \ line 19\nPHP Warning:  Undefined array key \"index\" in /tmp/tmpmwua28oz.php\
    \ on line 19\nPHP Warning:  Undefined array key \"index\" in /tmp/tmpmwua28oz.php\
    \ on line 19\nPHP Warning:  Undefined array key \"index\" in /tmp/tmpmwua28oz.php\
    \ on line 19\nPHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpmwua28oz.php:31\n\
    Stack trace:\n#0 /tmp/tmpmwua28oz.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpmwua28oz.php\
    \ on line 31\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function which sorts the given list of integers\n//\
    \ in ascending order according to the sum of their digits.\n// Note: if there\
    \ are several items with similar sum of their digits,\n// order them based on\
    \ their index in original list.\n// For example:\n// >>> order_by_points([1, 11,\
    \ -1, -11, -12]) == [-1, -11, 1, -12, 11]\n// >>> order_by_points([]) == []\n\
    function order_by_points($nums) {\n    $sum = [];\n    foreach ($nums as $key\
    \ => $num) {\n        $sum[$key] = array_sum(str_split($num));\n    }\n    array_multisort($sum,\
    \ SORT_ASC, $nums);\n    return $nums;\n}\n\nfunction candidate(...$args) {\n\
    \    return order_by_points(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 11, -1, -11, -12)) !== array(-1, -11, 1, -12, 11)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1234, 423, 463, 145, 2, 423, 423,\
    \ 53, 6, 37, 3457, 3, 56, 0, 46)) !== array(0, 2, 3, 6, 53, 423, 423, 423, 1234,\
    \ 145, 37, 46, 56, 463, 3457)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, -11, -32, 43, 54, -98, 2, -3)) !== array(-3,\
    \ -32, -98, -11, 1, 2, 43, 54)) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11)) !== array(1, 10, 2,\
    \ 11, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(0, 6, 6, -76, -21, 23, 4)) !== array(-76, -21, 0, 4, 23, 6,\
    \ 6)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpv_fvds87.php:23\n\
    Stack trace:\n#0 /tmp/tmpv_fvds87.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpv_fvds87.php\
    \ on line 23\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function which sorts the given list of integers\n//\
    \ in ascending order according to the sum of their digits.\n// Note: if there\
    \ are several items with similar sum of their digits,\n// order them based on\
    \ their index in original list.\n// For example:\n// >>> order_by_points([1, 11,\
    \ -1, -11, -12]) == [-1, -11, 1, -12, 11]\n// >>> order_by_points([]) == []\n\
    function order_by_points($nums) {\n    $result = [];\n    $sums = [];\n    foreach\
    \ ($nums as $key => $num) {\n        $sum = 0;\n        $num = abs($num);\n  \
    \      while ($num > 0) {\n            $sum += $num % 10;\n            $num =\
    \ floor($num / 10);\n        }\n        $sums[$key] = $sum;\n    }\n    asort($sums);\n\
    \    foreach ($sums as $key => $sum) {\n        $result[] = $nums[$key];\n   \
    \ }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return order_by_points(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 11, -1, -11, -12)) !==\
    \ array(-1, -11, 1, -12, 11)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56,\
    \ 0, 46)) !== array(0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463,\
    \ 3457)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -11, -32, 43, 54, -98, 2, -3)) !== array(-3, -32, -98, -11, 1, 2, 43, 54)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11)) !== array(1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 6, 6, -76, -21,\
    \ 23, 4)) !== array(-76, -21, 0, 4, 23, 6, 6)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp7g3jamtc.php:33\n\
    Stack trace:\n#0 /tmp/tmp7g3jamtc.php(41): test()\n#1 {main}\n  thrown in /tmp/tmp7g3jamtc.php\
    \ on line 33\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function which sorts the given list of integers\n//\
    \ in ascending order according to the sum of their digits.\n// Note: if there\
    \ are several items with similar sum of their digits,\n// order them based on\
    \ their index in original list.\n// For example:\n// >>> order_by_points([1, 11,\
    \ -1, -11, -12]) == [-1, -11, 1, -12, 11]\n// >>> order_by_points([]) == []\n\
    function order_by_points($nums) {\n    $result = [];\n    $sum = [];\n    foreach\
    \ ($nums as $key => $value) {\n        $sum[$key] = array_sum(str_split($value));\n\
    \    }\n    asort($sum);\n    foreach ($sum as $key => $value) {\n        $result[]\
    \ = $nums[$key];\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return order_by_points(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(array(1, 11, -1, -11, -12)) !== array(-1, -11, 1, -12, 11)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1234, 423,\
    \ 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46)) !== array(0, 2, 3, 6,\
    \ 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, -11, -32, 43, 54, -98, 2, -3))\
    \ !== array(-3, -32, -98, -11, 1, 2, 43, 54)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11)) !== array(1,\
    \ 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(0, 6, 6, -76, -21, 23, 4)) !== array(-76, -21, 0, 4,\
    \ 23, 6, 6)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpxehd4rfb.php:27\n\
    Stack trace:\n#0 /tmp/tmpxehd4rfb.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpxehd4rfb.php\
    \ on line 27\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function which sorts the given list of integers\n//\
    \ in ascending order according to the sum of their digits.\n// Note: if there\
    \ are several items with similar sum of their digits,\n// order them based on\
    \ their index in original list.\n// For example:\n// >>> order_by_points([1, 11,\
    \ -1, -11, -12]) == [-1, -11, 1, -12, 11]\n// >>> order_by_points([]) == []\n\
    function order_by_points($nums) {\n    $sum_of_digits = array_map(function($num)\
    \ {\n        $sum = 0;\n        while ($num != 0) {\n            $sum += $num\
    \ % 10;\n            $num = (int)($num / 10);\n        }\n        return $sum;\n\
    \    }, $nums);\n    array_multisort($sum_of_digits, SORT_ASC, $nums);\n    return\
    \ $nums;\n}\n\nfunction candidate(...$args) {\n    return order_by_points(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 11, -1, -11, -12)) !==\
    \ array(-1, -11, 1, -12, 11)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56,\
    \ 0, 46)) !== array(0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463,\
    \ 3457)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -11, -32, 43, 54, -98, 2, -3)) !== array(-3, -32, -98, -11, 1, 2, 43, 54)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11)) !== array(1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 6, 6, -76, -21,\
    \ 23, 4)) !== array(-76, -21, 0, 4, 23, 6, 6)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpxd9vyh0v.php:27\n\
    Stack trace:\n#0 /tmp/tmpxd9vyh0v.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpxd9vyh0v.php\
    \ on line 27\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function which sorts the given list of integers\n//\
    \ in ascending order according to the sum of their digits.\n// Note: if there\
    \ are several items with similar sum of their digits,\n// order them based on\
    \ their index in original list.\n// For example:\n// >>> order_by_points([1, 11,\
    \ -1, -11, -12]) == [-1, -11, 1, -12, 11]\n// >>> order_by_points([]) == []\n\
    function order_by_points($nums) {\n    $result = [];\n    foreach ($nums as $key\
    \ => $num) {\n        $result[$key] = array_sum(str_split($num));\n    }\n   \
    \ asort($result);\n    $result = array_keys($result);\n    $new_result = [];\n\
    \    foreach ($result as $key => $value) {\n        $new_result[$key] = $nums[$value];\n\
    \    }\n    return $new_result;\n}\n\nfunction candidate(...$args) {\n    return\
    \ order_by_points(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 11, -1, -11, -12)) !== array(-1, -11, 1, -12, 11)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1234, 423, 463, 145, 2, 423, 423,\
    \ 53, 6, 37, 3457, 3, 56, 0, 46)) !== array(0, 2, 3, 6, 53, 423, 423, 423, 1234,\
    \ 145, 37, 46, 56, 463, 3457)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, -11, -32, 43, 54, -98, 2, -3)) !== array(-3,\
    \ -32, -98, -11, 1, 2, 43, 54)) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11)) !== array(1, 10, 2,\
    \ 11, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(0, 6, 6, -76, -21, 23, 4)) !== array(-76, -21, 0, 4, 23, 6,\
    \ 6)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpj8ry_j01.php:28\n\
    Stack trace:\n#0 /tmp/tmpj8ry_j01.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpj8ry_j01.php\
    \ on line 28\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function which sorts the given list of integers\n//\
    \ in ascending order according to the sum of their digits.\n// Note: if there\
    \ are several items with similar sum of their digits,\n// order them based on\
    \ their index in original list.\n// For example:\n// >>> order_by_points([1, 11,\
    \ -1, -11, -12]) == [-1, -11, 1, -12, 11]\n// >>> order_by_points([]) == []\n\
    function order_by_points($nums) {\n    $result = [];\n    foreach ($nums as $key\
    \ => $num) {\n        $sum = 0;\n        $num = abs($num);\n        while ($num\
    \ > 0) {\n            $sum += $num % 10;\n            $num = floor($num / 10);\n\
    \        }\n        $result[$key] = $sum;\n    }\n    asort($result);\n    $result\
    \ = array_keys($result);\n    $result = array_map(function ($key) use ($nums)\
    \ {\n        return $nums[$key];\n    }, $result);\n    return $result;\n}\n\n\
    function candidate(...$args) {\n    return order_by_points(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 11, -1, -11, -12)) !== array(-1,\
    \ -11, 1, -12, 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46)) !== array(0, 2,\
    \ 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, -11, -32, 43, 54, -98, 2, -3))\
    \ !== array(-3, -32, -98, -11, 1, 2, 43, 54)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11)) !== array(1,\
    \ 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(0, 6, 6, -76, -21, 23, 4)) !== array(-76, -21, 0, 4,\
    \ 23, 6, 6)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpydjozhve.php:33\n\
    Stack trace:\n#0 /tmp/tmpydjozhve.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpydjozhve.php\
    \ on line 33\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function which sorts the given list of integers\n//\
    \ in ascending order according to the sum of their digits.\n// Note: if there\
    \ are several items with similar sum of their digits,\n// order them based on\
    \ their index in original list.\n// For example:\n// >>> order_by_points([1, 11,\
    \ -1, -11, -12]) == [-1, -11, 1, -12, 11]\n// >>> order_by_points([]) == []\n\
    function order_by_points($nums) {\n    $sum_of_digits = array_map(function($num)\
    \ {\n        $digits = str_split($num);\n        return array_sum($digits);\n\
    \    }, $nums);\n    array_multisort($sum_of_digits, $nums);\n    return $nums;\n\
    }\n\nfunction candidate(...$args) {\n    return order_by_points(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(array(1, 11, -1, -11, -12)) !== array(-1,\
    \ -11, 1, -12, 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46)) !== array(0, 2,\
    \ 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, -11, -32, 43, 54, -98, 2, -3))\
    \ !== array(-3, -32, -98, -11, 1, 2, 43, 54)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11)) !== array(1,\
    \ 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(0, 6, 6, -76, -21, 23, 4)) !== array(-76, -21, 0, 4,\
    \ 23, 6, 6)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpxrfsxig1.php:23\n\
    Stack trace:\n#0 /tmp/tmpxrfsxig1.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpxrfsxig1.php\
    \ on line 23\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function which sorts the given list of integers\n//\
    \ in ascending order according to the sum of their digits.\n// Note: if there\
    \ are several items with similar sum of their digits,\n// order them based on\
    \ their index in original list.\n// For example:\n// >>> order_by_points([1, 11,\
    \ -1, -11, -12]) == [-1, -11, 1, -12, 11]\n// >>> order_by_points([]) == []\n\
    function order_by_points($nums) {\n    $sums = array_map(function($num) {\n  \
    \      return array_sum(str_split($num));\n    }, $nums);\n    array_multisort($sums,\
    \ $nums);\n    return $nums;\n}\n\nfunction candidate(...$args) {\n    return\
    \ order_by_points(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 11, -1, -11, -12)) !== array(-1, -11, 1, -12, 11)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1234, 423, 463, 145, 2, 423, 423,\
    \ 53, 6, 37, 3457, 3, 56, 0, 46)) !== array(0, 2, 3, 6, 53, 423, 423, 423, 1234,\
    \ 145, 37, 46, 56, 463, 3457)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, -11, -32, 43, 54, -98, 2, -3)) !== array(-3,\
    \ -32, -98, -11, 1, 2, 43, 54)) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11)) !== array(1, 10, 2,\
    \ 11, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(0, 6, 6, -76, -21, 23, 4)) !== array(-76, -21, 0, 4, 23, 6,\
    \ 6)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpyqm5nqbi.php:22\n\
    Stack trace:\n#0 /tmp/tmpyqm5nqbi.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpyqm5nqbi.php\
    \ on line 22\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function which sorts the given list of integers\n//\
    \ in ascending order according to the sum of their digits.\n// Note: if there\
    \ are several items with similar sum of their digits,\n// order them based on\
    \ their index in original list.\n// For example:\n// >>> order_by_points([1, 11,\
    \ -1, -11, -12]) == [-1, -11, 1, -12, 11]\n// >>> order_by_points([]) == []\n\
    function order_by_points($nums) {\n    $nums_sorted = [];\n    foreach ($nums\
    \ as $num) {\n        $sum = 0;\n        $num_str = strval($num);\n        for\
    \ ($i = 0; $i < strlen($num_str); $i++) {\n            $sum += intval($num_str[$i]);\n\
    \        }\n        $nums_sorted[$sum][] = $num;\n    }\n    ksort($nums_sorted);\n\
    \    $nums_sorted_final = [];\n    foreach ($nums_sorted as $sum => $nums) {\n\
    \        foreach ($nums as $num) {\n            $nums_sorted_final[] = $num;\n\
    \        }\n    }\n    return $nums_sorted_final;\n}\n\nfunction candidate(...$args)\
    \ {\n    return order_by_points(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(array(1, 11, -1, -11, -12)) !== array(-1, -11, 1, -12, 11)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1234, 423,\
    \ 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46)) !== array(0, 2, 3, 6,\
    \ 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, -11, -32, 43, 54, -98, 2, -3))\
    \ !== array(-3, -32, -98, -11, 1, 2, 43, 54)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11)) !== array(1,\
    \ 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(0, 6, 6, -76, -21, 23, 4)) !== array(-76, -21, 0, 4,\
    \ 23, 6, 6)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpm9ur8e57.php:34\n\
    Stack trace:\n#0 /tmp/tmpm9ur8e57.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpm9ur8e57.php\
    \ on line 34\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function which sorts the given list of integers\n//\
    \ in ascending order according to the sum of their digits.\n// Note: if there\
    \ are several items with similar sum of their digits,\n// order them based on\
    \ their index in original list.\n// For example:\n// >>> order_by_points([1, 11,\
    \ -1, -11, -12]) == [-1, -11, 1, -12, 11]\n// >>> order_by_points([]) == []\n\
    function order_by_points($nums) {\n    $sum = [];\n    foreach ($nums as $key\
    \ => $value) {\n        $sum[$key] = array_sum(str_split($value));\n    }\n  \
    \  array_multisort($sum, SORT_ASC, $nums);\n    return $nums;\n}\n\nfunction candidate(...$args)\
    \ {\n    return order_by_points(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(array(1, 11, -1, -11, -12)) !== array(-1, -11, 1, -12, 11)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1234, 423,\
    \ 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46)) !== array(0, 2, 3, 6,\
    \ 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, -11, -32, 43, 54, -98, 2, -3))\
    \ !== array(-3, -32, -98, -11, 1, 2, 43, 54)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11)) !== array(1,\
    \ 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(0, 6, 6, -76, -21, 23, 4)) !== array(-76, -21, 0, 4,\
    \ 23, 6, 6)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpqhbctgyj.php:23\n\
    Stack trace:\n#0 /tmp/tmpqhbctgyj.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpqhbctgyj.php\
    \ on line 23\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function which sorts the given list of integers\n//\
    \ in ascending order according to the sum of their digits.\n// Note: if there\
    \ are several items with similar sum of their digits,\n// order them based on\
    \ their index in original list.\n// For example:\n// >>> order_by_points([1, 11,\
    \ -1, -11, -12]) == [-1, -11, 1, -12, 11]\n// >>> order_by_points([]) == []\n\
    function order_by_points($nums) {\n    $sums = array_map(function($num) {\n  \
    \      $sum = 0;\n        foreach (str_split($num) as $digit) {\n            $sum\
    \ += $digit;\n        }\n        return $sum;\n    }, $nums);\n    array_multisort($sums,\
    \ $nums);\n    return $nums;\n}\n\nfunction candidate(...$args) {\n    return\
    \ order_by_points(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 11, -1, -11, -12)) !== array(-1, -11, 1, -12, 11)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1234, 423, 463, 145, 2, 423, 423,\
    \ 53, 6, 37, 3457, 3, 56, 0, 46)) !== array(0, 2, 3, 6, 53, 423, 423, 423, 1234,\
    \ 145, 37, 46, 56, 463, 3457)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, -11, -32, 43, 54, -98, 2, -3)) !== array(-3,\
    \ -32, -98, -11, 1, 2, 43, 54)) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11)) !== array(1, 10, 2,\
    \ 11, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(0, 6, 6, -76, -21, 23, 4)) !== array(-76, -21, 0, 4, 23, 6,\
    \ 6)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught TypeError: Unsupported operand types: int +\
    \ string in /tmp/tmpcwc0dta7.php:13\nStack trace:\n#0 [internal function]: {closure}()\n\
    #1 /tmp/tmpcwc0dta7.php(16): array_map()\n#2 /tmp/tmpcwc0dta7.php(22): order_by_points()\n\
    #3 /tmp/tmpcwc0dta7.php(26): candidate()\n#4 /tmp/tmpcwc0dta7.php(34): test()\n\
    #5 {main}\n  thrown in /tmp/tmpcwc0dta7.php on line 13\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function which sorts the given list of integers\n//\
    \ in ascending order according to the sum of their digits.\n// Note: if there\
    \ are several items with similar sum of their digits,\n// order them based on\
    \ their index in original list.\n// For example:\n// >>> order_by_points([1, 11,\
    \ -1, -11, -12]) == [-1, -11, 1, -12, 11]\n// >>> order_by_points([]) == []\n\
    function order_by_points($nums) {\n    $sum = [];\n    foreach ($nums as $key\
    \ => $num) {\n        $sum[$key] = array_sum(str_split($num));\n    }\n    array_multisort($sum,\
    \ SORT_ASC, $nums);\n    return $nums;\n}\n\nfunction candidate(...$args) {\n\
    \    return order_by_points(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 11, -1, -11, -12)) !== array(-1, -11, 1, -12, 11)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1234, 423, 463, 145, 2, 423, 423,\
    \ 53, 6, 37, 3457, 3, 56, 0, 46)) !== array(0, 2, 3, 6, 53, 423, 423, 423, 1234,\
    \ 145, 37, 46, 56, 463, 3457)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, -11, -32, 43, 54, -98, 2, -3)) !== array(-3,\
    \ -32, -98, -11, 1, 2, 43, 54)) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11)) !== array(1, 10, 2,\
    \ 11, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(0, 6, 6, -76, -21, 23, 4)) !== array(-76, -21, 0, 4, 23, 6,\
    \ 6)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp_d4vrgov.php:23\n\
    Stack trace:\n#0 /tmp/tmp_d4vrgov.php(31): test()\n#1 {main}\n  thrown in /tmp/tmp_d4vrgov.php\
    \ on line 23\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function which sorts the given list of integers\n//\
    \ in ascending order according to the sum of their digits.\n// Note: if there\
    \ are several items with similar sum of their digits,\n// order them based on\
    \ their index in original list.\n// For example:\n// >>> order_by_points([1, 11,\
    \ -1, -11, -12]) == [-1, -11, 1, -12, 11]\n// >>> order_by_points([]) == []\n\
    function order_by_points($nums) {\n    $sums = [];\n    foreach ($nums as $key\
    \ => $num) {\n        $sum = 0;\n        $num = abs($num);\n        while ($num\
    \ > 0) {\n            $sum += $num % 10;\n            $num = floor($num / 10);\n\
    \        }\n        $sums[$key] = $sum;\n    }\n    array_multisort($sums, SORT_ASC,\
    \ $nums);\n    return $nums;\n}\n\nfunction candidate(...$args) {\n    return\
    \ order_by_points(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 11, -1, -11, -12)) !== array(-1, -11, 1, -12, 11)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1234, 423, 463, 145, 2, 423, 423,\
    \ 53, 6, 37, 3457, 3, 56, 0, 46)) !== array(0, 2, 3, 6, 53, 423, 423, 423, 1234,\
    \ 145, 37, 46, 56, 463, 3457)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, -11, -32, 43, 54, -98, 2, -3)) !== array(-3,\
    \ -32, -98, -11, 1, 2, 43, 54)) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11)) !== array(1, 10, 2,\
    \ 11, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(0, 6, 6, -76, -21, 23, 4)) !== array(-76, -21, 0, 4, 23, 6,\
    \ 6)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpeuqujmz8.php:29\n\
    Stack trace:\n#0 /tmp/tmpeuqujmz8.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpeuqujmz8.php\
    \ on line 29\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function which sorts the given list of integers\n//\
    \ in ascending order according to the sum of their digits.\n// Note: if there\
    \ are several items with similar sum of their digits,\n// order them based on\
    \ their index in original list.\n// For example:\n// >>> order_by_points([1, 11,\
    \ -1, -11, -12]) == [-1, -11, 1, -12, 11]\n// >>> order_by_points([]) == []\n\
    function order_by_points($nums) {\n    $result = [];\n    $sums = [];\n    foreach\
    \ ($nums as $key => $num) {\n        $sum = 0;\n        $num = abs($num);\n  \
    \      while ($num > 0) {\n            $sum += $num % 10;\n            $num =\
    \ floor($num / 10);\n        }\n        $sums[$key] = $sum;\n    }\n    asort($sums);\n\
    \    foreach ($sums as $key => $sum) {\n        $result[] = $nums[$key];\n   \
    \ }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return order_by_points(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 11, -1, -11, -12)) !==\
    \ array(-1, -11, 1, -12, 11)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56,\
    \ 0, 46)) !== array(0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463,\
    \ 3457)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -11, -32, 43, 54, -98, 2, -3)) !== array(-3, -32, -98, -11, 1, 2, 43, 54)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11)) !== array(1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 6, 6, -76, -21,\
    \ 23, 4)) !== array(-76, -21, 0, 4, 23, 6, 6)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmppzup7s4z.php:33\n\
    Stack trace:\n#0 /tmp/tmppzup7s4z.php(41): test()\n#1 {main}\n  thrown in /tmp/tmppzup7s4z.php\
    \ on line 33\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function which sorts the given list of integers\n//\
    \ in ascending order according to the sum of their digits.\n// Note: if there\
    \ are several items with similar sum of their digits,\n// order them based on\
    \ their index in original list.\n// For example:\n// >>> order_by_points([1, 11,\
    \ -1, -11, -12]) == [-1, -11, 1, -12, 11]\n// >>> order_by_points([]) == []\n\
    function order_by_points($nums) {\n    $sum_nums = [];\n    foreach ($nums as\
    \ $key => $num) {\n        $sum_nums[$key] = array_sum(str_split($num));\n   \
    \ }\n    array_multisort($sum_nums, SORT_ASC, $nums);\n    return $nums;\n}\n\n\
    function candidate(...$args) {\n    return order_by_points(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 11, -1, -11, -12)) !== array(-1,\
    \ -11, 1, -12, 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46)) !== array(0, 2,\
    \ 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, -11, -32, 43, 54, -98, 2, -3))\
    \ !== array(-3, -32, -98, -11, 1, 2, 43, 54)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11)) !== array(1,\
    \ 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(0, 6, 6, -76, -21, 23, 4)) !== array(-76, -21, 0, 4,\
    \ 23, 6, 6)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpmgcinowe.php:23\n\
    Stack trace:\n#0 /tmp/tmpmgcinowe.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpmgcinowe.php\
    \ on line 23\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function which sorts the given list of integers\n//\
    \ in ascending order according to the sum of their digits.\n// Note: if there\
    \ are several items with similar sum of their digits,\n// order them based on\
    \ their index in original list.\n// For example:\n// >>> order_by_points([1, 11,\
    \ -1, -11, -12]) == [-1, -11, 1, -12, 11]\n// >>> order_by_points([]) == []\n\
    function order_by_points($nums) {\n    $sum_nums = array_map(function($num) {\n\
    \        $sum = 0;\n        $num = abs($num);\n        while ($num > 0) {\n  \
    \          $sum += $num % 10;\n            $num = floor($num / 10);\n        }\n\
    \        return $sum;\n    }, $nums);\n    array_multisort($sum_nums, $nums);\n\
    \    return $nums;\n}\n\nfunction candidate(...$args) {\n    return order_by_points(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 11, -1, -11, -12)) !==\
    \ array(-1, -11, 1, -12, 11)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56,\
    \ 0, 46)) !== array(0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463,\
    \ 3457)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -11, -32, 43, 54, -98, 2, -3)) !== array(-3, -32, -98, -11, 1, 2, 43, 54)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11)) !== array(1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 6, 6, -76, -21,\
    \ 23, 4)) !== array(-76, -21, 0, 4, 23, 6, 6)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp3c916hjv.php:28\n\
    Stack trace:\n#0 /tmp/tmp3c916hjv.php(36): test()\n#1 {main}\n  thrown in /tmp/tmp3c916hjv.php\
    \ on line 28\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function which sorts the given list of integers\n//\
    \ in ascending order according to the sum of their digits.\n// Note: if there\
    \ are several items with similar sum of their digits,\n// order them based on\
    \ their index in original list.\n// For example:\n// >>> order_by_points([1, 11,\
    \ -1, -11, -12]) == [-1, -11, 1, -12, 11]\n// >>> order_by_points([]) == []\n\
    function order_by_points($nums) {\n    $result = [];\n    $sum = [];\n    foreach\
    \ ($nums as $key => $value) {\n        $sum[$key] = array_sum(str_split($value));\n\
    \    }\n    asort($sum);\n    foreach ($sum as $key => $value) {\n        $result[]\
    \ = $nums[$key];\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return order_by_points(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(array(1, 11, -1, -11, -12)) !== array(-1, -11, 1, -12, 11)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1234, 423,\
    \ 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46)) !== array(0, 2, 3, 6,\
    \ 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, -11, -32, 43, 54, -98, 2, -3))\
    \ !== array(-3, -32, -98, -11, 1, 2, 43, 54)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11)) !== array(1,\
    \ 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(0, 6, 6, -76, -21, 23, 4)) !== array(-76, -21, 0, 4,\
    \ 23, 6, 6)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpuia64hek.php:27\n\
    Stack trace:\n#0 /tmp/tmpuia64hek.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpuia64hek.php\
    \ on line 27\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function which sorts the given list of integers\n//\
    \ in ascending order according to the sum of their digits.\n// Note: if there\
    \ are several items with similar sum of their digits,\n// order them based on\
    \ their index in original list.\n// For example:\n// >>> order_by_points([1, 11,\
    \ -1, -11, -12]) == [-1, -11, 1, -12, 11]\n// >>> order_by_points([]) == []\n\
    function order_by_points($nums) {\n    $result = [];\n    $sum = [];\n    foreach\
    \ ($nums as $key => $value) {\n        $sum[$key] = array_sum(str_split($value));\n\
    \    }\n    asort($sum);\n    foreach ($sum as $key => $value) {\n        $result[]\
    \ = $nums[$key];\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return order_by_points(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(array(1, 11, -1, -11, -12)) !== array(-1, -11, 1, -12, 11)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1234, 423,\
    \ 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46)) !== array(0, 2, 3, 6,\
    \ 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, -11, -32, 43, 54, -98, 2, -3))\
    \ !== array(-3, -32, -98, -11, 1, 2, 43, 54)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11)) !== array(1,\
    \ 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(0, 6, 6, -76, -21, 23, 4)) !== array(-76, -21, 0, 4,\
    \ 23, 6, 6)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpgrdd8uc7.php:27\n\
    Stack trace:\n#0 /tmp/tmpgrdd8uc7.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpgrdd8uc7.php\
    \ on line 27\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function which sorts the given list of integers\n//\
    \ in ascending order according to the sum of their digits.\n// Note: if there\
    \ are several items with similar sum of their digits,\n// order them based on\
    \ their index in original list.\n// For example:\n// >>> order_by_points([1, 11,\
    \ -1, -11, -12]) == [-1, -11, 1, -12, 11]\n// >>> order_by_points([]) == []\n\
    function order_by_points($nums) {\n    $sums = [];\n    foreach ($nums as $key\
    \ => $num) {\n        $sums[$key] = array_sum(str_split(abs($num)));\n    }\n\
    \    array_multisort($sums, SORT_ASC, $nums);\n    return $nums;\n}\n\nfunction\
    \ candidate(...$args) {\n    return order_by_points(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 11, -1, -11, -12)) !== array(-1,\
    \ -11, 1, -12, 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46)) !== array(0, 2,\
    \ 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, -11, -32, 43, 54, -98, 2, -3))\
    \ !== array(-3, -32, -98, -11, 1, 2, 43, 54)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11)) !== array(1,\
    \ 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(0, 6, 6, -76, -21, 23, 4)) !== array(-76, -21, 0, 4,\
    \ 23, 6, 6)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmplh6pp8xz.php:23\n\
    Stack trace:\n#0 /tmp/tmplh6pp8xz.php(31): test()\n#1 {main}\n  thrown in /tmp/tmplh6pp8xz.php\
    \ on line 23\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function which sorts the given list of integers\n//\
    \ in ascending order according to the sum of their digits.\n// Note: if there\
    \ are several items with similar sum of their digits,\n// order them based on\
    \ their index in original list.\n// For example:\n// >>> order_by_points([1, 11,\
    \ -1, -11, -12]) == [-1, -11, 1, -12, 11]\n// >>> order_by_points([]) == []\n\
    function order_by_points($nums) {\n    $sum = [];\n    foreach ($nums as $key\
    \ => $value) {\n        $sum[$key] = array_sum(str_split($value));\n    }\n  \
    \  array_multisort($sum, SORT_ASC, $nums);\n    return $nums;\n}\n\nfunction candidate(...$args)\
    \ {\n    return order_by_points(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(array(1, 11, -1, -11, -12)) !== array(-1, -11, 1, -12, 11)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1234, 423,\
    \ 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46)) !== array(0, 2, 3, 6,\
    \ 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, -11, -32, 43, 54, -98, 2, -3))\
    \ !== array(-3, -32, -98, -11, 1, 2, 43, 54)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11)) !== array(1,\
    \ 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(0, 6, 6, -76, -21, 23, 4)) !== array(-76, -21, 0, 4,\
    \ 23, 6, 6)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpyjdzt_7u.php:23\n\
    Stack trace:\n#0 /tmp/tmpyjdzt_7u.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpyjdzt_7u.php\
    \ on line 23\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function which sorts the given list of integers\n//\
    \ in ascending order according to the sum of their digits.\n// Note: if there\
    \ are several items with similar sum of their digits,\n// order them based on\
    \ their index in original list.\n// For example:\n// >>> order_by_points([1, 11,\
    \ -1, -11, -12]) == [-1, -11, 1, -12, 11]\n// >>> order_by_points([]) == []\n\
    function order_by_points($nums) {\n    $result = [];\n    foreach ($nums as $key\
    \ => $num) {\n        $result[$key] = array_sum(str_split($num));\n    }\n   \
    \ asort($result);\n    $result = array_keys($result);\n    foreach ($result as\
    \ $key => $value) {\n        $result[$key] = $nums[$value];\n    }\n    return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return order_by_points(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 11, -1, -11, -12)) !==\
    \ array(-1, -11, 1, -12, 11)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56,\
    \ 0, 46)) !== array(0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463,\
    \ 3457)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array())\
    \ !== array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ -11, -32, 43, 54, -98, 2, -3)) !== array(-3, -32, -98, -11, 1, 2, 43, 54)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10, 11)) !== array(1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(0, 6, 6, -76, -21,\
    \ 23, 4)) !== array(-76, -21, 0, 4, 23, 6, 6)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpp7826z6d.php:27\n\
    Stack trace:\n#0 /tmp/tmpp7826z6d.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpp7826z6d.php\
    \ on line 27\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function which sorts the given list of integers\n//\
    \ in ascending order according to the sum of their digits.\n// Note: if there\
    \ are several items with similar sum of their digits,\n// order them based on\
    \ their index in original list.\n// For example:\n// >>> order_by_points([1, 11,\
    \ -1, -11, -12]) == [-1, -11, 1, -12, 11]\n// >>> order_by_points([]) == []\n\
    function order_by_points($nums) {\n    $sum_nums = [];\n    foreach ($nums as\
    \ $key => $num) {\n        $sum_nums[$key] = array_sum(str_split($num));\n   \
    \ }\n    asort($sum_nums);\n    $result = [];\n    foreach ($sum_nums as $key\
    \ => $sum_num) {\n        $result[] = $nums[$key];\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return order_by_points(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(array(1, 11, -1, -11, -12)) !== array(-1,\
    \ -11, 1, -12, 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46)) !== array(0, 2,\
    \ 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, -11, -32, 43, 54, -98, 2, -3))\
    \ !== array(-3, -32, -98, -11, 1, 2, 43, 54)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11)) !== array(1,\
    \ 10, 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(0, 6, 6, -76, -21, 23, 4)) !== array(-76, -21, 0, 4,\
    \ 23, 6, 6)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp810252ga.php:27\n\
    Stack trace:\n#0 /tmp/tmp810252ga.php(35): test()\n#1 {main}\n  thrown in /tmp/tmp810252ga.php\
    \ on line 27\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function which sorts the given list of integers\n//\
    \ in ascending order according to the sum of their digits.\n// Note: if there\
    \ are several items with similar sum of their digits,\n// order them based on\
    \ their index in original list.\n// For example:\n// >>> order_by_points([1, 11,\
    \ -1, -11, -12]) == [-1, -11, 1, -12, 11]\n// >>> order_by_points([]) == []\n\
    function order_by_points($nums) {\n  $sums = [];\n  foreach ($nums as $key =>\
    \ $num) {\n    $sums[$key] = array_sum(str_split($num));\n  }\n  array_multisort($sums,\
    \ SORT_ASC, $nums);\n  return $nums;\n}\n\nfunction candidate(...$args) {\n  \
    \  return order_by_points(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 11, -1, -11, -12)) !== array(-1, -11, 1, -12, 11)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1234, 423, 463, 145, 2, 423, 423,\
    \ 53, 6, 37, 3457, 3, 56, 0, 46)) !== array(0, 2, 3, 6, 53, 423, 423, 423, 1234,\
    \ 145, 37, 46, 56, 463, 3457)) { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, -11, -32, 43, 54, -98, 2, -3)) !== array(-3,\
    \ -32, -98, -11, 1, 2, 43, 54)) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11)) !== array(1, 10, 2,\
    \ 11, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(0, 6, 6, -76, -21, 23, 4)) !== array(-76, -21, 0, 4, 23, 6,\
    \ 6)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp1wee05q5.php:23\n\
    Stack trace:\n#0 /tmp/tmp1wee05q5.php(31): test()\n#1 {main}\n  thrown in /tmp/tmp1wee05q5.php\
    \ on line 23\n"
  exit_code: 255
  status: Exception

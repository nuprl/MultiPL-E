name: HumanEval_158_find_max
language: php
results:
- program: "<?php\n// Write a function that accepts a list of strings.\n// The list\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// find_max([\"\
    name\", \"of\", \"string\"]) == \"string\"\n// find_max([\"name\", \"enam\", \"\
    game\"]) == \"enam\"\n// find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\
    \nfunction find_max($words) {\n    $max = 0;\n    $max_word = \"\";\n    foreach\
    \ ($words as $word) {\n        $unique_chars = array_unique(str_split($word));\n\
    \        if (count($unique_chars) > $max) {\n            $max = count($unique_chars);\n\
    \            $max_word = $word;\n        }\n    }\n    return $max_word;\n}\n\n\
    function candidate(...$args) {\n    return find_max(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(\"name\", \"of\", \"string\")) !== \"\
    string\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    name\", \"enam\", \"game\")) !== \"enam\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"aaaaaaa\", \"bb\", \"cc\")) !== \"aaaaaaa\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"abc\", \"\
    cba\")) !== \"abc\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"this\", \"game\", \"of\", \"footbott\")) !== \"footbott\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\", \"are\", \"\
    gonna\", \"rock\")) !== \"gonna\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"a\", \"mad\", \"nation\")) !== \"\
    nation\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\", \"is\", \"a\", \"prrk\")) !== \"this\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"b\")) !== \"b\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"play\", \"play\", \"play\")) !== \"\
    play\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp5drm9fgs.php:28\n\
    Stack trace:\n#0 /tmp/tmp5drm9fgs.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp5drm9fgs.php\
    \ on line 28\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that accepts a list of strings.\n// The list\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// find_max([\"\
    name\", \"of\", \"string\"]) == \"string\"\n// find_max([\"name\", \"enam\", \"\
    game\"]) == \"enam\"\n// find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\
    \nfunction find_max($words) {\n  $max_word = '';\n  $max_len = 0;\n  foreach ($words\
    \ as $word) {\n    $unique_chars = array_unique(str_split($word));\n    $unique_len\
    \ = count($unique_chars);\n    if ($unique_len > $max_len) {\n      $max_len =\
    \ $unique_len;\n      $max_word = $word;\n    }\n  }\n  return $max_word;\n}\n\
    \necho find_max([\"name\", \"of\", \"string\"]) . \"\\n\";\necho find_max([\"\
    name\", \"enam\", \"game\"]) . \"\\n\";\necho find_max([\"aaaaaaa\", \"bb\" ,\"\
    cc\"]) . \"\\n\";\nfunction candidate(...$args) {\n    return find_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(\"name\", \"of\", \"string\"\
    )) !== \"string\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    name\", \"enam\", \"game\")) !== \"enam\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"aaaaaaa\", \"bb\", \"cc\")) !== \"aaaaaaa\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"abc\", \"\
    cba\")) !== \"abc\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"this\", \"game\", \"of\", \"footbott\")) !== \"footbott\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\", \"are\", \"\
    gonna\", \"rock\")) !== \"gonna\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"a\", \"mad\", \"nation\")) !== \"\
    nation\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\", \"is\", \"a\", \"prrk\")) !== \"this\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"b\")) !== \"b\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"play\", \"play\", \"play\")) !== \"\
    play\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "string\nname\naaaaaaa\n"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpvsrghvr5.php:32\n\
    Stack trace:\n#0 /tmp/tmpvsrghvr5.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpvsrghvr5.php\
    \ on line 32\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that accepts a list of strings.\n// The list\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// find_max([\"\
    name\", \"of\", \"string\"]) == \"string\"\n// find_max([\"name\", \"enam\", \"\
    game\"]) == \"enam\"\n// find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\
    \nfunction find_max($words) {\n    $max = 0;\n    $max_word = \"\";\n    foreach\
    \ ($words as $word) {\n        $unique_chars = array_unique(str_split($word));\n\
    \        if (count($unique_chars) > $max) {\n            $max = count($unique_chars);\n\
    \            $max_word = $word;\n        }\n    }\n    return $max_word;\n}\n\n\
    function candidate(...$args) {\n    return find_max(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(\"name\", \"of\", \"string\")) !== \"\
    string\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    name\", \"enam\", \"game\")) !== \"enam\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"aaaaaaa\", \"bb\", \"cc\")) !== \"aaaaaaa\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"abc\", \"\
    cba\")) !== \"abc\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"this\", \"game\", \"of\", \"footbott\")) !== \"footbott\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\", \"are\", \"\
    gonna\", \"rock\")) !== \"gonna\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"a\", \"mad\", \"nation\")) !== \"\
    nation\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\", \"is\", \"a\", \"prrk\")) !== \"this\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"b\")) !== \"b\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"play\", \"play\", \"play\")) !== \"\
    play\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpu5cttj3j.php:28\n\
    Stack trace:\n#0 /tmp/tmpu5cttj3j.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpu5cttj3j.php\
    \ on line 28\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that accepts a list of strings.\n// The list\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// find_max([\"\
    name\", \"of\", \"string\"]) == \"string\"\n// find_max([\"name\", \"enam\", \"\
    game\"]) == \"enam\"\n// find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\
    \nfunction find_max($words) {\n  $max_word = \"\";\n  $max_count = 0;\n  foreach\
    \ ($words as $word) {\n    $count = count_unique_chars($word);\n    if ($count\
    \ > $max_count) {\n      $max_count = $count;\n      $max_word = $word;\n    }\n\
    \  }\n  return $max_word;\n}\n\nfunction candidate(...$args) {\n    return find_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(\"name\", \"of\", \"string\"\
    )) !== \"string\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    name\", \"enam\", \"game\")) !== \"enam\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"aaaaaaa\", \"bb\", \"cc\")) !== \"aaaaaaa\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"abc\", \"\
    cba\")) !== \"abc\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"this\", \"game\", \"of\", \"footbott\")) !== \"footbott\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\", \"are\", \"\
    gonna\", \"rock\")) !== \"gonna\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"a\", \"mad\", \"nation\")) !== \"\
    nation\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\", \"is\", \"a\", \"prrk\")) !== \"this\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"b\")) !== \"b\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"play\", \"play\", \"play\")) !== \"\
    play\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Error: Call to undefined function count_unique_chars()\
    \ in /tmp/tmpdltnnipc.php:13\nStack trace:\n#0 /tmp/tmpdltnnipc.php(23): find_max()\n\
    #1 /tmp/tmpdltnnipc.php(27): candidate()\n#2 /tmp/tmpdltnnipc.php(39): test()\n\
    #3 {main}\n  thrown in /tmp/tmpdltnnipc.php on line 13\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that accepts a list of strings.\n// The list\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// find_max([\"\
    name\", \"of\", \"string\"]) == \"string\"\n// find_max([\"name\", \"enam\", \"\
    game\"]) == \"enam\"\n// find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\
    \nfunction find_max($words) {\n    $max = 0;\n    $max_word = \"\";\n    foreach\
    \ ($words as $word) {\n        $count = count_unique_chars($word);\n        if\
    \ ($count > $max) {\n            $max = $count;\n            $max_word = $word;\n\
    \        }\n    }\n    return $max_word;\n}\n\nfunction candidate(...$args) {\n\
    \    return find_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    name\", \"of\", \"string\")) !== \"string\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"name\", \"enam\", \"game\")) !== \"enam\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"aaaaaaa\", \"\
    bb\", \"cc\")) !== \"aaaaaaa\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"abc\", \"cba\")) !== \"abc\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"play\", \"this\", \"game\", \"of\"\
    , \"footbott\")) !== \"footbott\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"gonna\", \"rock\")) !== \"gonna\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\",\
    \ \"are\", \"a\", \"mad\", \"nation\")) !== \"nation\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\", \"is\", \"a\", \"prrk\"\
    )) !== \"this\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    b\")) !== \"b\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"play\", \"play\")) !== \"play\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Error: Call to undefined function count_unique_chars()\
    \ in /tmp/tmphj6y1l4k.php:13\nStack trace:\n#0 /tmp/tmphj6y1l4k.php(23): find_max()\n\
    #1 /tmp/tmphj6y1l4k.php(27): candidate()\n#2 /tmp/tmphj6y1l4k.php(39): test()\n\
    #3 {main}\n  thrown in /tmp/tmphj6y1l4k.php on line 13\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that accepts a list of strings.\n// The list\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// find_max([\"\
    name\", \"of\", \"string\"]) == \"string\"\n// find_max([\"name\", \"enam\", \"\
    game\"]) == \"enam\"\n// find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\
    \nfunction find_max($words) {\n    $max = 0;\n    $max_word = \"\";\n    foreach\
    \ ($words as $word) {\n        $unique_chars = array_unique(str_split($word));\n\
    \        if (count($unique_chars) > $max) {\n            $max = count($unique_chars);\n\
    \            $max_word = $word;\n        }\n    }\n    return $max_word;\n}\n\n\
    echo find_max([\"name\", \"of\", \"string\"]) . PHP_EOL;\necho find_max([\"name\"\
    , \"enam\", \"game\"]) . PHP_EOL;\necho find_max([\"aaaaaaa\", \"bb\" ,\"cc\"\
    ]) . PHP_EOL;\nfunction candidate(...$args) {\n    return find_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(\"name\", \"of\", \"string\"\
    )) !== \"string\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    name\", \"enam\", \"game\")) !== \"enam\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"aaaaaaa\", \"bb\", \"cc\")) !== \"aaaaaaa\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"abc\", \"\
    cba\")) !== \"abc\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"this\", \"game\", \"of\", \"footbott\")) !== \"footbott\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\", \"are\", \"\
    gonna\", \"rock\")) !== \"gonna\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"a\", \"mad\", \"nation\")) !== \"\
    nation\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\", \"is\", \"a\", \"prrk\")) !== \"this\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"b\")) !== \"b\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"play\", \"play\", \"play\")) !== \"\
    play\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "string\nname\naaaaaaa\n"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpx3stbozt.php:31\n\
    Stack trace:\n#0 /tmp/tmpx3stbozt.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpx3stbozt.php\
    \ on line 31\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that accepts a list of strings.\n// The list\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// find_max([\"\
    name\", \"of\", \"string\"]) == \"string\"\n// find_max([\"name\", \"enam\", \"\
    game\"]) == \"enam\"\n// find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\
    \nfunction find_max($words) {\n    $max = 0;\n    $max_word = '';\n    foreach\
    \ ($words as $word) {\n        $unique_chars = array_unique(str_split($word));\n\
    \        if (count($unique_chars) > $max) {\n            $max = count($unique_chars);\n\
    \            $max_word = $word;\n        }\n    }\n    return $max_word;\n}\n\n\
    $words = [\"name\", \"of\", \"string\"];\necho find_max($words) . \"\\n\";\n$words\
    \ = [\"name\", \"enam\", \"game\"];\necho find_max($words) . \"\\n\";\n$words\
    \ = [\"aaaaaaa\", \"bb\" ,\"cc\"];\necho find_max($words) . \"\\n\";\nfunction\
    \ candidate(...$args) {\n    return find_max(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(\"name\", \"of\", \"string\")) !== \"string\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"name\"\
    , \"enam\", \"game\")) !== \"enam\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"aaaaaaa\", \"bb\", \"cc\")) !== \"aaaaaaa\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"abc\", \"\
    cba\")) !== \"abc\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"this\", \"game\", \"of\", \"footbott\")) !== \"footbott\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\", \"are\", \"\
    gonna\", \"rock\")) !== \"gonna\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"a\", \"mad\", \"nation\")) !== \"\
    nation\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\", \"is\", \"a\", \"prrk\")) !== \"this\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"b\")) !== \"b\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"play\", \"play\", \"play\")) !== \"\
    play\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "string\nname\naaaaaaa\n"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmptgfieiyw.php:34\n\
    Stack trace:\n#0 /tmp/tmptgfieiyw.php(45): test()\n#1 {main}\n  thrown in /tmp/tmptgfieiyw.php\
    \ on line 34\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that accepts a list of strings.\n// The list\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// find_max([\"\
    name\", \"of\", \"string\"]) == \"string\"\n// find_max([\"name\", \"enam\", \"\
    game\"]) == \"enam\"\n// find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\
    \nfunction find_max($words) {\n    $max = 0;\n    $max_word = \"\";\n    foreach\
    \ ($words as $word) {\n        $unique_chars = array_unique(str_split($word));\n\
    \        if (count($unique_chars) > $max) {\n            $max = count($unique_chars);\n\
    \            $max_word = $word;\n        }\n    }\n    return $max_word;\n}\n\n\
    function candidate(...$args) {\n    return find_max(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(\"name\", \"of\", \"string\")) !== \"\
    string\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    name\", \"enam\", \"game\")) !== \"enam\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"aaaaaaa\", \"bb\", \"cc\")) !== \"aaaaaaa\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"abc\", \"\
    cba\")) !== \"abc\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"this\", \"game\", \"of\", \"footbott\")) !== \"footbott\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\", \"are\", \"\
    gonna\", \"rock\")) !== \"gonna\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"a\", \"mad\", \"nation\")) !== \"\
    nation\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\", \"is\", \"a\", \"prrk\")) !== \"this\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"b\")) !== \"b\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"play\", \"play\", \"play\")) !== \"\
    play\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpn7ua4i20.php:28\n\
    Stack trace:\n#0 /tmp/tmpn7ua4i20.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpn7ua4i20.php\
    \ on line 28\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that accepts a list of strings.\n// The list\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// find_max([\"\
    name\", \"of\", \"string\"]) == \"string\"\n// find_max([\"name\", \"enam\", \"\
    game\"]) == \"enam\"\n// find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\
    \nfunction find_max($words) {\n    $max_word = \"\";\n    $max_unique_chars =\
    \ 0;\n    foreach ($words as $word) {\n        $unique_chars = 0;\n        $chars\
    \ = str_split($word);\n        foreach ($chars as $char) {\n            if (substr_count($word,\
    \ $char) == 1) {\n                $unique_chars++;\n            }\n        }\n\
    \        if ($unique_chars > $max_unique_chars) {\n            $max_unique_chars\
    \ = $unique_chars;\n            $max_word = $word;\n        }\n    }\n    return\
    \ $max_word;\n}\n\nfunction candidate(...$args) {\n    return find_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(\"name\", \"of\", \"string\"\
    )) !== \"string\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    name\", \"enam\", \"game\")) !== \"enam\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"aaaaaaa\", \"bb\", \"cc\")) !== \"aaaaaaa\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"abc\", \"\
    cba\")) !== \"abc\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"this\", \"game\", \"of\", \"footbott\")) !== \"footbott\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\", \"are\", \"\
    gonna\", \"rock\")) !== \"gonna\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"a\", \"mad\", \"nation\")) !== \"\
    nation\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\", \"is\", \"a\", \"prrk\")) !== \"this\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"b\")) !== \"b\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"play\", \"play\", \"play\")) !== \"\
    play\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp6v7e272r.php:34\n\
    Stack trace:\n#0 /tmp/tmp6v7e272r.php(45): test()\n#1 {main}\n  thrown in /tmp/tmp6v7e272r.php\
    \ on line 34\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that accepts a list of strings.\n// The list\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// find_max([\"\
    name\", \"of\", \"string\"]) == \"string\"\n// find_max([\"name\", \"enam\", \"\
    game\"]) == \"enam\"\n// find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\
    \nfunction find_max($words) {\n    $max_word = \"\";\n    $max_count = 0;\n  \
    \  foreach ($words as $word) {\n        $count = count_unique_chars($word);\n\
    \        if ($count > $max_count) {\n            $max_count = $count;\n      \
    \      $max_word = $word;\n        }\n    }\n    return $max_word;\n}\n\nfunction\
    \ candidate(...$args) {\n    return find_max(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(\"name\", \"of\", \"string\")) !== \"string\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"name\"\
    , \"enam\", \"game\")) !== \"enam\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"aaaaaaa\", \"bb\", \"cc\")) !== \"aaaaaaa\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"abc\", \"\
    cba\")) !== \"abc\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"this\", \"game\", \"of\", \"footbott\")) !== \"footbott\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\", \"are\", \"\
    gonna\", \"rock\")) !== \"gonna\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"a\", \"mad\", \"nation\")) !== \"\
    nation\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\", \"is\", \"a\", \"prrk\")) !== \"this\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"b\")) !== \"b\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"play\", \"play\", \"play\")) !== \"\
    play\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Error: Call to undefined function count_unique_chars()\
    \ in /tmp/tmpmo3eve8s.php:13\nStack trace:\n#0 /tmp/tmpmo3eve8s.php(23): find_max()\n\
    #1 /tmp/tmpmo3eve8s.php(27): candidate()\n#2 /tmp/tmpmo3eve8s.php(39): test()\n\
    #3 {main}\n  thrown in /tmp/tmpmo3eve8s.php on line 13\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that accepts a list of strings.\n// The list\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// find_max([\"\
    name\", \"of\", \"string\"]) == \"string\"\n// find_max([\"name\", \"enam\", \"\
    game\"]) == \"enam\"\n// find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\
    \nfunction find_max($words) {\n    $max = 0;\n    $max_word = \"\";\n    foreach\
    \ ($words as $word) {\n        $unique_chars = array_unique(str_split($word));\n\
    \        if (count($unique_chars) > $max) {\n            $max = count($unique_chars);\n\
    \            $max_word = $word;\n        }\n    }\n    return $max_word;\n}\n\n\
    function candidate(...$args) {\n    return find_max(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(\"name\", \"of\", \"string\")) !== \"\
    string\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    name\", \"enam\", \"game\")) !== \"enam\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"aaaaaaa\", \"bb\", \"cc\")) !== \"aaaaaaa\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"abc\", \"\
    cba\")) !== \"abc\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"this\", \"game\", \"of\", \"footbott\")) !== \"footbott\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\", \"are\", \"\
    gonna\", \"rock\")) !== \"gonna\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"a\", \"mad\", \"nation\")) !== \"\
    nation\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\", \"is\", \"a\", \"prrk\")) !== \"this\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"b\")) !== \"b\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"play\", \"play\", \"play\")) !== \"\
    play\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpfyxp2il5.php:28\n\
    Stack trace:\n#0 /tmp/tmpfyxp2il5.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpfyxp2il5.php\
    \ on line 28\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that accepts a list of strings.\n// The list\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// find_max([\"\
    name\", \"of\", \"string\"]) == \"string\"\n// find_max([\"name\", \"enam\", \"\
    game\"]) == \"enam\"\n// find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\
    \nfunction find_max($words) {\n    $max_word = \"\";\n    $max_count = 0;\n  \
    \  foreach ($words as $word) {\n        $count = count_unique_chars($word);\n\
    \        if ($count > $max_count) {\n            $max_count = $count;\n      \
    \      $max_word = $word;\n        }\n    }\n    return $max_word;\n}\n\nfunction\
    \ candidate(...$args) {\n    return find_max(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(\"name\", \"of\", \"string\")) !== \"string\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"name\"\
    , \"enam\", \"game\")) !== \"enam\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"aaaaaaa\", \"bb\", \"cc\")) !== \"aaaaaaa\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"abc\", \"\
    cba\")) !== \"abc\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"this\", \"game\", \"of\", \"footbott\")) !== \"footbott\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\", \"are\", \"\
    gonna\", \"rock\")) !== \"gonna\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"a\", \"mad\", \"nation\")) !== \"\
    nation\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\", \"is\", \"a\", \"prrk\")) !== \"this\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"b\")) !== \"b\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"play\", \"play\", \"play\")) !== \"\
    play\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Error: Call to undefined function count_unique_chars()\
    \ in /tmp/tmps36z19kg.php:13\nStack trace:\n#0 /tmp/tmps36z19kg.php(23): find_max()\n\
    #1 /tmp/tmps36z19kg.php(27): candidate()\n#2 /tmp/tmps36z19kg.php(39): test()\n\
    #3 {main}\n  thrown in /tmp/tmps36z19kg.php on line 13\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that accepts a list of strings.\n// The list\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// find_max([\"\
    name\", \"of\", \"string\"]) == \"string\"\n// find_max([\"name\", \"enam\", \"\
    game\"]) == \"enam\"\n// find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\
    \nfunction find_max($words) {\n    $max = 0;\n    $max_word = \"\";\n    foreach\
    \ ($words as $word) {\n        $unique_chars = array_unique(str_split($word));\n\
    \        if (count($unique_chars) > $max) {\n            $max = count($unique_chars);\n\
    \            $max_word = $word;\n        }\n    }\n    return $max_word;\n}\n\n\
    function candidate(...$args) {\n    return find_max(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(\"name\", \"of\", \"string\")) !== \"\
    string\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    name\", \"enam\", \"game\")) !== \"enam\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"aaaaaaa\", \"bb\", \"cc\")) !== \"aaaaaaa\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"abc\", \"\
    cba\")) !== \"abc\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"this\", \"game\", \"of\", \"footbott\")) !== \"footbott\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\", \"are\", \"\
    gonna\", \"rock\")) !== \"gonna\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"a\", \"mad\", \"nation\")) !== \"\
    nation\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\", \"is\", \"a\", \"prrk\")) !== \"this\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"b\")) !== \"b\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"play\", \"play\", \"play\")) !== \"\
    play\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmptoploane.php:28\n\
    Stack trace:\n#0 /tmp/tmptoploane.php(39): test()\n#1 {main}\n  thrown in /tmp/tmptoploane.php\
    \ on line 28\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that accepts a list of strings.\n// The list\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// find_max([\"\
    name\", \"of\", \"string\"]) == \"string\"\n// find_max([\"name\", \"enam\", \"\
    game\"]) == \"enam\"\n// find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\
    \nfunction find_max($words) {\n    $max = 0;\n    $max_word = \"\";\n    foreach\
    \ ($words as $word) {\n        $unique_chars = count_unique_chars($word);\n  \
    \      if ($unique_chars > $max) {\n            $max = $unique_chars;\n      \
    \      $max_word = $word;\n        }\n    }\n    return $max_word;\n}\n\nfunction\
    \ candidate(...$args) {\n    return find_max(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(\"name\", \"of\", \"string\")) !== \"string\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"name\"\
    , \"enam\", \"game\")) !== \"enam\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"aaaaaaa\", \"bb\", \"cc\")) !== \"aaaaaaa\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"abc\", \"\
    cba\")) !== \"abc\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"this\", \"game\", \"of\", \"footbott\")) !== \"footbott\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\", \"are\", \"\
    gonna\", \"rock\")) !== \"gonna\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"a\", \"mad\", \"nation\")) !== \"\
    nation\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\", \"is\", \"a\", \"prrk\")) !== \"this\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"b\")) !== \"b\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"play\", \"play\", \"play\")) !== \"\
    play\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Error: Call to undefined function count_unique_chars()\
    \ in /tmp/tmpxkc40q8e.php:13\nStack trace:\n#0 /tmp/tmpxkc40q8e.php(23): find_max()\n\
    #1 /tmp/tmpxkc40q8e.php(27): candidate()\n#2 /tmp/tmpxkc40q8e.php(39): test()\n\
    #3 {main}\n  thrown in /tmp/tmpxkc40q8e.php on line 13\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that accepts a list of strings.\n// The list\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// find_max([\"\
    name\", \"of\", \"string\"]) == \"string\"\n// find_max([\"name\", \"enam\", \"\
    game\"]) == \"enam\"\n// find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\
    \nfunction find_max($words) {\n    $max_word = \"\";\n    $max_count = 0;\n  \
    \  foreach ($words as $word) {\n        $count = count_unique_chars($word);\n\
    \        if ($count > $max_count) {\n            $max_count = $count;\n      \
    \      $max_word = $word;\n        }\n    }\n    return $max_word;\n}\n\nfunction\
    \ candidate(...$args) {\n    return find_max(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(\"name\", \"of\", \"string\")) !== \"string\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"name\"\
    , \"enam\", \"game\")) !== \"enam\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"aaaaaaa\", \"bb\", \"cc\")) !== \"aaaaaaa\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"abc\", \"\
    cba\")) !== \"abc\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"this\", \"game\", \"of\", \"footbott\")) !== \"footbott\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\", \"are\", \"\
    gonna\", \"rock\")) !== \"gonna\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"a\", \"mad\", \"nation\")) !== \"\
    nation\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\", \"is\", \"a\", \"prrk\")) !== \"this\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"b\")) !== \"b\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"play\", \"play\", \"play\")) !== \"\
    play\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Error: Call to undefined function count_unique_chars()\
    \ in /tmp/tmp8jr9vvlt.php:13\nStack trace:\n#0 /tmp/tmp8jr9vvlt.php(23): find_max()\n\
    #1 /tmp/tmp8jr9vvlt.php(27): candidate()\n#2 /tmp/tmp8jr9vvlt.php(39): test()\n\
    #3 {main}\n  thrown in /tmp/tmp8jr9vvlt.php on line 13\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that accepts a list of strings.\n// The list\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// find_max([\"\
    name\", \"of\", \"string\"]) == \"string\"\n// find_max([\"name\", \"enam\", \"\
    game\"]) == \"enam\"\n// find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\
    \nfunction find_max($words) {\n    $max_word = \"\";\n    $max_count = 0;\n  \
    \  foreach ($words as $word) {\n        $count = count_unique_chars($word);\n\
    \        if ($count > $max_count) {\n            $max_count = $count;\n      \
    \      $max_word = $word;\n        }\n    }\n    return $max_word;\n}\n\nfunction\
    \ candidate(...$args) {\n    return find_max(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(\"name\", \"of\", \"string\")) !== \"string\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"name\"\
    , \"enam\", \"game\")) !== \"enam\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"aaaaaaa\", \"bb\", \"cc\")) !== \"aaaaaaa\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"abc\", \"\
    cba\")) !== \"abc\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"this\", \"game\", \"of\", \"footbott\")) !== \"footbott\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\", \"are\", \"\
    gonna\", \"rock\")) !== \"gonna\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"a\", \"mad\", \"nation\")) !== \"\
    nation\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\", \"is\", \"a\", \"prrk\")) !== \"this\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"b\")) !== \"b\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"play\", \"play\", \"play\")) !== \"\
    play\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Error: Call to undefined function count_unique_chars()\
    \ in /tmp/tmp97y4pg3b.php:13\nStack trace:\n#0 /tmp/tmp97y4pg3b.php(23): find_max()\n\
    #1 /tmp/tmp97y4pg3b.php(27): candidate()\n#2 /tmp/tmp97y4pg3b.php(39): test()\n\
    #3 {main}\n  thrown in /tmp/tmp97y4pg3b.php on line 13\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that accepts a list of strings.\n// The list\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// find_max([\"\
    name\", \"of\", \"string\"]) == \"string\"\n// find_max([\"name\", \"enam\", \"\
    game\"]) == \"enam\"\n// find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\
    \nfunction find_max($words) {\n    $max = 0;\n    $max_word = \"\";\n    foreach\
    \ ($words as $word) {\n        $unique_chars = array_unique(str_split($word));\n\
    \        if (count($unique_chars) > $max) {\n            $max = count($unique_chars);\n\
    \            $max_word = $word;\n        }\n    }\n    return $max_word;\n}\n\n\
    function candidate(...$args) {\n    return find_max(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(\"name\", \"of\", \"string\")) !== \"\
    string\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    name\", \"enam\", \"game\")) !== \"enam\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"aaaaaaa\", \"bb\", \"cc\")) !== \"aaaaaaa\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"abc\", \"\
    cba\")) !== \"abc\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"this\", \"game\", \"of\", \"footbott\")) !== \"footbott\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\", \"are\", \"\
    gonna\", \"rock\")) !== \"gonna\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"a\", \"mad\", \"nation\")) !== \"\
    nation\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\", \"is\", \"a\", \"prrk\")) !== \"this\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"b\")) !== \"b\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"play\", \"play\", \"play\")) !== \"\
    play\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp26pgo5sc.php:28\n\
    Stack trace:\n#0 /tmp/tmp26pgo5sc.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp26pgo5sc.php\
    \ on line 28\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that accepts a list of strings.\n// The list\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// find_max([\"\
    name\", \"of\", \"string\"]) == \"string\"\n// find_max([\"name\", \"enam\", \"\
    game\"]) == \"enam\"\n// find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\
    \nfunction find_max($words) {\n    $max_word = \"\";\n    $max_count = 0;\n  \
    \  foreach ($words as $word) {\n        $count = count_unique_chars($word);\n\
    \        if ($count > $max_count) {\n            $max_count = $count;\n      \
    \      $max_word = $word;\n        }\n    }\n    return $max_word;\n}\n\nfunction\
    \ candidate(...$args) {\n    return find_max(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(\"name\", \"of\", \"string\")) !== \"string\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"name\"\
    , \"enam\", \"game\")) !== \"enam\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"aaaaaaa\", \"bb\", \"cc\")) !== \"aaaaaaa\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"abc\", \"\
    cba\")) !== \"abc\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"this\", \"game\", \"of\", \"footbott\")) !== \"footbott\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\", \"are\", \"\
    gonna\", \"rock\")) !== \"gonna\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"a\", \"mad\", \"nation\")) !== \"\
    nation\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\", \"is\", \"a\", \"prrk\")) !== \"this\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"b\")) !== \"b\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"play\", \"play\", \"play\")) !== \"\
    play\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Error: Call to undefined function count_unique_chars()\
    \ in /tmp/tmprxpfvnzt.php:13\nStack trace:\n#0 /tmp/tmprxpfvnzt.php(23): find_max()\n\
    #1 /tmp/tmprxpfvnzt.php(27): candidate()\n#2 /tmp/tmprxpfvnzt.php(39): test()\n\
    #3 {main}\n  thrown in /tmp/tmprxpfvnzt.php on line 13\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that accepts a list of strings.\n// The list\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// find_max([\"\
    name\", \"of\", \"string\"]) == \"string\"\n// find_max([\"name\", \"enam\", \"\
    game\"]) == \"enam\"\n// find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\
    \nfunction find_max($words) {\n    $max = 0;\n    $max_word = \"\";\n    foreach\
    \ ($words as $word) {\n        $unique_chars = array_unique(str_split($word));\n\
    \        if (count($unique_chars) > $max) {\n            $max = count($unique_chars);\n\
    \            $max_word = $word;\n        }\n    }\n    return $max_word;\n}\n\n\
    function candidate(...$args) {\n    return find_max(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(\"name\", \"of\", \"string\")) !== \"\
    string\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    name\", \"enam\", \"game\")) !== \"enam\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"aaaaaaa\", \"bb\", \"cc\")) !== \"aaaaaaa\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"abc\", \"\
    cba\")) !== \"abc\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"this\", \"game\", \"of\", \"footbott\")) !== \"footbott\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\", \"are\", \"\
    gonna\", \"rock\")) !== \"gonna\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"a\", \"mad\", \"nation\")) !== \"\
    nation\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\", \"is\", \"a\", \"prrk\")) !== \"this\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"b\")) !== \"b\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"play\", \"play\", \"play\")) !== \"\
    play\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpglyhlc15.php:28\n\
    Stack trace:\n#0 /tmp/tmpglyhlc15.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpglyhlc15.php\
    \ on line 28\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that accepts a list of strings.\n// The list\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// find_max([\"\
    name\", \"of\", \"string\"]) == \"string\"\n// find_max([\"name\", \"enam\", \"\
    game\"]) == \"enam\"\n// find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\
    \nfunction find_max($words) {\n    $max = 0;\n    $max_word = \"\";\n    foreach\
    \ ($words as $word) {\n        $unique_chars = array_unique(str_split($word));\n\
    \        if (count($unique_chars) > $max) {\n            $max = count($unique_chars);\n\
    \            $max_word = $word;\n        }\n    }\n    return $max_word;\n}\n\n\
    function candidate(...$args) {\n    return find_max(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(\"name\", \"of\", \"string\")) !== \"\
    string\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    name\", \"enam\", \"game\")) !== \"enam\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"aaaaaaa\", \"bb\", \"cc\")) !== \"aaaaaaa\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"abc\", \"\
    cba\")) !== \"abc\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"this\", \"game\", \"of\", \"footbott\")) !== \"footbott\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\", \"are\", \"\
    gonna\", \"rock\")) !== \"gonna\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"a\", \"mad\", \"nation\")) !== \"\
    nation\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\", \"is\", \"a\", \"prrk\")) !== \"this\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"b\")) !== \"b\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"play\", \"play\", \"play\")) !== \"\
    play\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpajril3gq.php:28\n\
    Stack trace:\n#0 /tmp/tmpajril3gq.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpajril3gq.php\
    \ on line 28\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that accepts a list of strings.\n// The list\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// find_max([\"\
    name\", \"of\", \"string\"]) == \"string\"\n// find_max([\"name\", \"enam\", \"\
    game\"]) == \"enam\"\n// find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\
    \nfunction find_max($words) {\n    $max = 0;\n    $max_word = \"\";\n    foreach\
    \ ($words as $word) {\n        $unique_chars = array_unique(str_split($word));\n\
    \        if (count($unique_chars) > $max) {\n            $max = count($unique_chars);\n\
    \            $max_word = $word;\n        }\n    }\n    return $max_word;\n}\n\n\
    function candidate(...$args) {\n    return find_max(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(\"name\", \"of\", \"string\")) !== \"\
    string\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    name\", \"enam\", \"game\")) !== \"enam\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"aaaaaaa\", \"bb\", \"cc\")) !== \"aaaaaaa\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"abc\", \"\
    cba\")) !== \"abc\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"this\", \"game\", \"of\", \"footbott\")) !== \"footbott\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\", \"are\", \"\
    gonna\", \"rock\")) !== \"gonna\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"a\", \"mad\", \"nation\")) !== \"\
    nation\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\", \"is\", \"a\", \"prrk\")) !== \"this\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"b\")) !== \"b\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"play\", \"play\", \"play\")) !== \"\
    play\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmphqyvg367.php:28\n\
    Stack trace:\n#0 /tmp/tmphqyvg367.php(39): test()\n#1 {main}\n  thrown in /tmp/tmphqyvg367.php\
    \ on line 28\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that accepts a list of strings.\n// The list\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// find_max([\"\
    name\", \"of\", \"string\"]) == \"string\"\n// find_max([\"name\", \"enam\", \"\
    game\"]) == \"enam\"\n// find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\
    \nfunction find_max($words) {\n  $max = 0;\n  $max_word = \"\";\n  foreach ($words\
    \ as $word) {\n    $unique_chars = array_unique(str_split($word));\n    if (count($unique_chars)\
    \ > $max) {\n      $max = count($unique_chars);\n      $max_word = $word;\n  \
    \  }\n  }\n  return $max_word;\n}\n\nfunction candidate(...$args) {\n    return\
    \ find_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    name\", \"of\", \"string\")) !== \"string\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"name\", \"enam\", \"game\")) !== \"enam\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"aaaaaaa\", \"\
    bb\", \"cc\")) !== \"aaaaaaa\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"abc\", \"cba\")) !== \"abc\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"play\", \"this\", \"game\", \"of\"\
    , \"footbott\")) !== \"footbott\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"gonna\", \"rock\")) !== \"gonna\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\",\
    \ \"are\", \"a\", \"mad\", \"nation\")) !== \"nation\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\", \"is\", \"a\", \"prrk\"\
    )) !== \"this\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    b\")) !== \"b\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"play\", \"play\")) !== \"play\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpcimvhnej.php:28\n\
    Stack trace:\n#0 /tmp/tmpcimvhnej.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpcimvhnej.php\
    \ on line 28\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that accepts a list of strings.\n// The list\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// find_max([\"\
    name\", \"of\", \"string\"]) == \"string\"\n// find_max([\"name\", \"enam\", \"\
    game\"]) == \"enam\"\n// find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\
    \nfunction find_max($words) {\n    $max_count = 0;\n    $max_word = \"\";\n  \
    \  foreach ($words as $word) {\n        $unique_chars = array_unique(str_split($word));\n\
    \        $unique_count = count($unique_chars);\n        if ($unique_count > $max_count)\
    \ {\n            $max_count = $unique_count;\n            $max_word = $word;\n\
    \        }\n    }\n    return $max_word;\n}\n\nfunction candidate(...$args) {\n\
    \    return find_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    name\", \"of\", \"string\")) !== \"string\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"name\", \"enam\", \"game\")) !== \"enam\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"aaaaaaa\", \"\
    bb\", \"cc\")) !== \"aaaaaaa\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"abc\", \"cba\")) !== \"abc\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"play\", \"this\", \"game\", \"of\"\
    , \"footbott\")) !== \"footbott\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"gonna\", \"rock\")) !== \"gonna\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\",\
    \ \"are\", \"a\", \"mad\", \"nation\")) !== \"nation\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\", \"is\", \"a\", \"prrk\"\
    )) !== \"this\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    b\")) !== \"b\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"play\", \"play\")) !== \"play\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpk65plb6r.php:29\n\
    Stack trace:\n#0 /tmp/tmpk65plb6r.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpk65plb6r.php\
    \ on line 29\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that accepts a list of strings.\n// The list\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// find_max([\"\
    name\", \"of\", \"string\"]) == \"string\"\n// find_max([\"name\", \"enam\", \"\
    game\"]) == \"enam\"\n// find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\
    \nfunction find_max($words) {\n  $max_word = \"\";\n  $max_count = 0;\n  foreach\
    \ ($words as $word) {\n    $count = count_unique_chars($word);\n    if ($count\
    \ > $max_count) {\n      $max_count = $count;\n      $max_word = $word;\n    }\n\
    \  }\n  return $max_word;\n}\n\nfunction candidate(...$args) {\n    return find_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(\"name\", \"of\", \"string\"\
    )) !== \"string\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    name\", \"enam\", \"game\")) !== \"enam\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"aaaaaaa\", \"bb\", \"cc\")) !== \"aaaaaaa\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"abc\", \"\
    cba\")) !== \"abc\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"this\", \"game\", \"of\", \"footbott\")) !== \"footbott\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\", \"are\", \"\
    gonna\", \"rock\")) !== \"gonna\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"a\", \"mad\", \"nation\")) !== \"\
    nation\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\", \"is\", \"a\", \"prrk\")) !== \"this\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"b\")) !== \"b\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"play\", \"play\", \"play\")) !== \"\
    play\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Error: Call to undefined function count_unique_chars()\
    \ in /tmp/tmpo2xkil56.php:13\nStack trace:\n#0 /tmp/tmpo2xkil56.php(23): find_max()\n\
    #1 /tmp/tmpo2xkil56.php(27): candidate()\n#2 /tmp/tmpo2xkil56.php(39): test()\n\
    #3 {main}\n  thrown in /tmp/tmpo2xkil56.php on line 13\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that accepts a list of strings.\n// The list\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// find_max([\"\
    name\", \"of\", \"string\"]) == \"string\"\n// find_max([\"name\", \"enam\", \"\
    game\"]) == \"enam\"\n// find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\
    \nfunction find_max($words) {\n    $max_word = '';\n    $max_count = 0;\n    foreach\
    \ ($words as $word) {\n        $count = count_unique_chars($word);\n        if\
    \ ($count > $max_count) {\n            $max_count = $count;\n            $max_word\
    \ = $word;\n        }\n    }\n    return $max_word;\n}\n\nfunction candidate(...$args)\
    \ {\n    return find_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    name\", \"of\", \"string\")) !== \"string\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"name\", \"enam\", \"game\")) !== \"enam\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"aaaaaaa\", \"\
    bb\", \"cc\")) !== \"aaaaaaa\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"abc\", \"cba\")) !== \"abc\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"play\", \"this\", \"game\", \"of\"\
    , \"footbott\")) !== \"footbott\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"gonna\", \"rock\")) !== \"gonna\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\",\
    \ \"are\", \"a\", \"mad\", \"nation\")) !== \"nation\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\", \"is\", \"a\", \"prrk\"\
    )) !== \"this\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    b\")) !== \"b\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"play\", \"play\")) !== \"play\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Error: Call to undefined function count_unique_chars()\
    \ in /tmp/tmphnbmy6_0.php:13\nStack trace:\n#0 /tmp/tmphnbmy6_0.php(23): find_max()\n\
    #1 /tmp/tmphnbmy6_0.php(27): candidate()\n#2 /tmp/tmphnbmy6_0.php(39): test()\n\
    #3 {main}\n  thrown in /tmp/tmphnbmy6_0.php on line 13\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that accepts a list of strings.\n// The list\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// find_max([\"\
    name\", \"of\", \"string\"]) == \"string\"\n// find_max([\"name\", \"enam\", \"\
    game\"]) == \"enam\"\n// find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\
    \nfunction find_max($words) {\n    $max = 0;\n    $max_word = \"\";\n    foreach\
    \ ($words as $word) {\n        $unique_chars = array_unique(str_split($word));\n\
    \        if (count($unique_chars) > $max) {\n            $max = count($unique_chars);\n\
    \            $max_word = $word;\n        }\n    }\n    return $max_word;\n}\n\n\
    function candidate(...$args) {\n    return find_max(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(\"name\", \"of\", \"string\")) !== \"\
    string\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    name\", \"enam\", \"game\")) !== \"enam\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"aaaaaaa\", \"bb\", \"cc\")) !== \"aaaaaaa\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"abc\", \"\
    cba\")) !== \"abc\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"this\", \"game\", \"of\", \"footbott\")) !== \"footbott\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\", \"are\", \"\
    gonna\", \"rock\")) !== \"gonna\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"a\", \"mad\", \"nation\")) !== \"\
    nation\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\", \"is\", \"a\", \"prrk\")) !== \"this\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"b\")) !== \"b\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"play\", \"play\", \"play\")) !== \"\
    play\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp5wt3ymzq.php:28\n\
    Stack trace:\n#0 /tmp/tmp5wt3ymzq.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp5wt3ymzq.php\
    \ on line 28\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that accepts a list of strings.\n// The list\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// find_max([\"\
    name\", \"of\", \"string\"]) == \"string\"\n// find_max([\"name\", \"enam\", \"\
    game\"]) == \"enam\"\n// find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\
    \nfunction find_max($words) {\n    $max = 0;\n    $max_word = \"\";\n    foreach\
    \ ($words as $word) {\n        $unique_chars = array_unique(str_split($word));\n\
    \        if (count($unique_chars) > $max) {\n            $max = count($unique_chars);\n\
    \            $max_word = $word;\n        }\n    }\n    return $max_word;\n}\n\n\
    function candidate(...$args) {\n    return find_max(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(\"name\", \"of\", \"string\")) !== \"\
    string\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    name\", \"enam\", \"game\")) !== \"enam\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"aaaaaaa\", \"bb\", \"cc\")) !== \"aaaaaaa\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"abc\", \"\
    cba\")) !== \"abc\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"this\", \"game\", \"of\", \"footbott\")) !== \"footbott\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\", \"are\", \"\
    gonna\", \"rock\")) !== \"gonna\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"a\", \"mad\", \"nation\")) !== \"\
    nation\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\", \"is\", \"a\", \"prrk\")) !== \"this\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"b\")) !== \"b\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"play\", \"play\", \"play\")) !== \"\
    play\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpd3p7flmq.php:28\n\
    Stack trace:\n#0 /tmp/tmpd3p7flmq.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpd3p7flmq.php\
    \ on line 28\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that accepts a list of strings.\n// The list\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// find_max([\"\
    name\", \"of\", \"string\"]) == \"string\"\n// find_max([\"name\", \"enam\", \"\
    game\"]) == \"enam\"\n// find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\
    \nfunction find_max($words) {\n    $max = 0;\n    $max_word = \"\";\n    foreach\
    \ ($words as $word) {\n        $unique_chars = array_unique(str_split($word));\n\
    \        if (count($unique_chars) > $max) {\n            $max = count($unique_chars);\n\
    \            $max_word = $word;\n        }\n    }\n    return $max_word;\n}\n\n\
    function candidate(...$args) {\n    return find_max(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(\"name\", \"of\", \"string\")) !== \"\
    string\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    name\", \"enam\", \"game\")) !== \"enam\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"aaaaaaa\", \"bb\", \"cc\")) !== \"aaaaaaa\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"abc\", \"\
    cba\")) !== \"abc\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"this\", \"game\", \"of\", \"footbott\")) !== \"footbott\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\", \"are\", \"\
    gonna\", \"rock\")) !== \"gonna\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"a\", \"mad\", \"nation\")) !== \"\
    nation\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\", \"is\", \"a\", \"prrk\")) !== \"this\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"b\")) !== \"b\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"play\", \"play\", \"play\")) !== \"\
    play\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp4bp27lny.php:28\n\
    Stack trace:\n#0 /tmp/tmp4bp27lny.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp4bp27lny.php\
    \ on line 28\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that accepts a list of strings.\n// The list\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// find_max([\"\
    name\", \"of\", \"string\"]) == \"string\"\n// find_max([\"name\", \"enam\", \"\
    game\"]) == \"enam\"\n// find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\
    \nfunction find_max($words) {\n    $max = 0;\n    $max_word = \"\";\n    foreach\
    \ ($words as $word) {\n        $unique_chars = array_unique(str_split($word));\n\
    \        if (count($unique_chars) > $max) {\n            $max = count($unique_chars);\n\
    \            $max_word = $word;\n        }\n    }\n    return $max_word;\n}\n\n\
    function candidate(...$args) {\n    return find_max(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(\"name\", \"of\", \"string\")) !== \"\
    string\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    name\", \"enam\", \"game\")) !== \"enam\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"aaaaaaa\", \"bb\", \"cc\")) !== \"aaaaaaa\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"abc\", \"\
    cba\")) !== \"abc\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"this\", \"game\", \"of\", \"footbott\")) !== \"footbott\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\", \"are\", \"\
    gonna\", \"rock\")) !== \"gonna\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"a\", \"mad\", \"nation\")) !== \"\
    nation\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\", \"is\", \"a\", \"prrk\")) !== \"this\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"b\")) !== \"b\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"play\", \"play\", \"play\")) !== \"\
    play\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpbc6lu35o.php:28\n\
    Stack trace:\n#0 /tmp/tmpbc6lu35o.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpbc6lu35o.php\
    \ on line 28\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that accepts a list of strings.\n// The list\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// find_max([\"\
    name\", \"of\", \"string\"]) == \"string\"\n// find_max([\"name\", \"enam\", \"\
    game\"]) == \"enam\"\n// find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\
    \nfunction find_max($words) {\n    $max = 0;\n    $max_word = \"\";\n    foreach\
    \ ($words as $word) {\n        $unique_chars = array_unique(str_split($word));\n\
    \        if (count($unique_chars) > $max) {\n            $max = count($unique_chars);\n\
    \            $max_word = $word;\n        }\n    }\n    return $max_word;\n}\n\n\
    function candidate(...$args) {\n    return find_max(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(\"name\", \"of\", \"string\")) !== \"\
    string\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    name\", \"enam\", \"game\")) !== \"enam\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"aaaaaaa\", \"bb\", \"cc\")) !== \"aaaaaaa\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"abc\", \"\
    cba\")) !== \"abc\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"this\", \"game\", \"of\", \"footbott\")) !== \"footbott\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\", \"are\", \"\
    gonna\", \"rock\")) !== \"gonna\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"a\", \"mad\", \"nation\")) !== \"\
    nation\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\", \"is\", \"a\", \"prrk\")) !== \"this\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"b\")) !== \"b\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"play\", \"play\", \"play\")) !== \"\
    play\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpejk8k3ye.php:28\n\
    Stack trace:\n#0 /tmp/tmpejk8k3ye.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpejk8k3ye.php\
    \ on line 28\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that accepts a list of strings.\n// The list\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// find_max([\"\
    name\", \"of\", \"string\"]) == \"string\"\n// find_max([\"name\", \"enam\", \"\
    game\"]) == \"enam\"\n// find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\
    \nfunction find_max($words) {\n    $max_word = \"\";\n    $max_count = 0;\n  \
    \  foreach ($words as $word) {\n        $count = count_unique_chars($word);\n\
    \        if ($count > $max_count) {\n            $max_count = $count;\n      \
    \      $max_word = $word;\n        }\n    }\n    return $max_word;\n}\n\nfunction\
    \ candidate(...$args) {\n    return find_max(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(\"name\", \"of\", \"string\")) !== \"string\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"name\"\
    , \"enam\", \"game\")) !== \"enam\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"aaaaaaa\", \"bb\", \"cc\")) !== \"aaaaaaa\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"abc\", \"\
    cba\")) !== \"abc\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"this\", \"game\", \"of\", \"footbott\")) !== \"footbott\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\", \"are\", \"\
    gonna\", \"rock\")) !== \"gonna\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"a\", \"mad\", \"nation\")) !== \"\
    nation\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\", \"is\", \"a\", \"prrk\")) !== \"this\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"b\")) !== \"b\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"play\", \"play\", \"play\")) !== \"\
    play\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Error: Call to undefined function count_unique_chars()\
    \ in /tmp/tmp6zfac2gk.php:13\nStack trace:\n#0 /tmp/tmp6zfac2gk.php(23): find_max()\n\
    #1 /tmp/tmp6zfac2gk.php(27): candidate()\n#2 /tmp/tmp6zfac2gk.php(39): test()\n\
    #3 {main}\n  thrown in /tmp/tmp6zfac2gk.php on line 13\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that accepts a list of strings.\n// The list\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// find_max([\"\
    name\", \"of\", \"string\"]) == \"string\"\n// find_max([\"name\", \"enam\", \"\
    game\"]) == \"enam\"\n// find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\
    \nfunction find_max($words) {\n    $max = 0;\n    $max_word = \"\";\n    foreach\
    \ ($words as $word) {\n        $unique_chars = array_unique(str_split($word));\n\
    \        if (count($unique_chars) > $max) {\n            $max = count($unique_chars);\n\
    \            $max_word = $word;\n        }\n    }\n    return $max_word;\n}\n\n\
    echo find_max([\"name\", \"of\", \"string\"]) . \"\\n\";\necho find_max([\"name\"\
    , \"enam\", \"game\"]) . \"\\n\";\necho find_max([\"aaaaaaa\", \"bb\" ,\"cc\"\
    ]) . \"\\n\";\nfunction candidate(...$args) {\n    return find_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(\"name\", \"of\", \"string\"\
    )) !== \"string\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    name\", \"enam\", \"game\")) !== \"enam\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"aaaaaaa\", \"bb\", \"cc\")) !== \"aaaaaaa\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"abc\", \"\
    cba\")) !== \"abc\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"this\", \"game\", \"of\", \"footbott\")) !== \"footbott\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\", \"are\", \"\
    gonna\", \"rock\")) !== \"gonna\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"a\", \"mad\", \"nation\")) !== \"\
    nation\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\", \"is\", \"a\", \"prrk\")) !== \"this\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"b\")) !== \"b\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"play\", \"play\", \"play\")) !== \"\
    play\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "string\nname\naaaaaaa\n"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp9htirnuf.php:31\n\
    Stack trace:\n#0 /tmp/tmp9htirnuf.php(42): test()\n#1 {main}\n  thrown in /tmp/tmp9htirnuf.php\
    \ on line 31\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that accepts a list of strings.\n// The list\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// find_max([\"\
    name\", \"of\", \"string\"]) == \"string\"\n// find_max([\"name\", \"enam\", \"\
    game\"]) == \"enam\"\n// find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\
    \nfunction find_max($words) {\n    $max = 0;\n    $max_word = '';\n    foreach\
    \ ($words as $word) {\n        $unique_chars = array_unique(str_split($word));\n\
    \        if (count($unique_chars) > $max) {\n            $max = count($unique_chars);\n\
    \            $max_word = $word;\n        }\n    }\n    return $max_word;\n}\n\n\
    function candidate(...$args) {\n    return find_max(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(\"name\", \"of\", \"string\")) !== \"\
    string\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    name\", \"enam\", \"game\")) !== \"enam\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"aaaaaaa\", \"bb\", \"cc\")) !== \"aaaaaaa\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"abc\", \"\
    cba\")) !== \"abc\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"this\", \"game\", \"of\", \"footbott\")) !== \"footbott\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\", \"are\", \"\
    gonna\", \"rock\")) !== \"gonna\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"a\", \"mad\", \"nation\")) !== \"\
    nation\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\", \"is\", \"a\", \"prrk\")) !== \"this\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"b\")) !== \"b\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"play\", \"play\", \"play\")) !== \"\
    play\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpvl68_2wi.php:28\n\
    Stack trace:\n#0 /tmp/tmpvl68_2wi.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpvl68_2wi.php\
    \ on line 28\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that accepts a list of strings.\n// The list\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// find_max([\"\
    name\", \"of\", \"string\"]) == \"string\"\n// find_max([\"name\", \"enam\", \"\
    game\"]) == \"enam\"\n// find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\
    \nfunction find_max($words) {\n  $max = 0;\n  $max_word = \"\";\n  foreach ($words\
    \ as $word) {\n    $unique_chars = array_unique(str_split($word));\n    if (count($unique_chars)\
    \ > $max) {\n      $max = count($unique_chars);\n      $max_word = $word;\n  \
    \  }\n  }\n  return $max_word;\n}\n\nfunction candidate(...$args) {\n    return\
    \ find_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    name\", \"of\", \"string\")) !== \"string\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"name\", \"enam\", \"game\")) !== \"enam\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"aaaaaaa\", \"\
    bb\", \"cc\")) !== \"aaaaaaa\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"abc\", \"cba\")) !== \"abc\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"play\", \"this\", \"game\", \"of\"\
    , \"footbott\")) !== \"footbott\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"gonna\", \"rock\")) !== \"gonna\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\",\
    \ \"are\", \"a\", \"mad\", \"nation\")) !== \"nation\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\", \"is\", \"a\", \"prrk\"\
    )) !== \"this\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    b\")) !== \"b\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"play\", \"play\")) !== \"play\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpt5njis4b.php:28\n\
    Stack trace:\n#0 /tmp/tmpt5njis4b.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpt5njis4b.php\
    \ on line 28\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that accepts a list of strings.\n// The list\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// find_max([\"\
    name\", \"of\", \"string\"]) == \"string\"\n// find_max([\"name\", \"enam\", \"\
    game\"]) == \"enam\"\n// find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\
    \nfunction find_max($words) {\n\t$max = 0;\n\t$max_word = \"\";\n\tforeach ($words\
    \ as $word) {\n\t\t$unique_chars = array_unique(str_split($word));\n\t\tif (count($unique_chars)\
    \ > $max) {\n\t\t\t$max = count($unique_chars);\n\t\t\t$max_word = $word;\n\t\t\
    }\n\t}\n\treturn $max_word;\n}\n\necho find_max([\"name\", \"of\", \"string\"\
    ]) . \"\\n\";\necho find_max([\"name\", \"enam\", \"game\"]) . \"\\n\";\necho\
    \ find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return find_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    name\", \"of\", \"string\")) !== \"string\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"name\", \"enam\", \"game\")) !== \"enam\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"aaaaaaa\", \"\
    bb\", \"cc\")) !== \"aaaaaaa\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"abc\", \"cba\")) !== \"abc\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"play\", \"this\", \"game\", \"of\"\
    , \"footbott\")) !== \"footbott\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"gonna\", \"rock\")) !== \"gonna\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\",\
    \ \"are\", \"a\", \"mad\", \"nation\")) !== \"nation\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\", \"is\", \"a\", \"prrk\"\
    )) !== \"this\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    b\")) !== \"b\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"play\", \"play\")) !== \"play\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "string\nname\naaaaaaa\n"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpbti15jha.php:31\n\
    Stack trace:\n#0 /tmp/tmpbti15jha.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpbti15jha.php\
    \ on line 31\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that accepts a list of strings.\n// The list\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// find_max([\"\
    name\", \"of\", \"string\"]) == \"string\"\n// find_max([\"name\", \"enam\", \"\
    game\"]) == \"enam\"\n// find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\
    \nfunction find_max($words) {\n    $max = 0;\n    $max_word = \"\";\n    foreach\
    \ ($words as $word) {\n        $unique_chars = array_unique(str_split($word));\n\
    \        if (count($unique_chars) > $max) {\n            $max = count($unique_chars);\n\
    \            $max_word = $word;\n        }\n    }\n    return $max_word;\n}\n\n\
    function candidate(...$args) {\n    return find_max(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(\"name\", \"of\", \"string\")) !== \"\
    string\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    name\", \"enam\", \"game\")) !== \"enam\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"aaaaaaa\", \"bb\", \"cc\")) !== \"aaaaaaa\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"abc\", \"\
    cba\")) !== \"abc\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"this\", \"game\", \"of\", \"footbott\")) !== \"footbott\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\", \"are\", \"\
    gonna\", \"rock\")) !== \"gonna\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"a\", \"mad\", \"nation\")) !== \"\
    nation\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\", \"is\", \"a\", \"prrk\")) !== \"this\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"b\")) !== \"b\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"play\", \"play\", \"play\")) !== \"\
    play\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmplvbsqb6w.php:28\n\
    Stack trace:\n#0 /tmp/tmplvbsqb6w.php(39): test()\n#1 {main}\n  thrown in /tmp/tmplvbsqb6w.php\
    \ on line 28\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that accepts a list of strings.\n// The list\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// find_max([\"\
    name\", \"of\", \"string\"]) == \"string\"\n// find_max([\"name\", \"enam\", \"\
    game\"]) == \"enam\"\n// find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\
    \nfunction find_max($words) {\n    $max = 0;\n    $max_word = \"\";\n    foreach\
    \ ($words as $word) {\n        $unique_chars = array_unique(str_split($word));\n\
    \        if (count($unique_chars) > $max) {\n            $max = count($unique_chars);\n\
    \            $max_word = $word;\n        }\n    }\n    return $max_word;\n}\n\n\
    echo find_max([\"name\", \"of\", \"string\"]) . \"\\n\";\necho find_max([\"name\"\
    , \"enam\", \"game\"]) . \"\\n\";\necho find_max([\"aaaaaaa\", \"bb\" ,\"cc\"\
    ]) . \"\\n\";\n\nfunction candidate(...$args) {\n    return find_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(\"name\", \"of\", \"string\"\
    )) !== \"string\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    name\", \"enam\", \"game\")) !== \"enam\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"aaaaaaa\", \"bb\", \"cc\")) !== \"aaaaaaa\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"abc\", \"\
    cba\")) !== \"abc\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"this\", \"game\", \"of\", \"footbott\")) !== \"footbott\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\", \"are\", \"\
    gonna\", \"rock\")) !== \"gonna\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"a\", \"mad\", \"nation\")) !== \"\
    nation\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\", \"is\", \"a\", \"prrk\")) !== \"this\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"b\")) !== \"b\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"play\", \"play\", \"play\")) !== \"\
    play\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "string\nname\naaaaaaa\n"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpgksiwrfx.php:32\n\
    Stack trace:\n#0 /tmp/tmpgksiwrfx.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpgksiwrfx.php\
    \ on line 32\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that accepts a list of strings.\n// The list\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// find_max([\"\
    name\", \"of\", \"string\"]) == \"string\"\n// find_max([\"name\", \"enam\", \"\
    game\"]) == \"enam\"\n// find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\
    \nfunction find_max($words) {\n    $max_word = \"\";\n    $max_count = 0;\n  \
    \  foreach ($words as $word) {\n        $count = count_unique_chars($word);\n\
    \        if ($count > $max_count) {\n            $max_count = $count;\n      \
    \      $max_word = $word;\n        }\n    }\n    return $max_word;\n}\n\nfunction\
    \ candidate(...$args) {\n    return find_max(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(\"name\", \"of\", \"string\")) !== \"string\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"name\"\
    , \"enam\", \"game\")) !== \"enam\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"aaaaaaa\", \"bb\", \"cc\")) !== \"aaaaaaa\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"abc\", \"\
    cba\")) !== \"abc\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"this\", \"game\", \"of\", \"footbott\")) !== \"footbott\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\", \"are\", \"\
    gonna\", \"rock\")) !== \"gonna\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"a\", \"mad\", \"nation\")) !== \"\
    nation\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\", \"is\", \"a\", \"prrk\")) !== \"this\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"b\")) !== \"b\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"play\", \"play\", \"play\")) !== \"\
    play\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Error: Call to undefined function count_unique_chars()\
    \ in /tmp/tmp0r7l7l9x.php:13\nStack trace:\n#0 /tmp/tmp0r7l7l9x.php(23): find_max()\n\
    #1 /tmp/tmp0r7l7l9x.php(27): candidate()\n#2 /tmp/tmp0r7l7l9x.php(39): test()\n\
    #3 {main}\n  thrown in /tmp/tmp0r7l7l9x.php on line 13\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that accepts a list of strings.\n// The list\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// find_max([\"\
    name\", \"of\", \"string\"]) == \"string\"\n// find_max([\"name\", \"enam\", \"\
    game\"]) == \"enam\"\n// find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\
    \nfunction find_max($words) {\n    $max_word = \"\";\n    $max_count = 0;\n  \
    \  foreach ($words as $word) {\n        $unique_chars = array_unique(str_split($word));\n\
    \        $unique_count = count($unique_chars);\n        if ($unique_count > $max_count)\
    \ {\n            $max_count = $unique_count;\n            $max_word = $word;\n\
    \        }\n    }\n    return $max_word;\n}\n\nfunction candidate(...$args) {\n\
    \    return find_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    name\", \"of\", \"string\")) !== \"string\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"name\", \"enam\", \"game\")) !== \"enam\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"aaaaaaa\", \"\
    bb\", \"cc\")) !== \"aaaaaaa\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"abc\", \"cba\")) !== \"abc\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"play\", \"this\", \"game\", \"of\"\
    , \"footbott\")) !== \"footbott\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"gonna\", \"rock\")) !== \"gonna\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\",\
    \ \"are\", \"a\", \"mad\", \"nation\")) !== \"nation\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\", \"is\", \"a\", \"prrk\"\
    )) !== \"this\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    b\")) !== \"b\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"play\", \"play\")) !== \"play\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpvuu9bxst.php:29\n\
    Stack trace:\n#0 /tmp/tmpvuu9bxst.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpvuu9bxst.php\
    \ on line 29\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that accepts a list of strings.\n// The list\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// find_max([\"\
    name\", \"of\", \"string\"]) == \"string\"\n// find_max([\"name\", \"enam\", \"\
    game\"]) == \"enam\"\n// find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\
    \nfunction find_max($words) {\n    $max = 0;\n    $max_word = \"\";\n    foreach\
    \ ($words as $word) {\n        $unique_chars = array_unique(str_split($word));\n\
    \        if (count($unique_chars) > $max) {\n            $max = count($unique_chars);\n\
    \            $max_word = $word;\n        }\n    }\n    return $max_word;\n}\n\n\
    function candidate(...$args) {\n    return find_max(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(\"name\", \"of\", \"string\")) !== \"\
    string\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    name\", \"enam\", \"game\")) !== \"enam\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"aaaaaaa\", \"bb\", \"cc\")) !== \"aaaaaaa\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"abc\", \"\
    cba\")) !== \"abc\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"this\", \"game\", \"of\", \"footbott\")) !== \"footbott\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\", \"are\", \"\
    gonna\", \"rock\")) !== \"gonna\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"a\", \"mad\", \"nation\")) !== \"\
    nation\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\", \"is\", \"a\", \"prrk\")) !== \"this\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"b\")) !== \"b\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"play\", \"play\", \"play\")) !== \"\
    play\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpxgmwd1qz.php:28\n\
    Stack trace:\n#0 /tmp/tmpxgmwd1qz.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpxgmwd1qz.php\
    \ on line 28\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that accepts a list of strings.\n// The list\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// find_max([\"\
    name\", \"of\", \"string\"]) == \"string\"\n// find_max([\"name\", \"enam\", \"\
    game\"]) == \"enam\"\n// find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\
    \nfunction find_max($words) {\n  $max_word = \"\";\n  $max_count = 0;\n  foreach\
    \ ($words as $word) {\n    $count = count_unique_chars($word);\n    if ($count\
    \ > $max_count) {\n      $max_count = $count;\n      $max_word = $word;\n    }\n\
    \  }\n  return $max_word;\n}\n\nfunction candidate(...$args) {\n    return find_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(\"name\", \"of\", \"string\"\
    )) !== \"string\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    name\", \"enam\", \"game\")) !== \"enam\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"aaaaaaa\", \"bb\", \"cc\")) !== \"aaaaaaa\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"abc\", \"\
    cba\")) !== \"abc\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"this\", \"game\", \"of\", \"footbott\")) !== \"footbott\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\", \"are\", \"\
    gonna\", \"rock\")) !== \"gonna\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"a\", \"mad\", \"nation\")) !== \"\
    nation\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\", \"is\", \"a\", \"prrk\")) !== \"this\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"b\")) !== \"b\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"play\", \"play\", \"play\")) !== \"\
    play\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Error: Call to undefined function count_unique_chars()\
    \ in /tmp/tmpkk8_atof.php:13\nStack trace:\n#0 /tmp/tmpkk8_atof.php(23): find_max()\n\
    #1 /tmp/tmpkk8_atof.php(27): candidate()\n#2 /tmp/tmpkk8_atof.php(39): test()\n\
    #3 {main}\n  thrown in /tmp/tmpkk8_atof.php on line 13\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that accepts a list of strings.\n// The list\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// find_max([\"\
    name\", \"of\", \"string\"]) == \"string\"\n// find_max([\"name\", \"enam\", \"\
    game\"]) == \"enam\"\n// find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\
    \nfunction find_max($words) {\n    $max_word = \"\";\n    $max_count = 0;\n  \
    \  foreach ($words as $word) {\n        $count = count_unique_chars($word);\n\
    \        if ($count > $max_count) {\n            $max_count = $count;\n      \
    \      $max_word = $word;\n        }\n    }\n    return $max_word;\n}\n\nfunction\
    \ candidate(...$args) {\n    return find_max(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(\"name\", \"of\", \"string\")) !== \"string\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"name\"\
    , \"enam\", \"game\")) !== \"enam\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"aaaaaaa\", \"bb\", \"cc\")) !== \"aaaaaaa\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"abc\", \"\
    cba\")) !== \"abc\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"this\", \"game\", \"of\", \"footbott\")) !== \"footbott\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\", \"are\", \"\
    gonna\", \"rock\")) !== \"gonna\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"a\", \"mad\", \"nation\")) !== \"\
    nation\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\", \"is\", \"a\", \"prrk\")) !== \"this\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"b\")) !== \"b\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"play\", \"play\", \"play\")) !== \"\
    play\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Error: Call to undefined function count_unique_chars()\
    \ in /tmp/tmp72ywze1r.php:13\nStack trace:\n#0 /tmp/tmp72ywze1r.php(23): find_max()\n\
    #1 /tmp/tmp72ywze1r.php(27): candidate()\n#2 /tmp/tmp72ywze1r.php(39): test()\n\
    #3 {main}\n  thrown in /tmp/tmp72ywze1r.php on line 13\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that accepts a list of strings.\n// The list\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// find_max([\"\
    name\", \"of\", \"string\"]) == \"string\"\n// find_max([\"name\", \"enam\", \"\
    game\"]) == \"enam\"\n// find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\
    \nfunction find_max($words) {\n  $max = 0;\n  $max_word = \"\";\n  foreach ($words\
    \ as $word) {\n    $unique_chars = array_unique(str_split($word));\n    if (count($unique_chars)\
    \ > $max) {\n      $max = count($unique_chars);\n      $max_word = $word;\n  \
    \  }\n  }\n  return $max_word;\n}\n\necho find_max([\"name\", \"of\", \"string\"\
    ]) . \"\\n\";\necho find_max([\"name\", \"enam\", \"game\"]) . \"\\n\";\necho\
    \ find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) . \"\\n\";\n\nfunction candidate(...$args)\
    \ {\n    return find_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    name\", \"of\", \"string\")) !== \"string\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"name\", \"enam\", \"game\")) !== \"enam\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"aaaaaaa\", \"\
    bb\", \"cc\")) !== \"aaaaaaa\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"abc\", \"cba\")) !== \"abc\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"play\", \"this\", \"game\", \"of\"\
    , \"footbott\")) !== \"footbott\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"gonna\", \"rock\")) !== \"gonna\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\",\
    \ \"are\", \"a\", \"mad\", \"nation\")) !== \"nation\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\", \"is\", \"a\", \"prrk\"\
    )) !== \"this\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    b\")) !== \"b\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"play\", \"play\")) !== \"play\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "string\nname\naaaaaaa\n"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpzsm8qji_.php:32\n\
    Stack trace:\n#0 /tmp/tmpzsm8qji_.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpzsm8qji_.php\
    \ on line 32\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that accepts a list of strings.\n// The list\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// find_max([\"\
    name\", \"of\", \"string\"]) == \"string\"\n// find_max([\"name\", \"enam\", \"\
    game\"]) == \"enam\"\n// find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\
    \nfunction find_max($words) {\n    $max_word = '';\n    $max_count = 0;\n    foreach\
    \ ($words as $word) {\n        $count = count_unique_chars($word);\n        if\
    \ ($count > $max_count) {\n            $max_count = $count;\n            $max_word\
    \ = $word;\n        }\n    }\n    return $max_word;\n}\n\nfunction candidate(...$args)\
    \ {\n    return find_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    name\", \"of\", \"string\")) !== \"string\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"name\", \"enam\", \"game\")) !== \"enam\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"aaaaaaa\", \"\
    bb\", \"cc\")) !== \"aaaaaaa\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"abc\", \"cba\")) !== \"abc\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"play\", \"this\", \"game\", \"of\"\
    , \"footbott\")) !== \"footbott\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"gonna\", \"rock\")) !== \"gonna\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\",\
    \ \"are\", \"a\", \"mad\", \"nation\")) !== \"nation\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\", \"is\", \"a\", \"prrk\"\
    )) !== \"this\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    b\")) !== \"b\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"play\", \"play\")) !== \"play\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Error: Call to undefined function count_unique_chars()\
    \ in /tmp/tmp7rbp9ikm.php:13\nStack trace:\n#0 /tmp/tmp7rbp9ikm.php(23): find_max()\n\
    #1 /tmp/tmp7rbp9ikm.php(27): candidate()\n#2 /tmp/tmp7rbp9ikm.php(39): test()\n\
    #3 {main}\n  thrown in /tmp/tmp7rbp9ikm.php on line 13\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that accepts a list of strings.\n// The list\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// find_max([\"\
    name\", \"of\", \"string\"]) == \"string\"\n// find_max([\"name\", \"enam\", \"\
    game\"]) == \"enam\"\n// find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\
    \nfunction find_max($words) {\n    $max_word = \"\";\n    $max_count = 0;\n  \
    \  foreach ($words as $word) {\n        $count = count_unique_chars($word);\n\
    \        if ($count > $max_count) {\n            $max_count = $count;\n      \
    \      $max_word = $word;\n        }\n    }\n    return $max_word;\n}\n\nfunction\
    \ candidate(...$args) {\n    return find_max(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(\"name\", \"of\", \"string\")) !== \"string\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"name\"\
    , \"enam\", \"game\")) !== \"enam\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"aaaaaaa\", \"bb\", \"cc\")) !== \"aaaaaaa\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"abc\", \"\
    cba\")) !== \"abc\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"this\", \"game\", \"of\", \"footbott\")) !== \"footbott\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\", \"are\", \"\
    gonna\", \"rock\")) !== \"gonna\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"a\", \"mad\", \"nation\")) !== \"\
    nation\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\", \"is\", \"a\", \"prrk\")) !== \"this\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"b\")) !== \"b\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"play\", \"play\", \"play\")) !== \"\
    play\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Error: Call to undefined function count_unique_chars()\
    \ in /tmp/tmpllb1x5eu.php:13\nStack trace:\n#0 /tmp/tmpllb1x5eu.php(23): find_max()\n\
    #1 /tmp/tmpllb1x5eu.php(27): candidate()\n#2 /tmp/tmpllb1x5eu.php(39): test()\n\
    #3 {main}\n  thrown in /tmp/tmpllb1x5eu.php on line 13\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that accepts a list of strings.\n// The list\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// find_max([\"\
    name\", \"of\", \"string\"]) == \"string\"\n// find_max([\"name\", \"enam\", \"\
    game\"]) == \"enam\"\n// find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\
    \nfunction find_max($words) {\n  $max_word = \"\";\n  $max_count = 0;\n  foreach\
    \ ($words as $word) {\n    $count = count_unique_chars($word);\n    if ($count\
    \ > $max_count) {\n      $max_count = $count;\n      $max_word = $word;\n    }\n\
    \  }\n  return $max_word;\n}\n\nfunction candidate(...$args) {\n    return find_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(\"name\", \"of\", \"string\"\
    )) !== \"string\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    name\", \"enam\", \"game\")) !== \"enam\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"aaaaaaa\", \"bb\", \"cc\")) !== \"aaaaaaa\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"abc\", \"\
    cba\")) !== \"abc\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"this\", \"game\", \"of\", \"footbott\")) !== \"footbott\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\", \"are\", \"\
    gonna\", \"rock\")) !== \"gonna\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"a\", \"mad\", \"nation\")) !== \"\
    nation\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\", \"is\", \"a\", \"prrk\")) !== \"this\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"b\")) !== \"b\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"play\", \"play\", \"play\")) !== \"\
    play\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Error: Call to undefined function count_unique_chars()\
    \ in /tmp/tmpkpa2q4i3.php:13\nStack trace:\n#0 /tmp/tmpkpa2q4i3.php(23): find_max()\n\
    #1 /tmp/tmpkpa2q4i3.php(27): candidate()\n#2 /tmp/tmpkpa2q4i3.php(39): test()\n\
    #3 {main}\n  thrown in /tmp/tmpkpa2q4i3.php on line 13\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that accepts a list of strings.\n// The list\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// find_max([\"\
    name\", \"of\", \"string\"]) == \"string\"\n// find_max([\"name\", \"enam\", \"\
    game\"]) == \"enam\"\n// find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\
    \nfunction find_max($words) {\n    $max = 0;\n    $max_word = \"\";\n    foreach\
    \ ($words as $word) {\n        $unique_chars = array_unique(str_split($word));\n\
    \        if (count($unique_chars) > $max) {\n            $max = count($unique_chars);\n\
    \            $max_word = $word;\n        }\n    }\n    return $max_word;\n}\n\n\
    function candidate(...$args) {\n    return find_max(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(\"name\", \"of\", \"string\")) !== \"\
    string\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    name\", \"enam\", \"game\")) !== \"enam\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"aaaaaaa\", \"bb\", \"cc\")) !== \"aaaaaaa\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"abc\", \"\
    cba\")) !== \"abc\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"this\", \"game\", \"of\", \"footbott\")) !== \"footbott\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\", \"are\", \"\
    gonna\", \"rock\")) !== \"gonna\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"a\", \"mad\", \"nation\")) !== \"\
    nation\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\", \"is\", \"a\", \"prrk\")) !== \"this\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"b\")) !== \"b\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"play\", \"play\", \"play\")) !== \"\
    play\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp7asm73w1.php:28\n\
    Stack trace:\n#0 /tmp/tmp7asm73w1.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp7asm73w1.php\
    \ on line 28\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that accepts a list of strings.\n// The list\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// find_max([\"\
    name\", \"of\", \"string\"]) == \"string\"\n// find_max([\"name\", \"enam\", \"\
    game\"]) == \"enam\"\n// find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\
    \nfunction find_max($words) {\n    $max = 0;\n    $max_word = \"\";\n    foreach\
    \ ($words as $word) {\n        $unique_chars = array_unique(str_split($word));\n\
    \        if (count($unique_chars) > $max) {\n            $max = count($unique_chars);\n\
    \            $max_word = $word;\n        }\n    }\n    return $max_word;\n}\n\n\
    $words = [\"name\", \"of\", \"string\"];\necho find_max($words) . \"\\n\";\n$words\
    \ = [\"name\", \"enam\", \"game\"];\necho find_max($words) . \"\\n\";\n$words\
    \ = [\"aaaaaaa\", \"bb\" ,\"cc\"];\necho find_max($words) . \"\\n\";\nfunction\
    \ candidate(...$args) {\n    return find_max(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(\"name\", \"of\", \"string\")) !== \"string\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"name\"\
    , \"enam\", \"game\")) !== \"enam\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"aaaaaaa\", \"bb\", \"cc\")) !== \"aaaaaaa\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"abc\", \"\
    cba\")) !== \"abc\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"this\", \"game\", \"of\", \"footbott\")) !== \"footbott\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\", \"are\", \"\
    gonna\", \"rock\")) !== \"gonna\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"a\", \"mad\", \"nation\")) !== \"\
    nation\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\", \"is\", \"a\", \"prrk\")) !== \"this\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"b\")) !== \"b\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"play\", \"play\", \"play\")) !== \"\
    play\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "string\nname\naaaaaaa\n"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpbgrzby4z.php:34\n\
    Stack trace:\n#0 /tmp/tmpbgrzby4z.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpbgrzby4z.php\
    \ on line 34\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that accepts a list of strings.\n// The list\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// find_max([\"\
    name\", \"of\", \"string\"]) == \"string\"\n// find_max([\"name\", \"enam\", \"\
    game\"]) == \"enam\"\n// find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\
    \nfunction find_max($words) {\n    $max_word = \"\";\n    $max_count = 0;\n  \
    \  foreach ($words as $word) {\n        $count = count_unique_chars($word);\n\
    \        if ($count > $max_count) {\n            $max_count = $count;\n      \
    \      $max_word = $word;\n        }\n    }\n    return $max_word;\n}\n\nfunction\
    \ candidate(...$args) {\n    return find_max(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(\"name\", \"of\", \"string\")) !== \"string\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"name\"\
    , \"enam\", \"game\")) !== \"enam\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"aaaaaaa\", \"bb\", \"cc\")) !== \"aaaaaaa\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"abc\", \"\
    cba\")) !== \"abc\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"this\", \"game\", \"of\", \"footbott\")) !== \"footbott\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\", \"are\", \"\
    gonna\", \"rock\")) !== \"gonna\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"a\", \"mad\", \"nation\")) !== \"\
    nation\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\", \"is\", \"a\", \"prrk\")) !== \"this\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"b\")) !== \"b\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"play\", \"play\", \"play\")) !== \"\
    play\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Error: Call to undefined function count_unique_chars()\
    \ in /tmp/tmpzoc8lx36.php:13\nStack trace:\n#0 /tmp/tmpzoc8lx36.php(23): find_max()\n\
    #1 /tmp/tmpzoc8lx36.php(27): candidate()\n#2 /tmp/tmpzoc8lx36.php(39): test()\n\
    #3 {main}\n  thrown in /tmp/tmpzoc8lx36.php on line 13\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that accepts a list of strings.\n// The list\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// find_max([\"\
    name\", \"of\", \"string\"]) == \"string\"\n// find_max([\"name\", \"enam\", \"\
    game\"]) == \"enam\"\n// find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\
    \nfunction find_max($words) {\n    $max = 0;\n    $max_word = \"\";\n    foreach\
    \ ($words as $word) {\n        $unique_chars = array_unique(str_split($word));\n\
    \        if (count($unique_chars) > $max) {\n            $max = count($unique_chars);\n\
    \            $max_word = $word;\n        }\n    }\n    return $max_word;\n}\n\n\
    function candidate(...$args) {\n    return find_max(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(\"name\", \"of\", \"string\")) !== \"\
    string\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    name\", \"enam\", \"game\")) !== \"enam\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"aaaaaaa\", \"bb\", \"cc\")) !== \"aaaaaaa\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"abc\", \"\
    cba\")) !== \"abc\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"this\", \"game\", \"of\", \"footbott\")) !== \"footbott\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\", \"are\", \"\
    gonna\", \"rock\")) !== \"gonna\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"a\", \"mad\", \"nation\")) !== \"\
    nation\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\", \"is\", \"a\", \"prrk\")) !== \"this\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"b\")) !== \"b\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"play\", \"play\", \"play\")) !== \"\
    play\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp8c3s5c11.php:28\n\
    Stack trace:\n#0 /tmp/tmp8c3s5c11.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp8c3s5c11.php\
    \ on line 28\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that accepts a list of strings.\n// The list\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// find_max([\"\
    name\", \"of\", \"string\"]) == \"string\"\n// find_max([\"name\", \"enam\", \"\
    game\"]) == \"enam\"\n// find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\
    \nfunction find_max($words) {\n    $max_count = 0;\n    $max_word = \"\";\n  \
    \  foreach ($words as $word) {\n        $unique_chars = array_unique(str_split($word));\n\
    \        $unique_count = count($unique_chars);\n        if ($unique_count > $max_count)\
    \ {\n            $max_count = $unique_count;\n            $max_word = $word;\n\
    \        }\n    }\n    return $max_word;\n}\n\nfunction candidate(...$args) {\n\
    \    return find_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    name\", \"of\", \"string\")) !== \"string\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"name\", \"enam\", \"game\")) !== \"enam\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"aaaaaaa\", \"\
    bb\", \"cc\")) !== \"aaaaaaa\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"abc\", \"cba\")) !== \"abc\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"play\", \"this\", \"game\", \"of\"\
    , \"footbott\")) !== \"footbott\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"gonna\", \"rock\")) !== \"gonna\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\",\
    \ \"are\", \"a\", \"mad\", \"nation\")) !== \"nation\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\", \"is\", \"a\", \"prrk\"\
    )) !== \"this\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    b\")) !== \"b\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"play\", \"play\")) !== \"play\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp6p08oft4.php:29\n\
    Stack trace:\n#0 /tmp/tmp6p08oft4.php(40): test()\n#1 {main}\n  thrown in /tmp/tmp6p08oft4.php\
    \ on line 29\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that accepts a list of strings.\n// The list\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// find_max([\"\
    name\", \"of\", \"string\"]) == \"string\"\n// find_max([\"name\", \"enam\", \"\
    game\"]) == \"enam\"\n// find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\
    \nfunction find_max($words) {\n    $max = 0;\n    $max_word = \"\";\n    foreach\
    \ ($words as $word) {\n        $unique_chars = array_unique(str_split($word));\n\
    \        if (count($unique_chars) > $max) {\n            $max = count($unique_chars);\n\
    \            $max_word = $word;\n        }\n    }\n    return $max_word;\n}\n\n\
    $words = [\"name\", \"of\", \"string\"];\necho find_max($words) . \"\\n\";\n\n\
    $words = [\"name\", \"enam\", \"game\"];\necho find_max($words) . \"\\n\";\n\n\
    $words = [\"aaaaaaa\", \"bb\" ,\"cc\"];\necho find_max($words) . \"\\n\";\nfunction\
    \ candidate(...$args) {\n    return find_max(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(\"name\", \"of\", \"string\")) !== \"string\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"name\"\
    , \"enam\", \"game\")) !== \"enam\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"aaaaaaa\", \"bb\", \"cc\")) !== \"aaaaaaa\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"abc\", \"\
    cba\")) !== \"abc\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"this\", \"game\", \"of\", \"footbott\")) !== \"footbott\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\", \"are\", \"\
    gonna\", \"rock\")) !== \"gonna\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"a\", \"mad\", \"nation\")) !== \"\
    nation\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\", \"is\", \"a\", \"prrk\")) !== \"this\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"b\")) !== \"b\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"play\", \"play\", \"play\")) !== \"\
    play\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "string\nname\naaaaaaa\n"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp3ubr_2xn.php:36\n\
    Stack trace:\n#0 /tmp/tmp3ubr_2xn.php(47): test()\n#1 {main}\n  thrown in /tmp/tmp3ubr_2xn.php\
    \ on line 36\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that accepts a list of strings.\n// The list\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// find_max([\"\
    name\", \"of\", \"string\"]) == \"string\"\n// find_max([\"name\", \"enam\", \"\
    game\"]) == \"enam\"\n// find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\
    \nfunction find_max($words) {\n    $max_word = \"\";\n    $max_count = 0;\n  \
    \  foreach ($words as $word) {\n        $count = count_unique_chars($word);\n\
    \        if ($count > $max_count) {\n            $max_count = $count;\n      \
    \      $max_word = $word;\n        }\n    }\n    return $max_word;\n}\n\nfunction\
    \ candidate(...$args) {\n    return find_max(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(\"name\", \"of\", \"string\")) !== \"string\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"name\"\
    , \"enam\", \"game\")) !== \"enam\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"aaaaaaa\", \"bb\", \"cc\")) !== \"aaaaaaa\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"abc\", \"\
    cba\")) !== \"abc\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"this\", \"game\", \"of\", \"footbott\")) !== \"footbott\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\", \"are\", \"\
    gonna\", \"rock\")) !== \"gonna\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"a\", \"mad\", \"nation\")) !== \"\
    nation\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\", \"is\", \"a\", \"prrk\")) !== \"this\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"b\")) !== \"b\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"play\", \"play\", \"play\")) !== \"\
    play\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Error: Call to undefined function count_unique_chars()\
    \ in /tmp/tmpzqzkqre0.php:13\nStack trace:\n#0 /tmp/tmpzqzkqre0.php(23): find_max()\n\
    #1 /tmp/tmpzqzkqre0.php(27): candidate()\n#2 /tmp/tmpzqzkqre0.php(39): test()\n\
    #3 {main}\n  thrown in /tmp/tmpzqzkqre0.php on line 13\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that accepts a list of strings.\n// The list\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// find_max([\"\
    name\", \"of\", \"string\"]) == \"string\"\n// find_max([\"name\", \"enam\", \"\
    game\"]) == \"enam\"\n// find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\
    \nfunction find_max($words) {\n    $max = 0;\n    $max_word = \"\";\n    foreach\
    \ ($words as $word) {\n        $chars = str_split($word);\n        $unique_chars\
    \ = array_unique($chars);\n        $unique_chars_count = count($unique_chars);\n\
    \        if ($unique_chars_count > $max) {\n            $max = $unique_chars_count;\n\
    \            $max_word = $word;\n        }\n    }\n    return $max_word;\n}\n\n\
    function candidate(...$args) {\n    return find_max(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(\"name\", \"of\", \"string\")) !== \"\
    string\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    name\", \"enam\", \"game\")) !== \"enam\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"aaaaaaa\", \"bb\", \"cc\")) !== \"aaaaaaa\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"abc\", \"\
    cba\")) !== \"abc\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"this\", \"game\", \"of\", \"footbott\")) !== \"footbott\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\", \"are\", \"\
    gonna\", \"rock\")) !== \"gonna\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"a\", \"mad\", \"nation\")) !== \"\
    nation\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\", \"is\", \"a\", \"prrk\")) !== \"this\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"b\")) !== \"b\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"play\", \"play\", \"play\")) !== \"\
    play\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpxfzm0481.php:30\n\
    Stack trace:\n#0 /tmp/tmpxfzm0481.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpxfzm0481.php\
    \ on line 30\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that accepts a list of strings.\n// The list\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// find_max([\"\
    name\", \"of\", \"string\"]) == \"string\"\n// find_max([\"name\", \"enam\", \"\
    game\"]) == \"enam\"\n// find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\
    \nfunction find_max($words) {\n    $max_word = \"\";\n    $max_count = 0;\n  \
    \  foreach ($words as $word) {\n        $unique_chars = array_unique(str_split($word));\n\
    \        $unique_count = count($unique_chars);\n        if ($unique_count > $max_count)\
    \ {\n            $max_count = $unique_count;\n            $max_word = $word;\n\
    \        }\n    }\n    return $max_word;\n}\n\nfunction candidate(...$args) {\n\
    \    return find_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    name\", \"of\", \"string\")) !== \"string\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"name\", \"enam\", \"game\")) !== \"enam\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"aaaaaaa\", \"\
    bb\", \"cc\")) !== \"aaaaaaa\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"abc\", \"cba\")) !== \"abc\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"play\", \"this\", \"game\", \"of\"\
    , \"footbott\")) !== \"footbott\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"gonna\", \"rock\")) !== \"gonna\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\",\
    \ \"are\", \"a\", \"mad\", \"nation\")) !== \"nation\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\", \"is\", \"a\", \"prrk\"\
    )) !== \"this\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    b\")) !== \"b\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"play\", \"play\")) !== \"play\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp6rgyhxmh.php:29\n\
    Stack trace:\n#0 /tmp/tmp6rgyhxmh.php(40): test()\n#1 {main}\n  thrown in /tmp/tmp6rgyhxmh.php\
    \ on line 29\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that accepts a list of strings.\n// The list\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// find_max([\"\
    name\", \"of\", \"string\"]) == \"string\"\n// find_max([\"name\", \"enam\", \"\
    game\"]) == \"enam\"\n// find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\
    \nfunction find_max($words) {\n    $max = 0;\n    $max_word = \"\";\n    foreach\
    \ ($words as $word) {\n        $unique_chars = array_unique(str_split($word));\n\
    \        if (count($unique_chars) > $max) {\n            $max = count($unique_chars);\n\
    \            $max_word = $word;\n        }\n    }\n    return $max_word;\n}\n\n\
    echo find_max([\"name\", \"of\", \"string\"]) . \"\\n\";\necho find_max([\"name\"\
    , \"enam\", \"game\"]) . \"\\n\";\necho find_max([\"aaaaaaa\", \"bb\" ,\"cc\"\
    ]) . \"\\n\";\nfunction candidate(...$args) {\n    return find_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(\"name\", \"of\", \"string\"\
    )) !== \"string\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    name\", \"enam\", \"game\")) !== \"enam\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"aaaaaaa\", \"bb\", \"cc\")) !== \"aaaaaaa\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"abc\", \"\
    cba\")) !== \"abc\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"this\", \"game\", \"of\", \"footbott\")) !== \"footbott\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\", \"are\", \"\
    gonna\", \"rock\")) !== \"gonna\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"a\", \"mad\", \"nation\")) !== \"\
    nation\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\", \"is\", \"a\", \"prrk\")) !== \"this\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"b\")) !== \"b\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"play\", \"play\", \"play\")) !== \"\
    play\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "string\nname\naaaaaaa\n"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmplp_6cv55.php:31\n\
    Stack trace:\n#0 /tmp/tmplp_6cv55.php(42): test()\n#1 {main}\n  thrown in /tmp/tmplp_6cv55.php\
    \ on line 31\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that accepts a list of strings.\n// The list\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// find_max([\"\
    name\", \"of\", \"string\"]) == \"string\"\n// find_max([\"name\", \"enam\", \"\
    game\"]) == \"enam\"\n// find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\
    \nfunction find_max($words) {\n    $max = 0;\n    $max_word = \"\";\n    foreach\
    \ ($words as $word) {\n        $unique_chars = array_unique(str_split($word));\n\
    \        if (count($unique_chars) > $max) {\n            $max = count($unique_chars);\n\
    \            $max_word = $word;\n        }\n    }\n    return $max_word;\n}\n\n\
    echo find_max([\"name\", \"of\", \"string\"]) . \"\\n\";\necho find_max([\"name\"\
    , \"enam\", \"game\"]) . \"\\n\";\necho find_max([\"aaaaaaa\", \"bb\" ,\"cc\"\
    ]) . \"\\n\";\n\nfunction candidate(...$args) {\n    return find_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(\"name\", \"of\", \"string\"\
    )) !== \"string\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    name\", \"enam\", \"game\")) !== \"enam\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"aaaaaaa\", \"bb\", \"cc\")) !== \"aaaaaaa\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"abc\", \"\
    cba\")) !== \"abc\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"this\", \"game\", \"of\", \"footbott\")) !== \"footbott\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\", \"are\", \"\
    gonna\", \"rock\")) !== \"gonna\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"a\", \"mad\", \"nation\")) !== \"\
    nation\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\", \"is\", \"a\", \"prrk\")) !== \"this\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"b\")) !== \"b\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"play\", \"play\", \"play\")) !== \"\
    play\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "string\nname\naaaaaaa\n"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpcn1ugzxw.php:32\n\
    Stack trace:\n#0 /tmp/tmpcn1ugzxw.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpcn1ugzxw.php\
    \ on line 32\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that accepts a list of strings.\n// The list\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// find_max([\"\
    name\", \"of\", \"string\"]) == \"string\"\n// find_max([\"name\", \"enam\", \"\
    game\"]) == \"enam\"\n// find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\
    \nfunction find_max($words) {\n    $max_word = \"\";\n    $max_count = 0;\n  \
    \  foreach ($words as $word) {\n        $unique_chars = array_unique(str_split($word));\n\
    \        $unique_count = count($unique_chars);\n        if ($unique_count > $max_count)\
    \ {\n            $max_count = $unique_count;\n            $max_word = $word;\n\
    \        }\n    }\n    return $max_word;\n}\n\nfunction candidate(...$args) {\n\
    \    return find_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    name\", \"of\", \"string\")) !== \"string\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"name\", \"enam\", \"game\")) !== \"enam\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"aaaaaaa\", \"\
    bb\", \"cc\")) !== \"aaaaaaa\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"abc\", \"cba\")) !== \"abc\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"play\", \"this\", \"game\", \"of\"\
    , \"footbott\")) !== \"footbott\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"gonna\", \"rock\")) !== \"gonna\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\",\
    \ \"are\", \"a\", \"mad\", \"nation\")) !== \"nation\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\", \"is\", \"a\", \"prrk\"\
    )) !== \"this\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    b\")) !== \"b\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"play\", \"play\")) !== \"play\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpa37sk7xr.php:29\n\
    Stack trace:\n#0 /tmp/tmpa37sk7xr.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpa37sk7xr.php\
    \ on line 29\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that accepts a list of strings.\n// The list\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// find_max([\"\
    name\", \"of\", \"string\"]) == \"string\"\n// find_max([\"name\", \"enam\", \"\
    game\"]) == \"enam\"\n// find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\
    \nfunction find_max($words) {\n    $max_word = \"\";\n    $max_count = 0;\n  \
    \  foreach ($words as $word) {\n        $unique_chars = array_unique(str_split($word));\n\
    \        $unique_count = count($unique_chars);\n        if ($unique_count > $max_count)\
    \ {\n            $max_count = $unique_count;\n            $max_word = $word;\n\
    \        }\n    }\n    return $max_word;\n}\n\nfunction candidate(...$args) {\n\
    \    return find_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    name\", \"of\", \"string\")) !== \"string\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"name\", \"enam\", \"game\")) !== \"enam\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"aaaaaaa\", \"\
    bb\", \"cc\")) !== \"aaaaaaa\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"abc\", \"cba\")) !== \"abc\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"play\", \"this\", \"game\", \"of\"\
    , \"footbott\")) !== \"footbott\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"gonna\", \"rock\")) !== \"gonna\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\",\
    \ \"are\", \"a\", \"mad\", \"nation\")) !== \"nation\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\", \"is\", \"a\", \"prrk\"\
    )) !== \"this\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    b\")) !== \"b\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"play\", \"play\")) !== \"play\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpxmndg_o0.php:29\n\
    Stack trace:\n#0 /tmp/tmpxmndg_o0.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpxmndg_o0.php\
    \ on line 29\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that accepts a list of strings.\n// The list\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// find_max([\"\
    name\", \"of\", \"string\"]) == \"string\"\n// find_max([\"name\", \"enam\", \"\
    game\"]) == \"enam\"\n// find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\
    \nfunction find_max($words) {\n    $max = 0;\n    $max_word = \"\";\n    foreach\
    \ ($words as $word) {\n        $unique_chars = array_unique(str_split($word));\n\
    \        if (count($unique_chars) > $max) {\n            $max = count($unique_chars);\n\
    \            $max_word = $word;\n        }\n    }\n    return $max_word;\n}\n\n\
    $words = [\"name\", \"of\", \"string\"];\necho find_max($words) . \"\\n\";\n$words\
    \ = [\"name\", \"enam\", \"game\"];\necho find_max($words) . \"\\n\";\n$words\
    \ = [\"aaaaaaa\", \"bb\" ,\"cc\"];\necho find_max($words) . \"\\n\";\nfunction\
    \ candidate(...$args) {\n    return find_max(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(\"name\", \"of\", \"string\")) !== \"string\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"name\"\
    , \"enam\", \"game\")) !== \"enam\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"aaaaaaa\", \"bb\", \"cc\")) !== \"aaaaaaa\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"abc\", \"\
    cba\")) !== \"abc\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"this\", \"game\", \"of\", \"footbott\")) !== \"footbott\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\", \"are\", \"\
    gonna\", \"rock\")) !== \"gonna\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"a\", \"mad\", \"nation\")) !== \"\
    nation\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\", \"is\", \"a\", \"prrk\")) !== \"this\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"b\")) !== \"b\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"play\", \"play\", \"play\")) !== \"\
    play\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "string\nname\naaaaaaa\n"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmparo4vugb.php:34\n\
    Stack trace:\n#0 /tmp/tmparo4vugb.php(45): test()\n#1 {main}\n  thrown in /tmp/tmparo4vugb.php\
    \ on line 34\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that accepts a list of strings.\n// The list\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// find_max([\"\
    name\", \"of\", \"string\"]) == \"string\"\n// find_max([\"name\", \"enam\", \"\
    game\"]) == \"enam\"\n// find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\
    \nfunction find_max($words) {\n    $max = 0;\n    $max_word = \"\";\n    foreach\
    \ ($words as $word) {\n        $unique_chars = array_unique(str_split($word));\n\
    \        if (count($unique_chars) > $max) {\n            $max = count($unique_chars);\n\
    \            $max_word = $word;\n        }\n    }\n    return $max_word;\n}\n\n\
    function candidate(...$args) {\n    return find_max(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(\"name\", \"of\", \"string\")) !== \"\
    string\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    name\", \"enam\", \"game\")) !== \"enam\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"aaaaaaa\", \"bb\", \"cc\")) !== \"aaaaaaa\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"abc\", \"\
    cba\")) !== \"abc\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"this\", \"game\", \"of\", \"footbott\")) !== \"footbott\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\", \"are\", \"\
    gonna\", \"rock\")) !== \"gonna\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"a\", \"mad\", \"nation\")) !== \"\
    nation\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\", \"is\", \"a\", \"prrk\")) !== \"this\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"b\")) !== \"b\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"play\", \"play\", \"play\")) !== \"\
    play\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpm9a5z4c9.php:28\n\
    Stack trace:\n#0 /tmp/tmpm9a5z4c9.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpm9a5z4c9.php\
    \ on line 28\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that accepts a list of strings.\n// The list\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// find_max([\"\
    name\", \"of\", \"string\"]) == \"string\"\n// find_max([\"name\", \"enam\", \"\
    game\"]) == \"enam\"\n// find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\
    \nfunction find_max($words) {\n    $max = 0;\n    $max_word = \"\";\n    foreach\
    \ ($words as $word) {\n        $unique_chars = count_unique_chars($word);\n  \
    \      if ($unique_chars > $max) {\n            $max = $unique_chars;\n      \
    \      $max_word = $word;\n        }\n    }\n    return $max_word;\n}\n\nfunction\
    \ candidate(...$args) {\n    return find_max(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(\"name\", \"of\", \"string\")) !== \"string\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"name\"\
    , \"enam\", \"game\")) !== \"enam\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"aaaaaaa\", \"bb\", \"cc\")) !== \"aaaaaaa\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"abc\", \"\
    cba\")) !== \"abc\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"this\", \"game\", \"of\", \"footbott\")) !== \"footbott\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\", \"are\", \"\
    gonna\", \"rock\")) !== \"gonna\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"a\", \"mad\", \"nation\")) !== \"\
    nation\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\", \"is\", \"a\", \"prrk\")) !== \"this\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"b\")) !== \"b\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"play\", \"play\", \"play\")) !== \"\
    play\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Error: Call to undefined function count_unique_chars()\
    \ in /tmp/tmpcv1gkaj0.php:13\nStack trace:\n#0 /tmp/tmpcv1gkaj0.php(23): find_max()\n\
    #1 /tmp/tmpcv1gkaj0.php(27): candidate()\n#2 /tmp/tmpcv1gkaj0.php(39): test()\n\
    #3 {main}\n  thrown in /tmp/tmpcv1gkaj0.php on line 13\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that accepts a list of strings.\n// The list\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// find_max([\"\
    name\", \"of\", \"string\"]) == \"string\"\n// find_max([\"name\", \"enam\", \"\
    game\"]) == \"enam\"\n// find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\
    \nfunction find_max($words) {\n  $max_word = \"\";\n  $max_count = 0;\n  foreach\
    \ ($words as $word) {\n    $count = count_unique_chars($word);\n    if ($count\
    \ > $max_count) {\n      $max_count = $count;\n      $max_word = $word;\n    }\n\
    \  }\n  return $max_word;\n}\n\nfunction candidate(...$args) {\n    return find_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(\"name\", \"of\", \"string\"\
    )) !== \"string\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    name\", \"enam\", \"game\")) !== \"enam\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"aaaaaaa\", \"bb\", \"cc\")) !== \"aaaaaaa\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"abc\", \"\
    cba\")) !== \"abc\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"this\", \"game\", \"of\", \"footbott\")) !== \"footbott\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\", \"are\", \"\
    gonna\", \"rock\")) !== \"gonna\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"a\", \"mad\", \"nation\")) !== \"\
    nation\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\", \"is\", \"a\", \"prrk\")) !== \"this\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"b\")) !== \"b\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"play\", \"play\", \"play\")) !== \"\
    play\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Error: Call to undefined function count_unique_chars()\
    \ in /tmp/tmpxf1wptxe.php:13\nStack trace:\n#0 /tmp/tmpxf1wptxe.php(23): find_max()\n\
    #1 /tmp/tmpxf1wptxe.php(27): candidate()\n#2 /tmp/tmpxf1wptxe.php(39): test()\n\
    #3 {main}\n  thrown in /tmp/tmpxf1wptxe.php on line 13\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that accepts a list of strings.\n// The list\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// find_max([\"\
    name\", \"of\", \"string\"]) == \"string\"\n// find_max([\"name\", \"enam\", \"\
    game\"]) == \"enam\"\n// find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\
    \nfunction find_max($words) {\n    $max = 0;\n    $max_word = \"\";\n    foreach\
    \ ($words as $word) {\n        $unique_chars = array_unique(str_split($word));\n\
    \        if (count($unique_chars) > $max) {\n            $max = count($unique_chars);\n\
    \            $max_word = $word;\n        }\n    }\n    return $max_word;\n}\n\n\
    echo find_max([\"name\", \"of\", \"string\"]) . \"\\n\";\necho find_max([\"name\"\
    , \"enam\", \"game\"]) . \"\\n\";\necho find_max([\"aaaaaaa\", \"bb\" ,\"cc\"\
    ]) . \"\\n\";\nfunction candidate(...$args) {\n    return find_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(\"name\", \"of\", \"string\"\
    )) !== \"string\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    name\", \"enam\", \"game\")) !== \"enam\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"aaaaaaa\", \"bb\", \"cc\")) !== \"aaaaaaa\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"abc\", \"\
    cba\")) !== \"abc\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"this\", \"game\", \"of\", \"footbott\")) !== \"footbott\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\", \"are\", \"\
    gonna\", \"rock\")) !== \"gonna\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"a\", \"mad\", \"nation\")) !== \"\
    nation\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\", \"is\", \"a\", \"prrk\")) !== \"this\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"b\")) !== \"b\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"play\", \"play\", \"play\")) !== \"\
    play\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "string\nname\naaaaaaa\n"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmprn1hcn7h.php:31\n\
    Stack trace:\n#0 /tmp/tmprn1hcn7h.php(42): test()\n#1 {main}\n  thrown in /tmp/tmprn1hcn7h.php\
    \ on line 31\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that accepts a list of strings.\n// The list\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// find_max([\"\
    name\", \"of\", \"string\"]) == \"string\"\n// find_max([\"name\", \"enam\", \"\
    game\"]) == \"enam\"\n// find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\
    \nfunction find_max($words) {\n    $max_word = \"\";\n    $max_count = 0;\n  \
    \  foreach ($words as $word) {\n        $count = count_unique_chars($word);\n\
    \        if ($count > $max_count) {\n            $max_count = $count;\n      \
    \      $max_word = $word;\n        }\n    }\n    return $max_word;\n}\n\nfunction\
    \ candidate(...$args) {\n    return find_max(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(\"name\", \"of\", \"string\")) !== \"string\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"name\"\
    , \"enam\", \"game\")) !== \"enam\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"aaaaaaa\", \"bb\", \"cc\")) !== \"aaaaaaa\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"abc\", \"\
    cba\")) !== \"abc\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"this\", \"game\", \"of\", \"footbott\")) !== \"footbott\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\", \"are\", \"\
    gonna\", \"rock\")) !== \"gonna\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"a\", \"mad\", \"nation\")) !== \"\
    nation\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\", \"is\", \"a\", \"prrk\")) !== \"this\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"b\")) !== \"b\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"play\", \"play\", \"play\")) !== \"\
    play\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Error: Call to undefined function count_unique_chars()\
    \ in /tmp/tmp374laa8z.php:13\nStack trace:\n#0 /tmp/tmp374laa8z.php(23): find_max()\n\
    #1 /tmp/tmp374laa8z.php(27): candidate()\n#2 /tmp/tmp374laa8z.php(39): test()\n\
    #3 {main}\n  thrown in /tmp/tmp374laa8z.php on line 13\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that accepts a list of strings.\n// The list\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// find_max([\"\
    name\", \"of\", \"string\"]) == \"string\"\n// find_max([\"name\", \"enam\", \"\
    game\"]) == \"enam\"\n// find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\
    \nfunction find_max($words) {\n  $max = 0;\n  $max_word = \"\";\n  foreach ($words\
    \ as $word) {\n    $unique_chars = array_unique(str_split($word));\n    if (count($unique_chars)\
    \ > $max) {\n      $max = count($unique_chars);\n      $max_word = $word;\n  \
    \  }\n  }\n  return $max_word;\n}\n\nfunction candidate(...$args) {\n    return\
    \ find_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    name\", \"of\", \"string\")) !== \"string\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"name\", \"enam\", \"game\")) !== \"enam\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"aaaaaaa\", \"\
    bb\", \"cc\")) !== \"aaaaaaa\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"abc\", \"cba\")) !== \"abc\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"play\", \"this\", \"game\", \"of\"\
    , \"footbott\")) !== \"footbott\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"gonna\", \"rock\")) !== \"gonna\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\",\
    \ \"are\", \"a\", \"mad\", \"nation\")) !== \"nation\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\", \"is\", \"a\", \"prrk\"\
    )) !== \"this\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    b\")) !== \"b\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"play\", \"play\")) !== \"play\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmprsm5lfdk.php:28\n\
    Stack trace:\n#0 /tmp/tmprsm5lfdk.php(39): test()\n#1 {main}\n  thrown in /tmp/tmprsm5lfdk.php\
    \ on line 28\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that accepts a list of strings.\n// The list\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// find_max([\"\
    name\", \"of\", \"string\"]) == \"string\"\n// find_max([\"name\", \"enam\", \"\
    game\"]) == \"enam\"\n// find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\
    \nfunction find_max($words) {\n    $max_word = \"\";\n    $max_count = 0;\n  \
    \  foreach ($words as $word) {\n        $count = count_unique_chars($word);\n\
    \        if ($count > $max_count) {\n            $max_count = $count;\n      \
    \      $max_word = $word;\n        }\n    }\n    return $max_word;\n}\n\nfunction\
    \ candidate(...$args) {\n    return find_max(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(\"name\", \"of\", \"string\")) !== \"string\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"name\"\
    , \"enam\", \"game\")) !== \"enam\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"aaaaaaa\", \"bb\", \"cc\")) !== \"aaaaaaa\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"abc\", \"\
    cba\")) !== \"abc\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"this\", \"game\", \"of\", \"footbott\")) !== \"footbott\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\", \"are\", \"\
    gonna\", \"rock\")) !== \"gonna\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"a\", \"mad\", \"nation\")) !== \"\
    nation\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\", \"is\", \"a\", \"prrk\")) !== \"this\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"b\")) !== \"b\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"play\", \"play\", \"play\")) !== \"\
    play\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Error: Call to undefined function count_unique_chars()\
    \ in /tmp/tmptb86f8sm.php:13\nStack trace:\n#0 /tmp/tmptb86f8sm.php(23): find_max()\n\
    #1 /tmp/tmptb86f8sm.php(27): candidate()\n#2 /tmp/tmptb86f8sm.php(39): test()\n\
    #3 {main}\n  thrown in /tmp/tmptb86f8sm.php on line 13\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that accepts a list of strings.\n// The list\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// find_max([\"\
    name\", \"of\", \"string\"]) == \"string\"\n// find_max([\"name\", \"enam\", \"\
    game\"]) == \"enam\"\n// find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\
    \nfunction find_max($words) {\n    $max = 0;\n    $max_word = \"\";\n    foreach\
    \ ($words as $word) {\n        $unique_chars = array_unique(str_split($word));\n\
    \        if (count($unique_chars) > $max) {\n            $max = count($unique_chars);\n\
    \            $max_word = $word;\n        }\n    }\n    return $max_word;\n}\n\n\
    function candidate(...$args) {\n    return find_max(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(\"name\", \"of\", \"string\")) !== \"\
    string\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    name\", \"enam\", \"game\")) !== \"enam\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"aaaaaaa\", \"bb\", \"cc\")) !== \"aaaaaaa\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"abc\", \"\
    cba\")) !== \"abc\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"this\", \"game\", \"of\", \"footbott\")) !== \"footbott\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\", \"are\", \"\
    gonna\", \"rock\")) !== \"gonna\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"a\", \"mad\", \"nation\")) !== \"\
    nation\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\", \"is\", \"a\", \"prrk\")) !== \"this\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"b\")) !== \"b\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"play\", \"play\", \"play\")) !== \"\
    play\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpp67aqpt4.php:28\n\
    Stack trace:\n#0 /tmp/tmpp67aqpt4.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpp67aqpt4.php\
    \ on line 28\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that accepts a list of strings.\n// The list\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// find_max([\"\
    name\", \"of\", \"string\"]) == \"string\"\n// find_max([\"name\", \"enam\", \"\
    game\"]) == \"enam\"\n// find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\
    \nfunction find_max($words) {\n    $max = 0;\n    $result = \"\";\n    foreach\
    \ ($words as $word) {\n        $unique = array_unique(str_split($word));\n   \
    \     if (count($unique) > $max) {\n            $max = count($unique);\n     \
    \       $result = $word;\n        }\n    }\n    return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return find_max(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(\"name\", \"of\", \"string\")) !== \"string\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"name\"\
    , \"enam\", \"game\")) !== \"enam\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"aaaaaaa\", \"bb\", \"cc\")) !== \"aaaaaaa\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"abc\", \"\
    cba\")) !== \"abc\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"this\", \"game\", \"of\", \"footbott\")) !== \"footbott\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\", \"are\", \"\
    gonna\", \"rock\")) !== \"gonna\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"a\", \"mad\", \"nation\")) !== \"\
    nation\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\", \"is\", \"a\", \"prrk\")) !== \"this\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"b\")) !== \"b\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"play\", \"play\", \"play\")) !== \"\
    play\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpn0ak7exd.php:28\n\
    Stack trace:\n#0 /tmp/tmpn0ak7exd.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpn0ak7exd.php\
    \ on line 28\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that accepts a list of strings.\n// The list\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// find_max([\"\
    name\", \"of\", \"string\"]) == \"string\"\n// find_max([\"name\", \"enam\", \"\
    game\"]) == \"enam\"\n// find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\
    \nfunction find_max($words) {\n    $max_word = \"\";\n    $max_count = 0;\n  \
    \  foreach ($words as $word) {\n        $count = count_unique_chars($word);\n\
    \        if ($count > $max_count) {\n            $max_count = $count;\n      \
    \      $max_word = $word;\n        }\n    }\n    return $max_word;\n}\n\nfunction\
    \ candidate(...$args) {\n    return find_max(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(\"name\", \"of\", \"string\")) !== \"string\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"name\"\
    , \"enam\", \"game\")) !== \"enam\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"aaaaaaa\", \"bb\", \"cc\")) !== \"aaaaaaa\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"abc\", \"\
    cba\")) !== \"abc\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"this\", \"game\", \"of\", \"footbott\")) !== \"footbott\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\", \"are\", \"\
    gonna\", \"rock\")) !== \"gonna\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"a\", \"mad\", \"nation\")) !== \"\
    nation\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\", \"is\", \"a\", \"prrk\")) !== \"this\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"b\")) !== \"b\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"play\", \"play\", \"play\")) !== \"\
    play\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Error: Call to undefined function count_unique_chars()\
    \ in /tmp/tmpkf0sty2j.php:13\nStack trace:\n#0 /tmp/tmpkf0sty2j.php(23): find_max()\n\
    #1 /tmp/tmpkf0sty2j.php(27): candidate()\n#2 /tmp/tmpkf0sty2j.php(39): test()\n\
    #3 {main}\n  thrown in /tmp/tmpkf0sty2j.php on line 13\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that accepts a list of strings.\n// The list\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// find_max([\"\
    name\", \"of\", \"string\"]) == \"string\"\n// find_max([\"name\", \"enam\", \"\
    game\"]) == \"enam\"\n// find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\
    \nfunction find_max($words) {\n    $max_word = \"\";\n    $max_count = 0;\n  \
    \  foreach ($words as $word) {\n        $count = count_unique_chars($word);\n\
    \        if ($count > $max_count) {\n            $max_count = $count;\n      \
    \      $max_word = $word;\n        }\n    }\n    return $max_word;\n}\n\nfunction\
    \ candidate(...$args) {\n    return find_max(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(\"name\", \"of\", \"string\")) !== \"string\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"name\"\
    , \"enam\", \"game\")) !== \"enam\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"aaaaaaa\", \"bb\", \"cc\")) !== \"aaaaaaa\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"abc\", \"\
    cba\")) !== \"abc\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"this\", \"game\", \"of\", \"footbott\")) !== \"footbott\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\", \"are\", \"\
    gonna\", \"rock\")) !== \"gonna\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"a\", \"mad\", \"nation\")) !== \"\
    nation\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\", \"is\", \"a\", \"prrk\")) !== \"this\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"b\")) !== \"b\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"play\", \"play\", \"play\")) !== \"\
    play\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Error: Call to undefined function count_unique_chars()\
    \ in /tmp/tmp0ddonlqx.php:13\nStack trace:\n#0 /tmp/tmp0ddonlqx.php(23): find_max()\n\
    #1 /tmp/tmp0ddonlqx.php(27): candidate()\n#2 /tmp/tmp0ddonlqx.php(39): test()\n\
    #3 {main}\n  thrown in /tmp/tmp0ddonlqx.php on line 13\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that accepts a list of strings.\n// The list\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// find_max([\"\
    name\", \"of\", \"string\"]) == \"string\"\n// find_max([\"name\", \"enam\", \"\
    game\"]) == \"enam\"\n// find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\
    \nfunction find_max($words) {\n    $max_word = \"\";\n    $max_count = 0;\n  \
    \  foreach ($words as $word) {\n        $count = count_unique_chars($word);\n\
    \        if ($count > $max_count) {\n            $max_count = $count;\n      \
    \      $max_word = $word;\n        }\n    }\n    return $max_word;\n}\n\nfunction\
    \ candidate(...$args) {\n    return find_max(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(\"name\", \"of\", \"string\")) !== \"string\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"name\"\
    , \"enam\", \"game\")) !== \"enam\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"aaaaaaa\", \"bb\", \"cc\")) !== \"aaaaaaa\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"abc\", \"\
    cba\")) !== \"abc\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"this\", \"game\", \"of\", \"footbott\")) !== \"footbott\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\", \"are\", \"\
    gonna\", \"rock\")) !== \"gonna\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"a\", \"mad\", \"nation\")) !== \"\
    nation\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\", \"is\", \"a\", \"prrk\")) !== \"this\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"b\")) !== \"b\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"play\", \"play\", \"play\")) !== \"\
    play\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Error: Call to undefined function count_unique_chars()\
    \ in /tmp/tmpmyva2ry6.php:13\nStack trace:\n#0 /tmp/tmpmyva2ry6.php(23): find_max()\n\
    #1 /tmp/tmpmyva2ry6.php(27): candidate()\n#2 /tmp/tmpmyva2ry6.php(39): test()\n\
    #3 {main}\n  thrown in /tmp/tmpmyva2ry6.php on line 13\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that accepts a list of strings.\n// The list\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// find_max([\"\
    name\", \"of\", \"string\"]) == \"string\"\n// find_max([\"name\", \"enam\", \"\
    game\"]) == \"enam\"\n// find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\
    \nfunction find_max($words) {\n    $max_word = \"\";\n    $max_count = 0;\n  \
    \  foreach ($words as $word) {\n        $count = count_unique_chars($word);\n\
    \        if ($count > $max_count) {\n            $max_count = $count;\n      \
    \      $max_word = $word;\n        }\n    }\n    return $max_word;\n}\n\nfunction\
    \ candidate(...$args) {\n    return find_max(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(\"name\", \"of\", \"string\")) !== \"string\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"name\"\
    , \"enam\", \"game\")) !== \"enam\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"aaaaaaa\", \"bb\", \"cc\")) !== \"aaaaaaa\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"abc\", \"\
    cba\")) !== \"abc\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"this\", \"game\", \"of\", \"footbott\")) !== \"footbott\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\", \"are\", \"\
    gonna\", \"rock\")) !== \"gonna\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"a\", \"mad\", \"nation\")) !== \"\
    nation\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\", \"is\", \"a\", \"prrk\")) !== \"this\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"b\")) !== \"b\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"play\", \"play\", \"play\")) !== \"\
    play\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Error: Call to undefined function count_unique_chars()\
    \ in /tmp/tmp78f32xsh.php:13\nStack trace:\n#0 /tmp/tmp78f32xsh.php(23): find_max()\n\
    #1 /tmp/tmp78f32xsh.php(27): candidate()\n#2 /tmp/tmp78f32xsh.php(39): test()\n\
    #3 {main}\n  thrown in /tmp/tmp78f32xsh.php on line 13\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that accepts a list of strings.\n// The list\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// find_max([\"\
    name\", \"of\", \"string\"]) == \"string\"\n// find_max([\"name\", \"enam\", \"\
    game\"]) == \"enam\"\n// find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\
    \nfunction find_max($words) {\n  $max_word = \"\";\n  $max_count = 0;\n  foreach\
    \ ($words as $word) {\n    $count = count_unique_chars($word);\n    if ($count\
    \ > $max_count) {\n      $max_count = $count;\n      $max_word = $word;\n    }\n\
    \  }\n  return $max_word;\n}\n\nfunction candidate(...$args) {\n    return find_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(\"name\", \"of\", \"string\"\
    )) !== \"string\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    name\", \"enam\", \"game\")) !== \"enam\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"aaaaaaa\", \"bb\", \"cc\")) !== \"aaaaaaa\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"abc\", \"\
    cba\")) !== \"abc\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"this\", \"game\", \"of\", \"footbott\")) !== \"footbott\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\", \"are\", \"\
    gonna\", \"rock\")) !== \"gonna\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"a\", \"mad\", \"nation\")) !== \"\
    nation\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\", \"is\", \"a\", \"prrk\")) !== \"this\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"b\")) !== \"b\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"play\", \"play\", \"play\")) !== \"\
    play\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Error: Call to undefined function count_unique_chars()\
    \ in /tmp/tmptukjp9su.php:13\nStack trace:\n#0 /tmp/tmptukjp9su.php(23): find_max()\n\
    #1 /tmp/tmptukjp9su.php(27): candidate()\n#2 /tmp/tmptukjp9su.php(39): test()\n\
    #3 {main}\n  thrown in /tmp/tmptukjp9su.php on line 13\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that accepts a list of strings.\n// The list\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// find_max([\"\
    name\", \"of\", \"string\"]) == \"string\"\n// find_max([\"name\", \"enam\", \"\
    game\"]) == \"enam\"\n// find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\
    \nfunction find_max($words) {\n    $max = 0;\n    $max_word = \"\";\n    foreach\
    \ ($words as $word) {\n        $unique_chars = array_unique(str_split($word));\n\
    \        if (count($unique_chars) > $max) {\n            $max = count($unique_chars);\n\
    \            $max_word = $word;\n        }\n    }\n    return $max_word;\n}\n\n\
    function candidate(...$args) {\n    return find_max(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(\"name\", \"of\", \"string\")) !== \"\
    string\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    name\", \"enam\", \"game\")) !== \"enam\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"aaaaaaa\", \"bb\", \"cc\")) !== \"aaaaaaa\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"abc\", \"\
    cba\")) !== \"abc\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"this\", \"game\", \"of\", \"footbott\")) !== \"footbott\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\", \"are\", \"\
    gonna\", \"rock\")) !== \"gonna\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"a\", \"mad\", \"nation\")) !== \"\
    nation\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\", \"is\", \"a\", \"prrk\")) !== \"this\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"b\")) !== \"b\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"play\", \"play\", \"play\")) !== \"\
    play\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp_cuj9r48.php:28\n\
    Stack trace:\n#0 /tmp/tmp_cuj9r48.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp_cuj9r48.php\
    \ on line 28\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that accepts a list of strings.\n// The list\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// find_max([\"\
    name\", \"of\", \"string\"]) == \"string\"\n// find_max([\"name\", \"enam\", \"\
    game\"]) == \"enam\"\n// find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\
    \nfunction find_max($words) {\n    $max_word = \"\";\n    $max_count = 0;\n  \
    \  foreach ($words as $word) {\n        $unique_chars = array_unique(str_split($word));\n\
    \        $unique_count = count($unique_chars);\n        if ($unique_count > $max_count)\
    \ {\n            $max_count = $unique_count;\n            $max_word = $word;\n\
    \        }\n    }\n    return $max_word;\n}\n\nfunction candidate(...$args) {\n\
    \    return find_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    name\", \"of\", \"string\")) !== \"string\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"name\", \"enam\", \"game\")) !== \"enam\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"aaaaaaa\", \"\
    bb\", \"cc\")) !== \"aaaaaaa\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"abc\", \"cba\")) !== \"abc\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"play\", \"this\", \"game\", \"of\"\
    , \"footbott\")) !== \"footbott\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"gonna\", \"rock\")) !== \"gonna\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\",\
    \ \"are\", \"a\", \"mad\", \"nation\")) !== \"nation\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\", \"is\", \"a\", \"prrk\"\
    )) !== \"this\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    b\")) !== \"b\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"play\", \"play\")) !== \"play\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp8f8w2wx2.php:29\n\
    Stack trace:\n#0 /tmp/tmp8f8w2wx2.php(40): test()\n#1 {main}\n  thrown in /tmp/tmp8f8w2wx2.php\
    \ on line 29\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that accepts a list of strings.\n// The list\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// find_max([\"\
    name\", \"of\", \"string\"]) == \"string\"\n// find_max([\"name\", \"enam\", \"\
    game\"]) == \"enam\"\n// find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\
    \nfunction find_max($words) {\n  $max = 0;\n  $max_word = \"\";\n  foreach ($words\
    \ as $word) {\n    $unique_chars = array_unique(str_split($word));\n    if (count($unique_chars)\
    \ > $max) {\n      $max = count($unique_chars);\n      $max_word = $word;\n  \
    \  }\n  }\n  return $max_word;\n}\n\nfunction candidate(...$args) {\n    return\
    \ find_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    name\", \"of\", \"string\")) !== \"string\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"name\", \"enam\", \"game\")) !== \"enam\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"aaaaaaa\", \"\
    bb\", \"cc\")) !== \"aaaaaaa\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"abc\", \"cba\")) !== \"abc\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"play\", \"this\", \"game\", \"of\"\
    , \"footbott\")) !== \"footbott\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"gonna\", \"rock\")) !== \"gonna\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\",\
    \ \"are\", \"a\", \"mad\", \"nation\")) !== \"nation\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\", \"is\", \"a\", \"prrk\"\
    )) !== \"this\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    b\")) !== \"b\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"play\", \"play\")) !== \"play\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpwy5mf769.php:28\n\
    Stack trace:\n#0 /tmp/tmpwy5mf769.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpwy5mf769.php\
    \ on line 28\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that accepts a list of strings.\n// The list\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// find_max([\"\
    name\", \"of\", \"string\"]) == \"string\"\n// find_max([\"name\", \"enam\", \"\
    game\"]) == \"enam\"\n// find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\
    \nfunction find_max($words) {\n    $max_count = 0;\n    $max_word = \"\";\n  \
    \  foreach ($words as $word) {\n        $count = count_unique_chars($word);\n\
    \        if ($count > $max_count) {\n            $max_count = $count;\n      \
    \      $max_word = $word;\n        }\n    }\n    return $max_word;\n}\n\nfunction\
    \ candidate(...$args) {\n    return find_max(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(\"name\", \"of\", \"string\")) !== \"string\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"name\"\
    , \"enam\", \"game\")) !== \"enam\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"aaaaaaa\", \"bb\", \"cc\")) !== \"aaaaaaa\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"abc\", \"\
    cba\")) !== \"abc\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"this\", \"game\", \"of\", \"footbott\")) !== \"footbott\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\", \"are\", \"\
    gonna\", \"rock\")) !== \"gonna\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"a\", \"mad\", \"nation\")) !== \"\
    nation\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\", \"is\", \"a\", \"prrk\")) !== \"this\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"b\")) !== \"b\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"play\", \"play\", \"play\")) !== \"\
    play\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Error: Call to undefined function count_unique_chars()\
    \ in /tmp/tmpzv3pd_v4.php:13\nStack trace:\n#0 /tmp/tmpzv3pd_v4.php(23): find_max()\n\
    #1 /tmp/tmpzv3pd_v4.php(27): candidate()\n#2 /tmp/tmpzv3pd_v4.php(39): test()\n\
    #3 {main}\n  thrown in /tmp/tmpzv3pd_v4.php on line 13\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that accepts a list of strings.\n// The list\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// find_max([\"\
    name\", \"of\", \"string\"]) == \"string\"\n// find_max([\"name\", \"enam\", \"\
    game\"]) == \"enam\"\n// find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\
    \nfunction find_max($words) {\n    $max_count = 0;\n    $max_word = \"\";\n  \
    \  foreach ($words as $word) {\n        $count = count_unique_characters($word);\n\
    \        if ($count > $max_count) {\n            $max_count = $count;\n      \
    \      $max_word = $word;\n        }\n    }\n    return $max_word;\n}\n\nfunction\
    \ candidate(...$args) {\n    return find_max(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(\"name\", \"of\", \"string\")) !== \"string\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"name\"\
    , \"enam\", \"game\")) !== \"enam\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"aaaaaaa\", \"bb\", \"cc\")) !== \"aaaaaaa\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"abc\", \"\
    cba\")) !== \"abc\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"this\", \"game\", \"of\", \"footbott\")) !== \"footbott\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\", \"are\", \"\
    gonna\", \"rock\")) !== \"gonna\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"a\", \"mad\", \"nation\")) !== \"\
    nation\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\", \"is\", \"a\", \"prrk\")) !== \"this\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"b\")) !== \"b\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"play\", \"play\", \"play\")) !== \"\
    play\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Error: Call to undefined function count_unique_characters()\
    \ in /tmp/tmp0i7wq60q.php:13\nStack trace:\n#0 /tmp/tmp0i7wq60q.php(23): find_max()\n\
    #1 /tmp/tmp0i7wq60q.php(27): candidate()\n#2 /tmp/tmp0i7wq60q.php(39): test()\n\
    #3 {main}\n  thrown in /tmp/tmp0i7wq60q.php on line 13\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that accepts a list of strings.\n// The list\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// find_max([\"\
    name\", \"of\", \"string\"]) == \"string\"\n// find_max([\"name\", \"enam\", \"\
    game\"]) == \"enam\"\n// find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\
    \nfunction find_max($words) {\n    $max = 0;\n    $max_word = \"\";\n    foreach\
    \ ($words as $word) {\n        $unique_chars = array_unique(str_split($word));\n\
    \        if (count($unique_chars) > $max) {\n            $max = count($unique_chars);\n\
    \            $max_word = $word;\n        }\n    }\n    return $max_word;\n}\n\n\
    echo find_max([\"name\", \"of\", \"string\"]) . \"\\n\";\necho find_max([\"name\"\
    , \"enam\", \"game\"]) . \"\\n\";\necho find_max([\"aaaaaaa\", \"bb\" ,\"cc\"\
    ]) . \"\\n\";\n\nfunction candidate(...$args) {\n    return find_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(\"name\", \"of\", \"string\"\
    )) !== \"string\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    name\", \"enam\", \"game\")) !== \"enam\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"aaaaaaa\", \"bb\", \"cc\")) !== \"aaaaaaa\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"abc\", \"\
    cba\")) !== \"abc\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"this\", \"game\", \"of\", \"footbott\")) !== \"footbott\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\", \"are\", \"\
    gonna\", \"rock\")) !== \"gonna\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"a\", \"mad\", \"nation\")) !== \"\
    nation\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\", \"is\", \"a\", \"prrk\")) !== \"this\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"b\")) !== \"b\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"play\", \"play\", \"play\")) !== \"\
    play\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "string\nname\naaaaaaa\n"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp9qfo04vy.php:32\n\
    Stack trace:\n#0 /tmp/tmp9qfo04vy.php(43): test()\n#1 {main}\n  thrown in /tmp/tmp9qfo04vy.php\
    \ on line 32\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that accepts a list of strings.\n// The list\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// find_max([\"\
    name\", \"of\", \"string\"]) == \"string\"\n// find_max([\"name\", \"enam\", \"\
    game\"]) == \"enam\"\n// find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\
    \nfunction find_max($words) {\n    $max = 0;\n    $max_word = \"\";\n    foreach\
    \ ($words as $word) {\n        $unique_chars = array_unique(str_split($word));\n\
    \        if (count($unique_chars) > $max) {\n            $max = count($unique_chars);\n\
    \            $max_word = $word;\n        }\n    }\n    return $max_word;\n}\n\n\
    function candidate(...$args) {\n    return find_max(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(\"name\", \"of\", \"string\")) !== \"\
    string\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    name\", \"enam\", \"game\")) !== \"enam\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"aaaaaaa\", \"bb\", \"cc\")) !== \"aaaaaaa\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"abc\", \"\
    cba\")) !== \"abc\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"this\", \"game\", \"of\", \"footbott\")) !== \"footbott\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\", \"are\", \"\
    gonna\", \"rock\")) !== \"gonna\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"a\", \"mad\", \"nation\")) !== \"\
    nation\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\", \"is\", \"a\", \"prrk\")) !== \"this\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"b\")) !== \"b\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"play\", \"play\", \"play\")) !== \"\
    play\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpdh4js9kw.php:28\n\
    Stack trace:\n#0 /tmp/tmpdh4js9kw.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpdh4js9kw.php\
    \ on line 28\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that accepts a list of strings.\n// The list\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// find_max([\"\
    name\", \"of\", \"string\"]) == \"string\"\n// find_max([\"name\", \"enam\", \"\
    game\"]) == \"enam\"\n// find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\
    \nfunction find_max($words) {\n    $max = 0;\n    $max_word = \"\";\n    foreach\
    \ ($words as $word) {\n        $unique_chars = array_unique(str_split($word));\n\
    \        if (count($unique_chars) > $max) {\n            $max = count($unique_chars);\n\
    \            $max_word = $word;\n        }\n    }\n    return $max_word;\n}\n\n\
    $words = [\"name\", \"of\", \"string\"];\necho find_max($words) . \"\\n\";\n\n\
    $words = [\"name\", \"enam\", \"game\"];\necho find_max($words) . \"\\n\";\n\n\
    $words = [\"aaaaaaa\", \"bb\" ,\"cc\"];\necho find_max($words) . \"\\n\";\nfunction\
    \ candidate(...$args) {\n    return find_max(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(\"name\", \"of\", \"string\")) !== \"string\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"name\"\
    , \"enam\", \"game\")) !== \"enam\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"aaaaaaa\", \"bb\", \"cc\")) !== \"aaaaaaa\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"abc\", \"\
    cba\")) !== \"abc\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"this\", \"game\", \"of\", \"footbott\")) !== \"footbott\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\", \"are\", \"\
    gonna\", \"rock\")) !== \"gonna\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"a\", \"mad\", \"nation\")) !== \"\
    nation\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\", \"is\", \"a\", \"prrk\")) !== \"this\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"b\")) !== \"b\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"play\", \"play\", \"play\")) !== \"\
    play\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "string\nname\naaaaaaa\n"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmps5h4jhbu.php:36\n\
    Stack trace:\n#0 /tmp/tmps5h4jhbu.php(47): test()\n#1 {main}\n  thrown in /tmp/tmps5h4jhbu.php\
    \ on line 36\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that accepts a list of strings.\n// The list\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// find_max([\"\
    name\", \"of\", \"string\"]) == \"string\"\n// find_max([\"name\", \"enam\", \"\
    game\"]) == \"enam\"\n// find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\
    \nfunction find_max($words) {\n    $max = 0;\n    $max_word = \"\";\n    foreach\
    \ ($words as $word) {\n        $unique_chars = array_unique(str_split($word));\n\
    \        if (count($unique_chars) > $max) {\n            $max = count($unique_chars);\n\
    \            $max_word = $word;\n        }\n    }\n    return $max_word;\n}\n\n\
    $words = [\"name\", \"of\", \"string\"];\necho find_max($words) . \"\\n\";\n$words\
    \ = [\"name\", \"enam\", \"game\"];\necho find_max($words) . \"\\n\";\n$words\
    \ = [\"aaaaaaa\", \"bb\" ,\"cc\"];\necho find_max($words) . \"\\n\";\nfunction\
    \ candidate(...$args) {\n    return find_max(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(\"name\", \"of\", \"string\")) !== \"string\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"name\"\
    , \"enam\", \"game\")) !== \"enam\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"aaaaaaa\", \"bb\", \"cc\")) !== \"aaaaaaa\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"abc\", \"\
    cba\")) !== \"abc\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"this\", \"game\", \"of\", \"footbott\")) !== \"footbott\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\", \"are\", \"\
    gonna\", \"rock\")) !== \"gonna\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"a\", \"mad\", \"nation\")) !== \"\
    nation\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\", \"is\", \"a\", \"prrk\")) !== \"this\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"b\")) !== \"b\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"play\", \"play\", \"play\")) !== \"\
    play\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "string\nname\naaaaaaa\n"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp35s0zdtv.php:34\n\
    Stack trace:\n#0 /tmp/tmp35s0zdtv.php(45): test()\n#1 {main}\n  thrown in /tmp/tmp35s0zdtv.php\
    \ on line 34\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that accepts a list of strings.\n// The list\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// find_max([\"\
    name\", \"of\", \"string\"]) == \"string\"\n// find_max([\"name\", \"enam\", \"\
    game\"]) == \"enam\"\n// find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\
    \nfunction find_max($words) {\n  $max = 0;\n  $max_word = '';\n  foreach ($words\
    \ as $word) {\n    $unique_chars = array_unique(str_split($word));\n    if (count($unique_chars)\
    \ > $max) {\n      $max = count($unique_chars);\n      $max_word = $word;\n  \
    \  }\n  }\n  return $max_word;\n}\n\n$words = [\"name\", \"of\", \"string\"];\n\
    echo find_max($words) . \"\\n\";\n\n$words = [\"name\", \"enam\", \"game\"];\n\
    echo find_max($words) . \"\\n\";\n\n$words = [\"aaaaaaa\", \"bb\" ,\"cc\"];\n\
    echo find_max($words) . \"\\n\";\nfunction candidate(...$args) {\n    return find_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(\"name\", \"of\", \"string\"\
    )) !== \"string\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    name\", \"enam\", \"game\")) !== \"enam\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"aaaaaaa\", \"bb\", \"cc\")) !== \"aaaaaaa\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"abc\", \"\
    cba\")) !== \"abc\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"this\", \"game\", \"of\", \"footbott\")) !== \"footbott\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\", \"are\", \"\
    gonna\", \"rock\")) !== \"gonna\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"a\", \"mad\", \"nation\")) !== \"\
    nation\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\", \"is\", \"a\", \"prrk\")) !== \"this\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"b\")) !== \"b\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"play\", \"play\", \"play\")) !== \"\
    play\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "string\nname\naaaaaaa\n"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpoiso9q4i.php:36\n\
    Stack trace:\n#0 /tmp/tmpoiso9q4i.php(47): test()\n#1 {main}\n  thrown in /tmp/tmpoiso9q4i.php\
    \ on line 36\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that accepts a list of strings.\n// The list\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// find_max([\"\
    name\", \"of\", \"string\"]) == \"string\"\n// find_max([\"name\", \"enam\", \"\
    game\"]) == \"enam\"\n// find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\
    \nfunction find_max($words) {\n    $max_word = \"\";\n    $max_count = 0;\n  \
    \  foreach ($words as $word) {\n        $count = count_unique_chars($word);\n\
    \        if ($count > $max_count) {\n            $max_count = $count;\n      \
    \      $max_word = $word;\n        }\n    }\n    return $max_word;\n}\n\nfunction\
    \ candidate(...$args) {\n    return find_max(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(\"name\", \"of\", \"string\")) !== \"string\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"name\"\
    , \"enam\", \"game\")) !== \"enam\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"aaaaaaa\", \"bb\", \"cc\")) !== \"aaaaaaa\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"abc\", \"\
    cba\")) !== \"abc\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"this\", \"game\", \"of\", \"footbott\")) !== \"footbott\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\", \"are\", \"\
    gonna\", \"rock\")) !== \"gonna\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"a\", \"mad\", \"nation\")) !== \"\
    nation\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\", \"is\", \"a\", \"prrk\")) !== \"this\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"b\")) !== \"b\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"play\", \"play\", \"play\")) !== \"\
    play\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Error: Call to undefined function count_unique_chars()\
    \ in /tmp/tmp5jvn_uj1.php:13\nStack trace:\n#0 /tmp/tmp5jvn_uj1.php(23): find_max()\n\
    #1 /tmp/tmp5jvn_uj1.php(27): candidate()\n#2 /tmp/tmp5jvn_uj1.php(39): test()\n\
    #3 {main}\n  thrown in /tmp/tmp5jvn_uj1.php on line 13\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that accepts a list of strings.\n// The list\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// find_max([\"\
    name\", \"of\", \"string\"]) == \"string\"\n// find_max([\"name\", \"enam\", \"\
    game\"]) == \"enam\"\n// find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\
    \nfunction find_max($words) {\n    $max_word = \"\";\n    $max_count = 0;\n  \
    \  foreach ($words as $word) {\n        $count = count_unique_chars($word);\n\
    \        if ($count > $max_count) {\n            $max_count = $count;\n      \
    \      $max_word = $word;\n        }\n    }\n    return $max_word;\n}\n\nfunction\
    \ candidate(...$args) {\n    return find_max(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(\"name\", \"of\", \"string\")) !== \"string\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"name\"\
    , \"enam\", \"game\")) !== \"enam\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"aaaaaaa\", \"bb\", \"cc\")) !== \"aaaaaaa\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"abc\", \"\
    cba\")) !== \"abc\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"this\", \"game\", \"of\", \"footbott\")) !== \"footbott\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\", \"are\", \"\
    gonna\", \"rock\")) !== \"gonna\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"a\", \"mad\", \"nation\")) !== \"\
    nation\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\", \"is\", \"a\", \"prrk\")) !== \"this\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"b\")) !== \"b\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"play\", \"play\", \"play\")) !== \"\
    play\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Error: Call to undefined function count_unique_chars()\
    \ in /tmp/tmpae5m15z3.php:13\nStack trace:\n#0 /tmp/tmpae5m15z3.php(23): find_max()\n\
    #1 /tmp/tmpae5m15z3.php(27): candidate()\n#2 /tmp/tmpae5m15z3.php(39): test()\n\
    #3 {main}\n  thrown in /tmp/tmpae5m15z3.php on line 13\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that accepts a list of strings.\n// The list\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// find_max([\"\
    name\", \"of\", \"string\"]) == \"string\"\n// find_max([\"name\", \"enam\", \"\
    game\"]) == \"enam\"\n// find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\
    \nfunction find_max($words) {\n    $max = 0;\n    $max_word = '';\n    foreach\
    \ ($words as $word) {\n        $unique_chars = array_unique(str_split($word));\n\
    \        if (count($unique_chars) > $max) {\n            $max = count($unique_chars);\n\
    \            $max_word = $word;\n        }\n    }\n    return $max_word;\n}\n\n\
    echo find_max([\"name\", \"of\", \"string\"]) . \"\\n\";\necho find_max([\"name\"\
    , \"enam\", \"game\"]) . \"\\n\";\necho find_max([\"aaaaaaa\", \"bb\" ,\"cc\"\
    ]) . \"\\n\";\nfunction candidate(...$args) {\n    return find_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(\"name\", \"of\", \"string\"\
    )) !== \"string\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    name\", \"enam\", \"game\")) !== \"enam\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"aaaaaaa\", \"bb\", \"cc\")) !== \"aaaaaaa\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"abc\", \"\
    cba\")) !== \"abc\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"this\", \"game\", \"of\", \"footbott\")) !== \"footbott\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\", \"are\", \"\
    gonna\", \"rock\")) !== \"gonna\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"a\", \"mad\", \"nation\")) !== \"\
    nation\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\", \"is\", \"a\", \"prrk\")) !== \"this\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"b\")) !== \"b\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"play\", \"play\", \"play\")) !== \"\
    play\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "string\nname\naaaaaaa\n"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp4wfv6tae.php:31\n\
    Stack trace:\n#0 /tmp/tmp4wfv6tae.php(42): test()\n#1 {main}\n  thrown in /tmp/tmp4wfv6tae.php\
    \ on line 31\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that accepts a list of strings.\n// The list\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// find_max([\"\
    name\", \"of\", \"string\"]) == \"string\"\n// find_max([\"name\", \"enam\", \"\
    game\"]) == \"enam\"\n// find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\
    \nfunction find_max($words) {\n    $max_word = \"\";\n    $max_count = 0;\n  \
    \  foreach ($words as $word) {\n        $count = count_unique_chars($word);\n\
    \        if ($count > $max_count) {\n            $max_count = $count;\n      \
    \      $max_word = $word;\n        }\n    }\n    return $max_word;\n}\n\nfunction\
    \ candidate(...$args) {\n    return find_max(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(\"name\", \"of\", \"string\")) !== \"string\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"name\"\
    , \"enam\", \"game\")) !== \"enam\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"aaaaaaa\", \"bb\", \"cc\")) !== \"aaaaaaa\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"abc\", \"\
    cba\")) !== \"abc\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"this\", \"game\", \"of\", \"footbott\")) !== \"footbott\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\", \"are\", \"\
    gonna\", \"rock\")) !== \"gonna\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"a\", \"mad\", \"nation\")) !== \"\
    nation\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\", \"is\", \"a\", \"prrk\")) !== \"this\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"b\")) !== \"b\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"play\", \"play\", \"play\")) !== \"\
    play\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Error: Call to undefined function count_unique_chars()\
    \ in /tmp/tmplymxgxhn.php:13\nStack trace:\n#0 /tmp/tmplymxgxhn.php(23): find_max()\n\
    #1 /tmp/tmplymxgxhn.php(27): candidate()\n#2 /tmp/tmplymxgxhn.php(39): test()\n\
    #3 {main}\n  thrown in /tmp/tmplymxgxhn.php on line 13\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that accepts a list of strings.\n// The list\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// find_max([\"\
    name\", \"of\", \"string\"]) == \"string\"\n// find_max([\"name\", \"enam\", \"\
    game\"]) == \"enam\"\n// find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\
    \nfunction find_max($words) {\n    $max_word = \"\";\n    $max_count = 0;\n  \
    \  foreach ($words as $word) {\n        $unique_chars = array_unique(str_split($word));\n\
    \        $unique_count = count($unique_chars);\n        if ($unique_count > $max_count)\
    \ {\n            $max_count = $unique_count;\n            $max_word = $word;\n\
    \        }\n    }\n    return $max_word;\n}\n\nfunction candidate(...$args) {\n\
    \    return find_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    name\", \"of\", \"string\")) !== \"string\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"name\", \"enam\", \"game\")) !== \"enam\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"aaaaaaa\", \"\
    bb\", \"cc\")) !== \"aaaaaaa\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"abc\", \"cba\")) !== \"abc\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"play\", \"this\", \"game\", \"of\"\
    , \"footbott\")) !== \"footbott\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"gonna\", \"rock\")) !== \"gonna\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\",\
    \ \"are\", \"a\", \"mad\", \"nation\")) !== \"nation\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\", \"is\", \"a\", \"prrk\"\
    )) !== \"this\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    b\")) !== \"b\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"play\", \"play\")) !== \"play\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpwo7w17yu.php:29\n\
    Stack trace:\n#0 /tmp/tmpwo7w17yu.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpwo7w17yu.php\
    \ on line 29\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that accepts a list of strings.\n// The list\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// find_max([\"\
    name\", \"of\", \"string\"]) == \"string\"\n// find_max([\"name\", \"enam\", \"\
    game\"]) == \"enam\"\n// find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\
    \nfunction find_max($words) {\n  $max_word = \"\";\n  $max_count = 0;\n  foreach\
    \ ($words as $word) {\n    $count = count_unique_chars($word);\n    if ($count\
    \ > $max_count) {\n      $max_count = $count;\n      $max_word = $word;\n    }\n\
    \  }\n  return $max_word;\n}\n\nfunction candidate(...$args) {\n    return find_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(\"name\", \"of\", \"string\"\
    )) !== \"string\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    name\", \"enam\", \"game\")) !== \"enam\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"aaaaaaa\", \"bb\", \"cc\")) !== \"aaaaaaa\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"abc\", \"\
    cba\")) !== \"abc\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"this\", \"game\", \"of\", \"footbott\")) !== \"footbott\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\", \"are\", \"\
    gonna\", \"rock\")) !== \"gonna\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"a\", \"mad\", \"nation\")) !== \"\
    nation\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\", \"is\", \"a\", \"prrk\")) !== \"this\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"b\")) !== \"b\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"play\", \"play\", \"play\")) !== \"\
    play\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Error: Call to undefined function count_unique_chars()\
    \ in /tmp/tmpwhpwl2pw.php:13\nStack trace:\n#0 /tmp/tmpwhpwl2pw.php(23): find_max()\n\
    #1 /tmp/tmpwhpwl2pw.php(27): candidate()\n#2 /tmp/tmpwhpwl2pw.php(39): test()\n\
    #3 {main}\n  thrown in /tmp/tmpwhpwl2pw.php on line 13\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that accepts a list of strings.\n// The list\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// find_max([\"\
    name\", \"of\", \"string\"]) == \"string\"\n// find_max([\"name\", \"enam\", \"\
    game\"]) == \"enam\"\n// find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\
    \nfunction find_max($words) {\n    $max_word = \"\";\n    $max_count = 0;\n  \
    \  foreach ($words as $word) {\n        $count = count_unique_chars($word);\n\
    \        if ($count > $max_count) {\n            $max_count = $count;\n      \
    \      $max_word = $word;\n        }\n    }\n    return $max_word;\n}\n\nfunction\
    \ candidate(...$args) {\n    return find_max(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(\"name\", \"of\", \"string\")) !== \"string\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"name\"\
    , \"enam\", \"game\")) !== \"enam\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"aaaaaaa\", \"bb\", \"cc\")) !== \"aaaaaaa\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"abc\", \"\
    cba\")) !== \"abc\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"this\", \"game\", \"of\", \"footbott\")) !== \"footbott\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\", \"are\", \"\
    gonna\", \"rock\")) !== \"gonna\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"a\", \"mad\", \"nation\")) !== \"\
    nation\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\", \"is\", \"a\", \"prrk\")) !== \"this\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"b\")) !== \"b\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"play\", \"play\", \"play\")) !== \"\
    play\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Error: Call to undefined function count_unique_chars()\
    \ in /tmp/tmpb_urlxsf.php:13\nStack trace:\n#0 /tmp/tmpb_urlxsf.php(23): find_max()\n\
    #1 /tmp/tmpb_urlxsf.php(27): candidate()\n#2 /tmp/tmpb_urlxsf.php(39): test()\n\
    #3 {main}\n  thrown in /tmp/tmpb_urlxsf.php on line 13\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that accepts a list of strings.\n// The list\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// find_max([\"\
    name\", \"of\", \"string\"]) == \"string\"\n// find_max([\"name\", \"enam\", \"\
    game\"]) == \"enam\"\n// find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\
    \nfunction find_max($words) {\n    $max_word = \"\";\n    $max_count = 0;\n  \
    \  foreach ($words as $word) {\n        $count = count_unique_chars($word);\n\
    \        if ($count > $max_count) {\n            $max_count = $count;\n      \
    \      $max_word = $word;\n        }\n    }\n    return $max_word;\n}\n\nfunction\
    \ candidate(...$args) {\n    return find_max(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(\"name\", \"of\", \"string\")) !== \"string\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"name\"\
    , \"enam\", \"game\")) !== \"enam\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"aaaaaaa\", \"bb\", \"cc\")) !== \"aaaaaaa\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"abc\", \"\
    cba\")) !== \"abc\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"this\", \"game\", \"of\", \"footbott\")) !== \"footbott\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\", \"are\", \"\
    gonna\", \"rock\")) !== \"gonna\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"a\", \"mad\", \"nation\")) !== \"\
    nation\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\", \"is\", \"a\", \"prrk\")) !== \"this\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"b\")) !== \"b\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"play\", \"play\", \"play\")) !== \"\
    play\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Error: Call to undefined function count_unique_chars()\
    \ in /tmp/tmp120ot2dy.php:13\nStack trace:\n#0 /tmp/tmp120ot2dy.php(23): find_max()\n\
    #1 /tmp/tmp120ot2dy.php(27): candidate()\n#2 /tmp/tmp120ot2dy.php(39): test()\n\
    #3 {main}\n  thrown in /tmp/tmp120ot2dy.php on line 13\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that accepts a list of strings.\n// The list\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// find_max([\"\
    name\", \"of\", \"string\"]) == \"string\"\n// find_max([\"name\", \"enam\", \"\
    game\"]) == \"enam\"\n// find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\
    \nfunction find_max($words) {\n    $max = 0;\n    $result = \"\";\n    foreach\
    \ ($words as $word) {\n        $unique = array_unique(str_split($word));\n   \
    \     if (count($unique) > $max) {\n            $max = count($unique);\n     \
    \       $result = $word;\n        }\n    }\n    return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return find_max(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(\"name\", \"of\", \"string\")) !== \"string\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"name\"\
    , \"enam\", \"game\")) !== \"enam\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"aaaaaaa\", \"bb\", \"cc\")) !== \"aaaaaaa\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"abc\", \"\
    cba\")) !== \"abc\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"this\", \"game\", \"of\", \"footbott\")) !== \"footbott\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\", \"are\", \"\
    gonna\", \"rock\")) !== \"gonna\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"a\", \"mad\", \"nation\")) !== \"\
    nation\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\", \"is\", \"a\", \"prrk\")) !== \"this\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"b\")) !== \"b\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"play\", \"play\", \"play\")) !== \"\
    play\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp421wvosz.php:28\n\
    Stack trace:\n#0 /tmp/tmp421wvosz.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp421wvosz.php\
    \ on line 28\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that accepts a list of strings.\n// The list\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// find_max([\"\
    name\", \"of\", \"string\"]) == \"string\"\n// find_max([\"name\", \"enam\", \"\
    game\"]) == \"enam\"\n// find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\
    \nfunction find_max($words) {\n    $max = 0;\n    $max_word = \"\";\n    foreach\
    \ ($words as $word) {\n        $unique_chars = array_unique(str_split($word));\n\
    \        if (count($unique_chars) > $max) {\n            $max = count($unique_chars);\n\
    \            $max_word = $word;\n        }\n    }\n    return $max_word;\n}\n\n\
    echo find_max([\"name\", \"of\", \"string\"]) . \"\\n\";\necho find_max([\"name\"\
    , \"enam\", \"game\"]) . \"\\n\";\necho find_max([\"aaaaaaa\", \"bb\" ,\"cc\"\
    ]) . \"\\n\";\n\nfunction candidate(...$args) {\n    return find_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(\"name\", \"of\", \"string\"\
    )) !== \"string\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    name\", \"enam\", \"game\")) !== \"enam\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"aaaaaaa\", \"bb\", \"cc\")) !== \"aaaaaaa\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"abc\", \"\
    cba\")) !== \"abc\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"this\", \"game\", \"of\", \"footbott\")) !== \"footbott\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\", \"are\", \"\
    gonna\", \"rock\")) !== \"gonna\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"a\", \"mad\", \"nation\")) !== \"\
    nation\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\", \"is\", \"a\", \"prrk\")) !== \"this\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"b\")) !== \"b\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"play\", \"play\", \"play\")) !== \"\
    play\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "string\nname\naaaaaaa\n"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp6kum_xur.php:32\n\
    Stack trace:\n#0 /tmp/tmp6kum_xur.php(43): test()\n#1 {main}\n  thrown in /tmp/tmp6kum_xur.php\
    \ on line 32\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that accepts a list of strings.\n// The list\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// find_max([\"\
    name\", \"of\", \"string\"]) == \"string\"\n// find_max([\"name\", \"enam\", \"\
    game\"]) == \"enam\"\n// find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\
    \nfunction find_max($words) {\n    $max = 0;\n    $word = \"\";\n    foreach ($words\
    \ as $w) {\n        $chars = array_unique(str_split($w));\n        if (count($chars)\
    \ > $max) {\n            $max = count($chars);\n            $word = $w;\n    \
    \    }\n    }\n    return $word;\n}\n\nfunction candidate(...$args) {\n    return\
    \ find_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    name\", \"of\", \"string\")) !== \"string\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"name\", \"enam\", \"game\")) !== \"enam\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"aaaaaaa\", \"\
    bb\", \"cc\")) !== \"aaaaaaa\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"abc\", \"cba\")) !== \"abc\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"play\", \"this\", \"game\", \"of\"\
    , \"footbott\")) !== \"footbott\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"gonna\", \"rock\")) !== \"gonna\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\",\
    \ \"are\", \"a\", \"mad\", \"nation\")) !== \"nation\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\", \"is\", \"a\", \"prrk\"\
    )) !== \"this\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    b\")) !== \"b\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"play\", \"play\")) !== \"play\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpnhpgv34f.php:28\n\
    Stack trace:\n#0 /tmp/tmpnhpgv34f.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpnhpgv34f.php\
    \ on line 28\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that accepts a list of strings.\n// The list\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// find_max([\"\
    name\", \"of\", \"string\"]) == \"string\"\n// find_max([\"name\", \"enam\", \"\
    game\"]) == \"enam\"\n// find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\
    \nfunction find_max($words) {\n  $max = 0;\n  $max_word = \"\";\n  foreach ($words\
    \ as $word) {\n    $unique_chars = array_unique(str_split($word));\n    if (count($unique_chars)\
    \ > $max) {\n      $max = count($unique_chars);\n      $max_word = $word;\n  \
    \  }\n  }\n  return $max_word;\n}\n\nfunction candidate(...$args) {\n    return\
    \ find_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    name\", \"of\", \"string\")) !== \"string\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"name\", \"enam\", \"game\")) !== \"enam\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"aaaaaaa\", \"\
    bb\", \"cc\")) !== \"aaaaaaa\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"abc\", \"cba\")) !== \"abc\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"play\", \"this\", \"game\", \"of\"\
    , \"footbott\")) !== \"footbott\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"gonna\", \"rock\")) !== \"gonna\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\",\
    \ \"are\", \"a\", \"mad\", \"nation\")) !== \"nation\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\", \"is\", \"a\", \"prrk\"\
    )) !== \"this\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    b\")) !== \"b\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"play\", \"play\")) !== \"play\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpp6uqt_0k.php:28\n\
    Stack trace:\n#0 /tmp/tmpp6uqt_0k.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpp6uqt_0k.php\
    \ on line 28\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that accepts a list of strings.\n// The list\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// find_max([\"\
    name\", \"of\", \"string\"]) == \"string\"\n// find_max([\"name\", \"enam\", \"\
    game\"]) == \"enam\"\n// find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\
    \nfunction find_max($words) {\n    $max = 0;\n    $max_word = \"\";\n    foreach\
    \ ($words as $word) {\n        $unique_chars = array_unique(str_split($word));\n\
    \        if (count($unique_chars) > $max) {\n            $max = count($unique_chars);\n\
    \            $max_word = $word;\n        }\n    }\n    return $max_word;\n}\n\n\
    echo find_max([\"name\", \"of\", \"string\"]) . \"\\n\";\necho find_max([\"name\"\
    , \"enam\", \"game\"]) . \"\\n\";\necho find_max([\"aaaaaaa\", \"bb\" ,\"cc\"\
    ]) . \"\\n\";\nfunction candidate(...$args) {\n    return find_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(\"name\", \"of\", \"string\"\
    )) !== \"string\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    name\", \"enam\", \"game\")) !== \"enam\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"aaaaaaa\", \"bb\", \"cc\")) !== \"aaaaaaa\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"abc\", \"\
    cba\")) !== \"abc\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"this\", \"game\", \"of\", \"footbott\")) !== \"footbott\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\", \"are\", \"\
    gonna\", \"rock\")) !== \"gonna\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"a\", \"mad\", \"nation\")) !== \"\
    nation\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\", \"is\", \"a\", \"prrk\")) !== \"this\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"b\")) !== \"b\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"play\", \"play\", \"play\")) !== \"\
    play\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "string\nname\naaaaaaa\n"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpze60pje6.php:31\n\
    Stack trace:\n#0 /tmp/tmpze60pje6.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpze60pje6.php\
    \ on line 31\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that accepts a list of strings.\n// The list\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// find_max([\"\
    name\", \"of\", \"string\"]) == \"string\"\n// find_max([\"name\", \"enam\", \"\
    game\"]) == \"enam\"\n// find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\
    \nfunction find_max($words) {\n    $max = 0;\n    $max_word = \"\";\n    foreach\
    \ ($words as $word) {\n        $unique_chars = array_unique(str_split($word));\n\
    \        if (count($unique_chars) > $max) {\n            $max = count($unique_chars);\n\
    \            $max_word = $word;\n        }\n    }\n    return $max_word;\n}\n\n\
    function candidate(...$args) {\n    return find_max(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(\"name\", \"of\", \"string\")) !== \"\
    string\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    name\", \"enam\", \"game\")) !== \"enam\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"aaaaaaa\", \"bb\", \"cc\")) !== \"aaaaaaa\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"abc\", \"\
    cba\")) !== \"abc\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"this\", \"game\", \"of\", \"footbott\")) !== \"footbott\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\", \"are\", \"\
    gonna\", \"rock\")) !== \"gonna\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"a\", \"mad\", \"nation\")) !== \"\
    nation\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\", \"is\", \"a\", \"prrk\")) !== \"this\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"b\")) !== \"b\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"play\", \"play\", \"play\")) !== \"\
    play\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpsetzbfpy.php:28\n\
    Stack trace:\n#0 /tmp/tmpsetzbfpy.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpsetzbfpy.php\
    \ on line 28\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that accepts a list of strings.\n// The list\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// find_max([\"\
    name\", \"of\", \"string\"]) == \"string\"\n// find_max([\"name\", \"enam\", \"\
    game\"]) == \"enam\"\n// find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\
    \nfunction find_max($words) {\n    $max = 0;\n    $max_word = \"\";\n    foreach\
    \ ($words as $word) {\n        $unique_chars = array_unique(str_split($word));\n\
    \        if (count($unique_chars) > $max) {\n            $max = count($unique_chars);\n\
    \            $max_word = $word;\n        }\n    }\n    return $max_word;\n}\n\n\
    function candidate(...$args) {\n    return find_max(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(\"name\", \"of\", \"string\")) !== \"\
    string\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    name\", \"enam\", \"game\")) !== \"enam\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"aaaaaaa\", \"bb\", \"cc\")) !== \"aaaaaaa\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"abc\", \"\
    cba\")) !== \"abc\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"this\", \"game\", \"of\", \"footbott\")) !== \"footbott\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\", \"are\", \"\
    gonna\", \"rock\")) !== \"gonna\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"a\", \"mad\", \"nation\")) !== \"\
    nation\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\", \"is\", \"a\", \"prrk\")) !== \"this\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"b\")) !== \"b\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"play\", \"play\", \"play\")) !== \"\
    play\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp4j21308x.php:28\n\
    Stack trace:\n#0 /tmp/tmp4j21308x.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp4j21308x.php\
    \ on line 28\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that accepts a list of strings.\n// The list\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// find_max([\"\
    name\", \"of\", \"string\"]) == \"string\"\n// find_max([\"name\", \"enam\", \"\
    game\"]) == \"enam\"\n// find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\
    \nfunction find_max($words) {\n    $max_word = \"\";\n    $max_count = 0;\n  \
    \  foreach ($words as $word) {\n        $count = count_unique_chars($word);\n\
    \        if ($count > $max_count) {\n            $max_count = $count;\n      \
    \      $max_word = $word;\n        }\n    }\n    return $max_word;\n}\n\nfunction\
    \ candidate(...$args) {\n    return find_max(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(\"name\", \"of\", \"string\")) !== \"string\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"name\"\
    , \"enam\", \"game\")) !== \"enam\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"aaaaaaa\", \"bb\", \"cc\")) !== \"aaaaaaa\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"abc\", \"\
    cba\")) !== \"abc\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"this\", \"game\", \"of\", \"footbott\")) !== \"footbott\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\", \"are\", \"\
    gonna\", \"rock\")) !== \"gonna\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"a\", \"mad\", \"nation\")) !== \"\
    nation\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\", \"is\", \"a\", \"prrk\")) !== \"this\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"b\")) !== \"b\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"play\", \"play\", \"play\")) !== \"\
    play\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Error: Call to undefined function count_unique_chars()\
    \ in /tmp/tmp3mvtm5io.php:13\nStack trace:\n#0 /tmp/tmp3mvtm5io.php(23): find_max()\n\
    #1 /tmp/tmp3mvtm5io.php(27): candidate()\n#2 /tmp/tmp3mvtm5io.php(39): test()\n\
    #3 {main}\n  thrown in /tmp/tmp3mvtm5io.php on line 13\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that accepts a list of strings.\n// The list\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// find_max([\"\
    name\", \"of\", \"string\"]) == \"string\"\n// find_max([\"name\", \"enam\", \"\
    game\"]) == \"enam\"\n// find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\
    \nfunction find_max($words) {\n    $max = 0;\n    $max_word = \"\";\n    foreach\
    \ ($words as $word) {\n        $unique_chars = array_unique(str_split($word));\n\
    \        if (count($unique_chars) > $max) {\n            $max = count($unique_chars);\n\
    \            $max_word = $word;\n        }\n    }\n    return $max_word;\n}\n\n\
    function candidate(...$args) {\n    return find_max(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(\"name\", \"of\", \"string\")) !== \"\
    string\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    name\", \"enam\", \"game\")) !== \"enam\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"aaaaaaa\", \"bb\", \"cc\")) !== \"aaaaaaa\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"abc\", \"\
    cba\")) !== \"abc\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"this\", \"game\", \"of\", \"footbott\")) !== \"footbott\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\", \"are\", \"\
    gonna\", \"rock\")) !== \"gonna\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"a\", \"mad\", \"nation\")) !== \"\
    nation\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\", \"is\", \"a\", \"prrk\")) !== \"this\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"b\")) !== \"b\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"play\", \"play\", \"play\")) !== \"\
    play\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp3ugc6kak.php:28\n\
    Stack trace:\n#0 /tmp/tmp3ugc6kak.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp3ugc6kak.php\
    \ on line 28\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that accepts a list of strings.\n// The list\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// find_max([\"\
    name\", \"of\", \"string\"]) == \"string\"\n// find_max([\"name\", \"enam\", \"\
    game\"]) == \"enam\"\n// find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\
    \nfunction find_max($words) {\n    $max_word = \"\";\n    $max_count = 0;\n  \
    \  foreach ($words as $word) {\n        $count = count_unique_chars($word);\n\
    \        if ($count > $max_count) {\n            $max_count = $count;\n      \
    \      $max_word = $word;\n        }\n    }\n    return $max_word;\n}\n\nfunction\
    \ candidate(...$args) {\n    return find_max(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(\"name\", \"of\", \"string\")) !== \"string\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"name\"\
    , \"enam\", \"game\")) !== \"enam\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"aaaaaaa\", \"bb\", \"cc\")) !== \"aaaaaaa\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"abc\", \"\
    cba\")) !== \"abc\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"this\", \"game\", \"of\", \"footbott\")) !== \"footbott\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\", \"are\", \"\
    gonna\", \"rock\")) !== \"gonna\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"a\", \"mad\", \"nation\")) !== \"\
    nation\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\", \"is\", \"a\", \"prrk\")) !== \"this\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"b\")) !== \"b\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"play\", \"play\", \"play\")) !== \"\
    play\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Error: Call to undefined function count_unique_chars()\
    \ in /tmp/tmpb7kewpot.php:13\nStack trace:\n#0 /tmp/tmpb7kewpot.php(23): find_max()\n\
    #1 /tmp/tmpb7kewpot.php(27): candidate()\n#2 /tmp/tmpb7kewpot.php(39): test()\n\
    #3 {main}\n  thrown in /tmp/tmpb7kewpot.php on line 13\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that accepts a list of strings.\n// The list\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// find_max([\"\
    name\", \"of\", \"string\"]) == \"string\"\n// find_max([\"name\", \"enam\", \"\
    game\"]) == \"enam\"\n// find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\
    \nfunction find_max($words) {\n    $max_word = \"\";\n    $max_count = 0;\n  \
    \  foreach ($words as $word) {\n        $count = count_unique_chars($word);\n\
    \        if ($count > $max_count) {\n            $max_count = $count;\n      \
    \      $max_word = $word;\n        }\n    }\n    return $max_word;\n}\n\nfunction\
    \ candidate(...$args) {\n    return find_max(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(\"name\", \"of\", \"string\")) !== \"string\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"name\"\
    , \"enam\", \"game\")) !== \"enam\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"aaaaaaa\", \"bb\", \"cc\")) !== \"aaaaaaa\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"abc\", \"\
    cba\")) !== \"abc\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"this\", \"game\", \"of\", \"footbott\")) !== \"footbott\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\", \"are\", \"\
    gonna\", \"rock\")) !== \"gonna\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"a\", \"mad\", \"nation\")) !== \"\
    nation\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\", \"is\", \"a\", \"prrk\")) !== \"this\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"b\")) !== \"b\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"play\", \"play\", \"play\")) !== \"\
    play\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Error: Call to undefined function count_unique_chars()\
    \ in /tmp/tmpxl44llek.php:13\nStack trace:\n#0 /tmp/tmpxl44llek.php(23): find_max()\n\
    #1 /tmp/tmpxl44llek.php(27): candidate()\n#2 /tmp/tmpxl44llek.php(39): test()\n\
    #3 {main}\n  thrown in /tmp/tmpxl44llek.php on line 13\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that accepts a list of strings.\n// The list\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// find_max([\"\
    name\", \"of\", \"string\"]) == \"string\"\n// find_max([\"name\", \"enam\", \"\
    game\"]) == \"enam\"\n// find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\
    \nfunction find_max($words) {\n    $max = 0;\n    $max_word = \"\";\n    foreach\
    \ ($words as $word) {\n        $unique_chars = array_unique(str_split($word));\n\
    \        if (count($unique_chars) > $max) {\n            $max = count($unique_chars);\n\
    \            $max_word = $word;\n        }\n    }\n    return $max_word;\n}\n\n\
    function candidate(...$args) {\n    return find_max(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(\"name\", \"of\", \"string\")) !== \"\
    string\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    name\", \"enam\", \"game\")) !== \"enam\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"aaaaaaa\", \"bb\", \"cc\")) !== \"aaaaaaa\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"abc\", \"\
    cba\")) !== \"abc\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"this\", \"game\", \"of\", \"footbott\")) !== \"footbott\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\", \"are\", \"\
    gonna\", \"rock\")) !== \"gonna\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"a\", \"mad\", \"nation\")) !== \"\
    nation\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\", \"is\", \"a\", \"prrk\")) !== \"this\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"b\")) !== \"b\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"play\", \"play\", \"play\")) !== \"\
    play\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmps1h3uz8w.php:28\n\
    Stack trace:\n#0 /tmp/tmps1h3uz8w.php(39): test()\n#1 {main}\n  thrown in /tmp/tmps1h3uz8w.php\
    \ on line 28\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that accepts a list of strings.\n// The list\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// find_max([\"\
    name\", \"of\", \"string\"]) == \"string\"\n// find_max([\"name\", \"enam\", \"\
    game\"]) == \"enam\"\n// find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\
    \nfunction find_max($words) {\n    $max_word = \"\";\n    $max_count = 0;\n  \
    \  foreach ($words as $word) {\n        $count = count_unique_chars($word);\n\
    \        if ($count > $max_count) {\n            $max_count = $count;\n      \
    \      $max_word = $word;\n        }\n    }\n    return $max_word;\n}\n\nfunction\
    \ candidate(...$args) {\n    return find_max(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(\"name\", \"of\", \"string\")) !== \"string\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"name\"\
    , \"enam\", \"game\")) !== \"enam\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"aaaaaaa\", \"bb\", \"cc\")) !== \"aaaaaaa\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"abc\", \"\
    cba\")) !== \"abc\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"this\", \"game\", \"of\", \"footbott\")) !== \"footbott\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\", \"are\", \"\
    gonna\", \"rock\")) !== \"gonna\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"a\", \"mad\", \"nation\")) !== \"\
    nation\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\", \"is\", \"a\", \"prrk\")) !== \"this\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"b\")) !== \"b\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"play\", \"play\", \"play\")) !== \"\
    play\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Error: Call to undefined function count_unique_chars()\
    \ in /tmp/tmprdkwlcop.php:13\nStack trace:\n#0 /tmp/tmprdkwlcop.php(23): find_max()\n\
    #1 /tmp/tmprdkwlcop.php(27): candidate()\n#2 /tmp/tmprdkwlcop.php(39): test()\n\
    #3 {main}\n  thrown in /tmp/tmprdkwlcop.php on line 13\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that accepts a list of strings.\n// The list\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// find_max([\"\
    name\", \"of\", \"string\"]) == \"string\"\n// find_max([\"name\", \"enam\", \"\
    game\"]) == \"enam\"\n// find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\
    \nfunction find_max($words) {\n  $max = 0;\n  $max_word = \"\";\n  foreach ($words\
    \ as $word) {\n    $unique_chars = array_unique(str_split($word));\n    if (count($unique_chars)\
    \ > $max) {\n      $max = count($unique_chars);\n      $max_word = $word;\n  \
    \  }\n  }\n  return $max_word;\n}\n\nfunction candidate(...$args) {\n    return\
    \ find_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    name\", \"of\", \"string\")) !== \"string\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"name\", \"enam\", \"game\")) !== \"enam\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"aaaaaaa\", \"\
    bb\", \"cc\")) !== \"aaaaaaa\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"abc\", \"cba\")) !== \"abc\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"play\", \"this\", \"game\", \"of\"\
    , \"footbott\")) !== \"footbott\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"gonna\", \"rock\")) !== \"gonna\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\",\
    \ \"are\", \"a\", \"mad\", \"nation\")) !== \"nation\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\", \"is\", \"a\", \"prrk\"\
    )) !== \"this\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    b\")) !== \"b\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"play\", \"play\")) !== \"play\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmptv564ibm.php:28\n\
    Stack trace:\n#0 /tmp/tmptv564ibm.php(39): test()\n#1 {main}\n  thrown in /tmp/tmptv564ibm.php\
    \ on line 28\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that accepts a list of strings.\n// The list\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// find_max([\"\
    name\", \"of\", \"string\"]) == \"string\"\n// find_max([\"name\", \"enam\", \"\
    game\"]) == \"enam\"\n// find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\
    \nfunction find_max($words) {\n    $max_word = \"\";\n    $max_count = 0;\n  \
    \  foreach ($words as $word) {\n        $count = count_unique_chars($word);\n\
    \        if ($count > $max_count) {\n            $max_count = $count;\n      \
    \      $max_word = $word;\n        }\n    }\n    return $max_word;\n}\n\nfunction\
    \ candidate(...$args) {\n    return find_max(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(\"name\", \"of\", \"string\")) !== \"string\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"name\"\
    , \"enam\", \"game\")) !== \"enam\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"aaaaaaa\", \"bb\", \"cc\")) !== \"aaaaaaa\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"abc\", \"\
    cba\")) !== \"abc\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"this\", \"game\", \"of\", \"footbott\")) !== \"footbott\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\", \"are\", \"\
    gonna\", \"rock\")) !== \"gonna\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"a\", \"mad\", \"nation\")) !== \"\
    nation\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\", \"is\", \"a\", \"prrk\")) !== \"this\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"b\")) !== \"b\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"play\", \"play\", \"play\")) !== \"\
    play\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Error: Call to undefined function count_unique_chars()\
    \ in /tmp/tmpekzecsnf.php:13\nStack trace:\n#0 /tmp/tmpekzecsnf.php(23): find_max()\n\
    #1 /tmp/tmpekzecsnf.php(27): candidate()\n#2 /tmp/tmpekzecsnf.php(39): test()\n\
    #3 {main}\n  thrown in /tmp/tmpekzecsnf.php on line 13\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that accepts a list of strings.\n// The list\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// find_max([\"\
    name\", \"of\", \"string\"]) == \"string\"\n// find_max([\"name\", \"enam\", \"\
    game\"]) == \"enam\"\n// find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\
    \nfunction find_max($words) {\n    $max = 0;\n    $max_word = \"\";\n    foreach\
    \ ($words as $word) {\n        $unique_chars = array_unique(str_split($word));\n\
    \        if (count($unique_chars) > $max) {\n            $max = count($unique_chars);\n\
    \            $max_word = $word;\n        }\n    }\n    return $max_word;\n}\n\n\
    function candidate(...$args) {\n    return find_max(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(\"name\", \"of\", \"string\")) !== \"\
    string\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    name\", \"enam\", \"game\")) !== \"enam\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"aaaaaaa\", \"bb\", \"cc\")) !== \"aaaaaaa\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"abc\", \"\
    cba\")) !== \"abc\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"this\", \"game\", \"of\", \"footbott\")) !== \"footbott\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\", \"are\", \"\
    gonna\", \"rock\")) !== \"gonna\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"a\", \"mad\", \"nation\")) !== \"\
    nation\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\", \"is\", \"a\", \"prrk\")) !== \"this\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"b\")) !== \"b\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"play\", \"play\", \"play\")) !== \"\
    play\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp9hu1tbcq.php:28\n\
    Stack trace:\n#0 /tmp/tmp9hu1tbcq.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp9hu1tbcq.php\
    \ on line 28\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that accepts a list of strings.\n// The list\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// find_max([\"\
    name\", \"of\", \"string\"]) == \"string\"\n// find_max([\"name\", \"enam\", \"\
    game\"]) == \"enam\"\n// find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\
    \nfunction find_max($words) {\n    $max_word = \"\";\n    $max_count = 0;\n  \
    \  foreach ($words as $word) {\n        $count = count_unique_chars($word);\n\
    \        if ($count > $max_count) {\n            $max_count = $count;\n      \
    \      $max_word = $word;\n        }\n    }\n    return $max_word;\n}\n\nfunction\
    \ candidate(...$args) {\n    return find_max(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(\"name\", \"of\", \"string\")) !== \"string\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"name\"\
    , \"enam\", \"game\")) !== \"enam\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"aaaaaaa\", \"bb\", \"cc\")) !== \"aaaaaaa\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"abc\", \"\
    cba\")) !== \"abc\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"this\", \"game\", \"of\", \"footbott\")) !== \"footbott\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\", \"are\", \"\
    gonna\", \"rock\")) !== \"gonna\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"a\", \"mad\", \"nation\")) !== \"\
    nation\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\", \"is\", \"a\", \"prrk\")) !== \"this\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"b\")) !== \"b\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"play\", \"play\", \"play\")) !== \"\
    play\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Error: Call to undefined function count_unique_chars()\
    \ in /tmp/tmpvhnwnat1.php:13\nStack trace:\n#0 /tmp/tmpvhnwnat1.php(23): find_max()\n\
    #1 /tmp/tmpvhnwnat1.php(27): candidate()\n#2 /tmp/tmpvhnwnat1.php(39): test()\n\
    #3 {main}\n  thrown in /tmp/tmpvhnwnat1.php on line 13\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that accepts a list of strings.\n// The list\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// find_max([\"\
    name\", \"of\", \"string\"]) == \"string\"\n// find_max([\"name\", \"enam\", \"\
    game\"]) == \"enam\"\n// find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\
    \nfunction find_max($words) {\n    $max = 0;\n    $max_word = \"\";\n    foreach\
    \ ($words as $word) {\n        $unique_chars = count_unique_chars($word);\n  \
    \      if ($unique_chars > $max) {\n            $max = $unique_chars;\n      \
    \      $max_word = $word;\n        }\n    }\n    return $max_word;\n}\n\nfunction\
    \ candidate(...$args) {\n    return find_max(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(\"name\", \"of\", \"string\")) !== \"string\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"name\"\
    , \"enam\", \"game\")) !== \"enam\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"aaaaaaa\", \"bb\", \"cc\")) !== \"aaaaaaa\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"abc\", \"\
    cba\")) !== \"abc\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"this\", \"game\", \"of\", \"footbott\")) !== \"footbott\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\", \"are\", \"\
    gonna\", \"rock\")) !== \"gonna\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"a\", \"mad\", \"nation\")) !== \"\
    nation\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\", \"is\", \"a\", \"prrk\")) !== \"this\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"b\")) !== \"b\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"play\", \"play\", \"play\")) !== \"\
    play\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Error: Call to undefined function count_unique_chars()\
    \ in /tmp/tmptgyay7vd.php:13\nStack trace:\n#0 /tmp/tmptgyay7vd.php(23): find_max()\n\
    #1 /tmp/tmptgyay7vd.php(27): candidate()\n#2 /tmp/tmptgyay7vd.php(39): test()\n\
    #3 {main}\n  thrown in /tmp/tmptgyay7vd.php on line 13\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that accepts a list of strings.\n// The list\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// find_max([\"\
    name\", \"of\", \"string\"]) == \"string\"\n// find_max([\"name\", \"enam\", \"\
    game\"]) == \"enam\"\n// find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\
    \nfunction find_max($words) {\n    $max_word = \"\";\n    $max_count = 0;\n  \
    \  foreach ($words as $word) {\n        $unique_chars = array_unique(str_split($word));\n\
    \        $unique_count = count($unique_chars);\n        if ($unique_count > $max_count)\
    \ {\n            $max_count = $unique_count;\n            $max_word = $word;\n\
    \        }\n    }\n    return $max_word;\n}\n\nfunction candidate(...$args) {\n\
    \    return find_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    name\", \"of\", \"string\")) !== \"string\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"name\", \"enam\", \"game\")) !== \"enam\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"aaaaaaa\", \"\
    bb\", \"cc\")) !== \"aaaaaaa\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"abc\", \"cba\")) !== \"abc\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"play\", \"this\", \"game\", \"of\"\
    , \"footbott\")) !== \"footbott\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"gonna\", \"rock\")) !== \"gonna\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\",\
    \ \"are\", \"a\", \"mad\", \"nation\")) !== \"nation\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\", \"is\", \"a\", \"prrk\"\
    )) !== \"this\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    b\")) !== \"b\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"play\", \"play\")) !== \"play\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpgs4hyl90.php:29\n\
    Stack trace:\n#0 /tmp/tmpgs4hyl90.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpgs4hyl90.php\
    \ on line 29\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that accepts a list of strings.\n// The list\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// find_max([\"\
    name\", \"of\", \"string\"]) == \"string\"\n// find_max([\"name\", \"enam\", \"\
    game\"]) == \"enam\"\n// find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\
    \nfunction find_max($words) {\n    $max = 0;\n    $max_word = \"\";\n    foreach\
    \ ($words as $word) {\n        $unique_chars = array_unique(str_split($word));\n\
    \        if (count($unique_chars) > $max) {\n            $max = count($unique_chars);\n\
    \            $max_word = $word;\n        }\n    }\n    return $max_word;\n}\n\n\
    function candidate(...$args) {\n    return find_max(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(\"name\", \"of\", \"string\")) !== \"\
    string\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    name\", \"enam\", \"game\")) !== \"enam\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"aaaaaaa\", \"bb\", \"cc\")) !== \"aaaaaaa\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"abc\", \"\
    cba\")) !== \"abc\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"this\", \"game\", \"of\", \"footbott\")) !== \"footbott\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\", \"are\", \"\
    gonna\", \"rock\")) !== \"gonna\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"a\", \"mad\", \"nation\")) !== \"\
    nation\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\", \"is\", \"a\", \"prrk\")) !== \"this\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"b\")) !== \"b\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"play\", \"play\", \"play\")) !== \"\
    play\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp1t1r_7bu.php:28\n\
    Stack trace:\n#0 /tmp/tmp1t1r_7bu.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp1t1r_7bu.php\
    \ on line 28\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that accepts a list of strings.\n// The list\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// find_max([\"\
    name\", \"of\", \"string\"]) == \"string\"\n// find_max([\"name\", \"enam\", \"\
    game\"]) == \"enam\"\n// find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\
    \nfunction find_max($words) {\n    $max_word = \"\";\n    $max_count = 0;\n  \
    \  foreach ($words as $word) {\n        $count = count_unique_chars($word);\n\
    \        if ($count > $max_count) {\n            $max_count = $count;\n      \
    \      $max_word = $word;\n        }\n    }\n    return $max_word;\n}\n\nfunction\
    \ candidate(...$args) {\n    return find_max(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(\"name\", \"of\", \"string\")) !== \"string\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"name\"\
    , \"enam\", \"game\")) !== \"enam\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"aaaaaaa\", \"bb\", \"cc\")) !== \"aaaaaaa\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"abc\", \"\
    cba\")) !== \"abc\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"this\", \"game\", \"of\", \"footbott\")) !== \"footbott\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\", \"are\", \"\
    gonna\", \"rock\")) !== \"gonna\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"a\", \"mad\", \"nation\")) !== \"\
    nation\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\", \"is\", \"a\", \"prrk\")) !== \"this\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"b\")) !== \"b\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"play\", \"play\", \"play\")) !== \"\
    play\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Error: Call to undefined function count_unique_chars()\
    \ in /tmp/tmp9h6uma5r.php:13\nStack trace:\n#0 /tmp/tmp9h6uma5r.php(23): find_max()\n\
    #1 /tmp/tmp9h6uma5r.php(27): candidate()\n#2 /tmp/tmp9h6uma5r.php(39): test()\n\
    #3 {main}\n  thrown in /tmp/tmp9h6uma5r.php on line 13\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that accepts a list of strings.\n// The list\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// find_max([\"\
    name\", \"of\", \"string\"]) == \"string\"\n// find_max([\"name\", \"enam\", \"\
    game\"]) == \"enam\"\n// find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\
    \nfunction find_max($words) {\n    $max = 0;\n    $max_word = \"\";\n    foreach\
    \ ($words as $word) {\n        $unique_chars = array_unique(str_split($word));\n\
    \        if (count($unique_chars) > $max) {\n            $max = count($unique_chars);\n\
    \            $max_word = $word;\n        }\n    }\n    return $max_word;\n}\n\n\
    function candidate(...$args) {\n    return find_max(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(\"name\", \"of\", \"string\")) !== \"\
    string\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    name\", \"enam\", \"game\")) !== \"enam\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"aaaaaaa\", \"bb\", \"cc\")) !== \"aaaaaaa\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"abc\", \"\
    cba\")) !== \"abc\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"this\", \"game\", \"of\", \"footbott\")) !== \"footbott\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\", \"are\", \"\
    gonna\", \"rock\")) !== \"gonna\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"a\", \"mad\", \"nation\")) !== \"\
    nation\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\", \"is\", \"a\", \"prrk\")) !== \"this\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"b\")) !== \"b\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"play\", \"play\", \"play\")) !== \"\
    play\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmptn48zkns.php:28\n\
    Stack trace:\n#0 /tmp/tmptn48zkns.php(39): test()\n#1 {main}\n  thrown in /tmp/tmptn48zkns.php\
    \ on line 28\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that accepts a list of strings.\n// The list\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// find_max([\"\
    name\", \"of\", \"string\"]) == \"string\"\n// find_max([\"name\", \"enam\", \"\
    game\"]) == \"enam\"\n// find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\
    \nfunction find_max($words) {\n  $max_word = \"\";\n  $max_count = 0;\n  foreach\
    \ ($words as $word) {\n    $unique_chars = array_unique(str_split($word));\n \
    \   $unique_count = count($unique_chars);\n    if ($unique_count > $max_count)\
    \ {\n      $max_count = $unique_count;\n      $max_word = $word;\n    }\n  }\n\
    \  return $max_word;\n}\n\nfunction candidate(...$args) {\n    return find_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(\"name\", \"of\", \"string\"\
    )) !== \"string\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    name\", \"enam\", \"game\")) !== \"enam\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"aaaaaaa\", \"bb\", \"cc\")) !== \"aaaaaaa\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"abc\", \"\
    cba\")) !== \"abc\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"this\", \"game\", \"of\", \"footbott\")) !== \"footbott\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\", \"are\", \"\
    gonna\", \"rock\")) !== \"gonna\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"a\", \"mad\", \"nation\")) !== \"\
    nation\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\", \"is\", \"a\", \"prrk\")) !== \"this\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"b\")) !== \"b\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"play\", \"play\", \"play\")) !== \"\
    play\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp6r6to6j5.php:29\n\
    Stack trace:\n#0 /tmp/tmp6r6to6j5.php(40): test()\n#1 {main}\n  thrown in /tmp/tmp6r6to6j5.php\
    \ on line 29\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that accepts a list of strings.\n// The list\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// find_max([\"\
    name\", \"of\", \"string\"]) == \"string\"\n// find_max([\"name\", \"enam\", \"\
    game\"]) == \"enam\"\n// find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\
    \nfunction find_max($words) {\n    $max = 0;\n    $max_word = '';\n    foreach\
    \ ($words as $word) {\n        $unique_chars = array_unique(str_split($word));\n\
    \        if (count($unique_chars) > $max) {\n            $max = count($unique_chars);\n\
    \            $max_word = $word;\n        }\n    }\n    return $max_word;\n}\n\n\
    function candidate(...$args) {\n    return find_max(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(\"name\", \"of\", \"string\")) !== \"\
    string\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    name\", \"enam\", \"game\")) !== \"enam\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"aaaaaaa\", \"bb\", \"cc\")) !== \"aaaaaaa\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"abc\", \"\
    cba\")) !== \"abc\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"this\", \"game\", \"of\", \"footbott\")) !== \"footbott\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\", \"are\", \"\
    gonna\", \"rock\")) !== \"gonna\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"a\", \"mad\", \"nation\")) !== \"\
    nation\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\", \"is\", \"a\", \"prrk\")) !== \"this\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"b\")) !== \"b\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"play\", \"play\", \"play\")) !== \"\
    play\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp621leov7.php:28\n\
    Stack trace:\n#0 /tmp/tmp621leov7.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp621leov7.php\
    \ on line 28\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that accepts a list of strings.\n// The list\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// find_max([\"\
    name\", \"of\", \"string\"]) == \"string\"\n// find_max([\"name\", \"enam\", \"\
    game\"]) == \"enam\"\n// find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\
    \nfunction find_max($words) {\n    $max_word = \"\";\n    $max_count = 0;\n  \
    \  foreach ($words as $word) {\n        $unique_chars = array_unique(str_split($word));\n\
    \        $unique_count = count($unique_chars);\n        if ($unique_count > $max_count)\
    \ {\n            $max_count = $unique_count;\n            $max_word = $word;\n\
    \        }\n    }\n    return $max_word;\n}\n\nfunction candidate(...$args) {\n\
    \    return find_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    name\", \"of\", \"string\")) !== \"string\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"name\", \"enam\", \"game\")) !== \"enam\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"aaaaaaa\", \"\
    bb\", \"cc\")) !== \"aaaaaaa\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"abc\", \"cba\")) !== \"abc\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"play\", \"this\", \"game\", \"of\"\
    , \"footbott\")) !== \"footbott\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"gonna\", \"rock\")) !== \"gonna\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\",\
    \ \"are\", \"a\", \"mad\", \"nation\")) !== \"nation\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\", \"is\", \"a\", \"prrk\"\
    )) !== \"this\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    b\")) !== \"b\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"play\", \"play\")) !== \"play\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpoaksqisw.php:29\n\
    Stack trace:\n#0 /tmp/tmpoaksqisw.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpoaksqisw.php\
    \ on line 29\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that accepts a list of strings.\n// The list\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// find_max([\"\
    name\", \"of\", \"string\"]) == \"string\"\n// find_max([\"name\", \"enam\", \"\
    game\"]) == \"enam\"\n// find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\
    \nfunction find_max($words) {\n    $max = 0;\n    $max_word = \"\";\n    foreach\
    \ ($words as $word) {\n        $unique_chars = array_unique(str_split($word));\n\
    \        if (count($unique_chars) > $max) {\n            $max = count($unique_chars);\n\
    \            $max_word = $word;\n        }\n    }\n    return $max_word;\n}\n\n\
    function candidate(...$args) {\n    return find_max(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(\"name\", \"of\", \"string\")) !== \"\
    string\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    name\", \"enam\", \"game\")) !== \"enam\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"aaaaaaa\", \"bb\", \"cc\")) !== \"aaaaaaa\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"abc\", \"\
    cba\")) !== \"abc\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"this\", \"game\", \"of\", \"footbott\")) !== \"footbott\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\", \"are\", \"\
    gonna\", \"rock\")) !== \"gonna\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"a\", \"mad\", \"nation\")) !== \"\
    nation\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\", \"is\", \"a\", \"prrk\")) !== \"this\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"b\")) !== \"b\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"play\", \"play\", \"play\")) !== \"\
    play\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp662jnq3_.php:28\n\
    Stack trace:\n#0 /tmp/tmp662jnq3_.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp662jnq3_.php\
    \ on line 28\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that accepts a list of strings.\n// The list\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// find_max([\"\
    name\", \"of\", \"string\"]) == \"string\"\n// find_max([\"name\", \"enam\", \"\
    game\"]) == \"enam\"\n// find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\
    \nfunction find_max($words) {\n    $max = 0;\n    $max_word = \"\";\n    foreach\
    \ ($words as $word) {\n        $unique_chars = array_unique(str_split($word));\n\
    \        if (count($unique_chars) > $max) {\n            $max = count($unique_chars);\n\
    \            $max_word = $word;\n        }\n    }\n    return $max_word;\n}\n\n\
    function candidate(...$args) {\n    return find_max(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(\"name\", \"of\", \"string\")) !== \"\
    string\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    name\", \"enam\", \"game\")) !== \"enam\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"aaaaaaa\", \"bb\", \"cc\")) !== \"aaaaaaa\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"abc\", \"\
    cba\")) !== \"abc\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"this\", \"game\", \"of\", \"footbott\")) !== \"footbott\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\", \"are\", \"\
    gonna\", \"rock\")) !== \"gonna\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"a\", \"mad\", \"nation\")) !== \"\
    nation\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\", \"is\", \"a\", \"prrk\")) !== \"this\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"b\")) !== \"b\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"play\", \"play\", \"play\")) !== \"\
    play\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmptei0ob89.php:28\n\
    Stack trace:\n#0 /tmp/tmptei0ob89.php(39): test()\n#1 {main}\n  thrown in /tmp/tmptei0ob89.php\
    \ on line 28\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that accepts a list of strings.\n// The list\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// find_max([\"\
    name\", \"of\", \"string\"]) == \"string\"\n// find_max([\"name\", \"enam\", \"\
    game\"]) == \"enam\"\n// find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\
    \nfunction find_max($words) {\n    $max = 0;\n    $max_word = \"\";\n    foreach\
    \ ($words as $word) {\n        $unique_chars = array_unique(str_split($word));\n\
    \        if (count($unique_chars) > $max) {\n            $max = count($unique_chars);\n\
    \            $max_word = $word;\n        }\n    }\n    return $max_word;\n}\n\n\
    function candidate(...$args) {\n    return find_max(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(\"name\", \"of\", \"string\")) !== \"\
    string\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    name\", \"enam\", \"game\")) !== \"enam\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"aaaaaaa\", \"bb\", \"cc\")) !== \"aaaaaaa\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"abc\", \"\
    cba\")) !== \"abc\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"this\", \"game\", \"of\", \"footbott\")) !== \"footbott\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\", \"are\", \"\
    gonna\", \"rock\")) !== \"gonna\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"a\", \"mad\", \"nation\")) !== \"\
    nation\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\", \"is\", \"a\", \"prrk\")) !== \"this\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"b\")) !== \"b\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"play\", \"play\", \"play\")) !== \"\
    play\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpg75tkzui.php:28\n\
    Stack trace:\n#0 /tmp/tmpg75tkzui.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpg75tkzui.php\
    \ on line 28\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that accepts a list of strings.\n// The list\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// find_max([\"\
    name\", \"of\", \"string\"]) == \"string\"\n// find_max([\"name\", \"enam\", \"\
    game\"]) == \"enam\"\n// find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\
    \nfunction find_max($words) {\n    $max = 0;\n    $max_word = \"\";\n    foreach\
    \ ($words as $word) {\n        $unique_chars = array_unique(str_split($word));\n\
    \        if (count($unique_chars) > $max) {\n            $max = count($unique_chars);\n\
    \            $max_word = $word;\n        }\n    }\n    return $max_word;\n}\n\n\
    function candidate(...$args) {\n    return find_max(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(\"name\", \"of\", \"string\")) !== \"\
    string\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    name\", \"enam\", \"game\")) !== \"enam\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"aaaaaaa\", \"bb\", \"cc\")) !== \"aaaaaaa\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"abc\", \"\
    cba\")) !== \"abc\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"this\", \"game\", \"of\", \"footbott\")) !== \"footbott\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\", \"are\", \"\
    gonna\", \"rock\")) !== \"gonna\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"a\", \"mad\", \"nation\")) !== \"\
    nation\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\", \"is\", \"a\", \"prrk\")) !== \"this\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"b\")) !== \"b\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"play\", \"play\", \"play\")) !== \"\
    play\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmppi705id5.php:28\n\
    Stack trace:\n#0 /tmp/tmppi705id5.php(39): test()\n#1 {main}\n  thrown in /tmp/tmppi705id5.php\
    \ on line 28\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that accepts a list of strings.\n// The list\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// find_max([\"\
    name\", \"of\", \"string\"]) == \"string\"\n// find_max([\"name\", \"enam\", \"\
    game\"]) == \"enam\"\n// find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\
    \nfunction find_max($words) {\n    $max_word = \"\";\n    $max_count = 0;\n  \
    \  foreach ($words as $word) {\n        $count = count_unique_chars($word);\n\
    \        if ($count > $max_count) {\n            $max_count = $count;\n      \
    \      $max_word = $word;\n        }\n    }\n    return $max_word;\n}\n\nfunction\
    \ candidate(...$args) {\n    return find_max(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(\"name\", \"of\", \"string\")) !== \"string\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"name\"\
    , \"enam\", \"game\")) !== \"enam\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"aaaaaaa\", \"bb\", \"cc\")) !== \"aaaaaaa\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"abc\", \"\
    cba\")) !== \"abc\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"this\", \"game\", \"of\", \"footbott\")) !== \"footbott\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\", \"are\", \"\
    gonna\", \"rock\")) !== \"gonna\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"a\", \"mad\", \"nation\")) !== \"\
    nation\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\", \"is\", \"a\", \"prrk\")) !== \"this\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"b\")) !== \"b\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"play\", \"play\", \"play\")) !== \"\
    play\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Error: Call to undefined function count_unique_chars()\
    \ in /tmp/tmptdggvxdq.php:13\nStack trace:\n#0 /tmp/tmptdggvxdq.php(23): find_max()\n\
    #1 /tmp/tmptdggvxdq.php(27): candidate()\n#2 /tmp/tmptdggvxdq.php(39): test()\n\
    #3 {main}\n  thrown in /tmp/tmptdggvxdq.php on line 13\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that accepts a list of strings.\n// The list\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// find_max([\"\
    name\", \"of\", \"string\"]) == \"string\"\n// find_max([\"name\", \"enam\", \"\
    game\"]) == \"enam\"\n// find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\
    \nfunction find_max($words) {\n    $max_word = '';\n    $max_count = 0;\n    foreach\
    \ ($words as $word) {\n        $count = count_unique_chars($word);\n        if\
    \ ($count > $max_count) {\n            $max_count = $count;\n            $max_word\
    \ = $word;\n        }\n    }\n    return $max_word;\n}\n\nfunction candidate(...$args)\
    \ {\n    return find_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    name\", \"of\", \"string\")) !== \"string\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"name\", \"enam\", \"game\")) !== \"enam\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"aaaaaaa\", \"\
    bb\", \"cc\")) !== \"aaaaaaa\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"abc\", \"cba\")) !== \"abc\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"play\", \"this\", \"game\", \"of\"\
    , \"footbott\")) !== \"footbott\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"gonna\", \"rock\")) !== \"gonna\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\",\
    \ \"are\", \"a\", \"mad\", \"nation\")) !== \"nation\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\", \"is\", \"a\", \"prrk\"\
    )) !== \"this\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    b\")) !== \"b\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"play\", \"play\")) !== \"play\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Error: Call to undefined function count_unique_chars()\
    \ in /tmp/tmpd1hwsaj3.php:13\nStack trace:\n#0 /tmp/tmpd1hwsaj3.php(23): find_max()\n\
    #1 /tmp/tmpd1hwsaj3.php(27): candidate()\n#2 /tmp/tmpd1hwsaj3.php(39): test()\n\
    #3 {main}\n  thrown in /tmp/tmpd1hwsaj3.php on line 13\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that accepts a list of strings.\n// The list\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// find_max([\"\
    name\", \"of\", \"string\"]) == \"string\"\n// find_max([\"name\", \"enam\", \"\
    game\"]) == \"enam\"\n// find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\
    \nfunction find_max($words) {\n  $max = 0;\n  $max_word = \"\";\n  foreach ($words\
    \ as $word) {\n    $unique_chars = array_unique(str_split($word));\n    if (count($unique_chars)\
    \ > $max) {\n      $max = count($unique_chars);\n      $max_word = $word;\n  \
    \  }\n  }\n  return $max_word;\n}\n\nfunction candidate(...$args) {\n    return\
    \ find_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    name\", \"of\", \"string\")) !== \"string\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"name\", \"enam\", \"game\")) !== \"enam\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"aaaaaaa\", \"\
    bb\", \"cc\")) !== \"aaaaaaa\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"abc\", \"cba\")) !== \"abc\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"play\", \"this\", \"game\", \"of\"\
    , \"footbott\")) !== \"footbott\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"gonna\", \"rock\")) !== \"gonna\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\",\
    \ \"are\", \"a\", \"mad\", \"nation\")) !== \"nation\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\", \"is\", \"a\", \"prrk\"\
    )) !== \"this\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    b\")) !== \"b\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"play\", \"play\")) !== \"play\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpde6mr0nq.php:28\n\
    Stack trace:\n#0 /tmp/tmpde6mr0nq.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpde6mr0nq.php\
    \ on line 28\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that accepts a list of strings.\n// The list\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// find_max([\"\
    name\", \"of\", \"string\"]) == \"string\"\n// find_max([\"name\", \"enam\", \"\
    game\"]) == \"enam\"\n// find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\
    \nfunction find_max($words) {\n    $max_word = \"\";\n    $max_count = 0;\n  \
    \  foreach ($words as $word) {\n        $unique_chars = array_unique(str_split($word));\n\
    \        $unique_count = count($unique_chars);\n        if ($unique_count > $max_count)\
    \ {\n            $max_count = $unique_count;\n            $max_word = $word;\n\
    \        }\n    }\n    return $max_word;\n}\n\n$words = [\"name\", \"of\", \"\
    string\"];\necho find_max($words) . \"\\n\";\n$words = [\"name\", \"enam\", \"\
    game\"];\necho find_max($words) . \"\\n\";\n$words = [\"aaaaaaa\", \"bb\" ,\"\
    cc\"];\necho find_max($words) . \"\\n\";\nfunction candidate(...$args) {\n   \
    \ return find_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    name\", \"of\", \"string\")) !== \"string\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"name\", \"enam\", \"game\")) !== \"enam\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"aaaaaaa\", \"\
    bb\", \"cc\")) !== \"aaaaaaa\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"abc\", \"cba\")) !== \"abc\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"play\", \"this\", \"game\", \"of\"\
    , \"footbott\")) !== \"footbott\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"gonna\", \"rock\")) !== \"gonna\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\",\
    \ \"are\", \"a\", \"mad\", \"nation\")) !== \"nation\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\", \"is\", \"a\", \"prrk\"\
    )) !== \"this\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    b\")) !== \"b\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"play\", \"play\")) !== \"play\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "string\nname\naaaaaaa\n"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpqoheeg0m.php:35\n\
    Stack trace:\n#0 /tmp/tmpqoheeg0m.php(46): test()\n#1 {main}\n  thrown in /tmp/tmpqoheeg0m.php\
    \ on line 35\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that accepts a list of strings.\n// The list\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// find_max([\"\
    name\", \"of\", \"string\"]) == \"string\"\n// find_max([\"name\", \"enam\", \"\
    game\"]) == \"enam\"\n// find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\
    \nfunction find_max($words) {\n    $max_word = \"\";\n    $max_count = 0;\n  \
    \  foreach ($words as $word) {\n        $unique_chars = array_unique(str_split($word));\n\
    \        $unique_count = count($unique_chars);\n        if ($unique_count > $max_count)\
    \ {\n            $max_count = $unique_count;\n            $max_word = $word;\n\
    \        }\n    }\n    return $max_word;\n}\n\nfunction candidate(...$args) {\n\
    \    return find_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    name\", \"of\", \"string\")) !== \"string\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"name\", \"enam\", \"game\")) !== \"enam\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"aaaaaaa\", \"\
    bb\", \"cc\")) !== \"aaaaaaa\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"abc\", \"cba\")) !== \"abc\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"play\", \"this\", \"game\", \"of\"\
    , \"footbott\")) !== \"footbott\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"gonna\", \"rock\")) !== \"gonna\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\",\
    \ \"are\", \"a\", \"mad\", \"nation\")) !== \"nation\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\", \"is\", \"a\", \"prrk\"\
    )) !== \"this\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    b\")) !== \"b\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"play\", \"play\")) !== \"play\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmphmebb653.php:29\n\
    Stack trace:\n#0 /tmp/tmphmebb653.php(40): test()\n#1 {main}\n  thrown in /tmp/tmphmebb653.php\
    \ on line 29\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that accepts a list of strings.\n// The list\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// find_max([\"\
    name\", \"of\", \"string\"]) == \"string\"\n// find_max([\"name\", \"enam\", \"\
    game\"]) == \"enam\"\n// find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\
    \nfunction find_max($words) {\n    $max = 0;\n    $max_word = \"\";\n    foreach\
    \ ($words as $word) {\n        $unique_chars = array_unique(str_split($word));\n\
    \        if (count($unique_chars) > $max) {\n            $max = count($unique_chars);\n\
    \            $max_word = $word;\n        }\n    }\n    return $max_word;\n}\n\n\
    function candidate(...$args) {\n    return find_max(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(\"name\", \"of\", \"string\")) !== \"\
    string\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    name\", \"enam\", \"game\")) !== \"enam\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"aaaaaaa\", \"bb\", \"cc\")) !== \"aaaaaaa\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"abc\", \"\
    cba\")) !== \"abc\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"this\", \"game\", \"of\", \"footbott\")) !== \"footbott\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\", \"are\", \"\
    gonna\", \"rock\")) !== \"gonna\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"a\", \"mad\", \"nation\")) !== \"\
    nation\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\", \"is\", \"a\", \"prrk\")) !== \"this\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"b\")) !== \"b\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"play\", \"play\", \"play\")) !== \"\
    play\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp7zmmzkfh.php:28\n\
    Stack trace:\n#0 /tmp/tmp7zmmzkfh.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp7zmmzkfh.php\
    \ on line 28\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that accepts a list of strings.\n// The list\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// find_max([\"\
    name\", \"of\", \"string\"]) == \"string\"\n// find_max([\"name\", \"enam\", \"\
    game\"]) == \"enam\"\n// find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\
    \nfunction find_max($words) {\n    $max_word = \"\";\n    $max_count = 0;\n  \
    \  foreach ($words as $word) {\n        $count = count_unique_chars($word);\n\
    \        if ($count > $max_count) {\n            $max_count = $count;\n      \
    \      $max_word = $word;\n        }\n    }\n    return $max_word;\n}\n\nfunction\
    \ candidate(...$args) {\n    return find_max(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(\"name\", \"of\", \"string\")) !== \"string\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"name\"\
    , \"enam\", \"game\")) !== \"enam\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"aaaaaaa\", \"bb\", \"cc\")) !== \"aaaaaaa\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"abc\", \"\
    cba\")) !== \"abc\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"this\", \"game\", \"of\", \"footbott\")) !== \"footbott\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\", \"are\", \"\
    gonna\", \"rock\")) !== \"gonna\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"a\", \"mad\", \"nation\")) !== \"\
    nation\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\", \"is\", \"a\", \"prrk\")) !== \"this\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"b\")) !== \"b\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"play\", \"play\", \"play\")) !== \"\
    play\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Error: Call to undefined function count_unique_chars()\
    \ in /tmp/tmpwuzxixyv.php:13\nStack trace:\n#0 /tmp/tmpwuzxixyv.php(23): find_max()\n\
    #1 /tmp/tmpwuzxixyv.php(27): candidate()\n#2 /tmp/tmpwuzxixyv.php(39): test()\n\
    #3 {main}\n  thrown in /tmp/tmpwuzxixyv.php on line 13\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that accepts a list of strings.\n// The list\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// find_max([\"\
    name\", \"of\", \"string\"]) == \"string\"\n// find_max([\"name\", \"enam\", \"\
    game\"]) == \"enam\"\n// find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\
    \nfunction find_max($words) {\n    $max = 0;\n    $max_word = \"\";\n    foreach\
    \ ($words as $word) {\n        $unique_chars = array_unique(str_split($word));\n\
    \        if (count($unique_chars) > $max) {\n            $max = count($unique_chars);\n\
    \            $max_word = $word;\n        }\n    }\n    return $max_word;\n}\n\n\
    function candidate(...$args) {\n    return find_max(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(\"name\", \"of\", \"string\")) !== \"\
    string\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    name\", \"enam\", \"game\")) !== \"enam\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"aaaaaaa\", \"bb\", \"cc\")) !== \"aaaaaaa\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"abc\", \"\
    cba\")) !== \"abc\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"this\", \"game\", \"of\", \"footbott\")) !== \"footbott\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\", \"are\", \"\
    gonna\", \"rock\")) !== \"gonna\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"a\", \"mad\", \"nation\")) !== \"\
    nation\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\", \"is\", \"a\", \"prrk\")) !== \"this\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"b\")) !== \"b\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"play\", \"play\", \"play\")) !== \"\
    play\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp66mzjdc9.php:28\n\
    Stack trace:\n#0 /tmp/tmp66mzjdc9.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp66mzjdc9.php\
    \ on line 28\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that accepts a list of strings.\n// The list\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// find_max([\"\
    name\", \"of\", \"string\"]) == \"string\"\n// find_max([\"name\", \"enam\", \"\
    game\"]) == \"enam\"\n// find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\
    \nfunction find_max($words) {\n    $max = 0;\n    $max_word = \"\";\n    foreach\
    \ ($words as $word) {\n        $unique_chars = array_unique(str_split($word));\n\
    \        if (count($unique_chars) > $max) {\n            $max = count($unique_chars);\n\
    \            $max_word = $word;\n        }\n    }\n    return $max_word;\n}\n\n\
    function candidate(...$args) {\n    return find_max(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(\"name\", \"of\", \"string\")) !== \"\
    string\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    name\", \"enam\", \"game\")) !== \"enam\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"aaaaaaa\", \"bb\", \"cc\")) !== \"aaaaaaa\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"abc\", \"\
    cba\")) !== \"abc\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"this\", \"game\", \"of\", \"footbott\")) !== \"footbott\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\", \"are\", \"\
    gonna\", \"rock\")) !== \"gonna\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"a\", \"mad\", \"nation\")) !== \"\
    nation\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\", \"is\", \"a\", \"prrk\")) !== \"this\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"b\")) !== \"b\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"play\", \"play\", \"play\")) !== \"\
    play\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpwsqsa_ve.php:28\n\
    Stack trace:\n#0 /tmp/tmpwsqsa_ve.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpwsqsa_ve.php\
    \ on line 28\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that accepts a list of strings.\n// The list\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// find_max([\"\
    name\", \"of\", \"string\"]) == \"string\"\n// find_max([\"name\", \"enam\", \"\
    game\"]) == \"enam\"\n// find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\
    \nfunction find_max($words) {\n    $max = 0;\n    $max_word = \"\";\n    foreach\
    \ ($words as $word) {\n        $unique_chars = array_unique(str_split($word));\n\
    \        if (count($unique_chars) > $max) {\n            $max = count($unique_chars);\n\
    \            $max_word = $word;\n        }\n    }\n    return $max_word;\n}\n\n\
    function candidate(...$args) {\n    return find_max(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(\"name\", \"of\", \"string\")) !== \"\
    string\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    name\", \"enam\", \"game\")) !== \"enam\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"aaaaaaa\", \"bb\", \"cc\")) !== \"aaaaaaa\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"abc\", \"\
    cba\")) !== \"abc\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"this\", \"game\", \"of\", \"footbott\")) !== \"footbott\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\", \"are\", \"\
    gonna\", \"rock\")) !== \"gonna\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"a\", \"mad\", \"nation\")) !== \"\
    nation\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\", \"is\", \"a\", \"prrk\")) !== \"this\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"b\")) !== \"b\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"play\", \"play\", \"play\")) !== \"\
    play\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp783_45ic.php:28\n\
    Stack trace:\n#0 /tmp/tmp783_45ic.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp783_45ic.php\
    \ on line 28\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that accepts a list of strings.\n// The list\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// find_max([\"\
    name\", \"of\", \"string\"]) == \"string\"\n// find_max([\"name\", \"enam\", \"\
    game\"]) == \"enam\"\n// find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\
    \nfunction find_max($words) {\n  $max = 0;\n  $max_word = \"\";\n  foreach ($words\
    \ as $word) {\n    $unique_chars = array_unique(str_split($word));\n    if (count($unique_chars)\
    \ > $max) {\n      $max = count($unique_chars);\n      $max_word = $word;\n  \
    \  }\n  }\n  return $max_word;\n}\n\necho find_max([\"name\", \"of\", \"string\"\
    ]) . \"\\n\";\necho find_max([\"name\", \"enam\", \"game\"]) . \"\\n\";\necho\
    \ find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return find_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    name\", \"of\", \"string\")) !== \"string\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"name\", \"enam\", \"game\")) !== \"enam\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"aaaaaaa\", \"\
    bb\", \"cc\")) !== \"aaaaaaa\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"abc\", \"cba\")) !== \"abc\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"play\", \"this\", \"game\", \"of\"\
    , \"footbott\")) !== \"footbott\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"gonna\", \"rock\")) !== \"gonna\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\",\
    \ \"are\", \"a\", \"mad\", \"nation\")) !== \"nation\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\", \"is\", \"a\", \"prrk\"\
    )) !== \"this\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    b\")) !== \"b\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"play\", \"play\")) !== \"play\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "string\nname\naaaaaaa\n"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpld_zju02.php:31\n\
    Stack trace:\n#0 /tmp/tmpld_zju02.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpld_zju02.php\
    \ on line 31\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that accepts a list of strings.\n// The list\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// find_max([\"\
    name\", \"of\", \"string\"]) == \"string\"\n// find_max([\"name\", \"enam\", \"\
    game\"]) == \"enam\"\n// find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\
    \nfunction find_max($words) {\n    $max = 0;\n    $max_word = \"\";\n    foreach\
    \ ($words as $word) {\n        $unique_chars = array_unique(str_split($word));\n\
    \        if (count($unique_chars) > $max) {\n            $max = count($unique_chars);\n\
    \            $max_word = $word;\n        }\n    }\n    return $max_word;\n}\n\n\
    function candidate(...$args) {\n    return find_max(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(\"name\", \"of\", \"string\")) !== \"\
    string\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    name\", \"enam\", \"game\")) !== \"enam\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"aaaaaaa\", \"bb\", \"cc\")) !== \"aaaaaaa\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"abc\", \"\
    cba\")) !== \"abc\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"this\", \"game\", \"of\", \"footbott\")) !== \"footbott\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\", \"are\", \"\
    gonna\", \"rock\")) !== \"gonna\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"a\", \"mad\", \"nation\")) !== \"\
    nation\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\", \"is\", \"a\", \"prrk\")) !== \"this\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"b\")) !== \"b\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"play\", \"play\", \"play\")) !== \"\
    play\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpw52o7548.php:28\n\
    Stack trace:\n#0 /tmp/tmpw52o7548.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpw52o7548.php\
    \ on line 28\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that accepts a list of strings.\n// The list\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// find_max([\"\
    name\", \"of\", \"string\"]) == \"string\"\n// find_max([\"name\", \"enam\", \"\
    game\"]) == \"enam\"\n// find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\
    \nfunction find_max($words) {\n    $max_word = \"\";\n    $max_count = 0;\n  \
    \  foreach ($words as $word) {\n        $count = count_unique_chars($word);\n\
    \        if ($count > $max_count) {\n            $max_count = $count;\n      \
    \      $max_word = $word;\n        }\n    }\n    return $max_word;\n}\n\nfunction\
    \ candidate(...$args) {\n    return find_max(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(\"name\", \"of\", \"string\")) !== \"string\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"name\"\
    , \"enam\", \"game\")) !== \"enam\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"aaaaaaa\", \"bb\", \"cc\")) !== \"aaaaaaa\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"abc\", \"\
    cba\")) !== \"abc\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"this\", \"game\", \"of\", \"footbott\")) !== \"footbott\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\", \"are\", \"\
    gonna\", \"rock\")) !== \"gonna\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"a\", \"mad\", \"nation\")) !== \"\
    nation\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\", \"is\", \"a\", \"prrk\")) !== \"this\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"b\")) !== \"b\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"play\", \"play\", \"play\")) !== \"\
    play\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Error: Call to undefined function count_unique_chars()\
    \ in /tmp/tmppbcg_mxh.php:13\nStack trace:\n#0 /tmp/tmppbcg_mxh.php(23): find_max()\n\
    #1 /tmp/tmppbcg_mxh.php(27): candidate()\n#2 /tmp/tmppbcg_mxh.php(39): test()\n\
    #3 {main}\n  thrown in /tmp/tmppbcg_mxh.php on line 13\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that accepts a list of strings.\n// The list\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// find_max([\"\
    name\", \"of\", \"string\"]) == \"string\"\n// find_max([\"name\", \"enam\", \"\
    game\"]) == \"enam\"\n// find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\
    \nfunction find_max($words) {\n    $max_word = \"\";\n    $max_count = 0;\n  \
    \  foreach ($words as $word) {\n        $count = count_unique_chars($word);\n\
    \        if ($count > $max_count) {\n            $max_count = $count;\n      \
    \      $max_word = $word;\n        }\n    }\n    return $max_word;\n}\n\nfunction\
    \ candidate(...$args) {\n    return find_max(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(\"name\", \"of\", \"string\")) !== \"string\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"name\"\
    , \"enam\", \"game\")) !== \"enam\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"aaaaaaa\", \"bb\", \"cc\")) !== \"aaaaaaa\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"abc\", \"\
    cba\")) !== \"abc\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"this\", \"game\", \"of\", \"footbott\")) !== \"footbott\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\", \"are\", \"\
    gonna\", \"rock\")) !== \"gonna\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"a\", \"mad\", \"nation\")) !== \"\
    nation\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\", \"is\", \"a\", \"prrk\")) !== \"this\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"b\")) !== \"b\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"play\", \"play\", \"play\")) !== \"\
    play\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Error: Call to undefined function count_unique_chars()\
    \ in /tmp/tmpzsb3r2qn.php:13\nStack trace:\n#0 /tmp/tmpzsb3r2qn.php(23): find_max()\n\
    #1 /tmp/tmpzsb3r2qn.php(27): candidate()\n#2 /tmp/tmpzsb3r2qn.php(39): test()\n\
    #3 {main}\n  thrown in /tmp/tmpzsb3r2qn.php on line 13\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that accepts a list of strings.\n// The list\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// find_max([\"\
    name\", \"of\", \"string\"]) == \"string\"\n// find_max([\"name\", \"enam\", \"\
    game\"]) == \"enam\"\n// find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\
    \nfunction find_max($words) {\n    $max_word = '';\n    $max_count = 0;\n    foreach\
    \ ($words as $word) {\n        $count = count_unique_chars($word);\n        if\
    \ ($count > $max_count) {\n            $max_count = $count;\n            $max_word\
    \ = $word;\n        }\n    }\n    return $max_word;\n}\n\nfunction candidate(...$args)\
    \ {\n    return find_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    name\", \"of\", \"string\")) !== \"string\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"name\", \"enam\", \"game\")) !== \"enam\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"aaaaaaa\", \"\
    bb\", \"cc\")) !== \"aaaaaaa\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"abc\", \"cba\")) !== \"abc\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"play\", \"this\", \"game\", \"of\"\
    , \"footbott\")) !== \"footbott\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"gonna\", \"rock\")) !== \"gonna\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\",\
    \ \"are\", \"a\", \"mad\", \"nation\")) !== \"nation\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\", \"is\", \"a\", \"prrk\"\
    )) !== \"this\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    b\")) !== \"b\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"play\", \"play\")) !== \"play\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Error: Call to undefined function count_unique_chars()\
    \ in /tmp/tmpobvd2ppv.php:13\nStack trace:\n#0 /tmp/tmpobvd2ppv.php(23): find_max()\n\
    #1 /tmp/tmpobvd2ppv.php(27): candidate()\n#2 /tmp/tmpobvd2ppv.php(39): test()\n\
    #3 {main}\n  thrown in /tmp/tmpobvd2ppv.php on line 13\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that accepts a list of strings.\n// The list\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// find_max([\"\
    name\", \"of\", \"string\"]) == \"string\"\n// find_max([\"name\", \"enam\", \"\
    game\"]) == \"enam\"\n// find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\
    \nfunction find_max($words) {\n    $max_word = \"\";\n    $max_count = 0;\n  \
    \  foreach ($words as $word) {\n        $count = count_unique_chars($word);\n\
    \        if ($count > $max_count) {\n            $max_count = $count;\n      \
    \      $max_word = $word;\n        }\n    }\n    return $max_word;\n}\n\nfunction\
    \ candidate(...$args) {\n    return find_max(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(\"name\", \"of\", \"string\")) !== \"string\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"name\"\
    , \"enam\", \"game\")) !== \"enam\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"aaaaaaa\", \"bb\", \"cc\")) !== \"aaaaaaa\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"abc\", \"\
    cba\")) !== \"abc\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"this\", \"game\", \"of\", \"footbott\")) !== \"footbott\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\", \"are\", \"\
    gonna\", \"rock\")) !== \"gonna\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"a\", \"mad\", \"nation\")) !== \"\
    nation\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\", \"is\", \"a\", \"prrk\")) !== \"this\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"b\")) !== \"b\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"play\", \"play\", \"play\")) !== \"\
    play\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Error: Call to undefined function count_unique_chars()\
    \ in /tmp/tmp2ctto18l.php:13\nStack trace:\n#0 /tmp/tmp2ctto18l.php(23): find_max()\n\
    #1 /tmp/tmp2ctto18l.php(27): candidate()\n#2 /tmp/tmp2ctto18l.php(39): test()\n\
    #3 {main}\n  thrown in /tmp/tmp2ctto18l.php on line 13\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that accepts a list of strings.\n// The list\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// find_max([\"\
    name\", \"of\", \"string\"]) == \"string\"\n// find_max([\"name\", \"enam\", \"\
    game\"]) == \"enam\"\n// find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\
    \nfunction find_max($words) {\n    $max = 0;\n    $max_word = \"\";\n    foreach\
    \ ($words as $word) {\n        $unique_chars = array_unique(str_split($word));\n\
    \        if (count($unique_chars) > $max) {\n            $max = count($unique_chars);\n\
    \            $max_word = $word;\n        }\n    }\n    return $max_word;\n}\n\n\
    function candidate(...$args) {\n    return find_max(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(\"name\", \"of\", \"string\")) !== \"\
    string\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    name\", \"enam\", \"game\")) !== \"enam\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"aaaaaaa\", \"bb\", \"cc\")) !== \"aaaaaaa\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"abc\", \"\
    cba\")) !== \"abc\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"this\", \"game\", \"of\", \"footbott\")) !== \"footbott\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\", \"are\", \"\
    gonna\", \"rock\")) !== \"gonna\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"a\", \"mad\", \"nation\")) !== \"\
    nation\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\", \"is\", \"a\", \"prrk\")) !== \"this\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"b\")) !== \"b\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"play\", \"play\", \"play\")) !== \"\
    play\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp0jhrx4qv.php:28\n\
    Stack trace:\n#0 /tmp/tmp0jhrx4qv.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp0jhrx4qv.php\
    \ on line 28\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that accepts a list of strings.\n// The list\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// find_max([\"\
    name\", \"of\", \"string\"]) == \"string\"\n// find_max([\"name\", \"enam\", \"\
    game\"]) == \"enam\"\n// find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\
    \nfunction find_max($words) {\n    $max_unique_chars = 0;\n    $max_word = \"\"\
    ;\n    foreach ($words as $word) {\n        $unique_chars = count_unique_chars($word);\n\
    \        if ($unique_chars > $max_unique_chars) {\n            $max_unique_chars\
    \ = $unique_chars;\n            $max_word = $word;\n        }\n    }\n    return\
    \ $max_word;\n}\n\nfunction candidate(...$args) {\n    return find_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(\"name\", \"of\", \"string\"\
    )) !== \"string\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    name\", \"enam\", \"game\")) !== \"enam\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"aaaaaaa\", \"bb\", \"cc\")) !== \"aaaaaaa\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"abc\", \"\
    cba\")) !== \"abc\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"this\", \"game\", \"of\", \"footbott\")) !== \"footbott\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\", \"are\", \"\
    gonna\", \"rock\")) !== \"gonna\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"a\", \"mad\", \"nation\")) !== \"\
    nation\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\", \"is\", \"a\", \"prrk\")) !== \"this\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"b\")) !== \"b\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"play\", \"play\", \"play\")) !== \"\
    play\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Error: Call to undefined function count_unique_chars()\
    \ in /tmp/tmpaxbfzacy.php:13\nStack trace:\n#0 /tmp/tmpaxbfzacy.php(23): find_max()\n\
    #1 /tmp/tmpaxbfzacy.php(27): candidate()\n#2 /tmp/tmpaxbfzacy.php(39): test()\n\
    #3 {main}\n  thrown in /tmp/tmpaxbfzacy.php on line 13\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that accepts a list of strings.\n// The list\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// find_max([\"\
    name\", \"of\", \"string\"]) == \"string\"\n// find_max([\"name\", \"enam\", \"\
    game\"]) == \"enam\"\n// find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\
    \nfunction find_max($words) {\n  $max_word = \"\";\n  $max_count = 0;\n  foreach\
    \ ($words as $word) {\n    $count = count_unique_chars($word);\n    if ($count\
    \ > $max_count) {\n      $max_count = $count;\n      $max_word = $word;\n    }\n\
    \  }\n  return $max_word;\n}\n\nfunction candidate(...$args) {\n    return find_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(\"name\", \"of\", \"string\"\
    )) !== \"string\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    name\", \"enam\", \"game\")) !== \"enam\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"aaaaaaa\", \"bb\", \"cc\")) !== \"aaaaaaa\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"abc\", \"\
    cba\")) !== \"abc\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"this\", \"game\", \"of\", \"footbott\")) !== \"footbott\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\", \"are\", \"\
    gonna\", \"rock\")) !== \"gonna\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"a\", \"mad\", \"nation\")) !== \"\
    nation\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\", \"is\", \"a\", \"prrk\")) !== \"this\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"b\")) !== \"b\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"play\", \"play\", \"play\")) !== \"\
    play\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Error: Call to undefined function count_unique_chars()\
    \ in /tmp/tmpanof8ac9.php:13\nStack trace:\n#0 /tmp/tmpanof8ac9.php(23): find_max()\n\
    #1 /tmp/tmpanof8ac9.php(27): candidate()\n#2 /tmp/tmpanof8ac9.php(39): test()\n\
    #3 {main}\n  thrown in /tmp/tmpanof8ac9.php on line 13\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that accepts a list of strings.\n// The list\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// find_max([\"\
    name\", \"of\", \"string\"]) == \"string\"\n// find_max([\"name\", \"enam\", \"\
    game\"]) == \"enam\"\n// find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\
    \nfunction find_max($words) {\n    $max = 0;\n    $max_word = '';\n    foreach\
    \ ($words as $word) {\n        $unique_chars = array_unique(str_split($word));\n\
    \        if (count($unique_chars) > $max) {\n            $max = count($unique_chars);\n\
    \            $max_word = $word;\n        }\n    }\n    return $max_word;\n}\n\n\
    function candidate(...$args) {\n    return find_max(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(\"name\", \"of\", \"string\")) !== \"\
    string\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    name\", \"enam\", \"game\")) !== \"enam\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"aaaaaaa\", \"bb\", \"cc\")) !== \"aaaaaaa\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"abc\", \"\
    cba\")) !== \"abc\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"this\", \"game\", \"of\", \"footbott\")) !== \"footbott\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\", \"are\", \"\
    gonna\", \"rock\")) !== \"gonna\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"a\", \"mad\", \"nation\")) !== \"\
    nation\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\", \"is\", \"a\", \"prrk\")) !== \"this\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"b\")) !== \"b\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"play\", \"play\", \"play\")) !== \"\
    play\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpk_ahfpij.php:28\n\
    Stack trace:\n#0 /tmp/tmpk_ahfpij.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpk_ahfpij.php\
    \ on line 28\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that accepts a list of strings.\n// The list\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// find_max([\"\
    name\", \"of\", \"string\"]) == \"string\"\n// find_max([\"name\", \"enam\", \"\
    game\"]) == \"enam\"\n// find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\
    \nfunction find_max($words) {\n    $max_word = \"\";\n    $max_count = 0;\n  \
    \  foreach ($words as $word) {\n        $count = count_unique_chars($word);\n\
    \        if ($count > $max_count) {\n            $max_count = $count;\n      \
    \      $max_word = $word;\n        }\n    }\n    return $max_word;\n}\n\nfunction\
    \ candidate(...$args) {\n    return find_max(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(\"name\", \"of\", \"string\")) !== \"string\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"name\"\
    , \"enam\", \"game\")) !== \"enam\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"aaaaaaa\", \"bb\", \"cc\")) !== \"aaaaaaa\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"abc\", \"\
    cba\")) !== \"abc\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"this\", \"game\", \"of\", \"footbott\")) !== \"footbott\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\", \"are\", \"\
    gonna\", \"rock\")) !== \"gonna\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"a\", \"mad\", \"nation\")) !== \"\
    nation\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\", \"is\", \"a\", \"prrk\")) !== \"this\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"b\")) !== \"b\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"play\", \"play\", \"play\")) !== \"\
    play\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Error: Call to undefined function count_unique_chars()\
    \ in /tmp/tmp6no55nso.php:13\nStack trace:\n#0 /tmp/tmp6no55nso.php(23): find_max()\n\
    #1 /tmp/tmp6no55nso.php(27): candidate()\n#2 /tmp/tmp6no55nso.php(39): test()\n\
    #3 {main}\n  thrown in /tmp/tmp6no55nso.php on line 13\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that accepts a list of strings.\n// The list\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// find_max([\"\
    name\", \"of\", \"string\"]) == \"string\"\n// find_max([\"name\", \"enam\", \"\
    game\"]) == \"enam\"\n// find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\
    \nfunction find_max($words) {\n    $max = 0;\n    $max_word = \"\";\n    foreach\
    \ ($words as $word) {\n        $unique_chars = array_unique(str_split($word));\n\
    \        if (count($unique_chars) > $max) {\n            $max = count($unique_chars);\n\
    \            $max_word = $word;\n        }\n    }\n    return $max_word;\n}\n\n\
    echo find_max([\"name\", \"of\", \"string\"]) . \"\\n\";\necho find_max([\"name\"\
    , \"enam\", \"game\"]) . \"\\n\";\necho find_max([\"aaaaaaa\", \"bb\" ,\"cc\"\
    ]) . \"\\n\";\nfunction candidate(...$args) {\n    return find_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(\"name\", \"of\", \"string\"\
    )) !== \"string\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    name\", \"enam\", \"game\")) !== \"enam\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"aaaaaaa\", \"bb\", \"cc\")) !== \"aaaaaaa\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"abc\", \"\
    cba\")) !== \"abc\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"this\", \"game\", \"of\", \"footbott\")) !== \"footbott\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\", \"are\", \"\
    gonna\", \"rock\")) !== \"gonna\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"a\", \"mad\", \"nation\")) !== \"\
    nation\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\", \"is\", \"a\", \"prrk\")) !== \"this\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"b\")) !== \"b\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"play\", \"play\", \"play\")) !== \"\
    play\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "string\nname\naaaaaaa\n"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpt6dkguw9.php:31\n\
    Stack trace:\n#0 /tmp/tmpt6dkguw9.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpt6dkguw9.php\
    \ on line 31\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that accepts a list of strings.\n// The list\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// find_max([\"\
    name\", \"of\", \"string\"]) == \"string\"\n// find_max([\"name\", \"enam\", \"\
    game\"]) == \"enam\"\n// find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\
    \nfunction find_max($words) {\n    $max = 0;\n    $max_word = \"\";\n    foreach\
    \ ($words as $word) {\n        $unique_chars = array_unique(str_split($word));\n\
    \        if (count($unique_chars) > $max) {\n            $max = count($unique_chars);\n\
    \            $max_word = $word;\n        }\n    }\n    return $max_word;\n}\n\n\
    echo find_max([\"name\", \"of\", \"string\"]) . \"\\n\";\necho find_max([\"name\"\
    , \"enam\", \"game\"]) . \"\\n\";\necho find_max([\"aaaaaaa\", \"bb\" ,\"cc\"\
    ]) . \"\\n\";\nfunction candidate(...$args) {\n    return find_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(\"name\", \"of\", \"string\"\
    )) !== \"string\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    name\", \"enam\", \"game\")) !== \"enam\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"aaaaaaa\", \"bb\", \"cc\")) !== \"aaaaaaa\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"abc\", \"\
    cba\")) !== \"abc\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"this\", \"game\", \"of\", \"footbott\")) !== \"footbott\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\", \"are\", \"\
    gonna\", \"rock\")) !== \"gonna\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"a\", \"mad\", \"nation\")) !== \"\
    nation\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\", \"is\", \"a\", \"prrk\")) !== \"this\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"b\")) !== \"b\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"play\", \"play\", \"play\")) !== \"\
    play\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "string\nname\naaaaaaa\n"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp5if37pnv.php:31\n\
    Stack trace:\n#0 /tmp/tmp5if37pnv.php(42): test()\n#1 {main}\n  thrown in /tmp/tmp5if37pnv.php\
    \ on line 31\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that accepts a list of strings.\n// The list\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// find_max([\"\
    name\", \"of\", \"string\"]) == \"string\"\n// find_max([\"name\", \"enam\", \"\
    game\"]) == \"enam\"\n// find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\
    \nfunction find_max($words) {\n    $max = 0;\n    $max_word = \"\";\n    foreach\
    \ ($words as $word) {\n        $unique_chars = array_unique(str_split($word));\n\
    \        if (count($unique_chars) > $max) {\n            $max = count($unique_chars);\n\
    \            $max_word = $word;\n        }\n    }\n    return $max_word;\n}\n\n\
    function candidate(...$args) {\n    return find_max(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(\"name\", \"of\", \"string\")) !== \"\
    string\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    name\", \"enam\", \"game\")) !== \"enam\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"aaaaaaa\", \"bb\", \"cc\")) !== \"aaaaaaa\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"abc\", \"\
    cba\")) !== \"abc\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"this\", \"game\", \"of\", \"footbott\")) !== \"footbott\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\", \"are\", \"\
    gonna\", \"rock\")) !== \"gonna\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"a\", \"mad\", \"nation\")) !== \"\
    nation\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\", \"is\", \"a\", \"prrk\")) !== \"this\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"b\")) !== \"b\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"play\", \"play\", \"play\")) !== \"\
    play\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpafbfyibm.php:28\n\
    Stack trace:\n#0 /tmp/tmpafbfyibm.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpafbfyibm.php\
    \ on line 28\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that accepts a list of strings.\n// The list\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// find_max([\"\
    name\", \"of\", \"string\"]) == \"string\"\n// find_max([\"name\", \"enam\", \"\
    game\"]) == \"enam\"\n// find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\
    \nfunction find_max($words) {\n    $max = 0;\n    $max_word = \"\";\n    foreach\
    \ ($words as $word) {\n        $unique_chars = array_unique(str_split($word));\n\
    \        if (count($unique_chars) > $max) {\n            $max = count($unique_chars);\n\
    \            $max_word = $word;\n        }\n    }\n    return $max_word;\n}\n\n\
    function candidate(...$args) {\n    return find_max(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(\"name\", \"of\", \"string\")) !== \"\
    string\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    name\", \"enam\", \"game\")) !== \"enam\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"aaaaaaa\", \"bb\", \"cc\")) !== \"aaaaaaa\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"abc\", \"\
    cba\")) !== \"abc\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"this\", \"game\", \"of\", \"footbott\")) !== \"footbott\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\", \"are\", \"\
    gonna\", \"rock\")) !== \"gonna\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"a\", \"mad\", \"nation\")) !== \"\
    nation\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\", \"is\", \"a\", \"prrk\")) !== \"this\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"b\")) !== \"b\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"play\", \"play\", \"play\")) !== \"\
    play\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpcmrib4v4.php:28\n\
    Stack trace:\n#0 /tmp/tmpcmrib4v4.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpcmrib4v4.php\
    \ on line 28\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that accepts a list of strings.\n// The list\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// find_max([\"\
    name\", \"of\", \"string\"]) == \"string\"\n// find_max([\"name\", \"enam\", \"\
    game\"]) == \"enam\"\n// find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\
    \nfunction find_max($words) {\n    $max = 0;\n    $max_word = \"\";\n    foreach\
    \ ($words as $word) {\n        $unique_chars = array_unique(str_split($word));\n\
    \        if (count($unique_chars) > $max) {\n            $max = count($unique_chars);\n\
    \            $max_word = $word;\n        }\n    }\n    return $max_word;\n}\n\
    echo find_max([\"name\", \"of\", \"string\"]) . \"\\n\";\necho find_max([\"name\"\
    , \"enam\", \"game\"]) . \"\\n\";\necho find_max([\"aaaaaaa\", \"bb\" ,\"cc\"\
    ]) . \"\\n\";\n\nfunction candidate(...$args) {\n    return find_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(\"name\", \"of\", \"string\"\
    )) !== \"string\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    name\", \"enam\", \"game\")) !== \"enam\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"aaaaaaa\", \"bb\", \"cc\")) !== \"aaaaaaa\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"abc\", \"\
    cba\")) !== \"abc\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"this\", \"game\", \"of\", \"footbott\")) !== \"footbott\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\", \"are\", \"\
    gonna\", \"rock\")) !== \"gonna\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"a\", \"mad\", \"nation\")) !== \"\
    nation\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\", \"is\", \"a\", \"prrk\")) !== \"this\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"b\")) !== \"b\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"play\", \"play\", \"play\")) !== \"\
    play\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "string\nname\naaaaaaa\n"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp_a6440ty.php:31\n\
    Stack trace:\n#0 /tmp/tmp_a6440ty.php(42): test()\n#1 {main}\n  thrown in /tmp/tmp_a6440ty.php\
    \ on line 31\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that accepts a list of strings.\n// The list\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// find_max([\"\
    name\", \"of\", \"string\"]) == \"string\"\n// find_max([\"name\", \"enam\", \"\
    game\"]) == \"enam\"\n// find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\
    \nfunction find_max($words) {\n    $max_word = \"\";\n    $max_count = 0;\n  \
    \  foreach ($words as $word) {\n        $count = count_unique_chars($word);\n\
    \        if ($count > $max_count) {\n            $max_count = $count;\n      \
    \      $max_word = $word;\n        }\n    }\n    return $max_word;\n}\n\nfunction\
    \ candidate(...$args) {\n    return find_max(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(\"name\", \"of\", \"string\")) !== \"string\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"name\"\
    , \"enam\", \"game\")) !== \"enam\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"aaaaaaa\", \"bb\", \"cc\")) !== \"aaaaaaa\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"abc\", \"\
    cba\")) !== \"abc\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"this\", \"game\", \"of\", \"footbott\")) !== \"footbott\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\", \"are\", \"\
    gonna\", \"rock\")) !== \"gonna\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"a\", \"mad\", \"nation\")) !== \"\
    nation\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\", \"is\", \"a\", \"prrk\")) !== \"this\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"b\")) !== \"b\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"play\", \"play\", \"play\")) !== \"\
    play\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Error: Call to undefined function count_unique_chars()\
    \ in /tmp/tmpwn7rjaat.php:13\nStack trace:\n#0 /tmp/tmpwn7rjaat.php(23): find_max()\n\
    #1 /tmp/tmpwn7rjaat.php(27): candidate()\n#2 /tmp/tmpwn7rjaat.php(39): test()\n\
    #3 {main}\n  thrown in /tmp/tmpwn7rjaat.php on line 13\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that accepts a list of strings.\n// The list\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// find_max([\"\
    name\", \"of\", \"string\"]) == \"string\"\n// find_max([\"name\", \"enam\", \"\
    game\"]) == \"enam\"\n// find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\
    \nfunction find_max($words) {\n    $max = 0;\n    $max_word = \"\";\n    foreach\
    \ ($words as $word) {\n        $unique_chars = count_unique_chars($word);\n  \
    \      if ($unique_chars > $max) {\n            $max = $unique_chars;\n      \
    \      $max_word = $word;\n        }\n    }\n    return $max_word;\n}\n\nfunction\
    \ candidate(...$args) {\n    return find_max(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(\"name\", \"of\", \"string\")) !== \"string\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"name\"\
    , \"enam\", \"game\")) !== \"enam\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"aaaaaaa\", \"bb\", \"cc\")) !== \"aaaaaaa\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"abc\", \"\
    cba\")) !== \"abc\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"this\", \"game\", \"of\", \"footbott\")) !== \"footbott\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\", \"are\", \"\
    gonna\", \"rock\")) !== \"gonna\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"a\", \"mad\", \"nation\")) !== \"\
    nation\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\", \"is\", \"a\", \"prrk\")) !== \"this\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"b\")) !== \"b\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"play\", \"play\", \"play\")) !== \"\
    play\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Error: Call to undefined function count_unique_chars()\
    \ in /tmp/tmp36ivwwty.php:13\nStack trace:\n#0 /tmp/tmp36ivwwty.php(23): find_max()\n\
    #1 /tmp/tmp36ivwwty.php(27): candidate()\n#2 /tmp/tmp36ivwwty.php(39): test()\n\
    #3 {main}\n  thrown in /tmp/tmp36ivwwty.php on line 13\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that accepts a list of strings.\n// The list\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// find_max([\"\
    name\", \"of\", \"string\"]) == \"string\"\n// find_max([\"name\", \"enam\", \"\
    game\"]) == \"enam\"\n// find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\
    \nfunction find_max($words) {\n  $max = 0;\n  $max_word = \"\";\n  foreach ($words\
    \ as $word) {\n    $unique_chars = array_unique(str_split($word));\n    if (count($unique_chars)\
    \ > $max) {\n      $max = count($unique_chars);\n      $max_word = $word;\n  \
    \  }\n  }\n  return $max_word;\n}\n\n$words = [\"name\", \"of\", \"string\"];\n\
    echo find_max($words) . \"\\n\";\n$words = [\"name\", \"enam\", \"game\"];\necho\
    \ find_max($words) . \"\\n\";\n$words = [\"aaaaaaa\", \"bb\" ,\"cc\"];\necho find_max($words)\
    \ . \"\\n\";\nfunction candidate(...$args) {\n    return find_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(\"name\", \"of\", \"string\"\
    )) !== \"string\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    name\", \"enam\", \"game\")) !== \"enam\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"aaaaaaa\", \"bb\", \"cc\")) !== \"aaaaaaa\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"abc\", \"\
    cba\")) !== \"abc\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"this\", \"game\", \"of\", \"footbott\")) !== \"footbott\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\", \"are\", \"\
    gonna\", \"rock\")) !== \"gonna\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"a\", \"mad\", \"nation\")) !== \"\
    nation\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\", \"is\", \"a\", \"prrk\")) !== \"this\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"b\")) !== \"b\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"play\", \"play\", \"play\")) !== \"\
    play\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "string\nname\naaaaaaa\n"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpci4ztcb4.php:34\n\
    Stack trace:\n#0 /tmp/tmpci4ztcb4.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpci4ztcb4.php\
    \ on line 34\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that accepts a list of strings.\n// The list\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// find_max([\"\
    name\", \"of\", \"string\"]) == \"string\"\n// find_max([\"name\", \"enam\", \"\
    game\"]) == \"enam\"\n// find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\
    \nfunction find_max($words) {\n    $max = 0;\n    $max_word = \"\";\n    foreach\
    \ ($words as $word) {\n        $unique_chars = array_unique(str_split($word));\n\
    \        if (count($unique_chars) > $max) {\n            $max = count($unique_chars);\n\
    \            $max_word = $word;\n        }\n    }\n    return $max_word;\n}\n\n\
    $words = [\"name\", \"of\", \"string\"];\necho find_max($words) . \"\\n\";\n$words\
    \ = [\"name\", \"enam\", \"game\"];\necho find_max($words) . \"\\n\";\n$words\
    \ = [\"aaaaaaa\", \"bb\" ,\"cc\"];\necho find_max($words) . \"\\n\";\n\nfunction\
    \ candidate(...$args) {\n    return find_max(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(\"name\", \"of\", \"string\")) !== \"string\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"name\"\
    , \"enam\", \"game\")) !== \"enam\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"aaaaaaa\", \"bb\", \"cc\")) !== \"aaaaaaa\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"abc\", \"\
    cba\")) !== \"abc\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"this\", \"game\", \"of\", \"footbott\")) !== \"footbott\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\", \"are\", \"\
    gonna\", \"rock\")) !== \"gonna\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"a\", \"mad\", \"nation\")) !== \"\
    nation\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\", \"is\", \"a\", \"prrk\")) !== \"this\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"b\")) !== \"b\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"play\", \"play\", \"play\")) !== \"\
    play\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "string\nname\naaaaaaa\n"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpv9kvworg.php:35\n\
    Stack trace:\n#0 /tmp/tmpv9kvworg.php(46): test()\n#1 {main}\n  thrown in /tmp/tmpv9kvworg.php\
    \ on line 35\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that accepts a list of strings.\n// The list\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// find_max([\"\
    name\", \"of\", \"string\"]) == \"string\"\n// find_max([\"name\", \"enam\", \"\
    game\"]) == \"enam\"\n// find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\
    \nfunction find_max($words) {\n    $max = 0;\n    $max_word = \"\";\n    foreach\
    \ ($words as $word) {\n        $unique_chars = array_unique(str_split($word));\n\
    \        if (count($unique_chars) > $max) {\n            $max = count($unique_chars);\n\
    \            $max_word = $word;\n        }\n    }\n    return $max_word;\n}\n\n\
    function candidate(...$args) {\n    return find_max(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(\"name\", \"of\", \"string\")) !== \"\
    string\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    name\", \"enam\", \"game\")) !== \"enam\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"aaaaaaa\", \"bb\", \"cc\")) !== \"aaaaaaa\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"abc\", \"\
    cba\")) !== \"abc\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"this\", \"game\", \"of\", \"footbott\")) !== \"footbott\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\", \"are\", \"\
    gonna\", \"rock\")) !== \"gonna\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"a\", \"mad\", \"nation\")) !== \"\
    nation\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\", \"is\", \"a\", \"prrk\")) !== \"this\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"b\")) !== \"b\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"play\", \"play\", \"play\")) !== \"\
    play\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpdyspisis.php:28\n\
    Stack trace:\n#0 /tmp/tmpdyspisis.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpdyspisis.php\
    \ on line 28\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that accepts a list of strings.\n// The list\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// find_max([\"\
    name\", \"of\", \"string\"]) == \"string\"\n// find_max([\"name\", \"enam\", \"\
    game\"]) == \"enam\"\n// find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\
    \nfunction find_max($words) {\n    $max = 0;\n    $result = \"\";\n    foreach\
    \ ($words as $word) {\n        $unique_chars = array_unique(str_split($word));\n\
    \        if (count($unique_chars) > $max) {\n            $max = count($unique_chars);\n\
    \            $result = $word;\n        }\n    }\n    return $result;\n}\n\necho\
    \ find_max([\"name\", \"of\", \"string\"]) . \"\\n\";\necho find_max([\"name\"\
    , \"enam\", \"game\"]) . \"\\n\";\necho find_max([\"aaaaaaa\", \"bb\" ,\"cc\"\
    ]) . \"\\n\";\nfunction candidate(...$args) {\n    return find_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(\"name\", \"of\", \"string\"\
    )) !== \"string\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    name\", \"enam\", \"game\")) !== \"enam\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"aaaaaaa\", \"bb\", \"cc\")) !== \"aaaaaaa\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"abc\", \"\
    cba\")) !== \"abc\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"this\", \"game\", \"of\", \"footbott\")) !== \"footbott\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\", \"are\", \"\
    gonna\", \"rock\")) !== \"gonna\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"a\", \"mad\", \"nation\")) !== \"\
    nation\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\", \"is\", \"a\", \"prrk\")) !== \"this\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"b\")) !== \"b\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"play\", \"play\", \"play\")) !== \"\
    play\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "string\nname\naaaaaaa\n"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp8smytvuv.php:31\n\
    Stack trace:\n#0 /tmp/tmp8smytvuv.php(42): test()\n#1 {main}\n  thrown in /tmp/tmp8smytvuv.php\
    \ on line 31\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that accepts a list of strings.\n// The list\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// find_max([\"\
    name\", \"of\", \"string\"]) == \"string\"\n// find_max([\"name\", \"enam\", \"\
    game\"]) == \"enam\"\n// find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\
    \nfunction find_max($words) {\n    $max_word = \"\";\n    $max_count = 0;\n  \
    \  foreach ($words as $word) {\n        $unique_chars = array_unique(str_split($word));\n\
    \        $unique_count = count($unique_chars);\n        if ($unique_count > $max_count)\
    \ {\n            $max_count = $unique_count;\n            $max_word = $word;\n\
    \        }\n    }\n    return $max_word;\n}\n\nfunction candidate(...$args) {\n\
    \    return find_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    name\", \"of\", \"string\")) !== \"string\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"name\", \"enam\", \"game\")) !== \"enam\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"aaaaaaa\", \"\
    bb\", \"cc\")) !== \"aaaaaaa\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"abc\", \"cba\")) !== \"abc\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"play\", \"this\", \"game\", \"of\"\
    , \"footbott\")) !== \"footbott\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"gonna\", \"rock\")) !== \"gonna\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\",\
    \ \"are\", \"a\", \"mad\", \"nation\")) !== \"nation\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\", \"is\", \"a\", \"prrk\"\
    )) !== \"this\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    b\")) !== \"b\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"play\", \"play\")) !== \"play\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp299cds60.php:29\n\
    Stack trace:\n#0 /tmp/tmp299cds60.php(40): test()\n#1 {main}\n  thrown in /tmp/tmp299cds60.php\
    \ on line 29\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that accepts a list of strings.\n// The list\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// find_max([\"\
    name\", \"of\", \"string\"]) == \"string\"\n// find_max([\"name\", \"enam\", \"\
    game\"]) == \"enam\"\n// find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\
    \nfunction find_max($words) {\n  $max = 0;\n  $max_word = \"\";\n  foreach ($words\
    \ as $word) {\n    $unique_chars = array_unique(str_split($word));\n    if (count($unique_chars)\
    \ > $max) {\n      $max = count($unique_chars);\n      $max_word = $word;\n  \
    \  }\n  }\n  return $max_word;\n}\n\nfunction candidate(...$args) {\n    return\
    \ find_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    name\", \"of\", \"string\")) !== \"string\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"name\", \"enam\", \"game\")) !== \"enam\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"aaaaaaa\", \"\
    bb\", \"cc\")) !== \"aaaaaaa\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"abc\", \"cba\")) !== \"abc\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"play\", \"this\", \"game\", \"of\"\
    , \"footbott\")) !== \"footbott\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"gonna\", \"rock\")) !== \"gonna\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\",\
    \ \"are\", \"a\", \"mad\", \"nation\")) !== \"nation\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\", \"is\", \"a\", \"prrk\"\
    )) !== \"this\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    b\")) !== \"b\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"play\", \"play\")) !== \"play\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpn5x7maes.php:28\n\
    Stack trace:\n#0 /tmp/tmpn5x7maes.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpn5x7maes.php\
    \ on line 28\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that accepts a list of strings.\n// The list\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// find_max([\"\
    name\", \"of\", \"string\"]) == \"string\"\n// find_max([\"name\", \"enam\", \"\
    game\"]) == \"enam\"\n// find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\
    \nfunction find_max($words) {\n    $max_word = \"\";\n    $max_count = 0;\n  \
    \  foreach ($words as $word) {\n        $count = count_unique_characters($word);\n\
    \        if ($count > $max_count) {\n            $max_count = $count;\n      \
    \      $max_word = $word;\n        }\n    }\n    return $max_word;\n}\n\nfunction\
    \ candidate(...$args) {\n    return find_max(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(\"name\", \"of\", \"string\")) !== \"string\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"name\"\
    , \"enam\", \"game\")) !== \"enam\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"aaaaaaa\", \"bb\", \"cc\")) !== \"aaaaaaa\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"abc\", \"\
    cba\")) !== \"abc\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"this\", \"game\", \"of\", \"footbott\")) !== \"footbott\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\", \"are\", \"\
    gonna\", \"rock\")) !== \"gonna\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"a\", \"mad\", \"nation\")) !== \"\
    nation\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\", \"is\", \"a\", \"prrk\")) !== \"this\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"b\")) !== \"b\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"play\", \"play\", \"play\")) !== \"\
    play\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Error: Call to undefined function count_unique_characters()\
    \ in /tmp/tmp3d_kmwgn.php:13\nStack trace:\n#0 /tmp/tmp3d_kmwgn.php(23): find_max()\n\
    #1 /tmp/tmp3d_kmwgn.php(27): candidate()\n#2 /tmp/tmp3d_kmwgn.php(39): test()\n\
    #3 {main}\n  thrown in /tmp/tmp3d_kmwgn.php on line 13\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that accepts a list of strings.\n// The list\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// find_max([\"\
    name\", \"of\", \"string\"]) == \"string\"\n// find_max([\"name\", \"enam\", \"\
    game\"]) == \"enam\"\n// find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\
    \nfunction find_max($words) {\n    $max_word = \"\";\n    $max_count = 0;\n  \
    \  foreach ($words as $word) {\n        $count = count_unique_chars($word);\n\
    \        if ($count > $max_count) {\n            $max_count = $count;\n      \
    \      $max_word = $word;\n        }\n    }\n    return $max_word;\n}\n\nfunction\
    \ candidate(...$args) {\n    return find_max(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(\"name\", \"of\", \"string\")) !== \"string\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"name\"\
    , \"enam\", \"game\")) !== \"enam\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"aaaaaaa\", \"bb\", \"cc\")) !== \"aaaaaaa\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"abc\", \"\
    cba\")) !== \"abc\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"this\", \"game\", \"of\", \"footbott\")) !== \"footbott\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\", \"are\", \"\
    gonna\", \"rock\")) !== \"gonna\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"a\", \"mad\", \"nation\")) !== \"\
    nation\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\", \"is\", \"a\", \"prrk\")) !== \"this\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"b\")) !== \"b\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"play\", \"play\", \"play\")) !== \"\
    play\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Error: Call to undefined function count_unique_chars()\
    \ in /tmp/tmpdk07ln8f.php:13\nStack trace:\n#0 /tmp/tmpdk07ln8f.php(23): find_max()\n\
    #1 /tmp/tmpdk07ln8f.php(27): candidate()\n#2 /tmp/tmpdk07ln8f.php(39): test()\n\
    #3 {main}\n  thrown in /tmp/tmpdk07ln8f.php on line 13\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that accepts a list of strings.\n// The list\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// find_max([\"\
    name\", \"of\", \"string\"]) == \"string\"\n// find_max([\"name\", \"enam\", \"\
    game\"]) == \"enam\"\n// find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\
    \nfunction find_max($words) {\n    $max_word = \"\";\n    $max_count = 0;\n  \
    \  foreach ($words as $word) {\n        $unique_chars = array_unique(str_split($word));\n\
    \        $unique_count = count($unique_chars);\n        if ($unique_count > $max_count)\
    \ {\n            $max_count = $unique_count;\n            $max_word = $word;\n\
    \        }\n    }\n    return $max_word;\n}\n\nfunction candidate(...$args) {\n\
    \    return find_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    name\", \"of\", \"string\")) !== \"string\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"name\", \"enam\", \"game\")) !== \"enam\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"aaaaaaa\", \"\
    bb\", \"cc\")) !== \"aaaaaaa\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"abc\", \"cba\")) !== \"abc\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"play\", \"this\", \"game\", \"of\"\
    , \"footbott\")) !== \"footbott\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"gonna\", \"rock\")) !== \"gonna\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\",\
    \ \"are\", \"a\", \"mad\", \"nation\")) !== \"nation\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\", \"is\", \"a\", \"prrk\"\
    )) !== \"this\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    b\")) !== \"b\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"play\", \"play\")) !== \"play\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpucseqr4f.php:29\n\
    Stack trace:\n#0 /tmp/tmpucseqr4f.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpucseqr4f.php\
    \ on line 29\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that accepts a list of strings.\n// The list\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// find_max([\"\
    name\", \"of\", \"string\"]) == \"string\"\n// find_max([\"name\", \"enam\", \"\
    game\"]) == \"enam\"\n// find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\
    \nfunction find_max($words) {\n    $max_word = '';\n    $max_count = 0;\n    foreach\
    \ ($words as $word) {\n        $unique_chars = array_unique(str_split($word));\n\
    \        $unique_count = count($unique_chars);\n        if ($unique_count > $max_count)\
    \ {\n            $max_count = $unique_count;\n            $max_word = $word;\n\
    \        }\n    }\n    return $max_word;\n}\n\nfunction candidate(...$args) {\n\
    \    return find_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    name\", \"of\", \"string\")) !== \"string\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"name\", \"enam\", \"game\")) !== \"enam\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"aaaaaaa\", \"\
    bb\", \"cc\")) !== \"aaaaaaa\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"abc\", \"cba\")) !== \"abc\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"play\", \"this\", \"game\", \"of\"\
    , \"footbott\")) !== \"footbott\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"gonna\", \"rock\")) !== \"gonna\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\",\
    \ \"are\", \"a\", \"mad\", \"nation\")) !== \"nation\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\", \"is\", \"a\", \"prrk\"\
    )) !== \"this\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    b\")) !== \"b\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"play\", \"play\")) !== \"play\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpseqpbo_k.php:29\n\
    Stack trace:\n#0 /tmp/tmpseqpbo_k.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpseqpbo_k.php\
    \ on line 29\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that accepts a list of strings.\n// The list\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// find_max([\"\
    name\", \"of\", \"string\"]) == \"string\"\n// find_max([\"name\", \"enam\", \"\
    game\"]) == \"enam\"\n// find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\
    \nfunction find_max($words) {\n    $max = 0;\n    $max_word = \"\";\n    foreach\
    \ ($words as $word) {\n        $unique_chars = array_unique(str_split($word));\n\
    \        if (count($unique_chars) > $max) {\n            $max = count($unique_chars);\n\
    \            $max_word = $word;\n        }\n    }\n    return $max_word;\n}\n\n\
    function candidate(...$args) {\n    return find_max(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(\"name\", \"of\", \"string\")) !== \"\
    string\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    name\", \"enam\", \"game\")) !== \"enam\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"aaaaaaa\", \"bb\", \"cc\")) !== \"aaaaaaa\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"abc\", \"\
    cba\")) !== \"abc\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"this\", \"game\", \"of\", \"footbott\")) !== \"footbott\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\", \"are\", \"\
    gonna\", \"rock\")) !== \"gonna\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"a\", \"mad\", \"nation\")) !== \"\
    nation\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\", \"is\", \"a\", \"prrk\")) !== \"this\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"b\")) !== \"b\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"play\", \"play\", \"play\")) !== \"\
    play\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpyf2aia_h.php:28\n\
    Stack trace:\n#0 /tmp/tmpyf2aia_h.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpyf2aia_h.php\
    \ on line 28\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that accepts a list of strings.\n// The list\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// find_max([\"\
    name\", \"of\", \"string\"]) == \"string\"\n// find_max([\"name\", \"enam\", \"\
    game\"]) == \"enam\"\n// find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\
    \nfunction find_max($words) {\n  $max = 0;\n  $max_word = \"\";\n  foreach ($words\
    \ as $word) {\n    $unique_chars = array_unique(str_split($word));\n    if (count($unique_chars)\
    \ > $max) {\n      $max = count($unique_chars);\n      $max_word = $word;\n  \
    \  }\n  }\n  return $max_word;\n}\n\nfunction candidate(...$args) {\n    return\
    \ find_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    name\", \"of\", \"string\")) !== \"string\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"name\", \"enam\", \"game\")) !== \"enam\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"aaaaaaa\", \"\
    bb\", \"cc\")) !== \"aaaaaaa\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"abc\", \"cba\")) !== \"abc\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"play\", \"this\", \"game\", \"of\"\
    , \"footbott\")) !== \"footbott\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"gonna\", \"rock\")) !== \"gonna\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\",\
    \ \"are\", \"a\", \"mad\", \"nation\")) !== \"nation\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\", \"is\", \"a\", \"prrk\"\
    )) !== \"this\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    b\")) !== \"b\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"play\", \"play\")) !== \"play\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp0j5vww5q.php:28\n\
    Stack trace:\n#0 /tmp/tmp0j5vww5q.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp0j5vww5q.php\
    \ on line 28\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that accepts a list of strings.\n// The list\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// find_max([\"\
    name\", \"of\", \"string\"]) == \"string\"\n// find_max([\"name\", \"enam\", \"\
    game\"]) == \"enam\"\n// find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\
    \nfunction find_max($words) {\n  $max = 0;\n  $max_word = \"\";\n  foreach ($words\
    \ as $word) {\n    $unique_chars = array_unique(str_split($word));\n    if (count($unique_chars)\
    \ > $max) {\n      $max = count($unique_chars);\n      $max_word = $word;\n  \
    \  }\n  }\n  return $max_word;\n}\n\necho find_max([\"name\", \"of\", \"string\"\
    ]) . \"\\n\";\necho find_max([\"name\", \"enam\", \"game\"]) . \"\\n\";\necho\
    \ find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return find_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    name\", \"of\", \"string\")) !== \"string\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"name\", \"enam\", \"game\")) !== \"enam\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"aaaaaaa\", \"\
    bb\", \"cc\")) !== \"aaaaaaa\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"abc\", \"cba\")) !== \"abc\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"play\", \"this\", \"game\", \"of\"\
    , \"footbott\")) !== \"footbott\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"gonna\", \"rock\")) !== \"gonna\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\",\
    \ \"are\", \"a\", \"mad\", \"nation\")) !== \"nation\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\", \"is\", \"a\", \"prrk\"\
    )) !== \"this\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    b\")) !== \"b\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"play\", \"play\")) !== \"play\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "string\nname\naaaaaaa\n"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpi06005fd.php:31\n\
    Stack trace:\n#0 /tmp/tmpi06005fd.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpi06005fd.php\
    \ on line 31\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that accepts a list of strings.\n// The list\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// find_max([\"\
    name\", \"of\", \"string\"]) == \"string\"\n// find_max([\"name\", \"enam\", \"\
    game\"]) == \"enam\"\n// find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\
    \nfunction find_max($words) {\n    $max = 0;\n    $max_word = \"\";\n    foreach\
    \ ($words as $word) {\n        $unique_chars = array_unique(str_split($word));\n\
    \        if (count($unique_chars) > $max) {\n            $max = count($unique_chars);\n\
    \            $max_word = $word;\n        }\n    }\n    return $max_word;\n}\n\n\
    function candidate(...$args) {\n    return find_max(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(\"name\", \"of\", \"string\")) !== \"\
    string\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    name\", \"enam\", \"game\")) !== \"enam\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"aaaaaaa\", \"bb\", \"cc\")) !== \"aaaaaaa\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"abc\", \"\
    cba\")) !== \"abc\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"this\", \"game\", \"of\", \"footbott\")) !== \"footbott\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\", \"are\", \"\
    gonna\", \"rock\")) !== \"gonna\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"a\", \"mad\", \"nation\")) !== \"\
    nation\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\", \"is\", \"a\", \"prrk\")) !== \"this\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"b\")) !== \"b\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"play\", \"play\", \"play\")) !== \"\
    play\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpoigoxije.php:28\n\
    Stack trace:\n#0 /tmp/tmpoigoxije.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpoigoxije.php\
    \ on line 28\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that accepts a list of strings.\n// The list\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// find_max([\"\
    name\", \"of\", \"string\"]) == \"string\"\n// find_max([\"name\", \"enam\", \"\
    game\"]) == \"enam\"\n// find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\
    \nfunction find_max($words) {\n    $max_word = '';\n    $max_count = 0;\n    foreach\
    \ ($words as $word) {\n        $count = count_unique_chars($word);\n        if\
    \ ($count > $max_count) {\n            $max_count = $count;\n            $max_word\
    \ = $word;\n        }\n    }\n    return $max_word;\n}\n\nfunction candidate(...$args)\
    \ {\n    return find_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    name\", \"of\", \"string\")) !== \"string\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"name\", \"enam\", \"game\")) !== \"enam\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"aaaaaaa\", \"\
    bb\", \"cc\")) !== \"aaaaaaa\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"abc\", \"cba\")) !== \"abc\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"play\", \"this\", \"game\", \"of\"\
    , \"footbott\")) !== \"footbott\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"gonna\", \"rock\")) !== \"gonna\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\",\
    \ \"are\", \"a\", \"mad\", \"nation\")) !== \"nation\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\", \"is\", \"a\", \"prrk\"\
    )) !== \"this\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    b\")) !== \"b\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"play\", \"play\")) !== \"play\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Error: Call to undefined function count_unique_chars()\
    \ in /tmp/tmpavfda8fh.php:13\nStack trace:\n#0 /tmp/tmpavfda8fh.php(23): find_max()\n\
    #1 /tmp/tmpavfda8fh.php(27): candidate()\n#2 /tmp/tmpavfda8fh.php(39): test()\n\
    #3 {main}\n  thrown in /tmp/tmpavfda8fh.php on line 13\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that accepts a list of strings.\n// The list\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// find_max([\"\
    name\", \"of\", \"string\"]) == \"string\"\n// find_max([\"name\", \"enam\", \"\
    game\"]) == \"enam\"\n// find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\
    \nfunction find_max($words) {\n    $max = 0;\n    $max_word = \"\";\n    foreach\
    \ ($words as $word) {\n        $unique_chars = array_unique(str_split($word));\n\
    \        if (count($unique_chars) > $max) {\n            $max = count($unique_chars);\n\
    \            $max_word = $word;\n        }\n    }\n    return $max_word;\n}\n\n\
    $words = [\"name\", \"of\", \"string\"];\necho find_max($words) . \"\\n\";\n$words\
    \ = [\"name\", \"enam\", \"game\"];\necho find_max($words) . \"\\n\";\n$words\
    \ = [\"aaaaaaa\", \"bb\" ,\"cc\"];\necho find_max($words) . \"\\n\";\nfunction\
    \ candidate(...$args) {\n    return find_max(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(\"name\", \"of\", \"string\")) !== \"string\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"name\"\
    , \"enam\", \"game\")) !== \"enam\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"aaaaaaa\", \"bb\", \"cc\")) !== \"aaaaaaa\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"abc\", \"\
    cba\")) !== \"abc\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"this\", \"game\", \"of\", \"footbott\")) !== \"footbott\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\", \"are\", \"\
    gonna\", \"rock\")) !== \"gonna\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"a\", \"mad\", \"nation\")) !== \"\
    nation\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\", \"is\", \"a\", \"prrk\")) !== \"this\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"b\")) !== \"b\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"play\", \"play\", \"play\")) !== \"\
    play\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "string\nname\naaaaaaa\n"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpfer_ulok.php:34\n\
    Stack trace:\n#0 /tmp/tmpfer_ulok.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpfer_ulok.php\
    \ on line 34\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that accepts a list of strings.\n// The list\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// find_max([\"\
    name\", \"of\", \"string\"]) == \"string\"\n// find_max([\"name\", \"enam\", \"\
    game\"]) == \"enam\"\n// find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\
    \nfunction find_max($words) {\n    $max = 0;\n    $max_word = \"\";\n    foreach\
    \ ($words as $word) {\n        $unique_chars = array_unique(str_split($word));\n\
    \        if (count($unique_chars) > $max) {\n            $max = count($unique_chars);\n\
    \            $max_word = $word;\n        }\n    }\n    return $max_word;\n}\n\n\
    function candidate(...$args) {\n    return find_max(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(\"name\", \"of\", \"string\")) !== \"\
    string\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    name\", \"enam\", \"game\")) !== \"enam\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"aaaaaaa\", \"bb\", \"cc\")) !== \"aaaaaaa\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"abc\", \"\
    cba\")) !== \"abc\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"this\", \"game\", \"of\", \"footbott\")) !== \"footbott\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\", \"are\", \"\
    gonna\", \"rock\")) !== \"gonna\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"a\", \"mad\", \"nation\")) !== \"\
    nation\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\", \"is\", \"a\", \"prrk\")) !== \"this\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"b\")) !== \"b\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"play\", \"play\", \"play\")) !== \"\
    play\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpava6xk4u.php:28\n\
    Stack trace:\n#0 /tmp/tmpava6xk4u.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpava6xk4u.php\
    \ on line 28\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that accepts a list of strings.\n// The list\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// find_max([\"\
    name\", \"of\", \"string\"]) == \"string\"\n// find_max([\"name\", \"enam\", \"\
    game\"]) == \"enam\"\n// find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\
    \nfunction find_max($words) {\n    $max_word = \"\";\n    $max_unique_chars =\
    \ 0;\n    foreach ($words as $word) {\n        $unique_chars = count_unique_chars($word);\n\
    \        if ($unique_chars > $max_unique_chars) {\n            $max_unique_chars\
    \ = $unique_chars;\n            $max_word = $word;\n        }\n    }\n    return\
    \ $max_word;\n}\n\nfunction candidate(...$args) {\n    return find_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(\"name\", \"of\", \"string\"\
    )) !== \"string\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    name\", \"enam\", \"game\")) !== \"enam\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"aaaaaaa\", \"bb\", \"cc\")) !== \"aaaaaaa\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"abc\", \"\
    cba\")) !== \"abc\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"this\", \"game\", \"of\", \"footbott\")) !== \"footbott\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\", \"are\", \"\
    gonna\", \"rock\")) !== \"gonna\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"a\", \"mad\", \"nation\")) !== \"\
    nation\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\", \"is\", \"a\", \"prrk\")) !== \"this\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"b\")) !== \"b\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"play\", \"play\", \"play\")) !== \"\
    play\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Error: Call to undefined function count_unique_chars()\
    \ in /tmp/tmp7osoj8g2.php:13\nStack trace:\n#0 /tmp/tmp7osoj8g2.php(23): find_max()\n\
    #1 /tmp/tmp7osoj8g2.php(27): candidate()\n#2 /tmp/tmp7osoj8g2.php(39): test()\n\
    #3 {main}\n  thrown in /tmp/tmp7osoj8g2.php on line 13\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that accepts a list of strings.\n// The list\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// find_max([\"\
    name\", \"of\", \"string\"]) == \"string\"\n// find_max([\"name\", \"enam\", \"\
    game\"]) == \"enam\"\n// find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\
    \nfunction find_max($words) {\n    $max_word = \"\";\n    $max_count = 0;\n  \
    \  foreach ($words as $word) {\n        $count = count_unique_chars($word);\n\
    \        if ($count > $max_count) {\n            $max_count = $count;\n      \
    \      $max_word = $word;\n        }\n    }\n    return $max_word;\n}\n\nfunction\
    \ candidate(...$args) {\n    return find_max(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(\"name\", \"of\", \"string\")) !== \"string\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"name\"\
    , \"enam\", \"game\")) !== \"enam\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"aaaaaaa\", \"bb\", \"cc\")) !== \"aaaaaaa\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"abc\", \"\
    cba\")) !== \"abc\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"this\", \"game\", \"of\", \"footbott\")) !== \"footbott\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\", \"are\", \"\
    gonna\", \"rock\")) !== \"gonna\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"a\", \"mad\", \"nation\")) !== \"\
    nation\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\", \"is\", \"a\", \"prrk\")) !== \"this\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"b\")) !== \"b\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"play\", \"play\", \"play\")) !== \"\
    play\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Error: Call to undefined function count_unique_chars()\
    \ in /tmp/tmpl52j0agl.php:13\nStack trace:\n#0 /tmp/tmpl52j0agl.php(23): find_max()\n\
    #1 /tmp/tmpl52j0agl.php(27): candidate()\n#2 /tmp/tmpl52j0agl.php(39): test()\n\
    #3 {main}\n  thrown in /tmp/tmpl52j0agl.php on line 13\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that accepts a list of strings.\n// The list\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// find_max([\"\
    name\", \"of\", \"string\"]) == \"string\"\n// find_max([\"name\", \"enam\", \"\
    game\"]) == \"enam\"\n// find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\
    \nfunction find_max($words) {\n    $max_word = \"\";\n    $max_count = 0;\n  \
    \  foreach ($words as $word) {\n        $count = count_unique_chars($word);\n\
    \        if ($count > $max_count) {\n            $max_count = $count;\n      \
    \      $max_word = $word;\n        }\n    }\n    return $max_word;\n}\n\nfunction\
    \ candidate(...$args) {\n    return find_max(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(\"name\", \"of\", \"string\")) !== \"string\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"name\"\
    , \"enam\", \"game\")) !== \"enam\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"aaaaaaa\", \"bb\", \"cc\")) !== \"aaaaaaa\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"abc\", \"\
    cba\")) !== \"abc\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"this\", \"game\", \"of\", \"footbott\")) !== \"footbott\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\", \"are\", \"\
    gonna\", \"rock\")) !== \"gonna\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"a\", \"mad\", \"nation\")) !== \"\
    nation\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\", \"is\", \"a\", \"prrk\")) !== \"this\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"b\")) !== \"b\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"play\", \"play\", \"play\")) !== \"\
    play\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Error: Call to undefined function count_unique_chars()\
    \ in /tmp/tmpxwjrr0do.php:13\nStack trace:\n#0 /tmp/tmpxwjrr0do.php(23): find_max()\n\
    #1 /tmp/tmpxwjrr0do.php(27): candidate()\n#2 /tmp/tmpxwjrr0do.php(39): test()\n\
    #3 {main}\n  thrown in /tmp/tmpxwjrr0do.php on line 13\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that accepts a list of strings.\n// The list\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// find_max([\"\
    name\", \"of\", \"string\"]) == \"string\"\n// find_max([\"name\", \"enam\", \"\
    game\"]) == \"enam\"\n// find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\
    \nfunction find_max($words) {\n    $max = 0;\n    $max_word = \"\";\n    foreach\
    \ ($words as $word) {\n        $unique_chars = array_unique(str_split($word));\n\
    \        if (count($unique_chars) > $max) {\n            $max = count($unique_chars);\n\
    \            $max_word = $word;\n        }\n    }\n    return $max_word;\n}\n\n\
    $words = [\"name\", \"of\", \"string\"];\necho find_max($words);\necho \"\\n\"\
    ;\n$words = [\"name\", \"enam\", \"game\"];\necho find_max($words);\necho \"\\\
    n\";\n$words = [\"aaaaaaa\", \"bb\" ,\"cc\"];\necho find_max($words);\necho \"\
    \\n\";\nfunction candidate(...$args) {\n    return find_max(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(\"name\", \"of\", \"string\"\
    )) !== \"string\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    name\", \"enam\", \"game\")) !== \"enam\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"aaaaaaa\", \"bb\", \"cc\")) !== \"aaaaaaa\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"abc\", \"\
    cba\")) !== \"abc\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"this\", \"game\", \"of\", \"footbott\")) !== \"footbott\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\", \"are\", \"\
    gonna\", \"rock\")) !== \"gonna\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"a\", \"mad\", \"nation\")) !== \"\
    nation\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\", \"is\", \"a\", \"prrk\")) !== \"this\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"b\")) !== \"b\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"play\", \"play\", \"play\")) !== \"\
    play\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "string\nname\naaaaaaa\n"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpfyhw_bgy.php:37\n\
    Stack trace:\n#0 /tmp/tmpfyhw_bgy.php(48): test()\n#1 {main}\n  thrown in /tmp/tmpfyhw_bgy.php\
    \ on line 37\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that accepts a list of strings.\n// The list\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// find_max([\"\
    name\", \"of\", \"string\"]) == \"string\"\n// find_max([\"name\", \"enam\", \"\
    game\"]) == \"enam\"\n// find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\
    \nfunction find_max($words) {\n    $max_word = \"\";\n    $max_count = 0;\n  \
    \  foreach ($words as $word) {\n        $count = count_unique_chars($word);\n\
    \        if ($count > $max_count) {\n            $max_count = $count;\n      \
    \      $max_word = $word;\n        }\n    }\n    return $max_word;\n}\n\nfunction\
    \ candidate(...$args) {\n    return find_max(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(\"name\", \"of\", \"string\")) !== \"string\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"name\"\
    , \"enam\", \"game\")) !== \"enam\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"aaaaaaa\", \"bb\", \"cc\")) !== \"aaaaaaa\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"abc\", \"\
    cba\")) !== \"abc\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"this\", \"game\", \"of\", \"footbott\")) !== \"footbott\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\", \"are\", \"\
    gonna\", \"rock\")) !== \"gonna\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"a\", \"mad\", \"nation\")) !== \"\
    nation\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\", \"is\", \"a\", \"prrk\")) !== \"this\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"b\")) !== \"b\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"play\", \"play\", \"play\")) !== \"\
    play\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Error: Call to undefined function count_unique_chars()\
    \ in /tmp/tmp0q7oh14y.php:13\nStack trace:\n#0 /tmp/tmp0q7oh14y.php(23): find_max()\n\
    #1 /tmp/tmp0q7oh14y.php(27): candidate()\n#2 /tmp/tmp0q7oh14y.php(39): test()\n\
    #3 {main}\n  thrown in /tmp/tmp0q7oh14y.php on line 13\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that accepts a list of strings.\n// The list\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// find_max([\"\
    name\", \"of\", \"string\"]) == \"string\"\n// find_max([\"name\", \"enam\", \"\
    game\"]) == \"enam\"\n// find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\
    \nfunction find_max($words) {\n    $max = 0;\n    $max_word = \"\";\n    foreach\
    \ ($words as $word) {\n        $unique_chars = array_unique(str_split($word));\n\
    \        if (count($unique_chars) > $max) {\n            $max = count($unique_chars);\n\
    \            $max_word = $word;\n        }\n    }\n    return $max_word;\n}\n\n\
    function candidate(...$args) {\n    return find_max(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(\"name\", \"of\", \"string\")) !== \"\
    string\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    name\", \"enam\", \"game\")) !== \"enam\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"aaaaaaa\", \"bb\", \"cc\")) !== \"aaaaaaa\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"abc\", \"\
    cba\")) !== \"abc\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"this\", \"game\", \"of\", \"footbott\")) !== \"footbott\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\", \"are\", \"\
    gonna\", \"rock\")) !== \"gonna\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"a\", \"mad\", \"nation\")) !== \"\
    nation\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\", \"is\", \"a\", \"prrk\")) !== \"this\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"b\")) !== \"b\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"play\", \"play\", \"play\")) !== \"\
    play\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp66uxrps1.php:28\n\
    Stack trace:\n#0 /tmp/tmp66uxrps1.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp66uxrps1.php\
    \ on line 28\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that accepts a list of strings.\n// The list\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// find_max([\"\
    name\", \"of\", \"string\"]) == \"string\"\n// find_max([\"name\", \"enam\", \"\
    game\"]) == \"enam\"\n// find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\
    \nfunction find_max($words) {\n    $max = 0;\n    $max_word = '';\n    foreach\
    \ ($words as $word) {\n        $unique_chars = array_unique(str_split($word));\n\
    \        if (count($unique_chars) > $max) {\n            $max = count($unique_chars);\n\
    \            $max_word = $word;\n        }\n    }\n    return $max_word;\n}\n\n\
    function candidate(...$args) {\n    return find_max(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(\"name\", \"of\", \"string\")) !== \"\
    string\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    name\", \"enam\", \"game\")) !== \"enam\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"aaaaaaa\", \"bb\", \"cc\")) !== \"aaaaaaa\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"abc\", \"\
    cba\")) !== \"abc\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"this\", \"game\", \"of\", \"footbott\")) !== \"footbott\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\", \"are\", \"\
    gonna\", \"rock\")) !== \"gonna\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"a\", \"mad\", \"nation\")) !== \"\
    nation\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\", \"is\", \"a\", \"prrk\")) !== \"this\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"b\")) !== \"b\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"play\", \"play\", \"play\")) !== \"\
    play\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmphv4royq7.php:28\n\
    Stack trace:\n#0 /tmp/tmphv4royq7.php(39): test()\n#1 {main}\n  thrown in /tmp/tmphv4royq7.php\
    \ on line 28\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that accepts a list of strings.\n// The list\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// find_max([\"\
    name\", \"of\", \"string\"]) == \"string\"\n// find_max([\"name\", \"enam\", \"\
    game\"]) == \"enam\"\n// find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\
    \nfunction find_max($words) {\n    $max_word = \"\";\n    $max_count = 0;\n  \
    \  foreach ($words as $word) {\n        $count = count_unique_chars($word);\n\
    \        if ($count > $max_count) {\n            $max_count = $count;\n      \
    \      $max_word = $word;\n        }\n    }\n    return $max_word;\n}\n\nfunction\
    \ candidate(...$args) {\n    return find_max(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(\"name\", \"of\", \"string\")) !== \"string\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"name\"\
    , \"enam\", \"game\")) !== \"enam\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"aaaaaaa\", \"bb\", \"cc\")) !== \"aaaaaaa\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"abc\", \"\
    cba\")) !== \"abc\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"this\", \"game\", \"of\", \"footbott\")) !== \"footbott\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\", \"are\", \"\
    gonna\", \"rock\")) !== \"gonna\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"a\", \"mad\", \"nation\")) !== \"\
    nation\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\", \"is\", \"a\", \"prrk\")) !== \"this\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"b\")) !== \"b\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"play\", \"play\", \"play\")) !== \"\
    play\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Error: Call to undefined function count_unique_chars()\
    \ in /tmp/tmpvyrbp2z9.php:13\nStack trace:\n#0 /tmp/tmpvyrbp2z9.php(23): find_max()\n\
    #1 /tmp/tmpvyrbp2z9.php(27): candidate()\n#2 /tmp/tmpvyrbp2z9.php(39): test()\n\
    #3 {main}\n  thrown in /tmp/tmpvyrbp2z9.php on line 13\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that accepts a list of strings.\n// The list\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// find_max([\"\
    name\", \"of\", \"string\"]) == \"string\"\n// find_max([\"name\", \"enam\", \"\
    game\"]) == \"enam\"\n// find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\
    \nfunction find_max($words) {\n    $max = 0;\n    $max_word = '';\n    foreach\
    \ ($words as $word) {\n        $unique_chars = array_unique(str_split($word));\n\
    \        if (count($unique_chars) > $max) {\n            $max = count($unique_chars);\n\
    \            $max_word = $word;\n        }\n    }\n    return $max_word;\n}\n\n\
    echo find_max([\"name\", \"of\", \"string\"]) . \"\\n\";\necho find_max([\"name\"\
    , \"enam\", \"game\"]) . \"\\n\";\necho find_max([\"aaaaaaa\", \"bb\" ,\"cc\"\
    ]) . \"\\n\";\nfunction candidate(...$args) {\n    return find_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(\"name\", \"of\", \"string\"\
    )) !== \"string\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    name\", \"enam\", \"game\")) !== \"enam\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"aaaaaaa\", \"bb\", \"cc\")) !== \"aaaaaaa\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"abc\", \"\
    cba\")) !== \"abc\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"this\", \"game\", \"of\", \"footbott\")) !== \"footbott\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\", \"are\", \"\
    gonna\", \"rock\")) !== \"gonna\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"a\", \"mad\", \"nation\")) !== \"\
    nation\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\", \"is\", \"a\", \"prrk\")) !== \"this\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"b\")) !== \"b\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"play\", \"play\", \"play\")) !== \"\
    play\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "string\nname\naaaaaaa\n"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpvo2r_5fm.php:31\n\
    Stack trace:\n#0 /tmp/tmpvo2r_5fm.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpvo2r_5fm.php\
    \ on line 31\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that accepts a list of strings.\n// The list\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// find_max([\"\
    name\", \"of\", \"string\"]) == \"string\"\n// find_max([\"name\", \"enam\", \"\
    game\"]) == \"enam\"\n// find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\
    \nfunction find_max($words) {\n    $max = 0;\n    $max_word = \"\";\n    foreach\
    \ ($words as $word) {\n        $unique_chars = array_unique(str_split($word));\n\
    \        if (count($unique_chars) > $max) {\n            $max = count($unique_chars);\n\
    \            $max_word = $word;\n        }\n    }\n    return $max_word;\n}\n\n\
    function candidate(...$args) {\n    return find_max(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(\"name\", \"of\", \"string\")) !== \"\
    string\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    name\", \"enam\", \"game\")) !== \"enam\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"aaaaaaa\", \"bb\", \"cc\")) !== \"aaaaaaa\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"abc\", \"\
    cba\")) !== \"abc\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"this\", \"game\", \"of\", \"footbott\")) !== \"footbott\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\", \"are\", \"\
    gonna\", \"rock\")) !== \"gonna\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"a\", \"mad\", \"nation\")) !== \"\
    nation\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\", \"is\", \"a\", \"prrk\")) !== \"this\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"b\")) !== \"b\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"play\", \"play\", \"play\")) !== \"\
    play\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp8zea5tk9.php:28\n\
    Stack trace:\n#0 /tmp/tmp8zea5tk9.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp8zea5tk9.php\
    \ on line 28\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that accepts a list of strings.\n// The list\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// find_max([\"\
    name\", \"of\", \"string\"]) == \"string\"\n// find_max([\"name\", \"enam\", \"\
    game\"]) == \"enam\"\n// find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\
    \nfunction find_max($words) {\n    $max = 0;\n    $max_word = \"\";\n    foreach\
    \ ($words as $word) {\n        $unique_chars = array_unique(str_split($word));\n\
    \        if (count($unique_chars) > $max) {\n            $max = count($unique_chars);\n\
    \            $max_word = $word;\n        }\n    }\n    return $max_word;\n}\n\n\
    function candidate(...$args) {\n    return find_max(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(\"name\", \"of\", \"string\")) !== \"\
    string\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    name\", \"enam\", \"game\")) !== \"enam\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"aaaaaaa\", \"bb\", \"cc\")) !== \"aaaaaaa\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"abc\", \"\
    cba\")) !== \"abc\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"this\", \"game\", \"of\", \"footbott\")) !== \"footbott\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\", \"are\", \"\
    gonna\", \"rock\")) !== \"gonna\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"a\", \"mad\", \"nation\")) !== \"\
    nation\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\", \"is\", \"a\", \"prrk\")) !== \"this\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"b\")) !== \"b\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"play\", \"play\", \"play\")) !== \"\
    play\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpfu8ad_u1.php:28\n\
    Stack trace:\n#0 /tmp/tmpfu8ad_u1.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpfu8ad_u1.php\
    \ on line 28\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that accepts a list of strings.\n// The list\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// find_max([\"\
    name\", \"of\", \"string\"]) == \"string\"\n// find_max([\"name\", \"enam\", \"\
    game\"]) == \"enam\"\n// find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\
    \nfunction find_max($words) {\n    $max = 0;\n    $result = \"\";\n    foreach\
    \ ($words as $word) {\n        $unique = count_chars($word, 1);\n        if (count($unique)\
    \ > $max) {\n            $max = count($unique);\n            $result = $word;\n\
    \        }\n    }\n    return $result;\n}\n\necho find_max([\"name\", \"of\",\
    \ \"string\"]);\necho \"\\n\";\necho find_max([\"name\", \"enam\", \"game\"]);\n\
    echo \"\\n\";\necho find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]);\necho \"\\n\";\n\
    function candidate(...$args) {\n    return find_max(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(\"name\", \"of\", \"string\")) !== \"\
    string\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    name\", \"enam\", \"game\")) !== \"enam\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"aaaaaaa\", \"bb\", \"cc\")) !== \"aaaaaaa\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"abc\", \"\
    cba\")) !== \"abc\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"this\", \"game\", \"of\", \"footbott\")) !== \"footbott\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\", \"are\", \"\
    gonna\", \"rock\")) !== \"gonna\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"a\", \"mad\", \"nation\")) !== \"\
    nation\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\", \"is\", \"a\", \"prrk\")) !== \"this\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"b\")) !== \"b\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"play\", \"play\", \"play\")) !== \"\
    play\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "string\nname\naaaaaaa\n"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp8y966o20.php:34\n\
    Stack trace:\n#0 /tmp/tmp8y966o20.php(45): test()\n#1 {main}\n  thrown in /tmp/tmp8y966o20.php\
    \ on line 34\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that accepts a list of strings.\n// The list\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// find_max([\"\
    name\", \"of\", \"string\"]) == \"string\"\n// find_max([\"name\", \"enam\", \"\
    game\"]) == \"enam\"\n// find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\
    \nfunction find_max($words) {\n    $max_word = \"\";\n    $max_count = 0;\n  \
    \  foreach ($words as $word) {\n        $unique_chars = array_unique(str_split($word));\n\
    \        $unique_count = count($unique_chars);\n        if ($unique_count > $max_count)\
    \ {\n            $max_count = $unique_count;\n            $max_word = $word;\n\
    \        }\n    }\n    return $max_word;\n}\n\nfunction candidate(...$args) {\n\
    \    return find_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    name\", \"of\", \"string\")) !== \"string\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"name\", \"enam\", \"game\")) !== \"enam\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"aaaaaaa\", \"\
    bb\", \"cc\")) !== \"aaaaaaa\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"abc\", \"cba\")) !== \"abc\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"play\", \"this\", \"game\", \"of\"\
    , \"footbott\")) !== \"footbott\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"gonna\", \"rock\")) !== \"gonna\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\",\
    \ \"are\", \"a\", \"mad\", \"nation\")) !== \"nation\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\", \"is\", \"a\", \"prrk\"\
    )) !== \"this\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    b\")) !== \"b\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"play\", \"play\")) !== \"play\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpxfg2_bil.php:29\n\
    Stack trace:\n#0 /tmp/tmpxfg2_bil.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpxfg2_bil.php\
    \ on line 29\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that accepts a list of strings.\n// The list\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// find_max([\"\
    name\", \"of\", \"string\"]) == \"string\"\n// find_max([\"name\", \"enam\", \"\
    game\"]) == \"enam\"\n// find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\
    \nfunction find_max($words) {\n    $max = 0;\n    $max_word = \"\";\n    foreach\
    \ ($words as $word) {\n        $unique_chars = array_unique(str_split($word));\n\
    \        if (count($unique_chars) > $max) {\n            $max = count($unique_chars);\n\
    \            $max_word = $word;\n        }\n    }\n    return $max_word;\n}\n\n\
    function candidate(...$args) {\n    return find_max(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(\"name\", \"of\", \"string\")) !== \"\
    string\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    name\", \"enam\", \"game\")) !== \"enam\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"aaaaaaa\", \"bb\", \"cc\")) !== \"aaaaaaa\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"abc\", \"\
    cba\")) !== \"abc\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"this\", \"game\", \"of\", \"footbott\")) !== \"footbott\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\", \"are\", \"\
    gonna\", \"rock\")) !== \"gonna\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"a\", \"mad\", \"nation\")) !== \"\
    nation\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\", \"is\", \"a\", \"prrk\")) !== \"this\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"b\")) !== \"b\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"play\", \"play\", \"play\")) !== \"\
    play\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp0dnr10bx.php:28\n\
    Stack trace:\n#0 /tmp/tmp0dnr10bx.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp0dnr10bx.php\
    \ on line 28\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that accepts a list of strings.\n// The list\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// find_max([\"\
    name\", \"of\", \"string\"]) == \"string\"\n// find_max([\"name\", \"enam\", \"\
    game\"]) == \"enam\"\n// find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\
    \nfunction find_max($words) {\n    $max = 0;\n    $max_word = \"\";\n    foreach\
    \ ($words as $word) {\n        $unique_chars = array_unique(str_split($word));\n\
    \        if (count($unique_chars) > $max) {\n            $max = count($unique_chars);\n\
    \            $max_word = $word;\n        }\n    }\n    return $max_word;\n}\n\n\
    function candidate(...$args) {\n    return find_max(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(\"name\", \"of\", \"string\")) !== \"\
    string\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    name\", \"enam\", \"game\")) !== \"enam\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"aaaaaaa\", \"bb\", \"cc\")) !== \"aaaaaaa\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"abc\", \"\
    cba\")) !== \"abc\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"this\", \"game\", \"of\", \"footbott\")) !== \"footbott\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\", \"are\", \"\
    gonna\", \"rock\")) !== \"gonna\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"a\", \"mad\", \"nation\")) !== \"\
    nation\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\", \"is\", \"a\", \"prrk\")) !== \"this\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"b\")) !== \"b\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"play\", \"play\", \"play\")) !== \"\
    play\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpcvsu2m81.php:28\n\
    Stack trace:\n#0 /tmp/tmpcvsu2m81.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpcvsu2m81.php\
    \ on line 28\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that accepts a list of strings.\n// The list\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// find_max([\"\
    name\", \"of\", \"string\"]) == \"string\"\n// find_max([\"name\", \"enam\", \"\
    game\"]) == \"enam\"\n// find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\
    \nfunction find_max($words) {\n    $max = 0;\n    $max_word = \"\";\n    foreach\
    \ ($words as $word) {\n        $unique_chars = array_unique(str_split($word));\n\
    \        if (count($unique_chars) > $max) {\n            $max = count($unique_chars);\n\
    \            $max_word = $word;\n        }\n    }\n    return $max_word;\n}\n\n\
    $words = [\"name\", \"of\", \"string\"];\necho find_max($words) . \"\\n\";\n$words\
    \ = [\"name\", \"enam\", \"game\"];\necho find_max($words) . \"\\n\";\n$words\
    \ = [\"aaaaaaa\", \"bb\" ,\"cc\"];\necho find_max($words) . \"\\n\";\nfunction\
    \ candidate(...$args) {\n    return find_max(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(\"name\", \"of\", \"string\")) !== \"string\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"name\"\
    , \"enam\", \"game\")) !== \"enam\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"aaaaaaa\", \"bb\", \"cc\")) !== \"aaaaaaa\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"abc\", \"\
    cba\")) !== \"abc\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"this\", \"game\", \"of\", \"footbott\")) !== \"footbott\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\", \"are\", \"\
    gonna\", \"rock\")) !== \"gonna\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"a\", \"mad\", \"nation\")) !== \"\
    nation\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\", \"is\", \"a\", \"prrk\")) !== \"this\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"b\")) !== \"b\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"play\", \"play\", \"play\")) !== \"\
    play\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "string\nname\naaaaaaa\n"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpcgr16nyp.php:34\n\
    Stack trace:\n#0 /tmp/tmpcgr16nyp.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpcgr16nyp.php\
    \ on line 34\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that accepts a list of strings.\n// The list\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// find_max([\"\
    name\", \"of\", \"string\"]) == \"string\"\n// find_max([\"name\", \"enam\", \"\
    game\"]) == \"enam\"\n// find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\
    \nfunction find_max($words) {\n    $max = 0;\n    $max_word = \"\";\n    foreach\
    \ ($words as $word) {\n        $unique_chars = array_unique(str_split($word));\n\
    \        if (count($unique_chars) > $max) {\n            $max = count($unique_chars);\n\
    \            $max_word = $word;\n        }\n    }\n    return $max_word;\n}\n\n\
    $words = [\"name\", \"of\", \"string\"];\necho find_max($words) . \"\\n\";\n$words\
    \ = [\"name\", \"enam\", \"game\"];\necho find_max($words) . \"\\n\";\n$words\
    \ = [\"aaaaaaa\", \"bb\" ,\"cc\"];\necho find_max($words) . \"\\n\";\nfunction\
    \ candidate(...$args) {\n    return find_max(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(\"name\", \"of\", \"string\")) !== \"string\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"name\"\
    , \"enam\", \"game\")) !== \"enam\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"aaaaaaa\", \"bb\", \"cc\")) !== \"aaaaaaa\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"abc\", \"\
    cba\")) !== \"abc\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"this\", \"game\", \"of\", \"footbott\")) !== \"footbott\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\", \"are\", \"\
    gonna\", \"rock\")) !== \"gonna\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"a\", \"mad\", \"nation\")) !== \"\
    nation\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\", \"is\", \"a\", \"prrk\")) !== \"this\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"b\")) !== \"b\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"play\", \"play\", \"play\")) !== \"\
    play\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "string\nname\naaaaaaa\n"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp73id_ei3.php:34\n\
    Stack trace:\n#0 /tmp/tmp73id_ei3.php(45): test()\n#1 {main}\n  thrown in /tmp/tmp73id_ei3.php\
    \ on line 34\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that accepts a list of strings.\n// The list\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// find_max([\"\
    name\", \"of\", \"string\"]) == \"string\"\n// find_max([\"name\", \"enam\", \"\
    game\"]) == \"enam\"\n// find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\
    \nfunction find_max($words) {\n    $max_word = \"\";\n    $max_count = 0;\n  \
    \  foreach ($words as $word) {\n        $count = count_unique_chars($word);\n\
    \        if ($count > $max_count) {\n            $max_count = $count;\n      \
    \      $max_word = $word;\n        }\n    }\n    return $max_word;\n}\n\nfunction\
    \ candidate(...$args) {\n    return find_max(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(\"name\", \"of\", \"string\")) !== \"string\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"name\"\
    , \"enam\", \"game\")) !== \"enam\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"aaaaaaa\", \"bb\", \"cc\")) !== \"aaaaaaa\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"abc\", \"\
    cba\")) !== \"abc\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"this\", \"game\", \"of\", \"footbott\")) !== \"footbott\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\", \"are\", \"\
    gonna\", \"rock\")) !== \"gonna\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"a\", \"mad\", \"nation\")) !== \"\
    nation\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\", \"is\", \"a\", \"prrk\")) !== \"this\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"b\")) !== \"b\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"play\", \"play\", \"play\")) !== \"\
    play\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Error: Call to undefined function count_unique_chars()\
    \ in /tmp/tmp5w1i8zwg.php:13\nStack trace:\n#0 /tmp/tmp5w1i8zwg.php(23): find_max()\n\
    #1 /tmp/tmp5w1i8zwg.php(27): candidate()\n#2 /tmp/tmp5w1i8zwg.php(39): test()\n\
    #3 {main}\n  thrown in /tmp/tmp5w1i8zwg.php on line 13\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that accepts a list of strings.\n// The list\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// find_max([\"\
    name\", \"of\", \"string\"]) == \"string\"\n// find_max([\"name\", \"enam\", \"\
    game\"]) == \"enam\"\n// find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\
    \nfunction find_max($words) {\n    $max_word = \"\";\n    $max_count = 0;\n  \
    \  foreach ($words as $word) {\n        $count = count_unique_chars($word);\n\
    \        if ($count > $max_count) {\n            $max_count = $count;\n      \
    \      $max_word = $word;\n        }\n    }\n    return $max_word;\n}\n\nfunction\
    \ candidate(...$args) {\n    return find_max(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(\"name\", \"of\", \"string\")) !== \"string\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"name\"\
    , \"enam\", \"game\")) !== \"enam\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"aaaaaaa\", \"bb\", \"cc\")) !== \"aaaaaaa\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"abc\", \"\
    cba\")) !== \"abc\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"this\", \"game\", \"of\", \"footbott\")) !== \"footbott\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\", \"are\", \"\
    gonna\", \"rock\")) !== \"gonna\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"a\", \"mad\", \"nation\")) !== \"\
    nation\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\", \"is\", \"a\", \"prrk\")) !== \"this\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"b\")) !== \"b\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"play\", \"play\", \"play\")) !== \"\
    play\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Error: Call to undefined function count_unique_chars()\
    \ in /tmp/tmp6k1ktx7c.php:13\nStack trace:\n#0 /tmp/tmp6k1ktx7c.php(23): find_max()\n\
    #1 /tmp/tmp6k1ktx7c.php(27): candidate()\n#2 /tmp/tmp6k1ktx7c.php(39): test()\n\
    #3 {main}\n  thrown in /tmp/tmp6k1ktx7c.php on line 13\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that accepts a list of strings.\n// The list\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// find_max([\"\
    name\", \"of\", \"string\"]) == \"string\"\n// find_max([\"name\", \"enam\", \"\
    game\"]) == \"enam\"\n// find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\
    \nfunction find_max($words) {\n  $max = 0;\n  $max_word = \"\";\n  foreach ($words\
    \ as $word) {\n    $unique_chars = array_unique(str_split($word));\n    if (count($unique_chars)\
    \ > $max) {\n      $max = count($unique_chars);\n      $max_word = $word;\n  \
    \  }\n  }\n  return $max_word;\n}\n\nfunction candidate(...$args) {\n    return\
    \ find_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    name\", \"of\", \"string\")) !== \"string\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"name\", \"enam\", \"game\")) !== \"enam\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"aaaaaaa\", \"\
    bb\", \"cc\")) !== \"aaaaaaa\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"abc\", \"cba\")) !== \"abc\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"play\", \"this\", \"game\", \"of\"\
    , \"footbott\")) !== \"footbott\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"gonna\", \"rock\")) !== \"gonna\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\",\
    \ \"are\", \"a\", \"mad\", \"nation\")) !== \"nation\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\", \"is\", \"a\", \"prrk\"\
    )) !== \"this\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    b\")) !== \"b\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"play\", \"play\")) !== \"play\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmptop3_pzg.php:28\n\
    Stack trace:\n#0 /tmp/tmptop3_pzg.php(39): test()\n#1 {main}\n  thrown in /tmp/tmptop3_pzg.php\
    \ on line 28\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that accepts a list of strings.\n// The list\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// find_max([\"\
    name\", \"of\", \"string\"]) == \"string\"\n// find_max([\"name\", \"enam\", \"\
    game\"]) == \"enam\"\n// find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\
    \nfunction find_max($words) {\n    $max = 0;\n    $max_word = \"\";\n    foreach\
    \ ($words as $word) {\n        $unique_chars = array_unique(str_split($word));\n\
    \        if (count($unique_chars) > $max) {\n            $max = count($unique_chars);\n\
    \            $max_word = $word;\n        }\n    }\n    return $max_word;\n}\n\
    echo find_max([\"name\", \"of\", \"string\"]) . \"\\n\";\necho find_max([\"name\"\
    , \"enam\", \"game\"]) . \"\\n\";\necho find_max([\"aaaaaaa\", \"bb\" ,\"cc\"\
    ]) . \"\\n\";\nfunction candidate(...$args) {\n    return find_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(\"name\", \"of\", \"string\"\
    )) !== \"string\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    name\", \"enam\", \"game\")) !== \"enam\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"aaaaaaa\", \"bb\", \"cc\")) !== \"aaaaaaa\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"abc\", \"\
    cba\")) !== \"abc\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"this\", \"game\", \"of\", \"footbott\")) !== \"footbott\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\", \"are\", \"\
    gonna\", \"rock\")) !== \"gonna\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"a\", \"mad\", \"nation\")) !== \"\
    nation\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\", \"is\", \"a\", \"prrk\")) !== \"this\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"b\")) !== \"b\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"play\", \"play\", \"play\")) !== \"\
    play\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "string\nname\naaaaaaa\n"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpq4_o9xm3.php:30\n\
    Stack trace:\n#0 /tmp/tmpq4_o9xm3.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpq4_o9xm3.php\
    \ on line 30\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that accepts a list of strings.\n// The list\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// find_max([\"\
    name\", \"of\", \"string\"]) == \"string\"\n// find_max([\"name\", \"enam\", \"\
    game\"]) == \"enam\"\n// find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\
    \nfunction find_max($words) {\n  $max = 0;\n  $max_word = \"\";\n  foreach ($words\
    \ as $word) {\n    $unique_chars = array_unique(str_split($word));\n    if (count($unique_chars)\
    \ > $max) {\n      $max = count($unique_chars);\n      $max_word = $word;\n  \
    \  }\n  }\n  return $max_word;\n}\n\nfunction candidate(...$args) {\n    return\
    \ find_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    name\", \"of\", \"string\")) !== \"string\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"name\", \"enam\", \"game\")) !== \"enam\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"aaaaaaa\", \"\
    bb\", \"cc\")) !== \"aaaaaaa\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"abc\", \"cba\")) !== \"abc\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"play\", \"this\", \"game\", \"of\"\
    , \"footbott\")) !== \"footbott\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"gonna\", \"rock\")) !== \"gonna\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\",\
    \ \"are\", \"a\", \"mad\", \"nation\")) !== \"nation\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\", \"is\", \"a\", \"prrk\"\
    )) !== \"this\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    b\")) !== \"b\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"play\", \"play\")) !== \"play\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpxmndus_u.php:28\n\
    Stack trace:\n#0 /tmp/tmpxmndus_u.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpxmndus_u.php\
    \ on line 28\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that accepts a list of strings.\n// The list\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// find_max([\"\
    name\", \"of\", \"string\"]) == \"string\"\n// find_max([\"name\", \"enam\", \"\
    game\"]) == \"enam\"\n// find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\
    \nfunction find_max($words) {\n    $max = 0;\n    $max_word = \"\";\n    foreach\
    \ ($words as $word) {\n        $unique_chars = array_unique(str_split($word));\n\
    \        if (count($unique_chars) > $max) {\n            $max = count($unique_chars);\n\
    \            $max_word = $word;\n        }\n    }\n    return $max_word;\n}\n\n\
    function candidate(...$args) {\n    return find_max(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(\"name\", \"of\", \"string\")) !== \"\
    string\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    name\", \"enam\", \"game\")) !== \"enam\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"aaaaaaa\", \"bb\", \"cc\")) !== \"aaaaaaa\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"abc\", \"\
    cba\")) !== \"abc\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"this\", \"game\", \"of\", \"footbott\")) !== \"footbott\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\", \"are\", \"\
    gonna\", \"rock\")) !== \"gonna\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"a\", \"mad\", \"nation\")) !== \"\
    nation\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\", \"is\", \"a\", \"prrk\")) !== \"this\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"b\")) !== \"b\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"play\", \"play\", \"play\")) !== \"\
    play\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpth0pzeay.php:28\n\
    Stack trace:\n#0 /tmp/tmpth0pzeay.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpth0pzeay.php\
    \ on line 28\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that accepts a list of strings.\n// The list\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// find_max([\"\
    name\", \"of\", \"string\"]) == \"string\"\n// find_max([\"name\", \"enam\", \"\
    game\"]) == \"enam\"\n// find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\
    \nfunction find_max($words) {\n    $max_word = '';\n    $max_count = 0;\n    foreach\
    \ ($words as $word) {\n        $count = count_unique_chars($word);\n        if\
    \ ($count > $max_count) {\n            $max_count = $count;\n            $max_word\
    \ = $word;\n        }\n    }\n    return $max_word;\n}\n\nfunction candidate(...$args)\
    \ {\n    return find_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    name\", \"of\", \"string\")) !== \"string\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"name\", \"enam\", \"game\")) !== \"enam\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"aaaaaaa\", \"\
    bb\", \"cc\")) !== \"aaaaaaa\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"abc\", \"cba\")) !== \"abc\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"play\", \"this\", \"game\", \"of\"\
    , \"footbott\")) !== \"footbott\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"gonna\", \"rock\")) !== \"gonna\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\",\
    \ \"are\", \"a\", \"mad\", \"nation\")) !== \"nation\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\", \"is\", \"a\", \"prrk\"\
    )) !== \"this\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    b\")) !== \"b\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"play\", \"play\")) !== \"play\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Error: Call to undefined function count_unique_chars()\
    \ in /tmp/tmpsdp5yhnc.php:13\nStack trace:\n#0 /tmp/tmpsdp5yhnc.php(23): find_max()\n\
    #1 /tmp/tmpsdp5yhnc.php(27): candidate()\n#2 /tmp/tmpsdp5yhnc.php(39): test()\n\
    #3 {main}\n  thrown in /tmp/tmpsdp5yhnc.php on line 13\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that accepts a list of strings.\n// The list\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// find_max([\"\
    name\", \"of\", \"string\"]) == \"string\"\n// find_max([\"name\", \"enam\", \"\
    game\"]) == \"enam\"\n// find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\
    \nfunction find_max($words) {\n    $max_word = \"\";\n    $max_count = 0;\n  \
    \  foreach ($words as $word) {\n        $unique_chars = array_unique(str_split($word));\n\
    \        $unique_count = count($unique_chars);\n        if ($unique_count > $max_count)\
    \ {\n            $max_count = $unique_count;\n            $max_word = $word;\n\
    \        }\n    }\n    return $max_word;\n}\n\necho find_max([\"name\", \"of\"\
    , \"string\"]) . \"\\n\";\necho find_max([\"name\", \"enam\", \"game\"]) . \"\\\
    n\";\necho find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) . \"\\n\";\n\nfunction candidate(...$args)\
    \ {\n    return find_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    name\", \"of\", \"string\")) !== \"string\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"name\", \"enam\", \"game\")) !== \"enam\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"aaaaaaa\", \"\
    bb\", \"cc\")) !== \"aaaaaaa\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"abc\", \"cba\")) !== \"abc\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"play\", \"this\", \"game\", \"of\"\
    , \"footbott\")) !== \"footbott\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"gonna\", \"rock\")) !== \"gonna\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\",\
    \ \"are\", \"a\", \"mad\", \"nation\")) !== \"nation\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\", \"is\", \"a\", \"prrk\"\
    )) !== \"this\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    b\")) !== \"b\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"play\", \"play\")) !== \"play\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "string\nname\naaaaaaa\n"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpfrif4k10.php:33\n\
    Stack trace:\n#0 /tmp/tmpfrif4k10.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpfrif4k10.php\
    \ on line 33\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that accepts a list of strings.\n// The list\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// find_max([\"\
    name\", \"of\", \"string\"]) == \"string\"\n// find_max([\"name\", \"enam\", \"\
    game\"]) == \"enam\"\n// find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\
    \nfunction find_max($words) {\n    $max_word = \"\";\n    $max_count = 0;\n  \
    \  foreach ($words as $word) {\n        $count = count_unique_chars($word);\n\
    \        if ($count > $max_count) {\n            $max_count = $count;\n      \
    \      $max_word = $word;\n        }\n    }\n    return $max_word;\n}\n\nfunction\
    \ candidate(...$args) {\n    return find_max(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(\"name\", \"of\", \"string\")) !== \"string\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"name\"\
    , \"enam\", \"game\")) !== \"enam\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"aaaaaaa\", \"bb\", \"cc\")) !== \"aaaaaaa\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"abc\", \"\
    cba\")) !== \"abc\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"this\", \"game\", \"of\", \"footbott\")) !== \"footbott\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\", \"are\", \"\
    gonna\", \"rock\")) !== \"gonna\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"a\", \"mad\", \"nation\")) !== \"\
    nation\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\", \"is\", \"a\", \"prrk\")) !== \"this\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"b\")) !== \"b\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"play\", \"play\", \"play\")) !== \"\
    play\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Error: Call to undefined function count_unique_chars()\
    \ in /tmp/tmpa9izfxvz.php:13\nStack trace:\n#0 /tmp/tmpa9izfxvz.php(23): find_max()\n\
    #1 /tmp/tmpa9izfxvz.php(27): candidate()\n#2 /tmp/tmpa9izfxvz.php(39): test()\n\
    #3 {main}\n  thrown in /tmp/tmpa9izfxvz.php on line 13\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that accepts a list of strings.\n// The list\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// find_max([\"\
    name\", \"of\", \"string\"]) == \"string\"\n// find_max([\"name\", \"enam\", \"\
    game\"]) == \"enam\"\n// find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\
    \nfunction find_max($words) {\n\t$max_word = \"\";\n\t$max_count = 0;\n\tforeach\
    \ ($words as $word) {\n\t\t$count = count_unique_chars($word);\n\t\tif ($count\
    \ > $max_count) {\n\t\t\t$max_count = $count;\n\t\t\t$max_word = $word;\n\t\t\
    }\n\t}\n\treturn $max_word;\n}\n\nfunction candidate(...$args) {\n    return find_max(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(\"name\", \"of\", \"string\"\
    )) !== \"string\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    name\", \"enam\", \"game\")) !== \"enam\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"aaaaaaa\", \"bb\", \"cc\")) !== \"aaaaaaa\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"abc\", \"\
    cba\")) !== \"abc\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"this\", \"game\", \"of\", \"footbott\")) !== \"footbott\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\", \"are\", \"\
    gonna\", \"rock\")) !== \"gonna\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"a\", \"mad\", \"nation\")) !== \"\
    nation\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\", \"is\", \"a\", \"prrk\")) !== \"this\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"b\")) !== \"b\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"play\", \"play\", \"play\")) !== \"\
    play\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Error: Call to undefined function count_unique_chars()\
    \ in /tmp/tmp8an6bydp.php:13\nStack trace:\n#0 /tmp/tmp8an6bydp.php(23): find_max()\n\
    #1 /tmp/tmp8an6bydp.php(27): candidate()\n#2 /tmp/tmp8an6bydp.php(39): test()\n\
    #3 {main}\n  thrown in /tmp/tmp8an6bydp.php on line 13\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that accepts a list of strings.\n// The list\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// find_max([\"\
    name\", \"of\", \"string\"]) == \"string\"\n// find_max([\"name\", \"enam\", \"\
    game\"]) == \"enam\"\n// find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\
    \nfunction find_max($words) {\n    $max_word = \"\";\n    $max_count = 0;\n  \
    \  foreach ($words as $word) {\n        $count = count_unique_chars($word);\n\
    \        if ($count > $max_count) {\n            $max_count = $count;\n      \
    \      $max_word = $word;\n        }\n    }\n    return $max_word;\n}\n\nfunction\
    \ candidate(...$args) {\n    return find_max(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(\"name\", \"of\", \"string\")) !== \"string\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"name\"\
    , \"enam\", \"game\")) !== \"enam\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"aaaaaaa\", \"bb\", \"cc\")) !== \"aaaaaaa\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"abc\", \"\
    cba\")) !== \"abc\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"this\", \"game\", \"of\", \"footbott\")) !== \"footbott\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\", \"are\", \"\
    gonna\", \"rock\")) !== \"gonna\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"a\", \"mad\", \"nation\")) !== \"\
    nation\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\", \"is\", \"a\", \"prrk\")) !== \"this\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"b\")) !== \"b\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"play\", \"play\", \"play\")) !== \"\
    play\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Error: Call to undefined function count_unique_chars()\
    \ in /tmp/tmpypx8xnjg.php:13\nStack trace:\n#0 /tmp/tmpypx8xnjg.php(23): find_max()\n\
    #1 /tmp/tmpypx8xnjg.php(27): candidate()\n#2 /tmp/tmpypx8xnjg.php(39): test()\n\
    #3 {main}\n  thrown in /tmp/tmpypx8xnjg.php on line 13\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that accepts a list of strings.\n// The list\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// find_max([\"\
    name\", \"of\", \"string\"]) == \"string\"\n// find_max([\"name\", \"enam\", \"\
    game\"]) == \"enam\"\n// find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\
    \nfunction find_max($words) {\n    $max_word = \"\";\n    $max_count = 0;\n  \
    \  foreach ($words as $word) {\n        $count = count_unique_chars($word);\n\
    \        if ($count > $max_count) {\n            $max_count = $count;\n      \
    \      $max_word = $word;\n        }\n    }\n    return $max_word;\n}\n\nfunction\
    \ candidate(...$args) {\n    return find_max(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(\"name\", \"of\", \"string\")) !== \"string\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"name\"\
    , \"enam\", \"game\")) !== \"enam\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"aaaaaaa\", \"bb\", \"cc\")) !== \"aaaaaaa\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"abc\", \"\
    cba\")) !== \"abc\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"this\", \"game\", \"of\", \"footbott\")) !== \"footbott\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\", \"are\", \"\
    gonna\", \"rock\")) !== \"gonna\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"a\", \"mad\", \"nation\")) !== \"\
    nation\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\", \"is\", \"a\", \"prrk\")) !== \"this\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"b\")) !== \"b\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"play\", \"play\", \"play\")) !== \"\
    play\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Error: Call to undefined function count_unique_chars()\
    \ in /tmp/tmpb8l4c5wn.php:13\nStack trace:\n#0 /tmp/tmpb8l4c5wn.php(23): find_max()\n\
    #1 /tmp/tmpb8l4c5wn.php(27): candidate()\n#2 /tmp/tmpb8l4c5wn.php(39): test()\n\
    #3 {main}\n  thrown in /tmp/tmpb8l4c5wn.php on line 13\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that accepts a list of strings.\n// The list\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// find_max([\"\
    name\", \"of\", \"string\"]) == \"string\"\n// find_max([\"name\", \"enam\", \"\
    game\"]) == \"enam\"\n// find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\
    \nfunction find_max($words) {\n    $max = 0;\n    $result = \"\";\n    foreach\
    \ ($words as $word) {\n        $count = count_chars($word, 1);\n        if (count($count)\
    \ > $max) {\n            $max = count($count);\n            $result = $word;\n\
    \        }\n    }\n    return $result;\n}\n\necho find_max([\"name\", \"of\",\
    \ \"string\"]) . \"\\n\";\necho find_max([\"name\", \"enam\", \"game\"]) . \"\\\
    n\";\necho find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return find_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    name\", \"of\", \"string\")) !== \"string\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"name\", \"enam\", \"game\")) !== \"enam\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"aaaaaaa\", \"\
    bb\", \"cc\")) !== \"aaaaaaa\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"abc\", \"cba\")) !== \"abc\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"play\", \"this\", \"game\", \"of\"\
    , \"footbott\")) !== \"footbott\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"gonna\", \"rock\")) !== \"gonna\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\",\
    \ \"are\", \"a\", \"mad\", \"nation\")) !== \"nation\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\", \"is\", \"a\", \"prrk\"\
    )) !== \"this\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    b\")) !== \"b\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"play\", \"play\")) !== \"play\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "string\nname\naaaaaaa\n"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmppfcptz4v.php:31\n\
    Stack trace:\n#0 /tmp/tmppfcptz4v.php(42): test()\n#1 {main}\n  thrown in /tmp/tmppfcptz4v.php\
    \ on line 31\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that accepts a list of strings.\n// The list\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// find_max([\"\
    name\", \"of\", \"string\"]) == \"string\"\n// find_max([\"name\", \"enam\", \"\
    game\"]) == \"enam\"\n// find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\
    \nfunction find_max($words) {\n  $max_word = \"\";\n  $max_unique_chars = 0;\n\
    \  foreach ($words as $word) {\n    $unique_chars = count_unique_chars($word);\n\
    \    if ($unique_chars > $max_unique_chars) {\n      $max_unique_chars = $unique_chars;\n\
    \      $max_word = $word;\n    }\n  }\n  return $max_word;\n}\n\nfunction candidate(...$args)\
    \ {\n    return find_max(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(\"\
    name\", \"of\", \"string\")) !== \"string\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"name\", \"enam\", \"game\")) !== \"enam\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(\"aaaaaaa\", \"\
    bb\", \"cc\")) !== \"aaaaaaa\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(array(\"abc\", \"cba\")) !== \"abc\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"play\", \"this\", \"game\", \"of\"\
    , \"footbott\")) !== \"footbott\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"gonna\", \"rock\")) !== \"gonna\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\",\
    \ \"are\", \"a\", \"mad\", \"nation\")) !== \"nation\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(\"this\", \"is\", \"a\", \"prrk\"\
    )) !== \"this\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    b\")) !== \"b\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"play\", \"play\")) !== \"play\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Error: Call to undefined function count_unique_chars()\
    \ in /tmp/tmpiviplixo.php:13\nStack trace:\n#0 /tmp/tmpiviplixo.php(23): find_max()\n\
    #1 /tmp/tmpiviplixo.php(27): candidate()\n#2 /tmp/tmpiviplixo.php(39): test()\n\
    #3 {main}\n  thrown in /tmp/tmpiviplixo.php on line 13\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that accepts a list of strings.\n// The list\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// find_max([\"\
    name\", \"of\", \"string\"]) == \"string\"\n// find_max([\"name\", \"enam\", \"\
    game\"]) == \"enam\"\n// find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\
    \nfunction find_max($words) {\n    $max_word = \"\";\n    $max_count = 0;\n  \
    \  foreach ($words as $word) {\n        $count = count_unique_chars($word);\n\
    \        if ($count > $max_count) {\n            $max_count = $count;\n      \
    \      $max_word = $word;\n        }\n    }\n    return $max_word;\n}\n\nfunction\
    \ candidate(...$args) {\n    return find_max(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(\"name\", \"of\", \"string\")) !== \"string\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"name\"\
    , \"enam\", \"game\")) !== \"enam\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"aaaaaaa\", \"bb\", \"cc\")) !== \"aaaaaaa\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"abc\", \"\
    cba\")) !== \"abc\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"this\", \"game\", \"of\", \"footbott\")) !== \"footbott\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\", \"are\", \"\
    gonna\", \"rock\")) !== \"gonna\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"a\", \"mad\", \"nation\")) !== \"\
    nation\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\", \"is\", \"a\", \"prrk\")) !== \"this\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"b\")) !== \"b\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"play\", \"play\", \"play\")) !== \"\
    play\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Error: Call to undefined function count_unique_chars()\
    \ in /tmp/tmphm6wquz8.php:13\nStack trace:\n#0 /tmp/tmphm6wquz8.php(23): find_max()\n\
    #1 /tmp/tmphm6wquz8.php(27): candidate()\n#2 /tmp/tmphm6wquz8.php(39): test()\n\
    #3 {main}\n  thrown in /tmp/tmphm6wquz8.php on line 13\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that accepts a list of strings.\n// The list\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// find_max([\"\
    name\", \"of\", \"string\"]) == \"string\"\n// find_max([\"name\", \"enam\", \"\
    game\"]) == \"enam\"\n// find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\
    \nfunction find_max($words) {\n    $max_word = \"\";\n    $max_count = 0;\n  \
    \  foreach ($words as $word) {\n        $count = count_unique_chars($word);\n\
    \        if ($count > $max_count) {\n            $max_count = $count;\n      \
    \      $max_word = $word;\n        }\n    }\n    return $max_word;\n}\n\nfunction\
    \ candidate(...$args) {\n    return find_max(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(\"name\", \"of\", \"string\")) !== \"string\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"name\"\
    , \"enam\", \"game\")) !== \"enam\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(\"aaaaaaa\", \"bb\", \"cc\")) !== \"aaaaaaa\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"abc\", \"\
    cba\")) !== \"abc\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"this\", \"game\", \"of\", \"footbott\")) !== \"footbott\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\", \"are\", \"\
    gonna\", \"rock\")) !== \"gonna\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"a\", \"mad\", \"nation\")) !== \"\
    nation\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\", \"is\", \"a\", \"prrk\")) !== \"this\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"b\")) !== \"b\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"play\", \"play\", \"play\")) !== \"\
    play\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Error: Call to undefined function count_unique_chars()\
    \ in /tmp/tmpc99z2u28.php:13\nStack trace:\n#0 /tmp/tmpc99z2u28.php(23): find_max()\n\
    #1 /tmp/tmpc99z2u28.php(27): candidate()\n#2 /tmp/tmpc99z2u28.php(39): test()\n\
    #3 {main}\n  thrown in /tmp/tmpc99z2u28.php on line 13\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that accepts a list of strings.\n// The list\
    \ contains different words. Return the word with maximum number\n// of unique\
    \ characters. If multiple strings have maximum number of unique\n// characters,\
    \ return the one which comes first in lexicographical order.\n// find_max([\"\
    name\", \"of\", \"string\"]) == \"string\"\n// find_max([\"name\", \"enam\", \"\
    game\"]) == \"enam\"\n// find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"aaaaaaa\"\
    \nfunction find_max($words) {\n    $max = 0;\n    $max_word = \"\";\n    foreach\
    \ ($words as $word) {\n        $unique_chars = array_unique(str_split($word));\n\
    \        if (count($unique_chars) > $max) {\n            $max = count($unique_chars);\n\
    \            $max_word = $word;\n        }\n    }\n    return $max_word;\n}\n\n\
    function candidate(...$args) {\n    return find_max(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(\"name\", \"of\", \"string\")) !== \"\
    string\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    name\", \"enam\", \"game\")) !== \"enam\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"aaaaaaa\", \"bb\", \"cc\")) !== \"aaaaaaa\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"abc\", \"\
    cba\")) !== \"abc\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    play\", \"this\", \"game\", \"of\", \"footbott\")) !== \"footbott\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(\"we\", \"are\", \"\
    gonna\", \"rock\")) !== \"gonna\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(\"we\", \"are\", \"a\", \"mad\", \"nation\")) !== \"\
    nation\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(\"\
    this\", \"is\", \"a\", \"prrk\")) !== \"this\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(\"b\")) !== \"b\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(\"play\", \"play\", \"play\")) !== \"\
    play\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpb1jfzuiv.php:28\n\
    Stack trace:\n#0 /tmp/tmpb1jfzuiv.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpb1jfzuiv.php\
    \ on line 28\n"
  exit_code: 255
  status: Exception

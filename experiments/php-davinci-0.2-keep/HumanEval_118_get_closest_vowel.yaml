name: HumanEval_118_get_closest_vowel
language: php
prompt: "<?php\n// You are given a word. Your task is to find the closest vowel that\
  \ stands between \n// two consonants from the right side of the word (case sensitive).\n\
  // Vowels in the beginning and ending doesn't count. Return empty string if you\
  \ didn't\n// find any vowel met the above condition. \n// You may assume that the\
  \ given string contains English letter only.\n// Example:\n// get_closest_vowel(\"\
  yogurt\") ==> \"u\"\n// get_closest_vowel(\"FULL\") ==> \"U\"\n// get_closest_vowel(\"\
  quick\") ==> \"\"\n// get_closest_vowel(\"ab\") ==> \"\"\nfunction get_closest_vowel($word)\
  \ {\n"
tests: "function candidate(...$args) {\n    return get_closest_vowel(...$args);\n\
  }\n\nfunction test(): void {\n    if (candidate(\"yogurt\") !== \"u\") { throw new\
  \ Exception(\"Test failed!\"); }\n    if (candidate(\"full\") !== \"u\") { throw\
  \ new Exception(\"Test failed!\"); }\n    if (candidate(\"easy\") !== \"\") { throw\
  \ new Exception(\"Test failed!\"); }\n    if (candidate(\"eAsy\") !== \"\") { throw\
  \ new Exception(\"Test failed!\"); }\n    if (candidate(\"ali\") !== \"\") { throw\
  \ new Exception(\"Test failed!\"); }\n    if (candidate(\"bad\") !== \"a\") { throw\
  \ new Exception(\"Test failed!\"); }\n    if (candidate(\"most\") !== \"o\") { throw\
  \ new Exception(\"Test failed!\"); }\n    if (candidate(\"ab\") !== \"\") { throw\
  \ new Exception(\"Test failed!\"); }\n    if (candidate(\"ba\") !== \"\") { throw\
  \ new Exception(\"Test failed!\"); }\n    if (candidate(\"quick\") !== \"\") { throw\
  \ new Exception(\"Test failed!\"); }\n    if (candidate(\"anime\") !== \"i\") {\
  \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Asia\") !== \"\"\
  ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Above\") !== \"\
  o\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
completions: ["    $vowels = ['a', 'e', 'i', 'o', 'u'];\n    $word = strrev($word);\n\
    \    $vowel_index = -1;\n    for ($i = 0; $i < strlen($word); $i++) {\n      \
    \  if (in_array($word[$i], $vowels)) {\n            $vowel_index = $i;\n     \
    \       break;\n        }\n    }\n    if ($vowel_index == -1) {\n        return\
    \ '';\n    }\n    for ($i = $vowel_index + 1; $i < strlen($word); $i++) {\n  \
    \      if (!in_array($word[$i], $vowels)) {\n            return $word[$i - 1];\n\
    \        }\n    }\n    return '';\n}\n", "    $vowels = array(\"a\", \"e\", \"\
    i\", \"o\", \"u\");\n    $word = strrev($word);\n    $vowel_pos = -1;\n    for\
    \ ($i = 0; $i < strlen($word); $i++) {\n        if (in_array($word[$i], $vowels))\
    \ {\n            $vowel_pos = $i;\n            break;\n        }\n    }\n    if\
    \ ($vowel_pos == -1) {\n        return \"\";\n    }\n    for ($i = $vowel_pos\
    \ + 1; $i < strlen($word); $i++) {\n        if (!in_array($word[$i], $vowels))\
    \ {\n            return strrev($word[$vowel_pos]);\n        }\n    }\n    return\
    \ \"\";\n}\n", "    $vowels = ['a', 'e', 'i', 'o', 'u'];\n    $word = str_split(strtolower($word));\n\
    \    $vowel_index = null;\n    $consonant_index = null;\n    for ($i = count($word)\
    \ - 1; $i >= 0; $i--) {\n        if (in_array($word[$i], $vowels)) {\n       \
    \     $vowel_index = $i;\n            break;\n        }\n    }\n    if ($vowel_index\
    \ === null) {\n        return '';\n    }\n    for ($i = $vowel_index - 1; $i >=\
    \ 0; $i--) {\n        if (!in_array($word[$i], $vowels)) {\n            $consonant_index\
    \ = $i;\n            break;\n        }\n    }\n    if ($consonant_index === null)\
    \ {\n        return '';\n    }\n    return $word[$vowel_index];\n}\n\necho get_closest_vowel(\"\
    yogurt\") . PHP_EOL;\necho get_closest_vowel(\"FULL\") . PHP_EOL;\necho get_closest_vowel(\"\
    quick\") . PHP_EOL;\necho get_closest_vowel(\"ab\") . PHP_EOL;", "  $vowels =\
    \ ['a', 'e', 'i', 'o', 'u'];\n  $word = str_split(strtolower($word));\n  $result\
    \ = '';\n  $last_vowel = '';\n  $last_consonant = '';\n  for ($i = count($word)\
    \ - 1; $i >= 0; $i--) {\n    if (in_array($word[$i], $vowels)) {\n      $last_vowel\
    \ = $word[$i];\n      if ($last_consonant) {\n        $result = $last_vowel;\n\
    \        break;\n      }\n    } else {\n      $last_consonant = $word[$i];\n \
    \     if ($last_vowel) {\n        $result = $last_vowel;\n        break;\n   \
    \   }\n    }\n  }\n  return $result;\n}\n", "    $vowels = ['a', 'e', 'i', 'o',\
    \ 'u'];\n    $word = strrev($word);\n    $word_length = strlen($word);\n    $vowel_index\
    \ = -1;\n    for ($i = 0; $i < $word_length; $i++) {\n        if (in_array($word[$i],\
    \ $vowels)) {\n            $vowel_index = $i;\n            break;\n        }\n\
    \    }\n    if ($vowel_index == -1) {\n        return '';\n    }\n    for ($i\
    \ = $vowel_index + 1; $i < $word_length; $i++) {\n        if (!in_array($word[$i],\
    \ $vowels)) {\n            return strrev($word[$vowel_index]);\n        }\n  \
    \  }\n    return '';\n}\n", "    $vowels = ['a', 'e', 'i', 'o', 'u'];\n    $word\
    \ = str_split(strtolower($word));\n    $vowel_index = 0;\n    $vowel_distance\
    \ = 0;\n    $vowel_found = false;\n    for ($i = count($word) - 1; $i >= 0; $i--)\
    \ {\n        if (in_array($word[$i], $vowels)) {\n            if ($vowel_found)\
    \ {\n                return $word[$vowel_index];\n            }\n            $vowel_index\
    \ = $i;\n            $vowel_found = true;\n        } else {\n            if ($vowel_found)\
    \ {\n                $vowel_distance++;\n            }\n        }\n    }\n   \
    \ return $vowel_distance === 1 ? $word[$vowel_index] : '';\n}\n", "    $vowels\
    \ = array(\"a\", \"e\", \"i\", \"o\", \"u\");\n    $word = str_split(strrev($word));\n\
    \    $vowel_index = 0;\n    $consonant_index = 0;\n    for ($i = 0; $i < count($word);\
    \ $i++) {\n        if (in_array($word[$i], $vowels)) {\n            $vowel_index\
    \ = $i;\n            break;\n        }\n    }\n    for ($i = $vowel_index + 1;\
    \ $i < count($word); $i++) {\n        if (!in_array($word[$i], $vowels)) {\n \
    \           $consonant_index = $i;\n            break;\n        }\n    }\n   \
    \ if ($vowel_index == 0 || $consonant_index == 0) {\n        return \"\";\n  \
    \  }\n    return $word[$vowel_index];\n}\necho get_closest_vowel(\"yogurt\") .\
    \ \"\\n\";\necho get_closest_vowel(\"FULL\") . \"\\n\";\necho get_closest_vowel(\"\
    quick\") . \"\\n\";\necho get_closest_vowel(\"ab\") . \"\\n\";", "    $vowels\
    \ = ['a', 'e', 'i', 'o', 'u'];\n    $word = str_split(strtolower($word));\n  \
    \  $vowel_index = null;\n    $vowel_distance = null;\n    for ($i = count($word)\
    \ - 1; $i >= 0; $i--) {\n        if (in_array($word[$i], $vowels)) {\n       \
    \     $vowel_index = $i;\n            break;\n        }\n    }\n    if ($vowel_index\
    \ === null) {\n        return '';\n    }\n    for ($i = $vowel_index - 1; $i >=\
    \ 0; $i--) {\n        if (!in_array($word[$i], $vowels)) {\n            $vowel_distance\
    \ = $vowel_index - $i;\n            break;\n        }\n    }\n    if ($vowel_distance\
    \ === null) {\n        return '';\n    }\n    for ($i = $vowel_index - 1; $i >=\
    \ 0; $i--) {\n        if (!in_array($word[$i], $vowels)) {\n            if ($vowel_index\
    \ - $i < $vowel_distance) {\n                $vowel_distance = $vowel_index -\
    \ $i;\n                $vowel_index = $i;\n            }\n        }\n    }\n \
    \   return $word[$vowel_index];\n}\n", "    $vowels = ['a', 'e', 'i', 'o', 'u'];\n\
    \    $word = str_split(strtolower($word));\n    $word = array_reverse($word);\n\
    \    $vowel = '';\n    for ($i = 0; $i < count($word); $i++) {\n        if (in_array($word[$i],\
    \ $vowels)) {\n            $vowel = $word[$i];\n            if (isset($word[$i\
    \ + 1]) && !in_array($word[$i + 1], $vowels)) {\n                return $vowel;\n\
    \            }\n        }\n    }\n    return '';\n}\n", "    $vowels = ['a', 'e',\
    \ 'i', 'o', 'u'];\n    $word = str_split(strtolower($word));\n    $vowel_index\
    \ = [];\n    $consonant_index = [];\n    foreach ($word as $key => $value) {\n\
    \        if (in_array($value, $vowels)) {\n            $vowel_index[] = $key;\n\
    \        } else {\n            $consonant_index[] = $key;\n        }\n    }\n\
    \    $consonant_index = array_reverse($consonant_index);\n    $result = [];\n\
    \    foreach ($consonant_index as $key => $value) {\n        if ($key == 0) {\n\
    \            continue;\n        }\n        $result[] = $vowel_index[array_search($value\
    \ - 1, $vowel_index)];\n    }\n    if (empty($result)) {\n        return '';\n\
    \    }\n    return $word[min($result)];\n}\n", "    $vowels = ['a', 'e', 'i',\
    \ 'o', 'u'];\n    $word = strrev($word);\n    $vowel = '';\n    for ($i = 0; $i\
    \ < strlen($word); $i++) {\n        if (in_array($word[$i], $vowels)) {\n    \
    \        $vowel = $word[$i];\n            break;\n        }\n    }\n    return\
    \ $vowel;\n}\n", "    $vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"];\n    $word\
    \ = str_split(strrev($word));\n    $result = \"\";\n    for ($i = 0; $i < count($word);\
    \ $i++) {\n        if (in_array($word[$i], $vowels)) {\n            if ($i + 1\
    \ < count($word) && !in_array($word[$i + 1], $vowels)) {\n                $result\
    \ = $word[$i];\n                break;\n            }\n        }\n    }\n    return\
    \ $result;\n}\n", "    $vowels = ['a', 'e', 'i', 'o', 'u'];\n    $word = str_split(strtolower($word));\n\
    \    $vowel_pos = [];\n    foreach ($word as $key => $value) {\n        if (in_array($value,\
    \ $vowels)) {\n            $vowel_pos[] = $key;\n        }\n    }\n    $vowel_pos\
    \ = array_reverse($vowel_pos);\n    $consonant_pos = [];\n    foreach ($word as\
    \ $key => $value) {\n        if (!in_array($value, $vowels)) {\n            $consonant_pos[]\
    \ = $key;\n        }\n    }\n    $consonant_pos = array_reverse($consonant_pos);\n\
    \    $result = [];\n    foreach ($vowel_pos as $vowel) {\n        foreach ($consonant_pos\
    \ as $consonant) {\n            if ($vowel < $consonant) {\n                $result[]\
    \ = $vowel;\n                break;\n            }\n        }\n    }\n    if (empty($result))\
    \ {\n        return '';\n    }\n    return $word[max($result)];\n}\n", "    $vowels\
    \ = ['a', 'e', 'i', 'o', 'u'];\n    $word = str_split(strtolower($word));\n  \
    \  $result = [];\n    for ($i = count($word) - 1; $i >= 0; $i--) {\n        if\
    \ (in_array($word[$i], $vowels)) {\n            if ($i == count($word) - 1) {\n\
    \                $result[] = $word[$i];\n            } else {\n              \
    \  if (!in_array($word[$i + 1], $vowels)) {\n                    $result[] = $word[$i];\n\
    \                }\n            }\n        }\n    }\n    if (count($result) ==\
    \ 0) {\n        return '';\n    } else {\n        return $result[count($result)\
    \ - 1];\n    }\n}\n", "    $vowels = ['a', 'e', 'i', 'o', 'u'];\n    $word = str_split(strtolower($word));\n\
    \    $vowel_index = [];\n    foreach ($word as $key => $value) {\n        if (in_array($value,\
    \ $vowels)) {\n            $vowel_index[] = $key;\n        }\n    }\n    $result\
    \ = [];\n    foreach ($vowel_index as $key => $value) {\n        if ($value >\
    \ 0 && $value < count($word) - 1) {\n            if (!in_array($word[$value -\
    \ 1], $vowels) && !in_array($word[$value + 1], $vowels)) {\n                $result[]\
    \ = $value;\n            }\n        }\n    }\n    if (count($result) == 0) {\n\
    \        return '';\n    }\n    $min = $result[0];\n    foreach ($result as $key\
    \ => $value) {\n        if ($value > $min) {\n            $min = $value;\n   \
    \     }\n    }\n    return $word[$min];\n}\necho get_closest_vowel(\"yogurt\"\
    ) . \"\\n\";\necho get_closest_vowel(\"FULL\") . \"\\n\";\necho get_closest_vowel(\"\
    quick\") . \"\\n\";\necho get_closest_vowel(\"ab\") . \"\\n\";", "    $vowels\
    \ = ['a', 'e', 'i', 'o', 'u'];\n    $word = strrev($word);\n    $word_length =\
    \ strlen($word);\n    for ($i = 0; $i < $word_length; $i++) {\n        if (in_array($word[$i],\
    \ $vowels)) {\n            if ($i + 1 < $word_length && in_array($word[$i + 1],\
    \ $vowels)) {\n                continue;\n            }\n            if ($i -\
    \ 1 >= 0 && in_array($word[$i - 1], $vowels)) {\n                continue;\n \
    \           }\n            return strrev($word[$i]);\n        }\n    }\n    return\
    \ '';\n}\n", "    $vowels = ['a', 'e', 'i', 'o', 'u'];\n    $word = str_split(strtolower($word));\n\
    \    $vowel_index = 0;\n    $consonant_index = 0;\n    $vowel_found = false;\n\
    \    $consonant_found = false;\n    for ($i = count($word) - 1; $i >= 0; $i--)\
    \ {\n        if (in_array($word[$i], $vowels)) {\n            $vowel_index = $i;\n\
    \            $vowel_found = true;\n        }\n        if (!in_array($word[$i],\
    \ $vowels) && $vowel_found) {\n            $consonant_index = $i;\n          \
    \  $consonant_found = true;\n            break;\n        }\n    }\n    if ($vowel_found\
    \ && $consonant_found) {\n        return $word[$vowel_index];\n    }\n    return\
    \ '';\n}\n", "  $vowels = ['a', 'e', 'i', 'o', 'u'];\n  $word = str_split(strtolower($word));\n\
    \  $result = '';\n  for ($i = count($word) - 1; $i >= 0; $i--) {\n    if (in_array($word[$i],\
    \ $vowels)) {\n      if ($i == count($word) - 1) {\n        continue;\n      }\n\
    \      if (in_array($word[$i + 1], $vowels)) {\n        continue;\n      }\n \
    \     $result = $word[$i];\n      break;\n    }\n  }\n  return $result;\n}\n",
  "    $vowels = ['a', 'e', 'i', 'o', 'u'];\n    $word = str_split(strtolower($word));\n\
    \    $word = array_reverse($word);\n    $vowel_index = 0;\n    $consonant_index\
    \ = 0;\n    $vowel_found = false;\n    $consonant_found = false;\n    for ($i\
    \ = 0; $i < count($word); $i++) {\n        if (in_array($word[$i], $vowels)) {\n\
    \            $vowel_index = $i;\n            $vowel_found = true;\n        } else\
    \ {\n            $consonant_index = $i;\n            $consonant_found = true;\n\
    \        }\n        if ($vowel_found && $consonant_found) {\n            if ($vowel_index\
    \ < $consonant_index) {\n                return strtoupper($word[$vowel_index]);\n\
    \            }\n        }\n    }\n    return '';\n}\n", "    $vowels = ['a', 'e',\
    \ 'i', 'o', 'u'];\n    $word = str_split(strtolower($word));\n    $last_vowel\
    \ = '';\n    $last_consonant = '';\n    $closest_vowel = '';\n    $closest_distance\
    \ = 0;\n    for ($i = 0; $i < count($word); $i++) {\n        if (in_array($word[$i],\
    \ $vowels)) {\n            $last_vowel = $word[$i];\n            if ($last_consonant\
    \ != '') {\n                $distance = $i - array_search($last_consonant, $word);\n\
    \                if ($closest_distance == 0 || $distance < $closest_distance)\
    \ {\n                    $closest_distance = $distance;\n                    $closest_vowel\
    \ = $last_vowel;\n                }\n            }\n        } else {\n       \
    \     $last_consonant = $word[$i];\n        }\n    }\n    return $closest_vowel;\n\
    }\n", "    $vowels = ['a', 'e', 'i', 'o', 'u'];\n    $word = strrev($word);\n\
    \    $vowel_index = 0;\n    for ($i = 0; $i < strlen($word); $i++) {\n       \
    \ if (in_array($word[$i], $vowels)) {\n            $vowel_index = $i;\n      \
    \      break;\n        }\n    }\n    if ($vowel_index == 0) {\n        return\
    \ '';\n    }\n    for ($i = $vowel_index + 1; $i < strlen($word); $i++) {\n  \
    \      if (!in_array($word[$i], $vowels)) {\n            return strrev($word[$vowel_index]);\n\
    \        }\n    }\n    return '';\n}\n", "    $vowels = ['a', 'e', 'i', 'o', 'u'];\n\
    \    $consonants = ['b', 'c', 'd', 'f', 'g', 'h', 'j', 'k', 'l', 'm', 'n', 'p',\
    \ 'q', 'r', 's', 't', 'v', 'w', 'x', 'y', 'z'];\n    $word = str_split($word);\n\
    \    $word = array_reverse($word);\n    $vowel_index = 0;\n    $consonant_index\
    \ = 0;\n    for ($i = 0; $i < count($word); $i++) {\n        if (in_array($word[$i],\
    \ $vowels)) {\n            $vowel_index = $i;\n            break;\n        }\n\
    \    }\n    for ($i = $vowel_index; $i < count($word); $i++) {\n        if (in_array($word[$i],\
    \ $consonants)) {\n            $consonant_index = $i;\n            break;\n  \
    \      }\n    }\n    if ($vowel_index == 0 || $consonant_index == 0) {\n     \
    \   return '';\n    }\n    return $word[$vowel_index];\n}\n", "    $vowels = array('a',\
    \ 'e', 'i', 'o', 'u');\n    $word = strrev($word);\n    $word_length = strlen($word);\n\
    \    $vowel_index = 0;\n    $vowel_position = 0;\n    for ($i = 0; $i < $word_length;\
    \ $i++) {\n        if (in_array($word[$i], $vowels)) {\n            $vowel_index\
    \ = $i;\n            break;\n        }\n    }\n    for ($i = $vowel_index + 1;\
    \ $i < $word_length; $i++) {\n        if (!in_array($word[$i], $vowels)) {\n \
    \           $vowel_position = $i;\n            break;\n        }\n    }\n    if\
    \ ($vowel_position > 0) {\n        return $word[$vowel_position - 1];\n    } else\
    \ {\n        return '';\n    }\n}\n", "    $vowels = [\"a\", \"e\", \"i\", \"\
    o\", \"u\"];\n    $word = strrev($word);\n    $vowel = \"\";\n    for ($i = 0;\
    \ $i < strlen($word); $i++) {\n        if (in_array($word[$i], $vowels)) {\n \
    \           $vowel = $word[$i];\n            break;\n        }\n    }\n    if\
    \ ($vowel == \"\") {\n        return \"\";\n    }\n    $vowel = strrev($vowel);\n\
    \    $vowel_index = strpos($word, $vowel);\n    $word = strrev($word);\n    $word\
    \ = str_split($word);\n    $word[$vowel_index] = \"\";\n    $word = implode(\"\
    \", $word);\n    $word = strrev($word);\n    $word = str_split($word);\n    $word[$vowel_index]\
    \ = \"\";\n    $word = implode(\"\", $word);\n    $word = strrev($word);\n   \
    \ return $vowel;\n}\n\necho get_closest_vowel(\"yogurt\") . \"\\n\";\necho get_closest_vowel(\"\
    FULL\") . \"\\n\";\necho get_closest_vowel(\"quick\") . \"\\n\";\necho get_closest_vowel(\"\
    ab\") . \"\\n\";", "    $vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"];\n    $word\
    \ = strrev($word);\n    $vowel_index = -1;\n    $consonant_index = -1;\n    for\
    \ ($i = 0; $i < strlen($word); $i++) {\n        if (in_array($word[$i], $vowels))\
    \ {\n            $vowel_index = $i;\n            break;\n        }\n    }\n  \
    \  for ($i = $vowel_index + 1; $i < strlen($word); $i++) {\n        if (!in_array($word[$i],\
    \ $vowels)) {\n            $consonant_index = $i;\n            break;\n      \
    \  }\n    }\n    if ($vowel_index == -1 || $consonant_index == -1) {\n       \
    \ return \"\";\n    }\n    return $word[$vowel_index];\n}\n", "    $vowels = array('a',\
    \ 'e', 'i', 'o', 'u');\n    $word = strrev($word);\n    $word_len = strlen($word);\n\
    \    $found = false;\n    for ($i = 0; $i < $word_len; $i++) {\n        if (in_array($word[$i],\
    \ $vowels)) {\n            if ($i + 1 < $word_len && !in_array($word[$i + 1],\
    \ $vowels)) {\n                $found = true;\n                break;\n      \
    \      }\n        }\n    }\n    if ($found) {\n        return $word[$i];\n   \
    \ } else {\n        return '';\n    }\n}\n", "    $vowels = [\"a\", \"e\", \"\
    i\", \"o\", \"u\"];\n    $word = str_split(strrev($word));\n    $vowel_index =\
    \ 0;\n    for ($i = 0; $i < count($word); $i++) {\n        if (in_array($word[$i],\
    \ $vowels)) {\n            $vowel_index = $i;\n            break;\n        }\n\
    \    }\n    if ($vowel_index == 0) {\n        return \"\";\n    }\n    for ($i\
    \ = $vowel_index + 1; $i < count($word); $i++) {\n        if (!in_array($word[$i],\
    \ $vowels)) {\n            return $word[$vowel_index];\n        }\n    }\n   \
    \ return \"\";\n}\n", "    $vowels = ['a', 'e', 'i', 'o', 'u'];\n    $word = str_split(strtolower($word));\n\
    \    $result = '';\n    $distance = 0;\n    for ($i = count($word) - 1; $i >=\
    \ 0; $i--) {\n        if (in_array($word[$i], $vowels)) {\n            $result\
    \ = $word[$i];\n            $distance = count($word) - $i;\n            break;\n\
    \        }\n    }\n    for ($i = count($word) - 1; $i >= 0; $i--) {\n        if\
    \ (in_array($word[$i], $vowels)) {\n            if (count($word) - $i < $distance)\
    \ {\n                $result = $word[$i];\n                $distance = count($word)\
    \ - $i;\n            }\n        }\n    }\n    return $result;\n}\n", "  $vowels\
    \ = ['a', 'e', 'i', 'o', 'u'];\n  $word = str_split(strtolower($word));\n  $vowel_index\
    \ = 0;\n  $vowel_distance = 0;\n  for ($i = count($word) - 1; $i >= 0; $i--) {\n\
    \    if (in_array($word[$i], $vowels)) {\n      $vowel_index = $i;\n      break;\n\
    \    }\n  }\n  for ($i = $vowel_index - 1; $i >= 0; $i--) {\n    if (!in_array($word[$i],\
    \ $vowels)) {\n      $vowel_distance = $vowel_index - $i;\n      break;\n    }\n\
    \  }\n  if ($vowel_distance == 0) {\n    return '';\n  }\n  return $word[$vowel_index];\n\
    }\n", "    $vowels = ['a', 'e', 'i', 'o', 'u'];\n    $word = str_split(strtolower($word));\n\
    \    $vowel = '';\n    $vowel_index = 0;\n    $consonant_index = 0;\n    for ($i\
    \ = count($word) - 1; $i >= 0; $i--) {\n        if (in_array($word[$i], $vowels))\
    \ {\n            $vowel = $word[$i];\n            $vowel_index = $i;\n       \
    \     break;\n        }\n    }\n    for ($i = $vowel_index - 1; $i >= 0; $i--)\
    \ {\n        if (!in_array($word[$i], $vowels)) {\n            $consonant_index\
    \ = $i;\n            break;\n        }\n    }\n    if ($vowel_index - $consonant_index\
    \ > 1) {\n        return $vowel;\n    }\n    return '';\n}\n", "    $vowels =\
    \ ['a', 'e', 'i', 'o', 'u'];\n    $word = str_split(strtolower($word));\n    $word\
    \ = array_reverse($word);\n    $vowel = '';\n    $consonant = '';\n    foreach\
    \ ($word as $key => $value) {\n        if (in_array($value, $vowels)) {\n    \
    \        $vowel = $value;\n            break;\n        }\n        $consonant =\
    \ $value;\n    }\n    if ($vowel && $consonant) {\n        return strtoupper($vowel);\n\
    \    }\n    return '';\n}\n", "    $vowels = ['a', 'e', 'i', 'o', 'u'];\n    $word\
    \ = strrev($word);\n    $vowel = '';\n    $consonant = '';\n    for ($i = 0; $i\
    \ < strlen($word); $i++) {\n        if (in_array($word[$i], $vowels)) {\n    \
    \        $vowel = $word[$i];\n            break;\n        }\n        $consonant\
    \ = $word[$i];\n    }\n    if ($vowel === '' || $consonant === '') {\n       \
    \ return '';\n    }\n    return $vowel;\n}\n", "    $vowels = [\"a\", \"e\", \"\
    i\", \"o\", \"u\"];\n    $word = strrev($word);\n    $vowel_index = null;\n  \
    \  for ($i = 0; $i < strlen($word); $i++) {\n        if (in_array($word[$i], $vowels))\
    \ {\n            $vowel_index = $i;\n            break;\n        }\n    }\n  \
    \  if ($vowel_index === null) {\n        return \"\";\n    }\n    $consonant_index\
    \ = null;\n    for ($i = $vowel_index + 1; $i < strlen($word); $i++) {\n     \
    \   if (!in_array($word[$i], $vowels)) {\n            $consonant_index = $i;\n\
    \            break;\n        }\n    }\n    if ($consonant_index === null) {\n\
    \        return \"\";\n    }\n    return $word[$vowel_index];\n}\n", "    $vowels\
    \ = ['a', 'e', 'i', 'o', 'u'];\n    $word = str_split(strtolower($word));\n  \
    \  $last_vowel = '';\n    $last_consonant = '';\n    $result = '';\n    for ($i\
    \ = count($word) - 1; $i >= 0; $i--) {\n        if (in_array($word[$i], $vowels))\
    \ {\n            $last_vowel = $word[$i];\n            if ($last_consonant) {\n\
    \                $result = $last_vowel;\n                break;\n            }\n\
    \        } else {\n            $last_consonant = $word[$i];\n            if ($last_vowel)\
    \ {\n                $result = $last_vowel;\n                break;\n        \
    \    }\n        }\n    }\n    return $result;\n}\n", "    $vowels = ['a', 'e',\
    \ 'i', 'o', 'u'];\n    $word = str_split(strtolower($word));\n    $vowel_index\
    \ = 0;\n    $vowel_count = 0;\n    $consonant_count = 0;\n    $vowel_found = false;\n\
    \    for ($i = count($word) - 1; $i >= 0; $i--) {\n        if (in_array($word[$i],\
    \ $vowels)) {\n            $vowel_count++;\n            if ($vowel_count == 2)\
    \ {\n                $vowel_found = true;\n                break;\n          \
    \  }\n        } else {\n            $consonant_count++;\n        }\n        $vowel_index\
    \ = $i;\n    }\n    if ($vowel_found) {\n        return $word[$vowel_index];\n\
    \    } else {\n        return '';\n    }\n}\n", "    $vowels = ['a', 'e', 'i',\
    \ 'o', 'u'];\n    $word = str_split(strtolower($word));\n    $vowel_index = null;\n\
    \    $consonant_index = null;\n    for ($i = count($word) - 1; $i >= 0; $i--)\
    \ {\n        if (in_array($word[$i], $vowels)) {\n            $vowel_index = $i;\n\
    \            break;\n        }\n    }\n    if ($vowel_index === null) {\n    \
    \    return '';\n    }\n    for ($i = $vowel_index - 1; $i >= 0; $i--) {\n   \
    \     if (!in_array($word[$i], $vowels)) {\n            $consonant_index = $i;\n\
    \            break;\n        }\n    }\n    if ($consonant_index === null) {\n\
    \        return '';\n    }\n    return $word[$vowel_index];\n}\n", "    $vowels\
    \ = array(\"a\", \"e\", \"i\", \"o\", \"u\");\n    $word = str_split(strrev($word));\n\
    \    $last_vowel = \"\";\n    $last_consonant = \"\";\n    $closest_vowel = \"\
    \";\n    $closest_vowel_distance = 0;\n    foreach ($word as $letter) {\n    \
    \    if (in_array($letter, $vowels)) {\n            $last_vowel = $letter;\n \
    \           if ($last_consonant != \"\") {\n                $distance = abs(array_search($last_vowel,\
    \ $vowels) - array_search($last_consonant, $vowels));\n                if ($closest_vowel_distance\
    \ == 0 || $distance < $closest_vowel_distance) {\n                    $closest_vowel_distance\
    \ = $distance;\n                    $closest_vowel = $last_vowel;\n          \
    \      }\n            }\n        } else {\n            $last_consonant = $letter;\n\
    \        }\n    }\n    return $closest_vowel;\n}\n", "    $vowels = ['a', 'e',\
    \ 'i', 'o', 'u'];\n    $consonants = ['b', 'c', 'd', 'f', 'g', 'h', 'j', 'k',\
    \ 'l', 'm', 'n', 'p', 'q', 'r', 's', 't', 'v', 'w', 'x', 'y', 'z'];\n    $word\
    \ = str_split($word);\n    $vowel_index = -1;\n    for ($i = count($word) - 1;\
    \ $i >= 0; $i--) {\n        if (in_array($word[$i], $vowels)) {\n            $vowel_index\
    \ = $i;\n            break;\n        }\n    }\n    if ($vowel_index == -1) {\n\
    \        return '';\n    }\n    for ($i = $vowel_index - 1; $i >= 0; $i--) {\n\
    \        if (in_array($word[$i], $consonants)) {\n            return $word[$vowel_index];\n\
    \        }\n    }\n    return '';\n}\n", "    $vowels = ['a', 'e', 'i', 'o', 'u'];\n\
    \    $word = str_split(strtolower($word));\n    $vowel_index = null;\n    $consonant_index\
    \ = null;\n    $result = '';\n    for ($i = count($word) - 1; $i >= 0; $i--) {\n\
    \        if (in_array($word[$i], $vowels)) {\n            $vowel_index = $i;\n\
    \            break;\n        }\n    }\n    if ($vowel_index === null) {\n    \
    \    return $result;\n    }\n    for ($i = $vowel_index - 1; $i >= 0; $i--) {\n\
    \        if (!in_array($word[$i], $vowels)) {\n            $consonant_index =\
    \ $i;\n            break;\n        }\n    }\n    if ($consonant_index === null)\
    \ {\n        return $result;\n    }\n    $result = $word[$vowel_index];\n    return\
    \ $result;\n}\n", "    $vowels = ['a', 'e', 'i', 'o', 'u'];\n    $word = str_split(strtolower($word));\n\
    \    $vowel_index = 0;\n    $vowel_distance = 0;\n    $vowel_distance_min = strlen($word);\n\
    \    for ($i = count($word) - 1; $i >= 0; $i--) {\n        if (in_array($word[$i],\
    \ $vowels)) {\n            $vowel_index = $i;\n            break;\n        }\n\
    \    }\n    for ($i = $vowel_index; $i >= 0; $i--) {\n        if (!in_array($word[$i],\
    \ $vowels)) {\n            $vowel_distance = $vowel_index - $i;\n            if\
    \ ($vowel_distance < $vowel_distance_min) {\n                $vowel_distance_min\
    \ = $vowel_distance;\n                $vowel = $word[$vowel_index];\n        \
    \    }\n            $vowel_index = $i;\n        }\n    }\n    return $vowel_distance_min\
    \ === strlen($word) ? '' : $vowel;\n}\n", "  $vowels = ['a', 'e', 'i', 'o', 'u'];\n\
    \  $word = str_split(strtolower($word));\n  $vowel_index = -1;\n  $vowel_distance\
    \ = PHP_INT_MAX;\n  for ($i = count($word) - 1; $i >= 0; $i--) {\n    if (in_array($word[$i],\
    \ $vowels)) {\n      $vowel_index = $i;\n      break;\n    }\n  }\n  if ($vowel_index\
    \ === -1) {\n    return '';\n  }\n  for ($i = $vowel_index - 1; $i >= 0; $i--)\
    \ {\n    if (!in_array($word[$i], $vowels)) {\n      $vowel_distance = $vowel_index\
    \ - $i;\n      break;\n    }\n  }\n  for ($i = $vowel_index + 1; $i < count($word);\
    \ $i++) {\n    if (!in_array($word[$i], $vowels)) {\n      $vowel_distance = min($vowel_distance,\
    \ $i - $vowel_index);\n      break;\n    }\n  }\n  if ($vowel_distance === PHP_INT_MAX)\
    \ {\n    return '';\n  }\n  return $word[$vowel_index];\n}\n", "  $vowels = ['a',\
    \ 'e', 'i', 'o', 'u'];\n  $word = str_split(strtolower($word));\n  $vowel = '';\n\
    \  $distance = 0;\n  for ($i = count($word) - 1; $i >= 0; $i--) {\n    if (in_array($word[$i],\
    \ $vowels)) {\n      $vowel = $word[$i];\n      $distance = count($word) - $i;\n\
    \      break;\n    }\n  }\n  for ($i = count($word) - 1; $i >= 0; $i--) {\n  \
    \  if (in_array($word[$i], $vowels)) {\n      if (count($word) - $i < $distance)\
    \ {\n        $vowel = $word[$i];\n        $distance = count($word) - $i;\n   \
    \   }\n    }\n  }\n  return $vowel;\n}\n", "  $vowels = ['a', 'e', 'i', 'o', 'u'];\n\
    \  $word = strrev($word);\n  $word_arr = str_split($word);\n  $vowel_index = [];\n\
    \  $consonant_index = [];\n  for ($i = 0; $i < count($word_arr); $i++) {\n   \
    \ if (in_array($word_arr[$i], $vowels)) {\n      $vowel_index[] = $i;\n    } else\
    \ {\n      $consonant_index[] = $i;\n    }\n  }\n  $vowel_index = array_reverse($vowel_index);\n\
    \  $consonant_index = array_reverse($consonant_index);\n  $result = [];\n  for\
    \ ($i = 0; $i < count($vowel_index); $i++) {\n    for ($j = 0; $j < count($consonant_index);\
    \ $j++) {\n      if ($vowel_index[$i] < $consonant_index[$j]) {\n        $result[]\
    \ = $vowel_index[$i];\n      }\n    }\n  }\n  if (count($result) == 0) {\n   \
    \ return '';\n  }\n  $result = min($result);\n  return $word_arr[$result];\n}\n\
    echo get_closest_vowel(\"yogurt\") . \"\\n\";\necho get_closest_vowel(\"FULL\"\
    ) . \"\\n\";\necho get_closest_vowel(\"quick\") . \"\\n\";\necho get_closest_vowel(\"\
    ab\") . \"\\n\";", "  $vowels = ['a', 'e', 'i', 'o', 'u'];\n  $word = strrev($word);\n\
    \  $word_length = strlen($word);\n  $vowel_position = 0;\n  for ($i = 0; $i <\
    \ $word_length; $i++) {\n    if (in_array($word[$i], $vowels)) {\n      $vowel_position\
    \ = $i;\n      break;\n    }\n  }\n  if ($vowel_position == 0) {\n    return '';\n\
    \  }\n  $consonant_position = 0;\n  for ($i = $vowel_position + 1; $i < $word_length;\
    \ $i++) {\n    if (!in_array($word[$i], $vowels)) {\n      $consonant_position\
    \ = $i;\n      break;\n    }\n  }\n  if ($consonant_position == 0) {\n    return\
    \ '';\n  }\n  return $word[$vowel_position];\n}\n", "    $vowels = ['a', 'e',\
    \ 'i', 'o', 'u'];\n    $word = str_split(strtolower($word));\n    $vowel_index\
    \ = 0;\n    for ($i = count($word) - 1; $i >= 0; $i--) {\n        if (in_array($word[$i],\
    \ $vowels)) {\n            $vowel_index = $i;\n            break;\n        }\n\
    \    }\n    if ($vowel_index == 0) {\n        return '';\n    }\n    for ($i =\
    \ $vowel_index - 1; $i >= 0; $i--) {\n        if (!in_array($word[$i], $vowels))\
    \ {\n            return $word[$vowel_index];\n        }\n    }\n    return '';\n\
    }\n", "    $vowels = ['a', 'e', 'i', 'o', 'u'];\n    $consonants = ['b', 'c',\
    \ 'd', 'f', 'g', 'h', 'j', 'k', 'l', 'm', 'n', 'p', 'q', 'r', 's', 't', 'v', 'w',\
    \ 'x', 'y', 'z'];\n    $word = str_split($word);\n    $vowel_index = 0;\n    $consonant_index\
    \ = 0;\n    $vowel_found = false;\n    $consonant_found = false;\n    $closest_vowel\
    \ = '';\n    for ($i = count($word) - 1; $i >= 0; $i--) {\n        if (in_array($word[$i],\
    \ $vowels)) {\n            $vowel_index = $i;\n            $vowel_found = true;\n\
    \            break;\n        }\n    }\n    for ($i = count($word) - 1; $i >= 0;\
    \ $i--) {\n        if (in_array($word[$i], $consonants)) {\n            $consonant_index\
    \ = $i;\n            $consonant_found = true;\n            break;\n        }\n\
    \    }\n    if ($vowel_found && $consonant_found) {\n        if ($vowel_index\
    \ > $consonant_index) {\n            $closest_vowel = $word[$vowel_index];\n \
    \       }\n    }\n    return $closest_vowel;\n}\n", "    $vowels = ['a', 'e',\
    \ 'i', 'o', 'u'];\n    $word = str_split(strtolower($word));\n    $result = '';\n\
    \    $distance = strlen($word);\n    for ($i = count($word) - 1; $i >= 0; $i--)\
    \ {\n        if (in_array($word[$i], $vowels)) {\n            if ($i > 0 && !in_array($word[$i\
    \ - 1], $vowels)) {\n                if ($distance > $i) {\n                 \
    \   $distance = $i;\n                    $result = $word[$i];\n              \
    \  }\n            }\n        }\n    }\n    return $result;\n}\n", "    $vowels\
    \ = ['a', 'e', 'i', 'o', 'u'];\n    $consonants = ['b', 'c', 'd', 'f', 'g', 'h',\
    \ 'j', 'k', 'l', 'm', 'n', 'p', 'q', 'r', 's', 't', 'v', 'w', 'x', 'y', 'z'];\n\
    \    $word = str_split($word);\n    $word = array_reverse($word);\n    $vowel\
    \ = '';\n    $consonant = '';\n    foreach ($word as $key => $value) {\n     \
    \   if (in_array($value, $vowels)) {\n            $vowel = $value;\n        }\n\
    \        if (in_array($value, $consonants)) {\n            $consonant = $value;\n\
    \        }\n        if ($vowel && $consonant) {\n            return $vowel;\n\
    \        }\n    }\n    return '';\n}\n", "    $vowels = ['a', 'e', 'i', 'o', 'u'];\n\
    \    $word = str_split(strtolower($word));\n    $result = '';\n    $min_distance\
    \ = strlen($word);\n    for ($i = count($word) - 1; $i >= 0; $i--) {\n       \
    \ if (in_array($word[$i], $vowels)) {\n            $distance = count($word) -\
    \ $i;\n            if ($distance < $min_distance) {\n                $min_distance\
    \ = $distance;\n                $result = $word[$i];\n            }\n        }\n\
    \    }\n    return $result;\n}\n", "    $vowels = array('a', 'e', 'i', 'o', 'u');\n\
    \    $word = strrev($word);\n    $vowel_pos = -1;\n    for ($i = 0; $i < strlen($word);\
    \ $i++) {\n        if (in_array($word[$i], $vowels)) {\n            $vowel_pos\
    \ = $i;\n            break;\n        }\n    }\n    if ($vowel_pos == -1) {\n \
    \       return '';\n    }\n    $consonant_pos = -1;\n    for ($i = $vowel_pos\
    \ + 1; $i < strlen($word); $i++) {\n        if (!in_array($word[$i], $vowels))\
    \ {\n            $consonant_pos = $i;\n            break;\n        }\n    }\n\
    \    if ($consonant_pos == -1) {\n        return '';\n    }\n    return $word[$vowel_pos];\n\
    }\n", "    $vowels = ['a', 'e', 'i', 'o', 'u'];\n    $word = str_split(strtolower($word));\n\
    \    $vowel_index = 0;\n    $consonant_index = 0;\n    $vowel_found = false;\n\
    \    $consonant_found = false;\n    $result = '';\n    for ($i = count($word)\
    \ - 1; $i >= 0; $i--) {\n        if (in_array($word[$i], $vowels)) {\n       \
    \     $vowel_index = $i;\n            $vowel_found = true;\n        }\n      \
    \  if (!in_array($word[$i], $vowels) && $vowel_found) {\n            $consonant_index\
    \ = $i;\n            $consonant_found = true;\n            break;\n        }\n\
    \    }\n    if ($vowel_found && $consonant_found) {\n        $result = $word[$vowel_index];\n\
    \    }\n    return $result;\n}\n", "    $vowels = ['a', 'e', 'i', 'o', 'u'];\n\
    \    $word = str_split(strtolower($word));\n    $vowel_index = 0;\n    for ($i\
    \ = count($word) - 1; $i >= 0; $i--) {\n        if (in_array($word[$i], $vowels))\
    \ {\n            $vowel_index = $i;\n            break;\n        }\n    }\n  \
    \  if ($vowel_index == 0) {\n        return '';\n    }\n    for ($i = $vowel_index\
    \ - 1; $i >= 0; $i--) {\n        if (!in_array($word[$i], $vowels)) {\n      \
    \      return $word[$vowel_index];\n        }\n    }\n    return '';\n}\n", " \
    \ $vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"];\n  $word = strrev($word);\n \
    \ $word_length = strlen($word);\n  $vowel_index = -1;\n  for ($i = 0; $i < $word_length;\
    \ $i++) {\n    if (in_array($word[$i], $vowels)) {\n      $vowel_index = $i;\n\
    \      break;\n    }\n  }\n  if ($vowel_index == -1) {\n    return \"\";\n  }\n\
    \  for ($i = $vowel_index + 1; $i < $word_length; $i++) {\n    if (!in_array($word[$i],\
    \ $vowels)) {\n      return $word[$i - 1];\n    }\n  }\n  return \"\";\n}\n",
  "    $vowels = ['a', 'e', 'i', 'o', 'u'];\n    $word = str_split(strtolower($word));\n\
    \    $vowel = '';\n    for ($i = count($word) - 1; $i >= 0; $i--) {\n        if\
    \ (in_array($word[$i], $vowels)) {\n            $vowel = $word[$i];\n        \
    \    break;\n        }\n    }\n    if ($vowel) {\n        for ($i = count($word)\
    \ - 1; $i >= 0; $i--) {\n            if ($word[$i] == $vowel) {\n            \
    \    if ($i == 0) {\n                    return '';\n                }\n     \
    \           if (!in_array($word[$i - 1], $vowels)) {\n                    return\
    \ $vowel;\n                }\n            }\n        }\n    }\n    return '';\n\
    }\n", "    $vowels = ['a', 'e', 'i', 'o', 'u'];\n    $word = strrev($word);\n\
    \    $vowel = '';\n    for ($i = 0; $i < strlen($word); $i++) {\n        if (in_array($word[$i],\
    \ $vowels)) {\n            $vowel = $word[$i];\n            break;\n        }\n\
    \    }\n    if ($vowel) {\n        for ($i = 0; $i < strlen($word); $i++) {\n\
    \            if (!in_array($word[$i], $vowels)) {\n                return $vowel;\n\
    \            }\n        }\n    }\n    return '';\n}\n", "    $vowels = ['a', 'e',\
    \ 'i', 'o', 'u'];\n    $consonants = ['b', 'c', 'd', 'f', 'g', 'h', 'j', 'k',\
    \ 'l', 'm', 'n', 'p', 'q', 'r', 's', 't', 'v', 'w', 'x', 'y', 'z'];\n    $word\
    \ = strtolower($word);\n    $word_length = strlen($word);\n    $result = '';\n\
    \    for ($i = $word_length - 1; $i >= 0; $i--) {\n        if (in_array($word[$i],\
    \ $vowels)) {\n            $result = $word[$i];\n            break;\n        }\n\
    \    }\n    if ($result == '') {\n        return $result;\n    }\n    for ($i\
    \ = $word_length - 1; $i >= 0; $i--) {\n        if (in_array($word[$i], $consonants))\
    \ {\n            $result = $word[$i];\n            break;\n        }\n    }\n\
    \    if ($result == '') {\n        return $result;\n    }\n    for ($i = $word_length\
    \ - 1; $i >= 0; $i--) {\n        if (in_array($word[$i], $vowels)) {\n       \
    \     $result = $word[$i];\n            break;\n        }\n    }\n    return $result;\n\
    }\n\necho get_closest_vowel(\"yogurt\") . \"\\n\";\necho get_closest_vowel(\"\
    FULL\") . \"\\n\";\necho get_closest_vowel(\"quick\") . \"\\n\";\necho get_closest_vowel(\"\
    ab\") . \"\\n\";\n", "    $vowels = array('a', 'e', 'i', 'o', 'u');\n    $word\
    \ = strrev($word);\n    $vowel_index = 0;\n    $consonant_index = 0;\n    $vowel_found\
    \ = false;\n    $consonant_found = false;\n    for ($i = 0; $i < strlen($word);\
    \ $i++) {\n        if (in_array($word[$i], $vowels)) {\n            $vowel_index\
    \ = $i;\n            $vowel_found = true;\n            break;\n        }\n   \
    \ }\n    for ($i = $vowel_index + 1; $i < strlen($word); $i++) {\n        if (!in_array($word[$i],\
    \ $vowels)) {\n            $consonant_index = $i;\n            $consonant_found\
    \ = true;\n            break;\n        }\n    }\n    if ($vowel_found && $consonant_found)\
    \ {\n        return $word[$vowel_index];\n    } else {\n        return '';\n \
    \   }\n}\necho get_closest_vowel(\"yogurt\") . \"\\n\";\necho get_closest_vowel(\"\
    FULL\") . \"\\n\";\necho get_closest_vowel(\"quick\") . \"\\n\";\necho get_closest_vowel(\"\
    ab\") . \"\\n\";", "  $vowels = ['a', 'e', 'i', 'o', 'u'];\n  $word = strrev($word);\n\
    \  $word_length = strlen($word);\n  $closest_vowel = '';\n  $closest_vowel_index\
    \ = -1;\n  for ($i = 0; $i < $word_length; $i++) {\n    if (in_array($word[$i],\
    \ $vowels)) {\n      $closest_vowel = $word[$i];\n      $closest_vowel_index =\
    \ $i;\n      break;\n    }\n  }\n  if ($closest_vowel_index == -1) {\n    return\
    \ '';\n  }\n  for ($i = $closest_vowel_index + 1; $i < $word_length; $i++) {\n\
    \    if (!in_array($word[$i], $vowels)) {\n      return strrev($closest_vowel);\n\
    \    }\n  }\n  return '';\n}\n", "    $vowels = ['a', 'e', 'i', 'o', 'u'];\n \
    \   $consonants = ['b', 'c', 'd', 'f', 'g', 'h', 'j', 'k', 'l', 'm', 'n', 'p',\
    \ 'q', 'r', 's', 't', 'v', 'w', 'x', 'y', 'z'];\n    $word = strtolower($word);\n\
    \    $word = str_split($word);\n    $vowel_index = -1;\n    $consonant_index =\
    \ -1;\n    for ($i = count($word) - 1; $i >= 0; $i--) {\n        if (in_array($word[$i],\
    \ $vowels)) {\n            $vowel_index = $i;\n            break;\n        }\n\
    \    }\n    for ($i = $vowel_index - 1; $i >= 0; $i--) {\n        if (in_array($word[$i],\
    \ $consonants)) {\n            $consonant_index = $i;\n            break;\n  \
    \      }\n    }\n    if ($vowel_index == -1 || $consonant_index == -1) {\n   \
    \     return '';\n    }\n    return $word[$vowel_index];\n}\n\necho get_closest_vowel(\"\
    yogurt\") . PHP_EOL;\necho get_closest_vowel(\"FULL\") . PHP_EOL;\necho get_closest_vowel(\"\
    quick\") . PHP_EOL;\necho get_closest_vowel(\"ab\") . PHP_EOL;", "    $vowels\
    \ = [\"a\", \"e\", \"i\", \"o\", \"u\"];\n    $word = str_split(strrev($word));\n\
    \    $vowel_pos = 0;\n    $consonant_pos = 0;\n    for ($i = 0; $i < count($word);\
    \ $i++) {\n        if (in_array($word[$i], $vowels)) {\n            $vowel_pos\
    \ = $i;\n            break;\n        }\n    }\n    for ($i = $vowel_pos + 1; $i\
    \ < count($word); $i++) {\n        if (!in_array($word[$i], $vowels)) {\n    \
    \        $consonant_pos = $i;\n            break;\n        }\n    }\n    if ($vowel_pos\
    \ == 0 || $consonant_pos == 0) {\n        return \"\";\n    }\n    return $word[$vowel_pos];\n\
    }\n\necho get_closest_vowel(\"yogurt\") . \"\\n\";\necho get_closest_vowel(\"\
    FULL\") . \"\\n\";\necho get_closest_vowel(\"quick\") . \"\\n\";\necho get_closest_vowel(\"\
    ab\") . \"\\n\";\n", "    $vowels = ['a', 'e', 'i', 'o', 'u'];\n    $word = str_split(strtolower($word));\n\
    \    $vowel_index = -1;\n    for ($i = count($word) - 1; $i >= 0; $i--) {\n  \
    \      if (in_array($word[$i], $vowels)) {\n            $vowel_index = $i;\n \
    \           break;\n        }\n    }\n    if ($vowel_index == -1) {\n        return\
    \ '';\n    }\n    for ($i = $vowel_index - 1; $i >= 0; $i--) {\n        if (!in_array($word[$i],\
    \ $vowels)) {\n            return $word[$vowel_index];\n        }\n    }\n   \
    \ return '';\n}\n", "    $vowels = ['a', 'e', 'i', 'o', 'u'];\n    $word = str_split(strtolower($word));\n\
    \    $result = '';\n    for ($i = count($word) - 1; $i >= 0; $i--) {\n       \
    \ if (in_array($word[$i], $vowels)) {\n            if ($i == count($word) - 1)\
    \ {\n                $result = '';\n                break;\n            }\n  \
    \          if (!in_array($word[$i + 1], $vowels)) {\n                $result =\
    \ $word[$i];\n                break;\n            }\n        }\n    }\n    return\
    \ $result;\n}\necho get_closest_vowel(\"yogurt\") . \"\\n\";\necho get_closest_vowel(\"\
    FULL\") . \"\\n\";\necho get_closest_vowel(\"quick\") . \"\\n\";\necho get_closest_vowel(\"\
    ab\") . \"\\n\";", "    $vowels = ['a', 'e', 'i', 'o', 'u'];\n    $word = str_split(strtolower($word));\n\
    \    $result = '';\n    $distance = 0;\n    for ($i = count($word) - 1; $i >=\
    \ 0; $i--) {\n        if (in_array($word[$i], $vowels)) {\n            $result\
    \ = $word[$i];\n            $distance = count($word) - $i;\n            break;\n\
    \        }\n    }\n    for ($i = count($word) - 1; $i >= 0; $i--) {\n        if\
    \ (in_array($word[$i], $vowels)) {\n            if (count($word) - $i < $distance)\
    \ {\n                $result = $word[$i];\n                $distance = count($word)\
    \ - $i;\n            }\n        }\n    }\n    return $result;\n}\n", "    $vowels\
    \ = [\"a\", \"e\", \"i\", \"o\", \"u\"];\n    $word = str_split(strrev($word));\n\
    \    $vowel_index = null;\n    $consonant_index = null;\n    for ($i = 0; $i <\
    \ count($word); $i++) {\n        if (in_array($word[$i], $vowels)) {\n       \
    \     $vowel_index = $i;\n            break;\n        }\n    }\n    for ($i =\
    \ $vowel_index + 1; $i < count($word); $i++) {\n        if (!in_array($word[$i],\
    \ $vowels)) {\n            $consonant_index = $i;\n            break;\n      \
    \  }\n    }\n    if ($vowel_index === null || $consonant_index === null) {\n \
    \       return \"\";\n    }\n    return $word[$vowel_index];\n}\n\necho get_closest_vowel(\"\
    yogurt\");\necho get_closest_vowel(\"FULL\");\necho get_closest_vowel(\"quick\"\
    );\necho get_closest_vowel(\"ab\");", "    $vowels = ['a', 'e', 'i', 'o', 'u'];\n\
    \    $word = str_split(strtolower($word));\n    $vowel_index = 0;\n    $consonant_index\
    \ = 0;\n    $vowel_found = false;\n    $consonant_found = false;\n    for ($i\
    \ = count($word) - 1; $i >= 0; $i--) {\n        if (in_array($word[$i], $vowels))\
    \ {\n            $vowel_index = $i;\n            $vowel_found = true;\n      \
    \  } else {\n            $consonant_index = $i;\n            $consonant_found\
    \ = true;\n        }\n        if ($vowel_found && $consonant_found) {\n      \
    \      break;\n        }\n    }\n    if ($vowel_found && $consonant_found) {\n\
    \        return $word[$vowel_index];\n    } else {\n        return '';\n    }\n\
    }\n", "    $vowels = ['a', 'e', 'i', 'o', 'u'];\n    $word = str_split(strtolower($word));\n\
    \    $vowel_index = [];\n    foreach ($word as $key => $value) {\n        if (in_array($value,\
    \ $vowels)) {\n            $vowel_index[] = $key;\n        }\n    }\n    $vowel_index\
    \ = array_reverse($vowel_index);\n    $consonant_index = [];\n    foreach ($word\
    \ as $key => $value) {\n        if (!in_array($value, $vowels)) {\n          \
    \  $consonant_index[] = $key;\n        }\n    }\n    $consonant_index = array_reverse($consonant_index);\n\
    \    $closest_vowel = '';\n    foreach ($vowel_index as $key => $value) {\n  \
    \      if (in_array($value, $consonant_index)) {\n            $closest_vowel =\
    \ $word[$value];\n            break;\n        }\n    }\n    return $closest_vowel;\n\
    }\n", "    $vowels = ['a', 'e', 'i', 'o', 'u'];\n    $consonants = ['b', 'c',\
    \ 'd', 'f', 'g', 'h', 'j', 'k', 'l', 'm', 'n', 'p', 'q', 'r', 's', 't', 'v', 'w',\
    \ 'x', 'y', 'z'];\n    $word = str_split($word);\n    $vowel_pos = [];\n    $consonant_pos\
    \ = [];\n    foreach ($word as $key => $value) {\n        if (in_array($value,\
    \ $vowels)) {\n            $vowel_pos[] = $key;\n        }\n        if (in_array($value,\
    \ $consonants)) {\n            $consonant_pos[] = $key;\n        }\n    }\n  \
    \  $result = [];\n    foreach ($vowel_pos as $key => $value) {\n        if (in_array($value\
    \ - 1, $consonant_pos) && in_array($value + 1, $consonant_pos)) {\n          \
    \  $result[] = $value;\n        }\n    }\n    if (empty($result)) {\n        return\
    \ '';\n    }\n    $result = min($result);\n    return $word[$result];\n}\n", " \
    \   $vowels = array('a', 'e', 'i', 'o', 'u');\n    $word = strrev($word);\n  \
    \  $vowel = '';\n    for ($i = 0; $i < strlen($word); $i++) {\n        if (in_array($word[$i],\
    \ $vowels)) {\n            $vowel = $word[$i];\n            break;\n        }\n\
    \    }\n    if ($vowel == '') {\n        return '';\n    }\n    for ($i = 0; $i\
    \ < strlen($word); $i++) {\n        if (!in_array($word[$i], $vowels)) {\n   \
    \         return $vowel;\n        }\n    }\n    return '';\n}\n", "  $vowels =\
    \ ['a', 'e', 'i', 'o', 'u'];\n  $word = str_split(strtolower($word));\n  $vowel_index\
    \ = 0;\n  $vowel_found = false;\n  for ($i = count($word) - 1; $i >= 0; $i--)\
    \ {\n    if (in_array($word[$i], $vowels)) {\n      $vowel_index = $i;\n     \
    \ $vowel_found = true;\n      break;\n    }\n  }\n  if (!$vowel_found) {\n   \
    \ return '';\n  }\n  for ($i = $vowel_index - 1; $i >= 0; $i--) {\n    if (!in_array($word[$i],\
    \ $vowels)) {\n      return $word[$vowel_index];\n    }\n  }\n  return '';\n}\n\
    \necho get_closest_vowel(\"yogurt\") . \"\\n\";\necho get_closest_vowel(\"FULL\"\
    ) . \"\\n\";\necho get_closest_vowel(\"quick\") . \"\\n\";\necho get_closest_vowel(\"\
    ab\") . \"\\n\";", "    $vowels = ['a', 'e', 'i', 'o', 'u'];\n    $word = strrev($word);\n\
    \    $word_length = strlen($word);\n    $vowel_position = -1;\n    for ($i = 0;\
    \ $i < $word_length; $i++) {\n        if (in_array($word[$i], $vowels)) {\n  \
    \          $vowel_position = $i;\n            break;\n        }\n    }\n    if\
    \ ($vowel_position == -1) {\n        return '';\n    }\n    for ($i = $vowel_position\
    \ + 1; $i < $word_length; $i++) {\n        if (!in_array($word[$i], $vowels))\
    \ {\n            return strrev($word[$vowel_position]);\n        }\n    }\n  \
    \  return '';\n}\n", "    $vowels = ['a', 'e', 'i', 'o', 'u'];\n    $word = str_split(strtolower($word));\n\
    \    $word = array_reverse($word);\n    $vowel_index = 0;\n    $consonant_index\
    \ = 0;\n    $vowel_found = false;\n    $consonant_found = false;\n    for ($i\
    \ = 0; $i < count($word); $i++) {\n        if (in_array($word[$i], $vowels)) {\n\
    \            $vowel_index = $i;\n            $vowel_found = true;\n        }\n\
    \        if (!in_array($word[$i], $vowels) && $vowel_found) {\n            $consonant_index\
    \ = $i;\n            $consonant_found = true;\n            break;\n        }\n\
    \    }\n    if ($vowel_found && $consonant_found) {\n        return $word[$vowel_index];\n\
    \    }\n    return '';\n}\n", "\t$vowels = ['a', 'e', 'i', 'o', 'u'];\n\t$word\
    \ = str_split(strtolower($word));\n\t$vowel_index = 0;\n\t$vowel_distance = 0;\n\
    \t$vowel_found = false;\n\tfor ($i = count($word) - 1; $i >= 0; $i--) {\n\t\t\
    if (in_array($word[$i], $vowels)) {\n\t\t\t$vowel_index = $i;\n\t\t\t$vowel_found\
    \ = true;\n\t\t\tbreak;\n\t\t}\n\t}\n\tif ($vowel_found) {\n\t\tfor ($i = $vowel_index\
    \ + 1; $i < count($word); $i++) {\n\t\t\tif (!in_array($word[$i], $vowels)) {\n\
    \t\t\t\t$vowel_distance = $i - $vowel_index;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\
    \t\tfor ($i = $vowel_index - 1; $i >= 0; $i--) {\n\t\t\tif (!in_array($word[$i],\
    \ $vowels)) {\n\t\t\t\tif ($vowel_distance == 0 || $vowel_index - $i < $vowel_distance)\
    \ {\n\t\t\t\t\t$vowel_distance = $vowel_index - $i;\n\t\t\t\t}\n\t\t\t\tbreak;\n\
    \t\t\t}\n\t\t}\n\t\tif ($vowel_distance == 0) {\n\t\t\treturn $word[$vowel_index];\n\
    \t\t}\n\t}\n\treturn '';\n}\n\necho get_closest_vowel(\"yogurt\") . PHP_EOL;\n\
    echo get_closest_vowel(\"FULL\") . PHP_EOL;\necho get_closest_vowel(\"quick\"\
    ) . PHP_EOL;\necho get_closest_vowel(\"ab\") . PHP_EOL;\necho get_closest_", " \
    \   $vowels = array('a', 'e', 'i', 'o', 'u');\n    $word = str_split(strrev($word));\n\
    \    $vowel_index = null;\n    $consonant_index = null;\n    for ($i = 0; $i <\
    \ count($word); $i++) {\n        if (in_array($word[$i], $vowels)) {\n       \
    \     $vowel_index = $i;\n            break;\n        }\n    }\n    if ($vowel_index\
    \ == null) {\n        return '';\n    }\n    for ($i = $vowel_index + 1; $i <\
    \ count($word); $i++) {\n        if (!in_array($word[$i], $vowels)) {\n      \
    \      $consonant_index = $i;\n            break;\n        }\n    }\n    if ($consonant_index\
    \ == null) {\n        return '';\n    }\n    return $word[$vowel_index];\n}\n",
  "    $vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"];\n    $word = str_split(strrev($word));\n\
    \    $vowel_index = 0;\n    $consonant_index = 0;\n    $vowel_found = false;\n\
    \    $consonant_found = false;\n    for ($i = 0; $i < count($word); $i++) {\n\
    \        if (in_array($word[$i], $vowels)) {\n            $vowel_index = $i;\n\
    \            $vowel_found = true;\n        }\n        if (!in_array($word[$i],\
    \ $vowels) && $vowel_found) {\n            $consonant_index = $i;\n          \
    \  $consonant_found = true;\n            break;\n        }\n    }\n    if ($vowel_found\
    \ && $consonant_found) {\n        return $word[$vowel_index];\n    }\n    return\
    \ \"\";\n}\n", "    $vowels = ['a', 'e', 'i', 'o', 'u'];\n    $word = str_split(strtolower($word));\n\
    \    $vowel_index = null;\n    $consonant_index = null;\n    for ($i = count($word)\
    \ - 1; $i >= 0; $i--) {\n        if (in_array($word[$i], $vowels)) {\n       \
    \     $vowel_index = $i;\n            break;\n        }\n    }\n    if ($vowel_index\
    \ === null) {\n        return '';\n    }\n    for ($i = $vowel_index - 1; $i >=\
    \ 0; $i--) {\n        if (!in_array($word[$i], $vowels)) {\n            $consonant_index\
    \ = $i;\n            break;\n        }\n    }\n    if ($consonant_index === null)\
    \ {\n        return '';\n    }\n    return $word[$vowel_index];\n}\n", "    $vowels\
    \ = ['a', 'e', 'i', 'o', 'u'];\n    $word = strrev($word);\n    $vowel = '';\n\
    \    for ($i = 0; $i < strlen($word); $i++) {\n        if (in_array($word[$i],\
    \ $vowels)) {\n            $vowel = $word[$i];\n            break;\n        }\n\
    \    }\n    return strrev($vowel);\n}\n", "    $vowels = ['a', 'e', 'i', 'o',\
    \ 'u'];\n    $word = str_split(strtolower($word));\n    $vowel_index = 0;\n  \
    \  $vowel_distance = 0;\n    $vowel_found = false;\n    for ($i = count($word)\
    \ - 1; $i >= 0; $i--) {\n        if (in_array($word[$i], $vowels)) {\n       \
    \     $vowel_found = true;\n            $vowel_index = $i;\n            break;\n\
    \        }\n    }\n    if ($vowel_found) {\n        for ($i = $vowel_index - 1;\
    \ $i >= 0; $i--) {\n            if (!in_array($word[$i], $vowels)) {\n       \
    \         $vowel_distance = $vowel_index - $i;\n                break;\n     \
    \       }\n        }\n    }\n    return $vowel_distance ? $word[$vowel_index]\
    \ : '';\n}\n", "    $vowels = ['a', 'e', 'i', 'o', 'u'];\n    $word = str_split(strtolower($word));\n\
    \    $vowel_index = null;\n    $consonant_index = null;\n    for ($i = count($word)\
    \ - 1; $i >= 0; $i--) {\n        if (in_array($word[$i], $vowels)) {\n       \
    \     $vowel_index = $i;\n            break;\n        }\n    }\n    if ($vowel_index\
    \ === null) {\n        return '';\n    }\n    for ($i = $vowel_index - 1; $i >=\
    \ 0; $i--) {\n        if (!in_array($word[$i], $vowels)) {\n            $consonant_index\
    \ = $i;\n            break;\n        }\n    }\n    if ($consonant_index === null)\
    \ {\n        return '';\n    }\n    return $word[$vowel_index];\n}\n\nprint_r(get_closest_vowel(\"\
    yogurt\"));\nprint_r(get_closest_vowel(\"FULL\"));\nprint_r(get_closest_vowel(\"\
    quick\"));\nprint_r(get_closest_vowel(\"ab\"));", "    $vowels = ['a', 'e', 'i',\
    \ 'o', 'u'];\n    $word = str_split(strtolower($word));\n    $last_vowel = '';\n\
    \    $last_consonant = '';\n    $result = '';\n    foreach ($word as $letter)\
    \ {\n        if (in_array($letter, $vowels)) {\n            $last_vowel = $letter;\n\
    \        } else {\n            $last_consonant = $letter;\n        }\n       \
    \ if ($last_vowel && $last_consonant) {\n            $result = $last_vowel;\n\
    \            break;\n        }\n    }\n    return $result;\n}\n", "  $vowels =\
    \ ['a', 'e', 'i', 'o', 'u'];\n  $word = str_split(strtolower($word));\n  $closest_vowel\
    \ = '';\n  $closest_vowel_index = 0;\n  $closest_consonant_index = 0;\n  $closest_consonant_index_2\
    \ = 0;\n  $closest_consonant_index_2_found = false;\n  $closest_consonant_index_found\
    \ = false;\n  $closest_vowel_index_found = false;\n  $closest_vowel_index_2_found\
    \ = false;\n  $closest_vowel_index_2 = 0;\n  $closest_vowel_index_3 = 0;\n  $closest_vowel_index_3_found\
    \ = false;\n  $closest_vowel_index_4 = 0;\n  $closest_vowel_index_4_found = false;\n\
    \  $closest_vowel_index_5 = 0;\n  $closest_vowel_index_5_found = false;\n  $closest_vowel_index_6\
    \ = 0;\n  $closest_vowel_index_6_found = false;\n  $closest_vowel_index_7 = 0;\n\
    \  $closest_vowel_index_7_found = false;\n  $closest_vowel_index_8 = 0;\n  $closest_vowel_index_8_found\
    \ = false;\n  $closest_vowel_index_9 = 0;\n  $closest_vowel_index_9_found = false;\n\
    \  $closest_vowel_index_10 = 0;\n  $closest_vowel_index_10_found = false;\n  $closest_vowel_index_11\
    \ = 0;\n  $closest_vowel_index_11_found = false;", "    $vowels = ['a', 'e', 'i',\
    \ 'o', 'u'];\n    $word = strrev($word);\n    $vowel = '';\n    $consonant = '';\n\
    \    for ($i = 0; $i < strlen($word); $i++) {\n        if (in_array($word[$i],\
    \ $vowels)) {\n            $vowel = $word[$i];\n            break;\n        }\n\
    \        $consonant = $word[$i];\n    }\n    if ($vowel && $consonant) {\n   \
    \     return $vowel;\n    }\n    return '';\n}\n", "    $vowels = ['a', 'e', 'i',\
    \ 'o', 'u'];\n    $word = str_split(strtolower($word));\n    $vowel_index = -1;\n\
    \    $consonant_index = -1;\n    for ($i = count($word) - 1; $i >= 0; $i--) {\n\
    \        if (in_array($word[$i], $vowels)) {\n            $vowel_index = $i;\n\
    \            break;\n        }\n    }\n    for ($i = $vowel_index - 1; $i >= 0;\
    \ $i--) {\n        if (!in_array($word[$i], $vowels)) {\n            $consonant_index\
    \ = $i;\n            break;\n        }\n    }\n    if ($vowel_index == -1 || $consonant_index\
    \ == -1) {\n        return '';\n    }\n    return $word[$vowel_index];\n}\n",
  "    $vowels = ['a', 'e', 'i', 'o', 'u'];\n    $word = strrev($word);\n    $vowel_pos\
    \ = [];\n    for ($i = 0; $i < strlen($word); $i++) {\n        if (in_array($word[$i],\
    \ $vowels)) {\n            $vowel_pos[] = $i;\n        }\n    }\n    $vowel_pos\
    \ = array_reverse($vowel_pos);\n    $consonant_pos = [];\n    for ($i = 0; $i\
    \ < strlen($word); $i++) {\n        if (!in_array($word[$i], $vowels)) {\n   \
    \         $consonant_pos[] = $i;\n        }\n    }\n    $consonant_pos = array_reverse($consonant_pos);\n\
    \    $vowel_pos = array_reverse($vowel_pos);\n    $result = [];\n    for ($i =\
    \ 0; $i < count($vowel_pos); $i++) {\n        for ($j = 0; $j < count($consonant_pos);\
    \ $j++) {\n            if ($vowel_pos[$i] < $consonant_pos[$j]) {\n          \
    \      $result[] = $vowel_pos[$i];\n            }\n        }\n    }\n    if (count($result)\
    \ > 0) {\n        $result = min($result);\n        return $word[$result];\n  \
    \  } else {\n        return '';\n    }\n}\n", "    $vowels = ['a', 'e', 'i', 'o',\
    \ 'u'];\n    $consonants = ['b', 'c', 'd', 'f', 'g', 'h', 'j', 'k', 'l', 'm',\
    \ 'n', 'p', 'q', 'r', 's', 't', 'v', 'w', 'x', 'y', 'z'];\n    $word = str_split($word);\n\
    \    $result = '';\n    $index = 0;\n    $distance = 0;\n    $length = count($word);\n\
    \    for ($i = $length - 1; $i > 0; $i--) {\n        if (in_array($word[$i], $vowels)\
    \ && in_array($word[$i - 1], $consonants) && in_array($word[$i + 1], $consonants))\
    \ {\n            $distance = $length - $i;\n            if ($distance > $index)\
    \ {\n                $index = $distance;\n                $result = $word[$i];\n\
    \            }\n        }\n    }\n    return $result;\n}\n", "\t$vowels = ['a',\
    \ 'e', 'i', 'o', 'u'];\n\t$word = str_split(strtolower($word));\n\t$vowel_index\
    \ = null;\n\t$consonant_index = null;\n\t$result = null;\n\tfor ($i = count($word)\
    \ - 1; $i >= 0; $i--) {\n\t\tif (in_array($word[$i], $vowels)) {\n\t\t\t$vowel_index\
    \ = $i;\n\t\t\tbreak;\n\t\t}\n\t}\n\tfor ($i = $vowel_index - 1; $i >= 0; $i--)\
    \ {\n\t\tif (!in_array($word[$i], $vowels)) {\n\t\t\t$consonant_index = $i;\n\t\
    \t\tbreak;\n\t\t}\n\t}\n\tif ($vowel_index !== null && $consonant_index !== null)\
    \ {\n\t\t$result = $word[$vowel_index];\n\t}\n\treturn $result;\n}\n", "    $vowels\
    \ = ['a', 'e', 'i', 'o', 'u'];\n    $word = str_split(strtolower($word));\n  \
    \  $result = '';\n    $last_vowel = '';\n    $last_consonant = '';\n    $last_vowel_index\
    \ = 0;\n    $last_consonant_index = 0;\n    for ($i = count($word) - 1; $i >=\
    \ 0; $i--) {\n        if (in_array($word[$i], $vowels)) {\n            $last_vowel\
    \ = $word[$i];\n            $last_vowel_index = $i;\n            break;\n    \
    \    }\n    }\n    for ($i = $last_vowel_index - 1; $i >= 0; $i--) {\n       \
    \ if (!in_array($word[$i], $vowels)) {\n            $last_consonant = $word[$i];\n\
    \            $last_consonant_index = $i;\n            break;\n        }\n    }\n\
    \    if ($last_vowel && $last_consonant) {\n        $result = $last_vowel;\n \
    \   }\n    return $result;\n}\n", "  $vowels = [\"a\", \"e\", \"i\", \"o\", \"\
    u\"];\n  $word = str_split(strrev($word));\n  $vowel_found = false;\n  $vowel_index\
    \ = 0;\n  for ($i = 0; $i < count($word); $i++) {\n    if (in_array($word[$i],\
    \ $vowels)) {\n      $vowel_found = true;\n      $vowel_index = $i;\n      break;\n\
    \    }\n  }\n  if ($vowel_found) {\n    for ($i = $vowel_index + 1; $i < count($word);\
    \ $i++) {\n      if (!in_array($word[$i], $vowels)) {\n        return $word[$vowel_index];\n\
    \      }\n    }\n  }\n  return \"\";\n}\n\necho get_closest_vowel(\"yogurt\")\
    \ . \"\\n\";\necho get_closest_vowel(\"FULL\") . \"\\n\";\necho get_closest_vowel(\"\
    quick\") . \"\\n\";\necho get_closest_vowel(\"ab\") . \"\\n\";\n", "    $vowels\
    \ = ['a', 'e', 'i', 'o', 'u'];\n    $word = str_split(strtolower($word));\n  \
    \  $vowel_index = null;\n    $consonant_index = null;\n    for ($i = count($word)\
    \ - 1; $i >= 0; $i--) {\n        if (in_array($word[$i], $vowels)) {\n       \
    \     $vowel_index = $i;\n            break;\n        }\n    }\n    if ($vowel_index\
    \ === null) {\n        return '';\n    }\n    for ($i = $vowel_index - 1; $i >=\
    \ 0; $i--) {\n        if (!in_array($word[$i], $vowels)) {\n            $consonant_index\
    \ = $i;\n            break;\n        }\n    }\n    if ($consonant_index === null)\
    \ {\n        return '';\n    }\n    return $word[$vowel_index];\n}\n", "    $vowels\
    \ = \"aeiou\";\n    $vowel_index = -1;\n    $word_length = strlen($word);\n  \
    \  for ($i = $word_length - 1; $i >= 0; $i--) {\n        $char = $word[$i];\n\
    \        $char_index = strpos($vowels, $char);\n        if ($char_index !== false)\
    \ {\n            $vowel_index = $i;\n            break;\n        }\n    }\n  \
    \  if ($vowel_index == -1) {\n        return \"\";\n    }\n    $prev_char = $word[$vowel_index\
    \ - 1];\n    $prev_char_index = strpos($vowels, $prev_char);\n    if ($prev_char_index\
    \ !== false) {\n        return \"\";\n    }\n    $next_char = $word[$vowel_index\
    \ + 1];\n    $next_char_index = strpos($vowels, $next_char);\n    if ($next_char_index\
    \ !== false) {\n        return \"\";\n    }\n    return $word[$vowel_index];\n\
    }\n", "    $vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"];\n    $word = strrev($word);\n\
    \    $vowel_index = -1;\n    for ($i = 0; $i < strlen($word); $i++) {\n      \
    \  if (in_array($word[$i], $vowels)) {\n            $vowel_index = $i;\n     \
    \       break;\n        }\n    }\n    if ($vowel_index == -1) {\n        return\
    \ \"\";\n    }\n    $consonant_index = -1;\n    for ($i = $vowel_index + 1; $i\
    \ < strlen($word); $i++) {\n        if (!in_array($word[$i], $vowels)) {\n   \
    \         $consonant_index = $i;\n            break;\n        }\n    }\n    if\
    \ ($consonant_index == -1) {\n        return \"\";\n    }\n    return $word[$vowel_index];\n\
    }\necho get_closest_vowel(\"yogurt\") . \"\\n\";\necho get_closest_vowel(\"FULL\"\
    ) . \"\\n\";\necho get_closest_vowel(\"quick\") . \"\\n\";\necho get_closest_vowel(\"\
    ab\") . \"\\n\";", "    $vowels = ['a', 'e', 'i', 'o', 'u'];\n    $word = str_split(strtolower($word));\n\
    \    $vowel = '';\n    $i = count($word) - 1;\n    while ($i > 0) {\n        if\
    \ (in_array($word[$i], $vowels)) {\n            $vowel = $word[$i];\n        \
    \    if (!in_array($word[$i - 1], $vowels)) {\n                break;\n      \
    \      }\n        }\n        $i--;\n    }\n    return $vowel;\n}\n", "    $vowels\
    \ = ['a', 'e', 'i', 'o', 'u'];\n    $word = str_split(strtolower($word));\n  \
    \  $vowel = '';\n    $count = 0;\n    for ($i = count($word) - 1; $i >= 0; $i--)\
    \ {\n        if (in_array($word[$i], $vowels)) {\n            $vowel = $word[$i];\n\
    \            $count++;\n        } else {\n            if ($count == 1) {\n   \
    \             return $vowel;\n            } else {\n                $count = 0;\n\
    \            }\n        }\n    }\n    return '';\n}\n", "    $vowels = [\"a\"\
    , \"e\", \"i\", \"o\", \"u\"];\n    $word = str_split(strrev($word));\n    $vowel_pos\
    \ = [];\n    $consonant_pos = [];\n    for ($i = 0; $i < count($word); $i++) {\n\
    \        if (in_array($word[$i], $vowels)) {\n            $vowel_pos[] = $i;\n\
    \        } else {\n            $consonant_pos[] = $i;\n        }\n    }\n    $result\
    \ = [];\n    for ($i = 0; $i < count($vowel_pos); $i++) {\n        for ($j = 0;\
    \ $j < count($consonant_pos); $j++) {\n            if ($vowel_pos[$i] < $consonant_pos[$j])\
    \ {\n                $result[] = $vowel_pos[$i];\n            }\n        }\n \
    \   }\n    if (count($result) == 0) {\n        return \"\";\n    }\n    $min =\
    \ min($result);\n    return $word[$min];\n}\n", "    $vowels = ['a', 'e', 'i',\
    \ 'o', 'u'];\n    $word = strrev($word);\n    $vowel_index = 0;\n    $consonant_index\
    \ = 0;\n    for ($i = 0; $i < strlen($word); $i++) {\n        if (in_array($word[$i],\
    \ $vowels)) {\n            $vowel_index = $i;\n            break;\n        }\n\
    \    }\n    for ($i = $vowel_index + 1; $i < strlen($word); $i++) {\n        if\
    \ (!in_array($word[$i], $vowels)) {\n            $consonant_index = $i;\n    \
    \        break;\n        }\n    }\n    if ($vowel_index == 0 || $consonant_index\
    \ == 0) {\n        return '';\n    }\n    return $word[$vowel_index];\n}\n\necho\
    \ get_closest_vowel(\"yogurt\") . \"\\n\";\necho get_closest_vowel(\"FULL\") .\
    \ \"\\n\";\necho get_closest_vowel(\"quick\") . \"\\n\";\necho get_closest_vowel(\"\
    ab\") . \"\\n\";", "    $vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"];\n    $word\
    \ = str_split(strrev($word));\n    $vowel_index = null;\n    $consonant_index\
    \ = null;\n    for ($i = 0; $i < count($word); $i++) {\n        if (in_array($word[$i],\
    \ $vowels)) {\n            $vowel_index = $i;\n            break;\n        }\n\
    \    }\n    if ($vowel_index === null) {\n        return \"\";\n    }\n    for\
    \ ($i = $vowel_index + 1; $i < count($word); $i++) {\n        if (!in_array($word[$i],\
    \ $vowels)) {\n            $consonant_index = $i;\n            break;\n      \
    \  }\n    }\n    if ($consonant_index === null) {\n        return \"\";\n    }\n\
    \    return $word[$vowel_index];\n}\n", "    $vowels = ['a', 'e', 'i', 'o', 'u'];\n\
    \    $word = str_split(strtolower($word));\n    $vowel_pos = [];\n    $consonant_pos\
    \ = [];\n    foreach ($word as $key => $letter) {\n        if (in_array($letter,\
    \ $vowels)) {\n            $vowel_pos[] = $key;\n        } else {\n          \
    \  $consonant_pos[] = $key;\n        }\n    }\n    $closest_vowel = '';\n    $closest_distance\
    \ = 0;\n    foreach ($vowel_pos as $vowel) {\n        foreach ($consonant_pos\
    \ as $consonant) {\n            if ($vowel > $consonant) {\n                $distance\
    \ = $vowel - $consonant;\n                if ($closest_distance == 0 || $distance\
    \ < $closest_distance) {\n                    $closest_distance = $distance;\n\
    \                    $closest_vowel = $word[$vowel];\n                }\n    \
    \        }\n        }\n    }\n    return $closest_vowel;\n}\n", "    $vowels =\
    \ ['a', 'e', 'i', 'o', 'u'];\n    $word = strrev($word);\n    $vowel_index = 0;\n\
    \    $consonant_index = 0;\n    $vowel_found = false;\n    for ($i = 0; $i < strlen($word);\
    \ $i++) {\n        if (in_array($word[$i], $vowels)) {\n            $vowel_index\
    \ = $i;\n            $vowel_found = true;\n            break;\n        }\n   \
    \ }\n    if (!$vowel_found) {\n        return '';\n    }\n    for ($i = $vowel_index\
    \ + 1; $i < strlen($word); $i++) {\n        if (!in_array($word[$i], $vowels))\
    \ {\n            $consonant_index = $i;\n            break;\n        }\n    }\n\
    \    if ($consonant_index == 0) {\n        return '';\n    }\n    return $word[$vowel_index];\n\
    }\n", "    $vowels = ['a', 'e', 'i', 'o', 'u'];\n    $word = str_split(strtolower($word));\n\
    \    $vowel_index = 0;\n    $vowel_distance = 0;\n    $vowel_found = false;\n\
    \    for ($i = count($word) - 1; $i >= 0; $i--) {\n        if (in_array($word[$i],\
    \ $vowels)) {\n            $vowel_index = $i;\n            $vowel_found = true;\n\
    \            break;\n        }\n    }\n    if ($vowel_found) {\n        for ($i\
    \ = $vowel_index - 1; $i >= 0; $i--) {\n            if (!in_array($word[$i], $vowels))\
    \ {\n                $vowel_distance = $vowel_index - $i;\n                break;\n\
    \            }\n        }\n    }\n    return $vowel_distance ? $word[$vowel_index]\
    \ : '';\n}\n", "    $vowels = ['a', 'e', 'i', 'o', 'u'];\n    $word = str_split(strtolower($word));\n\
    \    $vowel_index = 0;\n    $vowel_distance = 0;\n    $vowel_found = false;\n\
    \    for ($i = count($word) - 1; $i >= 0; $i--) {\n        if (in_array($word[$i],\
    \ $vowels)) {\n            if ($vowel_found) {\n                if ($i - $vowel_index\
    \ > $vowel_distance) {\n                    $vowel_distance = $i - $vowel_index;\n\
    \                    $vowel_index = $i;\n                }\n            } else\
    \ {\n                $vowel_index = $i;\n                $vowel_found = true;\n\
    \            }\n        }\n    }\n    return $vowel_found ? $word[$vowel_index]\
    \ : '';\n}\n", "    $vowels = ['a', 'e', 'i', 'o', 'u'];\n    $word = str_split(strtolower($word));\n\
    \    $vowel_index = 0;\n    $vowel_found = false;\n    for ($i = count($word)\
    \ - 1; $i >= 0; $i--) {\n        if (in_array($word[$i], $vowels)) {\n       \
    \     $vowel_index = $i;\n            $vowel_found = true;\n            break;\n\
    \        }\n    }\n    if (!$vowel_found) {\n        return '';\n    }\n    for\
    \ ($i = $vowel_index - 1; $i >= 0; $i--) {\n        if (!in_array($word[$i], $vowels))\
    \ {\n            return $word[$vowel_index];\n        }\n    }\n    return '';\n\
    }\n", "    $vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"];\n    $word = strrev($word);\n\
    \    $word_length = strlen($word);\n    for ($i = 0; $i < $word_length; $i++)\
    \ {\n        if (in_array($word[$i], $vowels)) {\n            if ($i == 0) {\n\
    \                return \"\";\n            } else if (in_array($word[$i - 1],\
    \ $vowels)) {\n                return \"\";\n            } else {\n          \
    \      return strrev($word[$i]);\n            }\n        }\n    }\n    return\
    \ \"\";\n}\n", "    $vowels = ['a', 'e', 'i', 'o', 'u'];\n    $word = str_split(strtolower($word));\n\
    \    $result = '';\n    for ($i = count($word) - 1; $i >= 0; $i--) {\n       \
    \ if (in_array($word[$i], $vowels)) {\n            if ($i == count($word) - 1)\
    \ {\n                $result = '';\n                break;\n            }\n  \
    \          if (!in_array($word[$i + 1], $vowels)) {\n                $result =\
    \ $word[$i];\n                break;\n            }\n        }\n    }\n    return\
    \ $result;\n}\n", "    $vowels = ['a', 'e', 'i', 'o', 'u'];\n    $word = str_split(strtolower($word));\n\
    \    $vowel = '';\n    for ($i = count($word) - 1; $i >= 0; $i--) {\n        if\
    \ (in_array($word[$i], $vowels)) {\n            $vowel = $word[$i];\n        \
    \    break;\n        }\n    }\n    return $vowel;\n}\n", "    $vowels = ['a',\
    \ 'e', 'i', 'o', 'u'];\n    $word = str_split(strtolower($word));\n    $vowel\
    \ = '';\n    $distance = 0;\n    for ($i = count($word) - 1; $i >= 0; $i--) {\n\
    \        if (in_array($word[$i], $vowels)) {\n            $vowel = $word[$i];\n\
    \            $distance = count($word) - $i;\n            break;\n        }\n \
    \   }\n    for ($i = count($word) - 1; $i >= 0; $i--) {\n        if (in_array($word[$i],\
    \ $vowels)) {\n            if (count($word) - $i < $distance) {\n            \
    \    $vowel = $word[$i];\n                $distance = count($word) - $i;\n   \
    \         }\n        }\n    }\n    return $vowel;\n}\n", "    $vowels = ['a',\
    \ 'e', 'i', 'o', 'u'];\n    $word = str_split(strtolower($word));\n    $vowel_index\
    \ = 0;\n    $vowel_distance = 0;\n    $vowel_found = false;\n    for ($i = count($word)\
    \ - 1; $i >= 0; $i--) {\n        if (in_array($word[$i], $vowels)) {\n       \
    \     if ($vowel_found) {\n                return $word[$vowel_index];\n     \
    \       }\n            $vowel_found = true;\n            $vowel_index = $i;\n\
    \            $vowel_distance = count($word) - $i;\n        } else {\n        \
    \    if ($vowel_found) {\n                $vowel_found = false;\n            }\n\
    \        }\n    }\n    return '';\n}\n", "    $vowels = ['a', 'e', 'i', 'o', 'u'];\n\
    \    $word = str_split(strtolower($word));\n    $vowel_pos = [];\n    $consonant_pos\
    \ = [];\n    for ($i = 0; $i < count($word); $i++) {\n        if (in_array($word[$i],\
    \ $vowels)) {\n            $vowel_pos[] = $i;\n        } else {\n            $consonant_pos[]\
    \ = $i;\n        }\n    }\n    $result = '';\n    for ($i = 0; $i < count($vowel_pos);\
    \ $i++) {\n        for ($j = 0; $j < count($consonant_pos); $j++) {\n        \
    \    if ($vowel_pos[$i] > $consonant_pos[$j]) {\n                $result = $word[$vowel_pos[$i]];\n\
    \                break;\n            }\n        }\n    }\n    return $result;\n\
    }\n", "    $vowels = ['a', 'e', 'i', 'o', 'u'];\n    $word = str_split(strtolower($word));\n\
    \    $vowel = '';\n    $i = count($word) - 1;\n    while ($i >= 0) {\n       \
    \ if (in_array($word[$i], $vowels)) {\n            $vowel = $word[$i];\n     \
    \       break;\n        }\n        $i--;\n    }\n    return $vowel;\n}\n", " \
    \   $vowels = ['a', 'e', 'i', 'o', 'u'];\n    $consonants = ['b', 'c', 'd', 'f',\
    \ 'g', 'h', 'j', 'k', 'l', 'm', 'n', 'p', 'q', 'r', 's', 't', 'v', 'w', 'x', 'y',\
    \ 'z'];\n    $word = str_split($word);\n    $result = '';\n    $prev = '';\n \
    \   $next = '';\n    for ($i = count($word) - 1; $i >= 0; $i--) {\n        if\
    \ (in_array($word[$i], $vowels)) {\n            $result = $word[$i];\n       \
    \     if ($i == 0) {\n                $prev = '';\n            } else {\n    \
    \            $prev = $word[$i - 1];\n            }\n            if ($i == count($word)\
    \ - 1) {\n                $next = '';\n            } else {\n                $next\
    \ = $word[$i + 1];\n            }\n            if (in_array($prev, $consonants)\
    \ && in_array($next, $consonants)) {\n                return $result;\n      \
    \      }\n        }\n    }\n    return $result;\n}\n", "    $vowels = array(\"\
    a\", \"e\", \"i\", \"o\", \"u\");\n    $word = strrev($word);\n    $vowel_index\
    \ = -1;\n    for ($i = 0; $i < strlen($word); $i++) {\n        if (in_array($word[$i],\
    \ $vowels)) {\n            $vowel_index = $i;\n            break;\n        }\n\
    \    }\n    if ($vowel_index == -1) {\n        return \"\";\n    }\n    for ($i\
    \ = $vowel_index + 1; $i < strlen($word); $i++) {\n        if (!in_array($word[$i],\
    \ $vowels)) {\n            return strrev($word[$vowel_index]);\n        }\n  \
    \  }\n    return \"\";\n}\n", "    $vowels = ['a', 'e', 'i', 'o', 'u'];\n    $word\
    \ = str_split(strtolower($word));\n    $vowel_index = 0;\n    $vowel_distance\
    \ = 0;\n    $vowel_found = false;\n    for ($i = count($word) - 1; $i >= 0; $i--)\
    \ {\n        if (in_array($word[$i], $vowels)) {\n            $vowel_index = $i;\n\
    \            $vowel_found = true;\n            break;\n        }\n    }\n    if\
    \ ($vowel_found) {\n        for ($i = $vowel_index + 1; $i < count($word); $i++)\
    \ {\n            if (!in_array($word[$i], $vowels)) {\n                $vowel_distance\
    \ = $i - $vowel_index;\n                break;\n            }\n        }\n   \
    \ }\n    return $vowel_distance > 0 ? $word[$vowel_index] : '';\n}\n", "    $vowels\
    \ = ['a', 'e', 'i', 'o', 'u'];\n    $word = str_split(strtolower($word));\n  \
    \  $result = '';\n    for ($i = count($word) - 1; $i >= 0; $i--) {\n        if\
    \ (in_array($word[$i], $vowels)) {\n            $result = $word[$i];\n       \
    \     break;\n        }\n    }\n    return $result;\n}\n", "    $vowels = ['a',\
    \ 'e', 'i', 'o', 'u'];\n    $word = strrev($word);\n    $vowel = '';\n    $prev\
    \ = '';\n    for ($i = 0; $i < strlen($word); $i++) {\n        if (in_array($word[$i],\
    \ $vowels)) {\n            $vowel = $word[$i];\n            break;\n        }\n\
    \        $prev = $word[$i];\n    }\n    if ($vowel && in_array($prev, $vowels))\
    \ {\n        return '';\n    }\n    return $vowel;\n}\n", "    $vowels = ['a',\
    \ 'e', 'i', 'o', 'u'];\n    $word = str_split(strtolower($word));\n    $vowel_index\
    \ = [];\n    foreach ($word as $key => $value) {\n        if (in_array($value,\
    \ $vowels)) {\n            $vowel_index[] = $key;\n        }\n    }\n    $result\
    \ = [];\n    foreach ($vowel_index as $key => $value) {\n        if ($key == 0)\
    \ {\n            if (in_array($word[$value + 1], $vowels)) {\n               \
    \ $result[] = $value;\n            }\n        } elseif ($key == count($vowel_index)\
    \ - 1) {\n            if (in_array($word[$value - 1], $vowels)) {\n          \
    \      $result[] = $value;\n            }\n        } else {\n            if (in_array($word[$value\
    \ - 1], $vowels) && in_array($word[$value + 1], $vowels)) {\n                $result[]\
    \ = $value;\n            }\n        }\n    }\n    if (count($result) == 0) {\n\
    \        return '';\n    }\n    $min = $result[0];\n    foreach ($result as $key\
    \ => $value) {\n        if ($value < $min) {\n            $min = $value;\n   \
    \     }\n    }\n    return $word[$min];\n}\n", "    $vowels = ['a', 'e', 'i',\
    \ 'o', 'u'];\n    $word = str_split(strtolower($word));\n    $vowel_index = 0;\n\
    \    $vowel_distance = 0;\n    $vowel_distance_temp = 0;\n    for ($i = count($word)\
    \ - 1; $i >= 0; $i--) {\n        if (in_array($word[$i], $vowels)) {\n       \
    \     $vowel_index = $i;\n            break;\n        }\n    }\n    for ($i =\
    \ $vowel_index; $i >= 0; $i--) {\n        if (!in_array($word[$i], $vowels)) {\n\
    \            $vowel_distance_temp++;\n        } else {\n            if ($vowel_distance_temp\
    \ > $vowel_distance) {\n                $vowel_distance = $vowel_distance_temp;\n\
    \            }\n            $vowel_distance_temp = 0;\n        }\n    }\n    if\
    \ ($vowel_distance == 0) {\n        return '';\n    }\n    return $word[$vowel_index];\n\
    }\necho get_closest_vowel(\"yogurt\") . \"\\n\";\necho get_closest_vowel(\"FULL\"\
    ) . \"\\n\";\necho get_closest_vowel(\"quick\") . \"\\n\";\necho get_closest_vowel(\"\
    ab\") . \"\\n\";", "    $vowels = ['a', 'e', 'i', 'o', 'u'];\n    $word = str_split(strtolower($word));\n\
    \    $vowel_index = 0;\n    $vowel_distance = 0;\n    for ($i = count($word) -\
    \ 1; $i >= 0; $i--) {\n        if (in_array($word[$i], $vowels)) {\n         \
    \   $vowel_index = $i;\n            break;\n        }\n    }\n    for ($i = $vowel_index\
    \ - 1; $i >= 0; $i--) {\n        if (!in_array($word[$i], $vowels)) {\n      \
    \      $vowel_distance = $vowel_index - $i;\n            break;\n        }\n \
    \   }\n    if ($vowel_distance == 0) {\n        return '';\n    }\n    return\
    \ $word[$vowel_index];\n}\n", "    $vowels = ['a', 'e', 'i', 'o', 'u'];\n    $word\
    \ = strrev($word);\n    $vowel = '';\n    for ($i = 0; $i < strlen($word); $i++)\
    \ {\n        if (in_array($word[$i], $vowels)) {\n            $vowel = $word[$i];\n\
    \            break;\n        }\n    }\n    if ($vowel == '') {\n        return\
    \ $vowel;\n    }\n    for ($i = 0; $i < strlen($word); $i++) {\n        if (!in_array($word[$i],\
    \ $vowels)) {\n            return $vowel;\n        }\n    }\n}\necho get_closest_vowel(\"\
    yogurt\") . \"\\n\";\necho get_closest_vowel(\"FULL\") . \"\\n\";\necho get_closest_vowel(\"\
    quick\") . \"\\n\";\necho get_closest_vowel(\"ab\") . \"\\n\";", "    $vowels\
    \ = ['a', 'e', 'i', 'o', 'u'];\n    $word = strrev($word);\n    $vowel_index =\
    \ 0;\n    $consonant_index = 0;\n    $vowel_found = false;\n    for ($i = 0; $i\
    \ < strlen($word); $i++) {\n        if (in_array($word[$i], $vowels)) {\n    \
    \        $vowel_index = $i;\n            $vowel_found = true;\n            break;\n\
    \        }\n    }\n    if (!$vowel_found) {\n        return '';\n    }\n    for\
    \ ($i = $vowel_index + 1; $i < strlen($word); $i++) {\n        if (!in_array($word[$i],\
    \ $vowels)) {\n            $consonant_index = $i;\n            break;\n      \
    \  }\n    }\n    if ($consonant_index == 0) {\n        return '';\n    }\n   \
    \ return $word[$vowel_index];\n}\n\necho get_closest_vowel(\"yogurt\") . \"\\\
    n\";\necho get_closest_vowel(\"FULL\") . \"\\n\";\necho get_closest_vowel(\"quick\"\
    ) . \"\\n\";\necho get_closest_vowel(\"ab\") . \"\\n\";", "    $vowels = ['a',\
    \ 'e', 'i', 'o', 'u'];\n    $word = strrev($word);\n    $word_length = strlen($word);\n\
    \    $vowel_index = 0;\n    $consonant_index = 0;\n    for ($i = 0; $i < $word_length;\
    \ $i++) {\n        if (in_array($word[$i], $vowels)) {\n            $vowel_index\
    \ = $i;\n            break;\n        }\n    }\n    for ($i = $vowel_index + 1;\
    \ $i < $word_length; $i++) {\n        if (!in_array($word[$i], $vowels)) {\n \
    \           $consonant_index = $i;\n            break;\n        }\n    }\n   \
    \ if ($vowel_index == 0 || $consonant_index == 0) {\n        return '';\n    }\n\
    \    return $word[$vowel_index];\n}\n", "  $vowels = [\"a\", \"e\", \"i\", \"\
    o\", \"u\"];\n  $word = str_split(strrev($word));\n  $result = \"\";\n  $i = 0;\n\
    \  while($i < count($word)) {\n    if(in_array($word[$i], $vowels)) {\n      $result\
    \ = $word[$i];\n      $i++;\n      break;\n    }\n    $i++;\n  }\n  while($i <\
    \ count($word)) {\n    if(!in_array($word[$i], $vowels)) {\n      return $result;\n\
    \    }\n    $i++;\n  }\n  return \"\";\n}\n", "    $vowels = [\"a\", \"e\", \"\
    i\", \"o\", \"u\"];\n    $word = strrev($word);\n    $vowel_position = 0;\n  \
    \  $vowel_found = false;\n    for ($i = 0; $i < strlen($word); $i++) {\n     \
    \   if (in_array($word[$i], $vowels)) {\n            $vowel_position = $i;\n \
    \           $vowel_found = true;\n            break;\n        }\n    }\n    if\
    \ ($vowel_found) {\n        for ($i = $vowel_position + 1; $i < strlen($word);\
    \ $i++) {\n            if (!in_array($word[$i], $vowels)) {\n                return\
    \ strrev($word[$vowel_position]);\n            }\n        }\n    }\n    return\
    \ \"\";\n}\n", "  $vowels = ['a', 'e', 'i', 'o', 'u'];\n  $word = strrev($word);\n\
    \  for ($i = 0; $i < strlen($word); $i++) {\n    if (in_array($word[$i], $vowels))\
    \ {\n      if ($i + 1 < strlen($word) && !in_array($word[$i + 1], $vowels)) {\n\
    \        return strrev($word[$i]);\n      }\n    }\n  }\n  return '';\n}\n", " \
    \   $vowels = ['a', 'e', 'i', 'o', 'u'];\n    $word = str_split(strtolower($word));\n\
    \    $vowel_index = 0;\n    $vowel_distance = 0;\n    for ($i = count($word) -\
    \ 1; $i >= 0; $i--) {\n        if (in_array($word[$i], $vowels)) {\n         \
    \   $vowel_index = $i;\n            break;\n        }\n    }\n    for ($i = $vowel_index;\
    \ $i >= 0; $i--) {\n        if (!in_array($word[$i], $vowels)) {\n           \
    \ $vowel_distance = $vowel_index - $i;\n            break;\n        }\n    }\n\
    \    if ($vowel_distance == 0) {\n        return '';\n    }\n    return $word[$vowel_index];\n\
    }\n", "    $vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"];\n    $word = str_split(strrev($word));\n\
    \    $vowel_index = -1;\n    $consonant_index = -1;\n    for ($i = 0; $i < count($word);\
    \ $i++) {\n        if (in_array($word[$i], $vowels)) {\n            $vowel_index\
    \ = $i;\n            break;\n        }\n    }\n    if ($vowel_index == -1) {\n\
    \        return \"\";\n    }\n    for ($i = $vowel_index + 1; $i < count($word);\
    \ $i++) {\n        if (!in_array($word[$i], $vowels)) {\n            $consonant_index\
    \ = $i;\n            break;\n        }\n    }\n    if ($consonant_index == -1)\
    \ {\n        return \"\";\n    }\n    return $word[$vowel_index];\n}\n", "   \
    \ $vowels = ['a', 'e', 'i', 'o', 'u'];\n    $word = str_split(strtolower($word));\n\
    \    $result = '';\n    for ($i = count($word) - 1; $i >= 0; $i--) {\n       \
    \ if (in_array($word[$i], $vowels)) {\n            $result = $word[$i];\n    \
    \        break;\n        }\n    }\n    return $result;\n}\n", "    $vowels = ['a',\
    \ 'e', 'i', 'o', 'u'];\n    $word = strrev($word);\n    $vowel = '';\n    for\
    \ ($i = 0; $i < strlen($word); $i++) {\n        if (in_array($word[$i], $vowels))\
    \ {\n            $vowel = $word[$i];\n            break;\n        }\n    }\n \
    \   return $vowel;\n}\n", "  $vowels = ['a', 'e', 'i', 'o', 'u'];\n  $consonants\
    \ = ['b', 'c', 'd', 'f', 'g', 'h', 'j', 'k', 'l', 'm', 'n', 'p', 'q', 'r', 's',\
    \ 't', 'v', 'w', 'x', 'y', 'z'];\n  $word = strtolower($word);\n  $word_arr =\
    \ str_split($word);\n  $vowel_index = 0;\n  $consonant_index = 0;\n  $vowel_found\
    \ = false;\n  $consonant_found = false;\n  $result = '';\n  for ($i = count($word_arr)\
    \ - 1; $i >= 0; $i--) {\n    if ($vowel_found && $consonant_found) {\n      break;\n\
    \    }\n    if (in_array($word_arr[$i], $vowels)) {\n      $vowel_index = $i;\n\
    \      $vowel_found = true;\n    }\n    if (in_array($word_arr[$i], $consonants))\
    \ {\n      $consonant_index = $i;\n      $consonant_found = true;\n    }\n  }\n\
    \  if ($vowel_found && $consonant_found) {\n    $result = $word_arr[$vowel_index];\n\
    \  }\n  return $result;\n}\n", "    $vowels = ['a', 'e', 'i', 'o', 'u'];\n   \
    \ $word = strrev($word);\n    $vowel_index = 0;\n    $consonant_index = 0;\n \
    \   $vowel_found = false;\n    $consonant_found = false;\n    for ($i = 0; $i\
    \ < strlen($word); $i++) {\n        if (in_array($word[$i], $vowels)) {\n    \
    \        $vowel_index = $i;\n            $vowel_found = true;\n            break;\n\
    \        }\n    }\n    for ($i = $vowel_index + 1; $i < strlen($word); $i++) {\n\
    \        if (!in_array($word[$i], $vowels)) {\n            $consonant_index =\
    \ $i;\n            $consonant_found = true;\n            break;\n        }\n \
    \   }\n    if ($vowel_found && $consonant_found) {\n        return $word[$vowel_index];\n\
    \    }\n    return '';\n}\n", "  $vowels = ['a', 'e', 'i', 'o', 'u'];\n  $word\
    \ = strrev($word);\n  $vowel_index = 0;\n  $consonant_index = 0;\n  for ($i =\
    \ 0; $i < strlen($word); $i++) {\n    if (in_array($word[$i], $vowels)) {\n  \
    \    $vowel_index = $i;\n      break;\n    }\n  }\n  for ($i = $vowel_index +\
    \ 1; $i < strlen($word); $i++) {\n    if (!in_array($word[$i], $vowels)) {\n \
    \     $consonant_index = $i;\n      break;\n    }\n  }\n  return $consonant_index\
    \ - $vowel_index == 1 ? strrev($word[$vowel_index]) : '';\n}\n", "  $vowels =\
    \ ['a', 'e', 'i', 'o', 'u'];\n  $word = str_split(strtolower($word));\n  $vowel_index\
    \ = [];\n  $consonant_index = [];\n  foreach ($word as $key => $value) {\n   \
    \ if (in_array($value, $vowels)) {\n      $vowel_index[] = $key;\n    } else {\n\
    \      $consonant_index[] = $key;\n    }\n  }\n  $result = [];\n  foreach ($vowel_index\
    \ as $key => $value) {\n    if (isset($consonant_index[$key+1])) {\n      if ($value\
    \ < $consonant_index[$key+1]) {\n        $result[] = $value;\n      }\n    }\n\
    \  }\n  if (empty($result)) {\n    return '';\n  }\n  $result = max($result);\n\
    \  return $word[$result];\n}\necho get_closest_vowel(\"yogurt\") . \"\\n\";\n\
    echo get_closest_vowel(\"FULL\") . \"\\n\";\necho get_closest_vowel(\"quick\"\
    ) . \"\\n\";\necho get_closest_vowel(\"ab\") . \"\\n\";", "    $vowels = ['a',\
    \ 'e', 'i', 'o', 'u'];\n    $word = str_split(strrev($word));\n    $vowel = '';\n\
    \    $consonant = '';\n    foreach ($word as $key => $value) {\n        if (in_array($value,\
    \ $vowels)) {\n            $vowel = $value;\n            if ($consonant) {\n \
    \               return $vowel;\n            }\n        } else {\n            $consonant\
    \ = $value;\n            if ($vowel) {\n                return $vowel;\n     \
    \       }\n        }\n    }\n    return '';\n}\n", "    $vowels = array(\"a\"\
    , \"e\", \"i\", \"o\", \"u\");\n    $word = strrev($word);\n    $word_len = strlen($word);\n\
    \    $vowel_pos = -1;\n    for ($i = 0; $i < $word_len; $i++) {\n        if (in_array($word[$i],\
    \ $vowels)) {\n            $vowel_pos = $i;\n            break;\n        }\n \
    \   }\n    if ($vowel_pos == -1) {\n        return \"\";\n    }\n    for ($i =\
    \ $vowel_pos + 1; $i < $word_len; $i++) {\n        if (!in_array($word[$i], $vowels))\
    \ {\n            return $word[$vowel_pos];\n        }\n    }\n    return \"\"\
    ;\n}\n", "    $vowels = ['a', 'e', 'i', 'o', 'u'];\n    $word = str_split(strtolower($word));\n\
    \    $vowel_index = 0;\n    $vowel_distance = 0;\n    $vowel_found = false;\n\
    \    for ($i = count($word) - 1; $i >= 0; $i--) {\n        if (in_array($word[$i],\
    \ $vowels)) {\n            $vowel_index = $i;\n            $vowel_found = true;\n\
    \            break;\n        }\n    }\n    if ($vowel_found) {\n        for ($i\
    \ = $vowel_index - 1; $i >= 0; $i--) {\n            if (!in_array($word[$i], $vowels))\
    \ {\n                $vowel_distance = $vowel_index - $i;\n                break;\n\
    \            }\n        }\n    }\n    return $vowel_distance ? $word[$vowel_index]\
    \ : '';\n}\n", "    $vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"];\n    $word\
    \ = str_split(strrev($word));\n    $vowel_index = 0;\n    $consonant_index = 0;\n\
    \    $vowel_found = false;\n    $consonant_found = false;\n    for ($i = 0; $i\
    \ < count($word); $i++) {\n        if (in_array($word[$i], $vowels)) {\n     \
    \       $vowel_index = $i;\n            $vowel_found = true;\n        } else {\n\
    \            $consonant_index = $i;\n            $consonant_found = true;\n  \
    \      }\n        if ($vowel_found && $consonant_found) {\n            break;\n\
    \        }\n    }\n    if ($vowel_found && $consonant_found) {\n        return\
    \ $word[$vowel_index];\n    } else {\n        return \"\";\n    }\n}\n", "   \
    \ $vowels = ['a', 'e', 'i', 'o', 'u'];\n    $word = strrev($word);\n    $vowel_index\
    \ = -1;\n    for ($i = 0; $i < strlen($word); $i++) {\n        if (in_array($word[$i],\
    \ $vowels)) {\n            $vowel_index = $i;\n            break;\n        }\n\
    \    }\n    if ($vowel_index == -1) {\n        return '';\n    }\n    for ($i\
    \ = $vowel_index + 1; $i < strlen($word); $i++) {\n        if (!in_array($word[$i],\
    \ $vowels)) {\n            return $word[$i - 1];\n        }\n    }\n    return\
    \ '';\n}\n", "    $vowels = array('a', 'e', 'i', 'o', 'u');\n    $word = strrev($word);\n\
    \    $vowel_index = 0;\n    for ($i = 0; $i < strlen($word); $i++) {\n       \
    \ if (in_array($word[$i], $vowels)) {\n            $vowel_index = $i;\n      \
    \      break;\n        }\n    }\n    $consonant_index = 0;\n    for ($i = $vowel_index\
    \ + 1; $i < strlen($word); $i++) {\n        if (!in_array($word[$i], $vowels))\
    \ {\n            $consonant_index = $i;\n            break;\n        }\n    }\n\
    \    if ($consonant_index == 0) {\n        return '';\n    }\n    return $word[$vowel_index];\n\
    }\n", "    $vowels = ['a', 'e', 'i', 'o', 'u'];\n    $word = strrev($word);\n\
    \    $word_arr = str_split($word);\n    $vowel_index = 0;\n    $vowel_found =\
    \ false;\n    for ($i = 0; $i < count($word_arr); $i++) {\n        if (in_array($word_arr[$i],\
    \ $vowels)) {\n            $vowel_index = $i;\n            $vowel_found = true;\n\
    \            break;\n        }\n    }\n    if ($vowel_found) {\n        $consonant_found\
    \ = false;\n        for ($i = $vowel_index + 1; $i < count($word_arr); $i++) {\n\
    \            if (!in_array($word_arr[$i], $vowels)) {\n                $consonant_found\
    \ = true;\n                break;\n            }\n        }\n        if ($consonant_found)\
    \ {\n            return $word_arr[$vowel_index];\n        }\n    }\n    return\
    \ '';\n}\n", "  $vowels = ['a', 'e', 'i', 'o', 'u'];\n  $word = str_split(strtolower($word));\n\
    \  $vowel_index = [];\n  $consonant_index = [];\n  foreach ($word as $index =>\
    \ $letter) {\n    if (in_array($letter, $vowels)) {\n      $vowel_index[] = $index;\n\
    \    } else {\n      $consonant_index[] = $index;\n    }\n  }\n  $result = [];\n\
    \  foreach ($vowel_index as $vowel) {\n    foreach ($consonant_index as $consonant)\
    \ {\n      if ($vowel < $consonant) {\n        $result[] = $vowel;\n      }\n\
    \    }\n  }\n  if (empty($result)) {\n    return '';\n  }\n  $result = array_unique($result);\n\
    \  $result = array_values($result);\n  return $word[$result[count($result) - 1]];\n\
    }\n", "    $vowels = ['a', 'e', 'i', 'o', 'u'];\n    $word = str_split(strtolower($word));\n\
    \    $result = '';\n    $min = strlen($word);\n    for ($i = 0; $i < count($word);\
    \ $i++) {\n        if (in_array($word[$i], $vowels)) {\n            if ($i > 0\
    \ && $i < count($word) - 1) {\n                if (!in_array($word[$i - 1], $vowels)\
    \ && !in_array($word[$i + 1], $vowels)) {\n                    if ($i < $min)\
    \ {\n                        $min = $i;\n                        $result = $word[$i];\n\
    \                    }\n                }\n            }\n        }\n    }\n \
    \   return $result;\n}\n\necho get_closest_vowel(\"yogurt\") . \"<br>\";\necho\
    \ get_closest_vowel(\"FULL\") . \"<br>\";\necho get_closest_vowel(\"quick\") .\
    \ \"<br>\";\necho get_closest_vowel(\"ab\") . \"<br>\";\n", "    $vowels = ['a',\
    \ 'e', 'i', 'o', 'u'];\n    $word = str_split(strtolower($word));\n    $vowel_index\
    \ = 0;\n    $vowel_distance = 0;\n    $vowel_found = false;\n    for ($i = count($word)\
    \ - 1; $i >= 0; $i--) {\n        if (in_array($word[$i], $vowels)) {\n       \
    \     $vowel_index = $i;\n            $vowel_found = true;\n            break;\n\
    \        }\n    }\n    if ($vowel_found) {\n        for ($i = $vowel_index + 1;\
    \ $i < count($word); $i++) {\n            if (!in_array($word[$i], $vowels)) {\n\
    \                $vowel_distance = $i - $vowel_index;\n                break;\n\
    \            }\n        }\n    }\n    return $vowel_distance ? $word[$vowel_index]\
    \ : '';\n}\n", "    $vowels = ['a', 'e', 'i', 'o', 'u'];\n    $word = str_split(strtolower($word));\n\
    \    $vowel_index = 0;\n    $consonant_index = 0;\n    $vowel_found = false;\n\
    \    $consonant_found = false;\n    $vowel_index_found = 0;\n    $consonant_index_found\
    \ = 0;\n    $vowel_found_first = false;\n    $consonant_found_first = false;\n\
    \    $vowel_index_found_first = 0;\n    $consonant_index_found_first = 0;\n  \
    \  $vowel_found_second = false;\n    $consonant_found_second = false;\n    $vowel_index_found_second\
    \ = 0;\n    $consonant_index_found_second = 0;\n    foreach ($word as $key =>\
    \ $value) {\n        if (in_array($value, $vowels)) {\n            $vowel_found\
    \ = true;\n            $vowel_index_found = $key;\n            if (!$vowel_found_first)\
    \ {\n                $vowel_found_first = true;\n                $vowel_index_found_first\
    \ = $key;\n            } elseif (!$vowel_found_second) {\n                $vowel_found_second\
    \ = true;\n                $vowel_index_found_second = $key;\n            }\n\
    \        } else {\n            $consonant_found = true;\n            $consonant_index_found\
    \ = $key;\n            if (!$consonant_found_first) {\n                $consonant_found_first\
    \ = true;\n                $consonant_index_found_first = $key;\n            }\
    \ elseif (!$consonant_found_second) {\n                $consonant_found_second\
    \ = true;\n                $consonant_index_found_second = $key;\n           \
    \ }\n        }\n    }\n    if ($vowel_found && $consonant_found) {", "    $vowels\
    \ = ['a', 'e', 'i', 'o', 'u'];\n    $consonants = ['b', 'c', 'd', 'f', 'g', 'h',\
    \ 'j', 'k', 'l', 'm', 'n', 'p', 'q', 'r', 's', 't', 'v', 'w', 'x', 'y', 'z'];\n\
    \    $word = str_split($word);\n    $vowel_index = 0;\n    $consonant_index =\
    \ 0;\n    for ($i = count($word) - 1; $i >= 0; $i--) {\n        if (in_array($word[$i],\
    \ $vowels)) {\n            $vowel_index = $i;\n            break;\n        }\n\
    \    }\n    for ($i = $vowel_index - 1; $i >= 0; $i--) {\n        if (in_array($word[$i],\
    \ $consonants)) {\n            $consonant_index = $i;\n            break;\n  \
    \      }\n    }\n    if ($vowel_index == 0 || $consonant_index == 0) {\n     \
    \   return '';\n    }\n    return $word[$vowel_index];\n}\necho get_closest_vowel(\"\
    yogurt\") . \"\\n\";\necho get_closest_vowel(\"FULL\") . \"\\n\";\necho get_closest_vowel(\"\
    quick\") . \"\\n\";\necho get_closest_vowel(\"ab\") . \"\\n\";", "    $vowels\
    \ = ['a', 'e', 'i', 'o', 'u'];\n    $word = strrev($word);\n    $vowel_index =\
    \ -1;\n    for ($i = 0; $i < strlen($word); $i++) {\n        if (in_array($word[$i],\
    \ $vowels)) {\n            $vowel_index = $i;\n            break;\n        }\n\
    \    }\n    if ($vowel_index == -1) {\n        return '';\n    }\n    for ($i\
    \ = $vowel_index + 1; $i < strlen($word); $i++) {\n        if (!in_array($word[$i],\
    \ $vowels)) {\n            return $word[$vowel_index];\n        }\n    }\n   \
    \ return '';\n}\n", "    $vowels = ['a', 'e', 'i', 'o', 'u'];\n    $word = str_split(strtolower($word));\n\
    \    $vowel_pos = [];\n    $consonant_pos = [];\n    for ($i = 0; $i < count($word);\
    \ $i++) {\n        if (in_array($word[$i], $vowels)) {\n            $vowel_pos[]\
    \ = $i;\n        } else {\n            $consonant_pos[] = $i;\n        }\n   \
    \ }\n    $result = '';\n    for ($i = 0; $i < count($vowel_pos); $i++) {\n   \
    \     if ($vowel_pos[$i] > $consonant_pos[count($consonant_pos) - 1]) {\n    \
    \        $result = $word[$vowel_pos[$i]];\n            break;\n        }\n   \
    \ }\n    return $result;\n}\n\necho get_closest_vowel(\"yogurt\") . \"\\n\";\n\
    echo get_closest_vowel(\"FULL\") . \"\\n\";\necho get_closest_vowel(\"quick\"\
    ) . \"\\n\";\necho get_closest_vowel(\"ab\") . \"\\n\";", "    $vowels = [\"a\"\
    , \"e\", \"i\", \"o\", \"u\"];\n    $word = strrev($word);\n    $word_length =\
    \ strlen($word);\n    for ($i = 0; $i < $word_length; $i++) {\n        if (in_array($word[$i],\
    \ $vowels)) {\n            if ($i + 1 < $word_length && !in_array($word[$i + 1],\
    \ $vowels)) {\n                return strrev($word[$i]);\n            }\n    \
    \    }\n    }\n    return \"\";\n}\n", "    $vowels = ['a', 'e', 'i', 'o', 'u'];\n\
    \    $word = strrev($word);\n    $word_len = strlen($word);\n    $vowel_pos =\
    \ [];\n    for ($i = 0; $i < $word_len; $i++) {\n        if (in_array($word[$i],\
    \ $vowels)) {\n            $vowel_pos[] = $i;\n        }\n    }\n    $vowel_pos_len\
    \ = count($vowel_pos);\n    if ($vowel_pos_len == 0) {\n        return '';\n \
    \   }\n    $vowel_pos = array_reverse($vowel_pos);\n    $vowel_pos[] = $word_len;\n\
    \    $vowel_pos[] = -1;\n    $vowel_pos = array_unique($vowel_pos);\n    $vowel_pos\
    \ = array_values($vowel_pos);\n    $vowel_pos_len = count($vowel_pos);\n    $min_diff\
    \ = $word_len;\n    $min_diff_pos = -1;\n    for ($i = 0; $i < $vowel_pos_len\
    \ - 1; $i++) {\n        $diff = $vowel_pos[$i] - $vowel_pos[$i + 1];\n       \
    \ if ($diff > 1 && $diff < $min_diff) {\n            $min_diff = $diff;\n    \
    \        $min_diff_pos = $i;\n        }\n    }\n    if ($min_diff_pos == -1) {\n\
    \        return '';\n    }\n    return $word[$vowel_pos[$min_diff_pos]];\n}\n",
  "    $vowels = array(\"a\", \"e\", \"i\", \"o\", \"u\");\n    $word = strrev($word);\n\
    \    $last_vowel = \"\";\n    $last_consonant = \"\";\n    for ($i = 0; $i < strlen($word);\
    \ $i++) {\n        if (in_array($word[$i], $vowels)) {\n            $last_vowel\
    \ = $word[$i];\n            if ($last_consonant != \"\") {\n                return\
    \ $last_vowel;\n            }\n        } else {\n            $last_consonant =\
    \ $word[$i];\n        }\n    }\n    return \"\";\n}\n", "    $vowels = [\"a\"\
    , \"e\", \"i\", \"o\", \"u\"];\n    $consonants = [\"b\", \"c\", \"d\", \"f\"\
    , \"g\", \"h\", \"j\", \"k\", \"l\", \"m\", \"n\", \"p\", \"q\", \"r\", \"s\"\
    , \"t\", \"v\", \"w\", \"x\", \"y\", \"z\"];\n    $word = str_split($word);\n\
    \    $vowel_index = 0;\n    $consonant_index = 0;\n    $vowel_found = false;\n\
    \    $consonant_found = false;\n    for ($i = count($word) - 1; $i >= 0; $i--)\
    \ {\n        if (in_array($word[$i], $vowels)) {\n            $vowel_index = $i;\n\
    \            $vowel_found = true;\n        }\n        if (in_array($word[$i],\
    \ $consonants)) {\n            $consonant_index = $i;\n            $consonant_found\
    \ = true;\n        }\n        if ($vowel_found && $consonant_found) {\n      \
    \      if ($vowel_index > $consonant_index) {\n                return $word[$vowel_index];\n\
    \            }\n        }\n    }\n    return \"\";\n}\n", "    $vowels = ['a',\
    \ 'e', 'i', 'o', 'u'];\n    $word = str_split(strtolower($word));\n    $vowel_index\
    \ = null;\n    $consonant_index = null;\n    for ($i = count($word) - 1; $i >=\
    \ 0; $i--) {\n        if (in_array($word[$i], $vowels)) {\n            $vowel_index\
    \ = $i;\n            break;\n        }\n    }\n    if ($vowel_index === null)\
    \ {\n        return '';\n    }\n    for ($i = $vowel_index - 1; $i >= 0; $i--)\
    \ {\n        if (!in_array($word[$i], $vowels)) {\n            $consonant_index\
    \ = $i;\n            break;\n        }\n    }\n    if ($consonant_index === null)\
    \ {\n        return '';\n    }\n    return $word[$vowel_index];\n}\n", "    $vowels\
    \ = ['a', 'e', 'i', 'o', 'u'];\n    $word = str_split(strtolower($word));\n  \
    \  $vowel = '';\n    for ($i = count($word) - 1; $i >= 0; $i--) {\n        if\
    \ (in_array($word[$i], $vowels)) {\n            $vowel = $word[$i];\n        \
    \    break;\n        }\n    }\n    return $vowel;\n}\n\necho get_closest_vowel(\"\
    yogurt\");\necho get_closest_vowel(\"FULL\");\necho get_closest_vowel(\"quick\"\
    );\necho get_closest_vowel(\"ab\");", "    $vowels = ['a', 'e', 'i', 'o', 'u'];\n\
    \    $word = str_split(strtolower($word));\n    $vowel_index = 0;\n    $vowel_distance\
    \ = 0;\n    for ($i = count($word) - 1; $i >= 0; $i--) {\n        if (in_array($word[$i],\
    \ $vowels)) {\n            $vowel_index = $i;\n            break;\n        }\n\
    \    }\n    for ($i = $vowel_index; $i < count($word); $i++) {\n        if (!in_array($word[$i],\
    \ $vowels)) {\n            $vowel_distance = $i - $vowel_index;\n            break;\n\
    \        }\n    }\n    return $vowel_distance > 0 ? $word[$vowel_index] : '';\n\
    }\n", "    $vowels = ['a', 'e', 'i', 'o', 'u'];\n    $consonants = ['b', 'c',\
    \ 'd', 'f', 'g', 'h', 'j', 'k', 'l', 'm', 'n', 'p', 'q', 'r', 's', 't', 'v', 'w',\
    \ 'x', 'y', 'z'];\n    $word = str_split($word);\n    $vowel_pos = [];\n    $consonant_pos\
    \ = [];\n    for ($i = 0; $i < count($word); $i++) {\n        if (in_array($word[$i],\
    \ $vowels)) {\n            $vowel_pos[] = $i;\n        } else if (in_array($word[$i],\
    \ $consonants)) {\n            $consonant_pos[] = $i;\n        }\n    }\n    $result\
    \ = [];\n    for ($i = 0; $i < count($vowel_pos); $i++) {\n        for ($j = 0;\
    \ $j < count($consonant_pos); $j++) {\n            if ($vowel_pos[$i] > $consonant_pos[$j])\
    \ {\n                $result[] = $vowel_pos[$i] - $consonant_pos[$j];\n      \
    \      }\n        }\n    }\n    if (count($result) == 0) {\n        return '';\n\
    \    }\n    $min = min($result);\n    $key = array_search($min, $result);\n  \
    \  return $word[$vowel_pos[$key]];\n}\n", "    $vowels = ['a', 'e', 'i', 'o',\
    \ 'u'];\n    $word = str_split(strtolower($word));\n    $vowel_index = -1;\n \
    \   for ($i = count($word) - 1; $i >= 0; $i--) {\n        if (in_array($word[$i],\
    \ $vowels)) {\n            $vowel_index = $i;\n            break;\n        }\n\
    \    }\n    if ($vowel_index == -1) {\n        return '';\n    }\n    for ($i\
    \ = $vowel_index - 1; $i >= 0; $i--) {\n        if (!in_array($word[$i], $vowels))\
    \ {\n            return $word[$vowel_index];\n        }\n    }\n    return '';\n\
    }\necho get_closest_vowel(\"yogurt\");\necho get_closest_vowel(\"FULL\");\necho\
    \ get_closest_vowel(\"quick\");\necho get_closest_vowel(\"ab\");", "    $vowels\
    \ = ['a', 'e', 'i', 'o', 'u'];\n    $word = strrev($word);\n    $word_arr = str_split($word);\n\
    \    $vowel_index = 0;\n    $vowel_found = false;\n    $vowel_position = 0;\n\
    \    $vowel_position_arr = [];\n    foreach ($word_arr as $key => $char) {\n \
    \       if (in_array($char, $vowels)) {\n            $vowel_found = true;\n  \
    \          $vowel_position = $key;\n            $vowel_position_arr[] = $key;\n\
    \        }\n        if ($vowel_found && !in_array($char, $vowels)) {\n       \
    \     $vowel_index = $key - 1;\n            break;\n        }\n    }\n    if (!$vowel_found)\
    \ {\n        return '';\n    }\n    if (count($vowel_position_arr) == 1) {\n \
    \       return $word_arr[$vowel_position];\n    }\n    $vowel_position_arr = array_reverse($vowel_position_arr);\n\
    \    $closest_vowel_position = 0;\n    foreach ($vowel_position_arr as $key =>\
    \ $position) {\n        if ($position < $vowel_index) {\n            $closest_vowel_position\
    \ = $position;\n            break;\n        }\n    }\n    return $word_arr[$closest_vowel_position];\n\
    }\n", "  $vowels = ['a', 'e', 'i', 'o', 'u'];\n  $word = strrev($word);\n  $vowel_index\
    \ = -1;\n  for ($i = 0; $i < strlen($word); $i++) {\n    if (in_array($word[$i],\
    \ $vowels)) {\n      $vowel_index = $i;\n      break;\n    }\n  }\n  if ($vowel_index\
    \ == -1) {\n    return '';\n  }\n  for ($i = $vowel_index + 1; $i < strlen($word);\
    \ $i++) {\n    if (!in_array($word[$i], $vowels)) {\n      return $word[$i - 1];\n\
    \    }\n  }\n  return '';\n}\n\necho get_closest_vowel(\"yogurt\") . \"\\n\";\n\
    echo get_closest_vowel(\"FULL\") . \"\\n\";\necho get_closest_vowel(\"quick\"\
    ) . \"\\n\";\necho get_closest_vowel(\"ab\") . \"\\n\";", "    $vowels = ['a',\
    \ 'e', 'i', 'o', 'u'];\n    $word = str_split(strtolower($word));\n    $vowel_index\
    \ = -1;\n    $consonant_index = -1;\n    for ($i = count($word) - 1; $i >= 0;\
    \ $i--) {\n        if (in_array($word[$i], $vowels)) {\n            $vowel_index\
    \ = $i;\n            break;\n        }\n    }\n    for ($i = $vowel_index - 1;\
    \ $i >= 0; $i--) {\n        if (!in_array($word[$i], $vowels)) {\n           \
    \ $consonant_index = $i;\n            break;\n        }\n    }\n    return $consonant_index\
    \ > -1 ? $word[$vowel_index] : '';\n}\n", "    $vowels = ['a', 'e', 'i', 'o',\
    \ 'u'];\n    $word = str_split(strtolower($word));\n    $result = '';\n    $distance\
    \ = 0;\n    for ($i = count($word) - 1; $i >= 0; $i--) {\n        if (in_array($word[$i],\
    \ $vowels)) {\n            $result = $word[$i];\n            $distance = count($word)\
    \ - $i;\n            break;\n        }\n    }\n    for ($i = count($word) - 1;\
    \ $i >= 0; $i--) {\n        if (in_array($word[$i], $vowels)) {\n            if\
    \ (count($word) - $i < $distance) {\n                $result = $word[$i];\n  \
    \              $distance = count($word) - $i;\n            }\n        }\n    }\n\
    \    return $result;\n}\n", "    $vowels = ['a', 'e', 'i', 'o', 'u'];\n    $word\
    \ = strrev($word);\n    $result = '';\n    for ($i = 0; $i < strlen($word); $i++)\
    \ {\n        if (in_array($word[$i], $vowels)) {\n            if ($i + 1 < strlen($word)\
    \ && !in_array($word[$i + 1], $vowels)) {\n                $result = $word[$i];\n\
    \                break;\n            }\n        }\n    }\n    return strrev($result);\n\
    }\n", "    $vowels = ['a', 'e', 'i', 'o', 'u'];\n    $word = strrev($word);\n\
    \    $vowel = '';\n    $prev = '';\n    for ($i = 0; $i < strlen($word); $i++)\
    \ {\n        if (in_array($word[$i], $vowels)) {\n            $vowel = $word[$i];\n\
    \            if ($prev != '' && !in_array($prev, $vowels)) {\n               \
    \ return $vowel;\n            }\n        }\n        $prev = $word[$i];\n    }\n\
    \    return '';\n}\n", "    $vowels = ['a', 'e', 'i', 'o', 'u'];\n    $word =\
    \ str_split(strtolower($word));\n    $vowel_index = 0;\n    $vowel_distance =\
    \ 0;\n    $vowel_found = false;\n    for ($i = count($word) - 1; $i >= 0; $i--)\
    \ {\n        if (in_array($word[$i], $vowels)) {\n            if ($vowel_found)\
    \ {\n                if ($i - $vowel_index > $vowel_distance) {\n            \
    \        $vowel_distance = $i - $vowel_index;\n                    $vowel_index\
    \ = $i;\n                }\n            } else {\n                $vowel_found\
    \ = true;\n                $vowel_index = $i;\n            }\n        }\n    }\n\
    \    return $vowel_found ? $word[$vowel_index] : '';\n}\n", "    $vowels = [\"\
    a\", \"e\", \"i\", \"o\", \"u\"];\n    $word = str_split(strrev($word));\n   \
    \ $vowel = \"\";\n    $consonant = \"\";\n    $result = \"\";\n    foreach ($word\
    \ as $key => $value) {\n        if (in_array($value, $vowels)) {\n           \
    \ $vowel = $value;\n            if ($consonant != \"\") {\n                $result\
    \ = $vowel;\n                break;\n            }\n        } else {\n       \
    \     $consonant = $value;\n        }\n    }\n    return $result;\n}\n", "   \
    \ $vowels = ['a', 'e', 'i', 'o', 'u'];\n    $word = strrev($word);\n    for ($i\
    \ = 0; $i < strlen($word); $i++) {\n        if (in_array($word[$i], $vowels))\
    \ {\n            if ($i + 1 < strlen($word) && !in_array($word[$i + 1], $vowels))\
    \ {\n                return strrev($word[$i]);\n            }\n        }\n   \
    \ }\n    return '';\n}\n", "    $vowels = ['a', 'e', 'i', 'o', 'u'];\n    $word\
    \ = str_split(strtolower($word));\n    $vowel_index = -1;\n    $consonant_index\
    \ = -1;\n    for ($i = count($word) - 1; $i >= 0; $i--) {\n        if (in_array($word[$i],\
    \ $vowels)) {\n            $vowel_index = $i;\n            break;\n        }\n\
    \    }\n    for ($i = $vowel_index - 1; $i >= 0; $i--) {\n        if (!in_array($word[$i],\
    \ $vowels)) {\n            $consonant_index = $i;\n            break;\n      \
    \  }\n    }\n    if ($vowel_index == -1 || $consonant_index == -1) {\n       \
    \ return '';\n    }\n    return $word[$vowel_index];\n}\n", "    $vowels = ['a',\
    \ 'e', 'i', 'o', 'u'];\n    $word = str_split(strtolower($word));\n    $vowel_index\
    \ = null;\n    $consonant_index = null;\n    for ($i = count($word) - 1; $i >=\
    \ 0; $i--) {\n        if (in_array($word[$i], $vowels)) {\n            $vowel_index\
    \ = $i;\n            break;\n        }\n    }\n    if ($vowel_index === null)\
    \ {\n        return '';\n    }\n    for ($i = $vowel_index - 1; $i >= 0; $i--)\
    \ {\n        if (!in_array($word[$i], $vowels)) {\n            $consonant_index\
    \ = $i;\n            break;\n        }\n    }\n    if ($consonant_index === null)\
    \ {\n        return '';\n    }\n    return $word[$vowel_index];\n}\n", "    $vowels\
    \ = [\"a\", \"e\", \"i\", \"o\", \"u\"];\n    $word = str_split(strrev($word));\n\
    \    $vowel_index = null;\n    $consonant_index = null;\n    for ($i = 0; $i <\
    \ count($word); $i++) {\n        if (in_array($word[$i], $vowels)) {\n       \
    \     $vowel_index = $i;\n            break;\n        }\n    }\n    for ($i =\
    \ $vowel_index + 1; $i < count($word); $i++) {\n        if (!in_array($word[$i],\
    \ $vowels)) {\n            $consonant_index = $i;\n            break;\n      \
    \  }\n    }\n    if ($vowel_index === null || $consonant_index === null) {\n \
    \       return \"\";\n    }\n    return $word[$vowel_index];\n}\n", "    $vowels\
    \ = array('a', 'e', 'i', 'o', 'u');\n    $word = str_split(strrev($word));\n \
    \   $vowel = '';\n    $consonant = '';\n    foreach ($word as $letter) {\n   \
    \     if (in_array($letter, $vowels)) {\n            $vowel = $letter;\n     \
    \       break;\n        } else {\n            $consonant = $letter;\n        }\n\
    \    }\n    return $vowel == '' || $consonant == '' ? '' : $vowel;\n}\n", "  \
    \  $vowels = ['a', 'e', 'i', 'o', 'u'];\n    $word = strrev($word);\n    $vowel_pos\
    \ = null;\n    for ($i = 0; $i < strlen($word); $i++) {\n        if (in_array($word[$i],\
    \ $vowels)) {\n            $vowel_pos = $i;\n            break;\n        }\n \
    \   }\n    if ($vowel_pos === null) {\n        return '';\n    }\n    for ($i\
    \ = $vowel_pos + 1; $i < strlen($word); $i++) {\n        if (!in_array($word[$i],\
    \ $vowels)) {\n            return strrev($word[$vowel_pos]);\n        }\n    }\n\
    \    return '';\n}\n", "  $vowels = ['a', 'e', 'i', 'o', 'u'];\n  $word = str_split(strtolower($word));\n\
    \  $vowel_index = 0;\n  $consonant_index = 0;\n  $vowel_found = false;\n  $consonant_found\
    \ = false;\n  $vowel_count = 0;\n  $consonant_count = 0;\n  $vowel_index_array\
    \ = [];\n  $consonant_index_array = [];\n  $vowel_count_array = [];\n  $consonant_count_array\
    \ = [];\n  $vowel_index_array_count = 0;\n  $consonant_index_array_count = 0;\n\
    \  $vowel_count_array_count = 0;\n  $consonant_count_array_count = 0;\n  $vowel_index_array_count_array\
    \ = [];\n  $consonant_index_array_count_array = [];\n  $vowel_count_array_count_array\
    \ = [];\n  $consonant_count_array_count_array = [];\n  $vowel_index_array_count_array_count\
    \ = 0;\n  $consonant_index_array_count_array_count = 0;\n  $vowel_count_array_count_array_count\
    \ = 0;\n  $consonant_count_array_count_array_count = 0;\n  $vowel_index_array_count_array_count_array\
    \ = [];\n  $consonant_index_array_count_array_count_array = [];\n  $vowel_count_array_count_array_count_array\
    \ = [];\n  $consonant_count_array_count_array_count_array = [];\n  $vowel_index_array_count_array_count_array_count\
    \ = 0;\n  $consonant_index_array_count_array_count_array_count = 0;\n  $vowel_count_array_count_array_count_array_count\
    \ = 0;\n  $consonant_count_array", "  $vowels = [\"a\", \"e\", \"i\", \"o\", \"\
    u\"];\n  $word = str_split(strrev($word));\n  $vowel = \"\";\n  $consonant = \"\
    \";\n  $vowel_index = 0;\n  $consonant_index = 0;\n  for ($i = 0; $i < count($word);\
    \ $i++) {\n    if (in_array($word[$i], $vowels)) {\n      $vowel = $word[$i];\n\
    \      $vowel_index = $i;\n      break;\n    }\n  }\n  for ($i = $vowel_index\
    \ + 1; $i < count($word); $i++) {\n    if (!in_array($word[$i], $vowels)) {\n\
    \      $consonant = $word[$i];\n      $consonant_index = $i;\n      break;\n \
    \   }\n  }\n  if ($vowel == \"\" || $consonant == \"\") {\n    return \"\";\n\
    \  }\n  return $vowel;\n}\necho get_closest_vowel(\"yogurt\") . \"\\n\";\necho\
    \ get_closest_vowel(\"FULL\") . \"\\n\";\necho get_closest_vowel(\"quick\") .\
    \ \"\\n\";\necho get_closest_vowel(\"ab\") . \"\\n\";", "    $vowels = ['a', 'e',\
    \ 'i', 'o', 'u'];\n    $word = str_split(strtolower($word));\n    $vowel_index\
    \ = null;\n    for ($i = count($word) - 1; $i >= 0; $i--) {\n        if (in_array($word[$i],\
    \ $vowels)) {\n            $vowel_index = $i;\n            break;\n        }\n\
    \    }\n    if ($vowel_index === null) {\n        return '';\n    }\n    for ($i\
    \ = $vowel_index - 1; $i >= 0; $i--) {\n        if (!in_array($word[$i], $vowels))\
    \ {\n            return $word[$vowel_index];\n        }\n    }\n    return '';\n\
    }\n", "    $vowels = ['a', 'e', 'i', 'o', 'u'];\n    $consonants = ['b', 'c',\
    \ 'd', 'f', 'g', 'h', 'j', 'k', 'l', 'm', 'n', 'p', 'q', 'r', 's', 't', 'v', 'w',\
    \ 'x', 'y', 'z'];\n    $word = str_split($word);\n    $vowel_index = 0;\n    $consonant_index\
    \ = 0;\n    $vowel_found = false;\n    $consonant_found = false;\n    for ($i\
    \ = count($word) - 1; $i >= 0; $i--) {\n        if (in_array($word[$i], $vowels))\
    \ {\n            $vowel_index = $i;\n            $vowel_found = true;\n      \
    \  }\n        if (in_array($word[$i], $consonants)) {\n            $consonant_index\
    \ = $i;\n            $consonant_found = true;\n        }\n        if ($vowel_found\
    \ && $consonant_found) {\n            if ($vowel_index > $consonant_index) {\n\
    \                return $word[$vowel_index];\n            }\n        }\n    }\n\
    \    return '';\n}\n", "  $vowels = ['a', 'e', 'i', 'o', 'u'];\n  $word = strrev($word);\n\
    \  $word_len = strlen($word);\n  $i = 0;\n  while ($i < $word_len) {\n    if (in_array($word[$i],\
    \ $vowels)) {\n      if ($i + 1 < $word_len && in_array($word[$i + 1], $vowels))\
    \ {\n        $i++;\n      } else {\n        return strrev($word[$i]);\n      }\n\
    \    }\n    $i++;\n  }\n  return '';\n}\n", "    $vowels = ['a', 'e', 'i', 'o',\
    \ 'u'];\n    $consonants = ['b', 'c', 'd', 'f', 'g', 'h', 'j', 'k', 'l', 'm',\
    \ 'n', 'p', 'q', 'r', 's', 't', 'v', 'w', 'x', 'y', 'z'];\n    $word = str_split($word);\n\
    \    $vowel_pos = [];\n    $consonant_pos = [];\n    foreach ($word as $key =>\
    \ $value) {\n        if (in_array($value, $vowels)) {\n            $vowel_pos[]\
    \ = $key;\n        }\n        if (in_array($value, $consonants)) {\n         \
    \   $consonant_pos[] = $key;\n        }\n    }\n    $vowel_pos = array_reverse($vowel_pos);\n\
    \    $consonant_pos = array_reverse($consonant_pos);\n    $result = [];\n    foreach\
    \ ($vowel_pos as $key => $value) {\n        if (in_array($value, $consonant_pos))\
    \ {\n            $result[] = $value;\n        }\n    }\n    if (empty($result))\
    \ {\n        return '';\n    }\n    $result = array_reverse($result);\n    $result\
    \ = $result[0];\n    return $word[$result];\n}\necho get_closest_vowel(\"yogurt\"\
    );\necho get_closest_vowel(\"FULL\");\necho get_closest_vowel(\"quick\");\necho\
    \ get_closest_vowel(\"ab\");", "    $vowels = ['a', 'e', 'i', 'o', 'u'];\n   \
    \ $word = str_split(strtolower($word));\n    $vowel_index = 0;\n    $vowel_distance\
    \ = 0;\n    for ($i = count($word) - 1; $i >= 0; $i--) {\n        if (in_array($word[$i],\
    \ $vowels)) {\n            $vowel_index = $i;\n            break;\n        }\n\
    \    }\n    for ($i = $vowel_index - 1; $i >= 0; $i--) {\n        if (!in_array($word[$i],\
    \ $vowels)) {\n            $vowel_distance = $vowel_index - $i;\n            break;\n\
    \        }\n    }\n    if ($vowel_distance == 0) {\n        return '';\n    }\n\
    \    return $word[$vowel_index];\n}\n", "    $vowels = ['a', 'e', 'i', 'o', 'u'];\n\
    \    $consonants = ['b', 'c', 'd', 'f', 'g', 'h', 'j', 'k', 'l', 'm', 'n', 'p',\
    \ 'q', 'r', 's', 't', 'v', 'w', 'x', 'y', 'z'];\n    $word_array = str_split($word);\n\
    \    $word_array_reversed = array_reverse($word_array);\n    $vowel_index = 0;\n\
    \    $consonant_index = 0;\n    $vowel_found = false;\n    $consonant_found =\
    \ false;\n    $vowel_index_array = [];\n    $consonant_index_array = [];\n   \
    \ $vowel_index_array_reversed = [];\n    $consonant_index_array_reversed = [];\n\
    \    $vowel_index_array_reversed_filtered = [];\n    $consonant_index_array_reversed_filtered\
    \ = [];\n    $vowel_index_array_reversed_filtered_diff = [];\n    $vowel_index_array_reversed_filtered_diff_min\
    \ = 0;\n    $vowel_index_array_reversed_filtered_diff_min_index = 0;\n    $vowel_index_array_reversed_filtered_diff_min_index_final\
    \ = 0;\n    $vowel_index_array_reversed_filtered_diff_min_index_final_final =\
    \ 0;\n    $vowel_index_array_reversed_filtered_diff_min_index_final_final_final\
    \ = 0;\n    $vowel_index_array_reversed_filtered_diff_min_index_final_final_final_final\
    \ = 0;\n    $vowel_index_array_reversed_filtered_diff_min_index_final_final_final_final_final\
    \ = 0;\n    $vowel_index_array_reversed_filtered", "    $vowels = [\"a\", \"e\"\
    , \"i\", \"o\", \"u\"];\n    $word = str_split(strrev($word));\n    $vowel = \"\
    \";\n    $consonant = \"\";\n    for ($i = 0; $i < count($word); $i++) {\n   \
    \     if (in_array($word[$i], $vowels)) {\n            $vowel = $word[$i];\n \
    \           if ($consonant !== \"\") {\n                return strrev($vowel);\n\
    \            }\n        } else {\n            $consonant = $word[$i];\n      \
    \  }\n    }\n    return \"\";\n}\n", "    $vowels = ['a', 'e', 'i', 'o', 'u'];\n\
    \    $letters = str_split($word);\n    $letters = array_reverse($letters);\n \
    \   $vowel_index = null;\n    $consonant_index = null;\n    for ($i = 0; $i <\
    \ count($letters); $i++) {\n        if (in_array($letters[$i], $vowels)) {\n \
    \           $vowel_index = $i;\n            break;\n        }\n    }\n    if ($vowel_index\
    \ === null) {\n        return '';\n    }\n    for ($i = $vowel_index + 1; $i <\
    \ count($letters); $i++) {\n        if (!in_array($letters[$i], $vowels)) {\n\
    \            $consonant_index = $i;\n            break;\n        }\n    }\n  \
    \  if ($consonant_index === null) {\n        return '';\n    }\n    return $letters[$vowel_index];\n\
    }\n", "\t$vowels = ['a', 'e', 'i', 'o', 'u'];\n\t$consonants = ['b', 'c', 'd',\
    \ 'f', 'g', 'h', 'j', 'k', 'l', 'm', 'n', 'p', 'q', 'r', 's', 't', 'v', 'w', 'x',\
    \ 'y', 'z'];\n\t$word = strtolower($word);\n\t$word = str_split($word);\n\t$result\
    \ = '';\n\t$distance = 0;\n\tfor ($i = count($word) - 1; $i >= 0; $i--) {\n\t\t\
    if (in_array($word[$i], $vowels)) {\n\t\t\t$result = $word[$i];\n\t\t\t$distance\
    \ = count($word) - $i;\n\t\t\tbreak;\n\t\t}\n\t}\n\tfor ($i = count($word) - 1;\
    \ $i >= 0; $i--) {\n\t\tif (in_array($word[$i], $vowels)) {\n\t\t\tif (in_array($word[$i\
    \ + 1], $consonants) && in_array($word[$i - 1], $consonants)) {\n\t\t\t\tif (count($word)\
    \ - $i < $distance) {\n\t\t\t\t\t$result = $word[$i];\n\t\t\t\t\t$distance = count($word)\
    \ - $i;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\treturn $result;\n}\necho get_closest_vowel(\"\
    yogurt\") . \"\\n\";\necho get_closest_vowel(\"FULL\") . \"\\n\";\necho get_closest_vowel(\"\
    quick\") . \"\\n\";\necho get_closest_vowel(\"ab\") . \"\\n\";", "    $vowels\
    \ = ['a', 'e', 'i', 'o', 'u'];\n    $word = str_split(strtolower($word));\n  \
    \  $vowel_index = 0;\n    $vowel_distance = 0;\n    $current_distance = 0;\n \
    \   $current_index = 0;\n    $consonant_count = 0;\n    $vowel_count = 0;\n  \
    \  for ($i = count($word) - 1; $i >= 0; $i--) {\n        if (in_array($word[$i],\
    \ $vowels)) {\n            $vowel_count++;\n            if ($vowel_count == 2)\
    \ {\n                break;\n            }\n            $current_index = $i;\n\
    \            $current_distance = $consonant_count;\n            $consonant_count\
    \ = 0;\n        } else {\n            $consonant_count++;\n        }\n    }\n\
    \    if ($vowel_count == 1) {\n        return \"\";\n    }\n    if ($vowel_count\
    \ == 2) {\n        if ($current_distance < $vowel_distance || $vowel_distance\
    \ == 0) {\n            $vowel_distance = $current_distance;\n            $vowel_index\
    \ = $current_index;\n        }\n    }\n    return $word[$vowel_index];\n}\n",
  "    $vowels = ['a', 'e', 'i', 'o', 'u'];\n    $word = str_split(strtolower($word));\n\
    \    $vowel_index = -1;\n    for ($i = count($word) - 1; $i >= 0; $i--) {\n  \
    \      if (in_array($word[$i], $vowels)) {\n            $vowel_index = $i;\n \
    \           break;\n        }\n    }\n    if ($vowel_index == -1) {\n        return\
    \ '';\n    }\n    for ($i = $vowel_index - 1; $i >= 0; $i--) {\n        if (!in_array($word[$i],\
    \ $vowels)) {\n            return $word[$vowel_index];\n        }\n    }\n   \
    \ return '';\n}\n", "    $vowels = ['a', 'e', 'i', 'o', 'u'];\n    $word = str_split(strtolower($word));\n\
    \    $vowel_pos = [];\n    $consonant_pos = [];\n    for ($i = 0; $i < count($word);\
    \ $i++) {\n        if (in_array($word[$i], $vowels)) {\n            $vowel_pos[]\
    \ = $i;\n        } else {\n            $consonant_pos[] = $i;\n        }\n   \
    \ }\n    $vowel_pos = array_reverse($vowel_pos);\n    $consonant_pos = array_reverse($consonant_pos);\n\
    \    $result = [];\n    for ($i = 0; $i < count($vowel_pos); $i++) {\n       \
    \ for ($j = 0; $j < count($consonant_pos); $j++) {\n            if ($vowel_pos[$i]\
    \ < $consonant_pos[$j]) {\n                $result[] = $vowel_pos[$i];\n     \
    \           break;\n            }\n        }\n    }\n    if (count($result) ==\
    \ 0) {\n        return '';\n    }\n    $result = array_reverse($result);\n   \
    \ $result = $word[$result[0]];\n    return $result;\n}\necho get_closest_vowel(\"\
    yogurt\") . \"\\n\";\necho get_closest_vowel(\"FULL\") . \"\\n\";\necho get_closest_vowel(\"\
    quick\") . \"\\n\";\necho get_closest_vowel(\"ab\") . \"\\n\";", "    $vowels\
    \ = ['a', 'e', 'i', 'o', 'u'];\n    $word = str_split(strtolower($word));\n  \
    \  $vowel_index = [];\n    foreach ($word as $key => $value) {\n        if (in_array($value,\
    \ $vowels)) {\n            $vowel_index[] = $key;\n        }\n    }\n    $result\
    \ = [];\n    foreach ($vowel_index as $key => $value) {\n        if ($key == 0)\
    \ {\n            if ($vowel_index[$key + 1] - $value > 1) {\n                $result[]\
    \ = $value;\n            }\n        } elseif ($key == count($vowel_index) - 1)\
    \ {\n            if ($value - $vowel_index[$key - 1] > 1) {\n                $result[]\
    \ = $value;\n            }\n        } else {\n            if ($vowel_index[$key\
    \ + 1] - $value > 1 && $value - $vowel_index[$key - 1] > 1) {\n              \
    \  $result[] = $value;\n            }\n        }\n    }\n    if (count($result)\
    \ == 0) {\n        return '';\n    } else {\n        return $word[$result[0]];\n\
    \    }\n}\n", "    $vowels = array(\"a\", \"e\", \"i\", \"o\", \"u\");\n    $word\
    \ = strrev($word);\n    $vowel_index = 0;\n    $consonant_index = 0;\n    $vowel_found\
    \ = false;\n    for ($i = 0; $i < strlen($word); $i++) {\n        if (in_array($word[$i],\
    \ $vowels)) {\n            $vowel_index = $i;\n            $vowel_found = true;\n\
    \            break;\n        }\n    }\n    if ($vowel_found) {\n        for ($i\
    \ = $vowel_index + 1; $i < strlen($word); $i++) {\n            if (!in_array($word[$i],\
    \ $vowels)) {\n                $consonant_index = $i;\n                break;\n\
    \            }\n        }\n        if ($consonant_index) {\n            return\
    \ $word[$vowel_index];\n        }\n    }\n    return \"\";\n}\n", "    $vowels\
    \ = [\"a\", \"e\", \"i\", \"o\", \"u\"];\n    $word = str_split(strrev($word));\n\
    \    $vowel_index = 0;\n    $consonant_index = 0;\n    $vowel_found = false;\n\
    \    $consonant_found = false;\n    for ($i = 0; $i < count($word); $i++) {\n\
    \        if (in_array($word[$i], $vowels)) {\n            $vowel_index = $i;\n\
    \            $vowel_found = true;\n        }\n        if (!in_array($word[$i],\
    \ $vowels) && $vowel_found) {\n            $consonant_index = $i;\n          \
    \  $consonant_found = true;\n            break;\n        }\n    }\n    if ($vowel_found\
    \ && $consonant_found) {\n        return $word[$vowel_index];\n    }\n    return\
    \ \"\";\n}\n", "    $vowels = ['a', 'e', 'i', 'o', 'u'];\n    $word = strrev($word);\n\
    \    $vowel = '';\n    for ($i = 0; $i < strlen($word); $i++) {\n        if (in_array($word[$i],\
    \ $vowels)) {\n            $vowel = $word[$i];\n            break;\n        }\n\
    \    }\n    return strrev($vowel);\n}\n", "    $vowels = ['a', 'e', 'i', 'o',\
    \ 'u'];\n    $consonants = ['b', 'c', 'd', 'f', 'g', 'h', 'j', 'k', 'l', 'm',\
    \ 'n', 'p', 'q', 'r', 's', 't', 'v', 'w', 'x', 'y', 'z'];\n    $word = str_split($word);\n\
    \    $vowel_index = 0;\n    $consonant_index = 0;\n    $result = '';\n    for\
    \ ($i = count($word) - 1; $i >= 0; $i--) {\n        if (in_array($word[$i], $vowels))\
    \ {\n            $vowel_index = $i;\n            break;\n        }\n    }\n  \
    \  for ($i = $vowel_index - 1; $i >= 0; $i--) {\n        if (in_array($word[$i],\
    \ $consonants)) {\n            $consonant_index = $i;\n            break;\n  \
    \      }\n    }\n    if ($vowel_index > $consonant_index) {\n        $result =\
    \ $word[$vowel_index];\n    }\n    return $result;\n}\n\necho get_closest_vowel(\"\
    yogurt\") . \"\\n\";\necho get_closest_vowel(\"FULL\") . \"\\n\";\necho get_closest_vowel(\"\
    quick\") . \"\\n\";\necho get_closest_vowel(\"ab\") . \"\\n\";\necho get_closest_vowel(\"\
    a\") . \"\\n\";\necho get_closest_vowel(\"b\") . \"\\n\";\necho get_closest_vowel(\"\
    c\") . \"\\n\";\necho get_closest_vowel(\"d\") . \"\\n\";\necho get_closest_vowel(\"\
    e\") . \"\\n\";\necho get_closest_vowel(\"f\") . \"\\n\";\necho get_closest_vowel(\"\
    g\") . \"\\n\";\necho", "    $vowels = ['a', 'e', 'i', 'o', 'u'];\n    $word =\
    \ str_split(strtolower($word));\n    $vowel_index = [];\n    $consonant_index\
    \ = [];\n    for ($i = 0; $i < count($word); $i++) {\n        if (in_array($word[$i],\
    \ $vowels)) {\n            $vowel_index[] = $i;\n        } else {\n          \
    \  $consonant_index[] = $i;\n        }\n    }\n    $result = [];\n    for ($i\
    \ = 0; $i < count($vowel_index); $i++) {\n        for ($j = 0; $j < count($consonant_index);\
    \ $j++) {\n            if ($vowel_index[$i] > $consonant_index[$j]) {\n      \
    \          $result[] = $vowel_index[$i] - $consonant_index[$j];\n            }\n\
    \        }\n    }\n    if (empty($result)) {\n        return '';\n    }\n    $min\
    \ = min($result);\n    $index = array_search($min, $result);\n    return $word[$vowel_index[$index]];\n\
    }\n", "    $vowels = ['a', 'e', 'i', 'o', 'u'];\n    $word = str_split(strtolower($word));\n\
    \    $vowel_index = null;\n    $consonant_index = null;\n    $consonant_index_before\
    \ = null;\n    $vowel_index_before = null;\n    $vowel_index_after = null;\n \
    \   $consonant_index_after = null;\n    $closest_vowel = null;\n    $closest_vowel_index\
    \ = null;\n    for ($i = 0; $i < count($word); $i++) {\n        if (in_array($word[$i],\
    \ $vowels)) {\n            $vowel_index = $i;\n            $vowel_index_before\
    \ = $vowel_index - 1;\n            $vowel_index_after = $vowel_index + 1;\n  \
    \          if ($vowel_index_before >= 0 && $vowel_index_after < count($word))\
    \ {\n                if (!in_array($word[$vowel_index_before], $vowels) && !in_array($word[$vowel_index_after],\
    \ $vowels)) {\n                    $closest_vowel = $word[$vowel_index];\n   \
    \                 $closest_vowel_index = $vowel_index;\n                }\n  \
    \          }\n        }\n    }\n    return $closest_vowel;\n}\n", "    $vowels\
    \ = [\"a\", \"e\", \"i\", \"o\", \"u\"];\n    $word = strrev($word);\n    $word_length\
    \ = strlen($word);\n    for ($i = 0; $i < $word_length; $i++) {\n        if (in_array($word[$i],\
    \ $vowels)) {\n            if ($i == $word_length - 1) {\n                return\
    \ \"\";\n            }\n            if (!in_array($word[$i + 1], $vowels)) {\n\
    \                return strrev($word[$i]);\n            }\n        }\n    }\n\
    \    return \"\";\n}\necho get_closest_vowel(\"yogurt\") . \"\\n\";\necho get_closest_vowel(\"\
    FULL\") . \"\\n\";\necho get_closest_vowel(\"quick\") . \"\\n\";\necho get_closest_vowel(\"\
    ab\") . \"\\n\";", "  $vowels = ['a', 'e', 'i', 'o', 'u'];\n  $word = str_split(strtolower($word));\n\
    \  $vowel_index = 0;\n  $vowel_distance = 0;\n  for ($i = count($word) - 1; $i\
    \ >= 0; $i--) {\n    if (in_array($word[$i], $vowels)) {\n      $vowel_index =\
    \ $i;\n      break;\n    }\n  }\n  for ($i = $vowel_index - 1; $i >= 0; $i--)\
    \ {\n    if (!in_array($word[$i], $vowels)) {\n      $vowel_distance = $vowel_index\
    \ - $i;\n      break;\n    }\n  }\n  if ($vowel_distance == 0) {\n    return '';\n\
    \  }\n  return $word[$vowel_index];\n}\n", "    $vowels = ['a', 'e', 'i', 'o',\
    \ 'u'];\n    $word = str_split(strtolower($word));\n    $result = '';\n    $count\
    \ = 0;\n    for ($i = count($word) - 1; $i >= 0; $i--) {\n        if (in_array($word[$i],\
    \ $vowels)) {\n            $result = $word[$i];\n            $count++;\n     \
    \   }\n        if ($count == 2) {\n            break;\n        }\n    }\n    return\
    \ $result;\n}\n", "    $vowels = ['a', 'e', 'i', 'o', 'u'];\n    $word = str_split(strtolower($word));\n\
    \    $last_vowel = '';\n    $last_consonant = '';\n    $result = '';\n    foreach\
    \ ($word as $key => $char) {\n        if (in_array($char, $vowels)) {\n      \
    \      $last_vowel = $char;\n        } else {\n            $last_consonant = $char;\n\
    \        }\n        if ($last_vowel && $last_consonant) {\n            $result\
    \ = $last_vowel;\n            break;\n        }\n    }\n    return $result;\n\
    }\n", "    $vowels = ['a', 'e', 'i', 'o', 'u'];\n    $word = str_split(strtolower($word));\n\
    \    $vowel_index = [];\n    foreach ($word as $index => $letter) {\n        if\
    \ (in_array($letter, $vowels)) {\n            $vowel_index[] = $index;\n     \
    \   }\n    }\n    $vowel_index = array_reverse($vowel_index);\n    foreach ($vowel_index\
    \ as $index) {\n        if ($index < count($word) - 1 && !in_array($word[$index\
    \ + 1], $vowels)) {\n            return $word[$index];\n        }\n    }\n   \
    \ return '';\n}\necho get_closest_vowel(\"yogurt\") . \"\\n\";\necho get_closest_vowel(\"\
    FULL\") . \"\\n\";\necho get_closest_vowel(\"quick\") . \"\\n\";\necho get_closest_vowel(\"\
    ab\") . \"\\n\";", "    $vowels = array(\"a\", \"e\", \"i\", \"o\", \"u\");\n\
    \    $word = strtolower($word);\n    $word = str_split($word);\n    $word = array_reverse($word);\n\
    \    $vowel = \"\";\n    $consonant = \"\";\n    $result = \"\";\n    foreach\
    \ ($word as $key => $value) {\n        if (in_array($value, $vowels)) {\n    \
    \        $vowel = $value;\n            break;\n        }\n    }\n    foreach ($word\
    \ as $key => $value) {\n        if (!in_array($value, $vowels)) {\n          \
    \  $consonant = $value;\n            break;\n        }\n    }\n    if ($vowel\
    \ == \"\" || $consonant == \"\") {\n        return $result;\n    }\n    $result\
    \ = $vowel;\n    return $result;\n}\necho get_closest_vowel(\"yogurt\") . \"<br>\"\
    ;\necho get_closest_vowel(\"FULL\") . \"<br>\";\necho get_closest_vowel(\"quick\"\
    ) . \"<br>\";\necho get_closest_vowel(\"ab\") . \"<br>\";", "    $vowels = ['a',\
    \ 'e', 'i', 'o', 'u'];\n    $word = strrev($word);\n    $word_length = strlen($word);\n\
    \    $vowel_index = 0;\n    $vowel_distance = $word_length;\n    for ($i = 0;\
    \ $i < $word_length; $i++) {\n        if (in_array($word[$i], $vowels)) {\n  \
    \          $vowel_index = $i;\n            break;\n        }\n    }\n    for ($i\
    \ = $vowel_index + 1; $i < $word_length; $i++) {\n        if (!in_array($word[$i],\
    \ $vowels)) {\n            $vowel_distance = $i - $vowel_index;\n            break;\n\
    \        }\n    }\n    if ($vowel_distance == $word_length) {\n        return\
    \ '';\n    }\n    return $word[$vowel_index];\n}\n", "    $vowels = array('a',\
    \ 'e', 'i', 'o', 'u');\n    $word = str_split(strrev($word));\n    $vowel_index\
    \ = null;\n    $consonant_index = null;\n    for ($i = 0; $i < count($word); $i++)\
    \ {\n        if (in_array($word[$i], $vowels)) {\n            $vowel_index = $i;\n\
    \            break;\n        }\n    }\n    for ($i = 0; $i < count($word); $i++)\
    \ {\n        if (!in_array($word[$i], $vowels)) {\n            $consonant_index\
    \ = $i;\n            break;\n        }\n    }\n    if ($vowel_index === null ||\
    \ $consonant_index === null) {\n        return '';\n    }\n    if ($vowel_index\
    \ < $consonant_index) {\n        return '';\n    }\n    return $word[$vowel_index];\n\
    }\n\necho get_closest_vowel(\"yogurt\") . \"\\n\";\necho get_closest_vowel(\"\
    FULL\") . \"\\n\";\necho get_closest_vowel(\"quick\") . \"\\n\";\necho get_closest_vowel(\"\
    ab\") . \"\\n\";", "    $vowels = ['a', 'e', 'i', 'o', 'u'];\n    $consonants\
    \ = ['b', 'c', 'd', 'f', 'g', 'h', 'j', 'k', 'l', 'm', 'n', 'p', 'q', 'r', 's',\
    \ 't', 'v', 'w', 'x', 'y', 'z'];\n    $word = str_split($word);\n    $vowel_index\
    \ = null;\n    $consonant_index = null;\n    for ($i = count($word) - 1; $i >=\
    \ 0; $i--) {\n        if (in_array($word[$i], $vowels)) {\n            $vowel_index\
    \ = $i;\n        } elseif (in_array($word[$i], $consonants)) {\n            $consonant_index\
    \ = $i;\n        }\n        if ($vowel_index !== null && $consonant_index !==\
    \ null) {\n            break;\n        }\n    }\n    if ($vowel_index === null\
    \ || $consonant_index === null) {\n        return '';\n    }\n    return $word[$vowel_index];\n\
    }\n", "    $vowels = ['a', 'e', 'i', 'o', 'u'];\n    $word = str_split(strtolower($word));\n\
    \    $vowel_index = -1;\n    $consonant_index = -1;\n    $vowel_distance = -1;\n\
    \    for ($i = count($word) - 1; $i >= 0; $i--) {\n        if (in_array($word[$i],\
    \ $vowels)) {\n            $vowel_index = $i;\n            if ($consonant_index\
    \ != -1) {\n                $vowel_distance = $consonant_index - $vowel_index;\n\
    \                break;\n            }\n        } else {\n            $consonant_index\
    \ = $i;\n        }\n    }\n    if ($vowel_distance == -1) {\n        return '';\n\
    \    }\n    $closest_vowel = $word[$vowel_index];\n    for ($i = $vowel_index\
    \ + 1; $i < $consonant_index; $i++) {\n        if (in_array($word[$i], $vowels))\
    \ {\n            if ($consonant_index - $i < $vowel_distance) {\n            \
    \    $vowel_distance = $consonant_index - $i;\n                $closest_vowel\
    \ = $word[$i];\n            }\n        }\n    }\n    return $closest_vowel;\n\
    }\n", "    $vowels = ['a', 'e', 'i', 'o', 'u'];\n    $word = strrev($word);\n\
    \    $vowel = '';\n    for ($i = 0; $i < strlen($word); $i++) {\n        if (in_array($word[$i],\
    \ $vowels)) {\n            $vowel = $word[$i];\n            break;\n        }\n\
    \    }\n    return strrev($vowel);\n}\necho get_closest_vowel(\"yogurt\") . \"\
    \\n\";\necho get_closest_vowel(\"FULL\") . \"\\n\";\necho get_closest_vowel(\"\
    quick\") . \"\\n\";\necho get_closest_vowel(\"ab\") . \"\\n\";", "    $vowels\
    \ = array(\"a\", \"e\", \"i\", \"o\", \"u\");\n    $word = strtolower($word);\n\
    \    $word = str_split($word);\n    $word = array_reverse($word);\n    $vowel_index\
    \ = -1;\n    for ($i = 0; $i < count($word); $i++) {\n        if (in_array($word[$i],\
    \ $vowels)) {\n            $vowel_index = $i;\n            break;\n        }\n\
    \    }\n    if ($vowel_index == -1) {\n        return \"\";\n    }\n    for ($i\
    \ = $vowel_index; $i < count($word); $i++) {\n        if (!in_array($word[$i],\
    \ $vowels)) {\n            return $word[$vowel_index];\n        }\n    }\n   \
    \ return \"\";\n}\n\necho get_closest_vowel(\"yogurt\") . \"\\n\";\necho get_closest_vowel(\"\
    FULL\") . \"\\n\";\necho get_closest_vowel(\"quick\") . \"\\n\";\necho get_closest_vowel(\"\
    ab\") . \"\\n\";", "    $vowels = ['a', 'e', 'i', 'o', 'u'];\n    $word = str_split(strtolower($word));\n\
    \    $vowel_index = -1;\n    for ($i = count($word) - 1; $i >= 0; $i--) {\n  \
    \      if (in_array($word[$i], $vowels)) {\n            $vowel_index = $i;\n \
    \           break;\n        }\n    }\n    if ($vowel_index == -1) {\n        return\
    \ '';\n    }\n    for ($i = $vowel_index - 1; $i >= 0; $i--) {\n        if (!in_array($word[$i],\
    \ $vowels)) {\n            return $word[$vowel_index];\n        }\n    }\n   \
    \ return '';\n}\n"]
stop_tokens:
- "\nfunction"
- "\n?>"
- "\n//"
- "\n#"

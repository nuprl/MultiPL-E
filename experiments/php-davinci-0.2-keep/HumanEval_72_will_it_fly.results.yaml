name: HumanEval_72_will_it_fly
language: php
results:
- program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// will_it_fly([1, 2], 5) \u279E False \n// # 1+2 is\
    \ less than the maximum possible weight, but it's unbalanced.\n// will_it_fly([3,\
    \ 2, 3], 1) \u279E False\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// will_it_fly([3, 2, 3], 9) \u279E True\n// # 3+2+3 is less\
    \ than the maximum possible weight, and it's balanced.\n// will_it_fly([3], 5)\
    \ \u279E True\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n\t$sum = array_sum($q);\n\t$rev = array_reverse($q);\n\
    \tif($sum <= $w && $q == $rev){\n\t\treturn true;\n\t}else{\n\t\treturn false;\n\
    \t}\n}\necho will_it_fly([3, 2, 3], 9);\nfunction candidate(...$args) {\n    return\
    \ will_it_fly(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 2, 3), 9) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2), 5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: '1'
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// will_it_fly([1, 2], 5) \u279E False \n// # 1+2 is\
    \ less than the maximum possible weight, but it's unbalanced.\n// will_it_fly([3,\
    \ 2, 3], 1) \u279E False\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// will_it_fly([3, 2, 3], 9) \u279E True\n// # 3+2+3 is less\
    \ than the maximum possible weight, and it's balanced.\n// will_it_fly([3], 5)\
    \ \u279E True\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n\t$sum = array_sum($q);\n\tif ($sum <= $w) {\n\
    \t\t$reverse = array_reverse($q);\n\t\tif ($q == $reverse) {\n\t\t\treturn true;\n\
    \t\t}\n\t}\n\treturn false;\n}\necho will_it_fly([1, 2], 5) . \"\\n\";\necho will_it_fly([3,\
    \ 2, 3], 1) . \"\\n\";\necho will_it_fly([3, 2, 3], 9) . \"\\n\";\necho will_it_fly([3],\
    \ 5) . \"\\n\";\nfunction candidate(...$args) {\n    return will_it_fly(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 2, 3), 9) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2), 5)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\n\n1\n1\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// will_it_fly([1, 2], 5) \u279E False \n// # 1+2 is\
    \ less than the maximum possible weight, but it's unbalanced.\n// will_it_fly([3,\
    \ 2, 3], 1) \u279E False\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// will_it_fly([3, 2, 3], 9) \u279E True\n// # 3+2+3 is less\
    \ than the maximum possible weight, and it's balanced.\n// will_it_fly([3], 5)\
    \ \u279E True\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n\t$sum = array_sum($q);\n\t$rev = array_reverse($q);\n\
    \tif($sum <= $w && $q == $rev){\n\t\treturn \"True\";\n\t}\n\telse {\n\t\treturn\
    \ \"False\";\n\t}\n}\necho will_it_fly([1, 2], 5);\necho \"<br>\";\necho will_it_fly([3,\
    \ 2, 3], 1);\necho \"<br>\";\necho will_it_fly([3, 2, 3], 9);\necho \"<br>\";\n\
    echo will_it_fly([3], 5);\nfunction candidate(...$args) {\n    return will_it_fly(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 2, 3), 9) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2), 5)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: False<br>False<br>True<br>True
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpy_oit53o.php:35\n\
    Stack trace:\n#0 /tmp/tmpy_oit53o.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpy_oit53o.php\
    \ on line 35\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// will_it_fly([1, 2], 5) \u279E False \n// # 1+2 is\
    \ less than the maximum possible weight, but it's unbalanced.\n// will_it_fly([3,\
    \ 2, 3], 1) \u279E False\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// will_it_fly([3, 2, 3], 9) \u279E True\n// # 3+2+3 is less\
    \ than the maximum possible weight, and it's balanced.\n// will_it_fly([3], 5)\
    \ \u279E True\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n\t$sum = array_sum($q);\n\t$palindrome = array_reverse($q);\n\
    \tif ($sum <= $w && $q == $palindrome) {\n\t\treturn true;\n\t} else {\n\t\treturn\
    \ false;\n\t}\n}\necho will_it_fly([1, 2], 5);\necho \"<br>\";\necho will_it_fly([3,\
    \ 2, 3], 1);\necho \"<br>\";\necho will_it_fly([3, 2, 3], 9);\necho \"<br>\";\n\
    echo will_it_fly([3], 5);\nfunction candidate(...$args) {\n    return will_it_fly(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 2, 3), 9) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2), 5)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: <br><br>1<br>1
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// will_it_fly([1, 2], 5) \u279E False \n// # 1+2 is\
    \ less than the maximum possible weight, but it's unbalanced.\n// will_it_fly([3,\
    \ 2, 3], 1) \u279E False\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// will_it_fly([3, 2, 3], 9) \u279E True\n// # 3+2+3 is less\
    \ than the maximum possible weight, and it's balanced.\n// will_it_fly([3], 5)\
    \ \u279E True\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n\t$sum = array_sum($q);\n\tif ($sum > $w) {\n\t\
    \treturn false;\n\t}\n\t$reverse = array_reverse($q);\n\tif ($q == $reverse) {\n\
    \t\treturn true;\n\t}\n\treturn false;\n}\necho will_it_fly([1, 2], 5);\necho\
    \ \"<br>\";\necho will_it_fly([3, 2, 3], 1);\necho \"<br>\";\necho will_it_fly([3,\
    \ 2, 3], 9);\necho \"<br>\";\necho will_it_fly([3], 5);\nfunction candidate(...$args)\
    \ {\n    return will_it_fly(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 2, 3), 9) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2), 5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: <br><br>1<br>1
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// will_it_fly([1, 2], 5) \u279E False \n// # 1+2 is\
    \ less than the maximum possible weight, but it's unbalanced.\n// will_it_fly([3,\
    \ 2, 3], 1) \u279E False\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// will_it_fly([3, 2, 3], 9) \u279E True\n// # 3+2+3 is less\
    \ than the maximum possible weight, and it's balanced.\n// will_it_fly([3], 5)\
    \ \u279E True\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n\t$sum = array_sum($q);\n\t$rev = array_reverse($q);\n\
    \tif($sum <= $w && $q == $rev){\n\t\treturn \"True\";\n\t}\n\telse{\n\t\treturn\
    \ \"False\";\n\t}\n}\necho will_it_fly([1, 2], 5);\necho \"<br>\";\necho will_it_fly([3,\
    \ 2, 3], 1);\necho \"<br>\";\necho will_it_fly([3, 2, 3], 9);\necho \"<br>\";\n\
    echo will_it_fly([3], 5);\nfunction candidate(...$args) {\n    return will_it_fly(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 2, 3), 9) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2), 5)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: False<br>False<br>True<br>True
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpuioiiov_.php:35\n\
    Stack trace:\n#0 /tmp/tmpuioiiov_.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpuioiiov_.php\
    \ on line 35\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// will_it_fly([1, 2], 5) \u279E False \n// # 1+2 is\
    \ less than the maximum possible weight, but it's unbalanced.\n// will_it_fly([3,\
    \ 2, 3], 1) \u279E False\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// will_it_fly([3, 2, 3], 9) \u279E True\n// # 3+2+3 is less\
    \ than the maximum possible weight, and it's balanced.\n// will_it_fly([3], 5)\
    \ \u279E True\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n\t$sum = array_sum($q);\n\t$rev = array_reverse($q);\n\
    \tif ($sum <= $w && $q == $rev) {\n\t\treturn \"True\";\n\t} else {\n\t\treturn\
    \ \"False\";\n\t}\n}\necho will_it_fly([1, 2], 5);\necho \"<br>\";\necho will_it_fly([3,\
    \ 2, 3], 1);\necho \"<br>\";\necho will_it_fly([3, 2, 3], 9);\necho \"<br>\";\n\
    echo will_it_fly([3], 5);\nfunction candidate(...$args) {\n    return will_it_fly(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 2, 3), 9) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2), 5)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: False<br>False<br>True<br>True
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpuo3_066s.php:34\n\
    Stack trace:\n#0 /tmp/tmpuo3_066s.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpuo3_066s.php\
    \ on line 34\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// will_it_fly([1, 2], 5) \u279E False \n// # 1+2 is\
    \ less than the maximum possible weight, but it's unbalanced.\n// will_it_fly([3,\
    \ 2, 3], 1) \u279E False\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// will_it_fly([3, 2, 3], 9) \u279E True\n// # 3+2+3 is less\
    \ than the maximum possible weight, and it's balanced.\n// will_it_fly([3], 5)\
    \ \u279E True\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n\t$sum = array_sum($q);\n\t$rev = array_reverse($q);\n\
    \tif ($sum <= $w && $q == $rev) {\n\t\treturn true;\n\t} else {\n\t\treturn false;\n\
    \t}\n}\necho will_it_fly([1, 2], 5);\necho will_it_fly([3, 2, 3], 1);\necho will_it_fly([3,\
    \ 2, 3], 9);\necho will_it_fly([3], 5);\nfunction candidate(...$args) {\n    return\
    \ will_it_fly(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 2, 3), 9) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2), 5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: '11'
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// will_it_fly([1, 2], 5) \u279E False \n// # 1+2 is\
    \ less than the maximum possible weight, but it's unbalanced.\n// will_it_fly([3,\
    \ 2, 3], 1) \u279E False\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// will_it_fly([3, 2, 3], 9) \u279E True\n// # 3+2+3 is less\
    \ than the maximum possible weight, and it's balanced.\n// will_it_fly([3], 5)\
    \ \u279E True\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n\t$sum = array_sum($q);\n\t$rev = array_reverse($q);\n\
    \tif($sum <= $w && $q == $rev){\n\t\treturn true;\n\t}\n\treturn false;\n}\necho\
    \ will_it_fly([1, 2], 5) . \"\\n\";\necho will_it_fly([3, 2, 3], 1) . \"\\n\"\
    ;\necho will_it_fly([3, 2, 3], 9) . \"\\n\";\necho will_it_fly([3], 5) . \"\\\
    n\";\nfunction candidate(...$args) {\n    return will_it_fly(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(3, 2, 3), 9) !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2), 5) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3), 5) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\n\n1\n1\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// will_it_fly([1, 2], 5) \u279E False \n// # 1+2 is\
    \ less than the maximum possible weight, but it's unbalanced.\n// will_it_fly([3,\
    \ 2, 3], 1) \u279E False\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// will_it_fly([3, 2, 3], 9) \u279E True\n// # 3+2+3 is less\
    \ than the maximum possible weight, and it's balanced.\n// will_it_fly([3], 5)\
    \ \u279E True\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n\t$sum = array_sum($q);\n\t$reverse = array_reverse($q);\n\
    \tif($sum <= $w && $q == $reverse){\n\t\treturn true;\n\t}else{\n\t\treturn false;\n\
    \t}\n}\necho will_it_fly([1, 2], 5);\necho \"<br>\";\necho will_it_fly([3, 2,\
    \ 3], 1);\necho \"<br>\";\necho will_it_fly([3, 2, 3], 9);\necho \"<br>\";\necho\
    \ will_it_fly([3], 5);\nfunction candidate(...$args) {\n    return will_it_fly(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 2, 3), 9) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2), 5)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: <br><br>1<br>1
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// will_it_fly([1, 2], 5) \u279E False \n// # 1+2 is\
    \ less than the maximum possible weight, but it's unbalanced.\n// will_it_fly([3,\
    \ 2, 3], 1) \u279E False\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// will_it_fly([3, 2, 3], 9) \u279E True\n// # 3+2+3 is less\
    \ than the maximum possible weight, and it's balanced.\n// will_it_fly([3], 5)\
    \ \u279E True\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n\t$sum = array_sum($q);\n\t$reverse = array_reverse($q);\n\
    \tif($sum <= $w && $q == $reverse){\n\t\treturn true;\n\t}\n\treturn false;\n\
    }\necho will_it_fly([1, 2], 5);\necho will_it_fly([3, 2, 3], 1);\necho will_it_fly([3,\
    \ 2, 3], 9);\necho will_it_fly([3], 5);\nfunction candidate(...$args) {\n    return\
    \ will_it_fly(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 2, 3), 9) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2), 5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: '11'
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// will_it_fly([1, 2], 5) \u279E False \n// # 1+2 is\
    \ less than the maximum possible weight, but it's unbalanced.\n// will_it_fly([3,\
    \ 2, 3], 1) \u279E False\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// will_it_fly([3, 2, 3], 9) \u279E True\n// # 3+2+3 is less\
    \ than the maximum possible weight, and it's balanced.\n// will_it_fly([3], 5)\
    \ \u279E True\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n\t$sum = array_sum($q);\n\t$rev = array_reverse($q);\n\
    \tif($sum <= $w && $q == $rev){\n\t\treturn true;\n\t}\n\treturn false;\n}\necho\
    \ will_it_fly([1, 2], 5);\necho \"<br>\";\necho will_it_fly([3, 2, 3], 1);\necho\
    \ \"<br>\";\necho will_it_fly([3, 2, 3], 9);\necho \"<br>\";\necho will_it_fly([3],\
    \ 5);\nfunction candidate(...$args) {\n    return will_it_fly(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(3, 2, 3), 9) !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2), 5) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3), 5) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: <br><br>1<br>1
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// will_it_fly([1, 2], 5) \u279E False \n// # 1+2 is\
    \ less than the maximum possible weight, but it's unbalanced.\n// will_it_fly([3,\
    \ 2, 3], 1) \u279E False\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// will_it_fly([3, 2, 3], 9) \u279E True\n// # 3+2+3 is less\
    \ than the maximum possible weight, and it's balanced.\n// will_it_fly([3], 5)\
    \ \u279E True\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n\t$sum = array_sum($q);\n\t$rev = array_reverse($q);\n\
    \tif($sum <= $w && $q == $rev){\n\t\treturn \"True\";\n\t}\n\telse{\n\t\treturn\
    \ \"False\";\n\t}\n}\necho will_it_fly([1, 2], 5);\necho \"<br>\";\necho will_it_fly([3,\
    \ 2, 3], 1);\necho \"<br>\";\necho will_it_fly([3, 2, 3], 9);\necho \"<br>\";\n\
    echo will_it_fly([3], 5);\nfunction candidate(...$args) {\n    return will_it_fly(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 2, 3), 9) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2), 5)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: False<br>False<br>True<br>True
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpxfq8lohc.php:35\n\
    Stack trace:\n#0 /tmp/tmpxfq8lohc.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpxfq8lohc.php\
    \ on line 35\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// will_it_fly([1, 2], 5) \u279E False \n// # 1+2 is\
    \ less than the maximum possible weight, but it's unbalanced.\n// will_it_fly([3,\
    \ 2, 3], 1) \u279E False\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// will_it_fly([3, 2, 3], 9) \u279E True\n// # 3+2+3 is less\
    \ than the maximum possible weight, and it's balanced.\n// will_it_fly([3], 5)\
    \ \u279E True\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n\t$sum = array_sum($q);\n\t$rev = array_reverse($q);\n\
    \tif($sum <= $w && $q == $rev){\n\t\treturn \"True\";\n\t}\n\telse{\n\t\treturn\
    \ \"False\";\n\t}\n}\necho will_it_fly([1, 2], 5);\necho \"<br>\";\necho will_it_fly([3,\
    \ 2, 3], 1);\necho \"<br>\";\necho will_it_fly([3, 2, 3], 9);\necho \"<br>\";\n\
    echo will_it_fly([3], 5);\nfunction candidate(...$args) {\n    return will_it_fly(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 2, 3), 9) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2), 5)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: False<br>False<br>True<br>True
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpzbihonqq.php:35\n\
    Stack trace:\n#0 /tmp/tmpzbihonqq.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpzbihonqq.php\
    \ on line 35\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// will_it_fly([1, 2], 5) \u279E False \n// # 1+2 is\
    \ less than the maximum possible weight, but it's unbalanced.\n// will_it_fly([3,\
    \ 2, 3], 1) \u279E False\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// will_it_fly([3, 2, 3], 9) \u279E True\n// # 3+2+3 is less\
    \ than the maximum possible weight, and it's balanced.\n// will_it_fly([3], 5)\
    \ \u279E True\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n\t$sum = array_sum($q);\n\t$rev = array_reverse($q);\n\
    \tif ($sum <= $w && $q == $rev) {\n\t\treturn true;\n\t} else {\n\t\treturn false;\n\
    \t}\n}\necho will_it_fly([1, 2], 5);\necho \"<br>\";\necho will_it_fly([3, 2,\
    \ 3], 1);\necho \"<br>\";\necho will_it_fly([3, 2, 3], 9);\necho \"<br>\";\necho\
    \ will_it_fly([3], 5);\nfunction candidate(...$args) {\n    return will_it_fly(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 2, 3), 9) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2), 5)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: <br><br>1<br>1
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// will_it_fly([1, 2], 5) \u279E False \n// # 1+2 is\
    \ less than the maximum possible weight, but it's unbalanced.\n// will_it_fly([3,\
    \ 2, 3], 1) \u279E False\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// will_it_fly([3, 2, 3], 9) \u279E True\n// # 3+2+3 is less\
    \ than the maximum possible weight, and it's balanced.\n// will_it_fly([3], 5)\
    \ \u279E True\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n\t$sum = array_sum($q);\n\t$rev = array_reverse($q);\n\
    \tif($sum <= $w && $q == $rev){\n\t\treturn true;\n\t}\n\treturn false;\n}\necho\
    \ will_it_fly([1, 2], 5);\necho \"<br>\";\necho will_it_fly([3, 2, 3], 1);\necho\
    \ \"<br>\";\necho will_it_fly([3, 2, 3], 9);\necho \"<br>\";\necho will_it_fly([3],\
    \ 5);\nfunction candidate(...$args) {\n    return will_it_fly(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(3, 2, 3), 9) !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2), 5) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3), 5) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: <br><br>1<br>1
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// will_it_fly([1, 2], 5) \u279E False \n// # 1+2 is\
    \ less than the maximum possible weight, but it's unbalanced.\n// will_it_fly([3,\
    \ 2, 3], 1) \u279E False\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// will_it_fly([3, 2, 3], 9) \u279E True\n// # 3+2+3 is less\
    \ than the maximum possible weight, and it's balanced.\n// will_it_fly([3], 5)\
    \ \u279E True\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n\t$sum = array_sum($q);\n\t$rev = array_reverse($q);\n\
    \tif ($sum <= $w && $q == $rev) {\n\t\treturn \"True\";\n\t} else {\n\t\treturn\
    \ \"False\";\n\t}\n}\necho will_it_fly([1, 2], 5) . \"\\n\";\necho will_it_fly([3,\
    \ 2, 3], 1) . \"\\n\";\necho will_it_fly([3, 2, 3], 9) . \"\\n\";\necho will_it_fly([3],\
    \ 5) . \"\\n\";\nfunction candidate(...$args) {\n    return will_it_fly(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 2, 3), 9) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2), 5)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "False\nFalse\nTrue\nTrue\n"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp1wq45b6y.php:31\n\
    Stack trace:\n#0 /tmp/tmp1wq45b6y.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp1wq45b6y.php\
    \ on line 31\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// will_it_fly([1, 2], 5) \u279E False \n// # 1+2 is\
    \ less than the maximum possible weight, but it's unbalanced.\n// will_it_fly([3,\
    \ 2, 3], 1) \u279E False\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// will_it_fly([3, 2, 3], 9) \u279E True\n// # 3+2+3 is less\
    \ than the maximum possible weight, and it's balanced.\n// will_it_fly([3], 5)\
    \ \u279E True\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n\t$sum = array_sum($q);\n\t$rev = array_reverse($q);\n\
    \tif ($sum <= $w && $q == $rev) {\n\t\treturn true;\n\t} else {\n\t\treturn false;\n\
    \t}\n}\necho will_it_fly([3, 2, 3], 9);\nfunction candidate(...$args) {\n    return\
    \ will_it_fly(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 2, 3), 9) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2), 5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: '1'
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// will_it_fly([1, 2], 5) \u279E False \n// # 1+2 is\
    \ less than the maximum possible weight, but it's unbalanced.\n// will_it_fly([3,\
    \ 2, 3], 1) \u279E False\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// will_it_fly([3, 2, 3], 9) \u279E True\n// # 3+2+3 is less\
    \ than the maximum possible weight, and it's balanced.\n// will_it_fly([3], 5)\
    \ \u279E True\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n\t$sum = array_sum($q);\n\t$reverse = array_reverse($q);\n\
    \tif($sum <= $w && $q == $reverse){\n\t\treturn \"True\";\n\t} else {\n\t\treturn\
    \ \"False\";\n\t}\n}\necho will_it_fly([1, 2], 5);\necho \"<br>\";\necho will_it_fly([3,\
    \ 2, 3], 1);\necho \"<br>\";\necho will_it_fly([3, 2, 3], 9);\necho \"<br>\";\n\
    echo will_it_fly([3], 5);\nfunction candidate(...$args) {\n    return will_it_fly(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 2, 3), 9) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2), 5)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: False<br>False<br>True<br>True
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpkz4qvhi7.php:34\n\
    Stack trace:\n#0 /tmp/tmpkz4qvhi7.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpkz4qvhi7.php\
    \ on line 34\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// will_it_fly([1, 2], 5) \u279E False \n// # 1+2 is\
    \ less than the maximum possible weight, but it's unbalanced.\n// will_it_fly([3,\
    \ 2, 3], 1) \u279E False\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// will_it_fly([3, 2, 3], 9) \u279E True\n// # 3+2+3 is less\
    \ than the maximum possible weight, and it's balanced.\n// will_it_fly([3], 5)\
    \ \u279E True\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n\t$sum = array_sum($q);\n\t$rev = array_reverse($q);\n\
    \tif($sum <= $w && $q == $rev){\n\t\treturn true;\n\t}else{\n\t\treturn false;\n\
    \t}\n}\necho will_it_fly([1, 2], 5);\necho \"<br>\";\necho will_it_fly([3, 2,\
    \ 3], 1);\necho \"<br>\";\necho will_it_fly([3, 2, 3], 9);\necho \"<br>\";\necho\
    \ will_it_fly([3], 5);\nfunction candidate(...$args) {\n    return will_it_fly(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 2, 3), 9) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2), 5)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: <br><br>1<br>1
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// will_it_fly([1, 2], 5) \u279E False \n// # 1+2 is\
    \ less than the maximum possible weight, but it's unbalanced.\n// will_it_fly([3,\
    \ 2, 3], 1) \u279E False\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// will_it_fly([3, 2, 3], 9) \u279E True\n// # 3+2+3 is less\
    \ than the maximum possible weight, and it's balanced.\n// will_it_fly([3], 5)\
    \ \u279E True\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n\t$sum = array_sum($q);\n\t$rev = array_reverse($q);\n\
    \tif ($sum <= $w && $q == $rev) {\n\t\treturn true;\n\t} else {\n\t\treturn false;\n\
    \t}\n}\necho will_it_fly([1, 2], 5);\necho will_it_fly([3, 2, 3], 1);\necho will_it_fly([3,\
    \ 2, 3], 9);\necho will_it_fly([3], 5);\nfunction candidate(...$args) {\n    return\
    \ will_it_fly(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 2, 3), 9) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2), 5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: '11'
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// will_it_fly([1, 2], 5) \u279E False \n// # 1+2 is\
    \ less than the maximum possible weight, but it's unbalanced.\n// will_it_fly([3,\
    \ 2, 3], 1) \u279E False\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// will_it_fly([3, 2, 3], 9) \u279E True\n// # 3+2+3 is less\
    \ than the maximum possible weight, and it's balanced.\n// will_it_fly([3], 5)\
    \ \u279E True\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n\t$sum = array_sum($q);\n\t$reverse = array_reverse($q);\n\
    \tif($sum <= $w && $q == $reverse){\n\t\treturn true;\n\t}else{\n\t\treturn false;\n\
    \t}\n}\necho will_it_fly([1, 2], 5);\necho \"<br>\";\necho will_it_fly([3, 2,\
    \ 3], 1);\necho \"<br>\";\necho will_it_fly([3, 2, 3], 9);\necho \"<br>\";\necho\
    \ will_it_fly([3], 5);\nfunction candidate(...$args) {\n    return will_it_fly(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 2, 3), 9) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2), 5)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: <br><br>1<br>1
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// will_it_fly([1, 2], 5) \u279E False \n// # 1+2 is\
    \ less than the maximum possible weight, but it's unbalanced.\n// will_it_fly([3,\
    \ 2, 3], 1) \u279E False\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// will_it_fly([3, 2, 3], 9) \u279E True\n// # 3+2+3 is less\
    \ than the maximum possible weight, and it's balanced.\n// will_it_fly([3], 5)\
    \ \u279E True\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n\t$sum = array_sum($q);\n\t$rev = array_reverse($q);\n\
    \tif($sum <= $w && $q == $rev){\n\t\treturn true;\n\t}\n\treturn false;\n}\necho\
    \ will_it_fly([1, 2], 5);\necho \"<br>\";\necho will_it_fly([3, 2, 3], 1);\necho\
    \ \"<br>\";\necho will_it_fly([3, 2, 3], 9);\necho \"<br>\";\necho will_it_fly([3],\
    \ 5);\nfunction candidate(...$args) {\n    return will_it_fly(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(3, 2, 3), 9) !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2), 5) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3), 5) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: <br><br>1<br>1
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// will_it_fly([1, 2], 5) \u279E False \n// # 1+2 is\
    \ less than the maximum possible weight, but it's unbalanced.\n// will_it_fly([3,\
    \ 2, 3], 1) \u279E False\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// will_it_fly([3, 2, 3], 9) \u279E True\n// # 3+2+3 is less\
    \ than the maximum possible weight, and it's balanced.\n// will_it_fly([3], 5)\
    \ \u279E True\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n\t$sum = array_sum($q);\n\tif ($sum <= $w) {\n\
    \t\t$rev = array_reverse($q);\n\t\tif ($q == $rev) {\n\t\t\treturn true;\n\t\t\
    }\n\t}\n\treturn false;\n}\necho will_it_fly([1, 2], 5);\necho \"<br>\";\necho\
    \ will_it_fly([3, 2, 3], 1);\necho \"<br>\";\necho will_it_fly([3, 2, 3], 9);\n\
    echo \"<br>\";\necho will_it_fly([3], 5);\nfunction candidate(...$args) {\n  \
    \  return will_it_fly(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 2, 3), 9) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2), 5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: <br><br>1<br>1
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// will_it_fly([1, 2], 5) \u279E False \n// # 1+2 is\
    \ less than the maximum possible weight, but it's unbalanced.\n// will_it_fly([3,\
    \ 2, 3], 1) \u279E False\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// will_it_fly([3, 2, 3], 9) \u279E True\n// # 3+2+3 is less\
    \ than the maximum possible weight, and it's balanced.\n// will_it_fly([3], 5)\
    \ \u279E True\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n\t$sum = array_sum($q);\n\t$rev = array_reverse($q);\n\
    \tif($sum <= $w && $q == $rev){\n\t\treturn true;\n\t}else{\n\t\treturn false;\n\
    \t}\n}\necho will_it_fly([1, 2], 5);\necho \"<br>\";\necho will_it_fly([3, 2,\
    \ 3], 1);\necho \"<br>\";\necho will_it_fly([3, 2, 3], 9);\necho \"<br>\";\necho\
    \ will_it_fly([3], 5);\nfunction candidate(...$args) {\n    return will_it_fly(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 2, 3), 9) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2), 5)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: <br><br>1<br>1
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// will_it_fly([1, 2], 5) \u279E False \n// # 1+2 is\
    \ less than the maximum possible weight, but it's unbalanced.\n// will_it_fly([3,\
    \ 2, 3], 1) \u279E False\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// will_it_fly([3, 2, 3], 9) \u279E True\n// # 3+2+3 is less\
    \ than the maximum possible weight, and it's balanced.\n// will_it_fly([3], 5)\
    \ \u279E True\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n\t$sum = array_sum($q);\n\tif ($sum <= $w && $q\
    \ == array_reverse($q)) {\n\t\treturn true;\n\t} else {\n\t\treturn false;\n\t\
    }\n}\necho will_it_fly([1, 2], 5);\necho will_it_fly([3, 2, 3], 1);\necho will_it_fly([3,\
    \ 2, 3], 9);\necho will_it_fly([3], 5);\nfunction candidate(...$args) {\n    return\
    \ will_it_fly(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 2, 3), 9) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2), 5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: '11'
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// will_it_fly([1, 2], 5) \u279E False \n// # 1+2 is\
    \ less than the maximum possible weight, but it's unbalanced.\n// will_it_fly([3,\
    \ 2, 3], 1) \u279E False\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// will_it_fly([3, 2, 3], 9) \u279E True\n// # 3+2+3 is less\
    \ than the maximum possible weight, and it's balanced.\n// will_it_fly([3], 5)\
    \ \u279E True\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n\t$sum = array_sum($q);\n\t$rev = array_reverse($q);\n\
    \tif($sum <= $w && $q == $rev){\n\t\treturn true;\n\t}\n\treturn false;\n}\necho\
    \ will_it_fly([1, 2], 5);\necho will_it_fly([3, 2, 3], 1);\necho will_it_fly([3,\
    \ 2, 3], 9);\necho will_it_fly([3], 5);\nfunction candidate(...$args) {\n    return\
    \ will_it_fly(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 2, 3), 9) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2), 5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: '11'
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// will_it_fly([1, 2], 5) \u279E False \n// # 1+2 is\
    \ less than the maximum possible weight, but it's unbalanced.\n// will_it_fly([3,\
    \ 2, 3], 1) \u279E False\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// will_it_fly([3, 2, 3], 9) \u279E True\n// # 3+2+3 is less\
    \ than the maximum possible weight, and it's balanced.\n// will_it_fly([3], 5)\
    \ \u279E True\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n\t$sum = array_sum($q);\n\tif ($sum <= $w) {\n\
    \t\t$reverse = array_reverse($q);\n\t\tif ($q == $reverse) {\n\t\t\treturn true;\n\
    \t\t} else {\n\t\t\treturn false;\n\t\t}\n\t} else {\n\t\treturn false;\n\t}\n\
    }\necho will_it_fly([1, 2], 5);\necho \"<br>\";\necho will_it_fly([3, 2, 3], 1);\n\
    echo \"<br>\";\necho will_it_fly([3, 2, 3], 9);\necho \"<br>\";\necho will_it_fly([3],\
    \ 5);\nfunction candidate(...$args) {\n    return will_it_fly(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(3, 2, 3), 9) !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2), 5) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3), 5) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: <br><br>1<br>1
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// will_it_fly([1, 2], 5) \u279E False \n// # 1+2 is\
    \ less than the maximum possible weight, but it's unbalanced.\n// will_it_fly([3,\
    \ 2, 3], 1) \u279E False\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// will_it_fly([3, 2, 3], 9) \u279E True\n// # 3+2+3 is less\
    \ than the maximum possible weight, and it's balanced.\n// will_it_fly([3], 5)\
    \ \u279E True\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n\t$sum = array_sum($q);\n\t$reverse = array_reverse($q);\n\
    \tif ($sum <= $w && $q == $reverse) {\n\t\treturn \"True\";\n\t} else {\n\t\t\
    return \"False\";\n\t}\n}\necho will_it_fly([3, 2, 3], 9);\nfunction candidate(...$args)\
    \ {\n    return will_it_fly(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 2, 3), 9) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2), 5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: 'True'
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpoqo_14gv.php:28\n\
    Stack trace:\n#0 /tmp/tmpoqo_14gv.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpoqo_14gv.php\
    \ on line 28\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// will_it_fly([1, 2], 5) \u279E False \n// # 1+2 is\
    \ less than the maximum possible weight, but it's unbalanced.\n// will_it_fly([3,\
    \ 2, 3], 1) \u279E False\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// will_it_fly([3, 2, 3], 9) \u279E True\n// # 3+2+3 is less\
    \ than the maximum possible weight, and it's balanced.\n// will_it_fly([3], 5)\
    \ \u279E True\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n\t$sum = array_sum($q);\n\t$rev = array_reverse($q);\n\
    \tif ($sum <= $w && $q == $rev) {\n\t\treturn true;\n\t} else {\n\t\treturn false;\n\
    \t}\n}\necho will_it_fly([1, 2], 5) . \"\\n\";\necho will_it_fly([3, 2, 3], 1)\
    \ . \"\\n\";\necho will_it_fly([3, 2, 3], 9) . \"\\n\";\necho will_it_fly([3],\
    \ 5) . \"\\n\";\nfunction candidate(...$args) {\n    return will_it_fly(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 2, 3), 9) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2), 5)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\n\n1\n1\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// will_it_fly([1, 2], 5) \u279E False \n// # 1+2 is\
    \ less than the maximum possible weight, but it's unbalanced.\n// will_it_fly([3,\
    \ 2, 3], 1) \u279E False\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// will_it_fly([3, 2, 3], 9) \u279E True\n// # 3+2+3 is less\
    \ than the maximum possible weight, and it's balanced.\n// will_it_fly([3], 5)\
    \ \u279E True\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n\t$sum = array_sum($q);\n\t$rev = array_reverse($q);\n\
    \tif($sum <= $w && $q == $rev){\n\t\treturn true;\n\t}else{\n\t\treturn false;\n\
    \t}\n}\necho will_it_fly([1, 2], 5);\necho \"<br>\";\necho will_it_fly([3, 2,\
    \ 3], 1);\necho \"<br>\";\necho will_it_fly([3, 2, 3], 9);\necho \"<br>\";\necho\
    \ will_it_fly([3], 5);\nfunction candidate(...$args) {\n    return will_it_fly(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 2, 3), 9) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2), 5)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: <br><br>1<br>1
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// will_it_fly([1, 2], 5) \u279E False \n// # 1+2 is\
    \ less than the maximum possible weight, but it's unbalanced.\n// will_it_fly([3,\
    \ 2, 3], 1) \u279E False\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// will_it_fly([3, 2, 3], 9) \u279E True\n// # 3+2+3 is less\
    \ than the maximum possible weight, and it's balanced.\n// will_it_fly([3], 5)\
    \ \u279E True\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n\t$sum = array_sum($q);\n\t$rev = array_reverse($q);\n\
    \tif($sum <= $w && $q == $rev){\n\t\treturn true;\n\t}\n\treturn false;\n}\necho\
    \ will_it_fly([1, 2], 5);\necho \"<br>\";\necho will_it_fly([3, 2, 3], 1);\necho\
    \ \"<br>\";\necho will_it_fly([3, 2, 3], 9);\necho \"<br>\";\necho will_it_fly([3],\
    \ 5);\nfunction candidate(...$args) {\n    return will_it_fly(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(3, 2, 3), 9) !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2), 5) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3), 5) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: <br><br>1<br>1
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// will_it_fly([1, 2], 5) \u279E False \n// # 1+2 is\
    \ less than the maximum possible weight, but it's unbalanced.\n// will_it_fly([3,\
    \ 2, 3], 1) \u279E False\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// will_it_fly([3, 2, 3], 9) \u279E True\n// # 3+2+3 is less\
    \ than the maximum possible weight, and it's balanced.\n// will_it_fly([3], 5)\
    \ \u279E True\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n\t$sum = array_sum($q);\n\t$reverse = array_reverse($q);\n\
    \tif ($sum <= $w && $q == $reverse) {\n\t\treturn true;\n\t} else {\n\t\treturn\
    \ false;\n\t}\n}\necho will_it_fly([3, 2, 3], 9);\necho \"<br>\";\necho will_it_fly([3],\
    \ 5);\necho \"<br>\";\necho will_it_fly([1, 2], 5);\necho \"<br>\";\necho will_it_fly([3,\
    \ 2, 3], 1);\nfunction candidate(...$args) {\n    return will_it_fly(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 2, 3), 9) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2), 5)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: 1<br>1<br><br>
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// will_it_fly([1, 2], 5) \u279E False \n// # 1+2 is\
    \ less than the maximum possible weight, but it's unbalanced.\n// will_it_fly([3,\
    \ 2, 3], 1) \u279E False\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// will_it_fly([3, 2, 3], 9) \u279E True\n// # 3+2+3 is less\
    \ than the maximum possible weight, and it's balanced.\n// will_it_fly([3], 5)\
    \ \u279E True\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n\t$sum = array_sum($q);\n\t$reverse = array_reverse($q);\n\
    \tif($sum <= $w && $q == $reverse){\n\t\treturn true;\n\t}else{\n\t\treturn false;\n\
    \t}\n}\necho will_it_fly([1, 2], 5);\necho \"<br>\";\necho will_it_fly([3, 2,\
    \ 3], 1);\necho \"<br>\";\necho will_it_fly([3, 2, 3], 9);\necho \"<br>\";\necho\
    \ will_it_fly([3], 5);\nfunction candidate(...$args) {\n    return will_it_fly(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 2, 3), 9) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2), 5)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: <br><br>1<br>1
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// will_it_fly([1, 2], 5) \u279E False \n// # 1+2 is\
    \ less than the maximum possible weight, but it's unbalanced.\n// will_it_fly([3,\
    \ 2, 3], 1) \u279E False\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// will_it_fly([3, 2, 3], 9) \u279E True\n// # 3+2+3 is less\
    \ than the maximum possible weight, and it's balanced.\n// will_it_fly([3], 5)\
    \ \u279E True\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n\t$sum = array_sum($q);\n\t$rev = array_reverse($q);\n\
    \tif ($sum <= $w && $q == $rev) {\n\t\treturn true;\n\t} else {\n\t\treturn false;\n\
    \t}\n}\necho will_it_fly([1, 2], 5);\necho \"<br>\";\necho will_it_fly([3, 2,\
    \ 3], 1);\necho \"<br>\";\necho will_it_fly([3, 2, 3], 9);\necho \"<br>\";\necho\
    \ will_it_fly([3], 5);\nfunction candidate(...$args) {\n    return will_it_fly(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 2, 3), 9) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2), 5)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: <br><br>1<br>1
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// will_it_fly([1, 2], 5) \u279E False \n// # 1+2 is\
    \ less than the maximum possible weight, but it's unbalanced.\n// will_it_fly([3,\
    \ 2, 3], 1) \u279E False\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// will_it_fly([3, 2, 3], 9) \u279E True\n// # 3+2+3 is less\
    \ than the maximum possible weight, and it's balanced.\n// will_it_fly([3], 5)\
    \ \u279E True\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n\t$sum = array_sum($q);\n\t$rev = array_reverse($q);\n\
    \tif ($sum <= $w && $q == $rev) {\n\t\treturn true;\n\t} else {\n\t\treturn false;\n\
    \t}\n}\nfunction candidate(...$args) {\n    return will_it_fly(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(array(3, 2, 3), 9) !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2), 5) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3), 5) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// will_it_fly([1, 2], 5) \u279E False \n// # 1+2 is\
    \ less than the maximum possible weight, but it's unbalanced.\n// will_it_fly([3,\
    \ 2, 3], 1) \u279E False\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// will_it_fly([3, 2, 3], 9) \u279E True\n// # 3+2+3 is less\
    \ than the maximum possible weight, and it's balanced.\n// will_it_fly([3], 5)\
    \ \u279E True\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n\t$sum = array_sum($q);\n\tif ($sum <= $w) {\n\
    \t\t$rev = array_reverse($q);\n\t\tif ($q == $rev) {\n\t\t\treturn true;\n\t\t\
    }\n\t}\n\treturn false;\n}\necho will_it_fly([1, 2], 5);\necho \"<br>\";\necho\
    \ will_it_fly([3, 2, 3], 1);\necho \"<br>\";\necho will_it_fly([3, 2, 3], 9);\n\
    echo \"<br>\";\necho will_it_fly([3], 5);\nfunction candidate(...$args) {\n  \
    \  return will_it_fly(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 2, 3), 9) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2), 5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: <br><br>1<br>1
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// will_it_fly([1, 2], 5) \u279E False \n// # 1+2 is\
    \ less than the maximum possible weight, but it's unbalanced.\n// will_it_fly([3,\
    \ 2, 3], 1) \u279E False\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// will_it_fly([3, 2, 3], 9) \u279E True\n// # 3+2+3 is less\
    \ than the maximum possible weight, and it's balanced.\n// will_it_fly([3], 5)\
    \ \u279E True\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n\t$sum = array_sum($q);\n\t$rev = array_reverse($q);\n\
    \tif ($sum <= $w && $q == $rev) {\n\t\treturn \"True\";\n\t} else {\n\t\treturn\
    \ \"False\";\n\t}\n}\necho will_it_fly([1, 2], 5);\necho \"<br>\";\necho will_it_fly([3,\
    \ 2, 3], 1);\necho \"<br>\";\necho will_it_fly([3, 2, 3], 9);\necho \"<br>\";\n\
    echo will_it_fly([3], 5);\nfunction candidate(...$args) {\n    return will_it_fly(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 2, 3), 9) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2), 5)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: False<br>False<br>True<br>True
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpnmy8e16m.php:34\n\
    Stack trace:\n#0 /tmp/tmpnmy8e16m.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpnmy8e16m.php\
    \ on line 34\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// will_it_fly([1, 2], 5) \u279E False \n// # 1+2 is\
    \ less than the maximum possible weight, but it's unbalanced.\n// will_it_fly([3,\
    \ 2, 3], 1) \u279E False\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// will_it_fly([3, 2, 3], 9) \u279E True\n// # 3+2+3 is less\
    \ than the maximum possible weight, and it's balanced.\n// will_it_fly([3], 5)\
    \ \u279E True\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n\t$sum = array_sum($q);\n\t$rev = array_reverse($q);\n\
    \tif($sum <= $w && $q == $rev){\n\t\treturn true;\n\t}\n\treturn false;\n}\necho\
    \ will_it_fly([3, 2, 3], 9);\nfunction candidate(...$args) {\n    return will_it_fly(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 2, 3), 9) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2), 5)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: '1'
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// will_it_fly([1, 2], 5) \u279E False \n// # 1+2 is\
    \ less than the maximum possible weight, but it's unbalanced.\n// will_it_fly([3,\
    \ 2, 3], 1) \u279E False\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// will_it_fly([3, 2, 3], 9) \u279E True\n// # 3+2+3 is less\
    \ than the maximum possible weight, and it's balanced.\n// will_it_fly([3], 5)\
    \ \u279E True\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n\t$sum = array_sum($q);\n\t$rev = array_reverse($q);\n\
    \tif ($sum <= $w && $q == $rev) {\n\t\treturn \"True\";\n\t} else {\n\t\treturn\
    \ \"False\";\n\t}\n}\necho will_it_fly([1, 2], 5);\necho \"<br>\";\necho will_it_fly([3,\
    \ 2, 3], 1);\necho \"<br>\";\necho will_it_fly([3, 2, 3], 9);\necho \"<br>\";\n\
    echo will_it_fly([3], 5);\nfunction candidate(...$args) {\n    return will_it_fly(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 2, 3), 9) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2), 5)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: False<br>False<br>True<br>True
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpt9nfwv_g.php:34\n\
    Stack trace:\n#0 /tmp/tmpt9nfwv_g.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpt9nfwv_g.php\
    \ on line 34\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// will_it_fly([1, 2], 5) \u279E False \n// # 1+2 is\
    \ less than the maximum possible weight, but it's unbalanced.\n// will_it_fly([3,\
    \ 2, 3], 1) \u279E False\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// will_it_fly([3, 2, 3], 9) \u279E True\n// # 3+2+3 is less\
    \ than the maximum possible weight, and it's balanced.\n// will_it_fly([3], 5)\
    \ \u279E True\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n\t$sum = array_sum($q);\n\tif ($sum <= $w) {\n\
    \t\t$rev = array_reverse($q);\n\t\tif ($q == $rev) {\n\t\t\treturn true;\n\t\t\
    }\n\t}\n\treturn false;\n}\necho will_it_fly([3, 2, 3], 9);\nfunction candidate(...$args)\
    \ {\n    return will_it_fly(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 2, 3), 9) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2), 5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: '1'
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// will_it_fly([1, 2], 5) \u279E False \n// # 1+2 is\
    \ less than the maximum possible weight, but it's unbalanced.\n// will_it_fly([3,\
    \ 2, 3], 1) \u279E False\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// will_it_fly([3, 2, 3], 9) \u279E True\n// # 3+2+3 is less\
    \ than the maximum possible weight, and it's balanced.\n// will_it_fly([3], 5)\
    \ \u279E True\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n\t$sum = array_sum($q);\n\t$reverse = array_reverse($q);\n\
    \tif ($sum <= $w && $q == $reverse) {\n\t\treturn true;\n\t} else {\n\t\treturn\
    \ false;\n\t}\n}\necho will_it_fly([1, 2], 5);\necho will_it_fly([3, 2, 3], 1);\n\
    echo will_it_fly([3, 2, 3], 9);\necho will_it_fly([3], 5);\nfunction candidate(...$args)\
    \ {\n    return will_it_fly(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 2, 3), 9) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2), 5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: '11'
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// will_it_fly([1, 2], 5) \u279E False \n// # 1+2 is\
    \ less than the maximum possible weight, but it's unbalanced.\n// will_it_fly([3,\
    \ 2, 3], 1) \u279E False\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// will_it_fly([3, 2, 3], 9) \u279E True\n// # 3+2+3 is less\
    \ than the maximum possible weight, and it's balanced.\n// will_it_fly([3], 5)\
    \ \u279E True\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n\t$sum = array_sum($q);\n\t$reverse = array_reverse($q);\n\
    \tif ($sum <= $w && $q == $reverse) {\n\t\treturn true;\n\t} else {\n\t\treturn\
    \ false;\n\t}\n}\necho will_it_fly([3, 2, 3], 9);\necho \"<br>\";\necho will_it_fly([3],\
    \ 5);\necho \"<br>\";\necho will_it_fly([1, 2], 5);\necho \"<br>\";\necho will_it_fly([3,\
    \ 2, 3], 1);\nfunction candidate(...$args) {\n    return will_it_fly(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 2, 3), 9) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2), 5)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: 1<br>1<br><br>
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// will_it_fly([1, 2], 5) \u279E False \n// # 1+2 is\
    \ less than the maximum possible weight, but it's unbalanced.\n// will_it_fly([3,\
    \ 2, 3], 1) \u279E False\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// will_it_fly([3, 2, 3], 9) \u279E True\n// # 3+2+3 is less\
    \ than the maximum possible weight, and it's balanced.\n// will_it_fly([3], 5)\
    \ \u279E True\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n\t$sum = array_sum($q);\n\tif ($sum <= $w) {\n\
    \t\t$rev = array_reverse($q);\n\t\tif ($q == $rev) {\n\t\t\treturn true;\n\t\t\
    }\n\t}\n\treturn false;\n}\necho will_it_fly([1, 2], 5);\necho \"<br>\";\necho\
    \ will_it_fly([3, 2, 3], 1);\necho \"<br>\";\necho will_it_fly([3, 2, 3], 9);\n\
    echo \"<br>\";\necho will_it_fly([3], 5);\nfunction candidate(...$args) {\n  \
    \  return will_it_fly(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 2, 3), 9) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2), 5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: <br><br>1<br>1
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// will_it_fly([1, 2], 5) \u279E False \n// # 1+2 is\
    \ less than the maximum possible weight, but it's unbalanced.\n// will_it_fly([3,\
    \ 2, 3], 1) \u279E False\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// will_it_fly([3, 2, 3], 9) \u279E True\n// # 3+2+3 is less\
    \ than the maximum possible weight, and it's balanced.\n// will_it_fly([3], 5)\
    \ \u279E True\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n\t$sum = array_sum($q);\n\t$rev = array_reverse($q);\n\
    \tif ($sum <= $w && $q == $rev) {\n\t\treturn true;\n\t} else {\n\t\treturn false;\n\
    \t}\n}\necho will_it_fly([1, 2], 5) . \"<br>\";\necho will_it_fly([3, 2, 3], 1)\
    \ . \"<br>\";\necho will_it_fly([3, 2, 3], 9) . \"<br>\";\necho will_it_fly([3],\
    \ 5) . \"<br>\";\nfunction candidate(...$args) {\n    return will_it_fly(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 2, 3), 9) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2), 5)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: <br><br>1<br>1<br>
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// will_it_fly([1, 2], 5) \u279E False \n// # 1+2 is\
    \ less than the maximum possible weight, but it's unbalanced.\n// will_it_fly([3,\
    \ 2, 3], 1) \u279E False\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// will_it_fly([3, 2, 3], 9) \u279E True\n// # 3+2+3 is less\
    \ than the maximum possible weight, and it's balanced.\n// will_it_fly([3], 5)\
    \ \u279E True\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n\t$sum = array_sum($q);\n\t$rev = array_reverse($q);\n\
    \tif($sum <= $w && $q == $rev){\n\t\treturn \"True\";\n\t}\n\telse{\n\t\treturn\
    \ \"False\";\n\t}\n}\necho will_it_fly([1, 2], 5);\necho \"<br>\";\necho will_it_fly([3,\
    \ 2, 3], 1);\necho \"<br>\";\necho will_it_fly([3, 2, 3], 9);\necho \"<br>\";\n\
    echo will_it_fly([3], 5);\nfunction candidate(...$args) {\n    return will_it_fly(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 2, 3), 9) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2), 5)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: False<br>False<br>True<br>True
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmponwbkoax.php:35\n\
    Stack trace:\n#0 /tmp/tmponwbkoax.php(43): test()\n#1 {main}\n  thrown in /tmp/tmponwbkoax.php\
    \ on line 35\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// will_it_fly([1, 2], 5) \u279E False \n// # 1+2 is\
    \ less than the maximum possible weight, but it's unbalanced.\n// will_it_fly([3,\
    \ 2, 3], 1) \u279E False\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// will_it_fly([3, 2, 3], 9) \u279E True\n// # 3+2+3 is less\
    \ than the maximum possible weight, and it's balanced.\n// will_it_fly([3], 5)\
    \ \u279E True\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n\t$sum = array_sum($q);\n\tif($sum <= $w && $q\
    \ == array_reverse($q)){\n\t\treturn true;\n\t}\n\treturn false;\n}\necho will_it_fly([3,\
    \ 2, 3], 9);\nfunction candidate(...$args) {\n    return will_it_fly(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 2, 3), 9) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2), 5)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: '1'
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// will_it_fly([1, 2], 5) \u279E False \n// # 1+2 is\
    \ less than the maximum possible weight, but it's unbalanced.\n// will_it_fly([3,\
    \ 2, 3], 1) \u279E False\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// will_it_fly([3, 2, 3], 9) \u279E True\n// # 3+2+3 is less\
    \ than the maximum possible weight, and it's balanced.\n// will_it_fly([3], 5)\
    \ \u279E True\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n\t$sum = array_sum($q);\n\t$rev = array_reverse($q);\n\
    \tif($sum <= $w && $q == $rev){\n\t\treturn true;\n\t}\n\treturn false;\n}\necho\
    \ will_it_fly([1, 2], 5);\necho \"<br>\";\necho will_it_fly([3, 2, 3], 1);\necho\
    \ \"<br>\";\necho will_it_fly([3, 2, 3], 9);\necho \"<br>\";\necho will_it_fly([3],\
    \ 5);\nfunction candidate(...$args) {\n    return will_it_fly(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(3, 2, 3), 9) !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2), 5) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3), 5) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: <br><br>1<br>1
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// will_it_fly([1, 2], 5) \u279E False \n// # 1+2 is\
    \ less than the maximum possible weight, but it's unbalanced.\n// will_it_fly([3,\
    \ 2, 3], 1) \u279E False\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// will_it_fly([3, 2, 3], 9) \u279E True\n// # 3+2+3 is less\
    \ than the maximum possible weight, and it's balanced.\n// will_it_fly([3], 5)\
    \ \u279E True\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n\t$sum = array_sum($q);\n\t$reverse = array_reverse($q);\n\
    \tif($sum <= $w && $q == $reverse){\n\t\treturn true;\n\t}\n\treturn false;\n\
    }\necho will_it_fly([3, 2, 3], 9);\nfunction candidate(...$args) {\n    return\
    \ will_it_fly(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 2, 3), 9) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2), 5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: '1'
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// will_it_fly([1, 2], 5) \u279E False \n// # 1+2 is\
    \ less than the maximum possible weight, but it's unbalanced.\n// will_it_fly([3,\
    \ 2, 3], 1) \u279E False\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// will_it_fly([3, 2, 3], 9) \u279E True\n// # 3+2+3 is less\
    \ than the maximum possible weight, and it's balanced.\n// will_it_fly([3], 5)\
    \ \u279E True\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n\t$sum = array_sum($q);\n\t$rev = array_reverse($q);\n\
    \tif($sum <= $w && $q == $rev){\n\t\treturn \"True\";\n\t}else{\n\t\treturn \"\
    False\";\n\t}\n}\necho will_it_fly([1, 2], 5);\necho \"<br>\";\necho will_it_fly([3,\
    \ 2, 3], 1);\necho \"<br>\";\necho will_it_fly([3, 2, 3], 9);\necho \"<br>\";\n\
    echo will_it_fly([3], 5);\nfunction candidate(...$args) {\n    return will_it_fly(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 2, 3), 9) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2), 5)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: False<br>False<br>True<br>True
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpwq7a0v1s.php:34\n\
    Stack trace:\n#0 /tmp/tmpwq7a0v1s.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpwq7a0v1s.php\
    \ on line 34\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// will_it_fly([1, 2], 5) \u279E False \n// # 1+2 is\
    \ less than the maximum possible weight, but it's unbalanced.\n// will_it_fly([3,\
    \ 2, 3], 1) \u279E False\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// will_it_fly([3, 2, 3], 9) \u279E True\n// # 3+2+3 is less\
    \ than the maximum possible weight, and it's balanced.\n// will_it_fly([3], 5)\
    \ \u279E True\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n\t$sum = array_sum($q);\n\t$rev = array_reverse($q);\n\
    \tif ($sum <= $w && $q == $rev) {\n\t\treturn \"True\";\n\t} else {\n\t\treturn\
    \ \"False\";\n\t}\n}\necho will_it_fly([1, 2], 5) . \"<br>\";\necho will_it_fly([3,\
    \ 2, 3], 1) . \"<br>\";\necho will_it_fly([3, 2, 3], 9) . \"<br>\";\necho will_it_fly([3],\
    \ 5) . \"<br>\";\nfunction candidate(...$args) {\n    return will_it_fly(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 2, 3), 9) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2), 5)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: False<br>False<br>True<br>True<br>
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp7g0lv844.php:31\n\
    Stack trace:\n#0 /tmp/tmp7g0lv844.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp7g0lv844.php\
    \ on line 31\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// will_it_fly([1, 2], 5) \u279E False \n// # 1+2 is\
    \ less than the maximum possible weight, but it's unbalanced.\n// will_it_fly([3,\
    \ 2, 3], 1) \u279E False\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// will_it_fly([3, 2, 3], 9) \u279E True\n// # 3+2+3 is less\
    \ than the maximum possible weight, and it's balanced.\n// will_it_fly([3], 5)\
    \ \u279E True\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n\t$sum = array_sum($q);\n\tif ($sum <= $w) {\n\
    \t\t$rev = array_reverse($q);\n\t\tif ($q == $rev) {\n\t\t\treturn true;\n\t\t\
    }\n\t}\n\treturn false;\n}\necho will_it_fly([1, 2], 5);\necho \"<br>\";\necho\
    \ will_it_fly([3, 2, 3], 1);\necho \"<br>\";\necho will_it_fly([3, 2, 3], 9);\n\
    echo \"<br>\";\necho will_it_fly([3], 5);\necho \"<br>\";\nfunction candidate(...$args)\
    \ {\n    return will_it_fly(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 2, 3), 9) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2), 5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: <br><br>1<br>1<br>
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// will_it_fly([1, 2], 5) \u279E False \n// # 1+2 is\
    \ less than the maximum possible weight, but it's unbalanced.\n// will_it_fly([3,\
    \ 2, 3], 1) \u279E False\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// will_it_fly([3, 2, 3], 9) \u279E True\n// # 3+2+3 is less\
    \ than the maximum possible weight, and it's balanced.\n// will_it_fly([3], 5)\
    \ \u279E True\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n\t$sum = array_sum($q);\n\t$rev = array_reverse($q);\n\
    \tif($sum <= $w && $q == $rev){\n\t\treturn \"True\";\n\t}else{\n\t\treturn \"\
    False\";\n\t}\n}\necho will_it_fly([1, 2], 5);\necho \"<br>\";\necho will_it_fly([3,\
    \ 2, 3], 1);\necho \"<br>\";\necho will_it_fly([3, 2, 3], 9);\necho \"<br>\";\n\
    echo will_it_fly([3], 5);\nfunction candidate(...$args) {\n    return will_it_fly(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 2, 3), 9) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2), 5)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: False<br>False<br>True<br>True
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp7vp_qd1h.php:34\n\
    Stack trace:\n#0 /tmp/tmp7vp_qd1h.php(42): test()\n#1 {main}\n  thrown in /tmp/tmp7vp_qd1h.php\
    \ on line 34\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// will_it_fly([1, 2], 5) \u279E False \n// # 1+2 is\
    \ less than the maximum possible weight, but it's unbalanced.\n// will_it_fly([3,\
    \ 2, 3], 1) \u279E False\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// will_it_fly([3, 2, 3], 9) \u279E True\n// # 3+2+3 is less\
    \ than the maximum possible weight, and it's balanced.\n// will_it_fly([3], 5)\
    \ \u279E True\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n\t$sum = array_sum($q);\n\t$rev = array_reverse($q);\n\
    \tif ($sum <= $w && $q == $rev) {\n\t\treturn true;\n\t} else {\n\t\treturn false;\n\
    \t}\n}\nfunction candidate(...$args) {\n    return will_it_fly(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(array(3, 2, 3), 9) !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2), 5) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3), 5) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// will_it_fly([1, 2], 5) \u279E False \n// # 1+2 is\
    \ less than the maximum possible weight, but it's unbalanced.\n// will_it_fly([3,\
    \ 2, 3], 1) \u279E False\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// will_it_fly([3, 2, 3], 9) \u279E True\n// # 3+2+3 is less\
    \ than the maximum possible weight, and it's balanced.\n// will_it_fly([3], 5)\
    \ \u279E True\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n\t$sum = array_sum($q);\n\t$rev = array_reverse($q);\n\
    \tif($sum <= $w && $q == $rev){\n\t\treturn \"True\";\n\t}else{\n\t\treturn \"\
    False\";\n\t}\n}\necho will_it_fly([1, 2], 5);\necho \"<br>\";\necho will_it_fly([3,\
    \ 2, 3], 1);\necho \"<br>\";\necho will_it_fly([3, 2, 3], 9);\necho \"<br>\";\n\
    echo will_it_fly([3], 5);\nfunction candidate(...$args) {\n    return will_it_fly(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 2, 3), 9) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2), 5)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: False<br>False<br>True<br>True
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmphh4boga8.php:34\n\
    Stack trace:\n#0 /tmp/tmphh4boga8.php(42): test()\n#1 {main}\n  thrown in /tmp/tmphh4boga8.php\
    \ on line 34\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// will_it_fly([1, 2], 5) \u279E False \n// # 1+2 is\
    \ less than the maximum possible weight, but it's unbalanced.\n// will_it_fly([3,\
    \ 2, 3], 1) \u279E False\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// will_it_fly([3, 2, 3], 9) \u279E True\n// # 3+2+3 is less\
    \ than the maximum possible weight, and it's balanced.\n// will_it_fly([3], 5)\
    \ \u279E True\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n\t$sum = array_sum($q);\n\tif($sum <= $w && $q\
    \ == array_reverse($q)){\n\t\treturn true;\n\t}\n\treturn false;\n}\necho will_it_fly([1,\
    \ 2], 5);\necho \"<br>\";\necho will_it_fly([3, 2, 3], 1);\necho \"<br>\";\necho\
    \ will_it_fly([3, 2, 3], 9);\necho \"<br>\";\necho will_it_fly([3], 5);\nfunction\
    \ candidate(...$args) {\n    return will_it_fly(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(3, 2, 3), 9) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2), 5) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3), 5) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3), 1) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3), 6) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5), 5) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: <br><br>1<br>1
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// will_it_fly([1, 2], 5) \u279E False \n// # 1+2 is\
    \ less than the maximum possible weight, but it's unbalanced.\n// will_it_fly([3,\
    \ 2, 3], 1) \u279E False\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// will_it_fly([3, 2, 3], 9) \u279E True\n// # 3+2+3 is less\
    \ than the maximum possible weight, and it's balanced.\n// will_it_fly([3], 5)\
    \ \u279E True\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n\t$sum = array_sum($q);\n\t$reverse = array_reverse($q);\n\
    \tif ($sum <= $w && $q == $reverse) {\n\t\treturn true;\n\t} else {\n\t\treturn\
    \ false;\n\t}\n}\necho will_it_fly([1, 2], 5);\necho \"<br>\";\necho will_it_fly([3,\
    \ 2, 3], 1);\necho \"<br>\";\necho will_it_fly([3, 2, 3], 9);\necho \"<br>\";\n\
    echo will_it_fly([3], 5);\necho \"<br>\";\necho will_it_fly([1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26,\
    \ 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45,\
    \ 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64,\
    \ 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83,\
    \ 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100], 100);\n\
    function candidate(...$args) {\n    return will_it_fly(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(3, 2, 3), 9) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2), 5) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3), 5) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3), 1) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3), 6) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5), 5) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: <br><br>1<br>1<br>
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// will_it_fly([1, 2], 5) \u279E False \n// # 1+2 is\
    \ less than the maximum possible weight, but it's unbalanced.\n// will_it_fly([3,\
    \ 2, 3], 1) \u279E False\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// will_it_fly([3, 2, 3], 9) \u279E True\n// # 3+2+3 is less\
    \ than the maximum possible weight, and it's balanced.\n// will_it_fly([3], 5)\
    \ \u279E True\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n\t$sum = array_sum($q);\n\t$rev = array_reverse($q);\n\
    \tif($sum <= $w && $q == $rev){\n\t\treturn true;\n\t}else{\n\t\treturn false;\n\
    \t}\n}\necho will_it_fly([3, 2, 3], 9);\nfunction candidate(...$args) {\n    return\
    \ will_it_fly(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 2, 3), 9) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2), 5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: '1'
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// will_it_fly([1, 2], 5) \u279E False \n// # 1+2 is\
    \ less than the maximum possible weight, but it's unbalanced.\n// will_it_fly([3,\
    \ 2, 3], 1) \u279E False\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// will_it_fly([3, 2, 3], 9) \u279E True\n// # 3+2+3 is less\
    \ than the maximum possible weight, and it's balanced.\n// will_it_fly([3], 5)\
    \ \u279E True\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n\t$sum = array_sum($q);\n\t$reverse = array_reverse($q);\n\
    \tif ($sum <= $w && $q == $reverse) {\n\t\treturn true;\n\t} else {\n\t\treturn\
    \ false;\n\t}\n}\necho will_it_fly([3, 2, 3], 9);\necho \"<br>\";\necho will_it_fly([3],\
    \ 5);\nfunction candidate(...$args) {\n    return will_it_fly(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(3, 2, 3), 9) !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2), 5) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3), 5) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: 1<br>1
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// will_it_fly([1, 2], 5) \u279E False \n// # 1+2 is\
    \ less than the maximum possible weight, but it's unbalanced.\n// will_it_fly([3,\
    \ 2, 3], 1) \u279E False\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// will_it_fly([3, 2, 3], 9) \u279E True\n// # 3+2+3 is less\
    \ than the maximum possible weight, and it's balanced.\n// will_it_fly([3], 5)\
    \ \u279E True\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n\t$sum = array_sum($q);\n\t$rev = array_reverse($q);\n\
    \tif($sum <= $w && $q == $rev){\n\t\treturn \"True\";\n\t}else{\n\t\treturn \"\
    False\";\n\t}\n}\necho will_it_fly([1, 2], 5);\necho \"<br>\";\necho will_it_fly([3,\
    \ 2, 3], 1);\necho \"<br>\";\necho will_it_fly([3, 2, 3], 9);\necho \"<br>\";\n\
    echo will_it_fly([3], 5);\nfunction candidate(...$args) {\n    return will_it_fly(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 2, 3), 9) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2), 5)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: False<br>False<br>True<br>True
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp_bmm5wa9.php:34\n\
    Stack trace:\n#0 /tmp/tmp_bmm5wa9.php(42): test()\n#1 {main}\n  thrown in /tmp/tmp_bmm5wa9.php\
    \ on line 34\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// will_it_fly([1, 2], 5) \u279E False \n// # 1+2 is\
    \ less than the maximum possible weight, but it's unbalanced.\n// will_it_fly([3,\
    \ 2, 3], 1) \u279E False\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// will_it_fly([3, 2, 3], 9) \u279E True\n// # 3+2+3 is less\
    \ than the maximum possible weight, and it's balanced.\n// will_it_fly([3], 5)\
    \ \u279E True\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n\t$sum = array_sum($q);\n\t$reverse = array_reverse($q);\n\
    \tif ($sum <= $w && $q == $reverse) {\n\t\treturn true;\n\t} else {\n\t\treturn\
    \ false;\n\t}\n}\necho will_it_fly([1, 2], 5);\necho \"<br>\";\necho will_it_fly([3,\
    \ 2, 3], 1);\necho \"<br>\";\necho will_it_fly([3, 2, 3], 9);\necho \"<br>\";\n\
    echo will_it_fly([3], 5);\nfunction candidate(...$args) {\n    return will_it_fly(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 2, 3), 9) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2), 5)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: <br><br>1<br>1
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// will_it_fly([1, 2], 5) \u279E False \n// # 1+2 is\
    \ less than the maximum possible weight, but it's unbalanced.\n// will_it_fly([3,\
    \ 2, 3], 1) \u279E False\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// will_it_fly([3, 2, 3], 9) \u279E True\n// # 3+2+3 is less\
    \ than the maximum possible weight, and it's balanced.\n// will_it_fly([3], 5)\
    \ \u279E True\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n\t$sum = array_sum($q);\n\tif($sum <= $w && $q\
    \ == array_reverse($q)){\n\t\treturn true;\n\t}else{\n\t\treturn false;\n\t}\n\
    }\necho will_it_fly([1, 2], 5);\necho \"<br>\";\necho will_it_fly([3, 2, 3], 1);\n\
    echo \"<br>\";\necho will_it_fly([3, 2, 3], 9);\necho \"<br>\";\necho will_it_fly([3],\
    \ 5);\nfunction candidate(...$args) {\n    return will_it_fly(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(3, 2, 3), 9) !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2), 5) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3), 5) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: <br><br>1<br>1
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// will_it_fly([1, 2], 5) \u279E False \n// # 1+2 is\
    \ less than the maximum possible weight, but it's unbalanced.\n// will_it_fly([3,\
    \ 2, 3], 1) \u279E False\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// will_it_fly([3, 2, 3], 9) \u279E True\n// # 3+2+3 is less\
    \ than the maximum possible weight, and it's balanced.\n// will_it_fly([3], 5)\
    \ \u279E True\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n\t$sum = array_sum($q);\n\t$reverse = array_reverse($q);\n\
    \tif($sum <= $w && $q == $reverse){\n\t\treturn true;\n\t}\n\treturn false;\n\
    }\necho will_it_fly([1, 2], 5);\necho \"<br>\";\necho will_it_fly([3, 2, 3], 1);\n\
    echo \"<br>\";\necho will_it_fly([3, 2, 3], 9);\necho \"<br>\";\necho will_it_fly([3],\
    \ 5);\nfunction candidate(...$args) {\n    return will_it_fly(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(3, 2, 3), 9) !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2), 5) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3), 5) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: <br><br>1<br>1
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// will_it_fly([1, 2], 5) \u279E False \n// # 1+2 is\
    \ less than the maximum possible weight, but it's unbalanced.\n// will_it_fly([3,\
    \ 2, 3], 1) \u279E False\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// will_it_fly([3, 2, 3], 9) \u279E True\n// # 3+2+3 is less\
    \ than the maximum possible weight, and it's balanced.\n// will_it_fly([3], 5)\
    \ \u279E True\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n\t$sum = array_sum($q);\n\t$reverse = array_reverse($q);\n\
    \tif ($sum <= $w && $q == $reverse) {\n\t\treturn true;\n\t} else {\n\t\treturn\
    \ false;\n\t}\n}\necho will_it_fly([1, 2], 5);\necho \"<br>\";\necho will_it_fly([3,\
    \ 2, 3], 1);\necho \"<br>\";\necho will_it_fly([3, 2, 3], 9);\necho \"<br>\";\n\
    echo will_it_fly([3], 5);\nfunction candidate(...$args) {\n    return will_it_fly(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 2, 3), 9) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2), 5)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: <br><br>1<br>1
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// will_it_fly([1, 2], 5) \u279E False \n// # 1+2 is\
    \ less than the maximum possible weight, but it's unbalanced.\n// will_it_fly([3,\
    \ 2, 3], 1) \u279E False\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// will_it_fly([3, 2, 3], 9) \u279E True\n// # 3+2+3 is less\
    \ than the maximum possible weight, and it's balanced.\n// will_it_fly([3], 5)\
    \ \u279E True\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n\t$sum = array_sum($q);\n\t$rev = array_reverse($q);\n\
    \tif($sum <= $w && $q == $rev){\n\t\treturn true;\n\t}\n\treturn false;\n}\necho\
    \ will_it_fly([1, 2], 5);\necho \"<br>\";\necho will_it_fly([3, 2, 3], 1);\necho\
    \ \"<br>\";\necho will_it_fly([3, 2, 3], 9);\necho \"<br>\";\necho will_it_fly([3],\
    \ 5);\nfunction candidate(...$args) {\n    return will_it_fly(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(3, 2, 3), 9) !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2), 5) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3), 5) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: <br><br>1<br>1
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// will_it_fly([1, 2], 5) \u279E False \n// # 1+2 is\
    \ less than the maximum possible weight, but it's unbalanced.\n// will_it_fly([3,\
    \ 2, 3], 1) \u279E False\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// will_it_fly([3, 2, 3], 9) \u279E True\n// # 3+2+3 is less\
    \ than the maximum possible weight, and it's balanced.\n// will_it_fly([3], 5)\
    \ \u279E True\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n\t$sum = array_sum($q);\n\t$rev = array_reverse($q);\n\
    \tif($sum <= $w && $q == $rev){\n\t\treturn true;\n\t}else{\n\t\treturn false;\n\
    \t}\n}\necho will_it_fly([1, 2], 5);\necho \"<br>\";\necho will_it_fly([3, 2,\
    \ 3], 1);\necho \"<br>\";\necho will_it_fly([3, 2, 3], 9);\necho \"<br>\";\necho\
    \ will_it_fly([3], 5);\nfunction candidate(...$args) {\n    return will_it_fly(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 2, 3), 9) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2), 5)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: <br><br>1<br>1
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// will_it_fly([1, 2], 5) \u279E False \n// # 1+2 is\
    \ less than the maximum possible weight, but it's unbalanced.\n// will_it_fly([3,\
    \ 2, 3], 1) \u279E False\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// will_it_fly([3, 2, 3], 9) \u279E True\n// # 3+2+3 is less\
    \ than the maximum possible weight, and it's balanced.\n// will_it_fly([3], 5)\
    \ \u279E True\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n\t$sum = array_sum($q);\n\t$reverse = array_reverse($q);\n\
    \tif($sum <= $w && $q == $reverse){\n\t\treturn \"True\";\n\t}else{\n\t\treturn\
    \ \"False\";\n\t}\n}\necho will_it_fly([3, 2, 3], 9);\nfunction candidate(...$args)\
    \ {\n    return will_it_fly(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 2, 3), 9) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2), 5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: 'True'
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmprmfju8p6.php:28\n\
    Stack trace:\n#0 /tmp/tmprmfju8p6.php(36): test()\n#1 {main}\n  thrown in /tmp/tmprmfju8p6.php\
    \ on line 28\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// will_it_fly([1, 2], 5) \u279E False \n// # 1+2 is\
    \ less than the maximum possible weight, but it's unbalanced.\n// will_it_fly([3,\
    \ 2, 3], 1) \u279E False\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// will_it_fly([3, 2, 3], 9) \u279E True\n// # 3+2+3 is less\
    \ than the maximum possible weight, and it's balanced.\n// will_it_fly([3], 5)\
    \ \u279E True\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n\t$sum = array_sum($q);\n\t$reverse = array_reverse($q);\n\
    \tif($sum <= $w && $q == $reverse){\n\t\treturn \"True\";\n\t}else{\n\t\treturn\
    \ \"False\";\n\t}\n}\necho will_it_fly([1, 2], 5);\necho \"<br>\";\necho will_it_fly([3,\
    \ 2, 3], 1);\necho \"<br>\";\necho will_it_fly([3, 2, 3], 9);\necho \"<br>\";\n\
    echo will_it_fly([3], 5);\nfunction candidate(...$args) {\n    return will_it_fly(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 2, 3), 9) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2), 5)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: False<br>False<br>True<br>True
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpm0ieso3n.php:34\n\
    Stack trace:\n#0 /tmp/tmpm0ieso3n.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpm0ieso3n.php\
    \ on line 34\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// will_it_fly([1, 2], 5) \u279E False \n// # 1+2 is\
    \ less than the maximum possible weight, but it's unbalanced.\n// will_it_fly([3,\
    \ 2, 3], 1) \u279E False\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// will_it_fly([3, 2, 3], 9) \u279E True\n// # 3+2+3 is less\
    \ than the maximum possible weight, and it's balanced.\n// will_it_fly([3], 5)\
    \ \u279E True\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n\t$sum = array_sum($q);\n\tif ($sum <= $w) {\n\
    \t\t$rev = array_reverse($q);\n\t\tif ($q == $rev) {\n\t\t\treturn true;\n\t\t\
    }\n\t}\n\treturn false;\n}\necho will_it_fly([1, 2], 5);\necho \"<br>\";\necho\
    \ will_it_fly([3, 2, 3], 1);\necho \"<br>\";\necho will_it_fly([3, 2, 3], 9);\n\
    echo \"<br>\";\necho will_it_fly([3], 5);\nfunction candidate(...$args) {\n  \
    \  return will_it_fly(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 2, 3), 9) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2), 5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: <br><br>1<br>1
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// will_it_fly([1, 2], 5) \u279E False \n// # 1+2 is\
    \ less than the maximum possible weight, but it's unbalanced.\n// will_it_fly([3,\
    \ 2, 3], 1) \u279E False\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// will_it_fly([3, 2, 3], 9) \u279E True\n// # 3+2+3 is less\
    \ than the maximum possible weight, and it's balanced.\n// will_it_fly([3], 5)\
    \ \u279E True\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n\t$sum = array_sum($q);\n\t$rev = array_reverse($q);\n\
    \tif($sum <= $w && $q == $rev){\n\t\treturn \"True\";\n\t}\n\telse{\n\t\treturn\
    \ \"False\";\n\t}\n}\necho will_it_fly([1, 2], 5);\necho \"<br>\";\necho will_it_fly([3,\
    \ 2, 3], 1);\necho \"<br>\";\necho will_it_fly([3, 2, 3], 9);\necho \"<br>\";\n\
    echo will_it_fly([3], 5);\nfunction candidate(...$args) {\n    return will_it_fly(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 2, 3), 9) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2), 5)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: False<br>False<br>True<br>True
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp5k584pai.php:35\n\
    Stack trace:\n#0 /tmp/tmp5k584pai.php(43): test()\n#1 {main}\n  thrown in /tmp/tmp5k584pai.php\
    \ on line 35\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// will_it_fly([1, 2], 5) \u279E False \n// # 1+2 is\
    \ less than the maximum possible weight, but it's unbalanced.\n// will_it_fly([3,\
    \ 2, 3], 1) \u279E False\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// will_it_fly([3, 2, 3], 9) \u279E True\n// # 3+2+3 is less\
    \ than the maximum possible weight, and it's balanced.\n// will_it_fly([3], 5)\
    \ \u279E True\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n\t$sum = array_sum($q);\n\t$reverse = array_reverse($q);\n\
    \tif($sum <= $w && $q == $reverse){\n\t\treturn \"True\";\n\t}else{\n\t\treturn\
    \ \"False\";\n\t}\n}\necho will_it_fly([1, 2], 5);\necho \"<br>\";\necho will_it_fly([3,\
    \ 2, 3], 1);\necho \"<br>\";\necho will_it_fly([3, 2, 3], 9);\necho \"<br>\";\n\
    echo will_it_fly([3], 5);\nfunction candidate(...$args) {\n    return will_it_fly(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 2, 3), 9) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2), 5)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: False<br>False<br>True<br>True
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpor2qex1l.php:34\n\
    Stack trace:\n#0 /tmp/tmpor2qex1l.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpor2qex1l.php\
    \ on line 34\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// will_it_fly([1, 2], 5) \u279E False \n// # 1+2 is\
    \ less than the maximum possible weight, but it's unbalanced.\n// will_it_fly([3,\
    \ 2, 3], 1) \u279E False\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// will_it_fly([3, 2, 3], 9) \u279E True\n// # 3+2+3 is less\
    \ than the maximum possible weight, and it's balanced.\n// will_it_fly([3], 5)\
    \ \u279E True\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n\t$sum = array_sum($q);\n\t$reverse = array_reverse($q);\n\
    \tif($sum <= $w && $q == $reverse){\n\t\treturn \"True\";\n\t}else{\n\t\treturn\
    \ \"False\";\n\t}\n}\necho will_it_fly([1, 2], 5);\necho \"<br>\";\necho will_it_fly([3,\
    \ 2, 3], 1);\necho \"<br>\";\necho will_it_fly([3, 2, 3], 9);\necho \"<br>\";\n\
    echo will_it_fly([3], 5);\nfunction candidate(...$args) {\n    return will_it_fly(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 2, 3), 9) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2), 5)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: False<br>False<br>True<br>True
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpwmmp78p8.php:34\n\
    Stack trace:\n#0 /tmp/tmpwmmp78p8.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpwmmp78p8.php\
    \ on line 34\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// will_it_fly([1, 2], 5) \u279E False \n// # 1+2 is\
    \ less than the maximum possible weight, but it's unbalanced.\n// will_it_fly([3,\
    \ 2, 3], 1) \u279E False\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// will_it_fly([3, 2, 3], 9) \u279E True\n// # 3+2+3 is less\
    \ than the maximum possible weight, and it's balanced.\n// will_it_fly([3], 5)\
    \ \u279E True\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n\t$sum = array_sum($q);\n\t$reverse = array_reverse($q);\n\
    \tif($sum <= $w && $q == $reverse){\n\t\treturn true;\n\t}else{\n\t\treturn false;\n\
    \t}\n}\necho will_it_fly([1, 2], 5);\necho \"<br>\";\necho will_it_fly([3, 2,\
    \ 3], 1);\necho \"<br>\";\necho will_it_fly([3, 2, 3], 9);\necho \"<br>\";\necho\
    \ will_it_fly([3], 5);\nfunction candidate(...$args) {\n    return will_it_fly(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 2, 3), 9) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2), 5)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: <br><br>1<br>1
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// will_it_fly([1, 2], 5) \u279E False \n// # 1+2 is\
    \ less than the maximum possible weight, but it's unbalanced.\n// will_it_fly([3,\
    \ 2, 3], 1) \u279E False\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// will_it_fly([3, 2, 3], 9) \u279E True\n// # 3+2+3 is less\
    \ than the maximum possible weight, and it's balanced.\n// will_it_fly([3], 5)\
    \ \u279E True\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n\t$sum = array_sum($q);\n\t$rev = array_reverse($q);\n\
    \tif ($sum <= $w && $q == $rev) {\n\t\treturn true;\n\t} else {\n\t\treturn false;\n\
    \t}\n}\necho will_it_fly([1, 2], 5);\necho \"<br>\";\necho will_it_fly([3, 2,\
    \ 3], 1);\necho \"<br>\";\necho will_it_fly([3, 2, 3], 9);\necho \"<br>\";\necho\
    \ will_it_fly([3], 5);\nfunction candidate(...$args) {\n    return will_it_fly(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 2, 3), 9) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2), 5)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: <br><br>1<br>1
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// will_it_fly([1, 2], 5) \u279E False \n// # 1+2 is\
    \ less than the maximum possible weight, but it's unbalanced.\n// will_it_fly([3,\
    \ 2, 3], 1) \u279E False\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// will_it_fly([3, 2, 3], 9) \u279E True\n// # 3+2+3 is less\
    \ than the maximum possible weight, and it's balanced.\n// will_it_fly([3], 5)\
    \ \u279E True\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n\t$sum = array_sum($q);\n\t$reverse = array_reverse($q);\n\
    \tif($sum <= $w && $q == $reverse){\n\t\treturn true;\n\t}else{\n\t\treturn false;\n\
    \t}\n}\necho will_it_fly([3, 2, 3], 9);\nfunction candidate(...$args) {\n    return\
    \ will_it_fly(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 2, 3), 9) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2), 5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: '1'
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// will_it_fly([1, 2], 5) \u279E False \n// # 1+2 is\
    \ less than the maximum possible weight, but it's unbalanced.\n// will_it_fly([3,\
    \ 2, 3], 1) \u279E False\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// will_it_fly([3, 2, 3], 9) \u279E True\n// # 3+2+3 is less\
    \ than the maximum possible weight, and it's balanced.\n// will_it_fly([3], 5)\
    \ \u279E True\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n\t$sum = array_sum($q);\n\t$reverse = array_reverse($q);\n\
    \tif ($sum <= $w && $q == $reverse) {\n\t\treturn \"True\";\n\t} else {\n\t\t\
    return \"False\";\n\t}\n}\necho will_it_fly([1, 2], 5);\necho \"<br>\";\necho\
    \ will_it_fly([3, 2, 3], 1);\necho \"<br>\";\necho will_it_fly([3, 2, 3], 9);\n\
    echo \"<br>\";\necho will_it_fly([3], 5);\nfunction candidate(...$args) {\n  \
    \  return will_it_fly(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 2, 3), 9) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2), 5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: False<br>False<br>True<br>True
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpw_1nk0kh.php:34\n\
    Stack trace:\n#0 /tmp/tmpw_1nk0kh.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpw_1nk0kh.php\
    \ on line 34\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// will_it_fly([1, 2], 5) \u279E False \n// # 1+2 is\
    \ less than the maximum possible weight, but it's unbalanced.\n// will_it_fly([3,\
    \ 2, 3], 1) \u279E False\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// will_it_fly([3, 2, 3], 9) \u279E True\n// # 3+2+3 is less\
    \ than the maximum possible weight, and it's balanced.\n// will_it_fly([3], 5)\
    \ \u279E True\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n\t$sum = array_sum($q);\n\t$rev = array_reverse($q);\n\
    \tif ($sum <= $w && $q == $rev) {\n\t\treturn true;\n\t} else {\n\t\treturn false;\n\
    \t}\n}\necho will_it_fly([3, 2, 3], 9);\nfunction candidate(...$args) {\n    return\
    \ will_it_fly(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 2, 3), 9) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2), 5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: '1'
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// will_it_fly([1, 2], 5) \u279E False \n// # 1+2 is\
    \ less than the maximum possible weight, but it's unbalanced.\n// will_it_fly([3,\
    \ 2, 3], 1) \u279E False\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// will_it_fly([3, 2, 3], 9) \u279E True\n// # 3+2+3 is less\
    \ than the maximum possible weight, and it's balanced.\n// will_it_fly([3], 5)\
    \ \u279E True\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n\t$sum = array_sum($q);\n\t$rev = array_reverse($q);\n\
    \tif($sum <= $w && $q == $rev){\n\t\treturn \"True\";\n\t}else{\n\t\treturn \"\
    False\";\n\t}\n}\necho will_it_fly([1, 2], 5).\"<br>\";\necho will_it_fly([3,\
    \ 2, 3], 1).\"<br>\";\necho will_it_fly([3, 2, 3], 9).\"<br>\";\necho will_it_fly([3],\
    \ 5).\"<br>\";\nfunction candidate(...$args) {\n    return will_it_fly(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 2, 3), 9) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2), 5)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: False<br>False<br>True<br>True<br>
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp9pevbrv5.php:31\n\
    Stack trace:\n#0 /tmp/tmp9pevbrv5.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp9pevbrv5.php\
    \ on line 31\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// will_it_fly([1, 2], 5) \u279E False \n// # 1+2 is\
    \ less than the maximum possible weight, but it's unbalanced.\n// will_it_fly([3,\
    \ 2, 3], 1) \u279E False\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// will_it_fly([3, 2, 3], 9) \u279E True\n// # 3+2+3 is less\
    \ than the maximum possible weight, and it's balanced.\n// will_it_fly([3], 5)\
    \ \u279E True\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n\t$sum = array_sum($q);\n\t$reverse = array_reverse($q);\n\
    \tif ($sum <= $w && $q == $reverse) {\n\t\treturn true;\n\t} else {\n\t\treturn\
    \ false;\n\t}\n}\necho will_it_fly([1, 2], 5);\necho will_it_fly([3, 2, 3], 1);\n\
    echo will_it_fly([3, 2, 3], 9);\necho will_it_fly([3], 5);\nfunction candidate(...$args)\
    \ {\n    return will_it_fly(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 2, 3), 9) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2), 5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: '11'
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// will_it_fly([1, 2], 5) \u279E False \n// # 1+2 is\
    \ less than the maximum possible weight, but it's unbalanced.\n// will_it_fly([3,\
    \ 2, 3], 1) \u279E False\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// will_it_fly([3, 2, 3], 9) \u279E True\n// # 3+2+3 is less\
    \ than the maximum possible weight, and it's balanced.\n// will_it_fly([3], 5)\
    \ \u279E True\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n\t$sum = array_sum($q);\n\t$rev = array_reverse($q);\n\
    \tif($sum <= $w && $q == $rev){\n\t\treturn true;\n\t}else{\n\t\treturn false;\n\
    \t}\n}\necho will_it_fly([1, 2], 5);\necho \"<br>\";\necho will_it_fly([3, 2,\
    \ 3], 1);\necho \"<br>\";\necho will_it_fly([3, 2, 3], 9);\necho \"<br>\";\necho\
    \ will_it_fly([3], 5);\nfunction candidate(...$args) {\n    return will_it_fly(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 2, 3), 9) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2), 5)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: <br><br>1<br>1
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// will_it_fly([1, 2], 5) \u279E False \n// # 1+2 is\
    \ less than the maximum possible weight, but it's unbalanced.\n// will_it_fly([3,\
    \ 2, 3], 1) \u279E False\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// will_it_fly([3, 2, 3], 9) \u279E True\n// # 3+2+3 is less\
    \ than the maximum possible weight, and it's balanced.\n// will_it_fly([3], 5)\
    \ \u279E True\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n\t$sum = array_sum($q);\n\t$reverse = array_reverse($q);\n\
    \tif ($sum <= $w && $q == $reverse) {\n\t\treturn true;\n\t} else {\n\t\treturn\
    \ false;\n\t}\n}\necho will_it_fly([3, 2, 3], 9);\nfunction candidate(...$args)\
    \ {\n    return will_it_fly(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 2, 3), 9) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2), 5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: '1'
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// will_it_fly([1, 2], 5) \u279E False \n// # 1+2 is\
    \ less than the maximum possible weight, but it's unbalanced.\n// will_it_fly([3,\
    \ 2, 3], 1) \u279E False\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// will_it_fly([3, 2, 3], 9) \u279E True\n// # 3+2+3 is less\
    \ than the maximum possible weight, and it's balanced.\n// will_it_fly([3], 5)\
    \ \u279E True\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n\t$sum = array_sum($q);\n\t$rev = array_reverse($q);\n\
    \tif ($sum <= $w && $q == $rev) {\n\t\treturn true;\n\t} else {\n\t\treturn false;\n\
    \t}\n}\necho will_it_fly([1, 2], 5);\necho \"<br>\";\necho will_it_fly([3, 2,\
    \ 3], 1);\necho \"<br>\";\necho will_it_fly([3, 2, 3], 9);\necho \"<br>\";\necho\
    \ will_it_fly([3], 5);\nfunction candidate(...$args) {\n    return will_it_fly(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 2, 3), 9) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2), 5)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: <br><br>1<br>1
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// will_it_fly([1, 2], 5) \u279E False \n// # 1+2 is\
    \ less than the maximum possible weight, but it's unbalanced.\n// will_it_fly([3,\
    \ 2, 3], 1) \u279E False\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// will_it_fly([3, 2, 3], 9) \u279E True\n// # 3+2+3 is less\
    \ than the maximum possible weight, and it's balanced.\n// will_it_fly([3], 5)\
    \ \u279E True\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n\t$sum = array_sum($q);\n\t$rev = array_reverse($q);\n\
    \tif($sum <= $w && $q == $rev){\n\t\treturn \"True\";\n\t}else{\n\t\treturn \"\
    False\";\n\t}\n}\necho will_it_fly([3, 2, 3], 9);\nfunction candidate(...$args)\
    \ {\n    return will_it_fly(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 2, 3), 9) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2), 5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: 'True'
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpfl36k381.php:28\n\
    Stack trace:\n#0 /tmp/tmpfl36k381.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpfl36k381.php\
    \ on line 28\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// will_it_fly([1, 2], 5) \u279E False \n// # 1+2 is\
    \ less than the maximum possible weight, but it's unbalanced.\n// will_it_fly([3,\
    \ 2, 3], 1) \u279E False\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// will_it_fly([3, 2, 3], 9) \u279E True\n// # 3+2+3 is less\
    \ than the maximum possible weight, and it's balanced.\n// will_it_fly([3], 5)\
    \ \u279E True\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n\t$sum = array_sum($q);\n\t$reverse = array_reverse($q);\n\
    \tif($sum <= $w && $q == $reverse){\n\t\treturn true;\n\t}else{\n\t\treturn false;\n\
    \t}\n}\necho will_it_fly([1, 2], 5);\necho \"<br>\";\necho will_it_fly([3, 2,\
    \ 3], 1);\necho \"<br>\";\necho will_it_fly([3, 2, 3], 9);\necho \"<br>\";\necho\
    \ will_it_fly([3], 5);\nfunction candidate(...$args) {\n    return will_it_fly(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 2, 3), 9) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2), 5)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: <br><br>1<br>1
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// will_it_fly([1, 2], 5) \u279E False \n// # 1+2 is\
    \ less than the maximum possible weight, but it's unbalanced.\n// will_it_fly([3,\
    \ 2, 3], 1) \u279E False\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// will_it_fly([3, 2, 3], 9) \u279E True\n// # 3+2+3 is less\
    \ than the maximum possible weight, and it's balanced.\n// will_it_fly([3], 5)\
    \ \u279E True\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n\t$sum = array_sum($q);\n\tif ($sum <= $w) {\n\
    \t\t$rev = array_reverse($q);\n\t\tif ($q == $rev) {\n\t\t\treturn true;\n\t\t\
    } else {\n\t\t\treturn false;\n\t\t}\n\t} else {\n\t\treturn false;\n\t}\n}\n\
    echo will_it_fly([3, 2, 3], 9);\nfunction candidate(...$args) {\n    return will_it_fly(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 2, 3), 9) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2), 5)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: '1'
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// will_it_fly([1, 2], 5) \u279E False \n// # 1+2 is\
    \ less than the maximum possible weight, but it's unbalanced.\n// will_it_fly([3,\
    \ 2, 3], 1) \u279E False\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// will_it_fly([3, 2, 3], 9) \u279E True\n// # 3+2+3 is less\
    \ than the maximum possible weight, and it's balanced.\n// will_it_fly([3], 5)\
    \ \u279E True\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n\t$sum = array_sum($q);\n\t$reverse = array_reverse($q);\n\
    \tif ($sum <= $w && $q == $reverse) {\n\t\treturn true;\n\t} else {\n\t\treturn\
    \ false;\n\t}\n}\necho will_it_fly([1, 2], 5);\necho \"<br>\";\necho will_it_fly([3,\
    \ 2, 3], 1);\necho \"<br>\";\necho will_it_fly([3, 2, 3], 9);\necho \"<br>\";\n\
    echo will_it_fly([3], 5);\nfunction candidate(...$args) {\n    return will_it_fly(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 2, 3), 9) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2), 5)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: <br><br>1<br>1
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// will_it_fly([1, 2], 5) \u279E False \n// # 1+2 is\
    \ less than the maximum possible weight, but it's unbalanced.\n// will_it_fly([3,\
    \ 2, 3], 1) \u279E False\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// will_it_fly([3, 2, 3], 9) \u279E True\n// # 3+2+3 is less\
    \ than the maximum possible weight, and it's balanced.\n// will_it_fly([3], 5)\
    \ \u279E True\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n\t$sum = array_sum($q);\n\t$rev = array_reverse($q);\n\
    \tif ($sum <= $w && $q == $rev) {\n\t\treturn true;\n\t}\n\treturn false;\n}\n\
    echo will_it_fly([1, 2], 5);\necho \"<br>\";\necho will_it_fly([3, 2, 3], 1);\n\
    echo \"<br>\";\necho will_it_fly([3, 2, 3], 9);\necho \"<br>\";\necho will_it_fly([3],\
    \ 5);\nfunction candidate(...$args) {\n    return will_it_fly(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(3, 2, 3), 9) !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2), 5) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3), 5) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: <br><br>1<br>1
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// will_it_fly([1, 2], 5) \u279E False \n// # 1+2 is\
    \ less than the maximum possible weight, but it's unbalanced.\n// will_it_fly([3,\
    \ 2, 3], 1) \u279E False\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// will_it_fly([3, 2, 3], 9) \u279E True\n// # 3+2+3 is less\
    \ than the maximum possible weight, and it's balanced.\n// will_it_fly([3], 5)\
    \ \u279E True\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n\t$sum = array_sum($q);\n\t$reverse = array_reverse($q);\n\
    \tif ($sum <= $w && $q == $reverse) {\n\t\treturn true;\n\t} else {\n\t\treturn\
    \ false;\n\t}\n}\necho will_it_fly([3, 2, 3], 9);\nfunction candidate(...$args)\
    \ {\n    return will_it_fly(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 2, 3), 9) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2), 5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: '1'
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// will_it_fly([1, 2], 5) \u279E False \n// # 1+2 is\
    \ less than the maximum possible weight, but it's unbalanced.\n// will_it_fly([3,\
    \ 2, 3], 1) \u279E False\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// will_it_fly([3, 2, 3], 9) \u279E True\n// # 3+2+3 is less\
    \ than the maximum possible weight, and it's balanced.\n// will_it_fly([3], 5)\
    \ \u279E True\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n\t$sum = array_sum($q);\n\t$rev = array_reverse($q);\n\
    \tif ($sum <= $w && $q == $rev) {\n\t\treturn true;\n\t} else {\n\t\treturn false;\n\
    \t}\n}\necho will_it_fly([1, 2], 5);\necho \"<br>\";\necho will_it_fly([3, 2,\
    \ 3], 1);\necho \"<br>\";\necho will_it_fly([3, 2, 3], 9);\necho \"<br>\";\necho\
    \ will_it_fly([3], 5);\nfunction candidate(...$args) {\n    return will_it_fly(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 2, 3), 9) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2), 5)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: <br><br>1<br>1
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// will_it_fly([1, 2], 5) \u279E False \n// # 1+2 is\
    \ less than the maximum possible weight, but it's unbalanced.\n// will_it_fly([3,\
    \ 2, 3], 1) \u279E False\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// will_it_fly([3, 2, 3], 9) \u279E True\n// # 3+2+3 is less\
    \ than the maximum possible weight, and it's balanced.\n// will_it_fly([3], 5)\
    \ \u279E True\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n\t$sum = array_sum($q);\n\tif ($sum <= $w) {\n\
    \t\t$reverse = array_reverse($q);\n\t\tif ($q == $reverse) {\n\t\t\treturn true;\n\
    \t\t}\n\t}\n\treturn false;\n}\necho will_it_fly([1, 2], 5);\nfunction candidate(...$args)\
    \ {\n    return will_it_fly(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 2, 3), 9) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2), 5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// will_it_fly([1, 2], 5) \u279E False \n// # 1+2 is\
    \ less than the maximum possible weight, but it's unbalanced.\n// will_it_fly([3,\
    \ 2, 3], 1) \u279E False\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// will_it_fly([3, 2, 3], 9) \u279E True\n// # 3+2+3 is less\
    \ than the maximum possible weight, and it's balanced.\n// will_it_fly([3], 5)\
    \ \u279E True\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n\t$sum = array_sum($q);\n\t$rev = array_reverse($q);\n\
    \tif($sum <= $w && $q == $rev){\n\t\treturn true;\n\t}else{\n\t\treturn false;\n\
    \t}\n}\necho will_it_fly([1, 2], 5);\necho \"<br>\";\necho will_it_fly([3, 2,\
    \ 3], 1);\necho \"<br>\";\necho will_it_fly([3, 2, 3], 9);\necho \"<br>\";\necho\
    \ will_it_fly([3], 5);\nfunction candidate(...$args) {\n    return will_it_fly(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 2, 3), 9) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2), 5)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: <br><br>1<br>1
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// will_it_fly([1, 2], 5) \u279E False \n// # 1+2 is\
    \ less than the maximum possible weight, but it's unbalanced.\n// will_it_fly([3,\
    \ 2, 3], 1) \u279E False\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// will_it_fly([3, 2, 3], 9) \u279E True\n// # 3+2+3 is less\
    \ than the maximum possible weight, and it's balanced.\n// will_it_fly([3], 5)\
    \ \u279E True\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n\t$sum = array_sum($q);\n\t$reverse = array_reverse($q);\n\
    \tif($sum <= $w && $q == $reverse){\n\t\treturn true;\n\t}else{\n\t\treturn false;\n\
    \t}\n}\necho will_it_fly([3, 2, 3], 9);\nfunction candidate(...$args) {\n    return\
    \ will_it_fly(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 2, 3), 9) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2), 5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: '1'
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// will_it_fly([1, 2], 5) \u279E False \n// # 1+2 is\
    \ less than the maximum possible weight, but it's unbalanced.\n// will_it_fly([3,\
    \ 2, 3], 1) \u279E False\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// will_it_fly([3, 2, 3], 9) \u279E True\n// # 3+2+3 is less\
    \ than the maximum possible weight, and it's balanced.\n// will_it_fly([3], 5)\
    \ \u279E True\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n\t$sum = array_sum($q);\n\t$rev = array_reverse($q);\n\
    \tif ($sum <= $w && $q == $rev) {\n\t\treturn true;\n\t} else {\n\t\treturn false;\n\
    \t}\n}\necho will_it_fly([1, 2], 5);\necho \"<br>\";\necho will_it_fly([3, 2,\
    \ 3], 1);\necho \"<br>\";\necho will_it_fly([3, 2, 3], 9);\necho \"<br>\";\necho\
    \ will_it_fly([3], 5);\nfunction candidate(...$args) {\n    return will_it_fly(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 2, 3), 9) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2), 5)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: <br><br>1<br>1
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// will_it_fly([1, 2], 5) \u279E False \n// # 1+2 is\
    \ less than the maximum possible weight, but it's unbalanced.\n// will_it_fly([3,\
    \ 2, 3], 1) \u279E False\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// will_it_fly([3, 2, 3], 9) \u279E True\n// # 3+2+3 is less\
    \ than the maximum possible weight, and it's balanced.\n// will_it_fly([3], 5)\
    \ \u279E True\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n\t$sum = array_sum($q);\n\t$reverse = array_reverse($q);\n\
    \tif($sum <= $w && $q == $reverse){\n\t\treturn \"True\";\n\t}else{\n\t\treturn\
    \ \"False\";\n\t}\n}\necho will_it_fly([1, 2], 5);\necho \"<br>\";\necho will_it_fly([3,\
    \ 2, 3], 1);\necho \"<br>\";\necho will_it_fly([3, 2, 3], 9);\necho \"<br>\";\n\
    echo will_it_fly([3], 5);\nfunction candidate(...$args) {\n    return will_it_fly(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 2, 3), 9) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2), 5)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: False<br>False<br>True<br>True
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp2gbod8uw.php:34\n\
    Stack trace:\n#0 /tmp/tmp2gbod8uw.php(42): test()\n#1 {main}\n  thrown in /tmp/tmp2gbod8uw.php\
    \ on line 34\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// will_it_fly([1, 2], 5) \u279E False \n// # 1+2 is\
    \ less than the maximum possible weight, but it's unbalanced.\n// will_it_fly([3,\
    \ 2, 3], 1) \u279E False\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// will_it_fly([3, 2, 3], 9) \u279E True\n// # 3+2+3 is less\
    \ than the maximum possible weight, and it's balanced.\n// will_it_fly([3], 5)\
    \ \u279E True\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n\t$sum = array_sum($q);\n\t$reverse = array_reverse($q);\n\
    \tif($sum <= $w && $q == $reverse){\n\t\treturn true;\n\t}else{\n\t\treturn false;\n\
    \t}\n}\necho will_it_fly([1, 2], 5);\necho \"<br>\";\necho will_it_fly([3, 2,\
    \ 3], 1);\necho \"<br>\";\necho will_it_fly([3, 2, 3], 9);\necho \"<br>\";\necho\
    \ will_it_fly([3], 5);\nfunction candidate(...$args) {\n    return will_it_fly(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 2, 3), 9) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2), 5)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: <br><br>1<br>1
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// will_it_fly([1, 2], 5) \u279E False \n// # 1+2 is\
    \ less than the maximum possible weight, but it's unbalanced.\n// will_it_fly([3,\
    \ 2, 3], 1) \u279E False\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// will_it_fly([3, 2, 3], 9) \u279E True\n// # 3+2+3 is less\
    \ than the maximum possible weight, and it's balanced.\n// will_it_fly([3], 5)\
    \ \u279E True\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n\t$sum = array_sum($q);\n\t$reverse = array_reverse($q);\n\
    \tif ($sum <= $w && $q == $reverse) {\n\t\treturn true;\n\t} else {\n\t\treturn\
    \ false;\n\t}\n}\nfunction candidate(...$args) {\n    return will_it_fly(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 2, 3), 9) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2), 5)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// will_it_fly([1, 2], 5) \u279E False \n// # 1+2 is\
    \ less than the maximum possible weight, but it's unbalanced.\n// will_it_fly([3,\
    \ 2, 3], 1) \u279E False\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// will_it_fly([3, 2, 3], 9) \u279E True\n// # 3+2+3 is less\
    \ than the maximum possible weight, and it's balanced.\n// will_it_fly([3], 5)\
    \ \u279E True\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n\t$sum = array_sum($q);\n\t$reverse = array_reverse($q);\n\
    \tif($sum <= $w && $q == $reverse){\n\t\treturn true;\n\t}\n\treturn false;\n\
    }\necho will_it_fly([3, 2, 3], 9);\necho \"<br>\";\necho will_it_fly([3], 5);\n\
    function candidate(...$args) {\n    return will_it_fly(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(3, 2, 3), 9) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2), 5) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3), 5) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3), 1) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3), 6) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5), 5) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: 1<br>1
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// will_it_fly([1, 2], 5) \u279E False \n// # 1+2 is\
    \ less than the maximum possible weight, but it's unbalanced.\n// will_it_fly([3,\
    \ 2, 3], 1) \u279E False\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// will_it_fly([3, 2, 3], 9) \u279E True\n// # 3+2+3 is less\
    \ than the maximum possible weight, and it's balanced.\n// will_it_fly([3], 5)\
    \ \u279E True\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n\t$sum = array_sum($q);\n\tif ($sum <= $w && $q\
    \ == array_reverse($q)) {\n\t\treturn true;\n\t} else {\n\t\treturn false;\n\t\
    }\n}\necho will_it_fly([1, 2], 5);\necho \"<br>\";\necho will_it_fly([3, 2, 3],\
    \ 1);\necho \"<br>\";\necho will_it_fly([3, 2, 3], 9);\necho \"<br>\";\necho will_it_fly([3],\
    \ 5);\nfunction candidate(...$args) {\n    return will_it_fly(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(3, 2, 3), 9) !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2), 5) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3), 5) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: <br><br>1<br>1
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// will_it_fly([1, 2], 5) \u279E False \n// # 1+2 is\
    \ less than the maximum possible weight, but it's unbalanced.\n// will_it_fly([3,\
    \ 2, 3], 1) \u279E False\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// will_it_fly([3, 2, 3], 9) \u279E True\n// # 3+2+3 is less\
    \ than the maximum possible weight, and it's balanced.\n// will_it_fly([3], 5)\
    \ \u279E True\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n\t$sum = array_sum($q);\n\tif ($sum <= $w) {\n\
    \t\t$reversed = array_reverse($q);\n\t\tif ($q == $reversed) {\n\t\t\treturn true;\n\
    \t\t}\n\t}\n\treturn false;\n}\necho will_it_fly([1, 2], 5);\necho \"<br>\";\n\
    echo will_it_fly([3, 2, 3], 1);\necho \"<br>\";\necho will_it_fly([3, 2, 3], 9);\n\
    echo \"<br>\";\necho will_it_fly([3], 5);\nfunction candidate(...$args) {\n  \
    \  return will_it_fly(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 2, 3), 9) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2), 5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: <br><br>1<br>1
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// will_it_fly([1, 2], 5) \u279E False \n// # 1+2 is\
    \ less than the maximum possible weight, but it's unbalanced.\n// will_it_fly([3,\
    \ 2, 3], 1) \u279E False\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// will_it_fly([3, 2, 3], 9) \u279E True\n// # 3+2+3 is less\
    \ than the maximum possible weight, and it's balanced.\n// will_it_fly([3], 5)\
    \ \u279E True\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n\t$sum = array_sum($q);\n\t$rev = array_reverse($q);\n\
    \tif ($sum <= $w && $q == $rev) {\n\t\treturn true;\n\t} else {\n\t\treturn false;\n\
    \t}\n}\necho will_it_fly([1, 2], 5);\necho \"<br>\";\necho will_it_fly([3, 2,\
    \ 3], 1);\necho \"<br>\";\necho will_it_fly([3, 2, 3], 9);\necho \"<br>\";\necho\
    \ will_it_fly([3], 5);\nfunction candidate(...$args) {\n    return will_it_fly(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 2, 3), 9) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2), 5)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: <br><br>1<br>1
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// will_it_fly([1, 2], 5) \u279E False \n// # 1+2 is\
    \ less than the maximum possible weight, but it's unbalanced.\n// will_it_fly([3,\
    \ 2, 3], 1) \u279E False\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// will_it_fly([3, 2, 3], 9) \u279E True\n// # 3+2+3 is less\
    \ than the maximum possible weight, and it's balanced.\n// will_it_fly([3], 5)\
    \ \u279E True\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n\t$sum = array_sum($q);\n\tif($sum <= $w && $q\
    \ == array_reverse($q)) {\n\t\treturn true;\n\t} else {\n\t\treturn false;\n\t\
    }\n}\necho will_it_fly([1, 2], 5);\necho \"<br>\";\necho will_it_fly([3, 2, 3],\
    \ 1);\necho \"<br>\";\necho will_it_fly([3, 2, 3], 9);\necho \"<br>\";\necho will_it_fly([3],\
    \ 5);\nfunction candidate(...$args) {\n    return will_it_fly(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(3, 2, 3), 9) !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2), 5) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3), 5) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: <br><br>1<br>1
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// will_it_fly([1, 2], 5) \u279E False \n// # 1+2 is\
    \ less than the maximum possible weight, but it's unbalanced.\n// will_it_fly([3,\
    \ 2, 3], 1) \u279E False\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// will_it_fly([3, 2, 3], 9) \u279E True\n// # 3+2+3 is less\
    \ than the maximum possible weight, and it's balanced.\n// will_it_fly([3], 5)\
    \ \u279E True\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n\t$sum = array_sum($q);\n\t$reverse = array_reverse($q);\n\
    \tif($sum <= $w && $q == $reverse){\n\t\treturn \"True\";\n\t}else{\n\t\treturn\
    \ \"False\";\n\t}\n}\necho will_it_fly([1, 2], 5);\necho \"<br>\";\necho will_it_fly([3,\
    \ 2, 3], 1);\necho \"<br>\";\necho will_it_fly([3, 2, 3], 9);\necho \"<br>\";\n\
    echo will_it_fly([3], 5);\nfunction candidate(...$args) {\n    return will_it_fly(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 2, 3), 9) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2), 5)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: False<br>False<br>True<br>True
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp2sdp_gfj.php:34\n\
    Stack trace:\n#0 /tmp/tmp2sdp_gfj.php(42): test()\n#1 {main}\n  thrown in /tmp/tmp2sdp_gfj.php\
    \ on line 34\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// will_it_fly([1, 2], 5) \u279E False \n// # 1+2 is\
    \ less than the maximum possible weight, but it's unbalanced.\n// will_it_fly([3,\
    \ 2, 3], 1) \u279E False\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// will_it_fly([3, 2, 3], 9) \u279E True\n// # 3+2+3 is less\
    \ than the maximum possible weight, and it's balanced.\n// will_it_fly([3], 5)\
    \ \u279E True\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n\t$sum = array_sum($q);\n\t$rev = array_reverse($q);\n\
    \tif ($sum <= $w && $q == $rev) {\n\t\treturn true;\n\t} else {\n\t\treturn false;\n\
    \t}\n}\necho will_it_fly([1, 2], 5);\necho \"<br>\";\necho will_it_fly([3, 2,\
    \ 3], 1);\necho \"<br>\";\necho will_it_fly([3, 2, 3], 9);\necho \"<br>\";\necho\
    \ will_it_fly([3], 5);\nfunction candidate(...$args) {\n    return will_it_fly(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 2, 3), 9) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2), 5)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: <br><br>1<br>1
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// will_it_fly([1, 2], 5) \u279E False \n// # 1+2 is\
    \ less than the maximum possible weight, but it's unbalanced.\n// will_it_fly([3,\
    \ 2, 3], 1) \u279E False\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// will_it_fly([3, 2, 3], 9) \u279E True\n// # 3+2+3 is less\
    \ than the maximum possible weight, and it's balanced.\n// will_it_fly([3], 5)\
    \ \u279E True\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n\t$sum = array_sum($q);\n\t$reverse = array_reverse($q);\n\
    \tif($sum <= $w && $q == $reverse){\n\t\treturn true;\n\t}else{\n\t\treturn false;\n\
    \t}\n}\necho will_it_fly([3, 2, 3], 9);\nfunction candidate(...$args) {\n    return\
    \ will_it_fly(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 2, 3), 9) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2), 5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: '1'
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// will_it_fly([1, 2], 5) \u279E False \n// # 1+2 is\
    \ less than the maximum possible weight, but it's unbalanced.\n// will_it_fly([3,\
    \ 2, 3], 1) \u279E False\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// will_it_fly([3, 2, 3], 9) \u279E True\n// # 3+2+3 is less\
    \ than the maximum possible weight, and it's balanced.\n// will_it_fly([3], 5)\
    \ \u279E True\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n\t$sum = array_sum($q);\n\t$rev = array_reverse($q);\n\
    \tif ($sum <= $w && $q == $rev) {\n\t\treturn true;\n\t} else {\n\t\treturn false;\n\
    \t}\n}\necho will_it_fly([3, 2, 3], 9);\nfunction candidate(...$args) {\n    return\
    \ will_it_fly(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 2, 3), 9) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2), 5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: '1'
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// will_it_fly([1, 2], 5) \u279E False \n// # 1+2 is\
    \ less than the maximum possible weight, but it's unbalanced.\n// will_it_fly([3,\
    \ 2, 3], 1) \u279E False\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// will_it_fly([3, 2, 3], 9) \u279E True\n// # 3+2+3 is less\
    \ than the maximum possible weight, and it's balanced.\n// will_it_fly([3], 5)\
    \ \u279E True\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n\t$sum = array_sum($q);\n\t$rev = array_reverse($q);\n\
    \tif($sum <= $w && $q == $rev){\n\t\treturn true;\n\t}else{\n\t\treturn false;\n\
    \t}\n}\necho will_it_fly([1, 2], 5);\necho \"<br>\";\necho will_it_fly([3, 2,\
    \ 3], 1);\necho \"<br>\";\necho will_it_fly([3, 2, 3], 9);\necho \"<br>\";\necho\
    \ will_it_fly([3], 5);\nfunction candidate(...$args) {\n    return will_it_fly(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 2, 3), 9) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2), 5)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: <br><br>1<br>1
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// will_it_fly([1, 2], 5) \u279E False \n// # 1+2 is\
    \ less than the maximum possible weight, but it's unbalanced.\n// will_it_fly([3,\
    \ 2, 3], 1) \u279E False\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// will_it_fly([3, 2, 3], 9) \u279E True\n// # 3+2+3 is less\
    \ than the maximum possible weight, and it's balanced.\n// will_it_fly([3], 5)\
    \ \u279E True\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n\t$sum = array_sum($q);\n\tif ($sum <= $w) {\n\
    \t\t$reverse = array_reverse($q);\n\t\tif ($q == $reverse) {\n\t\t\treturn true;\n\
    \t\t}\n\t}\n\treturn false;\n}\necho will_it_fly([3, 2, 3], 9);\nfunction candidate(...$args)\
    \ {\n    return will_it_fly(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 2, 3), 9) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2), 5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: '1'
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// will_it_fly([1, 2], 5) \u279E False \n// # 1+2 is\
    \ less than the maximum possible weight, but it's unbalanced.\n// will_it_fly([3,\
    \ 2, 3], 1) \u279E False\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// will_it_fly([3, 2, 3], 9) \u279E True\n// # 3+2+3 is less\
    \ than the maximum possible weight, and it's balanced.\n// will_it_fly([3], 5)\
    \ \u279E True\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n\t$sum = array_sum($q);\n\t$rev = array_reverse($q);\n\
    \tif ($sum <= $w && $q == $rev) {\n\t\treturn true;\n\t} else {\n\t\treturn false;\n\
    \t}\n}\necho will_it_fly([1, 2], 5);\necho \"<br>\";\necho will_it_fly([3, 2,\
    \ 3], 1);\necho \"<br>\";\necho will_it_fly([3, 2, 3], 9);\necho \"<br>\";\necho\
    \ will_it_fly([3], 5);\nfunction candidate(...$args) {\n    return will_it_fly(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 2, 3), 9) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2), 5)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: <br><br>1<br>1
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// will_it_fly([1, 2], 5) \u279E False \n// # 1+2 is\
    \ less than the maximum possible weight, but it's unbalanced.\n// will_it_fly([3,\
    \ 2, 3], 1) \u279E False\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// will_it_fly([3, 2, 3], 9) \u279E True\n// # 3+2+3 is less\
    \ than the maximum possible weight, and it's balanced.\n// will_it_fly([3], 5)\
    \ \u279E True\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n\t$sum = array_sum($q);\n\t$reverse = array_reverse($q);\n\
    \tif ($sum <= $w && $q == $reverse) {\n\t\treturn true;\n\t} else {\n\t\treturn\
    \ false;\n\t}\n}\necho will_it_fly([1, 2], 5);\necho will_it_fly([3, 2, 3], 1);\n\
    echo will_it_fly([3, 2, 3], 9);\necho will_it_fly([3], 5);\nfunction candidate(...$args)\
    \ {\n    return will_it_fly(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 2, 3), 9) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2), 5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: '11'
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// will_it_fly([1, 2], 5) \u279E False \n// # 1+2 is\
    \ less than the maximum possible weight, but it's unbalanced.\n// will_it_fly([3,\
    \ 2, 3], 1) \u279E False\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// will_it_fly([3, 2, 3], 9) \u279E True\n// # 3+2+3 is less\
    \ than the maximum possible weight, and it's balanced.\n// will_it_fly([3], 5)\
    \ \u279E True\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n\t$sum = array_sum($q);\n\t$rev = array_reverse($q);\n\
    \tif($sum <= $w && $q == $rev){\n\t\treturn true;\n\t}else{\n\t\treturn false;\n\
    \t}\n}\necho will_it_fly([1, 2], 5);\necho will_it_fly([3, 2, 3], 1);\necho will_it_fly([3,\
    \ 2, 3], 9);\necho will_it_fly([3], 5);\nfunction candidate(...$args) {\n    return\
    \ will_it_fly(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 2, 3), 9) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2), 5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: '11'
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// will_it_fly([1, 2], 5) \u279E False \n// # 1+2 is\
    \ less than the maximum possible weight, but it's unbalanced.\n// will_it_fly([3,\
    \ 2, 3], 1) \u279E False\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// will_it_fly([3, 2, 3], 9) \u279E True\n// # 3+2+3 is less\
    \ than the maximum possible weight, and it's balanced.\n// will_it_fly([3], 5)\
    \ \u279E True\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n\t$sum = array_sum($q);\n\t$reverse = array_reverse($q);\n\
    \tif ($sum <= $w && $q == $reverse) {\n\t\treturn true;\n\t} else {\n\t\treturn\
    \ false;\n\t}\n}\necho will_it_fly([1, 2], 5);\necho \"<br>\";\necho will_it_fly([3,\
    \ 2, 3], 1);\necho \"<br>\";\necho will_it_fly([3, 2, 3], 9);\necho \"<br>\";\n\
    echo will_it_fly([3], 5);\nfunction candidate(...$args) {\n    return will_it_fly(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 2, 3), 9) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2), 5)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: <br><br>1<br>1
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// will_it_fly([1, 2], 5) \u279E False \n// # 1+2 is\
    \ less than the maximum possible weight, but it's unbalanced.\n// will_it_fly([3,\
    \ 2, 3], 1) \u279E False\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// will_it_fly([3, 2, 3], 9) \u279E True\n// # 3+2+3 is less\
    \ than the maximum possible weight, and it's balanced.\n// will_it_fly([3], 5)\
    \ \u279E True\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n\t$sum = array_sum($q);\n\t$rev = array_reverse($q);\n\
    \tif($sum <= $w && $q == $rev){\n\t\treturn true;\n\t}else{\n\t\treturn false;\n\
    \t}\n}\necho will_it_fly([1, 2], 5);\necho \"<br>\";\necho will_it_fly([3, 2,\
    \ 3], 1);\necho \"<br>\";\necho will_it_fly([3, 2, 3], 9);\necho \"<br>\";\necho\
    \ will_it_fly([3], 5);\nfunction candidate(...$args) {\n    return will_it_fly(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 2, 3), 9) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2), 5)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: <br><br>1<br>1
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// will_it_fly([1, 2], 5) \u279E False \n// # 1+2 is\
    \ less than the maximum possible weight, but it's unbalanced.\n// will_it_fly([3,\
    \ 2, 3], 1) \u279E False\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// will_it_fly([3, 2, 3], 9) \u279E True\n// # 3+2+3 is less\
    \ than the maximum possible weight, and it's balanced.\n// will_it_fly([3], 5)\
    \ \u279E True\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n\t$sum = array_sum($q);\n\tif($sum <= $w){\n\t\
    \t$rev = array_reverse($q);\n\t\tif($q == $rev){\n\t\t\treturn true;\n\t\t}\n\t\
    }\n\treturn false;\n}\necho will_it_fly([3, 2, 3], 9);\nfunction candidate(...$args)\
    \ {\n    return will_it_fly(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 2, 3), 9) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2), 5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: '1'
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// will_it_fly([1, 2], 5) \u279E False \n// # 1+2 is\
    \ less than the maximum possible weight, but it's unbalanced.\n// will_it_fly([3,\
    \ 2, 3], 1) \u279E False\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// will_it_fly([3, 2, 3], 9) \u279E True\n// # 3+2+3 is less\
    \ than the maximum possible weight, and it's balanced.\n// will_it_fly([3], 5)\
    \ \u279E True\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n\t$sum = array_sum($q);\n\t$rev = array_reverse($q);\n\
    \tif($sum <= $w && $q == $rev){\n\t\treturn \"True\";\n\t}else{\n\t\treturn \"\
    False\";\n\t}\n}\necho will_it_fly([1, 2], 5);\necho \"<br>\";\necho will_it_fly([3,\
    \ 2, 3], 1);\necho \"<br>\";\necho will_it_fly([3, 2, 3], 9);\necho \"<br>\";\n\
    echo will_it_fly([3], 5);\nfunction candidate(...$args) {\n    return will_it_fly(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 2, 3), 9) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2), 5)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: False<br>False<br>True<br>True
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpjchr8416.php:34\n\
    Stack trace:\n#0 /tmp/tmpjchr8416.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpjchr8416.php\
    \ on line 34\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// will_it_fly([1, 2], 5) \u279E False \n// # 1+2 is\
    \ less than the maximum possible weight, but it's unbalanced.\n// will_it_fly([3,\
    \ 2, 3], 1) \u279E False\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// will_it_fly([3, 2, 3], 9) \u279E True\n// # 3+2+3 is less\
    \ than the maximum possible weight, and it's balanced.\n// will_it_fly([3], 5)\
    \ \u279E True\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n\t$sum = array_sum($q);\n\t$rev = array_reverse($q);\n\
    \tif($sum <= $w && $q == $rev){\n\t\treturn true;\n\t}else{\n\t\treturn false;\n\
    \t}\n}\necho will_it_fly([1, 2], 5);\necho \"<br>\";\necho will_it_fly([3, 2,\
    \ 3], 1);\necho \"<br>\";\necho will_it_fly([3, 2, 3], 9);\necho \"<br>\";\necho\
    \ will_it_fly([3], 5);\nfunction candidate(...$args) {\n    return will_it_fly(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 2, 3), 9) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2), 5)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: <br><br>1<br>1
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// will_it_fly([1, 2], 5) \u279E False \n// # 1+2 is\
    \ less than the maximum possible weight, but it's unbalanced.\n// will_it_fly([3,\
    \ 2, 3], 1) \u279E False\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// will_it_fly([3, 2, 3], 9) \u279E True\n// # 3+2+3 is less\
    \ than the maximum possible weight, and it's balanced.\n// will_it_fly([3], 5)\
    \ \u279E True\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n\t$sum = array_sum($q);\n\t$rev = array_reverse($q);\n\
    \tif ($sum <= $w && $q == $rev) {\n\t\treturn \"True\";\n\t} else {\n\t\treturn\
    \ \"False\";\n\t}\n}\necho will_it_fly([1, 2], 5) . \"<br>\";\necho will_it_fly([3,\
    \ 2, 3], 1) . \"<br>\";\necho will_it_fly([3, 2, 3], 9) . \"<br>\";\necho will_it_fly([3],\
    \ 5) . \"<br>\";\nfunction candidate(...$args) {\n    return will_it_fly(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 2, 3), 9) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2), 5)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: False<br>False<br>True<br>True<br>
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpetz0_vjv.php:31\n\
    Stack trace:\n#0 /tmp/tmpetz0_vjv.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpetz0_vjv.php\
    \ on line 31\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// will_it_fly([1, 2], 5) \u279E False \n// # 1+2 is\
    \ less than the maximum possible weight, but it's unbalanced.\n// will_it_fly([3,\
    \ 2, 3], 1) \u279E False\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// will_it_fly([3, 2, 3], 9) \u279E True\n// # 3+2+3 is less\
    \ than the maximum possible weight, and it's balanced.\n// will_it_fly([3], 5)\
    \ \u279E True\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n\t$sum = array_sum($q);\n\t$rev = array_reverse($q);\n\
    \tif($sum <= $w && $q == $rev){\n\t\treturn \"True\";\n\t}\n\telse{\n\t\treturn\
    \ \"False\";\n\t}\n}\necho will_it_fly([1, 2], 5);\necho \"<br>\";\necho will_it_fly([3,\
    \ 2, 3], 1);\necho \"<br>\";\necho will_it_fly([3, 2, 3], 9);\necho \"<br>\";\n\
    echo will_it_fly([3], 5);\nfunction candidate(...$args) {\n    return will_it_fly(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 2, 3), 9) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2), 5)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: False<br>False<br>True<br>True
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpjt48seqt.php:35\n\
    Stack trace:\n#0 /tmp/tmpjt48seqt.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpjt48seqt.php\
    \ on line 35\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// will_it_fly([1, 2], 5) \u279E False \n// # 1+2 is\
    \ less than the maximum possible weight, but it's unbalanced.\n// will_it_fly([3,\
    \ 2, 3], 1) \u279E False\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// will_it_fly([3, 2, 3], 9) \u279E True\n// # 3+2+3 is less\
    \ than the maximum possible weight, and it's balanced.\n// will_it_fly([3], 5)\
    \ \u279E True\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n\t$sum = array_sum($q);\n\t$reverse = array_reverse($q);\n\
    \tif($sum <= $w && $q == $reverse){\n\t\treturn true;\n\t}else{\n\t\treturn false;\n\
    \t}\n}\necho will_it_fly([3, 2, 3], 9);\nfunction candidate(...$args) {\n    return\
    \ will_it_fly(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 2, 3), 9) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2), 5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: '1'
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// will_it_fly([1, 2], 5) \u279E False \n// # 1+2 is\
    \ less than the maximum possible weight, but it's unbalanced.\n// will_it_fly([3,\
    \ 2, 3], 1) \u279E False\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// will_it_fly([3, 2, 3], 9) \u279E True\n// # 3+2+3 is less\
    \ than the maximum possible weight, and it's balanced.\n// will_it_fly([3], 5)\
    \ \u279E True\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n\t$sum = array_sum($q);\n\t$reverse = array_reverse($q);\n\
    \tif($sum <= $w && $q == $reverse){\n\t\treturn \"True\";\n\t}else{\n\t\treturn\
    \ \"False\";\n\t}\n}\necho will_it_fly([3, 2, 3], 9);\nfunction candidate(...$args)\
    \ {\n    return will_it_fly(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 2, 3), 9) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2), 5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: 'True'
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp62orjx7s.php:28\n\
    Stack trace:\n#0 /tmp/tmp62orjx7s.php(36): test()\n#1 {main}\n  thrown in /tmp/tmp62orjx7s.php\
    \ on line 28\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// will_it_fly([1, 2], 5) \u279E False \n// # 1+2 is\
    \ less than the maximum possible weight, but it's unbalanced.\n// will_it_fly([3,\
    \ 2, 3], 1) \u279E False\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// will_it_fly([3, 2, 3], 9) \u279E True\n// # 3+2+3 is less\
    \ than the maximum possible weight, and it's balanced.\n// will_it_fly([3], 5)\
    \ \u279E True\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n\t$sum = array_sum($q);\n\t$rev = array_reverse($q);\n\
    \tif ($sum <= $w && $q == $rev) {\n\t\treturn true;\n\t} else {\n\t\treturn false;\n\
    \t}\n}\necho will_it_fly([1, 2], 5) . \"\\n\";\necho will_it_fly([3, 2, 3], 1)\
    \ . \"\\n\";\necho will_it_fly([3, 2, 3], 9) . \"\\n\";\necho will_it_fly([3],\
    \ 5) . \"\\n\";\nfunction candidate(...$args) {\n    return will_it_fly(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 2, 3), 9) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2), 5)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "\n\n1\n1\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// will_it_fly([1, 2], 5) \u279E False \n// # 1+2 is\
    \ less than the maximum possible weight, but it's unbalanced.\n// will_it_fly([3,\
    \ 2, 3], 1) \u279E False\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// will_it_fly([3, 2, 3], 9) \u279E True\n// # 3+2+3 is less\
    \ than the maximum possible weight, and it's balanced.\n// will_it_fly([3], 5)\
    \ \u279E True\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n\t$sum = array_sum($q);\n\t$rev = array_reverse($q);\n\
    \tif($sum <= $w && $q == $rev){\n\t\treturn \"True\";\n\t}else{\n\t\treturn \"\
    False\";\n\t}\n}\necho will_it_fly([1, 2], 5);\necho \"<br>\";\necho will_it_fly([3,\
    \ 2, 3], 1);\necho \"<br>\";\necho will_it_fly([3, 2, 3], 9);\necho \"<br>\";\n\
    echo will_it_fly([3], 5);\nfunction candidate(...$args) {\n    return will_it_fly(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 2, 3), 9) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2), 5)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: False<br>False<br>True<br>True
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmptvg9ord8.php:34\n\
    Stack trace:\n#0 /tmp/tmptvg9ord8.php(42): test()\n#1 {main}\n  thrown in /tmp/tmptvg9ord8.php\
    \ on line 34\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// will_it_fly([1, 2], 5) \u279E False \n// # 1+2 is\
    \ less than the maximum possible weight, but it's unbalanced.\n// will_it_fly([3,\
    \ 2, 3], 1) \u279E False\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// will_it_fly([3, 2, 3], 9) \u279E True\n// # 3+2+3 is less\
    \ than the maximum possible weight, and it's balanced.\n// will_it_fly([3], 5)\
    \ \u279E True\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n\t$sum = array_sum($q);\n\t$rev = array_reverse($q);\n\
    \tif ($sum <= $w && $q == $rev) {\n\t\treturn true;\n\t} else {\n\t\treturn false;\n\
    \t}\n}\necho will_it_fly([1, 2], 5);\necho will_it_fly([3, 2, 3], 1);\necho will_it_fly([3,\
    \ 2, 3], 9);\necho will_it_fly([3], 5);\nfunction candidate(...$args) {\n    return\
    \ will_it_fly(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 2, 3), 9) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2), 5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: '11'
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// will_it_fly([1, 2], 5) \u279E False \n// # 1+2 is\
    \ less than the maximum possible weight, but it's unbalanced.\n// will_it_fly([3,\
    \ 2, 3], 1) \u279E False\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// will_it_fly([3, 2, 3], 9) \u279E True\n// # 3+2+3 is less\
    \ than the maximum possible weight, and it's balanced.\n// will_it_fly([3], 5)\
    \ \u279E True\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n\t$sum = array_sum($q);\n\t$palindrome = array_reverse($q);\n\
    \tif($sum <= $w && $q == $palindrome){\n\t\treturn \"True\";\n\t}else{\n\t\treturn\
    \ \"False\";\n\t}\n}\necho will_it_fly([1, 2], 5);\necho \"<br>\";\necho will_it_fly([3,\
    \ 2, 3], 1);\necho \"<br>\";\necho will_it_fly([3, 2, 3], 9);\necho \"<br>\";\n\
    echo will_it_fly([3], 5);\nfunction candidate(...$args) {\n    return will_it_fly(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 2, 3), 9) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2), 5)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: False<br>False<br>True<br>True
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpjdlm9165.php:34\n\
    Stack trace:\n#0 /tmp/tmpjdlm9165.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpjdlm9165.php\
    \ on line 34\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// will_it_fly([1, 2], 5) \u279E False \n// # 1+2 is\
    \ less than the maximum possible weight, but it's unbalanced.\n// will_it_fly([3,\
    \ 2, 3], 1) \u279E False\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// will_it_fly([3, 2, 3], 9) \u279E True\n// # 3+2+3 is less\
    \ than the maximum possible weight, and it's balanced.\n// will_it_fly([3], 5)\
    \ \u279E True\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n\t$sum = array_sum($q);\n\t$rev = array_reverse($q);\n\
    \tif ($sum <= $w && $q == $rev) {\n\t\treturn true;\n\t} else {\n\t\treturn false;\n\
    \t}\n}\necho will_it_fly([1, 2], 5);\necho \"<br>\";\necho will_it_fly([3, 2,\
    \ 3], 1);\necho \"<br>\";\necho will_it_fly([3, 2, 3], 9);\necho \"<br>\";\necho\
    \ will_it_fly([3], 5);\nfunction candidate(...$args) {\n    return will_it_fly(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 2, 3), 9) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2), 5)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: <br><br>1<br>1
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// will_it_fly([1, 2], 5) \u279E False \n// # 1+2 is\
    \ less than the maximum possible weight, but it's unbalanced.\n// will_it_fly([3,\
    \ 2, 3], 1) \u279E False\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// will_it_fly([3, 2, 3], 9) \u279E True\n// # 3+2+3 is less\
    \ than the maximum possible weight, and it's balanced.\n// will_it_fly([3], 5)\
    \ \u279E True\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n\t$sum = array_sum($q);\n\t$rev = array_reverse($q);\n\
    \tif($sum <= $w && $q == $rev){\n\t\treturn true;\n\t}\n\treturn false;\n}\necho\
    \ will_it_fly([1, 2], 5);\necho \"<br>\";\necho will_it_fly([3, 2, 3], 1);\necho\
    \ \"<br>\";\necho will_it_fly([3, 2, 3], 9);\necho \"<br>\";\necho will_it_fly([3],\
    \ 5);\nfunction candidate(...$args) {\n    return will_it_fly(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(3, 2, 3), 9) !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2), 5) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3), 5) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: <br><br>1<br>1
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// will_it_fly([1, 2], 5) \u279E False \n// # 1+2 is\
    \ less than the maximum possible weight, but it's unbalanced.\n// will_it_fly([3,\
    \ 2, 3], 1) \u279E False\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// will_it_fly([3, 2, 3], 9) \u279E True\n// # 3+2+3 is less\
    \ than the maximum possible weight, and it's balanced.\n// will_it_fly([3], 5)\
    \ \u279E True\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n\t$sum = array_sum($q);\n\t$rev = array_reverse($q);\n\
    \tif ($sum <= $w && $q == $rev) {\n\t\treturn true;\n\t} else {\n\t\treturn false;\n\
    \t}\n}\necho will_it_fly([3, 2, 3], 9);\nfunction candidate(...$args) {\n    return\
    \ will_it_fly(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 2, 3), 9) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2), 5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: '1'
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// will_it_fly([1, 2], 5) \u279E False \n// # 1+2 is\
    \ less than the maximum possible weight, but it's unbalanced.\n// will_it_fly([3,\
    \ 2, 3], 1) \u279E False\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// will_it_fly([3, 2, 3], 9) \u279E True\n// # 3+2+3 is less\
    \ than the maximum possible weight, and it's balanced.\n// will_it_fly([3], 5)\
    \ \u279E True\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n\t$sum = array_sum($q);\n\t$rev = array_reverse($q);\n\
    \tif ($sum <= $w && $q == $rev) {\n\t\treturn true;\n\t} else {\n\t\treturn false;\n\
    \t}\n}\necho will_it_fly([1, 2], 5);\necho \"<br>\";\necho will_it_fly([3, 2,\
    \ 3], 1);\necho \"<br>\";\necho will_it_fly([3, 2, 3], 9);\necho \"<br>\";\necho\
    \ will_it_fly([3], 5);\nfunction candidate(...$args) {\n    return will_it_fly(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 2, 3), 9) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2), 5)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: <br><br>1<br>1
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// will_it_fly([1, 2], 5) \u279E False \n// # 1+2 is\
    \ less than the maximum possible weight, but it's unbalanced.\n// will_it_fly([3,\
    \ 2, 3], 1) \u279E False\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// will_it_fly([3, 2, 3], 9) \u279E True\n// # 3+2+3 is less\
    \ than the maximum possible weight, and it's balanced.\n// will_it_fly([3], 5)\
    \ \u279E True\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n\t$sum = array_sum($q);\n\t$reverse = array_reverse($q);\n\
    \tif ($sum <= $w && $q == $reverse) {\n\t\treturn true;\n\t} else {\n\t\treturn\
    \ false;\n\t}\n}\necho will_it_fly([1, 2], 5);\necho will_it_fly([3, 2, 3], 1);\n\
    echo will_it_fly([3, 2, 3], 9);\necho will_it_fly([3], 5);\nfunction candidate(...$args)\
    \ {\n    return will_it_fly(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 2, 3), 9) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2), 5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: '11'
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// will_it_fly([1, 2], 5) \u279E False \n// # 1+2 is\
    \ less than the maximum possible weight, but it's unbalanced.\n// will_it_fly([3,\
    \ 2, 3], 1) \u279E False\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// will_it_fly([3, 2, 3], 9) \u279E True\n// # 3+2+3 is less\
    \ than the maximum possible weight, and it's balanced.\n// will_it_fly([3], 5)\
    \ \u279E True\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n\t$sum = array_sum($q);\n\t$reverse = array_reverse($q);\n\
    \tif($sum <= $w && $q == $reverse){\n\t\treturn true;\n\t}else{\n\t\treturn false;\n\
    \t}\n}\necho will_it_fly([1, 2], 5);\necho \"<br>\";\necho will_it_fly([3, 2,\
    \ 3], 1);\necho \"<br>\";\necho will_it_fly([3, 2, 3], 9);\necho \"<br>\";\necho\
    \ will_it_fly([3], 5);\nfunction candidate(...$args) {\n    return will_it_fly(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 2, 3), 9) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2), 5)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: <br><br>1<br>1
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// will_it_fly([1, 2], 5) \u279E False \n// # 1+2 is\
    \ less than the maximum possible weight, but it's unbalanced.\n// will_it_fly([3,\
    \ 2, 3], 1) \u279E False\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// will_it_fly([3, 2, 3], 9) \u279E True\n// # 3+2+3 is less\
    \ than the maximum possible weight, and it's balanced.\n// will_it_fly([3], 5)\
    \ \u279E True\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n\t$sum = array_sum($q);\n\t$reverse = array_reverse($q);\n\
    \tif($sum <= $w && $q == $reverse){\n\t\treturn \"True\";\n\t}else{\n\t\treturn\
    \ \"False\";\n\t}\n}\necho will_it_fly([1, 2], 5);\necho \"<br>\";\necho will_it_fly([3,\
    \ 2, 3], 1);\necho \"<br>\";\necho will_it_fly([3, 2, 3], 9);\necho \"<br>\";\n\
    echo will_it_fly([3], 5);\nfunction candidate(...$args) {\n    return will_it_fly(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 2, 3), 9) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2), 5)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: False<br>False<br>True<br>True
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp66ysnqf6.php:34\n\
    Stack trace:\n#0 /tmp/tmp66ysnqf6.php(42): test()\n#1 {main}\n  thrown in /tmp/tmp66ysnqf6.php\
    \ on line 34\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// will_it_fly([1, 2], 5) \u279E False \n// # 1+2 is\
    \ less than the maximum possible weight, but it's unbalanced.\n// will_it_fly([3,\
    \ 2, 3], 1) \u279E False\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// will_it_fly([3, 2, 3], 9) \u279E True\n// # 3+2+3 is less\
    \ than the maximum possible weight, and it's balanced.\n// will_it_fly([3], 5)\
    \ \u279E True\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n\t$sum = array_sum($q);\n\t$rev = array_reverse($q);\n\
    \tif($sum <= $w && $q == $rev){\n\t\treturn true;\n\t}\n\treturn false;\n}\necho\
    \ will_it_fly([1, 2], 5);\necho will_it_fly([3, 2, 3], 1);\necho will_it_fly([3,\
    \ 2, 3], 9);\necho will_it_fly([3], 5);\nfunction candidate(...$args) {\n    return\
    \ will_it_fly(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 2, 3), 9) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2), 5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: '11'
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// will_it_fly([1, 2], 5) \u279E False \n// # 1+2 is\
    \ less than the maximum possible weight, but it's unbalanced.\n// will_it_fly([3,\
    \ 2, 3], 1) \u279E False\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// will_it_fly([3, 2, 3], 9) \u279E True\n// # 3+2+3 is less\
    \ than the maximum possible weight, and it's balanced.\n// will_it_fly([3], 5)\
    \ \u279E True\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n\t$sum = array_sum($q);\n\t$rev = array_reverse($q);\n\
    \tif($sum <= $w && $q == $rev){\n\t\treturn true;\n\t}else{\n\t\treturn false;\n\
    \t}\n}\necho will_it_fly([3, 2, 3], 9);\nfunction candidate(...$args) {\n    return\
    \ will_it_fly(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 2, 3), 9) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2), 5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: '1'
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// will_it_fly([1, 2], 5) \u279E False \n// # 1+2 is\
    \ less than the maximum possible weight, but it's unbalanced.\n// will_it_fly([3,\
    \ 2, 3], 1) \u279E False\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// will_it_fly([3, 2, 3], 9) \u279E True\n// # 3+2+3 is less\
    \ than the maximum possible weight, and it's balanced.\n// will_it_fly([3], 5)\
    \ \u279E True\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n\t$sum = array_sum($q);\n\t$reverse = array_reverse($q);\n\
    \tif($sum <= $w && $q == $reverse){\n\t\treturn true;\n\t}\n\treturn false;\n\
    }\necho will_it_fly([1, 2], 5);\necho \"<br>\";\necho will_it_fly([3, 2, 3], 1);\n\
    echo \"<br>\";\necho will_it_fly([3, 2, 3], 9);\necho \"<br>\";\necho will_it_fly([3],\
    \ 5);\nfunction candidate(...$args) {\n    return will_it_fly(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(3, 2, 3), 9) !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2), 5) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3), 5) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: <br><br>1<br>1
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// will_it_fly([1, 2], 5) \u279E False \n// # 1+2 is\
    \ less than the maximum possible weight, but it's unbalanced.\n// will_it_fly([3,\
    \ 2, 3], 1) \u279E False\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// will_it_fly([3, 2, 3], 9) \u279E True\n// # 3+2+3 is less\
    \ than the maximum possible weight, and it's balanced.\n// will_it_fly([3], 5)\
    \ \u279E True\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n\t$sum = array_sum($q);\n\t$reverse = array_reverse($q);\n\
    \tif ($sum <= $w && $q == $reverse) {\n\t\treturn true;\n\t} else {\n\t\treturn\
    \ false;\n\t}\n}\necho will_it_fly([1, 2], 5);\necho \"<br>\";\necho will_it_fly([3,\
    \ 2, 3], 1);\necho \"<br>\";\necho will_it_fly([3, 2, 3], 9);\necho \"<br>\";\n\
    echo will_it_fly([3], 5);\nfunction candidate(...$args) {\n    return will_it_fly(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 2, 3), 9) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2), 5)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: <br><br>1<br>1
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// will_it_fly([1, 2], 5) \u279E False \n// # 1+2 is\
    \ less than the maximum possible weight, but it's unbalanced.\n// will_it_fly([3,\
    \ 2, 3], 1) \u279E False\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// will_it_fly([3, 2, 3], 9) \u279E True\n// # 3+2+3 is less\
    \ than the maximum possible weight, and it's balanced.\n// will_it_fly([3], 5)\
    \ \u279E True\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n\t$sum = array_sum($q);\n\t$reverse = array_reverse($q);\n\
    \tif($sum <= $w && $q == $reverse){\n\t\treturn true;\n\t}\n\treturn false;\n\
    }\necho will_it_fly([3, 2, 3], 9);\nfunction candidate(...$args) {\n    return\
    \ will_it_fly(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 2, 3), 9) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2), 5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: '1'
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// will_it_fly([1, 2], 5) \u279E False \n// # 1+2 is\
    \ less than the maximum possible weight, but it's unbalanced.\n// will_it_fly([3,\
    \ 2, 3], 1) \u279E False\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// will_it_fly([3, 2, 3], 9) \u279E True\n// # 3+2+3 is less\
    \ than the maximum possible weight, and it's balanced.\n// will_it_fly([3], 5)\
    \ \u279E True\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n\t$sum = array_sum($q);\n\t$rev = array_reverse($q);\n\
    \tif($sum <= $w && $q == $rev){\n\t\treturn \"True\";\n\t}else{\n\t\treturn \"\
    False\";\n\t}\n}\necho will_it_fly([1, 2], 5);\necho \"<br>\";\necho will_it_fly([3,\
    \ 2, 3], 1);\necho \"<br>\";\necho will_it_fly([3, 2, 3], 9);\necho \"<br>\";\n\
    echo will_it_fly([3], 5);\nfunction candidate(...$args) {\n    return will_it_fly(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 2, 3), 9) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2), 5)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: False<br>False<br>True<br>True
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpvu4bogvt.php:34\n\
    Stack trace:\n#0 /tmp/tmpvu4bogvt.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpvu4bogvt.php\
    \ on line 34\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// will_it_fly([1, 2], 5) \u279E False \n// # 1+2 is\
    \ less than the maximum possible weight, but it's unbalanced.\n// will_it_fly([3,\
    \ 2, 3], 1) \u279E False\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// will_it_fly([3, 2, 3], 9) \u279E True\n// # 3+2+3 is less\
    \ than the maximum possible weight, and it's balanced.\n// will_it_fly([3], 5)\
    \ \u279E True\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n\t$sum = array_sum($q);\n\t$rev = array_reverse($q);\n\
    \tif($sum <= $w && $q == $rev){\n\t\treturn \"True\";\n\t}else{\n\t\treturn \"\
    False\";\n\t}\n}\necho will_it_fly([1, 2], 5);\necho \"<br>\";\necho will_it_fly([3,\
    \ 2, 3], 1);\necho \"<br>\";\necho will_it_fly([3, 2, 3], 9);\necho \"<br>\";\n\
    echo will_it_fly([3], 5);\nfunction candidate(...$args) {\n    return will_it_fly(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 2, 3), 9) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2), 5)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: False<br>False<br>True<br>True
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmplbl1puh0.php:34\n\
    Stack trace:\n#0 /tmp/tmplbl1puh0.php(42): test()\n#1 {main}\n  thrown in /tmp/tmplbl1puh0.php\
    \ on line 34\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// will_it_fly([1, 2], 5) \u279E False \n// # 1+2 is\
    \ less than the maximum possible weight, but it's unbalanced.\n// will_it_fly([3,\
    \ 2, 3], 1) \u279E False\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// will_it_fly([3, 2, 3], 9) \u279E True\n// # 3+2+3 is less\
    \ than the maximum possible weight, and it's balanced.\n// will_it_fly([3], 5)\
    \ \u279E True\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n\t$sum = array_sum($q);\n\t$reverse = array_reverse($q);\n\
    \tif($sum <= $w && $q == $reverse){\n\t\treturn true;\n\t}\n\treturn false;\n\
    }\necho will_it_fly([3, 2, 3], 9);\nfunction candidate(...$args) {\n    return\
    \ will_it_fly(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 2, 3), 9) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2), 5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: '1'
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// will_it_fly([1, 2], 5) \u279E False \n// # 1+2 is\
    \ less than the maximum possible weight, but it's unbalanced.\n// will_it_fly([3,\
    \ 2, 3], 1) \u279E False\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// will_it_fly([3, 2, 3], 9) \u279E True\n// # 3+2+3 is less\
    \ than the maximum possible weight, and it's balanced.\n// will_it_fly([3], 5)\
    \ \u279E True\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n\t$sum = array_sum($q);\n\t$reverse = array_reverse($q);\n\
    \tif($sum <= $w && $q == $reverse){\n\t\treturn \"True\";\n\t} else {\n\t\treturn\
    \ \"False\";\n\t}\n}\necho will_it_fly([1, 2], 5);\necho \"<br>\";\necho will_it_fly([3,\
    \ 2, 3], 1);\necho \"<br>\";\necho will_it_fly([3, 2, 3], 9);\necho \"<br>\";\n\
    echo will_it_fly([3], 5);\nfunction candidate(...$args) {\n    return will_it_fly(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 2, 3), 9) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2), 5)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: False<br>False<br>True<br>True
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpl08ju3yj.php:34\n\
    Stack trace:\n#0 /tmp/tmpl08ju3yj.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpl08ju3yj.php\
    \ on line 34\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// will_it_fly([1, 2], 5) \u279E False \n// # 1+2 is\
    \ less than the maximum possible weight, but it's unbalanced.\n// will_it_fly([3,\
    \ 2, 3], 1) \u279E False\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// will_it_fly([3, 2, 3], 9) \u279E True\n// # 3+2+3 is less\
    \ than the maximum possible weight, and it's balanced.\n// will_it_fly([3], 5)\
    \ \u279E True\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n\t$sum = array_sum($q);\n\t$reverse = array_reverse($q);\n\
    \tif ($sum <= $w && $q == $reverse) {\n\t\treturn true;\n\t} else {\n\t\treturn\
    \ false;\n\t}\n}\necho will_it_fly([1, 2], 5);\necho will_it_fly([3, 2, 3], 1);\n\
    echo will_it_fly([3, 2, 3], 9);\necho will_it_fly([3], 5);\nfunction candidate(...$args)\
    \ {\n    return will_it_fly(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 2, 3), 9) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2), 5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: '11'
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// will_it_fly([1, 2], 5) \u279E False \n// # 1+2 is\
    \ less than the maximum possible weight, but it's unbalanced.\n// will_it_fly([3,\
    \ 2, 3], 1) \u279E False\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// will_it_fly([3, 2, 3], 9) \u279E True\n// # 3+2+3 is less\
    \ than the maximum possible weight, and it's balanced.\n// will_it_fly([3], 5)\
    \ \u279E True\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n\t$sum = array_sum($q);\n\t$rev = array_reverse($q);\n\
    \tif($sum <= $w && $q == $rev){\n\t\treturn true;\n\t}\n\treturn false;\n}\necho\
    \ will_it_fly([1, 2], 5);\necho \"<br>\";\necho will_it_fly([3, 2, 3], 1);\necho\
    \ \"<br>\";\necho will_it_fly([3, 2, 3], 9);\necho \"<br>\";\necho will_it_fly([3],\
    \ 5);\nfunction candidate(...$args) {\n    return will_it_fly(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(3, 2, 3), 9) !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2), 5) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3), 5) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: <br><br>1<br>1
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// will_it_fly([1, 2], 5) \u279E False \n// # 1+2 is\
    \ less than the maximum possible weight, but it's unbalanced.\n// will_it_fly([3,\
    \ 2, 3], 1) \u279E False\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// will_it_fly([3, 2, 3], 9) \u279E True\n// # 3+2+3 is less\
    \ than the maximum possible weight, and it's balanced.\n// will_it_fly([3], 5)\
    \ \u279E True\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n\t$sum = array_sum($q);\n\t$reverse = array_reverse($q);\n\
    \tif ($sum <= $w && $q == $reverse) {\n\t\treturn true;\n\t} else {\n\t\treturn\
    \ false;\n\t}\n}\necho will_it_fly([3, 2, 3], 9);\nfunction candidate(...$args)\
    \ {\n    return will_it_fly(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 2, 3), 9) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2), 5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: '1'
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// will_it_fly([1, 2], 5) \u279E False \n// # 1+2 is\
    \ less than the maximum possible weight, but it's unbalanced.\n// will_it_fly([3,\
    \ 2, 3], 1) \u279E False\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// will_it_fly([3, 2, 3], 9) \u279E True\n// # 3+2+3 is less\
    \ than the maximum possible weight, and it's balanced.\n// will_it_fly([3], 5)\
    \ \u279E True\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n\t$sum = array_sum($q);\n\t$rev = array_reverse($q);\n\
    \tif($sum <= $w && $q == $rev){\n\t\treturn \"True\";\n\t}else{\n\t\treturn \"\
    False\";\n\t}\n}\necho will_it_fly([1, 2], 5);\necho \"<br>\";\necho will_it_fly([3,\
    \ 2, 3], 1);\necho \"<br>\";\necho will_it_fly([3, 2, 3], 9);\necho \"<br>\";\n\
    echo will_it_fly([3], 5);\nfunction candidate(...$args) {\n    return will_it_fly(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 2, 3), 9) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2), 5)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: False<br>False<br>True<br>True
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpiaounbz6.php:34\n\
    Stack trace:\n#0 /tmp/tmpiaounbz6.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpiaounbz6.php\
    \ on line 34\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// will_it_fly([1, 2], 5) \u279E False \n// # 1+2 is\
    \ less than the maximum possible weight, but it's unbalanced.\n// will_it_fly([3,\
    \ 2, 3], 1) \u279E False\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// will_it_fly([3, 2, 3], 9) \u279E True\n// # 3+2+3 is less\
    \ than the maximum possible weight, and it's balanced.\n// will_it_fly([3], 5)\
    \ \u279E True\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n\t$sum = array_sum($q);\n\t$reverse = array_reverse($q);\n\
    \tif($sum <= $w && $q == $reverse){\n\t\treturn true;\n\t}else{\n\t\treturn false;\n\
    \t}\n}\necho will_it_fly([1, 2], 5);\necho \"<br>\";\necho will_it_fly([3, 2,\
    \ 3], 1);\necho \"<br>\";\necho will_it_fly([3, 2, 3], 9);\necho \"<br>\";\necho\
    \ will_it_fly([3], 5);\nfunction candidate(...$args) {\n    return will_it_fly(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 2, 3), 9) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2), 5)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: <br><br>1<br>1
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// will_it_fly([1, 2], 5) \u279E False \n// # 1+2 is\
    \ less than the maximum possible weight, but it's unbalanced.\n// will_it_fly([3,\
    \ 2, 3], 1) \u279E False\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// will_it_fly([3, 2, 3], 9) \u279E True\n// # 3+2+3 is less\
    \ than the maximum possible weight, and it's balanced.\n// will_it_fly([3], 5)\
    \ \u279E True\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n\t$sum = array_sum($q);\n\t$rev = array_reverse($q);\n\
    \tif ($sum <= $w && $q == $rev) {\n\t\treturn true;\n\t} else {\n\t\treturn false;\n\
    \t}\n}\necho will_it_fly([3, 2, 3], 9);\nfunction candidate(...$args) {\n    return\
    \ will_it_fly(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 2, 3), 9) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2), 5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: '1'
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// will_it_fly([1, 2], 5) \u279E False \n// # 1+2 is\
    \ less than the maximum possible weight, but it's unbalanced.\n// will_it_fly([3,\
    \ 2, 3], 1) \u279E False\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// will_it_fly([3, 2, 3], 9) \u279E True\n// # 3+2+3 is less\
    \ than the maximum possible weight, and it's balanced.\n// will_it_fly([3], 5)\
    \ \u279E True\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n\t$sum = array_sum($q);\n\t$rev = array_reverse($q);\n\
    \tif($sum <= $w && $q == $rev){\n\t\treturn true;\n\t}else{\n\t\treturn false;\n\
    \t}\n}\necho will_it_fly([3, 2, 3], 9);\nfunction candidate(...$args) {\n    return\
    \ will_it_fly(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 2, 3), 9) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2), 5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: '1'
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// will_it_fly([1, 2], 5) \u279E False \n// # 1+2 is\
    \ less than the maximum possible weight, but it's unbalanced.\n// will_it_fly([3,\
    \ 2, 3], 1) \u279E False\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// will_it_fly([3, 2, 3], 9) \u279E True\n// # 3+2+3 is less\
    \ than the maximum possible weight, and it's balanced.\n// will_it_fly([3], 5)\
    \ \u279E True\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n\t$sum = array_sum($q);\n\t$reverse = array_reverse($q);\n\
    \tif ($sum <= $w && $q == $reverse) {\n\t\treturn true;\n\t} else {\n\t\treturn\
    \ false;\n\t}\n}\necho will_it_fly([3, 2, 3], 9);\nfunction candidate(...$args)\
    \ {\n    return will_it_fly(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 2, 3), 9) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2), 5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: '1'
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// will_it_fly([1, 2], 5) \u279E False \n// # 1+2 is\
    \ less than the maximum possible weight, but it's unbalanced.\n// will_it_fly([3,\
    \ 2, 3], 1) \u279E False\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// will_it_fly([3, 2, 3], 9) \u279E True\n// # 3+2+3 is less\
    \ than the maximum possible weight, and it's balanced.\n// will_it_fly([3], 5)\
    \ \u279E True\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n\t$sum = array_sum($q);\n\t$reverse = array_reverse($q);\n\
    \tif($sum <= $w && $q == $reverse){\n\t\treturn true;\n\t}\n\treturn false;\n\
    }\necho will_it_fly([1, 2], 5);\necho \"<br>\";\necho will_it_fly([3, 2, 3], 1);\n\
    echo \"<br>\";\necho will_it_fly([3, 2, 3], 9);\necho \"<br>\";\necho will_it_fly([3],\
    \ 5);\nfunction candidate(...$args) {\n    return will_it_fly(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(3, 2, 3), 9) !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2), 5) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3), 5) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: <br><br>1<br>1
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// will_it_fly([1, 2], 5) \u279E False \n// # 1+2 is\
    \ less than the maximum possible weight, but it's unbalanced.\n// will_it_fly([3,\
    \ 2, 3], 1) \u279E False\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// will_it_fly([3, 2, 3], 9) \u279E True\n// # 3+2+3 is less\
    \ than the maximum possible weight, and it's balanced.\n// will_it_fly([3], 5)\
    \ \u279E True\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n\t$sum = array_sum($q);\n\t$rev = array_reverse($q);\n\
    \tif($sum <= $w && $q == $rev){\n\t\treturn true;\n\t}\n\treturn false;\n}\necho\
    \ will_it_fly([1, 2], 5);\necho \"<br>\";\necho will_it_fly([3, 2, 3], 1);\necho\
    \ \"<br>\";\necho will_it_fly([3, 2, 3], 9);\necho \"<br>\";\necho will_it_fly([3],\
    \ 5);\nfunction candidate(...$args) {\n    return will_it_fly(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(3, 2, 3), 9) !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2), 5) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3), 5) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: <br><br>1<br>1
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// will_it_fly([1, 2], 5) \u279E False \n// # 1+2 is\
    \ less than the maximum possible weight, but it's unbalanced.\n// will_it_fly([3,\
    \ 2, 3], 1) \u279E False\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// will_it_fly([3, 2, 3], 9) \u279E True\n// # 3+2+3 is less\
    \ than the maximum possible weight, and it's balanced.\n// will_it_fly([3], 5)\
    \ \u279E True\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n\t$sum = array_sum($q);\n\t$rev = array_reverse($q);\n\
    \tif ($sum <= $w && $q == $rev) {\n\t\treturn true;\n\t} else {\n\t\treturn false;\n\
    \t}\n}\necho will_it_fly([1, 2], 5);\necho \"<br>\";\necho will_it_fly([3, 2,\
    \ 3], 1);\necho \"<br>\";\necho will_it_fly([3, 2, 3], 9);\necho \"<br>\";\necho\
    \ will_it_fly([3], 5);\nfunction candidate(...$args) {\n    return will_it_fly(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 2, 3), 9) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2), 5)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: <br><br>1<br>1
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// will_it_fly([1, 2], 5) \u279E False \n// # 1+2 is\
    \ less than the maximum possible weight, but it's unbalanced.\n// will_it_fly([3,\
    \ 2, 3], 1) \u279E False\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// will_it_fly([3, 2, 3], 9) \u279E True\n// # 3+2+3 is less\
    \ than the maximum possible weight, and it's balanced.\n// will_it_fly([3], 5)\
    \ \u279E True\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n\t$sum = array_sum($q);\n\t$reverse = array_reverse($q);\n\
    \tif($sum <= $w && $q == $reverse){\n\t\treturn \"True\";\n\t}else{\n\t\treturn\
    \ \"False\";\n\t}\n}\necho will_it_fly([3, 2, 3], 9);\nfunction candidate(...$args)\
    \ {\n    return will_it_fly(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 2, 3), 9) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2), 5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: 'True'
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmppesl7sv2.php:28\n\
    Stack trace:\n#0 /tmp/tmppesl7sv2.php(36): test()\n#1 {main}\n  thrown in /tmp/tmppesl7sv2.php\
    \ on line 28\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// will_it_fly([1, 2], 5) \u279E False \n// # 1+2 is\
    \ less than the maximum possible weight, but it's unbalanced.\n// will_it_fly([3,\
    \ 2, 3], 1) \u279E False\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// will_it_fly([3, 2, 3], 9) \u279E True\n// # 3+2+3 is less\
    \ than the maximum possible weight, and it's balanced.\n// will_it_fly([3], 5)\
    \ \u279E True\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n\t$sum = array_sum($q);\n\t$reverse = array_reverse($q);\n\
    \tif($sum <= $w && $q == $reverse){\n\t\treturn \"True\";\n\t}else{\n\t\treturn\
    \ \"False\";\n\t}\n}\necho will_it_fly([1, 2], 5);\necho \"<br>\";\necho will_it_fly([3,\
    \ 2, 3], 1);\necho \"<br>\";\necho will_it_fly([3, 2, 3], 9);\necho \"<br>\";\n\
    echo will_it_fly([3], 5);\nfunction candidate(...$args) {\n    return will_it_fly(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 2, 3), 9) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2), 5)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: False<br>False<br>True<br>True
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpo584nasq.php:34\n\
    Stack trace:\n#0 /tmp/tmpo584nasq.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpo584nasq.php\
    \ on line 34\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// will_it_fly([1, 2], 5) \u279E False \n// # 1+2 is\
    \ less than the maximum possible weight, but it's unbalanced.\n// will_it_fly([3,\
    \ 2, 3], 1) \u279E False\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// will_it_fly([3, 2, 3], 9) \u279E True\n// # 3+2+3 is less\
    \ than the maximum possible weight, and it's balanced.\n// will_it_fly([3], 5)\
    \ \u279E True\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n\t$sum = array_sum($q);\n\t$rev = array_reverse($q);\n\
    \tif ($sum <= $w && $q == $rev) {\n\t\treturn true;\n\t} else {\n\t\treturn false;\n\
    \t}\n}\necho will_it_fly([1, 2], 5);\necho \"<br>\";\necho will_it_fly([3, 2,\
    \ 3], 1);\necho \"<br>\";\necho will_it_fly([3, 2, 3], 9);\necho \"<br>\";\necho\
    \ will_it_fly([3], 5);\nfunction candidate(...$args) {\n    return will_it_fly(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 2, 3), 9) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2), 5)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: <br><br>1<br>1
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// will_it_fly([1, 2], 5) \u279E False \n// # 1+2 is\
    \ less than the maximum possible weight, but it's unbalanced.\n// will_it_fly([3,\
    \ 2, 3], 1) \u279E False\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// will_it_fly([3, 2, 3], 9) \u279E True\n// # 3+2+3 is less\
    \ than the maximum possible weight, and it's balanced.\n// will_it_fly([3], 5)\
    \ \u279E True\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n\t$sum = array_sum($q);\n\t$rev = array_reverse($q);\n\
    \tif($sum <= $w && $q == $rev){\n\t\treturn true;\n\t}else{\n\t\treturn false;\n\
    \t}\n}\necho will_it_fly([1, 2], 5);\necho \"<br>\";\necho will_it_fly([3, 2,\
    \ 3], 1);\necho \"<br>\";\necho will_it_fly([3, 2, 3], 9);\necho \"<br>\";\necho\
    \ will_it_fly([3], 5);\nfunction candidate(...$args) {\n    return will_it_fly(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 2, 3), 9) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2), 5)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: <br><br>1<br>1
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// will_it_fly([1, 2], 5) \u279E False \n// # 1+2 is\
    \ less than the maximum possible weight, but it's unbalanced.\n// will_it_fly([3,\
    \ 2, 3], 1) \u279E False\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// will_it_fly([3, 2, 3], 9) \u279E True\n// # 3+2+3 is less\
    \ than the maximum possible weight, and it's balanced.\n// will_it_fly([3], 5)\
    \ \u279E True\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n\t$sum = array_sum($q);\n\t$reverse = array_reverse($q);\n\
    \tif ($sum <= $w && $q == $reverse) {\n\t\treturn true;\n\t} else {\n\t\treturn\
    \ false;\n\t}\n}\necho will_it_fly([1, 2], 5);\necho will_it_fly([3, 2, 3], 1);\n\
    echo will_it_fly([3, 2, 3], 9);\necho will_it_fly([3], 5);\nfunction candidate(...$args)\
    \ {\n    return will_it_fly(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 2, 3), 9) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2), 5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: '11'
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// will_it_fly([1, 2], 5) \u279E False \n// # 1+2 is\
    \ less than the maximum possible weight, but it's unbalanced.\n// will_it_fly([3,\
    \ 2, 3], 1) \u279E False\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// will_it_fly([3, 2, 3], 9) \u279E True\n// # 3+2+3 is less\
    \ than the maximum possible weight, and it's balanced.\n// will_it_fly([3], 5)\
    \ \u279E True\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n\t$sum = array_sum($q);\n\t$reverse = array_reverse($q);\n\
    \tif($sum <= $w && $q == $reverse){\n\t\treturn true;\n\t}else{\n\t\treturn false;\n\
    \t}\n}\necho will_it_fly([1, 2], 5);\necho \"<br>\";\necho will_it_fly([3, 2,\
    \ 3], 1);\necho \"<br>\";\necho will_it_fly([3, 2, 3], 9);\necho \"<br>\";\necho\
    \ will_it_fly([3], 5);\nfunction candidate(...$args) {\n    return will_it_fly(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 2, 3), 9) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2), 5)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: <br><br>1<br>1
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// will_it_fly([1, 2], 5) \u279E False \n// # 1+2 is\
    \ less than the maximum possible weight, but it's unbalanced.\n// will_it_fly([3,\
    \ 2, 3], 1) \u279E False\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// will_it_fly([3, 2, 3], 9) \u279E True\n// # 3+2+3 is less\
    \ than the maximum possible weight, and it's balanced.\n// will_it_fly([3], 5)\
    \ \u279E True\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n\t$sum = array_sum($q);\n\t$rev = array_reverse($q);\n\
    \tif($sum <= $w && $q == $rev){\n\t\treturn true;\n\t}\n\treturn false;\n}\necho\
    \ will_it_fly([1, 2], 5);\necho \"<br>\";\necho will_it_fly([3, 2, 3], 1);\necho\
    \ \"<br>\";\necho will_it_fly([3, 2, 3], 9);\necho \"<br>\";\necho will_it_fly([3],\
    \ 5);\nfunction candidate(...$args) {\n    return will_it_fly(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(3, 2, 3), 9) !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2), 5) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3), 5) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: <br><br>1<br>1
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// will_it_fly([1, 2], 5) \u279E False \n// # 1+2 is\
    \ less than the maximum possible weight, but it's unbalanced.\n// will_it_fly([3,\
    \ 2, 3], 1) \u279E False\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// will_it_fly([3, 2, 3], 9) \u279E True\n// # 3+2+3 is less\
    \ than the maximum possible weight, and it's balanced.\n// will_it_fly([3], 5)\
    \ \u279E True\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n\t$sum = array_sum($q);\n\t$palindrome = array_reverse($q);\n\
    \tif ($sum <= $w && $q == $palindrome) {\n\t\treturn true;\n\t} else {\n\t\treturn\
    \ false;\n\t}\n}\nfunction candidate(...$args) {\n    return will_it_fly(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 2, 3), 9) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2), 5)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// will_it_fly([1, 2], 5) \u279E False \n// # 1+2 is\
    \ less than the maximum possible weight, but it's unbalanced.\n// will_it_fly([3,\
    \ 2, 3], 1) \u279E False\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// will_it_fly([3, 2, 3], 9) \u279E True\n// # 3+2+3 is less\
    \ than the maximum possible weight, and it's balanced.\n// will_it_fly([3], 5)\
    \ \u279E True\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n\t$sum = array_sum($q);\n\tif ($sum <= $w && $q\
    \ == array_reverse($q)) {\n\t\treturn true;\n\t} else {\n\t\treturn false;\n\t\
    }\n}\necho will_it_fly([1, 2], 5);\necho \"<br>\";\necho will_it_fly([3, 2, 3],\
    \ 1);\necho \"<br>\";\necho will_it_fly([3, 2, 3], 9);\necho \"<br>\";\necho will_it_fly([3],\
    \ 5);\nfunction candidate(...$args) {\n    return will_it_fly(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(3, 2, 3), 9) !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2), 5) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3), 5) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: <br><br>1<br>1
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// will_it_fly([1, 2], 5) \u279E False \n// # 1+2 is\
    \ less than the maximum possible weight, but it's unbalanced.\n// will_it_fly([3,\
    \ 2, 3], 1) \u279E False\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// will_it_fly([3, 2, 3], 9) \u279E True\n// # 3+2+3 is less\
    \ than the maximum possible weight, and it's balanced.\n// will_it_fly([3], 5)\
    \ \u279E True\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n\t$sum = array_sum($q);\n\t$rev = array_reverse($q);\n\
    \tif($sum <= $w && $q == $rev){\n\t\treturn true;\n\t}\n\treturn false;\n}\necho\
    \ will_it_fly([3, 2, 3], 9);\nfunction candidate(...$args) {\n    return will_it_fly(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 2, 3), 9) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2), 5)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: '1'
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// will_it_fly([1, 2], 5) \u279E False \n// # 1+2 is\
    \ less than the maximum possible weight, but it's unbalanced.\n// will_it_fly([3,\
    \ 2, 3], 1) \u279E False\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// will_it_fly([3, 2, 3], 9) \u279E True\n// # 3+2+3 is less\
    \ than the maximum possible weight, and it's balanced.\n// will_it_fly([3], 5)\
    \ \u279E True\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n\t$sum = array_sum($q);\n\t$reverse = array_reverse($q);\n\
    \tif ($sum <= $w && $q == $reverse) {\n\t\treturn true;\n\t} else {\n\t\treturn\
    \ false;\n\t}\n}\necho will_it_fly([1, 2], 5);\necho \"<br>\";\necho will_it_fly([3,\
    \ 2, 3], 1);\necho \"<br>\";\necho will_it_fly([3, 2, 3], 9);\necho \"<br>\";\n\
    echo will_it_fly([3], 5);\nfunction candidate(...$args) {\n    return will_it_fly(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 2, 3), 9) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2), 5)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: <br><br>1<br>1
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// will_it_fly([1, 2], 5) \u279E False \n// # 1+2 is\
    \ less than the maximum possible weight, but it's unbalanced.\n// will_it_fly([3,\
    \ 2, 3], 1) \u279E False\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// will_it_fly([3, 2, 3], 9) \u279E True\n// # 3+2+3 is less\
    \ than the maximum possible weight, and it's balanced.\n// will_it_fly([3], 5)\
    \ \u279E True\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n\t$sum = array_sum($q);\n\t$rev = array_reverse($q);\n\
    \tif($sum <= $w && $q == $rev){\n\t\treturn \"True\";\n\t}else{\n\t\treturn \"\
    False\";\n\t}\n}\necho will_it_fly([1, 2], 5).\"<br>\";\necho will_it_fly([3,\
    \ 2, 3], 1).\"<br>\";\necho will_it_fly([3, 2, 3], 9).\"<br>\";\necho will_it_fly([3],\
    \ 5).\"<br>\";\nfunction candidate(...$args) {\n    return will_it_fly(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 2, 3), 9) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2), 5)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: False<br>False<br>True<br>True<br>
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpw1_w6iwf.php:31\n\
    Stack trace:\n#0 /tmp/tmpw1_w6iwf.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpw1_w6iwf.php\
    \ on line 31\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// will_it_fly([1, 2], 5) \u279E False \n// # 1+2 is\
    \ less than the maximum possible weight, but it's unbalanced.\n// will_it_fly([3,\
    \ 2, 3], 1) \u279E False\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// will_it_fly([3, 2, 3], 9) \u279E True\n// # 3+2+3 is less\
    \ than the maximum possible weight, and it's balanced.\n// will_it_fly([3], 5)\
    \ \u279E True\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n\t$sum = array_sum($q);\n\t$rev = array_reverse($q);\n\
    \tif($sum <= $w && $q == $rev){\n\t\treturn true;\n\t}\n\treturn false;\n}\necho\
    \ will_it_fly([1, 2], 5);\necho \"<br>\";\necho will_it_fly([3, 2, 3], 1);\necho\
    \ \"<br>\";\necho will_it_fly([3, 2, 3], 9);\necho \"<br>\";\necho will_it_fly([3],\
    \ 5);\nfunction candidate(...$args) {\n    return will_it_fly(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(3, 2, 3), 9) !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2), 5) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3), 5) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: <br><br>1<br>1
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// will_it_fly([1, 2], 5) \u279E False \n// # 1+2 is\
    \ less than the maximum possible weight, but it's unbalanced.\n// will_it_fly([3,\
    \ 2, 3], 1) \u279E False\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// will_it_fly([3, 2, 3], 9) \u279E True\n// # 3+2+3 is less\
    \ than the maximum possible weight, and it's balanced.\n// will_it_fly([3], 5)\
    \ \u279E True\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n\t$sum = array_sum($q);\n\tif ($sum > $w) {\n\t\
    \treturn false;\n\t} else {\n\t\t$reverse = array_reverse($q);\n\t\tif ($q ==\
    \ $reverse) {\n\t\t\treturn true;\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t\
    }\n}\necho will_it_fly([1, 2], 5);\necho will_it_fly([3, 2, 3], 1);\necho will_it_fly([3,\
    \ 2, 3], 9);\necho will_it_fly([3], 5);\nfunction candidate(...$args) {\n    return\
    \ will_it_fly(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 2, 3), 9) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2), 5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: '11'
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// will_it_fly([1, 2], 5) \u279E False \n// # 1+2 is\
    \ less than the maximum possible weight, but it's unbalanced.\n// will_it_fly([3,\
    \ 2, 3], 1) \u279E False\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// will_it_fly([3, 2, 3], 9) \u279E True\n// # 3+2+3 is less\
    \ than the maximum possible weight, and it's balanced.\n// will_it_fly([3], 5)\
    \ \u279E True\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n\t$sum = array_sum($q);\n\t$rev = array_reverse($q);\n\
    \tif($sum <= $w && $q == $rev){\n\t\treturn true;\n\t}\n\treturn false;\n}\necho\
    \ will_it_fly([3, 2, 3], 9);\nfunction candidate(...$args) {\n    return will_it_fly(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 2, 3), 9) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2), 5)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: '1'
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// will_it_fly([1, 2], 5) \u279E False \n// # 1+2 is\
    \ less than the maximum possible weight, but it's unbalanced.\n// will_it_fly([3,\
    \ 2, 3], 1) \u279E False\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// will_it_fly([3, 2, 3], 9) \u279E True\n// # 3+2+3 is less\
    \ than the maximum possible weight, and it's balanced.\n// will_it_fly([3], 5)\
    \ \u279E True\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n\t$sum = array_sum($q);\n\t$rev = array_reverse($q);\n\
    \tif($sum <= $w && $q == $rev){\n\t\treturn true;\n\t}\n\treturn false;\n}\necho\
    \ will_it_fly([1, 2], 5);\necho \"<br>\";\necho will_it_fly([3, 2, 3], 1);\necho\
    \ \"<br>\";\necho will_it_fly([3, 2, 3], 9);\necho \"<br>\";\necho will_it_fly([3],\
    \ 5);\nfunction candidate(...$args) {\n    return will_it_fly(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array(3, 2, 3), 9) !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2), 5) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3), 5) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: <br><br>1<br>1
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// will_it_fly([1, 2], 5) \u279E False \n// # 1+2 is\
    \ less than the maximum possible weight, but it's unbalanced.\n// will_it_fly([3,\
    \ 2, 3], 1) \u279E False\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// will_it_fly([3, 2, 3], 9) \u279E True\n// # 3+2+3 is less\
    \ than the maximum possible weight, and it's balanced.\n// will_it_fly([3], 5)\
    \ \u279E True\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n\t$sum = array_sum($q);\n\t$rev = array_reverse($q);\n\
    \tif($sum <= $w && $q == $rev){\n\t\treturn \"True\";\n\t}else{\n\t\treturn \"\
    False\";\n\t}\n}\necho will_it_fly([1, 2], 5);\necho \"<br>\";\necho will_it_fly([3,\
    \ 2, 3], 1);\necho \"<br>\";\necho will_it_fly([3, 2, 3], 9);\necho \"<br>\";\n\
    echo will_it_fly([3], 5);\nfunction candidate(...$args) {\n    return will_it_fly(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 2, 3), 9) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2), 5)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: False<br>False<br>True<br>True
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpvzp756fd.php:34\n\
    Stack trace:\n#0 /tmp/tmpvzp756fd.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpvzp756fd.php\
    \ on line 34\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// will_it_fly([1, 2], 5) \u279E False \n// # 1+2 is\
    \ less than the maximum possible weight, but it's unbalanced.\n// will_it_fly([3,\
    \ 2, 3], 1) \u279E False\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// will_it_fly([3, 2, 3], 9) \u279E True\n// # 3+2+3 is less\
    \ than the maximum possible weight, and it's balanced.\n// will_it_fly([3], 5)\
    \ \u279E True\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n\t$sum = array_sum($q);\n\t$reverse = array_reverse($q);\n\
    \tif ($sum <= $w && $q == $reverse) {\n\t\treturn \"True\";\n\t} else {\n\t\t\
    return \"False\";\n\t}\n}\necho will_it_fly([1, 2], 5) . \"<br>\";\necho will_it_fly([3,\
    \ 2, 3], 1) . \"<br>\";\necho will_it_fly([3, 2, 3], 9) . \"<br>\";\necho will_it_fly([3],\
    \ 5) . \"<br>\";\nfunction candidate(...$args) {\n    return will_it_fly(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 2, 3), 9) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2), 5)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: False<br>False<br>True<br>True<br>
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpnt1g4id6.php:31\n\
    Stack trace:\n#0 /tmp/tmpnt1g4id6.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpnt1g4id6.php\
    \ on line 31\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// will_it_fly([1, 2], 5) \u279E False \n// # 1+2 is\
    \ less than the maximum possible weight, but it's unbalanced.\n// will_it_fly([3,\
    \ 2, 3], 1) \u279E False\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// will_it_fly([3, 2, 3], 9) \u279E True\n// # 3+2+3 is less\
    \ than the maximum possible weight, and it's balanced.\n// will_it_fly([3], 5)\
    \ \u279E True\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n\t$sum = array_sum($q);\n\tif($sum <= $w && $q\
    \ == array_reverse($q)){\n\t\treturn true;\n\t}\n\treturn false;\n}\necho will_it_fly([1,\
    \ 2], 5);\necho \"<br>\";\necho will_it_fly([3, 2, 3], 1);\necho \"<br>\";\necho\
    \ will_it_fly([3, 2, 3], 9);\necho \"<br>\";\necho will_it_fly([3], 5);\nfunction\
    \ candidate(...$args) {\n    return will_it_fly(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(3, 2, 3), 9) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2), 5) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3), 5) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(3, 2, 3), 1) !== false) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3), 6) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5), 5) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: <br><br>1<br>1
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// will_it_fly([1, 2], 5) \u279E False \n// # 1+2 is\
    \ less than the maximum possible weight, but it's unbalanced.\n// will_it_fly([3,\
    \ 2, 3], 1) \u279E False\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// will_it_fly([3, 2, 3], 9) \u279E True\n// # 3+2+3 is less\
    \ than the maximum possible weight, and it's balanced.\n// will_it_fly([3], 5)\
    \ \u279E True\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n\t$sum = array_sum($q);\n\t$rev = array_reverse($q);\n\
    \tif($sum <= $w && $q == $rev){\n\t\treturn \"True\";\n\t}else{\n\t\treturn \"\
    False\";\n\t}\n}\necho will_it_fly([1, 2], 5);\necho \"<br>\";\necho will_it_fly([3,\
    \ 2, 3], 1);\necho \"<br>\";\necho will_it_fly([3, 2, 3], 9);\necho \"<br>\";\n\
    echo will_it_fly([3], 5);\nfunction candidate(...$args) {\n    return will_it_fly(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 2, 3), 9) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2), 5)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: False<br>False<br>True<br>True
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpt4s6726v.php:34\n\
    Stack trace:\n#0 /tmp/tmpt4s6726v.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpt4s6726v.php\
    \ on line 34\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// will_it_fly([1, 2], 5) \u279E False \n// # 1+2 is\
    \ less than the maximum possible weight, but it's unbalanced.\n// will_it_fly([3,\
    \ 2, 3], 1) \u279E False\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// will_it_fly([3, 2, 3], 9) \u279E True\n// # 3+2+3 is less\
    \ than the maximum possible weight, and it's balanced.\n// will_it_fly([3], 5)\
    \ \u279E True\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n\t$sum = array_sum($q);\n\t$reverse = array_reverse($q);\n\
    \tif($sum <= $w && $q == $reverse){\n\t\treturn \"True\";\n\t}else{\n\t\treturn\
    \ \"False\";\n\t}\n}\necho will_it_fly([1, 2], 5);\necho \"<br>\";\necho will_it_fly([3,\
    \ 2, 3], 1);\necho \"<br>\";\necho will_it_fly([3, 2, 3], 9);\necho \"<br>\";\n\
    echo will_it_fly([3], 5);\nfunction candidate(...$args) {\n    return will_it_fly(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 2, 3), 9) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2), 5)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: False<br>False<br>True<br>True
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpvzkwx5bu.php:34\n\
    Stack trace:\n#0 /tmp/tmpvzkwx5bu.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpvzkwx5bu.php\
    \ on line 34\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// will_it_fly([1, 2], 5) \u279E False \n// # 1+2 is\
    \ less than the maximum possible weight, but it's unbalanced.\n// will_it_fly([3,\
    \ 2, 3], 1) \u279E False\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// will_it_fly([3, 2, 3], 9) \u279E True\n// # 3+2+3 is less\
    \ than the maximum possible weight, and it's balanced.\n// will_it_fly([3], 5)\
    \ \u279E True\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n\t$sum = array_sum($q);\n\t$reverse = array_reverse($q);\n\
    \tif ($sum <= $w && $q == $reverse) {\n\t\treturn \"True\";\n\t} else {\n\t\t\
    return \"False\";\n\t}\n}\necho will_it_fly([3, 2, 3], 9);\nfunction candidate(...$args)\
    \ {\n    return will_it_fly(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 2, 3), 9) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2), 5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: 'True'
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpmvukq05m.php:28\n\
    Stack trace:\n#0 /tmp/tmpmvukq05m.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpmvukq05m.php\
    \ on line 28\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// will_it_fly([1, 2], 5) \u279E False \n// # 1+2 is\
    \ less than the maximum possible weight, but it's unbalanced.\n// will_it_fly([3,\
    \ 2, 3], 1) \u279E False\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// will_it_fly([3, 2, 3], 9) \u279E True\n// # 3+2+3 is less\
    \ than the maximum possible weight, and it's balanced.\n// will_it_fly([3], 5)\
    \ \u279E True\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n\t$sum = array_sum($q);\n\t$rev = array_reverse($q);\n\
    \tif($sum <= $w && $q == $rev){\n\t\treturn \"True\";\n\t}else{\n\t\treturn \"\
    False\";\n\t}\n}\necho will_it_fly([1, 2], 5);\necho \"<br>\";\necho will_it_fly([3,\
    \ 2, 3], 1);\necho \"<br>\";\necho will_it_fly([3, 2, 3], 9);\necho \"<br>\";\n\
    echo will_it_fly([3], 5);\nfunction candidate(...$args) {\n    return will_it_fly(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 2, 3), 9) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2), 5)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: False<br>False<br>True<br>True
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpwynje_8m.php:34\n\
    Stack trace:\n#0 /tmp/tmpwynje_8m.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpwynje_8m.php\
    \ on line 34\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// will_it_fly([1, 2], 5) \u279E False \n// # 1+2 is\
    \ less than the maximum possible weight, but it's unbalanced.\n// will_it_fly([3,\
    \ 2, 3], 1) \u279E False\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// will_it_fly([3, 2, 3], 9) \u279E True\n// # 3+2+3 is less\
    \ than the maximum possible weight, and it's balanced.\n// will_it_fly([3], 5)\
    \ \u279E True\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n\t$sum = array_sum($q);\n\t$rev = array_reverse($q);\n\
    \tif($sum <= $w && $q == $rev){\n\t\treturn true;\n\t}else{\n\t\treturn false;\n\
    \t}\n}\necho will_it_fly([1, 2], 5);\necho \"<br>\";\necho will_it_fly([3, 2,\
    \ 3], 1);\necho \"<br>\";\necho will_it_fly([3, 2, 3], 9);\necho \"<br>\";\necho\
    \ will_it_fly([3], 5);\nfunction candidate(...$args) {\n    return will_it_fly(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 2, 3), 9) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2), 5)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: <br><br>1<br>1
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// will_it_fly([1, 2], 5) \u279E False \n// # 1+2 is\
    \ less than the maximum possible weight, but it's unbalanced.\n// will_it_fly([3,\
    \ 2, 3], 1) \u279E False\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// will_it_fly([3, 2, 3], 9) \u279E True\n// # 3+2+3 is less\
    \ than the maximum possible weight, and it's balanced.\n// will_it_fly([3], 5)\
    \ \u279E True\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n\t$sum = array_sum($q);\n\t$reverse = array_reverse($q);\n\
    \tif ($sum <= $w && $q == $reverse) {\n\t\treturn true;\n\t} else {\n\t\treturn\
    \ false;\n\t}\n}\necho will_it_fly([1, 2], 5);\necho \"<br>\";\necho will_it_fly([3,\
    \ 2, 3], 1);\necho \"<br>\";\necho will_it_fly([3, 2, 3], 9);\necho \"<br>\";\n\
    echo will_it_fly([3], 5);\nfunction candidate(...$args) {\n    return will_it_fly(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 2, 3), 9) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2), 5)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: <br><br>1<br>1
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// will_it_fly([1, 2], 5) \u279E False \n// # 1+2 is\
    \ less than the maximum possible weight, but it's unbalanced.\n// will_it_fly([3,\
    \ 2, 3], 1) \u279E False\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// will_it_fly([3, 2, 3], 9) \u279E True\n// # 3+2+3 is less\
    \ than the maximum possible weight, and it's balanced.\n// will_it_fly([3], 5)\
    \ \u279E True\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n\t$sum = array_sum($q);\n\t$rev = array_reverse($q);\n\
    \tif($sum <= $w && $q == $rev){\n\t\treturn true;\n\t}else{\n\t\treturn false;\n\
    \t}\n}\necho will_it_fly([1, 2], 5);\necho \"<br>\";\necho will_it_fly([3, 2,\
    \ 3], 1);\necho \"<br>\";\necho will_it_fly([3, 2, 3], 9);\necho \"<br>\";\necho\
    \ will_it_fly([3], 5);\nfunction candidate(...$args) {\n    return will_it_fly(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 2, 3), 9) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2), 5)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: <br><br>1<br>1
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// will_it_fly([1, 2], 5) \u279E False \n// # 1+2 is\
    \ less than the maximum possible weight, but it's unbalanced.\n// will_it_fly([3,\
    \ 2, 3], 1) \u279E False\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// will_it_fly([3, 2, 3], 9) \u279E True\n// # 3+2+3 is less\
    \ than the maximum possible weight, and it's balanced.\n// will_it_fly([3], 5)\
    \ \u279E True\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n\t$sum = array_sum($q);\n\t$reverse = array_reverse($q);\n\
    \tif ($sum <= $w && $q == $reverse) {\n\t\treturn true;\n\t} else {\n\t\treturn\
    \ false;\n\t}\n}\necho will_it_fly([1, 2], 5);\necho \"<br>\";\necho will_it_fly([3,\
    \ 2, 3], 1);\necho \"<br>\";\necho will_it_fly([3, 2, 3], 9);\necho \"<br>\";\n\
    echo will_it_fly([3], 5);\nfunction candidate(...$args) {\n    return will_it_fly(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 2, 3), 9) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2), 5)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: <br><br>1<br>1
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// will_it_fly([1, 2], 5) \u279E False \n// # 1+2 is\
    \ less than the maximum possible weight, but it's unbalanced.\n// will_it_fly([3,\
    \ 2, 3], 1) \u279E False\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// will_it_fly([3, 2, 3], 9) \u279E True\n// # 3+2+3 is less\
    \ than the maximum possible weight, and it's balanced.\n// will_it_fly([3], 5)\
    \ \u279E True\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n\t$sum = array_sum($q);\n\t$rev = array_reverse($q);\n\
    \tif($sum <= $w && $q == $rev){\n\t\treturn true;\n\t}else{\n\t\treturn false;\n\
    \t}\n}\necho will_it_fly([3, 2, 3], 9);\nfunction candidate(...$args) {\n    return\
    \ will_it_fly(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 2, 3), 9) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2), 5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: '1'
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// will_it_fly([1, 2], 5) \u279E False \n// # 1+2 is\
    \ less than the maximum possible weight, but it's unbalanced.\n// will_it_fly([3,\
    \ 2, 3], 1) \u279E False\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// will_it_fly([3, 2, 3], 9) \u279E True\n// # 3+2+3 is less\
    \ than the maximum possible weight, and it's balanced.\n// will_it_fly([3], 5)\
    \ \u279E True\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n\t$sum = array_sum($q);\n\t$rev = array_reverse($q);\n\
    \tif ($sum <= $w && $q == $rev) {\n\t\treturn true;\n\t} else {\n\t\treturn false;\n\
    \t}\n}\necho will_it_fly([1, 2], 5);\necho \"<br>\";\necho will_it_fly([3, 2,\
    \ 3], 1);\necho \"<br>\";\necho will_it_fly([3, 2, 3], 9);\necho \"<br>\";\necho\
    \ will_it_fly([3], 5);\nfunction candidate(...$args) {\n    return will_it_fly(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 2, 3), 9) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2), 5)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: <br><br>1<br>1
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// will_it_fly([1, 2], 5) \u279E False \n// # 1+2 is\
    \ less than the maximum possible weight, but it's unbalanced.\n// will_it_fly([3,\
    \ 2, 3], 1) \u279E False\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// will_it_fly([3, 2, 3], 9) \u279E True\n// # 3+2+3 is less\
    \ than the maximum possible weight, and it's balanced.\n// will_it_fly([3], 5)\
    \ \u279E True\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n\t$sum = array_sum($q);\n\t$reverse = array_reverse($q);\n\
    \tif($sum <= $w && $q == $reverse){\n\t\treturn true;\n\t}\n\treturn false;\n\
    }\necho will_it_fly([3, 2, 3], 9);\necho \"<br>\";\necho will_it_fly([3], 5);\n\
    echo \"<br>\";\necho will_it_fly([1, 2], 5);\necho \"<br>\";\necho will_it_fly([3,\
    \ 2, 3], 1);\nfunction candidate(...$args) {\n    return will_it_fly(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 2, 3), 9) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2), 5)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: 1<br>1<br><br>
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// will_it_fly([1, 2], 5) \u279E False \n// # 1+2 is\
    \ less than the maximum possible weight, but it's unbalanced.\n// will_it_fly([3,\
    \ 2, 3], 1) \u279E False\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// will_it_fly([3, 2, 3], 9) \u279E True\n// # 3+2+3 is less\
    \ than the maximum possible weight, and it's balanced.\n// will_it_fly([3], 5)\
    \ \u279E True\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n\t$sum = array_sum($q);\n\t$rev = array_reverse($q);\n\
    \tif ($sum <= $w && $q == $rev) {\n\t\treturn true;\n\t} else {\n\t\treturn false;\n\
    \t}\n}\necho will_it_fly([1, 2], 5);\necho \"<br>\";\necho will_it_fly([3, 2,\
    \ 3], 1);\necho \"<br>\";\necho will_it_fly([3, 2, 3], 9);\necho \"<br>\";\necho\
    \ will_it_fly([3], 5);\nfunction candidate(...$args) {\n    return will_it_fly(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 2, 3), 9) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2), 5)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: <br><br>1<br>1
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// will_it_fly([1, 2], 5) \u279E False \n// # 1+2 is\
    \ less than the maximum possible weight, but it's unbalanced.\n// will_it_fly([3,\
    \ 2, 3], 1) \u279E False\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// will_it_fly([3, 2, 3], 9) \u279E True\n// # 3+2+3 is less\
    \ than the maximum possible weight, and it's balanced.\n// will_it_fly([3], 5)\
    \ \u279E True\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n\t$sum = array_sum($q);\n\t$rev = array_reverse($q);\n\
    \tif ($sum <= $w && $q == $rev) {\n\t\treturn true;\n\t} else {\n\t\treturn false;\n\
    \t}\n}\necho will_it_fly([1, 2], 5);\necho \"<br>\";\necho will_it_fly([3, 2,\
    \ 3], 1);\necho \"<br>\";\necho will_it_fly([3, 2, 3], 9);\necho \"<br>\";\necho\
    \ will_it_fly([3], 5);\nfunction candidate(...$args) {\n    return will_it_fly(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 2, 3), 9) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2), 5)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: <br><br>1<br>1
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// will_it_fly([1, 2], 5) \u279E False \n// # 1+2 is\
    \ less than the maximum possible weight, but it's unbalanced.\n// will_it_fly([3,\
    \ 2, 3], 1) \u279E False\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// will_it_fly([3, 2, 3], 9) \u279E True\n// # 3+2+3 is less\
    \ than the maximum possible weight, and it's balanced.\n// will_it_fly([3], 5)\
    \ \u279E True\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n\t$sum = array_sum($q);\n\t$rev = array_reverse($q);\n\
    \tif ($sum <= $w && $q == $rev) {\n\t\treturn true;\n\t} else {\n\t\treturn false;\n\
    \t}\n}\necho will_it_fly([3, 2, 3], 9);\nfunction candidate(...$args) {\n    return\
    \ will_it_fly(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 2, 3), 9) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2), 5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: '1'
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// will_it_fly([1, 2], 5) \u279E False \n// # 1+2 is\
    \ less than the maximum possible weight, but it's unbalanced.\n// will_it_fly([3,\
    \ 2, 3], 1) \u279E False\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// will_it_fly([3, 2, 3], 9) \u279E True\n// # 3+2+3 is less\
    \ than the maximum possible weight, and it's balanced.\n// will_it_fly([3], 5)\
    \ \u279E True\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n\t$sum = array_sum($q);\n\t$reverse = array_reverse($q);\n\
    \tif ($sum <= $w && $q == $reverse) {\n\t\treturn true;\n\t} else {\n\t\treturn\
    \ false;\n\t}\n}\necho will_it_fly([3, 2, 3], 9);\nfunction candidate(...$args)\
    \ {\n    return will_it_fly(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 2, 3), 9) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2), 5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: '1'
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// will_it_fly([1, 2], 5) \u279E False \n// # 1+2 is\
    \ less than the maximum possible weight, but it's unbalanced.\n// will_it_fly([3,\
    \ 2, 3], 1) \u279E False\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// will_it_fly([3, 2, 3], 9) \u279E True\n// # 3+2+3 is less\
    \ than the maximum possible weight, and it's balanced.\n// will_it_fly([3], 5)\
    \ \u279E True\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n\t$sum = array_sum($q);\n\t$reverse = array_reverse($q);\n\
    \tif($sum <= $w && $q == $reverse){\n\t\treturn \"True\";\n\t}else{\n\t\treturn\
    \ \"False\";\n\t}\n}\necho will_it_fly([1, 2], 5);\necho \"<br>\";\necho will_it_fly([3,\
    \ 2, 3], 1);\necho \"<br>\";\necho will_it_fly([3, 2, 3], 9);\necho \"<br>\";\n\
    echo will_it_fly([3], 5);\nfunction candidate(...$args) {\n    return will_it_fly(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 2, 3), 9) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2), 5)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: False<br>False<br>True<br>True
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpa0r0qxe1.php:34\n\
    Stack trace:\n#0 /tmp/tmpa0r0qxe1.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpa0r0qxe1.php\
    \ on line 34\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// will_it_fly([1, 2], 5) \u279E False \n// # 1+2 is\
    \ less than the maximum possible weight, but it's unbalanced.\n// will_it_fly([3,\
    \ 2, 3], 1) \u279E False\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// will_it_fly([3, 2, 3], 9) \u279E True\n// # 3+2+3 is less\
    \ than the maximum possible weight, and it's balanced.\n// will_it_fly([3], 5)\
    \ \u279E True\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n\t$sum = array_sum($q);\n\t$rev = array_reverse($q);\n\
    \tif($sum <= $w && $q == $rev){\n\t\treturn true;\n\t}else{\n\t\treturn false;\n\
    \t}\n}\necho will_it_fly([1, 2], 5);\necho \"<br>\";\necho will_it_fly([3, 2,\
    \ 3], 1);\necho \"<br>\";\necho will_it_fly([3, 2, 3], 9);\necho \"<br>\";\necho\
    \ will_it_fly([3], 5);\nfunction candidate(...$args) {\n    return will_it_fly(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 2, 3), 9) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2), 5)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: <br><br>1<br>1
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// will_it_fly([1, 2], 5) \u279E False \n// # 1+2 is\
    \ less than the maximum possible weight, but it's unbalanced.\n// will_it_fly([3,\
    \ 2, 3], 1) \u279E False\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// will_it_fly([3, 2, 3], 9) \u279E True\n// # 3+2+3 is less\
    \ than the maximum possible weight, and it's balanced.\n// will_it_fly([3], 5)\
    \ \u279E True\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n\t$sum = array_sum($q);\n\t$rev = array_reverse($q);\n\
    \tif ($sum <= $w && $q == $rev) {\n\t\treturn true;\n\t} else {\n\t\treturn false;\n\
    \t}\n}\necho will_it_fly([1, 2], 5);\necho will_it_fly([3, 2, 3], 1);\necho will_it_fly([3,\
    \ 2, 3], 9);\necho will_it_fly([3], 5);\nfunction candidate(...$args) {\n    return\
    \ will_it_fly(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(3,\
    \ 2, 3), 9) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2), 5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: '11'
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// will_it_fly([1, 2], 5) \u279E False \n// # 1+2 is\
    \ less than the maximum possible weight, but it's unbalanced.\n// will_it_fly([3,\
    \ 2, 3], 1) \u279E False\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// will_it_fly([3, 2, 3], 9) \u279E True\n// # 3+2+3 is less\
    \ than the maximum possible weight, and it's balanced.\n// will_it_fly([3], 5)\
    \ \u279E True\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n\t$sum = array_sum($q);\n\t$rev = array_reverse($q);\n\
    \tif ($sum <= $w && $q == $rev) {\n\t\treturn true;\n\t} else {\n\t\treturn false;\n\
    \t}\n}\necho will_it_fly([1, 2], 5);\necho \"<br>\";\necho will_it_fly([3, 2,\
    \ 3], 1);\necho \"<br>\";\necho will_it_fly([3, 2, 3], 9);\necho \"<br>\";\necho\
    \ will_it_fly([3], 5);\nfunction candidate(...$args) {\n    return will_it_fly(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 2, 3), 9) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2), 5)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: <br><br>1<br>1
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// will_it_fly([1, 2], 5) \u279E False \n// # 1+2 is\
    \ less than the maximum possible weight, but it's unbalanced.\n// will_it_fly([3,\
    \ 2, 3], 1) \u279E False\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// will_it_fly([3, 2, 3], 9) \u279E True\n// # 3+2+3 is less\
    \ than the maximum possible weight, and it's balanced.\n// will_it_fly([3], 5)\
    \ \u279E True\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n\t$sum = array_sum($q);\n\t$rev = array_reverse($q);\n\
    \tif($sum <= $w && $q == $rev){\n\t\treturn true;\n\t}else{\n\t\treturn false;\n\
    \t}\n}\necho will_it_fly([1, 2], 5);\necho \"<br>\";\necho will_it_fly([3, 2,\
    \ 3], 1);\necho \"<br>\";\necho will_it_fly([3, 2, 3], 9);\necho \"<br>\";\necho\
    \ will_it_fly([3], 5);\nfunction candidate(...$args) {\n    return will_it_fly(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 2, 3), 9) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2), 5)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: <br><br>1<br>1
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// will_it_fly([1, 2], 5) \u279E False \n// # 1+2 is\
    \ less than the maximum possible weight, but it's unbalanced.\n// will_it_fly([3,\
    \ 2, 3], 1) \u279E False\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// will_it_fly([3, 2, 3], 9) \u279E True\n// # 3+2+3 is less\
    \ than the maximum possible weight, and it's balanced.\n// will_it_fly([3], 5)\
    \ \u279E True\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n\t$sum = array_sum($q);\n\t$rev = array_reverse($q);\n\
    \tif($sum <= $w && $q == $rev){\n\t\treturn true;\n\t}\n\treturn false;\n}\necho\
    \ will_it_fly([3, 2, 3], 9);\nfunction candidate(...$args) {\n    return will_it_fly(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 2, 3), 9) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2), 5)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: '1'
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// will_it_fly([1, 2], 5) \u279E False \n// # 1+2 is\
    \ less than the maximum possible weight, but it's unbalanced.\n// will_it_fly([3,\
    \ 2, 3], 1) \u279E False\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// will_it_fly([3, 2, 3], 9) \u279E True\n// # 3+2+3 is less\
    \ than the maximum possible weight, and it's balanced.\n// will_it_fly([3], 5)\
    \ \u279E True\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n\t$sum = array_sum($q);\n\t$rev = array_reverse($q);\n\
    \tif ($sum <= $w && $q == $rev) {\n\t\treturn true;\n\t} else {\n\t\treturn false;\n\
    \t}\n}\nfunction candidate(...$args) {\n    return will_it_fly(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(array(3, 2, 3), 9) !== true) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2), 5) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3), 5) !==\
    \ true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// will_it_fly([1, 2], 5) \u279E False \n// # 1+2 is\
    \ less than the maximum possible weight, but it's unbalanced.\n// will_it_fly([3,\
    \ 2, 3], 1) \u279E False\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// will_it_fly([3, 2, 3], 9) \u279E True\n// # 3+2+3 is less\
    \ than the maximum possible weight, and it's balanced.\n// will_it_fly([3], 5)\
    \ \u279E True\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n\t$sum = array_sum($q);\n\t$reverse = array_reverse($q);\n\
    \tif($sum <= $w && $q == $reverse){\n\t\treturn true;\n\t}else{\n\t\treturn false;\n\
    \t}\n}\necho will_it_fly([1, 2], 5);\necho \"<br>\";\necho will_it_fly([3, 2,\
    \ 3], 1);\necho \"<br>\";\necho will_it_fly([3, 2, 3], 9);\necho \"<br>\";\necho\
    \ will_it_fly([3], 5);\nfunction candidate(...$args) {\n    return will_it_fly(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 2, 3), 9) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2), 5)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: <br><br>1<br>1
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// will_it_fly([1, 2], 5) \u279E False \n// # 1+2 is\
    \ less than the maximum possible weight, but it's unbalanced.\n// will_it_fly([3,\
    \ 2, 3], 1) \u279E False\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// will_it_fly([3, 2, 3], 9) \u279E True\n// # 3+2+3 is less\
    \ than the maximum possible weight, and it's balanced.\n// will_it_fly([3], 5)\
    \ \u279E True\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n\t$sum = array_sum($q);\n\t$rev = array_reverse($q);\n\
    \tif($sum <= $w && $q == $rev){\n\t\treturn \"True\";\n\t}else{\n\t\treturn \"\
    False\";\n\t}\n}\necho will_it_fly([1, 2], 5);\necho \"<br>\";\necho will_it_fly([3,\
    \ 2, 3], 1);\necho \"<br>\";\necho will_it_fly([3, 2, 3], 9);\necho \"<br>\";\n\
    echo will_it_fly([3], 5);\nfunction candidate(...$args) {\n    return will_it_fly(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 2, 3), 9) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2), 5)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: False<br>False<br>True<br>True
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpn5p04kdg.php:34\n\
    Stack trace:\n#0 /tmp/tmpn5p04kdg.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpn5p04kdg.php\
    \ on line 34\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// will_it_fly([1, 2], 5) \u279E False \n// # 1+2 is\
    \ less than the maximum possible weight, but it's unbalanced.\n// will_it_fly([3,\
    \ 2, 3], 1) \u279E False\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// will_it_fly([3, 2, 3], 9) \u279E True\n// # 3+2+3 is less\
    \ than the maximum possible weight, and it's balanced.\n// will_it_fly([3], 5)\
    \ \u279E True\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n\t$sum = array_sum($q);\n\t$rev = array_reverse($q);\n\
    \tif ($sum <= $w && $q == $rev) {\n\t\treturn true;\n\t} else {\n\t\treturn false;\n\
    \t}\n}\necho will_it_fly([1, 2], 5);\necho \"<br>\";\necho will_it_fly([3, 2,\
    \ 3], 1);\necho \"<br>\";\necho will_it_fly([3, 2, 3], 9);\necho \"<br>\";\necho\
    \ will_it_fly([3], 5);\nfunction candidate(...$args) {\n    return will_it_fly(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 2, 3), 9) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2), 5)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: <br><br>1<br>1
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// will_it_fly([1, 2], 5) \u279E False \n// # 1+2 is\
    \ less than the maximum possible weight, but it's unbalanced.\n// will_it_fly([3,\
    \ 2, 3], 1) \u279E False\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// will_it_fly([3, 2, 3], 9) \u279E True\n// # 3+2+3 is less\
    \ than the maximum possible weight, and it's balanced.\n// will_it_fly([3], 5)\
    \ \u279E True\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n\t$sum = array_sum($q);\n\t$palindrome = array_reverse($q);\n\
    \tif($sum <= $w && $q == $palindrome){\n\t\treturn true;\n\t}else{\n\t\treturn\
    \ false;\n\t}\n}\necho will_it_fly([1, 2], 5);\necho \"<br>\";\necho will_it_fly([3,\
    \ 2, 3], 1);\necho \"<br>\";\necho will_it_fly([3, 2, 3], 9);\necho \"<br>\";\n\
    echo will_it_fly([3], 5);\nfunction candidate(...$args) {\n    return will_it_fly(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 2, 3), 9) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2), 5)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: <br><br>1<br>1
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// will_it_fly([1, 2], 5) \u279E False \n// # 1+2 is\
    \ less than the maximum possible weight, but it's unbalanced.\n// will_it_fly([3,\
    \ 2, 3], 1) \u279E False\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// will_it_fly([3, 2, 3], 9) \u279E True\n// # 3+2+3 is less\
    \ than the maximum possible weight, and it's balanced.\n// will_it_fly([3], 5)\
    \ \u279E True\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n\t$sum = array_sum($q);\n\t$reverse = array_reverse($q);\n\
    \tif ($sum <= $w && $q == $reverse) {\n\t\treturn true;\n\t} else {\n\t\treturn\
    \ false;\n\t}\n}\necho will_it_fly([1, 2], 5);\necho \"<br>\";\necho will_it_fly([3,\
    \ 2, 3], 1);\necho \"<br>\";\necho will_it_fly([3, 2, 3], 9);\necho \"<br>\";\n\
    echo will_it_fly([3], 5);\nfunction candidate(...$args) {\n    return will_it_fly(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 2, 3), 9) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2), 5)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: <br><br>1<br>1
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// will_it_fly([1, 2], 5) \u279E False \n// # 1+2 is\
    \ less than the maximum possible weight, but it's unbalanced.\n// will_it_fly([3,\
    \ 2, 3], 1) \u279E False\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// will_it_fly([3, 2, 3], 9) \u279E True\n// # 3+2+3 is less\
    \ than the maximum possible weight, and it's balanced.\n// will_it_fly([3], 5)\
    \ \u279E True\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n\t$sum = array_sum($q);\n\t$rev = array_reverse($q);\n\
    \tif ($sum <= $w && $q == $rev) {\n\t\treturn \"True\";\n\t} else {\n\t\treturn\
    \ \"False\";\n\t}\n}\necho will_it_fly([1, 2], 5);\necho \"<br>\";\necho will_it_fly([3,\
    \ 2, 3], 1);\necho \"<br>\";\necho will_it_fly([3, 2, 3], 9);\necho \"<br>\";\n\
    echo will_it_fly([3], 5);\nfunction candidate(...$args) {\n    return will_it_fly(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 2, 3), 9) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2), 5)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: False<br>False<br>True<br>True
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp_o0ugkmh.php:34\n\
    Stack trace:\n#0 /tmp/tmp_o0ugkmh.php(42): test()\n#1 {main}\n  thrown in /tmp/tmp_o0ugkmh.php\
    \ on line 34\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// will_it_fly([1, 2], 5) \u279E False \n// # 1+2 is\
    \ less than the maximum possible weight, but it's unbalanced.\n// will_it_fly([3,\
    \ 2, 3], 1) \u279E False\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// will_it_fly([3, 2, 3], 9) \u279E True\n// # 3+2+3 is less\
    \ than the maximum possible weight, and it's balanced.\n// will_it_fly([3], 5)\
    \ \u279E True\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n\t$sum = array_sum($q);\n\t$rev = array_reverse($q);\n\
    \tif ($sum <= $w && $q == $rev) {\n\t\treturn true;\n\t} else {\n\t\treturn false;\n\
    \t}\n}\necho will_it_fly([1, 2], 5);\necho \"<br>\";\necho will_it_fly([3, 2,\
    \ 3], 1);\necho \"<br>\";\necho will_it_fly([3, 2, 3], 9);\necho \"<br>\";\necho\
    \ will_it_fly([3], 5);\nfunction candidate(...$args) {\n    return will_it_fly(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 2, 3), 9) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2), 5)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: <br><br>1<br>1
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// will_it_fly([1, 2], 5) \u279E False \n// # 1+2 is\
    \ less than the maximum possible weight, but it's unbalanced.\n// will_it_fly([3,\
    \ 2, 3], 1) \u279E False\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// will_it_fly([3, 2, 3], 9) \u279E True\n// # 3+2+3 is less\
    \ than the maximum possible weight, and it's balanced.\n// will_it_fly([3], 5)\
    \ \u279E True\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n\t$sum = array_sum($q);\n\t$rev = array_reverse($q);\n\
    \tif ($sum <= $w && $q == $rev) {\n\t\treturn \"True\";\n\t} else {\n\t\treturn\
    \ \"False\";\n\t}\n}\necho will_it_fly([1, 2], 5) . \"\\n\";\necho will_it_fly([3,\
    \ 2, 3], 1) . \"\\n\";\necho will_it_fly([3, 2, 3], 9) . \"\\n\";\necho will_it_fly([3],\
    \ 5) . \"\\n\";\nfunction candidate(...$args) {\n    return will_it_fly(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 2, 3), 9) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2), 5)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "False\nFalse\nTrue\nTrue\n"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp04dz1k7r.php:31\n\
    Stack trace:\n#0 /tmp/tmp04dz1k7r.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp04dz1k7r.php\
    \ on line 31\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function that returns True if the object q will fly,\
    \ and False otherwise.\n// The object q will fly if it's balanced (it is a palindromic\
    \ list) and the sum of its elements is less than or equal the maximum possible\
    \ weight w.\n// Example:\n// will_it_fly([1, 2], 5) \u279E False \n// # 1+2 is\
    \ less than the maximum possible weight, but it's unbalanced.\n// will_it_fly([3,\
    \ 2, 3], 1) \u279E False\n// # it's balanced, but 3+2+3 is more than the maximum\
    \ possible weight.\n// will_it_fly([3, 2, 3], 9) \u279E True\n// # 3+2+3 is less\
    \ than the maximum possible weight, and it's balanced.\n// will_it_fly([3], 5)\
    \ \u279E True\n// # 3 is less than the maximum possible weight, and it's balanced.\n\
    function will_it_fly($q, $w) {\n\t$sum = array_sum($q);\n\t$rev = array_reverse($q);\n\
    \tif($sum <= $w && $q == $rev){\n\t\treturn true;\n\t}\n\treturn false;\n}\necho\
    \ will_it_fly([3, 2, 3], 9);\nfunction candidate(...$args) {\n    return will_it_fly(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(3, 2, 3), 9) !== true) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2), 5)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3,\
    \ 2, 3), 1) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3), 6) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(5),\
    \ 5) !== true) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: '1'
  stderr: ''
  exit_code: 0
  status: OK

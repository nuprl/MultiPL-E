name: HumanEval_145_order_by_points
language: php
prompt: "<?php\n// Write a function which sorts the given list of integers\n// in\
  \ ascending order according to the sum of their digits.\n// Note: if there are several\
  \ items with similar sum of their digits,\n// order them based on their index in\
  \ original list.\n// For example:\n// >>> order_by_points([1, 11, -1, -11, -12])\
  \ == [-1, -11, 1, -12, 11]\n// >>> order_by_points([]) == []\nfunction order_by_points($nums)\
  \ {\n"
tests: "function candidate(...$args) {\n    return order_by_points(...$args);\n}\n\
  \nfunction test(): void {\n    if (candidate(array(1, 11, -1, -11, -12)) !== array(-1,\
  \ -11, 1, -12, 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1234,\
  \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46)) !== array(0, 2, 3,\
  \ 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457)) { throw new Exception(\"\
  Test failed!\"); }\n    if (candidate(array()) !== array()) { throw new Exception(\"\
  Test failed!\"); }\n    if (candidate(array(1, -11, -32, 43, 54, -98, 2, -3)) !==\
  \ array(-3, -32, -98, -11, 1, 2, 43, 54)) { throw new Exception(\"Test failed!\"\
  ); }\n    if (candidate(array(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11)) !== array(1, 10,\
  \ 2, 11, 3, 4, 5, 6, 7, 8, 9)) { throw new Exception(\"Test failed!\"); }\n    if\
  \ (candidate(array(0, 6, 6, -76, -21, 23, 4)) !== array(-76, -21, 0, 4, 23, 6, 6))\
  \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
completions: ["    $nums_with_points = [];\n    foreach ($nums as $key => $num) {\n\
    \        $points = 0;\n        $num_str = strval($num);\n        for ($i = 0;\
    \ $i < strlen($num_str); $i++) {\n            $points += intval($num_str[$i]);\n\
    \        }\n        $nums_with_points[$key] = $points;\n    }\n    asort($nums_with_points);\n\
    \    $result = [];\n    foreach ($nums_with_points as $key => $points) {\n   \
    \     $result[] = $nums[$key];\n    }\n    return $result;\n}\n", "    $sum_of_digits\
    \ = array_map(function($num) {\n        $sum = 0;\n        while ($num > 0) {\n\
    \            $sum += $num % 10;\n            $num = intval($num / 10);\n     \
    \   }\n        return $sum;\n    }, $nums);\n    array_multisort($sum_of_digits,\
    \ SORT_ASC, $nums);\n    return $nums;\n}\n", "    $nums_with_points = [];\n \
    \   foreach ($nums as $index => $num) {\n        $nums_with_points[$index] = [$num,\
    \ sum_of_digits($num)];\n    }\n    usort($nums_with_points, function ($a, $b)\
    \ {\n        if ($a[1] == $b[1]) {\n            return $a[0] - $b[0];\n      \
    \  }\n        return $a[1] - $b[1];\n    });\n    $result = [];\n    foreach ($nums_with_points\
    \ as $num_with_points) {\n        $result[] = $num_with_points[0];\n    }\n  \
    \  return $result;\n}\n", "    // Write your code here\n    $result = [];\n  \
    \  $sum = [];\n    foreach ($nums as $key => $value) {\n        $sum[$key] = array_sum(str_split($value));\n\
    \    }\n    asort($sum);\n    foreach ($sum as $key => $value) {\n        $result[]\
    \ = $nums[$key];\n    }\n    return $result;\n}\n", "    $sum_nums = array_map(function($num)\
    \ {\n        return array_sum(str_split(abs($num)));\n    }, $nums);\n    array_multisort($sum_nums,\
    \ SORT_ASC, $nums);\n    return $nums;\n}\n", "    $sums = [];\n    foreach ($nums\
    \ as $key => $num) {\n        $sums[$key] = array_sum(str_split($num));\n    }\n\
    \    asort($sums);\n    $result = [];\n    foreach ($sums as $key => $sum) {\n\
    \        $result[] = $nums[$key];\n    }\n    return $result;\n}\n", "    $sums\
    \ = array_map(function($num) {\n        $sum = 0;\n        while ($num > 0) {\n\
    \            $sum += $num % 10;\n            $num = floor($num / 10);\n      \
    \  }\n        return $sum;\n    }, $nums);\n    array_multisort($sums, $nums);\n\
    \    return $nums;\n}\n", "    $sums = [];\n    foreach ($nums as $key => $num)\
    \ {\n        $sums[$key] = array_sum(str_split($num));\n    }\n    array_multisort($sums,\
    \ SORT_ASC, $nums);\n    return $nums;\n}\n", "  $sums = [];\n  foreach ($nums\
    \ as $i => $num) {\n    $sums[$i] = array_sum(str_split($num));\n  }\n  asort($sums);\n\
    \  $result = [];\n  foreach ($sums as $i => $sum) {\n    $result[] = $nums[$i];\n\
    \  }\n  return $result;\n}\n", "    $result = [];\n    foreach ($nums as $key\
    \ => $num) {\n        $sum = 0;\n        while ($num != 0) {\n            $sum\
    \ += $num % 10;\n            $num = (int)($num / 10);\n        }\n        $result[$key]\
    \ = $sum;\n    }\n    asort($result);\n    $result = array_keys($result);\n  \
    \  foreach ($result as $key => $value) {\n        $result[$key] = $nums[$value];\n\
    \    }\n    return $result;\n}\n", "    $sums = array_map(function($num) {\n \
    \       $sum = 0;\n        $num = abs($num);\n        while ($num > 0) {\n   \
    \         $sum += $num % 10;\n            $num = floor($num / 10);\n        }\n\
    \        return $sum;\n    }, $nums);\n    array_multisort($sums, SORT_ASC, $nums);\n\
    \    return $nums;\n}\n", "    $result = [];\n    foreach ($nums as $key => $num)\
    \ {\n        $result[$key] = array_sum(str_split($num));\n    }\n    asort($result);\n\
    \    $result = array_keys($result);\n    $result = array_map(function($key) use\
    \ ($nums) {\n        return $nums[$key];\n    }, $result);\n    return $result;\n\
    }\n", "    $sums = array_map(function($num) {\n        $sum = 0;\n        $num\
    \ = abs($num);\n        while ($num > 0) {\n            $sum += $num % 10;\n \
    \           $num = floor($num / 10);\n        }\n        return $sum;\n    },\
    \ $nums);\n    array_multisort($sums, SORT_ASC, $nums);\n    return $nums;\n}\n",
  "    $sums = array_map(function($num) {\n        $sum = 0;\n        while ($num\
    \ > 0) {\n            $sum += $num % 10;\n            $num = floor($num / 10);\n\
    \        }\n        return $sum;\n    }, $nums);\n    $result = [];\n    for ($i\
    \ = 0; $i < count($nums); $i++) {\n        $min = min($sums);\n        $index\
    \ = array_search($min, $sums);\n        $result[] = $nums[$index];\n        unset($sums[$index]);\n\
    \        unset($nums[$index]);\n        $sums = array_values($sums);\n       \
    \ $nums = array_values($nums);\n    }\n    return $result;\n}\n", "    $sum_of_digits\
    \ = function($num) {\n        $sum = 0;\n        while ($num > 0) {\n        \
    \    $sum += $num % 10;\n            $num = floor($num / 10);\n        }\n   \
    \     return $sum;\n    };\n\n    $sums = array_map($sum_of_digits, $nums);\n\
    \    $sums_and_indexes = array_map(function($num, $index) {\n        return [$num,\
    \ $index];\n    }, $sums, array_keys($sums));\n    usort($sums_and_indexes, function($a,\
    \ $b) {\n        if ($a[0] == $b[0]) {\n            return $a[1] - $b[1];\n  \
    \      }\n        return $a[0] - $b[0];\n    });\n    $sorted_indexes = array_map(function($item)\
    \ {\n        return $item[1];\n    }, $sums_and_indexes);\n    $result = [];\n\
    \    foreach ($sorted_indexes as $index) {\n        $result[] = $nums[$index];\n\
    \    }\n    return $result;\n}\n", "    $result = [];\n    $sum = 0;\n    foreach\
    \ ($nums as $key => $value) {\n        $sum = 0;\n        $value = abs($value);\n\
    \        while ($value > 0) {\n            $sum += $value % 10;\n            $value\
    \ = (int)($value / 10);\n        }\n        $result[$key] = $sum;\n    }\n   \
    \ asort($result);\n    $result = array_keys($result);\n    $result = array_map(function\
    \ ($value) use ($nums) {\n        return $nums[$value];\n    }, $result);\n  \
    \  return $result;\n}\n", "    $sums = [];\n    foreach ($nums as $key => $num)\
    \ {\n        $sum = 0;\n        $num = abs($num);\n        while ($num > 0) {\n\
    \            $sum += $num % 10;\n            $num = floor($num / 10);\n      \
    \  }\n        $sums[$key] = $sum;\n    }\n    asort($sums);\n    $result = [];\n\
    \    foreach ($sums as $key => $sum) {\n        $result[] = $nums[$key];\n   \
    \ }\n    return $result;\n}\n", "    $sum = [];\n    foreach ($nums as $key =>\
    \ $value) {\n        $sum[$key] = array_sum(str_split($value));\n    }\n    array_multisort($sum,\
    \ SORT_ASC, $nums);\n    return $nums;\n}\n", "    $sums = [];\n    foreach ($nums\
    \ as $key => $num) {\n        $sums[$key] = array_sum(str_split($num));\n    }\n\
    \    array_multisort($sums, SORT_ASC, $nums);\n    return $nums;\n}\n", "  $result\
    \ = [];\n  foreach ($nums as $key => $num) {\n    $sum = 0;\n    $num = abs($num);\n\
    \    while ($num > 0) {\n      $sum += $num % 10;\n      $num = floor($num / 10);\n\
    \    }\n    $result[$key] = $sum;\n  }\n  asort($result);\n  $result = array_keys($result);\n\
    \  $result = array_map(function($key) use ($nums) {\n    return $nums[$key];\n\
    \  }, $result);\n  return $result;\n}\n", "    $arr = [];\n    foreach ($nums\
    \ as $key => $num) {\n        $arr[$key] = array_sum(str_split($num));\n    }\n\
    \    asort($arr);\n    $result = [];\n    foreach ($arr as $key => $value) {\n\
    \        $result[] = $nums[$key];\n    }\n    return $result;\n}\n", "    $nums_with_points\
    \ = [];\n    foreach ($nums as $index => $num) {\n        $nums_with_points[$index]\
    \ = [\n            'num' => $num,\n            'points' => array_sum(str_split(abs($num)))\n\
    \        ];\n    }\n    usort($nums_with_points, function ($a, $b) {\n       \
    \ if ($a['points'] == $b['points']) {\n            return $a['index'] - $b['index'];\n\
    \        }\n        return $a['points'] - $b['points'];\n    });\n    return array_column($nums_with_points,\
    \ 'num');\n}\n", "    $sum_of_digits = array_map(function($num) {\n        $sum\
    \ = 0;\n        $num = abs($num);\n        while ($num > 0) {\n            $sum\
    \ += $num % 10;\n            $num = intval($num / 10);\n        }\n        return\
    \ $sum;\n    }, $nums);\n    array_multisort($sum_of_digits, SORT_ASC, $nums);\n\
    \    return $nums;\n}\n", "    $nums_with_points = [];\n    foreach ($nums as\
    \ $index => $num) {\n        $points = 0;\n        $num_str = strval($num);\n\
    \        for ($i = 0; $i < strlen($num_str); $i++) {\n            $points += intval($num_str[$i]);\n\
    \        }\n        $nums_with_points[] = [$index, $points, $num];\n    }\n  \
    \  usort($nums_with_points, function ($a, $b) {\n        if ($a[1] == $b[1]) {\n\
    \            return $a[0] - $b[0];\n        }\n        return $a[1] - $b[1];\n\
    \    });\n    $result = [];\n    foreach ($nums_with_points as $num_with_points)\
    \ {\n        $result[] = $num_with_points[2];\n    }\n    return $result;\n}\n",
  "    $sums = [];\n    foreach ($nums as $key => $num) {\n        $sums[$key] = array_sum(str_split($num));\n\
    \    }\n    asort($sums);\n    $result = [];\n    foreach ($sums as $key => $sum)\
    \ {\n        $result[] = $nums[$key];\n    }\n    return $result;\n}\n", "   \
    \ $sums = [];\n    foreach ($nums as $key => $num) {\n        $sums[$key] = array_sum(str_split($num));\n\
    \    }\n    array_multisort($sums, SORT_ASC, $nums);\n    return $nums;\n}\n",
  "    $nums_with_points = [];\n    foreach ($nums as $key => $num) {\n        $nums_with_points[$key]\
    \ = [\n            'num' => $num,\n            'points' => array_sum(str_split(abs($num)))\n\
    \        ];\n    }\n    usort($nums_with_points, function ($a, $b) {\n       \
    \ if ($a['points'] == $b['points']) {\n            return $a['num'] <=> $b['num'];\n\
    \        }\n        return $a['points'] <=> $b['points'];\n    });\n    return\
    \ array_column($nums_with_points, 'num');\n}\n", "    $sums = [];\n    foreach\
    \ ($nums as $i => $num) {\n        $sums[$i] = sum_digits($num);\n    }\n    array_multisort($sums,\
    \ $nums);\n    return $nums;\n}\n", "    $nums_with_points = [];\n    foreach\
    \ ($nums as $key => $num) {\n        $nums_with_points[$key] = [\n           \
    \ 'num' => $num,\n            'points' => array_sum(str_split($num))\n       \
    \ ];\n    }\n    usort($nums_with_points, function ($a, $b) {\n        if ($a['points']\
    \ == $b['points']) {\n            return $a['num'] <=> $b['num'];\n        }\n\
    \        return $a['points'] <=> $b['points'];\n    });\n    return array_column($nums_with_points,\
    \ 'num');\n}\n", "    $sums = [];\n    foreach ($nums as $key => $num) {\n   \
    \     $sum = 0;\n        $num = abs($num);\n        while ($num > 0) {\n     \
    \       $sum += $num % 10;\n            $num = (int)($num / 10);\n        }\n\
    \        $sums[$key] = $sum;\n    }\n    asort($sums);\n    $result = [];\n  \
    \  foreach ($sums as $key => $sum) {\n        $result[] = $nums[$key];\n    }\n\
    \    return $result;\n}\n", "    $nums_with_points = [];\n    foreach ($nums as\
    \ $key => $num) {\n        $nums_with_points[$key] = [\n            'num' => $num,\n\
    \            'points' => sum_of_digits($num)\n        ];\n    }\n    usort($nums_with_points,\
    \ function ($a, $b) {\n        if ($a['points'] == $b['points']) {\n         \
    \   return $a['num'] - $b['num'];\n        }\n        return $a['points'] - $b['points'];\n\
    \    });\n    $result = [];\n    foreach ($nums_with_points as $num_with_points)\
    \ {\n        $result[] = $num_with_points['num'];\n    }\n    return $result;\n\
    }\n", "  $sums = [];\n  foreach ($nums as $key => $num) {\n    $sums[$key] = array_sum(str_split($num));\n\
    \  }\n  asort($sums);\n  $result = [];\n  foreach ($sums as $key => $sum) {\n\
    \    $result[] = $nums[$key];\n  }\n  return $result;\n}\n", "    $result = [];\n\
    \    foreach ($nums as $key => $num) {\n        $result[$key] = array_sum(str_split($num));\n\
    \    }\n    asort($result);\n    $result = array_keys($result);\n    foreach ($result\
    \ as $key => $value) {\n        $result[$key] = $nums[$value];\n    }\n    return\
    \ $result;\n}\n", "    $sums = [];\n    foreach ($nums as $key => $num) {\n  \
    \      $sum = 0;\n        $num = abs($num);\n        while ($num > 0) {\n    \
    \        $sum += $num % 10;\n            $num = (int)($num / 10);\n        }\n\
    \        $sums[$key] = $sum;\n    }\n    asort($sums);\n    $result = [];\n  \
    \  foreach ($sums as $key => $sum) {\n        $result[] = $nums[$key];\n    }\n\
    \    return $result;\n}\n", "    $sums = array_map(function($num) {\n        $sum\
    \ = 0;\n        $num = abs($num);\n        while ($num > 0) {\n            $sum\
    \ += $num % 10;\n            $num = (int)($num / 10);\n        }\n        return\
    \ $sum;\n    }, $nums);\n    array_multisort($sums, SORT_ASC, $nums);\n    return\
    \ $nums;\n}\n", "    $sums = array_map(function($n) {\n        return array_sum(str_split($n));\n\
    \    }, $nums);\n    array_multisort($sums, $nums);\n    return $nums;\n}\n",
  "    $sums = [];\n    foreach ($nums as $key => $num) {\n        $sum = 0;\n   \
    \     $num = abs($num);\n        while ($num > 0) {\n            $sum += $num\
    \ % 10;\n            $num = floor($num / 10);\n        }\n        $sums[$key]\
    \ = $sum;\n    }\n    asort($sums);\n    $result = [];\n    foreach ($sums as\
    \ $key => $sum) {\n        $result[] = $nums[$key];\n    }\n    return $result;\n\
    }\n", "    $points = array_map(function($num) {\n        return array_sum(str_split($num));\n\
    \    }, $nums);\n    array_multisort($points, SORT_ASC, $nums);\n    return $nums;\n\
    }\n", "    $sum = [];\n    foreach ($nums as $key => $value) {\n        $sum[$key]\
    \ = array_sum(str_split($value));\n    }\n    array_multisort($sum, SORT_ASC,\
    \ $nums);\n    return $nums;\n}\n", "    $sums = [];\n    foreach ($nums as $key\
    \ => $num) {\n        $sum = 0;\n        $num = abs($num);\n        while ($num\
    \ > 0) {\n            $sum += $num % 10;\n            $num = (int)($num / 10);\n\
    \        }\n        $sums[$key] = $sum;\n    }\n    asort($sums);\n    $result\
    \ = [];\n    foreach ($sums as $key => $sum) {\n        $result[] = $nums[$key];\n\
    \    }\n    return $result;\n}\n", "    $sums = [];\n    foreach ($nums as $key\
    \ => $num) {\n        $sums[$key] = array_sum(str_split($num));\n    }\n    asort($sums);\n\
    \    $result = [];\n    foreach ($sums as $key => $sum) {\n        $result[] =\
    \ $nums[$key];\n    }\n    return $result;\n}\n", "    $result = [];\n    foreach\
    \ ($nums as $key => $num) {\n        $result[$key] = array_sum(str_split($num));\n\
    \    }\n    asort($result);\n    $result = array_keys($result);\n    $result =\
    \ array_map(function($num) use ($nums) {\n        return $nums[$num];\n    },\
    \ $result);\n    return $result;\n}\n", "    $sum_nums = [];\n    foreach ($nums\
    \ as $key => $num) {\n        $sum_nums[$key] = array_sum(str_split($num));\n\
    \    }\n    asort($sum_nums);\n    $result = [];\n    foreach ($sum_nums as $key\
    \ => $sum_num) {\n        $result[] = $nums[$key];\n    }\n    return $result;\n\
    }\n", "    $sums = [];\n    foreach ($nums as $key => $num) {\n        $sums[$key]\
    \ = array_sum(str_split($num));\n    }\n    array_multisort($sums, SORT_ASC, $nums);\n\
    \    return $nums;\n}\n", "    $nums_with_points = [];\n    foreach ($nums as\
    \ $key => $num) {\n        $nums_with_points[$key] = [\n            'num' => $num,\n\
    \            'points' => array_sum(str_split(abs($num)))\n        ];\n    }\n\
    \    usort($nums_with_points, function ($a, $b) {\n        if ($a['points'] ==\
    \ $b['points']) {\n            return $a['num'] <=> $b['num'];\n        }\n  \
    \      return $a['points'] <=> $b['points'];\n    });\n    return array_column($nums_with_points,\
    \ 'num');\n}\n", "    $sums = [];\n    foreach ($nums as $key => $num) {\n   \
    \     $sums[$key] = array_sum(str_split($num));\n    }\n    asort($sums);\n  \
    \  $result = [];\n    foreach ($sums as $key => $sum) {\n        $result[] = $nums[$key];\n\
    \    }\n    return $result;\n}\n", "    $nums = array_map(function($num) {\n \
    \       return [$num, array_sum(str_split($num))];\n    }, $nums);\n    usort($nums,\
    \ function($a, $b) {\n        if ($a[1] == $b[1]) {\n            return 0;\n \
    \       }\n        return ($a[1] < $b[1]) ? -1 : 1;\n    });\n    return array_map(function($num)\
    \ {\n        return $num[0];\n    }, $nums);\n}\n", "    $sum_of_digits = array_map(function($num)\
    \ {\n        return array_sum(str_split($num));\n    }, $nums);\n    array_multisort($sum_of_digits,\
    \ SORT_ASC, $nums);\n    return $nums;\n}\n", "    $result = [];\n    $sums =\
    \ [];\n    foreach ($nums as $key => $num) {\n        $sum = 0;\n        $num\
    \ = abs($num);\n        while ($num > 0) {\n            $sum += $num % 10;\n \
    \           $num = (int)($num / 10);\n        }\n        $sums[$key] = $sum;\n\
    \    }\n    asort($sums);\n    foreach ($sums as $key => $sum) {\n        $result[]\
    \ = $nums[$key];\n    }\n    return $result;\n}\n", "    $sum = array_map(function($num)\
    \ {\n        return array_sum(str_split($num));\n    }, $nums);\n    array_multisort($sum,\
    \ SORT_ASC, $nums);\n    return $nums;\n}\n", "    $result = [];\n    foreach\
    \ ($nums as $key => $num) {\n        $sum = 0;\n        $num = abs($num);\n  \
    \      while ($num > 0) {\n            $sum += $num % 10;\n            $num =\
    \ floor($num / 10);\n        }\n        $result[$key] = $sum;\n    }\n    asort($result);\n\
    \    $result = array_keys($result);\n    $result = array_map(function ($key) use\
    \ ($nums) {\n        return $nums[$key];\n    }, $result);\n    return $result;\n\
    }\n", "    $sums = [];\n    foreach ($nums as $index => $num) {\n        $sums[$index]\
    \ = array_sum(str_split($num));\n    }\n    asort($sums);\n    $result = [];\n\
    \    foreach ($sums as $index => $sum) {\n        $result[] = $nums[$index];\n\
    \    }\n    return $result;\n}\n", "    $result = [];\n    $sums = [];\n    foreach\
    \ ($nums as $key => $num) {\n        $sum = 0;\n        $num = abs($num);\n  \
    \      while ($num > 0) {\n            $sum += $num % 10;\n            $num =\
    \ (int)($num / 10);\n        }\n        $sums[$key] = $sum;\n    }\n    asort($sums);\n\
    \    foreach ($sums as $key => $sum) {\n        $result[] = $nums[$key];\n   \
    \ }\n    return $result;\n}\n", "    $sums = [];\n    foreach ($nums as $index\
    \ => $num) {\n        $sum = array_sum(str_split($num));\n        $sums[$index]\
    \ = $sum;\n    }\n    asort($sums);\n    $result = [];\n    foreach ($sums as\
    \ $index => $sum) {\n        $result[] = $nums[$index];\n    }\n    return $result;\n\
    }\n", "    $result = [];\n    $sum = [];\n    $i = 0;\n    foreach ($nums as $num)\
    \ {\n        $sum[$i] = array_sum(str_split($num));\n        $i++;\n    }\n  \
    \  asort($sum);\n    foreach ($sum as $key => $value) {\n        $result[] = $nums[$key];\n\
    \    }\n    return $result;\n}\n", "    $result = [];\n    foreach ($nums as $key\
    \ => $value) {\n        $result[$key] = array_sum(str_split($value));\n    }\n\
    \    asort($result);\n    $result = array_keys($result);\n    foreach ($result\
    \ as $key => $value) {\n        $result[$key] = $nums[$value];\n    }\n    return\
    \ $result;\n}\n", "    $nums_sums = [];\n    foreach ($nums as $key => $num) {\n\
    \        $nums_sums[$key] = array_sum(str_split($num));\n    }\n    asort($nums_sums);\n\
    \    $result = [];\n    foreach ($nums_sums as $key => $sum) {\n        $result[]\
    \ = $nums[$key];\n    }\n    return $result;\n}\n", "    $result = [];\n    $sum\
    \ = [];\n    foreach ($nums as $key => $value) {\n        $sum[$key] = array_sum(str_split($value));\n\
    \    }\n    asort($sum);\n    foreach ($sum as $key => $value) {\n        $result[]\
    \ = $nums[$key];\n    }\n    return $result;\n}\n", "    $sums = [];\n    foreach\
    \ ($nums as $key => $num) {\n        $sum = 0;\n        $num = abs($num);\n  \
    \      while ($num > 0) {\n            $sum += $num % 10;\n            $num =\
    \ (int)($num / 10);\n        }\n        $sums[$key] = $sum;\n    }\n    array_multisort($sums,\
    \ SORT_ASC, $nums);\n    return $nums;\n}\n", "    $sums = [];\n    foreach ($nums\
    \ as $index => $num) {\n        $sum = 0;\n        $num = abs($num);\n       \
    \ while ($num > 0) {\n            $sum += $num % 10;\n            $num = floor($num\
    \ / 10);\n        }\n        $sums[$index] = $sum;\n    }\n    asort($sums);\n\
    \    $result = [];\n    foreach ($sums as $index => $sum) {\n        $result[]\
    \ = $nums[$index];\n    }\n    return $result;\n}\n", "    $result = [];\n   \
    \ foreach ($nums as $key => $num) {\n        $result[$key] = array_sum(str_split($num));\n\
    \    }\n    asort($result);\n    $result = array_keys($result);\n    foreach ($result\
    \ as $key => $value) {\n        $result[$key] = $nums[$value];\n    }\n    return\
    \ $result;\n}\n", "    $sums = [];\n    foreach ($nums as $key => $num) {\n  \
    \      $sums[$key] = array_sum(str_split($num));\n    }\n    asort($sums);\n \
    \   $result = [];\n    foreach ($sums as $key => $sum) {\n        $result[] =\
    \ $nums[$key];\n    }\n    return $result;\n}\n", "    $nums_with_points = [];\n\
    \    foreach ($nums as $key => $num) {\n        $nums_with_points[$key] = [\n\
    \            'num' => $num,\n            'points' => array_sum(str_split(abs($num)))\n\
    \        ];\n    }\n    usort($nums_with_points, function ($a, $b) {\n       \
    \ if ($a['points'] == $b['points']) {\n            return $a['num'] <=> $b['num'];\n\
    \        }\n        return $a['points'] <=> $b['points'];\n    });\n    return\
    \ array_column($nums_with_points, 'num');\n}\n", "    $sums = [];\n    foreach\
    \ ($nums as $key => $num) {\n        $sums[$key] = array_sum(str_split($num));\n\
    \    }\n    array_multisort($sums, SORT_ASC, $nums);\n    return $nums;\n}\n",
  "    $sums = [];\n    foreach ($nums as $key => $num) {\n        $sums[$key] = array_sum(str_split($num));\n\
    \    }\n    asort($sums);\n    $result = [];\n    foreach ($sums as $key => $sum)\
    \ {\n        $result[] = $nums[$key];\n    }\n    return $result;\n}\n", "   \
    \ $sum_digits = function($num) {\n        $sum = 0;\n        while ($num > 0)\
    \ {\n            $sum += $num % 10;\n            $num = floor($num / 10);\n  \
    \      }\n        return $sum;\n    };\n    $sums = array_map($sum_digits, $nums);\n\
    \    $sorted = array_multisort($sums, $nums);\n    return $nums;\n}\n", "    $result\
    \ = [];\n    $sums = [];\n    foreach ($nums as $key => $num) {\n        $sum\
    \ = 0;\n        foreach (str_split($num) as $digit) {\n            $sum += $digit;\n\
    \        }\n        $sums[$key] = $sum;\n    }\n    asort($sums);\n    foreach\
    \ ($sums as $key => $sum) {\n        $result[] = $nums[$key];\n    }\n    return\
    \ $result;\n}\n", "    $arr = [];\n    foreach ($nums as $key => $num) {\n   \
    \     $arr[$key] = array_sum(str_split($num));\n    }\n    asort($arr);\n    $res\
    \ = [];\n    foreach ($arr as $key => $value) {\n        $res[] = $nums[$key];\n\
    \    }\n    return $res;\n}\n", "    $sum_nums = [];\n    foreach ($nums as $key\
    \ => $num) {\n        $sum_nums[$key] = array_sum(str_split($num));\n    }\n \
    \   asort($sum_nums);\n    $result = [];\n    foreach ($sum_nums as $key => $sum_num)\
    \ {\n        $result[] = $nums[$key];\n    }\n    return $result;\n}\n", "   \
    \ $sums = array_map(function($num) {\n        $sum = 0;\n        while ($num >\
    \ 0) {\n            $sum += $num % 10;\n            $num = floor($num / 10);\n\
    \        }\n        return $sum;\n    }, $nums);\n    array_multisort($sums, $nums);\n\
    \    return $nums;\n}\n", "    $sum = [];\n    foreach ($nums as $key => $num)\
    \ {\n        $sum[$key] = array_sum(str_split($num));\n    }\n    array_multisort($sum,\
    \ SORT_ASC, $nums);\n    return $nums;\n}\n", "    $sums = array_map(function($num)\
    \ {\n        $sum = 0;\n        while ($num > 0) {\n            $sum += $num %\
    \ 10;\n            $num = (int)($num / 10);\n        }\n        return $sum;\n\
    \    }, $nums);\n    array_multisort($sums, $nums);\n    return $nums;\n}\n",
  "    $sums = [];\n    foreach ($nums as $index => $num) {\n        $sums[$index]\
    \ = array_sum(str_split($num));\n    }\n    asort($sums);\n    $result = [];\n\
    \    foreach ($sums as $index => $sum) {\n        $result[] = $nums[$index];\n\
    \    }\n    return $result;\n}\n", "    $sums = [];\n    foreach ($nums as $index\
    \ => $num) {\n        $sums[$index] = array_sum(str_split($num));\n    }\n   \
    \ asort($sums);\n    $result = [];\n    foreach ($sums as $index => $sum) {\n\
    \        $result[] = $nums[$index];\n    }\n    return $result;\n}\n", "    $result\
    \ = [];\n    foreach ($nums as $key => $value) {\n        $sum = 0;\n        $value\
    \ = abs($value);\n        while ($value > 0) {\n            $sum += $value % 10;\n\
    \            $value = (int)($value / 10);\n        }\n        $result[$key] =\
    \ $sum;\n    }\n    asort($result);\n    $result = array_keys($result);\n    foreach\
    \ ($result as $key => $value) {\n        $result[$key] = $nums[$value];\n    }\n\
    \    return $result;\n}\n", "    $result = [];\n    $sums = [];\n    foreach ($nums\
    \ as $key => $num) {\n        $sum = 0;\n        foreach (str_split($num) as $digit)\
    \ {\n            $sum += $digit;\n        }\n        $sums[$key] = $sum;\n   \
    \ }\n    asort($sums);\n    foreach ($sums as $key => $sum) {\n        $result[]\
    \ = $nums[$key];\n    }\n    return $result;\n}\n", "    $sums = array_map(function($num)\
    \ {\n        return array_sum(str_split($num));\n    }, $nums);\n    array_multisort($sums,\
    \ $nums);\n    return $nums;\n}\n", "    $result = [];\n    $sums = [];\n    foreach\
    \ ($nums as $key => $num) {\n        $sum = 0;\n        $num = abs($num);\n  \
    \      while ($num > 0) {\n            $sum += $num % 10;\n            $num =\
    \ floor($num / 10);\n        }\n        $sums[$key] = $sum;\n    }\n    asort($sums);\n\
    \    foreach ($sums as $key => $sum) {\n        $result[] = $nums[$key];\n   \
    \ }\n    return $result;\n}\n", "    $sums = [];\n    foreach ($nums as $i =>\
    \ $num) {\n        $sum = 0;\n        $num = abs($num);\n        while ($num >\
    \ 0) {\n            $sum += $num % 10;\n            $num = floor($num / 10);\n\
    \        }\n        $sums[$i] = $sum;\n    }\n    asort($sums);\n    $result =\
    \ [];\n    foreach ($sums as $i => $sum) {\n        $result[] = $nums[$i];\n \
    \   }\n    return $result;\n}\n", "    $sums = [];\n    foreach ($nums as $key\
    \ => $num) {\n        $sums[$key] = array_sum(str_split($num));\n    }\n    asort($sums);\n\
    \    $result = [];\n    foreach ($sums as $key => $sum) {\n        $result[] =\
    \ $nums[$key];\n    }\n    return $result;\n}\n", "    $sums = array_map(function($num)\
    \ {\n        return array_sum(str_split($num));\n    }, $nums);\n    array_multisort($sums,\
    \ $nums);\n    return $nums;\n}\n", "    $nums_with_points = [];\n    foreach\
    \ ($nums as $index => $num) {\n        $points = 0;\n        $num_str = (string)$num;\n\
    \        for ($i = 0; $i < strlen($num_str); $i++) {\n            $points += (int)$num_str[$i];\n\
    \        }\n        $nums_with_points[] = [$points, $index, $num];\n    }\n  \
    \  usort($nums_with_points, function ($a, $b) {\n        if ($a[0] == $b[0]) {\n\
    \            return $a[1] - $b[1];\n        }\n        return $a[0] - $b[0];\n\
    \    });\n    $result = [];\n    foreach ($nums_with_points as $num_with_points)\
    \ {\n        $result[] = $num_with_points[2];\n    }\n    return $result;\n}\n",
  "    $sum_nums = [];\n    foreach ($nums as $key => $num) {\n        $sum_nums[$key]\
    \ = array_sum(str_split($num));\n    }\n    asort($sum_nums);\n    $result = [];\n\
    \    foreach ($sum_nums as $key => $sum_num) {\n        $result[] = $nums[$key];\n\
    \    }\n    return $result;\n}\n", "    $sums = [];\n    foreach ($nums as $index\
    \ => $num) {\n        $sums[$index] = array_sum(str_split($num));\n    }\n   \
    \ asort($sums);\n    $result = [];\n    foreach ($sums as $index => $sum) {\n\
    \        $result[] = $nums[$index];\n    }\n    return $result;\n}\n", "    $result\
    \ = [];\n    $sum = [];\n    foreach ($nums as $key => $num) {\n        $sum[$key]\
    \ = array_sum(str_split($num));\n    }\n    asort($sum);\n    foreach ($sum as\
    \ $key => $value) {\n        $result[] = $nums[$key];\n    }\n    return $result;\n\
    }\n", "    $result = [];\n    $sum = [];\n    foreach ($nums as $key => $value)\
    \ {\n        $sum[$key] = array_sum(str_split($value));\n    }\n    asort($sum);\n\
    \    foreach ($sum as $key => $value) {\n        $result[] = $nums[$key];\n  \
    \  }\n    return $result;\n}\n", "    $nums_with_points = [];\n    foreach ($nums\
    \ as $index => $num) {\n        $nums_with_points[$index] = [\n            'num'\
    \ => $num,\n            'points' => array_sum(str_split(abs($num)))\n        ];\n\
    \    }\n    usort($nums_with_points, function ($a, $b) {\n        if ($a['points']\
    \ == $b['points']) {\n            return $a['index'] - $b['index'];\n        }\n\
    \        return $a['points'] - $b['points'];\n    });\n    return array_column($nums_with_points,\
    \ 'num');\n}\n", "    $nums_with_points = [];\n    foreach ($nums as $index =>\
    \ $num) {\n        $points = 0;\n        $num_str = strval($num);\n        for\
    \ ($i = 0; $i < strlen($num_str); $i++) {\n            $points += intval($num_str[$i]);\n\
    \        }\n        $nums_with_points[] = [$index, $points, $num];\n    }\n  \
    \  usort($nums_with_points, function ($a, $b) {\n        if ($a[1] == $b[1]) {\n\
    \            return $a[0] - $b[0];\n        }\n        return $a[1] - $b[1];\n\
    \    });\n    $result = [];\n    foreach ($nums_with_points as $num_with_points)\
    \ {\n        $result[] = $num_with_points[2];\n    }\n    return $result;\n}\n",
  "    $sums = [];\n    foreach ($nums as $key => $num) {\n        $sums[$key] = array_sum(str_split($num));\n\
    \    }\n    asort($sums);\n    $result = [];\n    foreach ($sums as $key => $sum)\
    \ {\n        $result[] = $nums[$key];\n    }\n    return $result;\n}\n", "   \
    \ $sum = [];\n    foreach ($nums as $key => $value) {\n        $sum[$key] = array_sum(str_split($value));\n\
    \    }\n    array_multisort($sum, SORT_ASC, $nums);\n    return $nums;\n}\n",
  "    $sum_of_digits = [];\n    foreach ($nums as $key => $num) {\n        $sum_of_digits[$key]\
    \ = array_sum(str_split($num));\n    }\n    array_multisort($sum_of_digits, SORT_ASC,\
    \ $nums);\n    return $nums;\n}\n", "    $sum = array_map(function($num) {\n \
    \       $sum = 0;\n        $num = abs($num);\n        while ($num > 0) {\n   \
    \         $sum += $num % 10;\n            $num = floor($num / 10);\n        }\n\
    \        return $sum;\n    }, $nums);\n    array_multisort($sum, SORT_ASC, $nums);\n\
    \    return $nums;\n}\n", "    $result = [];\n    $sums = [];\n    foreach ($nums\
    \ as $key => $num) {\n        $sum = 0;\n        $num = abs($num);\n        while\
    \ ($num > 0) {\n            $sum += $num % 10;\n            $num = floor($num\
    \ / 10);\n        }\n        $sums[$key] = $sum;\n    }\n    asort($sums);\n \
    \   foreach ($sums as $key => $sum) {\n        $result[] = $nums[$key];\n    }\n\
    \    return $result;\n}\n", "    $sums = array_map(function($num) {\n        return\
    \ array_sum(str_split($num));\n    }, $nums);\n    array_multisort($sums, $nums);\n\
    \    return $nums;\n}\n", "    $sums = [];\n    foreach ($nums as $key => $num)\
    \ {\n        $sum = 0;\n        $num = abs($num);\n        while ($num > 0) {\n\
    \            $sum += $num % 10;\n            $num = (int)($num / 10);\n      \
    \  }\n        $sums[$key] = $sum;\n    }\n    asort($sums);\n    $result = [];\n\
    \    foreach ($sums as $key => $sum) {\n        $result[] = $nums[$key];\n   \
    \ }\n    return $result;\n}\n", "    $result = [];\n    $sum = [];\n    foreach\
    \ ($nums as $key => $num) {\n        $sum[$key] = array_sum(str_split($num));\n\
    \    }\n    asort($sum);\n    foreach ($sum as $key => $value) {\n        $result[]\
    \ = $nums[$key];\n    }\n    return $result;\n}\n", "    $sum_of_digits = array_map(function($num)\
    \ {\n        $sum = 0;\n        $num = abs($num);\n        while ($num > 0) {\n\
    \            $sum += $num % 10;\n            $num = floor($num / 10);\n      \
    \  }\n        return $sum;\n    }, $nums);\n    array_multisort($sum_of_digits,\
    \ SORT_ASC, $nums);\n    return $nums;\n}\n", "    $sums = [];\n    foreach ($nums\
    \ as $key => $num) {\n        $sums[$key] = array_sum(str_split($num));\n    }\n\
    \    array_multisort($sums, SORT_ASC, $nums);\n    return $nums;\n}\n", "    $sums\
    \ = [];\n    foreach ($nums as $key => $num) {\n        $sums[$key] = sum_of_digits($num);\n\
    \    }\n    array_multisort($sums, SORT_ASC, $nums);\n    return $nums;\n}\n",
  "    $sum = array_map(function($num) {\n        return array_sum(str_split($num));\n\
    \    }, $nums);\n    array_multisort($sum, SORT_ASC, $nums);\n    return $nums;\n\
    }\n", "    $nums_with_points = [];\n    foreach ($nums as $key => $num) {\n  \
    \      $nums_with_points[$key] = [\n            'num' => $num,\n            'points'\
    \ => array_sum(str_split(abs($num)))\n        ];\n    }\n    usort($nums_with_points,\
    \ function ($a, $b) {\n        if ($a['points'] == $b['points']) {\n         \
    \   return $a['num'] <=> $b['num'];\n        }\n        return $a['points'] <=>\
    \ $b['points'];\n    });\n    return array_column($nums_with_points, 'num');\n\
    }\n", "    $sums = array_map(function($n) {\n        return array_sum(str_split($n));\n\
    \    }, $nums);\n    array_multisort($sums, $nums);\n    return $nums;\n}\n",
  "    $sum_nums = [];\n    foreach ($nums as $key => $value) {\n        $sum_nums[$key]\
    \ = array_sum(str_split($value));\n    }\n    array_multisort($sum_nums, SORT_ASC,\
    \ $nums);\n    return $nums;\n}\n", "    $result = [];\n    $sums = [];\n    foreach\
    \ ($nums as $key => $num) {\n        $sum = 0;\n        $num = abs($num);\n  \
    \      while ($num > 0) {\n            $sum += $num % 10;\n            $num =\
    \ floor($num / 10);\n        }\n        $sums[$key] = $sum;\n    }\n    asort($sums);\n\
    \    foreach ($sums as $key => $sum) {\n        $result[] = $nums[$key];\n   \
    \ }\n    return $result;\n}\n", "    $sums = [];\n    foreach ($nums as $key =>\
    \ $num) {\n        $sums[$key] = array_sum(str_split($num));\n    }\n    asort($sums);\n\
    \    $result = [];\n    foreach ($sums as $key => $sum) {\n        $result[] =\
    \ $nums[$key];\n    }\n    return $result;\n}\n", "    $sums = [];\n    foreach\
    \ ($nums as $key => $num) {\n        $sum = 0;\n        $num = abs($num);\n  \
    \      while ($num > 0) {\n            $sum += $num % 10;\n            $num =\
    \ (int)($num / 10);\n        }\n        $sums[$key] = $sum;\n    }\n    asort($sums);\n\
    \    $result = [];\n    foreach ($sums as $key => $sum) {\n        $result[] =\
    \ $nums[$key];\n    }\n    return $result;\n}\n", "    $nums_with_points = [];\n\
    \    foreach ($nums as $key => $num) {\n        $nums_with_points[$key] = [\n\
    \            'num' => $num,\n            'points' => array_sum(str_split(abs($num)))\n\
    \        ];\n    }\n    usort($nums_with_points, function ($a, $b) {\n       \
    \ if ($a['points'] == $b['points']) {\n            return $a['num'] <=> $b['num'];\n\
    \        }\n        return $a['points'] <=> $b['points'];\n    });\n    return\
    \ array_column($nums_with_points, 'num');\n}\n", "    $sums = [];\n    foreach\
    \ ($nums as $key => $num) {\n        $sums[$key] = array_sum(str_split($num));\n\
    \    }\n    array_multisort($sums, SORT_ASC, $nums);\n    return $nums;\n}\n",
  "    $sums = [];\n    foreach ($nums as $key => $num) {\n        $sum = 0;\n   \
    \     $num = abs($num);\n        while ($num > 0) {\n            $sum += $num\
    \ % 10;\n            $num = (int)($num / 10);\n        }\n        $sums[$key]\
    \ = $sum;\n    }\n    asort($sums);\n    $result = [];\n    foreach ($sums as\
    \ $key => $sum) {\n        $result[] = $nums[$key];\n    }\n    return $result;\n\
    }\n", "    $result = [];\n    foreach ($nums as $key => $num) {\n        $result[$key]\
    \ = array_sum(str_split($num));\n    }\n    asort($result);\n    $result = array_keys($result);\n\
    \    foreach ($result as $key => $value) {\n        $result[$key] = $nums[$value];\n\
    \    }\n    return $result;\n}\n", "    $result = [];\n    $sums = [];\n    foreach\
    \ ($nums as $key => $num) {\n        $sum = 0;\n        $num = abs($num);\n  \
    \      while ($num > 0) {\n            $sum += $num % 10;\n            $num =\
    \ floor($num / 10);\n        }\n        $sums[$key] = $sum;\n    }\n    asort($sums);\n\
    \    foreach ($sums as $key => $sum) {\n        $result[] = $nums[$key];\n   \
    \ }\n    return $result;\n}\n", "    $sum = [];\n    foreach ($nums as $key =>\
    \ $value) {\n        $sum[$key] = array_sum(str_split($value));\n    }\n    array_multisort($sum,\
    \ SORT_ASC, $nums);\n    return $nums;\n}\n", "    $nums_with_points = [];\n \
    \   foreach ($nums as $index => $num) {\n        $nums_with_points[$index] = [\n\
    \            'num' => $num,\n            'points' => array_sum(str_split(abs($num)))\n\
    \        ];\n    }\n    usort($nums_with_points, function ($a, $b) {\n       \
    \ if ($a['points'] == $b['points']) {\n            return $a['index'] - $b['index'];\n\
    \        }\n        return $a['points'] - $b['points'];\n    });\n    return array_column($nums_with_points,\
    \ 'num');\n}\n", "    $sums = [];\n    foreach ($nums as $key => $num) {\n   \
    \     $sums[$key] = array_sum(str_split($num));\n    }\n    array_multisort($sums,\
    \ SORT_ASC, $nums);\n    return $nums;\n}\n", "  $sum_nums = [];\n  foreach ($nums\
    \ as $key => $num) {\n    $sum_nums[$key] = array_sum(str_split($num));\n  }\n\
    \  array_multisort($sum_nums, SORT_ASC, $nums);\n  return $nums;\n}\n", "    $arr\
    \ = [];\n    foreach ($nums as $key => $num) {\n        $arr[$key] = array_sum(str_split($num));\n\
    \    }\n    asort($arr);\n    $result = [];\n    foreach ($arr as $key => $value)\
    \ {\n        $result[] = $nums[$key];\n    }\n    return $result;\n}\n", "   \
    \ $sum = array_map(function($num) {\n        $sum = 0;\n        $num_str = strval($num);\n\
    \        for ($i = 0; $i < strlen($num_str); $i++) {\n            $sum += intval($num_str[$i]);\n\
    \        }\n        return $sum;\n    }, $nums);\n    array_multisort($sum, SORT_ASC,\
    \ $nums);\n    return $nums;\n}\n", "    $result = [];\n    $points = [];\n  \
    \  foreach ($nums as $key => $num) {\n        $points[$key] = array_sum(str_split($num));\n\
    \    }\n    asort($points);\n    foreach ($points as $key => $point) {\n     \
    \   $result[] = $nums[$key];\n    }\n    return $result;\n}\n", "    $sums = [];\n\
    \    foreach ($nums as $index => $num) {\n        $sum = 0;\n        $num = abs($num);\n\
    \        while ($num > 0) {\n            $sum += $num % 10;\n            $num\
    \ = floor($num / 10);\n        }\n        $sums[$index] = $sum;\n    }\n    asort($sums);\n\
    \    $result = [];\n    foreach ($sums as $index => $sum) {\n        $result[]\
    \ = $nums[$index];\n    }\n    return $result;\n}\n", "    $result = [];\n   \
    \ $sum = [];\n    foreach ($nums as $key => $value) {\n        $sum[$key] = array_sum(str_split($value));\n\
    \    }\n    asort($sum);\n    foreach ($sum as $key => $value) {\n        $result[]\
    \ = $nums[$key];\n    }\n    return $result;\n}\n", "    $sum_of_digits = array_map(function($num)\
    \ {\n        $sum = 0;\n        $num = abs($num);\n        while ($num > 0) {\n\
    \            $sum += $num % 10;\n            $num = floor($num / 10);\n      \
    \  }\n        return $sum;\n    }, $nums);\n    array_multisort($sum_of_digits,\
    \ SORT_ASC, $nums);\n    return $nums;\n}\n", "    $sums = [];\n    foreach ($nums\
    \ as $key => $num) {\n        $sum = 0;\n        $num = abs($num);\n        while\
    \ ($num > 0) {\n            $sum += $num % 10;\n            $num = floor($num\
    \ / 10);\n        }\n        $sums[$key] = $sum;\n    }\n    asort($sums);\n \
    \   $result = [];\n    foreach ($sums as $key => $sum) {\n        $result[] =\
    \ $nums[$key];\n    }\n    return $result;\n}\n", "    $sums = [];\n    foreach\
    \ ($nums as $index => $num) {\n        $sum = 0;\n        $num = abs($num);\n\
    \        while ($num > 0) {\n            $sum += $num % 10;\n            $num\
    \ = (int)($num / 10);\n        }\n        $sums[$index] = $sum;\n    }\n    asort($sums);\n\
    \    $result = [];\n    foreach ($sums as $index => $sum) {\n        $result[]\
    \ = $nums[$index];\n    }\n    return $result;\n}\n", "    $sum = [];\n    foreach\
    \ ($nums as $key => $value) {\n        $sum[$key] = array_sum(str_split($value));\n\
    \    }\n    array_multisort($sum, SORT_ASC, $nums);\n    return $nums;\n}\n",
  "    $sums = array_map(function($num) {\n        return array_sum(str_split($num));\n\
    \    }, $nums);\n    array_multisort($sums, $nums);\n    return $nums;\n}\n",
  "    $sum_nums = array_map(function($num) {\n        $sum = 0;\n        $num = abs($num);\n\
    \        while ($num > 0) {\n            $sum += $num % 10;\n            $num\
    \ = floor($num / 10);\n        }\n        return $sum;\n    }, $nums);\n    array_multisort($sum_nums,\
    \ $nums);\n    return $nums;\n}\n", "    $sums = [];\n    foreach ($nums as $key\
    \ => $num) {\n        $sums[$key] = array_sum(str_split($num));\n    }\n    asort($sums);\n\
    \    $result = [];\n    foreach ($sums as $key => $sum) {\n        $result[] =\
    \ $nums[$key];\n    }\n    return $result;\n}\n", "    $result = [];\n    foreach\
    \ ($nums as $key => $value) {\n        $result[$key] = array_sum(str_split($value));\n\
    \    }\n    asort($result);\n    $result = array_keys($result);\n    foreach ($result\
    \ as $key => $value) {\n        $result[$key] = $nums[$value];\n    }\n    return\
    \ $result;\n}\n", "    $sums = [];\n    foreach ($nums as $key => $num) {\n  \
    \      $sums[$key] = array_sum(str_split($num));\n    }\n    asort($sums);\n \
    \   $result = [];\n    foreach ($sums as $key => $sum) {\n        $result[] =\
    \ $nums[$key];\n    }\n    return $result;\n}\n", "    $nums_with_points = [];\n\
    \    foreach ($nums as $key => $num) {\n        $nums_with_points[$key] = [\n\
    \            'num' => $num,\n            'points' => array_sum(str_split(abs($num)))\n\
    \        ];\n    }\n    usort($nums_with_points, function ($a, $b) {\n       \
    \ if ($a['points'] === $b['points']) {\n            return $a['num'] <=> $b['num'];\n\
    \        }\n        return $a['points'] <=> $b['points'];\n    });\n    return\
    \ array_column($nums_with_points, 'num');\n}\n", "    $sums = [];\n    foreach\
    \ ($nums as $i => $num) {\n        $sums[$i] = array_sum(str_split($num));\n \
    \   }\n    asort($sums);\n    $result = [];\n    foreach ($sums as $i => $sum)\
    \ {\n        $result[] = $nums[$i];\n    }\n    return $result;\n}\n", "    $sum\
    \ = [];\n    foreach ($nums as $key => $value) {\n        $sum[$key] = array_sum(str_split($value));\n\
    \    }\n    array_multisort($sum, SORT_ASC, $nums);\n    return $nums;\n}\n",
  "    $result = [];\n    $sums = [];\n    foreach ($nums as $key => $num) {\n   \
    \     $sum = 0;\n        $num = abs($num);\n        while ($num > 0) {\n     \
    \       $sum += $num % 10;\n            $num = (int)($num / 10);\n        }\n\
    \        $sums[$key] = $sum;\n    }\n    asort($sums);\n    foreach ($sums as\
    \ $key => $sum) {\n        $result[] = $nums[$key];\n    }\n    return $result;\n\
    }\n", "    $result = [];\n    $sum = [];\n    foreach ($nums as $key => $value)\
    \ {\n        $sum[$key] = array_sum(str_split($value));\n    }\n    asort($sum);\n\
    \    foreach ($sum as $key => $value) {\n        $result[] = $nums[$key];\n  \
    \  }\n    return $result;\n}\n", "    $sums = array_map(function($num) {\n   \
    \     return array_sum(str_split($num));\n    }, $nums);\n    array_multisort($sums,\
    \ $nums);\n    return $nums;\n}\n", "    $sums = [];\n    foreach ($nums as $key\
    \ => $num) {\n        $sum = 0;\n        $num = abs($num);\n        while ($num\
    \ > 0) {\n            $sum += $num % 10;\n            $num = floor($num / 10);\n\
    \        }\n        $sums[$key] = $sum;\n    }\n    asort($sums);\n    $result\
    \ = [];\n    foreach ($sums as $key => $sum) {\n        $result[] = $nums[$key];\n\
    \    }\n    return $result;\n}\n", "    $sums = [];\n    foreach ($nums as $key\
    \ => $num) {\n        $sum = 0;\n        $num = abs($num);\n        while ($num\
    \ > 0) {\n            $sum += $num % 10;\n            $num = floor($num / 10);\n\
    \        }\n        $sums[$key] = $sum;\n    }\n    asort($sums);\n    $result\
    \ = [];\n    foreach ($sums as $key => $sum) {\n        $result[] = $nums[$key];\n\
    \    }\n    return $result;\n}\n", "    $sum_nums = [];\n    foreach ($nums as\
    \ $key => $num) {\n        $sum_nums[$key] = array_sum(str_split($num));\n   \
    \ }\n    array_multisort($sum_nums, SORT_ASC, $nums);\n    return $nums;\n}\n",
  "    $result = [];\n    $nums_with_points = [];\n    foreach ($nums as $key => $num)\
    \ {\n        $nums_with_points[$key] = [\n            'num' => $num,\n       \
    \     'points' => array_sum(str_split($num))\n        ];\n    }\n    usort($nums_with_points,\
    \ function ($a, $b) {\n        if ($a['points'] == $b['points']) {\n         \
    \   return $a['num'] <=> $b['num'];\n        }\n        return $a['points'] <=>\
    \ $b['points'];\n    });\n    foreach ($nums_with_points as $num_with_points)\
    \ {\n        $result[] = $num_with_points['num'];\n    }\n    return $result;\n\
    }\n", "    $sums = [];\n    foreach ($nums as $key => $num) {\n        $sums[$key]\
    \ = array_sum(str_split($num));\n    }\n    asort($sums);\n    $result = [];\n\
    \    foreach ($sums as $key => $sum) {\n        $result[] = $nums[$key];\n   \
    \ }\n    return $result;\n}\n", "    $sums = array_map(function($num) {\n    \
    \    $sum = 0;\n        $num = abs($num);\n        while ($num > 0) {\n      \
    \      $sum += $num % 10;\n            $num = (int)($num / 10);\n        }\n \
    \       return $sum;\n    }, $nums);\n    array_multisort($sums, SORT_ASC, $nums);\n\
    \    return $nums;\n}\n", "    $sums = [];\n    foreach ($nums as $key => $num)\
    \ {\n        $sum = 0;\n        $num = abs($num);\n        while ($num > 0) {\n\
    \            $sum += $num % 10;\n            $num = intval($num / 10);\n     \
    \   }\n        $sums[$key] = $sum;\n    }\n    asort($sums);\n    $result = [];\n\
    \    foreach ($sums as $key => $sum) {\n        $result[] = $nums[$key];\n   \
    \ }\n    return $result;\n}\n", "    $sums = [];\n    foreach ($nums as $key =>\
    \ $num) {\n        $sums[$key] = array_sum(str_split($num));\n    }\n    array_multisort($sums,\
    \ SORT_ASC, $nums);\n    return $nums;\n}\n", "    $sums = [];\n    foreach ($nums\
    \ as $key => $num) {\n        $sum = 0;\n        while ($num != 0) {\n       \
    \     $sum += $num % 10;\n            $num = (int)($num / 10);\n        }\n  \
    \      $sums[$key] = $sum;\n    }\n    array_multisort($sums, SORT_ASC, $nums);\n\
    \    return $nums;\n}\n", "    $points = array_map(function($num) {\n        return\
    \ array_sum(str_split($num));\n    }, $nums);\n    array_multisort($points, SORT_ASC,\
    \ $nums);\n    return $nums;\n}\n", "    $result = [];\n    $sum = [];\n    foreach\
    \ ($nums as $key => $value) {\n        $sum[$key] = array_sum(str_split($value));\n\
    \    }\n    asort($sum);\n    foreach ($sum as $key => $value) {\n        $result[]\
    \ = $nums[$key];\n    }\n    return $result;\n}\n", "    $sum_nums = [];\n   \
    \ foreach ($nums as $key => $num) {\n        $sum_nums[$key] = sum_digits($num);\n\
    \    }\n    asort($sum_nums);\n    $result = [];\n    foreach ($sum_nums as $key\
    \ => $sum_num) {\n        $result[] = $nums[$key];\n    }\n    return $result;\n\
    }\n", "    $result = [];\n    $sums = [];\n    foreach ($nums as $key => $num)\
    \ {\n        $sum = 0;\n        $num = abs($num);\n        while ($num > 0) {\n\
    \            $sum += $num % 10;\n            $num = floor($num / 10);\n      \
    \  }\n        $sums[$key] = $sum;\n    }\n    asort($sums);\n    foreach ($sums\
    \ as $key => $sum) {\n        $result[] = $nums[$key];\n    }\n    return $result;\n\
    }\n", "    $result = [];\n    foreach ($nums as $key => $num) {\n        $result[$key]\
    \ = array_sum(str_split($num));\n    }\n    asort($result);\n    $result = array_keys($result);\n\
    \    foreach ($result as $key => $value) {\n        $result[$key] = $nums[$value];\n\
    \    }\n    return $result;\n}\n", "    $sums = [];\n    foreach ($nums as $index\
    \ => $num) {\n        $sum = 0;\n        $num = abs($num);\n        while ($num\
    \ > 0) {\n            $sum += $num % 10;\n            $num = floor($num / 10);\n\
    \        }\n        $sums[$index] = $sum;\n    }\n    asort($sums);\n    $result\
    \ = [];\n    foreach ($sums as $index => $sum) {\n        $result[] = $nums[$index];\n\
    \    }\n    return $result;\n}\n", "    $result = [];\n    foreach ($nums as $key\
    \ => $num) {\n        $result[$key] = array_sum(str_split($num));\n    }\n   \
    \ asort($result);\n    $result = array_keys($result);\n    $result = array_map(function($num)\
    \ use ($nums) {\n        return $nums[$num];\n    }, $result);\n    return $result;\n\
    }\n", "    $sums = array_map(function($n) {\n        $sum = 0;\n        while\
    \ ($n > 0) {\n            $sum += $n % 10;\n            $n = intval($n / 10);\n\
    \        }\n        return $sum;\n    }, $nums);\n    array_multisort($sums, $nums);\n\
    \    return $nums;\n}\n", "    $nums_with_points = [];\n    foreach ($nums as\
    \ $index => $num) {\n        $nums_with_points[$index] = [\n            'num'\
    \ => $num,\n            'points' => array_sum(str_split(abs($num)))\n        ];\n\
    \    }\n    usort($nums_with_points, function ($a, $b) {\n        if ($a['points']\
    \ == $b['points']) {\n            return $a['index'] - $b['index'];\n        }\n\
    \        return $a['points'] - $b['points'];\n    });\n    return array_column($nums_with_points,\
    \ 'num');\n}\n", "    $sums = array_map(function($num) {\n        return array_sum(str_split($num));\n\
    \    }, $nums);\n    array_multisort($sums, $nums);\n    return $nums;\n}\n",
  "    $result = [];\n    foreach ($nums as $key => $num) {\n        $sum = 0;\n \
    \       $num = abs($num);\n        while ($num > 0) {\n            $sum += $num\
    \ % 10;\n            $num = floor($num / 10);\n        }\n        $result[$key]\
    \ = $sum;\n    }\n    asort($result);\n    $result = array_keys($result);\n  \
    \  $result = array_map(function ($key) use ($nums) {\n        return $nums[$key];\n\
    \    }, $result);\n    return $result;\n}\n", "    $sum_of_digits = [];\n    foreach\
    \ ($nums as $key => $num) {\n        $sum_of_digits[$key] = array_sum(str_split($num));\n\
    \    }\n    array_multisort($sum_of_digits, SORT_ASC, $nums);\n    return $nums;\n\
    }\n", "    $nums_sorted = [];\n    $nums_sorted_index = [];\n    $nums_sorted_sum\
    \ = [];\n    $nums_sorted_sum_index = [];\n    for ($i = 0; $i < count($nums);\
    \ $i++) {\n        $nums_sorted[$i] = $nums[$i];\n        $nums_sorted_index[$i]\
    \ = $i;\n        $nums_sorted_sum[$i] = 0;\n        $nums_sorted_sum_index[$i]\
    \ = 0;\n        $nums_sorted_sum[$i] = sum_of_digits($nums[$i]);\n        $nums_sorted_sum_index[$i]\
    \ = $i;\n    }\n    array_multisort($nums_sorted_sum, $nums_sorted_sum_index);\n\
    \    for ($i = 0; $i < count($nums); $i++) {\n        $nums_sorted[$i] = $nums[$nums_sorted_sum_index[$i]];\n\
    \    }\n    return $nums_sorted;\n}\n", "  $sums = [];\n  foreach ($nums as $key\
    \ => $num) {\n    $sums[$key] = array_sum(str_split($num));\n  }\n  asort($sums);\n\
    \  $result = [];\n  foreach ($sums as $key => $sum) {\n    $result[] = $nums[$key];\n\
    \  }\n  return $result;\n}\n", "    $nums_with_points = [];\n    foreach ($nums\
    \ as $key => $num) {\n        $nums_with_points[$key] = [\n            'num' =>\
    \ $num,\n            'points' => array_sum(str_split(abs($num)))\n        ];\n\
    \    }\n    usort($nums_with_points, function ($a, $b) {\n        if ($a['points']\
    \ == $b['points']) {\n            return $a['num'] <=> $b['num'];\n        }\n\
    \        return $a['points'] <=> $b['points'];\n    });\n    return array_column($nums_with_points,\
    \ 'num');\n}\n", "    $sums = array_map(function($num) {\n        return array_sum(str_split($num));\n\
    \    }, $nums);\n    array_multisort($sums, $nums);\n    return $nums;\n}\n",
  "    $sum = [];\n    foreach ($nums as $key => $value) {\n        $sum[$key] = array_sum(str_split($value));\n\
    \    }\n    array_multisort($sum, SORT_ASC, $nums);\n    return $nums;\n}\n",
  "    $sums = array_map(function($num) {\n        $sum = 0;\n        while ($num\
    \ > 0) {\n            $sum += $num % 10;\n            $num = (int)($num / 10);\n\
    \        }\n        return $sum;\n    }, $nums);\n    array_multisort($sums, $nums);\n\
    \    return $nums;\n}\n", "    $sum_nums = array_map(function($num) {\n      \
    \  $sum = 0;\n        $num = abs($num);\n        while ($num > 0) {\n        \
    \    $sum += $num % 10;\n            $num = (int)($num / 10);\n        }\n   \
    \     return $sum;\n    }, $nums);\n    $sum_nums_with_index = array_map(function($num,\
    \ $index) {\n        return [$num, $index];\n    }, $sum_nums, array_keys($sum_nums));\n\
    \    usort($sum_nums_with_index, function($a, $b) {\n        if ($a[0] == $b[0])\
    \ {\n            return $a[1] - $b[1];\n        }\n        return $a[0] - $b[0];\n\
    \    });\n    $result = array_map(function($sum_num_with_index) use ($nums) {\n\
    \        return $nums[$sum_num_with_index[1]];\n    }, $sum_nums_with_index);\n\
    \    return $result;\n}\n", "    $sums = [];\n    foreach ($nums as $key => $num)\
    \ {\n        $sum = 0;\n        $num = abs($num);\n        while ($num > 0) {\n\
    \            $sum += $num % 10;\n            $num = floor($num / 10);\n      \
    \  }\n        $sums[$key] = $sum;\n    }\n    asort($sums);\n    $result = [];\n\
    \    foreach ($sums as $key => $sum) {\n        $result[] = $nums[$key];\n   \
    \ }\n    return $result;\n}\n", "    $sums = [];\n    foreach ($nums as $key =>\
    \ $num) {\n        $sums[$key] = array_sum(str_split($num));\n    }\n    asort($sums);\n\
    \    $result = [];\n    foreach ($sums as $key => $sum) {\n        $result[] =\
    \ $nums[$key];\n    }\n    return $result;\n}\n", "    $sums = [];\n    foreach\
    \ ($nums as $key => $num) {\n        $sums[$key] = sum_of_digits($num);\n    }\n\
    \    asort($sums);\n    $result = [];\n    foreach ($sums as $key => $sum) {\n\
    \        $result[] = $nums[$key];\n    }\n    return $result;\n}\n", "    $sum\
    \ = array_map(function($n) {\n        $sum = 0;\n        while ($n) {\n      \
    \      $sum += $n % 10;\n            $n = intval($n / 10);\n        }\n      \
    \  return $sum;\n    }, $nums);\n    array_multisort($sum, SORT_ASC, $nums);\n\
    \    return $nums;\n}\n", "    $sum = [];\n    foreach ($nums as $key => $num)\
    \ {\n        $sum[$key] = array_sum(str_split($num));\n    }\n    array_multisort($sum,\
    \ SORT_ASC, $nums);\n    return $nums;\n}\n", "    $sum = array_map(function($num)\
    \ {\n        return array_sum(str_split($num));\n    }, $nums);\n    array_multisort($sum,\
    \ SORT_ASC, $nums);\n    return $nums;\n}\n", "    $new_nums = [];\n    $new_nums_sum\
    \ = [];\n    foreach ($nums as $key => $num) {\n        $new_nums[$key] = $num;\n\
    \        $new_nums_sum[$key] = array_sum(str_split($num));\n    }\n    array_multisort($new_nums_sum,\
    \ SORT_ASC, $new_nums);\n    return $new_nums;\n}\n", "    $sum_digits = array_map(function($num)\
    \ {\n        $sum = 0;\n        $num = abs($num);\n        while ($num > 0) {\n\
    \            $sum += $num % 10;\n            $num = floor($num / 10);\n      \
    \  }\n        return $sum;\n    }, $nums);\n    array_multisort($sum_digits, $nums);\n\
    \    return $nums;\n}\n", "    $nums_with_points = [];\n    foreach ($nums as\
    \ $index => $num) {\n        $nums_with_points[$index] = [\n            'num'\
    \ => $num,\n            'points' => array_sum(str_split(abs($num)))\n        ];\n\
    \    }\n    usort($nums_with_points, function ($a, $b) {\n        if ($a['points']\
    \ == $b['points']) {\n            return $a['index'] - $b['index'];\n        }\n\
    \        return $a['points'] - $b['points'];\n    });\n    return array_column($nums_with_points,\
    \ 'num');\n}\n", "    $sums = [];\n    foreach ($nums as $key => $num) {\n   \
    \     $sum = 0;\n        $num = abs($num);\n        while ($num > 0) {\n     \
    \       $sum += $num % 10;\n            $num = (int)($num / 10);\n        }\n\
    \        $sums[$key] = $sum;\n    }\n    asort($sums);\n    $result = [];\n  \
    \  foreach ($sums as $key => $sum) {\n        $result[] = $nums[$key];\n    }\n\
    \    return $result;\n}\n", "    $result = [];\n    foreach ($nums as $key =>\
    \ $num) {\n        $sum = 0;\n        $num = abs($num);\n        while ($num >\
    \ 0) {\n            $sum += $num % 10;\n            $num = floor($num / 10);\n\
    \        }\n        $result[$key] = $sum;\n    }\n    asort($result);\n    $result\
    \ = array_keys($result);\n    $result = array_map(function ($key) use ($nums)\
    \ {\n        return $nums[$key];\n    }, $result);\n    return $result;\n}\n",
  "    $result = [];\n    foreach ($nums as $key => $num) {\n        $result[$key]\
    \ = array_sum(str_split($num));\n    }\n    asort($result);\n    $result = array_keys($result);\n\
    \    $result = array_map(function($item) use ($nums) {\n        return $nums[$item];\n\
    \    }, $result);\n    return $result;\n}\n", "    $sums = [];\n    foreach ($nums\
    \ as $key => $num) {\n        $sum = 0;\n        $num = (string) abs($num);\n\
    \        for ($i = 0; $i < strlen($num); $i++) {\n            $sum += $num[$i];\n\
    \        }\n        $sums[$key] = $sum;\n    }\n    asort($sums);\n    $result\
    \ = [];\n    foreach ($sums as $key => $sum) {\n        $result[] = $nums[$key];\n\
    \    }\n    return $result;\n}\n", "    $nums_with_points = [];\n    foreach ($nums\
    \ as $index => $num) {\n        $nums_with_points[$index] = [\n            'num'\
    \ => $num,\n            'points' => array_sum(str_split(abs($num)))\n        ];\n\
    \    }\n    usort($nums_with_points, function ($a, $b) {\n        if ($a['points']\
    \ == $b['points']) {\n            return $a['index'] - $b['index'];\n        }\n\
    \        return $a['points'] - $b['points'];\n    });\n    return array_column($nums_with_points,\
    \ 'num');\n}\n", "    $sum = [];\n    foreach ($nums as $key => $num) {\n    \
    \    $sum[$key] = array_sum(str_split($num));\n    }\n    array_multisort($sum,\
    \ SORT_ASC, $nums);\n    return $nums;\n}\n", "    $result = [];\n    $sums =\
    \ [];\n    foreach ($nums as $key => $num) {\n        $sum = 0;\n        $num\
    \ = abs($num);\n        while ($num > 0) {\n            $sum += $num % 10;\n \
    \           $num = floor($num / 10);\n        }\n        $sums[$key] = $sum;\n\
    \    }\n    asort($sums);\n    foreach ($sums as $key => $sum) {\n        $result[]\
    \ = $nums[$key];\n    }\n    return $result;\n}\n", "    $result = [];\n    $sum\
    \ = [];\n    foreach ($nums as $key => $value) {\n        $sum[$key] = array_sum(str_split($value));\n\
    \    }\n    asort($sum);\n    foreach ($sum as $key => $value) {\n        $result[]\
    \ = $nums[$key];\n    }\n    return $result;\n}\n", "    $sum_of_digits = array_map(function($num)\
    \ {\n        $sum = 0;\n        while ($num != 0) {\n            $sum += $num\
    \ % 10;\n            $num = (int)($num / 10);\n        }\n        return $sum;\n\
    \    }, $nums);\n    array_multisort($sum_of_digits, SORT_ASC, $nums);\n    return\
    \ $nums;\n}\n", "    $result = [];\n    foreach ($nums as $key => $num) {\n  \
    \      $result[$key] = array_sum(str_split($num));\n    }\n    asort($result);\n\
    \    $result = array_keys($result);\n    $new_result = [];\n    foreach ($result\
    \ as $key => $value) {\n        $new_result[$key] = $nums[$value];\n    }\n  \
    \  return $new_result;\n}\n", "    $result = [];\n    foreach ($nums as $key =>\
    \ $num) {\n        $sum = 0;\n        $num = abs($num);\n        while ($num >\
    \ 0) {\n            $sum += $num % 10;\n            $num = floor($num / 10);\n\
    \        }\n        $result[$key] = $sum;\n    }\n    asort($result);\n    $result\
    \ = array_keys($result);\n    $result = array_map(function ($key) use ($nums)\
    \ {\n        return $nums[$key];\n    }, $result);\n    return $result;\n}\n",
  "    $sum_of_digits = array_map(function($num) {\n        $digits = str_split($num);\n\
    \        return array_sum($digits);\n    }, $nums);\n    array_multisort($sum_of_digits,\
    \ $nums);\n    return $nums;\n}\n", "    $sums = array_map(function($num) {\n\
    \        return array_sum(str_split($num));\n    }, $nums);\n    array_multisort($sums,\
    \ $nums);\n    return $nums;\n}\n", "    $nums_sorted = [];\n    foreach ($nums\
    \ as $num) {\n        $sum = 0;\n        $num_str = strval($num);\n        for\
    \ ($i = 0; $i < strlen($num_str); $i++) {\n            $sum += intval($num_str[$i]);\n\
    \        }\n        $nums_sorted[$sum][] = $num;\n    }\n    ksort($nums_sorted);\n\
    \    $nums_sorted_final = [];\n    foreach ($nums_sorted as $sum => $nums) {\n\
    \        foreach ($nums as $num) {\n            $nums_sorted_final[] = $num;\n\
    \        }\n    }\n    return $nums_sorted_final;\n}\n", "    $sum = [];\n   \
    \ foreach ($nums as $key => $value) {\n        $sum[$key] = array_sum(str_split($value));\n\
    \    }\n    array_multisort($sum, SORT_ASC, $nums);\n    return $nums;\n}\n",
  "    $sums = array_map(function($num) {\n        $sum = 0;\n        foreach (str_split($num)\
    \ as $digit) {\n            $sum += $digit;\n        }\n        return $sum;\n\
    \    }, $nums);\n    array_multisort($sums, $nums);\n    return $nums;\n}\n",
  "    $sum = [];\n    foreach ($nums as $key => $num) {\n        $sum[$key] = array_sum(str_split($num));\n\
    \    }\n    array_multisort($sum, SORT_ASC, $nums);\n    return $nums;\n}\n",
  "    $sums = [];\n    foreach ($nums as $key => $num) {\n        $sum = 0;\n   \
    \     $num = abs($num);\n        while ($num > 0) {\n            $sum += $num\
    \ % 10;\n            $num = floor($num / 10);\n        }\n        $sums[$key]\
    \ = $sum;\n    }\n    array_multisort($sums, SORT_ASC, $nums);\n    return $nums;\n\
    }\n", "    $result = [];\n    $sums = [];\n    foreach ($nums as $key => $num)\
    \ {\n        $sum = 0;\n        $num = abs($num);\n        while ($num > 0) {\n\
    \            $sum += $num % 10;\n            $num = floor($num / 10);\n      \
    \  }\n        $sums[$key] = $sum;\n    }\n    asort($sums);\n    foreach ($sums\
    \ as $key => $sum) {\n        $result[] = $nums[$key];\n    }\n    return $result;\n\
    }\n", "    $sum_nums = [];\n    foreach ($nums as $key => $num) {\n        $sum_nums[$key]\
    \ = array_sum(str_split($num));\n    }\n    array_multisort($sum_nums, SORT_ASC,\
    \ $nums);\n    return $nums;\n}\n", "    $sum_nums = array_map(function($num)\
    \ {\n        $sum = 0;\n        $num = abs($num);\n        while ($num > 0) {\n\
    \            $sum += $num % 10;\n            $num = floor($num / 10);\n      \
    \  }\n        return $sum;\n    }, $nums);\n    array_multisort($sum_nums, $nums);\n\
    \    return $nums;\n}\n", "    $result = [];\n    $sum = [];\n    foreach ($nums\
    \ as $key => $value) {\n        $sum[$key] = array_sum(str_split($value));\n \
    \   }\n    asort($sum);\n    foreach ($sum as $key => $value) {\n        $result[]\
    \ = $nums[$key];\n    }\n    return $result;\n}\n", "    $result = [];\n    $sum\
    \ = [];\n    foreach ($nums as $key => $value) {\n        $sum[$key] = array_sum(str_split($value));\n\
    \    }\n    asort($sum);\n    foreach ($sum as $key => $value) {\n        $result[]\
    \ = $nums[$key];\n    }\n    return $result;\n}\n", "    $sums = [];\n    foreach\
    \ ($nums as $key => $num) {\n        $sums[$key] = array_sum(str_split(abs($num)));\n\
    \    }\n    array_multisort($sums, SORT_ASC, $nums);\n    return $nums;\n}\n",
  "    $sum = [];\n    foreach ($nums as $key => $value) {\n        $sum[$key] = array_sum(str_split($value));\n\
    \    }\n    array_multisort($sum, SORT_ASC, $nums);\n    return $nums;\n}\n",
  "    $result = [];\n    foreach ($nums as $key => $num) {\n        $result[$key]\
    \ = array_sum(str_split($num));\n    }\n    asort($result);\n    $result = array_keys($result);\n\
    \    foreach ($result as $key => $value) {\n        $result[$key] = $nums[$value];\n\
    \    }\n    return $result;\n}\n", "    $sum_nums = [];\n    foreach ($nums as\
    \ $key => $num) {\n        $sum_nums[$key] = array_sum(str_split($num));\n   \
    \ }\n    asort($sum_nums);\n    $result = [];\n    foreach ($sum_nums as $key\
    \ => $sum_num) {\n        $result[] = $nums[$key];\n    }\n    return $result;\n\
    }\n", "  $sums = [];\n  foreach ($nums as $key => $num) {\n    $sums[$key] = array_sum(str_split($num));\n\
    \  }\n  array_multisort($sums, SORT_ASC, $nums);\n  return $nums;\n}\n"]
stop_tokens:
- "\nfunction"
- "\n?>"
- "\n//"
- "\n#"

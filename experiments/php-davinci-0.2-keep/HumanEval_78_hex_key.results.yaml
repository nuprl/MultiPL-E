name: HumanEval_78_hex_key
language: php
results:
- program: "<?php\n// You have been tasked to write a function that receives \n//\
    \ a hexadecimal number as a string and counts the number of hexadecimal \n// digits\
    \ that are primes (prime number, or a prime, is a natural number \n// greater\
    \ than 1 that is not a product of two smaller natural numbers).\n// Hexadecimal\
    \ digits are 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, A, B, C, D, E, F.\n// Prime numbers\
    \ are 2, 3, 5, 7, 11, 13, 17,...\n// So you have to determine a number of the\
    \ following digits: 2, 3, 5, 7, \n// B (=decimal 11), D (=decimal 13).\n// Note:\
    \ you may assume the input is always correct or empty string, \n// and symbols\
    \ A,B,C,D,E,F are always uppercase.\n// Examples:\n// For num = \"AB\" the output\
    \ should be 1.\n// For num = \"1077E\" the output should be 2.\n// For num = \"\
    ABED1A33\" the output should be 4.\n// For num = \"123456789ABCDEF0\" the output\
    \ should be 6.\n// For num = \"2020\" the output should be 2.\nfunction hex_key($num)\
    \ {\n    $hex_key = [\n        '0' => 0,\n        '1' => 1,\n        '2' => 2,\n\
    \        '3' => 3,\n        '4' => 4,\n        '5' => 5,\n        '6' => 6,\n\
    \        '7' => 7,\n        '8' => 8,\n        '9' => 9,\n        'A' => 10,\n\
    \        'B' => 11,\n        'C' => 12,\n        'D' => 13,\n        'E' => 14,\n\
    \        'F' => 15\n    ];\n    return $hex_key[$num];\n}\nfunction candidate(...$args)\
    \ {\n    return hex_key(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    AB\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1077E\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ABED1A33\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2020\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    123456789ABCDEF0\") !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"112233445566778899AABBCCDDEEFF00\") !== 12) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Warning:  Undefined array key \"AB\" in /tmp/tmp5rdi1t73.php on line\
    \ 37\nPHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp5rdi1t73.php:44\n\
    Stack trace:\n#0 /tmp/tmp5rdi1t73.php(52): test()\n#1 {main}\n  thrown in /tmp/tmp5rdi1t73.php\
    \ on line 44\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You have been tasked to write a function that receives \n//\
    \ a hexadecimal number as a string and counts the number of hexadecimal \n// digits\
    \ that are primes (prime number, or a prime, is a natural number \n// greater\
    \ than 1 that is not a product of two smaller natural numbers).\n// Hexadecimal\
    \ digits are 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, A, B, C, D, E, F.\n// Prime numbers\
    \ are 2, 3, 5, 7, 11, 13, 17,...\n// So you have to determine a number of the\
    \ following digits: 2, 3, 5, 7, \n// B (=decimal 11), D (=decimal 13).\n// Note:\
    \ you may assume the input is always correct or empty string, \n// and symbols\
    \ A,B,C,D,E,F are always uppercase.\n// Examples:\n// For num = \"AB\" the output\
    \ should be 1.\n// For num = \"1077E\" the output should be 2.\n// For num = \"\
    ABED1A33\" the output should be 4.\n// For num = \"123456789ABCDEF0\" the output\
    \ should be 6.\n// For num = \"2020\" the output should be 2.\nfunction hex_key($num)\
    \ {\n    $hex = ['0','1','2','3','4','5','6','7','8','9','A','B','C','D','E','F'];\n\
    \    $prime = [2,3,5,7,11,13];\n    $count = 0;\n    for ($i=0; $i < strlen($num);\
    \ $i++) { \n        if (in_array($num[$i], $hex)) {\n            if (in_array($num[$i],\
    \ $prime)) {\n                $count++;\n            }\n        }\n    }\n   \
    \ return $count;\n}\necho hex_key(\"AB\").\"\\n\";\necho hex_key(\"1077E\").\"\
    \\n\";\necho hex_key(\"ABED1A33\").\"\\n\";\necho hex_key(\"123456789ABCDEF0\"\
    ).\"\\n\";\necho hex_key(\"2020\").\"\\n\";\nfunction candidate(...$args) {\n\
    \    return hex_key(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    AB\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1077E\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ABED1A33\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2020\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    123456789ABCDEF0\") !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"112233445566778899AABBCCDDEEFF00\") !== 12) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "0\n2\n2\n4\n2\n"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp_21ut7uv.php:41\n\
    Stack trace:\n#0 /tmp/tmp_21ut7uv.php(49): test()\n#1 {main}\n  thrown in /tmp/tmp_21ut7uv.php\
    \ on line 41\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You have been tasked to write a function that receives \n//\
    \ a hexadecimal number as a string and counts the number of hexadecimal \n// digits\
    \ that are primes (prime number, or a prime, is a natural number \n// greater\
    \ than 1 that is not a product of two smaller natural numbers).\n// Hexadecimal\
    \ digits are 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, A, B, C, D, E, F.\n// Prime numbers\
    \ are 2, 3, 5, 7, 11, 13, 17,...\n// So you have to determine a number of the\
    \ following digits: 2, 3, 5, 7, \n// B (=decimal 11), D (=decimal 13).\n// Note:\
    \ you may assume the input is always correct or empty string, \n// and symbols\
    \ A,B,C,D,E,F are always uppercase.\n// Examples:\n// For num = \"AB\" the output\
    \ should be 1.\n// For num = \"1077E\" the output should be 2.\n// For num = \"\
    ABED1A33\" the output should be 4.\n// For num = \"123456789ABCDEF0\" the output\
    \ should be 6.\n// For num = \"2020\" the output should be 2.\nfunction hex_key($num)\
    \ {\n    $hex = [\n        '2' => 2,\n        '3' => 3,\n        '5' => 5,\n \
    \       '7' => 7,\n        'B' => 11,\n        'D' => 13\n    ];\n    $count =\
    \ 0;\n    for ($i = 0; $i < strlen($num); $i++) {\n        if (array_key_exists($num[$i],\
    \ $hex)) {\n            $count++;\n        }\n    }\n    return $count;\n}\necho\
    \ hex_key(\"AB\") . \"\\n\";\necho hex_key(\"1077E\") . \"\\n\";\necho hex_key(\"\
    ABED1A33\") . \"\\n\";\necho hex_key(\"123456789ABCDEF0\") . \"\\n\";\necho hex_key(\"\
    2020\") . \"\\n\";\nfunction candidate(...$args) {\n    return hex_key(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"AB\") !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"1077E\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ABED1A33\") !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2020\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"123456789ABCDEF0\") !== 6) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"112233445566778899AABBCCDDEEFF00\"\
    ) !== 12) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "1\n2\n4\n6\n2\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You have been tasked to write a function that receives \n//\
    \ a hexadecimal number as a string and counts the number of hexadecimal \n// digits\
    \ that are primes (prime number, or a prime, is a natural number \n// greater\
    \ than 1 that is not a product of two smaller natural numbers).\n// Hexadecimal\
    \ digits are 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, A, B, C, D, E, F.\n// Prime numbers\
    \ are 2, 3, 5, 7, 11, 13, 17,...\n// So you have to determine a number of the\
    \ following digits: 2, 3, 5, 7, \n// B (=decimal 11), D (=decimal 13).\n// Note:\
    \ you may assume the input is always correct or empty string, \n// and symbols\
    \ A,B,C,D,E,F are always uppercase.\n// Examples:\n// For num = \"AB\" the output\
    \ should be 1.\n// For num = \"1077E\" the output should be 2.\n// For num = \"\
    ABED1A33\" the output should be 4.\n// For num = \"123456789ABCDEF0\" the output\
    \ should be 6.\n// For num = \"2020\" the output should be 2.\nfunction hex_key($num)\
    \ {\n    $hex_key = [\n        '0' => 0,\n        '1' => 1,\n        '2' => 2,\n\
    \        '3' => 3,\n        '4' => 4,\n        '5' => 5,\n        '6' => 6,\n\
    \        '7' => 7,\n        '8' => 8,\n        '9' => 9,\n        'A' => 10,\n\
    \        'B' => 11,\n        'C' => 12,\n        'D' => 13,\n        'E' => 14,\n\
    \        'F' => 15\n    ];\n    return $hex_key[$num];\n}\nfunction candidate(...$args)\
    \ {\n    return hex_key(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    AB\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1077E\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ABED1A33\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2020\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    123456789ABCDEF0\") !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"112233445566778899AABBCCDDEEFF00\") !== 12) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Warning:  Undefined array key \"AB\" in /tmp/tmpye7oii90.php on line\
    \ 37\nPHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpye7oii90.php:44\n\
    Stack trace:\n#0 /tmp/tmpye7oii90.php(52): test()\n#1 {main}\n  thrown in /tmp/tmpye7oii90.php\
    \ on line 44\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You have been tasked to write a function that receives \n//\
    \ a hexadecimal number as a string and counts the number of hexadecimal \n// digits\
    \ that are primes (prime number, or a prime, is a natural number \n// greater\
    \ than 1 that is not a product of two smaller natural numbers).\n// Hexadecimal\
    \ digits are 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, A, B, C, D, E, F.\n// Prime numbers\
    \ are 2, 3, 5, 7, 11, 13, 17,...\n// So you have to determine a number of the\
    \ following digits: 2, 3, 5, 7, \n// B (=decimal 11), D (=decimal 13).\n// Note:\
    \ you may assume the input is always correct or empty string, \n// and symbols\
    \ A,B,C,D,E,F are always uppercase.\n// Examples:\n// For num = \"AB\" the output\
    \ should be 1.\n// For num = \"1077E\" the output should be 2.\n// For num = \"\
    ABED1A33\" the output should be 4.\n// For num = \"123456789ABCDEF0\" the output\
    \ should be 6.\n// For num = \"2020\" the output should be 2.\nfunction hex_key($num)\
    \ {\n    $hex_key = [\n        '0' => 0,\n        '1' => 1,\n        '2' => 2,\n\
    \        '3' => 3,\n        '4' => 4,\n        '5' => 5,\n        '6' => 6,\n\
    \        '7' => 7,\n        '8' => 8,\n        '9' => 9,\n        'A' => 10,\n\
    \        'B' => 11,\n        'C' => 12,\n        'D' => 13,\n        'E' => 14,\n\
    \        'F' => 15\n    ];\n    return $hex_key[$num];\n}\nfunction candidate(...$args)\
    \ {\n    return hex_key(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    AB\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1077E\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ABED1A33\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2020\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    123456789ABCDEF0\") !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"112233445566778899AABBCCDDEEFF00\") !== 12) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Warning:  Undefined array key \"AB\" in /tmp/tmpdqei5mdp.php on line\
    \ 37\nPHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpdqei5mdp.php:44\n\
    Stack trace:\n#0 /tmp/tmpdqei5mdp.php(52): test()\n#1 {main}\n  thrown in /tmp/tmpdqei5mdp.php\
    \ on line 44\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You have been tasked to write a function that receives \n//\
    \ a hexadecimal number as a string and counts the number of hexadecimal \n// digits\
    \ that are primes (prime number, or a prime, is a natural number \n// greater\
    \ than 1 that is not a product of two smaller natural numbers).\n// Hexadecimal\
    \ digits are 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, A, B, C, D, E, F.\n// Prime numbers\
    \ are 2, 3, 5, 7, 11, 13, 17,...\n// So you have to determine a number of the\
    \ following digits: 2, 3, 5, 7, \n// B (=decimal 11), D (=decimal 13).\n// Note:\
    \ you may assume the input is always correct or empty string, \n// and symbols\
    \ A,B,C,D,E,F are always uppercase.\n// Examples:\n// For num = \"AB\" the output\
    \ should be 1.\n// For num = \"1077E\" the output should be 2.\n// For num = \"\
    ABED1A33\" the output should be 4.\n// For num = \"123456789ABCDEF0\" the output\
    \ should be 6.\n// For num = \"2020\" the output should be 2.\nfunction hex_key($num)\
    \ {\n    $hex_key = [\n        '0' => 0,\n        '1' => 1,\n        '2' => 2,\n\
    \        '3' => 3,\n        '4' => 4,\n        '5' => 5,\n        '6' => 6,\n\
    \        '7' => 7,\n        '8' => 8,\n        '9' => 9,\n        'A' => 10,\n\
    \        'B' => 11,\n        'C' => 12,\n        'D' => 13,\n        'E' => 14,\n\
    \        'F' => 15\n    ];\n    return $hex_key[$num];\n}\nfunction candidate(...$args)\
    \ {\n    return hex_key(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    AB\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1077E\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ABED1A33\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2020\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    123456789ABCDEF0\") !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"112233445566778899AABBCCDDEEFF00\") !== 12) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Warning:  Undefined array key \"AB\" in /tmp/tmpl47ia45q.php on line\
    \ 37\nPHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpl47ia45q.php:44\n\
    Stack trace:\n#0 /tmp/tmpl47ia45q.php(52): test()\n#1 {main}\n  thrown in /tmp/tmpl47ia45q.php\
    \ on line 44\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You have been tasked to write a function that receives \n//\
    \ a hexadecimal number as a string and counts the number of hexadecimal \n// digits\
    \ that are primes (prime number, or a prime, is a natural number \n// greater\
    \ than 1 that is not a product of two smaller natural numbers).\n// Hexadecimal\
    \ digits are 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, A, B, C, D, E, F.\n// Prime numbers\
    \ are 2, 3, 5, 7, 11, 13, 17,...\n// So you have to determine a number of the\
    \ following digits: 2, 3, 5, 7, \n// B (=decimal 11), D (=decimal 13).\n// Note:\
    \ you may assume the input is always correct or empty string, \n// and symbols\
    \ A,B,C,D,E,F are always uppercase.\n// Examples:\n// For num = \"AB\" the output\
    \ should be 1.\n// For num = \"1077E\" the output should be 2.\n// For num = \"\
    ABED1A33\" the output should be 4.\n// For num = \"123456789ABCDEF0\" the output\
    \ should be 6.\n// For num = \"2020\" the output should be 2.\nfunction hex_key($num)\
    \ {\n    $hex_key = array(\n        '0' => 0,\n        '1' => 1,\n        '2'\
    \ => 2,\n        '3' => 3,\n        '4' => 4,\n        '5' => 5,\n        '6'\
    \ => 6,\n        '7' => 7,\n        '8' => 8,\n        '9' => 9,\n        'A'\
    \ => 10,\n        'B' => 11,\n        'C' => 12,\n        'D' => 13,\n       \
    \ 'E' => 14,\n        'F' => 15\n    );\n    return $hex_key[$num];\n}\nfunction\
    \ candidate(...$args) {\n    return hex_key(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"AB\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"1077E\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ABED1A33\") !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"2020\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"123456789ABCDEF0\") !== 6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"112233445566778899AABBCCDDEEFF00\") !==\
    \ 12) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Warning:  Undefined array key \"AB\" in /tmp/tmpovx91igc.php on line\
    \ 37\nPHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpovx91igc.php:44\n\
    Stack trace:\n#0 /tmp/tmpovx91igc.php(52): test()\n#1 {main}\n  thrown in /tmp/tmpovx91igc.php\
    \ on line 44\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You have been tasked to write a function that receives \n//\
    \ a hexadecimal number as a string and counts the number of hexadecimal \n// digits\
    \ that are primes (prime number, or a prime, is a natural number \n// greater\
    \ than 1 that is not a product of two smaller natural numbers).\n// Hexadecimal\
    \ digits are 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, A, B, C, D, E, F.\n// Prime numbers\
    \ are 2, 3, 5, 7, 11, 13, 17,...\n// So you have to determine a number of the\
    \ following digits: 2, 3, 5, 7, \n// B (=decimal 11), D (=decimal 13).\n// Note:\
    \ you may assume the input is always correct or empty string, \n// and symbols\
    \ A,B,C,D,E,F are always uppercase.\n// Examples:\n// For num = \"AB\" the output\
    \ should be 1.\n// For num = \"1077E\" the output should be 2.\n// For num = \"\
    ABED1A33\" the output should be 4.\n// For num = \"123456789ABCDEF0\" the output\
    \ should be 6.\n// For num = \"2020\" the output should be 2.\nfunction hex_key($num)\
    \ {\n    $hex_key = array(\n        \"0\" => 0,\n        \"1\" => 1,\n       \
    \ \"2\" => 2,\n        \"3\" => 3,\n        \"4\" => 4,\n        \"5\" => 5,\n\
    \        \"6\" => 6,\n        \"7\" => 7,\n        \"8\" => 8,\n        \"9\"\
    \ => 9,\n        \"A\" => 10,\n        \"B\" => 11,\n        \"C\" => 12,\n  \
    \      \"D\" => 13,\n        \"E\" => 14,\n        \"F\" => 15\n    );\n    return\
    \ $hex_key[$num];\n}\nfunction candidate(...$args) {\n    return hex_key(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"AB\") !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"1077E\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ABED1A33\") !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2020\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"123456789ABCDEF0\") !== 6) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"112233445566778899AABBCCDDEEFF00\"\
    ) !== 12) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Warning:  Undefined array key \"AB\" in /tmp/tmpxzzuh7k0.php on line\
    \ 37\nPHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpxzzuh7k0.php:44\n\
    Stack trace:\n#0 /tmp/tmpxzzuh7k0.php(52): test()\n#1 {main}\n  thrown in /tmp/tmpxzzuh7k0.php\
    \ on line 44\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You have been tasked to write a function that receives \n//\
    \ a hexadecimal number as a string and counts the number of hexadecimal \n// digits\
    \ that are primes (prime number, or a prime, is a natural number \n// greater\
    \ than 1 that is not a product of two smaller natural numbers).\n// Hexadecimal\
    \ digits are 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, A, B, C, D, E, F.\n// Prime numbers\
    \ are 2, 3, 5, 7, 11, 13, 17,...\n// So you have to determine a number of the\
    \ following digits: 2, 3, 5, 7, \n// B (=decimal 11), D (=decimal 13).\n// Note:\
    \ you may assume the input is always correct or empty string, \n// and symbols\
    \ A,B,C,D,E,F are always uppercase.\n// Examples:\n// For num = \"AB\" the output\
    \ should be 1.\n// For num = \"1077E\" the output should be 2.\n// For num = \"\
    ABED1A33\" the output should be 4.\n// For num = \"123456789ABCDEF0\" the output\
    \ should be 6.\n// For num = \"2020\" the output should be 2.\nfunction hex_key($num)\
    \ {\n    $hex_key = array(\n        \"0\" => 0,\n        \"1\" => 1,\n       \
    \ \"2\" => 2,\n        \"3\" => 3,\n        \"4\" => 4,\n        \"5\" => 5,\n\
    \        \"6\" => 6,\n        \"7\" => 7,\n        \"8\" => 8,\n        \"9\"\
    \ => 9,\n        \"A\" => 10,\n        \"B\" => 11,\n        \"C\" => 12,\n  \
    \      \"D\" => 13,\n        \"E\" => 14,\n        \"F\" => 15\n    );\n    return\
    \ $hex_key[$num];\n}\nfunction candidate(...$args) {\n    return hex_key(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"AB\") !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"1077E\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ABED1A33\") !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2020\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"123456789ABCDEF0\") !== 6) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"112233445566778899AABBCCDDEEFF00\"\
    ) !== 12) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Warning:  Undefined array key \"AB\" in /tmp/tmppkhyxd1o.php on line\
    \ 37\nPHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmppkhyxd1o.php:44\n\
    Stack trace:\n#0 /tmp/tmppkhyxd1o.php(52): test()\n#1 {main}\n  thrown in /tmp/tmppkhyxd1o.php\
    \ on line 44\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You have been tasked to write a function that receives \n//\
    \ a hexadecimal number as a string and counts the number of hexadecimal \n// digits\
    \ that are primes (prime number, or a prime, is a natural number \n// greater\
    \ than 1 that is not a product of two smaller natural numbers).\n// Hexadecimal\
    \ digits are 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, A, B, C, D, E, F.\n// Prime numbers\
    \ are 2, 3, 5, 7, 11, 13, 17,...\n// So you have to determine a number of the\
    \ following digits: 2, 3, 5, 7, \n// B (=decimal 11), D (=decimal 13).\n// Note:\
    \ you may assume the input is always correct or empty string, \n// and symbols\
    \ A,B,C,D,E,F are always uppercase.\n// Examples:\n// For num = \"AB\" the output\
    \ should be 1.\n// For num = \"1077E\" the output should be 2.\n// For num = \"\
    ABED1A33\" the output should be 4.\n// For num = \"123456789ABCDEF0\" the output\
    \ should be 6.\n// For num = \"2020\" the output should be 2.\nfunction hex_key($num)\
    \ {\n    $hex_key = array(\n        '0' => 0,\n        '1' => 1,\n        '2'\
    \ => 2,\n        '3' => 3,\n        '4' => 4,\n        '5' => 5,\n        '6'\
    \ => 6,\n        '7' => 7,\n        '8' => 8,\n        '9' => 9,\n        'A'\
    \ => 10,\n        'B' => 11,\n        'C' => 12,\n        'D' => 13,\n       \
    \ 'E' => 14,\n        'F' => 15\n    );\n    return $hex_key[$num];\n}\nfunction\
    \ candidate(...$args) {\n    return hex_key(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"AB\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"1077E\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ABED1A33\") !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"2020\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"123456789ABCDEF0\") !== 6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"112233445566778899AABBCCDDEEFF00\") !==\
    \ 12) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Warning:  Undefined array key \"AB\" in /tmp/tmp9z0abwb9.php on line\
    \ 37\nPHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp9z0abwb9.php:44\n\
    Stack trace:\n#0 /tmp/tmp9z0abwb9.php(52): test()\n#1 {main}\n  thrown in /tmp/tmp9z0abwb9.php\
    \ on line 44\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You have been tasked to write a function that receives \n//\
    \ a hexadecimal number as a string and counts the number of hexadecimal \n// digits\
    \ that are primes (prime number, or a prime, is a natural number \n// greater\
    \ than 1 that is not a product of two smaller natural numbers).\n// Hexadecimal\
    \ digits are 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, A, B, C, D, E, F.\n// Prime numbers\
    \ are 2, 3, 5, 7, 11, 13, 17,...\n// So you have to determine a number of the\
    \ following digits: 2, 3, 5, 7, \n// B (=decimal 11), D (=decimal 13).\n// Note:\
    \ you may assume the input is always correct or empty string, \n// and symbols\
    \ A,B,C,D,E,F are always uppercase.\n// Examples:\n// For num = \"AB\" the output\
    \ should be 1.\n// For num = \"1077E\" the output should be 2.\n// For num = \"\
    ABED1A33\" the output should be 4.\n// For num = \"123456789ABCDEF0\" the output\
    \ should be 6.\n// For num = \"2020\" the output should be 2.\nfunction hex_key($num)\
    \ {\n    $hex = array(\n        '0' => 0,\n        '1' => 1,\n        '2' => 2,\n\
    \        '3' => 3,\n        '4' => 4,\n        '5' => 5,\n        '6' => 6,\n\
    \        '7' => 7,\n        '8' => 8,\n        '9' => 9,\n        'A' => 10,\n\
    \        'B' => 11,\n        'C' => 12,\n        'D' => 13,\n        'E' => 14,\n\
    \        'F' => 15\n    );\n    $prime = array(2, 3, 5, 7, 11, 13);\n    $count\
    \ = 0;\n    for ($i = 0; $i < strlen($num); $i++) {\n        if (in_array($hex[$num[$i]],\
    \ $prime)) {\n            $count++;\n        }\n    }\n    return $count;\n}\n\
    echo hex_key(\"AB\") . \"<br>\";\necho hex_key(\"1077E\") . \"<br>\";\necho hex_key(\"\
    ABED1A33\") . \"<br>\";\necho hex_key(\"123456789ABCDEF0\") . \"<br>\";\necho\
    \ hex_key(\"2020\") . \"<br>\";\nfunction candidate(...$args) {\n    return hex_key(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"AB\") !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"1077E\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ABED1A33\") !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2020\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"123456789ABCDEF0\") !== 6) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"112233445566778899AABBCCDDEEFF00\"\
    ) !== 12) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: 1<br>2<br>4<br>6<br>2<br>
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You have been tasked to write a function that receives \n//\
    \ a hexadecimal number as a string and counts the number of hexadecimal \n// digits\
    \ that are primes (prime number, or a prime, is a natural number \n// greater\
    \ than 1 that is not a product of two smaller natural numbers).\n// Hexadecimal\
    \ digits are 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, A, B, C, D, E, F.\n// Prime numbers\
    \ are 2, 3, 5, 7, 11, 13, 17,...\n// So you have to determine a number of the\
    \ following digits: 2, 3, 5, 7, \n// B (=decimal 11), D (=decimal 13).\n// Note:\
    \ you may assume the input is always correct or empty string, \n// and symbols\
    \ A,B,C,D,E,F are always uppercase.\n// Examples:\n// For num = \"AB\" the output\
    \ should be 1.\n// For num = \"1077E\" the output should be 2.\n// For num = \"\
    ABED1A33\" the output should be 4.\n// For num = \"123456789ABCDEF0\" the output\
    \ should be 6.\n// For num = \"2020\" the output should be 2.\nfunction hex_key($num)\
    \ {\n    $hex_key = array(\n        '0' => 0,\n        '1' => 1,\n        '2'\
    \ => 2,\n        '3' => 3,\n        '4' => 4,\n        '5' => 5,\n        '6'\
    \ => 6,\n        '7' => 7,\n        '8' => 8,\n        '9' => 9,\n        'A'\
    \ => 10,\n        'B' => 11,\n        'C' => 12,\n        'D' => 13,\n       \
    \ 'E' => 14,\n        'F' => 15\n    );\n    return $hex_key[$num];\n}\nfunction\
    \ candidate(...$args) {\n    return hex_key(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"AB\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"1077E\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ABED1A33\") !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"2020\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"123456789ABCDEF0\") !== 6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"112233445566778899AABBCCDDEEFF00\") !==\
    \ 12) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Warning:  Undefined array key \"AB\" in /tmp/tmpcr8cuacp.php on line\
    \ 37\nPHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpcr8cuacp.php:44\n\
    Stack trace:\n#0 /tmp/tmpcr8cuacp.php(52): test()\n#1 {main}\n  thrown in /tmp/tmpcr8cuacp.php\
    \ on line 44\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You have been tasked to write a function that receives \n//\
    \ a hexadecimal number as a string and counts the number of hexadecimal \n// digits\
    \ that are primes (prime number, or a prime, is a natural number \n// greater\
    \ than 1 that is not a product of two smaller natural numbers).\n// Hexadecimal\
    \ digits are 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, A, B, C, D, E, F.\n// Prime numbers\
    \ are 2, 3, 5, 7, 11, 13, 17,...\n// So you have to determine a number of the\
    \ following digits: 2, 3, 5, 7, \n// B (=decimal 11), D (=decimal 13).\n// Note:\
    \ you may assume the input is always correct or empty string, \n// and symbols\
    \ A,B,C,D,E,F are always uppercase.\n// Examples:\n// For num = \"AB\" the output\
    \ should be 1.\n// For num = \"1077E\" the output should be 2.\n// For num = \"\
    ABED1A33\" the output should be 4.\n// For num = \"123456789ABCDEF0\" the output\
    \ should be 6.\n// For num = \"2020\" the output should be 2.\nfunction hex_key($num)\
    \ {\n    $hex_key = array(\n        '0' => 0,\n        '1' => 1,\n        '2'\
    \ => 2,\n        '3' => 3,\n        '4' => 4,\n        '5' => 5,\n        '6'\
    \ => 6,\n        '7' => 7,\n        '8' => 8,\n        '9' => 9,\n        'A'\
    \ => 10,\n        'B' => 11,\n        'C' => 12,\n        'D' => 13,\n       \
    \ 'E' => 14,\n        'F' => 15\n    );\n    return $hex_key[$num];\n}\nfunction\
    \ candidate(...$args) {\n    return hex_key(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"AB\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"1077E\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ABED1A33\") !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"2020\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"123456789ABCDEF0\") !== 6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"112233445566778899AABBCCDDEEFF00\") !==\
    \ 12) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Warning:  Undefined array key \"AB\" in /tmp/tmp2sxriybu.php on line\
    \ 37\nPHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp2sxriybu.php:44\n\
    Stack trace:\n#0 /tmp/tmp2sxriybu.php(52): test()\n#1 {main}\n  thrown in /tmp/tmp2sxriybu.php\
    \ on line 44\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You have been tasked to write a function that receives \n//\
    \ a hexadecimal number as a string and counts the number of hexadecimal \n// digits\
    \ that are primes (prime number, or a prime, is a natural number \n// greater\
    \ than 1 that is not a product of two smaller natural numbers).\n// Hexadecimal\
    \ digits are 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, A, B, C, D, E, F.\n// Prime numbers\
    \ are 2, 3, 5, 7, 11, 13, 17,...\n// So you have to determine a number of the\
    \ following digits: 2, 3, 5, 7, \n// B (=decimal 11), D (=decimal 13).\n// Note:\
    \ you may assume the input is always correct or empty string, \n// and symbols\
    \ A,B,C,D,E,F are always uppercase.\n// Examples:\n// For num = \"AB\" the output\
    \ should be 1.\n// For num = \"1077E\" the output should be 2.\n// For num = \"\
    ABED1A33\" the output should be 4.\n// For num = \"123456789ABCDEF0\" the output\
    \ should be 6.\n// For num = \"2020\" the output should be 2.\nfunction hex_key($num)\
    \ {\n    $hex = ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9', 'A', 'B', 'C',\
    \ 'D', 'E', 'F'];\n    $prime = [2, 3, 5, 7, 11, 13];\n    $count = 0;\n    for\
    \ ($i = 0; $i < strlen($num); $i++) {\n        if (in_array($num[$i], $hex)) {\n\
    \            if (in_array(array_search($num[$i], $hex), $prime)) {\n         \
    \       $count++;\n            }\n        }\n    }\n    return $count;\n}\necho\
    \ hex_key(\"AB\") . \"<br>\";\necho hex_key(\"1077E\") . \"<br>\";\necho hex_key(\"\
    ABED1A33\") . \"<br>\";\necho hex_key(\"123456789ABCDEF0\") . \"<br>\";\necho\
    \ hex_key(\"2020\") . \"<br>\";\nfunction candidate(...$args) {\n    return hex_key(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"AB\") !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"1077E\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ABED1A33\") !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2020\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"123456789ABCDEF0\") !== 6) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"112233445566778899AABBCCDDEEFF00\"\
    ) !== 12) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: 1<br>2<br>4<br>6<br>2<br>
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You have been tasked to write a function that receives \n//\
    \ a hexadecimal number as a string and counts the number of hexadecimal \n// digits\
    \ that are primes (prime number, or a prime, is a natural number \n// greater\
    \ than 1 that is not a product of two smaller natural numbers).\n// Hexadecimal\
    \ digits are 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, A, B, C, D, E, F.\n// Prime numbers\
    \ are 2, 3, 5, 7, 11, 13, 17,...\n// So you have to determine a number of the\
    \ following digits: 2, 3, 5, 7, \n// B (=decimal 11), D (=decimal 13).\n// Note:\
    \ you may assume the input is always correct or empty string, \n// and symbols\
    \ A,B,C,D,E,F are always uppercase.\n// Examples:\n// For num = \"AB\" the output\
    \ should be 1.\n// For num = \"1077E\" the output should be 2.\n// For num = \"\
    ABED1A33\" the output should be 4.\n// For num = \"123456789ABCDEF0\" the output\
    \ should be 6.\n// For num = \"2020\" the output should be 2.\nfunction hex_key($num)\
    \ {\n    $hex_key = array(\n        '0' => 0,\n        '1' => 1,\n        '2'\
    \ => 2,\n        '3' => 3,\n        '4' => 4,\n        '5' => 5,\n        '6'\
    \ => 6,\n        '7' => 7,\n        '8' => 8,\n        '9' => 9,\n        'A'\
    \ => 10,\n        'B' => 11,\n        'C' => 12,\n        'D' => 13,\n       \
    \ 'E' => 14,\n        'F' => 15\n    );\n    return $hex_key[$num];\n}\nfunction\
    \ candidate(...$args) {\n    return hex_key(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"AB\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"1077E\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ABED1A33\") !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"2020\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"123456789ABCDEF0\") !== 6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"112233445566778899AABBCCDDEEFF00\") !==\
    \ 12) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Warning:  Undefined array key \"AB\" in /tmp/tmpgufo1u5w.php on line\
    \ 37\nPHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpgufo1u5w.php:44\n\
    Stack trace:\n#0 /tmp/tmpgufo1u5w.php(52): test()\n#1 {main}\n  thrown in /tmp/tmpgufo1u5w.php\
    \ on line 44\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You have been tasked to write a function that receives \n//\
    \ a hexadecimal number as a string and counts the number of hexadecimal \n// digits\
    \ that are primes (prime number, or a prime, is a natural number \n// greater\
    \ than 1 that is not a product of two smaller natural numbers).\n// Hexadecimal\
    \ digits are 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, A, B, C, D, E, F.\n// Prime numbers\
    \ are 2, 3, 5, 7, 11, 13, 17,...\n// So you have to determine a number of the\
    \ following digits: 2, 3, 5, 7, \n// B (=decimal 11), D (=decimal 13).\n// Note:\
    \ you may assume the input is always correct or empty string, \n// and symbols\
    \ A,B,C,D,E,F are always uppercase.\n// Examples:\n// For num = \"AB\" the output\
    \ should be 1.\n// For num = \"1077E\" the output should be 2.\n// For num = \"\
    ABED1A33\" the output should be 4.\n// For num = \"123456789ABCDEF0\" the output\
    \ should be 6.\n// For num = \"2020\" the output should be 2.\nfunction hex_key($num)\
    \ {\n    $hex_key = [\n        '0' => 0,\n        '1' => 1,\n        '2' => 2,\n\
    \        '3' => 3,\n        '4' => 4,\n        '5' => 5,\n        '6' => 6,\n\
    \        '7' => 7,\n        '8' => 8,\n        '9' => 9,\n        'A' => 10,\n\
    \        'B' => 11,\n        'C' => 12,\n        'D' => 13,\n        'E' => 14,\n\
    \        'F' => 15\n    ];\n    return $hex_key[$num];\n}\nfunction candidate(...$args)\
    \ {\n    return hex_key(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    AB\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1077E\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ABED1A33\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2020\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    123456789ABCDEF0\") !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"112233445566778899AABBCCDDEEFF00\") !== 12) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Warning:  Undefined array key \"AB\" in /tmp/tmp0u0q4cez.php on line\
    \ 37\nPHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp0u0q4cez.php:44\n\
    Stack trace:\n#0 /tmp/tmp0u0q4cez.php(52): test()\n#1 {main}\n  thrown in /tmp/tmp0u0q4cez.php\
    \ on line 44\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You have been tasked to write a function that receives \n//\
    \ a hexadecimal number as a string and counts the number of hexadecimal \n// digits\
    \ that are primes (prime number, or a prime, is a natural number \n// greater\
    \ than 1 that is not a product of two smaller natural numbers).\n// Hexadecimal\
    \ digits are 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, A, B, C, D, E, F.\n// Prime numbers\
    \ are 2, 3, 5, 7, 11, 13, 17,...\n// So you have to determine a number of the\
    \ following digits: 2, 3, 5, 7, \n// B (=decimal 11), D (=decimal 13).\n// Note:\
    \ you may assume the input is always correct or empty string, \n// and symbols\
    \ A,B,C,D,E,F are always uppercase.\n// Examples:\n// For num = \"AB\" the output\
    \ should be 1.\n// For num = \"1077E\" the output should be 2.\n// For num = \"\
    ABED1A33\" the output should be 4.\n// For num = \"123456789ABCDEF0\" the output\
    \ should be 6.\n// For num = \"2020\" the output should be 2.\nfunction hex_key($num)\
    \ {\n    $hex = array(\n        '0' => 0,\n        '1' => 1,\n        '2' => 2,\n\
    \        '3' => 3,\n        '4' => 4,\n        '5' => 5,\n        '6' => 6,\n\
    \        '7' => 7,\n        '8' => 8,\n        '9' => 9,\n        'A' => 10,\n\
    \        'B' => 11,\n        'C' => 12,\n        'D' => 13,\n        'E' => 14,\n\
    \        'F' => 15\n    );\n    $prime = array(2, 3, 5, 7, 11, 13);\n    $num\
    \ = str_split($num);\n    $count = 0;\n    foreach ($num as $key => $value) {\n\
    \        if (in_array($hex[$value], $prime)) {\n            $count++;\n      \
    \  }\n    }\n    return $count;\n}\necho hex_key(\"ABED1A33\");\nfunction candidate(...$args)\
    \ {\n    return hex_key(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    AB\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1077E\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ABED1A33\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2020\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    123456789ABCDEF0\") !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"112233445566778899AABBCCDDEEFF00\") !== 12) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: '4'
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You have been tasked to write a function that receives \n//\
    \ a hexadecimal number as a string and counts the number of hexadecimal \n// digits\
    \ that are primes (prime number, or a prime, is a natural number \n// greater\
    \ than 1 that is not a product of two smaller natural numbers).\n// Hexadecimal\
    \ digits are 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, A, B, C, D, E, F.\n// Prime numbers\
    \ are 2, 3, 5, 7, 11, 13, 17,...\n// So you have to determine a number of the\
    \ following digits: 2, 3, 5, 7, \n// B (=decimal 11), D (=decimal 13).\n// Note:\
    \ you may assume the input is always correct or empty string, \n// and symbols\
    \ A,B,C,D,E,F are always uppercase.\n// Examples:\n// For num = \"AB\" the output\
    \ should be 1.\n// For num = \"1077E\" the output should be 2.\n// For num = \"\
    ABED1A33\" the output should be 4.\n// For num = \"123456789ABCDEF0\" the output\
    \ should be 6.\n// For num = \"2020\" the output should be 2.\nfunction hex_key($num)\
    \ {\n    $hex_key = [\n        '0' => 0,\n        '1' => 1,\n        '2' => 2,\n\
    \        '3' => 3,\n        '4' => 4,\n        '5' => 5,\n        '6' => 6,\n\
    \        '7' => 7,\n        '8' => 8,\n        '9' => 9,\n        'A' => 10,\n\
    \        'B' => 11,\n        'C' => 12,\n        'D' => 13,\n        'E' => 14,\n\
    \        'F' => 15\n    ];\n    return $hex_key[$num];\n}\nfunction candidate(...$args)\
    \ {\n    return hex_key(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    AB\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1077E\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ABED1A33\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2020\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    123456789ABCDEF0\") !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"112233445566778899AABBCCDDEEFF00\") !== 12) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Warning:  Undefined array key \"AB\" in /tmp/tmp1bijvb11.php on line\
    \ 37\nPHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp1bijvb11.php:44\n\
    Stack trace:\n#0 /tmp/tmp1bijvb11.php(52): test()\n#1 {main}\n  thrown in /tmp/tmp1bijvb11.php\
    \ on line 44\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You have been tasked to write a function that receives \n//\
    \ a hexadecimal number as a string and counts the number of hexadecimal \n// digits\
    \ that are primes (prime number, or a prime, is a natural number \n// greater\
    \ than 1 that is not a product of two smaller natural numbers).\n// Hexadecimal\
    \ digits are 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, A, B, C, D, E, F.\n// Prime numbers\
    \ are 2, 3, 5, 7, 11, 13, 17,...\n// So you have to determine a number of the\
    \ following digits: 2, 3, 5, 7, \n// B (=decimal 11), D (=decimal 13).\n// Note:\
    \ you may assume the input is always correct or empty string, \n// and symbols\
    \ A,B,C,D,E,F are always uppercase.\n// Examples:\n// For num = \"AB\" the output\
    \ should be 1.\n// For num = \"1077E\" the output should be 2.\n// For num = \"\
    ABED1A33\" the output should be 4.\n// For num = \"123456789ABCDEF0\" the output\
    \ should be 6.\n// For num = \"2020\" the output should be 2.\nfunction hex_key($num)\
    \ {\n    $hex_key = array(\n        \"0\" => 0,\n        \"1\" => 1,\n       \
    \ \"2\" => 2,\n        \"3\" => 3,\n        \"4\" => 4,\n        \"5\" => 5,\n\
    \        \"6\" => 6,\n        \"7\" => 7,\n        \"8\" => 8,\n        \"9\"\
    \ => 9,\n        \"A\" => 10,\n        \"B\" => 11,\n        \"C\" => 12,\n  \
    \      \"D\" => 13,\n        \"E\" => 14,\n        \"F\" => 15\n    );\n    return\
    \ $hex_key[$num];\n}\nfunction candidate(...$args) {\n    return hex_key(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"AB\") !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"1077E\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ABED1A33\") !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2020\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"123456789ABCDEF0\") !== 6) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"112233445566778899AABBCCDDEEFF00\"\
    ) !== 12) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Warning:  Undefined array key \"AB\" in /tmp/tmpcuwbjvc0.php on line\
    \ 37\nPHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpcuwbjvc0.php:44\n\
    Stack trace:\n#0 /tmp/tmpcuwbjvc0.php(52): test()\n#1 {main}\n  thrown in /tmp/tmpcuwbjvc0.php\
    \ on line 44\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You have been tasked to write a function that receives \n//\
    \ a hexadecimal number as a string and counts the number of hexadecimal \n// digits\
    \ that are primes (prime number, or a prime, is a natural number \n// greater\
    \ than 1 that is not a product of two smaller natural numbers).\n// Hexadecimal\
    \ digits are 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, A, B, C, D, E, F.\n// Prime numbers\
    \ are 2, 3, 5, 7, 11, 13, 17,...\n// So you have to determine a number of the\
    \ following digits: 2, 3, 5, 7, \n// B (=decimal 11), D (=decimal 13).\n// Note:\
    \ you may assume the input is always correct or empty string, \n// and symbols\
    \ A,B,C,D,E,F are always uppercase.\n// Examples:\n// For num = \"AB\" the output\
    \ should be 1.\n// For num = \"1077E\" the output should be 2.\n// For num = \"\
    ABED1A33\" the output should be 4.\n// For num = \"123456789ABCDEF0\" the output\
    \ should be 6.\n// For num = \"2020\" the output should be 2.\nfunction hex_key($num)\
    \ {\n    $hex_key = [\n        '0' => 0,\n        '1' => 1,\n        '2' => 2,\n\
    \        '3' => 3,\n        '4' => 4,\n        '5' => 5,\n        '6' => 6,\n\
    \        '7' => 7,\n        '8' => 8,\n        '9' => 9,\n        'A' => 10,\n\
    \        'B' => 11,\n        'C' => 12,\n        'D' => 13,\n        'E' => 14,\n\
    \        'F' => 15\n    ];\n    return $hex_key[$num];\n}\nfunction candidate(...$args)\
    \ {\n    return hex_key(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    AB\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1077E\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ABED1A33\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2020\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    123456789ABCDEF0\") !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"112233445566778899AABBCCDDEEFF00\") !== 12) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Warning:  Undefined array key \"AB\" in /tmp/tmpt_xrjgit.php on line\
    \ 37\nPHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpt_xrjgit.php:44\n\
    Stack trace:\n#0 /tmp/tmpt_xrjgit.php(52): test()\n#1 {main}\n  thrown in /tmp/tmpt_xrjgit.php\
    \ on line 44\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You have been tasked to write a function that receives \n//\
    \ a hexadecimal number as a string and counts the number of hexadecimal \n// digits\
    \ that are primes (prime number, or a prime, is a natural number \n// greater\
    \ than 1 that is not a product of two smaller natural numbers).\n// Hexadecimal\
    \ digits are 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, A, B, C, D, E, F.\n// Prime numbers\
    \ are 2, 3, 5, 7, 11, 13, 17,...\n// So you have to determine a number of the\
    \ following digits: 2, 3, 5, 7, \n// B (=decimal 11), D (=decimal 13).\n// Note:\
    \ you may assume the input is always correct or empty string, \n// and symbols\
    \ A,B,C,D,E,F are always uppercase.\n// Examples:\n// For num = \"AB\" the output\
    \ should be 1.\n// For num = \"1077E\" the output should be 2.\n// For num = \"\
    ABED1A33\" the output should be 4.\n// For num = \"123456789ABCDEF0\" the output\
    \ should be 6.\n// For num = \"2020\" the output should be 2.\nfunction hex_key($num)\
    \ {\n    $hex_key = array(\n        '0' => 0,\n        '1' => 1,\n        '2'\
    \ => 2,\n        '3' => 3,\n        '4' => 4,\n        '5' => 5,\n        '6'\
    \ => 6,\n        '7' => 7,\n        '8' => 8,\n        '9' => 9,\n        'A'\
    \ => 10,\n        'B' => 11,\n        'C' => 12,\n        'D' => 13,\n       \
    \ 'E' => 14,\n        'F' => 15\n    );\n    return $hex_key[$num];\n}\nfunction\
    \ candidate(...$args) {\n    return hex_key(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"AB\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"1077E\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ABED1A33\") !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"2020\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"123456789ABCDEF0\") !== 6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"112233445566778899AABBCCDDEEFF00\") !==\
    \ 12) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Warning:  Undefined array key \"AB\" in /tmp/tmpe2geuzd4.php on line\
    \ 37\nPHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpe2geuzd4.php:44\n\
    Stack trace:\n#0 /tmp/tmpe2geuzd4.php(52): test()\n#1 {main}\n  thrown in /tmp/tmpe2geuzd4.php\
    \ on line 44\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You have been tasked to write a function that receives \n//\
    \ a hexadecimal number as a string and counts the number of hexadecimal \n// digits\
    \ that are primes (prime number, or a prime, is a natural number \n// greater\
    \ than 1 that is not a product of two smaller natural numbers).\n// Hexadecimal\
    \ digits are 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, A, B, C, D, E, F.\n// Prime numbers\
    \ are 2, 3, 5, 7, 11, 13, 17,...\n// So you have to determine a number of the\
    \ following digits: 2, 3, 5, 7, \n// B (=decimal 11), D (=decimal 13).\n// Note:\
    \ you may assume the input is always correct or empty string, \n// and symbols\
    \ A,B,C,D,E,F are always uppercase.\n// Examples:\n// For num = \"AB\" the output\
    \ should be 1.\n// For num = \"1077E\" the output should be 2.\n// For num = \"\
    ABED1A33\" the output should be 4.\n// For num = \"123456789ABCDEF0\" the output\
    \ should be 6.\n// For num = \"2020\" the output should be 2.\nfunction hex_key($num)\
    \ {\n    $hex = [\"0\",\"1\",\"2\",\"3\",\"4\",\"5\",\"6\",\"7\",\"8\",\"9\",\"\
    A\",\"B\",\"C\",\"D\",\"E\",\"F\"];\n    $hex_key = array_flip($hex);\n    return\
    \ $hex_key;\n}\nfunction candidate(...$args) {\n    return hex_key(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"AB\") !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"1077E\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ABED1A33\") !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2020\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"123456789ABCDEF0\") !== 6) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"112233445566778899AABBCCDDEEFF00\"\
    ) !== 12) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpuxb7s76u.php:28\n\
    Stack trace:\n#0 /tmp/tmpuxb7s76u.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpuxb7s76u.php\
    \ on line 28\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You have been tasked to write a function that receives \n//\
    \ a hexadecimal number as a string and counts the number of hexadecimal \n// digits\
    \ that are primes (prime number, or a prime, is a natural number \n// greater\
    \ than 1 that is not a product of two smaller natural numbers).\n// Hexadecimal\
    \ digits are 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, A, B, C, D, E, F.\n// Prime numbers\
    \ are 2, 3, 5, 7, 11, 13, 17,...\n// So you have to determine a number of the\
    \ following digits: 2, 3, 5, 7, \n// B (=decimal 11), D (=decimal 13).\n// Note:\
    \ you may assume the input is always correct or empty string, \n// and symbols\
    \ A,B,C,D,E,F are always uppercase.\n// Examples:\n// For num = \"AB\" the output\
    \ should be 1.\n// For num = \"1077E\" the output should be 2.\n// For num = \"\
    ABED1A33\" the output should be 4.\n// For num = \"123456789ABCDEF0\" the output\
    \ should be 6.\n// For num = \"2020\" the output should be 2.\nfunction hex_key($num)\
    \ {\n    $hex = array(\n        '0' => 0,\n        '1' => 1,\n        '2' => 2,\n\
    \        '3' => 3,\n        '4' => 4,\n        '5' => 5,\n        '6' => 6,\n\
    \        '7' => 7,\n        '8' => 8,\n        '9' => 9,\n        'A' => 10,\n\
    \        'B' => 11,\n        'C' => 12,\n        'D' => 13,\n        'E' => 14,\n\
    \        'F' => 15\n    );\n    $hex_key = array_keys($hex);\n    return $hex_key;\n\
    }\nfunction candidate(...$args) {\n    return hex_key(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"AB\") !== 1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"1077E\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ABED1A33\") !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2020\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"123456789ABCDEF0\") !== 6) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"112233445566778899AABBCCDDEEFF00\"\
    ) !== 12) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpse_3om_q.php:45\n\
    Stack trace:\n#0 /tmp/tmpse_3om_q.php(53): test()\n#1 {main}\n  thrown in /tmp/tmpse_3om_q.php\
    \ on line 45\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You have been tasked to write a function that receives \n//\
    \ a hexadecimal number as a string and counts the number of hexadecimal \n// digits\
    \ that are primes (prime number, or a prime, is a natural number \n// greater\
    \ than 1 that is not a product of two smaller natural numbers).\n// Hexadecimal\
    \ digits are 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, A, B, C, D, E, F.\n// Prime numbers\
    \ are 2, 3, 5, 7, 11, 13, 17,...\n// So you have to determine a number of the\
    \ following digits: 2, 3, 5, 7, \n// B (=decimal 11), D (=decimal 13).\n// Note:\
    \ you may assume the input is always correct or empty string, \n// and symbols\
    \ A,B,C,D,E,F are always uppercase.\n// Examples:\n// For num = \"AB\" the output\
    \ should be 1.\n// For num = \"1077E\" the output should be 2.\n// For num = \"\
    ABED1A33\" the output should be 4.\n// For num = \"123456789ABCDEF0\" the output\
    \ should be 6.\n// For num = \"2020\" the output should be 2.\nfunction hex_key($num)\
    \ {\n    $hex_key = array(\n        \"0\" => 0,\n        \"1\" => 1,\n       \
    \ \"2\" => 2,\n        \"3\" => 3,\n        \"4\" => 4,\n        \"5\" => 5,\n\
    \        \"6\" => 6,\n        \"7\" => 7,\n        \"8\" => 8,\n        \"9\"\
    \ => 9,\n        \"A\" => 10,\n        \"B\" => 11,\n        \"C\" => 12,\n  \
    \      \"D\" => 13,\n        \"E\" => 14,\n        \"F\" => 15\n    );\n    return\
    \ $hex_key[$num];\n}\nfunction candidate(...$args) {\n    return hex_key(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"AB\") !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"1077E\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ABED1A33\") !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2020\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"123456789ABCDEF0\") !== 6) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"112233445566778899AABBCCDDEEFF00\"\
    ) !== 12) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Warning:  Undefined array key \"AB\" in /tmp/tmpx29_cf5p.php on line\
    \ 37\nPHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpx29_cf5p.php:44\n\
    Stack trace:\n#0 /tmp/tmpx29_cf5p.php(52): test()\n#1 {main}\n  thrown in /tmp/tmpx29_cf5p.php\
    \ on line 44\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You have been tasked to write a function that receives \n//\
    \ a hexadecimal number as a string and counts the number of hexadecimal \n// digits\
    \ that are primes (prime number, or a prime, is a natural number \n// greater\
    \ than 1 that is not a product of two smaller natural numbers).\n// Hexadecimal\
    \ digits are 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, A, B, C, D, E, F.\n// Prime numbers\
    \ are 2, 3, 5, 7, 11, 13, 17,...\n// So you have to determine a number of the\
    \ following digits: 2, 3, 5, 7, \n// B (=decimal 11), D (=decimal 13).\n// Note:\
    \ you may assume the input is always correct or empty string, \n// and symbols\
    \ A,B,C,D,E,F are always uppercase.\n// Examples:\n// For num = \"AB\" the output\
    \ should be 1.\n// For num = \"1077E\" the output should be 2.\n// For num = \"\
    ABED1A33\" the output should be 4.\n// For num = \"123456789ABCDEF0\" the output\
    \ should be 6.\n// For num = \"2020\" the output should be 2.\nfunction hex_key($num)\
    \ {\n    $hex_key = array(\n        \"0\" => 0,\n        \"1\" => 1,\n       \
    \ \"2\" => 2,\n        \"3\" => 3,\n        \"4\" => 4,\n        \"5\" => 5,\n\
    \        \"6\" => 6,\n        \"7\" => 7,\n        \"8\" => 8,\n        \"9\"\
    \ => 9,\n        \"A\" => 10,\n        \"B\" => 11,\n        \"C\" => 12,\n  \
    \      \"D\" => 13,\n        \"E\" => 14,\n        \"F\" => 15\n    );\n    return\
    \ $hex_key[$num];\n}\nfunction candidate(...$args) {\n    return hex_key(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"AB\") !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"1077E\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ABED1A33\") !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2020\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"123456789ABCDEF0\") !== 6) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"112233445566778899AABBCCDDEEFF00\"\
    ) !== 12) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Warning:  Undefined array key \"AB\" in /tmp/tmpsfdk3xxl.php on line\
    \ 37\nPHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpsfdk3xxl.php:44\n\
    Stack trace:\n#0 /tmp/tmpsfdk3xxl.php(52): test()\n#1 {main}\n  thrown in /tmp/tmpsfdk3xxl.php\
    \ on line 44\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You have been tasked to write a function that receives \n//\
    \ a hexadecimal number as a string and counts the number of hexadecimal \n// digits\
    \ that are primes (prime number, or a prime, is a natural number \n// greater\
    \ than 1 that is not a product of two smaller natural numbers).\n// Hexadecimal\
    \ digits are 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, A, B, C, D, E, F.\n// Prime numbers\
    \ are 2, 3, 5, 7, 11, 13, 17,...\n// So you have to determine a number of the\
    \ following digits: 2, 3, 5, 7, \n// B (=decimal 11), D (=decimal 13).\n// Note:\
    \ you may assume the input is always correct or empty string, \n// and symbols\
    \ A,B,C,D,E,F are always uppercase.\n// Examples:\n// For num = \"AB\" the output\
    \ should be 1.\n// For num = \"1077E\" the output should be 2.\n// For num = \"\
    ABED1A33\" the output should be 4.\n// For num = \"123456789ABCDEF0\" the output\
    \ should be 6.\n// For num = \"2020\" the output should be 2.\nfunction hex_key($num)\
    \ {\n    $hex = [\n        '0' => 0,\n        '1' => 1,\n        '2' => 2,\n \
    \       '3' => 3,\n        '4' => 4,\n        '5' => 5,\n        '6' => 6,\n \
    \       '7' => 7,\n        '8' => 8,\n        '9' => 9,\n        'A' => 10,\n\
    \        'B' => 11,\n        'C' => 12,\n        'D' => 13,\n        'E' => 14,\n\
    \        'F' => 15\n    ];\n    $prime = [2, 3, 5, 7, 11, 13];\n    $count = 0;\n\
    \    for ($i = 0; $i < strlen($num); $i++) {\n        if (in_array($hex[$num[$i]],\
    \ $prime)) {\n            $count++;\n        }\n    }\n    return $count;\n}\n\
    echo hex_key(\"AB\") . \"\\n\";\necho hex_key(\"1077E\") . \"\\n\";\necho hex_key(\"\
    ABED1A33\") . \"\\n\";\necho hex_key(\"123456789ABCDEF0\") . \"\\n\";\necho hex_key(\"\
    2020\") . \"\\n\";\nfunction candidate(...$args) {\n    return hex_key(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"AB\") !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"1077E\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ABED1A33\") !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2020\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"123456789ABCDEF0\") !== 6) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"112233445566778899AABBCCDDEEFF00\"\
    ) !== 12) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "1\n2\n4\n6\n2\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You have been tasked to write a function that receives \n//\
    \ a hexadecimal number as a string and counts the number of hexadecimal \n// digits\
    \ that are primes (prime number, or a prime, is a natural number \n// greater\
    \ than 1 that is not a product of two smaller natural numbers).\n// Hexadecimal\
    \ digits are 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, A, B, C, D, E, F.\n// Prime numbers\
    \ are 2, 3, 5, 7, 11, 13, 17,...\n// So you have to determine a number of the\
    \ following digits: 2, 3, 5, 7, \n// B (=decimal 11), D (=decimal 13).\n// Note:\
    \ you may assume the input is always correct or empty string, \n// and symbols\
    \ A,B,C,D,E,F are always uppercase.\n// Examples:\n// For num = \"AB\" the output\
    \ should be 1.\n// For num = \"1077E\" the output should be 2.\n// For num = \"\
    ABED1A33\" the output should be 4.\n// For num = \"123456789ABCDEF0\" the output\
    \ should be 6.\n// For num = \"2020\" the output should be 2.\nfunction hex_key($num)\
    \ {\n    $hex_key = array(\n        \"0\" => 0,\n        \"1\" => 1,\n       \
    \ \"2\" => 2,\n        \"3\" => 3,\n        \"4\" => 4,\n        \"5\" => 5,\n\
    \        \"6\" => 6,\n        \"7\" => 7,\n        \"8\" => 8,\n        \"9\"\
    \ => 9,\n        \"A\" => 10,\n        \"B\" => 11,\n        \"C\" => 12,\n  \
    \      \"D\" => 13,\n        \"E\" => 14,\n        \"F\" => 15\n    );\n    return\
    \ $hex_key[$num];\n}\nfunction candidate(...$args) {\n    return hex_key(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"AB\") !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"1077E\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ABED1A33\") !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2020\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"123456789ABCDEF0\") !== 6) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"112233445566778899AABBCCDDEEFF00\"\
    ) !== 12) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Warning:  Undefined array key \"AB\" in /tmp/tmp2wgxrc4c.php on line\
    \ 37\nPHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp2wgxrc4c.php:44\n\
    Stack trace:\n#0 /tmp/tmp2wgxrc4c.php(52): test()\n#1 {main}\n  thrown in /tmp/tmp2wgxrc4c.php\
    \ on line 44\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You have been tasked to write a function that receives \n//\
    \ a hexadecimal number as a string and counts the number of hexadecimal \n// digits\
    \ that are primes (prime number, or a prime, is a natural number \n// greater\
    \ than 1 that is not a product of two smaller natural numbers).\n// Hexadecimal\
    \ digits are 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, A, B, C, D, E, F.\n// Prime numbers\
    \ are 2, 3, 5, 7, 11, 13, 17,...\n// So you have to determine a number of the\
    \ following digits: 2, 3, 5, 7, \n// B (=decimal 11), D (=decimal 13).\n// Note:\
    \ you may assume the input is always correct or empty string, \n// and symbols\
    \ A,B,C,D,E,F are always uppercase.\n// Examples:\n// For num = \"AB\" the output\
    \ should be 1.\n// For num = \"1077E\" the output should be 2.\n// For num = \"\
    ABED1A33\" the output should be 4.\n// For num = \"123456789ABCDEF0\" the output\
    \ should be 6.\n// For num = \"2020\" the output should be 2.\nfunction hex_key($num)\
    \ {\n    $hex = array(\n        \"0\" => 0,\n        \"1\" => 1,\n        \"2\"\
    \ => 2,\n        \"3\" => 3,\n        \"4\" => 4,\n        \"5\" => 5,\n     \
    \   \"6\" => 6,\n        \"7\" => 7,\n        \"8\" => 8,\n        \"9\" => 9,\n\
    \        \"A\" => 10,\n        \"B\" => 11,\n        \"C\" => 12,\n        \"\
    D\" => 13,\n        \"E\" => 14,\n        \"F\" => 15\n    );\n    return $hex[$num];\n\
    }\nfunction candidate(...$args) {\n    return hex_key(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"AB\") !== 1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"1077E\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ABED1A33\") !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2020\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"123456789ABCDEF0\") !== 6) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"112233445566778899AABBCCDDEEFF00\"\
    ) !== 12) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Warning:  Undefined array key \"AB\" in /tmp/tmpczpamlp_.php on line\
    \ 37\nPHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpczpamlp_.php:44\n\
    Stack trace:\n#0 /tmp/tmpczpamlp_.php(52): test()\n#1 {main}\n  thrown in /tmp/tmpczpamlp_.php\
    \ on line 44\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You have been tasked to write a function that receives \n//\
    \ a hexadecimal number as a string and counts the number of hexadecimal \n// digits\
    \ that are primes (prime number, or a prime, is a natural number \n// greater\
    \ than 1 that is not a product of two smaller natural numbers).\n// Hexadecimal\
    \ digits are 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, A, B, C, D, E, F.\n// Prime numbers\
    \ are 2, 3, 5, 7, 11, 13, 17,...\n// So you have to determine a number of the\
    \ following digits: 2, 3, 5, 7, \n// B (=decimal 11), D (=decimal 13).\n// Note:\
    \ you may assume the input is always correct or empty string, \n// and symbols\
    \ A,B,C,D,E,F are always uppercase.\n// Examples:\n// For num = \"AB\" the output\
    \ should be 1.\n// For num = \"1077E\" the output should be 2.\n// For num = \"\
    ABED1A33\" the output should be 4.\n// For num = \"123456789ABCDEF0\" the output\
    \ should be 6.\n// For num = \"2020\" the output should be 2.\nfunction hex_key($num)\
    \ {\n    $hex_key = array(\n        \"0\" => 0,\n        \"1\" => 1,\n       \
    \ \"2\" => 2,\n        \"3\" => 3,\n        \"4\" => 4,\n        \"5\" => 5,\n\
    \        \"6\" => 6,\n        \"7\" => 7,\n        \"8\" => 8,\n        \"9\"\
    \ => 9,\n        \"A\" => 10,\n        \"B\" => 11,\n        \"C\" => 12,\n  \
    \      \"D\" => 13,\n        \"E\" => 14,\n        \"F\" => 15\n    );\n    return\
    \ $hex_key[$num];\n}\nfunction candidate(...$args) {\n    return hex_key(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"AB\") !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"1077E\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ABED1A33\") !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2020\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"123456789ABCDEF0\") !== 6) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"112233445566778899AABBCCDDEEFF00\"\
    ) !== 12) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Warning:  Undefined array key \"AB\" in /tmp/tmpoywbx2qv.php on line\
    \ 37\nPHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpoywbx2qv.php:44\n\
    Stack trace:\n#0 /tmp/tmpoywbx2qv.php(52): test()\n#1 {main}\n  thrown in /tmp/tmpoywbx2qv.php\
    \ on line 44\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You have been tasked to write a function that receives \n//\
    \ a hexadecimal number as a string and counts the number of hexadecimal \n// digits\
    \ that are primes (prime number, or a prime, is a natural number \n// greater\
    \ than 1 that is not a product of two smaller natural numbers).\n// Hexadecimal\
    \ digits are 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, A, B, C, D, E, F.\n// Prime numbers\
    \ are 2, 3, 5, 7, 11, 13, 17,...\n// So you have to determine a number of the\
    \ following digits: 2, 3, 5, 7, \n// B (=decimal 11), D (=decimal 13).\n// Note:\
    \ you may assume the input is always correct or empty string, \n// and symbols\
    \ A,B,C,D,E,F are always uppercase.\n// Examples:\n// For num = \"AB\" the output\
    \ should be 1.\n// For num = \"1077E\" the output should be 2.\n// For num = \"\
    ABED1A33\" the output should be 4.\n// For num = \"123456789ABCDEF0\" the output\
    \ should be 6.\n// For num = \"2020\" the output should be 2.\nfunction hex_key($num)\
    \ {\n    $hex_key = array(\n        '0' => 0,\n        '1' => 1,\n        '2'\
    \ => 2,\n        '3' => 3,\n        '4' => 4,\n        '5' => 5,\n        '6'\
    \ => 6,\n        '7' => 7,\n        '8' => 8,\n        '9' => 9,\n        'A'\
    \ => 10,\n        'B' => 11,\n        'C' => 12,\n        'D' => 13,\n       \
    \ 'E' => 14,\n        'F' => 15\n    );\n    return $hex_key[$num];\n}\nfunction\
    \ candidate(...$args) {\n    return hex_key(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"AB\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"1077E\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ABED1A33\") !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"2020\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"123456789ABCDEF0\") !== 6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"112233445566778899AABBCCDDEEFF00\") !==\
    \ 12) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Warning:  Undefined array key \"AB\" in /tmp/tmps70i7_76.php on line\
    \ 37\nPHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmps70i7_76.php:44\n\
    Stack trace:\n#0 /tmp/tmps70i7_76.php(52): test()\n#1 {main}\n  thrown in /tmp/tmps70i7_76.php\
    \ on line 44\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You have been tasked to write a function that receives \n//\
    \ a hexadecimal number as a string and counts the number of hexadecimal \n// digits\
    \ that are primes (prime number, or a prime, is a natural number \n// greater\
    \ than 1 that is not a product of two smaller natural numbers).\n// Hexadecimal\
    \ digits are 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, A, B, C, D, E, F.\n// Prime numbers\
    \ are 2, 3, 5, 7, 11, 13, 17,...\n// So you have to determine a number of the\
    \ following digits: 2, 3, 5, 7, \n// B (=decimal 11), D (=decimal 13).\n// Note:\
    \ you may assume the input is always correct or empty string, \n// and symbols\
    \ A,B,C,D,E,F are always uppercase.\n// Examples:\n// For num = \"AB\" the output\
    \ should be 1.\n// For num = \"1077E\" the output should be 2.\n// For num = \"\
    ABED1A33\" the output should be 4.\n// For num = \"123456789ABCDEF0\" the output\
    \ should be 6.\n// For num = \"2020\" the output should be 2.\nfunction hex_key($num)\
    \ {\n    $hex_key = array(\n        'A' => 10,\n        'B' => 11,\n        'C'\
    \ => 12,\n        'D' => 13,\n        'E' => 14,\n        'F' => 15\n    );\n\
    \    return $hex_key[$num];\n}\nfunction candidate(...$args) {\n    return hex_key(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"AB\") !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"1077E\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ABED1A33\") !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2020\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"123456789ABCDEF0\") !== 6) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"112233445566778899AABBCCDDEEFF00\"\
    ) !== 12) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Warning:  Undefined array key \"AB\" in /tmp/tmp8oppr_v3.php on line\
    \ 27\nPHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp8oppr_v3.php:34\n\
    Stack trace:\n#0 /tmp/tmp8oppr_v3.php(42): test()\n#1 {main}\n  thrown in /tmp/tmp8oppr_v3.php\
    \ on line 34\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You have been tasked to write a function that receives \n//\
    \ a hexadecimal number as a string and counts the number of hexadecimal \n// digits\
    \ that are primes (prime number, or a prime, is a natural number \n// greater\
    \ than 1 that is not a product of two smaller natural numbers).\n// Hexadecimal\
    \ digits are 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, A, B, C, D, E, F.\n// Prime numbers\
    \ are 2, 3, 5, 7, 11, 13, 17,...\n// So you have to determine a number of the\
    \ following digits: 2, 3, 5, 7, \n// B (=decimal 11), D (=decimal 13).\n// Note:\
    \ you may assume the input is always correct or empty string, \n// and symbols\
    \ A,B,C,D,E,F are always uppercase.\n// Examples:\n// For num = \"AB\" the output\
    \ should be 1.\n// For num = \"1077E\" the output should be 2.\n// For num = \"\
    ABED1A33\" the output should be 4.\n// For num = \"123456789ABCDEF0\" the output\
    \ should be 6.\n// For num = \"2020\" the output should be 2.\nfunction hex_key($num)\
    \ {\n    $hex_key = [\n        \"0\" => 0,\n        \"1\" => 1,\n        \"2\"\
    \ => 2,\n        \"3\" => 3,\n        \"4\" => 4,\n        \"5\" => 5,\n     \
    \   \"6\" => 6,\n        \"7\" => 7,\n        \"8\" => 8,\n        \"9\" => 9,\n\
    \        \"A\" => 10,\n        \"B\" => 11,\n        \"C\" => 12,\n        \"\
    D\" => 13,\n        \"E\" => 14,\n        \"F\" => 15\n    ];\n    return $hex_key[$num];\n\
    }\nfunction candidate(...$args) {\n    return hex_key(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"AB\") !== 1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"1077E\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ABED1A33\") !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2020\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"123456789ABCDEF0\") !== 6) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"112233445566778899AABBCCDDEEFF00\"\
    ) !== 12) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Warning:  Undefined array key \"AB\" in /tmp/tmpgvh7rx15.php on line\
    \ 37\nPHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpgvh7rx15.php:44\n\
    Stack trace:\n#0 /tmp/tmpgvh7rx15.php(52): test()\n#1 {main}\n  thrown in /tmp/tmpgvh7rx15.php\
    \ on line 44\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You have been tasked to write a function that receives \n//\
    \ a hexadecimal number as a string and counts the number of hexadecimal \n// digits\
    \ that are primes (prime number, or a prime, is a natural number \n// greater\
    \ than 1 that is not a product of two smaller natural numbers).\n// Hexadecimal\
    \ digits are 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, A, B, C, D, E, F.\n// Prime numbers\
    \ are 2, 3, 5, 7, 11, 13, 17,...\n// So you have to determine a number of the\
    \ following digits: 2, 3, 5, 7, \n// B (=decimal 11), D (=decimal 13).\n// Note:\
    \ you may assume the input is always correct or empty string, \n// and symbols\
    \ A,B,C,D,E,F are always uppercase.\n// Examples:\n// For num = \"AB\" the output\
    \ should be 1.\n// For num = \"1077E\" the output should be 2.\n// For num = \"\
    ABED1A33\" the output should be 4.\n// For num = \"123456789ABCDEF0\" the output\
    \ should be 6.\n// For num = \"2020\" the output should be 2.\nfunction hex_key($num)\
    \ {\n    $hex = [\n        '0' => 0,\n        '1' => 1,\n        '2' => 2,\n \
    \       '3' => 3,\n        '4' => 4,\n        '5' => 5,\n        '6' => 6,\n \
    \       '7' => 7,\n        '8' => 8,\n        '9' => 9,\n        'A' => 10,\n\
    \        'B' => 11,\n        'C' => 12,\n        'D' => 13,\n        'E' => 14,\n\
    \        'F' => 15\n    ];\n    $count = 0;\n    for ($i = 0; $i < strlen($num);\
    \ $i++) {\n        if (in_array($hex[$num[$i]], [2, 3, 5, 7, 11, 13])) {\n   \
    \         $count++;\n        }\n    }\n    return $count;\n}\necho hex_key(\"\
    AB\") . \"<br>\";\necho hex_key(\"1077E\") . \"<br>\";\necho hex_key(\"ABED1A33\"\
    ) . \"<br>\";\necho hex_key(\"123456789ABCDEF0\") . \"<br>\";\necho hex_key(\"\
    2020\") . \"<br>\";\nfunction candidate(...$args) {\n    return hex_key(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"AB\") !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"1077E\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ABED1A33\") !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2020\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"123456789ABCDEF0\") !== 6) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"112233445566778899AABBCCDDEEFF00\"\
    ) !== 12) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: 1<br>2<br>4<br>6<br>2<br>
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You have been tasked to write a function that receives \n//\
    \ a hexadecimal number as a string and counts the number of hexadecimal \n// digits\
    \ that are primes (prime number, or a prime, is a natural number \n// greater\
    \ than 1 that is not a product of two smaller natural numbers).\n// Hexadecimal\
    \ digits are 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, A, B, C, D, E, F.\n// Prime numbers\
    \ are 2, 3, 5, 7, 11, 13, 17,...\n// So you have to determine a number of the\
    \ following digits: 2, 3, 5, 7, \n// B (=decimal 11), D (=decimal 13).\n// Note:\
    \ you may assume the input is always correct or empty string, \n// and symbols\
    \ A,B,C,D,E,F are always uppercase.\n// Examples:\n// For num = \"AB\" the output\
    \ should be 1.\n// For num = \"1077E\" the output should be 2.\n// For num = \"\
    ABED1A33\" the output should be 4.\n// For num = \"123456789ABCDEF0\" the output\
    \ should be 6.\n// For num = \"2020\" the output should be 2.\nfunction hex_key($num)\
    \ {\n    $hex = ['A' => 10, 'B' => 11, 'C' => 12, 'D' => 13, 'E' => 14, 'F' =>\
    \ 15];\n    $hex_key = array_keys($hex);\n    return $hex_key;\n}\nfunction candidate(...$args)\
    \ {\n    return hex_key(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    AB\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1077E\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ABED1A33\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2020\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    123456789ABCDEF0\") !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"112233445566778899AABBCCDDEEFF00\") !== 12) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp655uful0.php:28\n\
    Stack trace:\n#0 /tmp/tmp655uful0.php(36): test()\n#1 {main}\n  thrown in /tmp/tmp655uful0.php\
    \ on line 28\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You have been tasked to write a function that receives \n//\
    \ a hexadecimal number as a string and counts the number of hexadecimal \n// digits\
    \ that are primes (prime number, or a prime, is a natural number \n// greater\
    \ than 1 that is not a product of two smaller natural numbers).\n// Hexadecimal\
    \ digits are 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, A, B, C, D, E, F.\n// Prime numbers\
    \ are 2, 3, 5, 7, 11, 13, 17,...\n// So you have to determine a number of the\
    \ following digits: 2, 3, 5, 7, \n// B (=decimal 11), D (=decimal 13).\n// Note:\
    \ you may assume the input is always correct or empty string, \n// and symbols\
    \ A,B,C,D,E,F are always uppercase.\n// Examples:\n// For num = \"AB\" the output\
    \ should be 1.\n// For num = \"1077E\" the output should be 2.\n// For num = \"\
    ABED1A33\" the output should be 4.\n// For num = \"123456789ABCDEF0\" the output\
    \ should be 6.\n// For num = \"2020\" the output should be 2.\nfunction hex_key($num)\
    \ {\n    $hex_key = array(\n        '0' => 0,\n        '1' => 1,\n        '2'\
    \ => 2,\n        '3' => 3,\n        '4' => 4,\n        '5' => 5,\n        '6'\
    \ => 6,\n        '7' => 7,\n        '8' => 8,\n        '9' => 9,\n        'A'\
    \ => 10,\n        'B' => 11,\n        'C' => 12,\n        'D' => 13,\n       \
    \ 'E' => 14,\n        'F' => 15\n    );\n    return $hex_key[$num];\n}\nfunction\
    \ candidate(...$args) {\n    return hex_key(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"AB\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"1077E\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ABED1A33\") !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"2020\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"123456789ABCDEF0\") !== 6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"112233445566778899AABBCCDDEEFF00\") !==\
    \ 12) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Warning:  Undefined array key \"AB\" in /tmp/tmpm5urucko.php on line\
    \ 37\nPHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpm5urucko.php:44\n\
    Stack trace:\n#0 /tmp/tmpm5urucko.php(52): test()\n#1 {main}\n  thrown in /tmp/tmpm5urucko.php\
    \ on line 44\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You have been tasked to write a function that receives \n//\
    \ a hexadecimal number as a string and counts the number of hexadecimal \n// digits\
    \ that are primes (prime number, or a prime, is a natural number \n// greater\
    \ than 1 that is not a product of two smaller natural numbers).\n// Hexadecimal\
    \ digits are 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, A, B, C, D, E, F.\n// Prime numbers\
    \ are 2, 3, 5, 7, 11, 13, 17,...\n// So you have to determine a number of the\
    \ following digits: 2, 3, 5, 7, \n// B (=decimal 11), D (=decimal 13).\n// Note:\
    \ you may assume the input is always correct or empty string, \n// and symbols\
    \ A,B,C,D,E,F are always uppercase.\n// Examples:\n// For num = \"AB\" the output\
    \ should be 1.\n// For num = \"1077E\" the output should be 2.\n// For num = \"\
    ABED1A33\" the output should be 4.\n// For num = \"123456789ABCDEF0\" the output\
    \ should be 6.\n// For num = \"2020\" the output should be 2.\nfunction hex_key($num)\
    \ {\n    $hex_arr = [\"0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"\
    8\", \"9\", \"A\", \"B\", \"C\", \"D\", \"E\", \"F\"];\n    $hex_prime = [\"2\"\
    , \"3\", \"5\", \"7\", \"B\", \"D\"];\n    $count = 0;\n    for ($i = 0; $i <\
    \ strlen($num); $i++) {\n        if (in_array($num[$i], $hex_prime)) {\n     \
    \       $count++;\n        }\n    }\n    return $count;\n}\necho hex_key(\"AB\"\
    ) . \"<br>\";\necho hex_key(\"1077E\") . \"<br>\";\necho hex_key(\"ABED1A33\"\
    ) . \"<br>\";\necho hex_key(\"123456789ABCDEF0\") . \"<br>\";\necho hex_key(\"\
    2020\") . \"<br>\";\nfunction candidate(...$args) {\n    return hex_key(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"AB\") !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"1077E\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ABED1A33\") !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2020\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"123456789ABCDEF0\") !== 6) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"112233445566778899AABBCCDDEEFF00\"\
    ) !== 12) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: 1<br>2<br>4<br>6<br>2<br>
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You have been tasked to write a function that receives \n//\
    \ a hexadecimal number as a string and counts the number of hexadecimal \n// digits\
    \ that are primes (prime number, or a prime, is a natural number \n// greater\
    \ than 1 that is not a product of two smaller natural numbers).\n// Hexadecimal\
    \ digits are 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, A, B, C, D, E, F.\n// Prime numbers\
    \ are 2, 3, 5, 7, 11, 13, 17,...\n// So you have to determine a number of the\
    \ following digits: 2, 3, 5, 7, \n// B (=decimal 11), D (=decimal 13).\n// Note:\
    \ you may assume the input is always correct or empty string, \n// and symbols\
    \ A,B,C,D,E,F are always uppercase.\n// Examples:\n// For num = \"AB\" the output\
    \ should be 1.\n// For num = \"1077E\" the output should be 2.\n// For num = \"\
    ABED1A33\" the output should be 4.\n// For num = \"123456789ABCDEF0\" the output\
    \ should be 6.\n// For num = \"2020\" the output should be 2.\nfunction hex_key($num)\
    \ {\n    $hex_key = array(\n        '0' => 0,\n        '1' => 1,\n        '2'\
    \ => 2,\n        '3' => 3,\n        '4' => 4,\n        '5' => 5,\n        '6'\
    \ => 6,\n        '7' => 7,\n        '8' => 8,\n        '9' => 9,\n        'A'\
    \ => 10,\n        'B' => 11,\n        'C' => 12,\n        'D' => 13,\n       \
    \ 'E' => 14,\n        'F' => 15\n    );\n    return $hex_key[$num];\n}\nfunction\
    \ candidate(...$args) {\n    return hex_key(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"AB\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"1077E\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ABED1A33\") !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"2020\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"123456789ABCDEF0\") !== 6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"112233445566778899AABBCCDDEEFF00\") !==\
    \ 12) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Warning:  Undefined array key \"AB\" in /tmp/tmpy7q2l392.php on line\
    \ 37\nPHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpy7q2l392.php:44\n\
    Stack trace:\n#0 /tmp/tmpy7q2l392.php(52): test()\n#1 {main}\n  thrown in /tmp/tmpy7q2l392.php\
    \ on line 44\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You have been tasked to write a function that receives \n//\
    \ a hexadecimal number as a string and counts the number of hexadecimal \n// digits\
    \ that are primes (prime number, or a prime, is a natural number \n// greater\
    \ than 1 that is not a product of two smaller natural numbers).\n// Hexadecimal\
    \ digits are 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, A, B, C, D, E, F.\n// Prime numbers\
    \ are 2, 3, 5, 7, 11, 13, 17,...\n// So you have to determine a number of the\
    \ following digits: 2, 3, 5, 7, \n// B (=decimal 11), D (=decimal 13).\n// Note:\
    \ you may assume the input is always correct or empty string, \n// and symbols\
    \ A,B,C,D,E,F are always uppercase.\n// Examples:\n// For num = \"AB\" the output\
    \ should be 1.\n// For num = \"1077E\" the output should be 2.\n// For num = \"\
    ABED1A33\" the output should be 4.\n// For num = \"123456789ABCDEF0\" the output\
    \ should be 6.\n// For num = \"2020\" the output should be 2.\nfunction hex_key($num)\
    \ {\n    $hex_key = array(\n        '0' => 0,\n        '1' => 1,\n        '2'\
    \ => 2,\n        '3' => 3,\n        '4' => 4,\n        '5' => 5,\n        '6'\
    \ => 6,\n        '7' => 7,\n        '8' => 8,\n        '9' => 9,\n        'A'\
    \ => 10,\n        'B' => 11,\n        'C' => 12,\n        'D' => 13,\n       \
    \ 'E' => 14,\n        'F' => 15\n    );\n    return $hex_key[$num];\n}\nfunction\
    \ candidate(...$args) {\n    return hex_key(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"AB\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"1077E\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ABED1A33\") !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"2020\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"123456789ABCDEF0\") !== 6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"112233445566778899AABBCCDDEEFF00\") !==\
    \ 12) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Warning:  Undefined array key \"AB\" in /tmp/tmpkd89uebh.php on line\
    \ 37\nPHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpkd89uebh.php:44\n\
    Stack trace:\n#0 /tmp/tmpkd89uebh.php(52): test()\n#1 {main}\n  thrown in /tmp/tmpkd89uebh.php\
    \ on line 44\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You have been tasked to write a function that receives \n//\
    \ a hexadecimal number as a string and counts the number of hexadecimal \n// digits\
    \ that are primes (prime number, or a prime, is a natural number \n// greater\
    \ than 1 that is not a product of two smaller natural numbers).\n// Hexadecimal\
    \ digits are 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, A, B, C, D, E, F.\n// Prime numbers\
    \ are 2, 3, 5, 7, 11, 13, 17,...\n// So you have to determine a number of the\
    \ following digits: 2, 3, 5, 7, \n// B (=decimal 11), D (=decimal 13).\n// Note:\
    \ you may assume the input is always correct or empty string, \n// and symbols\
    \ A,B,C,D,E,F are always uppercase.\n// Examples:\n// For num = \"AB\" the output\
    \ should be 1.\n// For num = \"1077E\" the output should be 2.\n// For num = \"\
    ABED1A33\" the output should be 4.\n// For num = \"123456789ABCDEF0\" the output\
    \ should be 6.\n// For num = \"2020\" the output should be 2.\nfunction hex_key($num)\
    \ {\n    $hex_key = [\n        '0' => 0,\n        '1' => 1,\n        '2' => 2,\n\
    \        '3' => 3,\n        '4' => 4,\n        '5' => 5,\n        '6' => 6,\n\
    \        '7' => 7,\n        '8' => 8,\n        '9' => 9,\n        'A' => 10,\n\
    \        'B' => 11,\n        'C' => 12,\n        'D' => 13,\n        'E' => 14,\n\
    \        'F' => 15\n    ];\n    return $hex_key[$num];\n}\nfunction candidate(...$args)\
    \ {\n    return hex_key(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    AB\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1077E\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ABED1A33\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2020\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    123456789ABCDEF0\") !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"112233445566778899AABBCCDDEEFF00\") !== 12) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Warning:  Undefined array key \"AB\" in /tmp/tmp3d7mfg20.php on line\
    \ 37\nPHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp3d7mfg20.php:44\n\
    Stack trace:\n#0 /tmp/tmp3d7mfg20.php(52): test()\n#1 {main}\n  thrown in /tmp/tmp3d7mfg20.php\
    \ on line 44\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You have been tasked to write a function that receives \n//\
    \ a hexadecimal number as a string and counts the number of hexadecimal \n// digits\
    \ that are primes (prime number, or a prime, is a natural number \n// greater\
    \ than 1 that is not a product of two smaller natural numbers).\n// Hexadecimal\
    \ digits are 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, A, B, C, D, E, F.\n// Prime numbers\
    \ are 2, 3, 5, 7, 11, 13, 17,...\n// So you have to determine a number of the\
    \ following digits: 2, 3, 5, 7, \n// B (=decimal 11), D (=decimal 13).\n// Note:\
    \ you may assume the input is always correct or empty string, \n// and symbols\
    \ A,B,C,D,E,F are always uppercase.\n// Examples:\n// For num = \"AB\" the output\
    \ should be 1.\n// For num = \"1077E\" the output should be 2.\n// For num = \"\
    ABED1A33\" the output should be 4.\n// For num = \"123456789ABCDEF0\" the output\
    \ should be 6.\n// For num = \"2020\" the output should be 2.\nfunction hex_key($num)\
    \ {\n    $hex = ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9', 'A', 'B', 'C',\
    \ 'D', 'E', 'F'];\n    $hex_key = array_flip($hex);\n    return $hex_key;\n}\n\
    function candidate(...$args) {\n    return hex_key(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"AB\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"1077E\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ABED1A33\") !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"2020\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"123456789ABCDEF0\") !== 6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"112233445566778899AABBCCDDEEFF00\") !==\
    \ 12) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmppenkj8iv.php:28\n\
    Stack trace:\n#0 /tmp/tmppenkj8iv.php(36): test()\n#1 {main}\n  thrown in /tmp/tmppenkj8iv.php\
    \ on line 28\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You have been tasked to write a function that receives \n//\
    \ a hexadecimal number as a string and counts the number of hexadecimal \n// digits\
    \ that are primes (prime number, or a prime, is a natural number \n// greater\
    \ than 1 that is not a product of two smaller natural numbers).\n// Hexadecimal\
    \ digits are 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, A, B, C, D, E, F.\n// Prime numbers\
    \ are 2, 3, 5, 7, 11, 13, 17,...\n// So you have to determine a number of the\
    \ following digits: 2, 3, 5, 7, \n// B (=decimal 11), D (=decimal 13).\n// Note:\
    \ you may assume the input is always correct or empty string, \n// and symbols\
    \ A,B,C,D,E,F are always uppercase.\n// Examples:\n// For num = \"AB\" the output\
    \ should be 1.\n// For num = \"1077E\" the output should be 2.\n// For num = \"\
    ABED1A33\" the output should be 4.\n// For num = \"123456789ABCDEF0\" the output\
    \ should be 6.\n// For num = \"2020\" the output should be 2.\nfunction hex_key($num)\
    \ {\n    $hex_key = ['0','1','2','3','4','5','6','7','8','9','A','B','C','D','E','F'];\n\
    \    $hex_prime = ['2','3','5','7','B','D'];\n    $num_array = str_split($num);\n\
    \    $result = 0;\n    foreach ($num_array as $value) {\n        if (in_array($value,\
    \ $hex_prime)) {\n            $result++;\n        }\n    }\n    return $result;\n\
    }\necho hex_key(\"AB\") . \"<br>\";\necho hex_key(\"1077E\") . \"<br>\";\necho\
    \ hex_key(\"ABED1A33\") . \"<br>\";\necho hex_key(\"123456789ABCDEF0\") . \"<br>\"\
    ;\necho hex_key(\"2020\") . \"<br>\";\nfunction candidate(...$args) {\n    return\
    \ hex_key(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"AB\")\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"1077E\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"ABED1A33\"\
    ) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"2020\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"123456789ABCDEF0\"\
    ) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"112233445566778899AABBCCDDEEFF00\"\
    ) !== 12) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: 1<br>2<br>4<br>6<br>2<br>
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You have been tasked to write a function that receives \n//\
    \ a hexadecimal number as a string and counts the number of hexadecimal \n// digits\
    \ that are primes (prime number, or a prime, is a natural number \n// greater\
    \ than 1 that is not a product of two smaller natural numbers).\n// Hexadecimal\
    \ digits are 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, A, B, C, D, E, F.\n// Prime numbers\
    \ are 2, 3, 5, 7, 11, 13, 17,...\n// So you have to determine a number of the\
    \ following digits: 2, 3, 5, 7, \n// B (=decimal 11), D (=decimal 13).\n// Note:\
    \ you may assume the input is always correct or empty string, \n// and symbols\
    \ A,B,C,D,E,F are always uppercase.\n// Examples:\n// For num = \"AB\" the output\
    \ should be 1.\n// For num = \"1077E\" the output should be 2.\n// For num = \"\
    ABED1A33\" the output should be 4.\n// For num = \"123456789ABCDEF0\" the output\
    \ should be 6.\n// For num = \"2020\" the output should be 2.\nfunction hex_key($num)\
    \ {\n    $hex = ['0','1','2','3','4','5','6','7','8','9','A','B','C','D','E','F'];\n\
    \    $prime = [2,3,5,7,11,13];\n    $count = 0;\n    for ($i=0; $i < strlen($num);\
    \ $i++) { \n        if (in_array($num[$i], $hex)) {\n            if (in_array($num[$i],\
    \ $prime)) {\n                $count++;\n            }\n        }\n    }\n   \
    \ return $count;\n}\necho hex_key(\"AB\").\"\\n\";\necho hex_key(\"1077E\").\"\
    \\n\";\necho hex_key(\"ABED1A33\").\"\\n\";\necho hex_key(\"123456789ABCDEF0\"\
    ).\"\\n\";\necho hex_key(\"2020\").\"\\n\";\nfunction candidate(...$args) {\n\
    \    return hex_key(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    AB\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1077E\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ABED1A33\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2020\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    123456789ABCDEF0\") !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"112233445566778899AABBCCDDEEFF00\") !== 12) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "0\n2\n2\n4\n2\n"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpw9iekkrt.php:41\n\
    Stack trace:\n#0 /tmp/tmpw9iekkrt.php(49): test()\n#1 {main}\n  thrown in /tmp/tmpw9iekkrt.php\
    \ on line 41\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You have been tasked to write a function that receives \n//\
    \ a hexadecimal number as a string and counts the number of hexadecimal \n// digits\
    \ that are primes (prime number, or a prime, is a natural number \n// greater\
    \ than 1 that is not a product of two smaller natural numbers).\n// Hexadecimal\
    \ digits are 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, A, B, C, D, E, F.\n// Prime numbers\
    \ are 2, 3, 5, 7, 11, 13, 17,...\n// So you have to determine a number of the\
    \ following digits: 2, 3, 5, 7, \n// B (=decimal 11), D (=decimal 13).\n// Note:\
    \ you may assume the input is always correct or empty string, \n// and symbols\
    \ A,B,C,D,E,F are always uppercase.\n// Examples:\n// For num = \"AB\" the output\
    \ should be 1.\n// For num = \"1077E\" the output should be 2.\n// For num = \"\
    ABED1A33\" the output should be 4.\n// For num = \"123456789ABCDEF0\" the output\
    \ should be 6.\n// For num = \"2020\" the output should be 2.\nfunction hex_key($num)\
    \ {\n    $hex_key = array(\n        '0' => 0,\n        '1' => 1,\n        '2'\
    \ => 2,\n        '3' => 3,\n        '4' => 4,\n        '5' => 5,\n        '6'\
    \ => 6,\n        '7' => 7,\n        '8' => 8,\n        '9' => 9,\n        'A'\
    \ => 10,\n        'B' => 11,\n        'C' => 12,\n        'D' => 13,\n       \
    \ 'E' => 14,\n        'F' => 15\n    );\n    return $hex_key[$num];\n}\nfunction\
    \ candidate(...$args) {\n    return hex_key(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"AB\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"1077E\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ABED1A33\") !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"2020\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"123456789ABCDEF0\") !== 6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"112233445566778899AABBCCDDEEFF00\") !==\
    \ 12) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Warning:  Undefined array key \"AB\" in /tmp/tmpfkzjfxcz.php on line\
    \ 37\nPHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpfkzjfxcz.php:44\n\
    Stack trace:\n#0 /tmp/tmpfkzjfxcz.php(52): test()\n#1 {main}\n  thrown in /tmp/tmpfkzjfxcz.php\
    \ on line 44\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You have been tasked to write a function that receives \n//\
    \ a hexadecimal number as a string and counts the number of hexadecimal \n// digits\
    \ that are primes (prime number, or a prime, is a natural number \n// greater\
    \ than 1 that is not a product of two smaller natural numbers).\n// Hexadecimal\
    \ digits are 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, A, B, C, D, E, F.\n// Prime numbers\
    \ are 2, 3, 5, 7, 11, 13, 17,...\n// So you have to determine a number of the\
    \ following digits: 2, 3, 5, 7, \n// B (=decimal 11), D (=decimal 13).\n// Note:\
    \ you may assume the input is always correct or empty string, \n// and symbols\
    \ A,B,C,D,E,F are always uppercase.\n// Examples:\n// For num = \"AB\" the output\
    \ should be 1.\n// For num = \"1077E\" the output should be 2.\n// For num = \"\
    ABED1A33\" the output should be 4.\n// For num = \"123456789ABCDEF0\" the output\
    \ should be 6.\n// For num = \"2020\" the output should be 2.\nfunction hex_key($num)\
    \ {\n    $hex_key = array(\n        '0' => 0,\n        '1' => 1,\n        '2'\
    \ => 2,\n        '3' => 3,\n        '4' => 4,\n        '5' => 5,\n        '6'\
    \ => 6,\n        '7' => 7,\n        '8' => 8,\n        '9' => 9,\n        'A'\
    \ => 10,\n        'B' => 11,\n        'C' => 12,\n        'D' => 13,\n       \
    \ 'E' => 14,\n        'F' => 15\n    );\n    return $hex_key[$num];\n}\nfunction\
    \ candidate(...$args) {\n    return hex_key(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"AB\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"1077E\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ABED1A33\") !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"2020\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"123456789ABCDEF0\") !== 6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"112233445566778899AABBCCDDEEFF00\") !==\
    \ 12) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Warning:  Undefined array key \"AB\" in /tmp/tmprm9ytpbn.php on line\
    \ 37\nPHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmprm9ytpbn.php:44\n\
    Stack trace:\n#0 /tmp/tmprm9ytpbn.php(52): test()\n#1 {main}\n  thrown in /tmp/tmprm9ytpbn.php\
    \ on line 44\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You have been tasked to write a function that receives \n//\
    \ a hexadecimal number as a string and counts the number of hexadecimal \n// digits\
    \ that are primes (prime number, or a prime, is a natural number \n// greater\
    \ than 1 that is not a product of two smaller natural numbers).\n// Hexadecimal\
    \ digits are 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, A, B, C, D, E, F.\n// Prime numbers\
    \ are 2, 3, 5, 7, 11, 13, 17,...\n// So you have to determine a number of the\
    \ following digits: 2, 3, 5, 7, \n// B (=decimal 11), D (=decimal 13).\n// Note:\
    \ you may assume the input is always correct or empty string, \n// and symbols\
    \ A,B,C,D,E,F are always uppercase.\n// Examples:\n// For num = \"AB\" the output\
    \ should be 1.\n// For num = \"1077E\" the output should be 2.\n// For num = \"\
    ABED1A33\" the output should be 4.\n// For num = \"123456789ABCDEF0\" the output\
    \ should be 6.\n// For num = \"2020\" the output should be 2.\nfunction hex_key($num)\
    \ {\n    $hex = array(\n        '0' => 0,\n        '1' => 1,\n        '2' => 2,\n\
    \        '3' => 3,\n        '4' => 4,\n        '5' => 5,\n        '6' => 6,\n\
    \        '7' => 7,\n        '8' => 8,\n        '9' => 9,\n        'A' => 10,\n\
    \        'B' => 11,\n        'C' => 12,\n        'D' => 13,\n        'E' => 14,\n\
    \        'F' => 15\n    );\n    $primes = array(2, 3, 5, 7, 11, 13);\n    $count\
    \ = 0;\n    for ($i = 0; $i < strlen($num); $i++) {\n        if (in_array($hex[$num[$i]],\
    \ $primes)) {\n            $count++;\n        }\n    }\n    return $count;\n}\n\
    echo hex_key(\"AB\") . \"\\n\";\necho hex_key(\"1077E\") . \"\\n\";\necho hex_key(\"\
    ABED1A33\") . \"\\n\";\necho hex_key(\"123456789ABCDEF0\") . \"\\n\";\necho hex_key(\"\
    2020\") . \"\\n\";\nfunction candidate(...$args) {\n    return hex_key(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"AB\") !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"1077E\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ABED1A33\") !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2020\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"123456789ABCDEF0\") !== 6) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"112233445566778899AABBCCDDEEFF00\"\
    ) !== 12) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "1\n2\n4\n6\n2\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You have been tasked to write a function that receives \n//\
    \ a hexadecimal number as a string and counts the number of hexadecimal \n// digits\
    \ that are primes (prime number, or a prime, is a natural number \n// greater\
    \ than 1 that is not a product of two smaller natural numbers).\n// Hexadecimal\
    \ digits are 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, A, B, C, D, E, F.\n// Prime numbers\
    \ are 2, 3, 5, 7, 11, 13, 17,...\n// So you have to determine a number of the\
    \ following digits: 2, 3, 5, 7, \n// B (=decimal 11), D (=decimal 13).\n// Note:\
    \ you may assume the input is always correct or empty string, \n// and symbols\
    \ A,B,C,D,E,F are always uppercase.\n// Examples:\n// For num = \"AB\" the output\
    \ should be 1.\n// For num = \"1077E\" the output should be 2.\n// For num = \"\
    ABED1A33\" the output should be 4.\n// For num = \"123456789ABCDEF0\" the output\
    \ should be 6.\n// For num = \"2020\" the output should be 2.\nfunction hex_key($num)\
    \ {\n    $hex_key = array(\n        '0' => 0,\n        '1' => 1,\n        '2'\
    \ => 2,\n        '3' => 3,\n        '4' => 4,\n        '5' => 5,\n        '6'\
    \ => 6,\n        '7' => 7,\n        '8' => 8,\n        '9' => 9,\n        'A'\
    \ => 10,\n        'B' => 11,\n        'C' => 12,\n        'D' => 13,\n       \
    \ 'E' => 14,\n        'F' => 15\n    );\n    return $hex_key[$num];\n}\nfunction\
    \ candidate(...$args) {\n    return hex_key(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"AB\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"1077E\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ABED1A33\") !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"2020\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"123456789ABCDEF0\") !== 6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"112233445566778899AABBCCDDEEFF00\") !==\
    \ 12) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Warning:  Undefined array key \"AB\" in /tmp/tmpv8_g2mg4.php on line\
    \ 37\nPHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpv8_g2mg4.php:44\n\
    Stack trace:\n#0 /tmp/tmpv8_g2mg4.php(52): test()\n#1 {main}\n  thrown in /tmp/tmpv8_g2mg4.php\
    \ on line 44\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You have been tasked to write a function that receives \n//\
    \ a hexadecimal number as a string and counts the number of hexadecimal \n// digits\
    \ that are primes (prime number, or a prime, is a natural number \n// greater\
    \ than 1 that is not a product of two smaller natural numbers).\n// Hexadecimal\
    \ digits are 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, A, B, C, D, E, F.\n// Prime numbers\
    \ are 2, 3, 5, 7, 11, 13, 17,...\n// So you have to determine a number of the\
    \ following digits: 2, 3, 5, 7, \n// B (=decimal 11), D (=decimal 13).\n// Note:\
    \ you may assume the input is always correct or empty string, \n// and symbols\
    \ A,B,C,D,E,F are always uppercase.\n// Examples:\n// For num = \"AB\" the output\
    \ should be 1.\n// For num = \"1077E\" the output should be 2.\n// For num = \"\
    ABED1A33\" the output should be 4.\n// For num = \"123456789ABCDEF0\" the output\
    \ should be 6.\n// For num = \"2020\" the output should be 2.\nfunction hex_key($num)\
    \ {\n    $hex = array(\n        '0' => 0,\n        '1' => 1,\n        '2' => 2,\n\
    \        '3' => 3,\n        '4' => 4,\n        '5' => 5,\n        '6' => 6,\n\
    \        '7' => 7,\n        '8' => 8,\n        '9' => 9,\n        'A' => 10,\n\
    \        'B' => 11,\n        'C' => 12,\n        'D' => 13,\n        'E' => 14,\n\
    \        'F' => 15\n    );\n    $prime = array(\n        '2' => 2,\n        '3'\
    \ => 3,\n        '5' => 5,\n        '7' => 7,\n        'B' => 11,\n        'D'\
    \ => 13\n    );\n    $count = 0;\n    for ($i = 0; $i < strlen($num); $i++) {\n\
    \        if (array_key_exists($num[$i], $prime)) {\n            $count++;\n  \
    \      }\n    }\n    return $count;\n}\necho hex_key(\"AB\");\necho \"<br>\";\n\
    echo hex_key(\"1077E\");\necho \"<br>\";\necho hex_key(\"ABED1A33\");\necho \"\
    <br>\";\necho hex_key(\"123456789ABCDEF0\");\necho \"<br>\";\necho hex_key(\"\
    2020\");\nfunction candidate(...$args) {\n    return hex_key(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"AB\") !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"1077E\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ABED1A33\") !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2020\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"123456789ABCDEF0\") !== 6) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"112233445566778899AABBCCDDEEFF00\"\
    ) !== 12) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: 1<br>2<br>4<br>6<br>2
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You have been tasked to write a function that receives \n//\
    \ a hexadecimal number as a string and counts the number of hexadecimal \n// digits\
    \ that are primes (prime number, or a prime, is a natural number \n// greater\
    \ than 1 that is not a product of two smaller natural numbers).\n// Hexadecimal\
    \ digits are 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, A, B, C, D, E, F.\n// Prime numbers\
    \ are 2, 3, 5, 7, 11, 13, 17,...\n// So you have to determine a number of the\
    \ following digits: 2, 3, 5, 7, \n// B (=decimal 11), D (=decimal 13).\n// Note:\
    \ you may assume the input is always correct or empty string, \n// and symbols\
    \ A,B,C,D,E,F are always uppercase.\n// Examples:\n// For num = \"AB\" the output\
    \ should be 1.\n// For num = \"1077E\" the output should be 2.\n// For num = \"\
    ABED1A33\" the output should be 4.\n// For num = \"123456789ABCDEF0\" the output\
    \ should be 6.\n// For num = \"2020\" the output should be 2.\nfunction hex_key($num)\
    \ {\n    $hex_key = array(\n        '0' => 0,\n        '1' => 1,\n        '2'\
    \ => 2,\n        '3' => 3,\n        '4' => 4,\n        '5' => 5,\n        '6'\
    \ => 6,\n        '7' => 7,\n        '8' => 8,\n        '9' => 9,\n        'A'\
    \ => 10,\n        'B' => 11,\n        'C' => 12,\n        'D' => 13,\n       \
    \ 'E' => 14,\n        'F' => 15\n    );\n    return $hex_key[$num];\n}\nfunction\
    \ candidate(...$args) {\n    return hex_key(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"AB\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"1077E\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ABED1A33\") !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"2020\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"123456789ABCDEF0\") !== 6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"112233445566778899AABBCCDDEEFF00\") !==\
    \ 12) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Warning:  Undefined array key \"AB\" in /tmp/tmpcbzwi7z1.php on line\
    \ 37\nPHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpcbzwi7z1.php:44\n\
    Stack trace:\n#0 /tmp/tmpcbzwi7z1.php(52): test()\n#1 {main}\n  thrown in /tmp/tmpcbzwi7z1.php\
    \ on line 44\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You have been tasked to write a function that receives \n//\
    \ a hexadecimal number as a string and counts the number of hexadecimal \n// digits\
    \ that are primes (prime number, or a prime, is a natural number \n// greater\
    \ than 1 that is not a product of two smaller natural numbers).\n// Hexadecimal\
    \ digits are 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, A, B, C, D, E, F.\n// Prime numbers\
    \ are 2, 3, 5, 7, 11, 13, 17,...\n// So you have to determine a number of the\
    \ following digits: 2, 3, 5, 7, \n// B (=decimal 11), D (=decimal 13).\n// Note:\
    \ you may assume the input is always correct or empty string, \n// and symbols\
    \ A,B,C,D,E,F are always uppercase.\n// Examples:\n// For num = \"AB\" the output\
    \ should be 1.\n// For num = \"1077E\" the output should be 2.\n// For num = \"\
    ABED1A33\" the output should be 4.\n// For num = \"123456789ABCDEF0\" the output\
    \ should be 6.\n// For num = \"2020\" the output should be 2.\nfunction hex_key($num)\
    \ {\n    $hex_key = array(\n        '0' => 0,\n        '1' => 1,\n        '2'\
    \ => 2,\n        '3' => 3,\n        '4' => 4,\n        '5' => 5,\n        '6'\
    \ => 6,\n        '7' => 7,\n        '8' => 8,\n        '9' => 9,\n        'A'\
    \ => 10,\n        'B' => 11,\n        'C' => 12,\n        'D' => 13,\n       \
    \ 'E' => 14,\n        'F' => 15\n    );\n    return $hex_key[$num];\n}\nfunction\
    \ candidate(...$args) {\n    return hex_key(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"AB\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"1077E\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ABED1A33\") !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"2020\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"123456789ABCDEF0\") !== 6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"112233445566778899AABBCCDDEEFF00\") !==\
    \ 12) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Warning:  Undefined array key \"AB\" in /tmp/tmptlyouj3p.php on line\
    \ 37\nPHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmptlyouj3p.php:44\n\
    Stack trace:\n#0 /tmp/tmptlyouj3p.php(52): test()\n#1 {main}\n  thrown in /tmp/tmptlyouj3p.php\
    \ on line 44\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You have been tasked to write a function that receives \n//\
    \ a hexadecimal number as a string and counts the number of hexadecimal \n// digits\
    \ that are primes (prime number, or a prime, is a natural number \n// greater\
    \ than 1 that is not a product of two smaller natural numbers).\n// Hexadecimal\
    \ digits are 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, A, B, C, D, E, F.\n// Prime numbers\
    \ are 2, 3, 5, 7, 11, 13, 17,...\n// So you have to determine a number of the\
    \ following digits: 2, 3, 5, 7, \n// B (=decimal 11), D (=decimal 13).\n// Note:\
    \ you may assume the input is always correct or empty string, \n// and symbols\
    \ A,B,C,D,E,F are always uppercase.\n// Examples:\n// For num = \"AB\" the output\
    \ should be 1.\n// For num = \"1077E\" the output should be 2.\n// For num = \"\
    ABED1A33\" the output should be 4.\n// For num = \"123456789ABCDEF0\" the output\
    \ should be 6.\n// For num = \"2020\" the output should be 2.\nfunction hex_key($num)\
    \ {\n    $hex = array(\n        '0' => 0,\n        '1' => 1,\n        '2' => 2,\n\
    \        '3' => 3,\n        '4' => 4,\n        '5' => 5,\n        '6' => 6,\n\
    \        '7' => 7,\n        '8' => 8,\n        '9' => 9,\n        'A' => 10,\n\
    \        'B' => 11,\n        'C' => 12,\n        'D' => 13,\n        'E' => 14,\n\
    \        'F' => 15\n    );\n    $primes = array(2, 3, 5, 7, 11, 13);\n    $count\
    \ = 0;\n    for ($i = 0; $i < strlen($num); $i++) {\n        if (in_array($hex[$num[$i]],\
    \ $primes)) {\n            $count++;\n        }\n    }\n    return $count;\n}\n\
    \nfunction candidate(...$args) {\n    return hex_key(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"AB\") !== 1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"1077E\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ABED1A33\") !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2020\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"123456789ABCDEF0\") !== 6) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"112233445566778899AABBCCDDEEFF00\"\
    ) !== 12) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You have been tasked to write a function that receives \n//\
    \ a hexadecimal number as a string and counts the number of hexadecimal \n// digits\
    \ that are primes (prime number, or a prime, is a natural number \n// greater\
    \ than 1 that is not a product of two smaller natural numbers).\n// Hexadecimal\
    \ digits are 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, A, B, C, D, E, F.\n// Prime numbers\
    \ are 2, 3, 5, 7, 11, 13, 17,...\n// So you have to determine a number of the\
    \ following digits: 2, 3, 5, 7, \n// B (=decimal 11), D (=decimal 13).\n// Note:\
    \ you may assume the input is always correct or empty string, \n// and symbols\
    \ A,B,C,D,E,F are always uppercase.\n// Examples:\n// For num = \"AB\" the output\
    \ should be 1.\n// For num = \"1077E\" the output should be 2.\n// For num = \"\
    ABED1A33\" the output should be 4.\n// For num = \"123456789ABCDEF0\" the output\
    \ should be 6.\n// For num = \"2020\" the output should be 2.\nfunction hex_key($num)\
    \ {\n    $hex = array(\n        '0' => 0,\n        '1' => 1,\n        '2' => 2,\n\
    \        '3' => 3,\n        '4' => 4,\n        '5' => 5,\n        '6' => 6,\n\
    \        '7' => 7,\n        '8' => 8,\n        '9' => 9,\n        'A' => 10,\n\
    \        'B' => 11,\n        'C' => 12,\n        'D' => 13,\n        'E' => 14,\n\
    \        'F' => 15\n    );\n    $primes = array(2, 3, 5, 7, 11, 13);\n    $count\
    \ = 0;\n    for ($i = 0; $i < strlen($num); $i++) {\n        if (in_array($hex[$num[$i]],\
    \ $primes)) {\n            $count++;\n        }\n    }\n    return $count;\n}\n\
    echo hex_key(\"AB\") . \"\\n\";\necho hex_key(\"1077E\") . \"\\n\";\necho hex_key(\"\
    ABED1A33\") . \"\\n\";\necho hex_key(\"123456789ABCDEF0\") . \"\\n\";\necho hex_key(\"\
    2020\") . \"\\n\";\nfunction candidate(...$args) {\n    return hex_key(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"AB\") !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"1077E\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ABED1A33\") !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2020\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"123456789ABCDEF0\") !== 6) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"112233445566778899AABBCCDDEEFF00\"\
    ) !== 12) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "1\n2\n4\n6\n2\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You have been tasked to write a function that receives \n//\
    \ a hexadecimal number as a string and counts the number of hexadecimal \n// digits\
    \ that are primes (prime number, or a prime, is a natural number \n// greater\
    \ than 1 that is not a product of two smaller natural numbers).\n// Hexadecimal\
    \ digits are 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, A, B, C, D, E, F.\n// Prime numbers\
    \ are 2, 3, 5, 7, 11, 13, 17,...\n// So you have to determine a number of the\
    \ following digits: 2, 3, 5, 7, \n// B (=decimal 11), D (=decimal 13).\n// Note:\
    \ you may assume the input is always correct or empty string, \n// and symbols\
    \ A,B,C,D,E,F are always uppercase.\n// Examples:\n// For num = \"AB\" the output\
    \ should be 1.\n// For num = \"1077E\" the output should be 2.\n// For num = \"\
    ABED1A33\" the output should be 4.\n// For num = \"123456789ABCDEF0\" the output\
    \ should be 6.\n// For num = \"2020\" the output should be 2.\nfunction hex_key($num)\
    \ {\n    $hex_key = array(\n        '0' => 0,\n        '1' => 1,\n        '2'\
    \ => 2,\n        '3' => 3,\n        '4' => 4,\n        '5' => 5,\n        '6'\
    \ => 6,\n        '7' => 7,\n        '8' => 8,\n        '9' => 9,\n        'A'\
    \ => 10,\n        'B' => 11,\n        'C' => 12,\n        'D' => 13,\n       \
    \ 'E' => 14,\n        'F' => 15\n    );\n    return $hex_key[$num];\n}\nfunction\
    \ candidate(...$args) {\n    return hex_key(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"AB\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"1077E\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ABED1A33\") !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"2020\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"123456789ABCDEF0\") !== 6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"112233445566778899AABBCCDDEEFF00\") !==\
    \ 12) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Warning:  Undefined array key \"AB\" in /tmp/tmpyt6xkbp4.php on line\
    \ 37\nPHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpyt6xkbp4.php:44\n\
    Stack trace:\n#0 /tmp/tmpyt6xkbp4.php(52): test()\n#1 {main}\n  thrown in /tmp/tmpyt6xkbp4.php\
    \ on line 44\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You have been tasked to write a function that receives \n//\
    \ a hexadecimal number as a string and counts the number of hexadecimal \n// digits\
    \ that are primes (prime number, or a prime, is a natural number \n// greater\
    \ than 1 that is not a product of two smaller natural numbers).\n// Hexadecimal\
    \ digits are 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, A, B, C, D, E, F.\n// Prime numbers\
    \ are 2, 3, 5, 7, 11, 13, 17,...\n// So you have to determine a number of the\
    \ following digits: 2, 3, 5, 7, \n// B (=decimal 11), D (=decimal 13).\n// Note:\
    \ you may assume the input is always correct or empty string, \n// and symbols\
    \ A,B,C,D,E,F are always uppercase.\n// Examples:\n// For num = \"AB\" the output\
    \ should be 1.\n// For num = \"1077E\" the output should be 2.\n// For num = \"\
    ABED1A33\" the output should be 4.\n// For num = \"123456789ABCDEF0\" the output\
    \ should be 6.\n// For num = \"2020\" the output should be 2.\nfunction hex_key($num)\
    \ {\n    $hex_key = array(\n        \"0\" => 0,\n        \"1\" => 1,\n       \
    \ \"2\" => 2,\n        \"3\" => 3,\n        \"4\" => 4,\n        \"5\" => 5,\n\
    \        \"6\" => 6,\n        \"7\" => 7,\n        \"8\" => 8,\n        \"9\"\
    \ => 9,\n        \"A\" => 10,\n        \"B\" => 11,\n        \"C\" => 12,\n  \
    \      \"D\" => 13,\n        \"E\" => 14,\n        \"F\" => 15\n    );\n    return\
    \ $hex_key[$num];\n}\nfunction candidate(...$args) {\n    return hex_key(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"AB\") !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"1077E\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ABED1A33\") !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2020\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"123456789ABCDEF0\") !== 6) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"112233445566778899AABBCCDDEEFF00\"\
    ) !== 12) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Warning:  Undefined array key \"AB\" in /tmp/tmpc6knil2b.php on line\
    \ 37\nPHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpc6knil2b.php:44\n\
    Stack trace:\n#0 /tmp/tmpc6knil2b.php(52): test()\n#1 {main}\n  thrown in /tmp/tmpc6knil2b.php\
    \ on line 44\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You have been tasked to write a function that receives \n//\
    \ a hexadecimal number as a string and counts the number of hexadecimal \n// digits\
    \ that are primes (prime number, or a prime, is a natural number \n// greater\
    \ than 1 that is not a product of two smaller natural numbers).\n// Hexadecimal\
    \ digits are 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, A, B, C, D, E, F.\n// Prime numbers\
    \ are 2, 3, 5, 7, 11, 13, 17,...\n// So you have to determine a number of the\
    \ following digits: 2, 3, 5, 7, \n// B (=decimal 11), D (=decimal 13).\n// Note:\
    \ you may assume the input is always correct or empty string, \n// and symbols\
    \ A,B,C,D,E,F are always uppercase.\n// Examples:\n// For num = \"AB\" the output\
    \ should be 1.\n// For num = \"1077E\" the output should be 2.\n// For num = \"\
    ABED1A33\" the output should be 4.\n// For num = \"123456789ABCDEF0\" the output\
    \ should be 6.\n// For num = \"2020\" the output should be 2.\nfunction hex_key($num)\
    \ {\n    $hex = array(\n        '0' => 0,\n        '1' => 1,\n        '2' => 2,\n\
    \        '3' => 3,\n        '4' => 4,\n        '5' => 5,\n        '6' => 6,\n\
    \        '7' => 7,\n        '8' => 8,\n        '9' => 9,\n        'A' => 10,\n\
    \        'B' => 11,\n        'C' => 12,\n        'D' => 13,\n        'E' => 14,\n\
    \        'F' => 15\n    );\n    $prime = array(\n        '2' => 2,\n        '3'\
    \ => 3,\n        '5' => 5,\n        '7' => 7,\n        'B' => 11,\n        'D'\
    \ => 13\n    );\n    $result = 0;\n    for ($i = 0; $i < strlen($num); $i++) {\n\
    \        if (array_key_exists($num[$i], $prime)) {\n            $result++;\n \
    \       }\n    }\n    return $result;\n}\necho hex_key(\"AB\");\necho \"<br>\"\
    ;\necho hex_key(\"1077E\");\necho \"<br>\";\necho hex_key(\"ABED1A33\");\necho\
    \ \"<br>\";\necho hex_key(\"123456789ABCDEF0\");\necho \"<br>\";\necho hex_key(\"\
    2020\");\nfunction candidate(...$args) {\n    return hex_key(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"AB\") !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"1077E\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ABED1A33\") !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2020\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"123456789ABCDEF0\") !== 6) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"112233445566778899AABBCCDDEEFF00\"\
    ) !== 12) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: 1<br>2<br>4<br>6<br>2
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You have been tasked to write a function that receives \n//\
    \ a hexadecimal number as a string and counts the number of hexadecimal \n// digits\
    \ that are primes (prime number, or a prime, is a natural number \n// greater\
    \ than 1 that is not a product of two smaller natural numbers).\n// Hexadecimal\
    \ digits are 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, A, B, C, D, E, F.\n// Prime numbers\
    \ are 2, 3, 5, 7, 11, 13, 17,...\n// So you have to determine a number of the\
    \ following digits: 2, 3, 5, 7, \n// B (=decimal 11), D (=decimal 13).\n// Note:\
    \ you may assume the input is always correct or empty string, \n// and symbols\
    \ A,B,C,D,E,F are always uppercase.\n// Examples:\n// For num = \"AB\" the output\
    \ should be 1.\n// For num = \"1077E\" the output should be 2.\n// For num = \"\
    ABED1A33\" the output should be 4.\n// For num = \"123456789ABCDEF0\" the output\
    \ should be 6.\n// For num = \"2020\" the output should be 2.\nfunction hex_key($num)\
    \ {\n    $hex = [\n        '0' => 0,\n        '1' => 1,\n        '2' => 2,\n \
    \       '3' => 3,\n        '4' => 4,\n        '5' => 5,\n        '6' => 6,\n \
    \       '7' => 7,\n        '8' => 8,\n        '9' => 9,\n        'A' => 10,\n\
    \        'B' => 11,\n        'C' => 12,\n        'D' => 13,\n        'E' => 14,\n\
    \        'F' => 15\n    ];\n    $primes = [2, 3, 5, 7, 11, 13];\n    $count =\
    \ 0;\n    for ($i = 0; $i < strlen($num); $i++) {\n        if (in_array($hex[$num[$i]],\
    \ $primes)) {\n            $count++;\n        }\n    }\n    return $count;\n}\n\
    echo hex_key(\"AB\") . \"<br>\";\necho hex_key(\"1077E\") . \"<br>\";\necho hex_key(\"\
    ABED1A33\") . \"<br>\";\necho hex_key(\"123456789ABCDEF0\") . \"<br>\";\necho\
    \ hex_key(\"2020\") . \"<br>\";\nfunction candidate(...$args) {\n    return hex_key(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"AB\") !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"1077E\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ABED1A33\") !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2020\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"123456789ABCDEF0\") !== 6) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"112233445566778899AABBCCDDEEFF00\"\
    ) !== 12) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: 1<br>2<br>4<br>6<br>2<br>
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You have been tasked to write a function that receives \n//\
    \ a hexadecimal number as a string and counts the number of hexadecimal \n// digits\
    \ that are primes (prime number, or a prime, is a natural number \n// greater\
    \ than 1 that is not a product of two smaller natural numbers).\n// Hexadecimal\
    \ digits are 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, A, B, C, D, E, F.\n// Prime numbers\
    \ are 2, 3, 5, 7, 11, 13, 17,...\n// So you have to determine a number of the\
    \ following digits: 2, 3, 5, 7, \n// B (=decimal 11), D (=decimal 13).\n// Note:\
    \ you may assume the input is always correct or empty string, \n// and symbols\
    \ A,B,C,D,E,F are always uppercase.\n// Examples:\n// For num = \"AB\" the output\
    \ should be 1.\n// For num = \"1077E\" the output should be 2.\n// For num = \"\
    ABED1A33\" the output should be 4.\n// For num = \"123456789ABCDEF0\" the output\
    \ should be 6.\n// For num = \"2020\" the output should be 2.\nfunction hex_key($num)\
    \ {\n    $hex = array(\n        \"0\" => 0,\n        \"1\" => 1,\n        \"2\"\
    \ => 2,\n        \"3\" => 3,\n        \"4\" => 4,\n        \"5\" => 5,\n     \
    \   \"6\" => 6,\n        \"7\" => 7,\n        \"8\" => 8,\n        \"9\" => 9,\n\
    \        \"A\" => 10,\n        \"B\" => 11,\n        \"C\" => 12,\n        \"\
    D\" => 13,\n        \"E\" => 14,\n        \"F\" => 15\n    );\n    $primes = array(2,\
    \ 3, 5, 7, 11, 13);\n    $count = 0;\n    for ($i = 0; $i < strlen($num); $i++)\
    \ {\n        if (in_array($hex[$num[$i]], $primes)) {\n            $count++;\n\
    \        }\n    }\n    return $count;\n}\necho hex_key(\"AB\");\necho \"<br>\"\
    ;\necho hex_key(\"1077E\");\necho \"<br>\";\necho hex_key(\"ABED1A33\");\necho\
    \ \"<br>\";\necho hex_key(\"123456789ABCDEF0\");\necho \"<br>\";\necho hex_key(\"\
    2020\");\nfunction candidate(...$args) {\n    return hex_key(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"AB\") !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"1077E\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ABED1A33\") !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2020\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"123456789ABCDEF0\") !== 6) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"112233445566778899AABBCCDDEEFF00\"\
    ) !== 12) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: 1<br>2<br>4<br>6<br>2
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You have been tasked to write a function that receives \n//\
    \ a hexadecimal number as a string and counts the number of hexadecimal \n// digits\
    \ that are primes (prime number, or a prime, is a natural number \n// greater\
    \ than 1 that is not a product of two smaller natural numbers).\n// Hexadecimal\
    \ digits are 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, A, B, C, D, E, F.\n// Prime numbers\
    \ are 2, 3, 5, 7, 11, 13, 17,...\n// So you have to determine a number of the\
    \ following digits: 2, 3, 5, 7, \n// B (=decimal 11), D (=decimal 13).\n// Note:\
    \ you may assume the input is always correct or empty string, \n// and symbols\
    \ A,B,C,D,E,F are always uppercase.\n// Examples:\n// For num = \"AB\" the output\
    \ should be 1.\n// For num = \"1077E\" the output should be 2.\n// For num = \"\
    ABED1A33\" the output should be 4.\n// For num = \"123456789ABCDEF0\" the output\
    \ should be 6.\n// For num = \"2020\" the output should be 2.\nfunction hex_key($num)\
    \ {\n    $hex = ['0','1','2','3','4','5','6','7','8','9','A','B','C','D','E','F'];\n\
    \    $primes = [2,3,5,7,11,13];\n    $count = 0;\n    for ($i=0; $i < strlen($num);\
    \ $i++) { \n        if (in_array($num[$i], $hex)) {\n            if (in_array($num[$i],\
    \ $primes)) {\n                $count++;\n            }\n        }\n    }\n  \
    \  return $count;\n}\necho hex_key(\"AB\").\"\\n\";\necho hex_key(\"1077E\").\"\
    \\n\";\necho hex_key(\"ABED1A33\").\"\\n\";\necho hex_key(\"123456789ABCDEF0\"\
    ).\"\\n\";\necho hex_key(\"2020\").\"\\n\";\nfunction candidate(...$args) {\n\
    \    return hex_key(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    AB\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1077E\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ABED1A33\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2020\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    123456789ABCDEF0\") !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"112233445566778899AABBCCDDEEFF00\") !== 12) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "0\n2\n2\n4\n2\n"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpq47use9v.php:41\n\
    Stack trace:\n#0 /tmp/tmpq47use9v.php(49): test()\n#1 {main}\n  thrown in /tmp/tmpq47use9v.php\
    \ on line 41\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You have been tasked to write a function that receives \n//\
    \ a hexadecimal number as a string and counts the number of hexadecimal \n// digits\
    \ that are primes (prime number, or a prime, is a natural number \n// greater\
    \ than 1 that is not a product of two smaller natural numbers).\n// Hexadecimal\
    \ digits are 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, A, B, C, D, E, F.\n// Prime numbers\
    \ are 2, 3, 5, 7, 11, 13, 17,...\n// So you have to determine a number of the\
    \ following digits: 2, 3, 5, 7, \n// B (=decimal 11), D (=decimal 13).\n// Note:\
    \ you may assume the input is always correct or empty string, \n// and symbols\
    \ A,B,C,D,E,F are always uppercase.\n// Examples:\n// For num = \"AB\" the output\
    \ should be 1.\n// For num = \"1077E\" the output should be 2.\n// For num = \"\
    ABED1A33\" the output should be 4.\n// For num = \"123456789ABCDEF0\" the output\
    \ should be 6.\n// For num = \"2020\" the output should be 2.\nfunction hex_key($num)\
    \ {\n    $hex = array(\n        \"0\" => 0,\n        \"1\" => 1,\n        \"2\"\
    \ => 2,\n        \"3\" => 3,\n        \"4\" => 4,\n        \"5\" => 5,\n     \
    \   \"6\" => 6,\n        \"7\" => 7,\n        \"8\" => 8,\n        \"9\" => 9,\n\
    \        \"A\" => 10,\n        \"B\" => 11,\n        \"C\" => 12,\n        \"\
    D\" => 13,\n        \"E\" => 14,\n        \"F\" => 15\n    );\n    $prime = array(2,\
    \ 3, 5, 7, 11, 13);\n    $count = 0;\n    for ($i = 0; $i < strlen($num); $i++)\
    \ {\n        if (in_array($hex[$num[$i]], $prime)) {\n            $count++;\n\
    \        }\n    }\n    return $count;\n}\necho hex_key(\"AB\") . \"<br>\";\necho\
    \ hex_key(\"1077E\") . \"<br>\";\necho hex_key(\"ABED1A33\") . \"<br>\";\necho\
    \ hex_key(\"123456789ABCDEF0\") . \"<br>\";\necho hex_key(\"2020\") . \"<br>\"\
    ;\nfunction candidate(...$args) {\n    return hex_key(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"AB\") !== 1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"1077E\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ABED1A33\") !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2020\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"123456789ABCDEF0\") !== 6) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"112233445566778899AABBCCDDEEFF00\"\
    ) !== 12) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: 1<br>2<br>4<br>6<br>2<br>
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You have been tasked to write a function that receives \n//\
    \ a hexadecimal number as a string and counts the number of hexadecimal \n// digits\
    \ that are primes (prime number, or a prime, is a natural number \n// greater\
    \ than 1 that is not a product of two smaller natural numbers).\n// Hexadecimal\
    \ digits are 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, A, B, C, D, E, F.\n// Prime numbers\
    \ are 2, 3, 5, 7, 11, 13, 17,...\n// So you have to determine a number of the\
    \ following digits: 2, 3, 5, 7, \n// B (=decimal 11), D (=decimal 13).\n// Note:\
    \ you may assume the input is always correct or empty string, \n// and symbols\
    \ A,B,C,D,E,F are always uppercase.\n// Examples:\n// For num = \"AB\" the output\
    \ should be 1.\n// For num = \"1077E\" the output should be 2.\n// For num = \"\
    ABED1A33\" the output should be 4.\n// For num = \"123456789ABCDEF0\" the output\
    \ should be 6.\n// For num = \"2020\" the output should be 2.\nfunction hex_key($num)\
    \ {\n    $hex_key = [\n        '0' => 0,\n        '1' => 1,\n        '2' => 2,\n\
    \        '3' => 3,\n        '4' => 4,\n        '5' => 5,\n        '6' => 6,\n\
    \        '7' => 7,\n        '8' => 8,\n        '9' => 9,\n        'A' => 10,\n\
    \        'B' => 11,\n        'C' => 12,\n        'D' => 13,\n        'E' => 14,\n\
    \        'F' => 15\n    ];\n    return $hex_key[$num];\n}\nfunction candidate(...$args)\
    \ {\n    return hex_key(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    AB\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1077E\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ABED1A33\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2020\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    123456789ABCDEF0\") !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"112233445566778899AABBCCDDEEFF00\") !== 12) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Warning:  Undefined array key \"AB\" in /tmp/tmpw7dj7rwn.php on line\
    \ 37\nPHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpw7dj7rwn.php:44\n\
    Stack trace:\n#0 /tmp/tmpw7dj7rwn.php(52): test()\n#1 {main}\n  thrown in /tmp/tmpw7dj7rwn.php\
    \ on line 44\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You have been tasked to write a function that receives \n//\
    \ a hexadecimal number as a string and counts the number of hexadecimal \n// digits\
    \ that are primes (prime number, or a prime, is a natural number \n// greater\
    \ than 1 that is not a product of two smaller natural numbers).\n// Hexadecimal\
    \ digits are 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, A, B, C, D, E, F.\n// Prime numbers\
    \ are 2, 3, 5, 7, 11, 13, 17,...\n// So you have to determine a number of the\
    \ following digits: 2, 3, 5, 7, \n// B (=decimal 11), D (=decimal 13).\n// Note:\
    \ you may assume the input is always correct or empty string, \n// and symbols\
    \ A,B,C,D,E,F are always uppercase.\n// Examples:\n// For num = \"AB\" the output\
    \ should be 1.\n// For num = \"1077E\" the output should be 2.\n// For num = \"\
    ABED1A33\" the output should be 4.\n// For num = \"123456789ABCDEF0\" the output\
    \ should be 6.\n// For num = \"2020\" the output should be 2.\nfunction hex_key($num)\
    \ {\n    $hex_key = [\n        \"0\" => 0,\n        \"1\" => 1,\n        \"2\"\
    \ => 2,\n        \"3\" => 3,\n        \"4\" => 4,\n        \"5\" => 5,\n     \
    \   \"6\" => 6,\n        \"7\" => 7,\n        \"8\" => 8,\n        \"9\" => 9,\n\
    \        \"A\" => 10,\n        \"B\" => 11,\n        \"C\" => 12,\n        \"\
    D\" => 13,\n        \"E\" => 14,\n        \"F\" => 15\n    ];\n    return $hex_key[$num];\n\
    }\nfunction candidate(...$args) {\n    return hex_key(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"AB\") !== 1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"1077E\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ABED1A33\") !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2020\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"123456789ABCDEF0\") !== 6) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"112233445566778899AABBCCDDEEFF00\"\
    ) !== 12) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Warning:  Undefined array key \"AB\" in /tmp/tmpvxuklta1.php on line\
    \ 37\nPHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpvxuklta1.php:44\n\
    Stack trace:\n#0 /tmp/tmpvxuklta1.php(52): test()\n#1 {main}\n  thrown in /tmp/tmpvxuklta1.php\
    \ on line 44\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You have been tasked to write a function that receives \n//\
    \ a hexadecimal number as a string and counts the number of hexadecimal \n// digits\
    \ that are primes (prime number, or a prime, is a natural number \n// greater\
    \ than 1 that is not a product of two smaller natural numbers).\n// Hexadecimal\
    \ digits are 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, A, B, C, D, E, F.\n// Prime numbers\
    \ are 2, 3, 5, 7, 11, 13, 17,...\n// So you have to determine a number of the\
    \ following digits: 2, 3, 5, 7, \n// B (=decimal 11), D (=decimal 13).\n// Note:\
    \ you may assume the input is always correct or empty string, \n// and symbols\
    \ A,B,C,D,E,F are always uppercase.\n// Examples:\n// For num = \"AB\" the output\
    \ should be 1.\n// For num = \"1077E\" the output should be 2.\n// For num = \"\
    ABED1A33\" the output should be 4.\n// For num = \"123456789ABCDEF0\" the output\
    \ should be 6.\n// For num = \"2020\" the output should be 2.\nfunction hex_key($num)\
    \ {\n    $hex_key = array(\n        \"0\" => 0,\n        \"1\" => 1,\n       \
    \ \"2\" => 2,\n        \"3\" => 3,\n        \"4\" => 4,\n        \"5\" => 5,\n\
    \        \"6\" => 6,\n        \"7\" => 7,\n        \"8\" => 8,\n        \"9\"\
    \ => 9,\n        \"A\" => 10,\n        \"B\" => 11,\n        \"C\" => 12,\n  \
    \      \"D\" => 13,\n        \"E\" => 14,\n        \"F\" => 15\n    );\n    return\
    \ $hex_key[$num];\n}\nfunction candidate(...$args) {\n    return hex_key(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"AB\") !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"1077E\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ABED1A33\") !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2020\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"123456789ABCDEF0\") !== 6) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"112233445566778899AABBCCDDEEFF00\"\
    ) !== 12) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Warning:  Undefined array key \"AB\" in /tmp/tmp6nxlva3p.php on line\
    \ 37\nPHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp6nxlva3p.php:44\n\
    Stack trace:\n#0 /tmp/tmp6nxlva3p.php(52): test()\n#1 {main}\n  thrown in /tmp/tmp6nxlva3p.php\
    \ on line 44\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You have been tasked to write a function that receives \n//\
    \ a hexadecimal number as a string and counts the number of hexadecimal \n// digits\
    \ that are primes (prime number, or a prime, is a natural number \n// greater\
    \ than 1 that is not a product of two smaller natural numbers).\n// Hexadecimal\
    \ digits are 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, A, B, C, D, E, F.\n// Prime numbers\
    \ are 2, 3, 5, 7, 11, 13, 17,...\n// So you have to determine a number of the\
    \ following digits: 2, 3, 5, 7, \n// B (=decimal 11), D (=decimal 13).\n// Note:\
    \ you may assume the input is always correct or empty string, \n// and symbols\
    \ A,B,C,D,E,F are always uppercase.\n// Examples:\n// For num = \"AB\" the output\
    \ should be 1.\n// For num = \"1077E\" the output should be 2.\n// For num = \"\
    ABED1A33\" the output should be 4.\n// For num = \"123456789ABCDEF0\" the output\
    \ should be 6.\n// For num = \"2020\" the output should be 2.\nfunction hex_key($num)\
    \ {\n    $hex = array(\n        '0' => 0,\n        '1' => 1,\n        '2' => 2,\n\
    \        '3' => 3,\n        '4' => 4,\n        '5' => 5,\n        '6' => 6,\n\
    \        '7' => 7,\n        '8' => 8,\n        '9' => 9,\n        'A' => 10,\n\
    \        'B' => 11,\n        'C' => 12,\n        'D' => 13,\n        'E' => 14,\n\
    \        'F' => 15\n    );\n    $primes = array(2, 3, 5, 7, 11, 13);\n    $count\
    \ = 0;\n    for ($i = 0; $i < strlen($num); $i++) {\n        if (in_array($hex[$num[$i]],\
    \ $primes)) {\n            $count++;\n        }\n    }\n    return $count;\n}\n\
    echo hex_key(\"AB\") . \"<br>\";\necho hex_key(\"1077E\") . \"<br>\";\necho hex_key(\"\
    ABED1A33\") . \"<br>\";\necho hex_key(\"123456789ABCDEF0\") . \"<br>\";\necho\
    \ hex_key(\"2020\") . \"<br>\";\nfunction candidate(...$args) {\n    return hex_key(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"AB\") !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"1077E\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ABED1A33\") !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2020\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"123456789ABCDEF0\") !== 6) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"112233445566778899AABBCCDDEEFF00\"\
    ) !== 12) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: 1<br>2<br>4<br>6<br>2<br>
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You have been tasked to write a function that receives \n//\
    \ a hexadecimal number as a string and counts the number of hexadecimal \n// digits\
    \ that are primes (prime number, or a prime, is a natural number \n// greater\
    \ than 1 that is not a product of two smaller natural numbers).\n// Hexadecimal\
    \ digits are 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, A, B, C, D, E, F.\n// Prime numbers\
    \ are 2, 3, 5, 7, 11, 13, 17,...\n// So you have to determine a number of the\
    \ following digits: 2, 3, 5, 7, \n// B (=decimal 11), D (=decimal 13).\n// Note:\
    \ you may assume the input is always correct or empty string, \n// and symbols\
    \ A,B,C,D,E,F are always uppercase.\n// Examples:\n// For num = \"AB\" the output\
    \ should be 1.\n// For num = \"1077E\" the output should be 2.\n// For num = \"\
    ABED1A33\" the output should be 4.\n// For num = \"123456789ABCDEF0\" the output\
    \ should be 6.\n// For num = \"2020\" the output should be 2.\nfunction hex_key($num)\
    \ {\n    $hex = array(\n        \"0\" => 0,\n        \"1\" => 1,\n        \"2\"\
    \ => 2,\n        \"3\" => 3,\n        \"4\" => 4,\n        \"5\" => 5,\n     \
    \   \"6\" => 6,\n        \"7\" => 7,\n        \"8\" => 8,\n        \"9\" => 9,\n\
    \        \"A\" => 10,\n        \"B\" => 11,\n        \"C\" => 12,\n        \"\
    D\" => 13,\n        \"E\" => 14,\n        \"F\" => 15\n    );\n    $primes = array(2,\
    \ 3, 5, 7, 11, 13);\n    $count = 0;\n    for ($i = 0; $i < strlen($num); $i++)\
    \ {\n        if (in_array($hex[$num[$i]], $primes)) {\n            $count++;\n\
    \        }\n    }\n    return $count;\n}\necho hex_key(\"AB\");\necho \"<br>\"\
    ;\necho hex_key(\"1077E\");\necho \"<br>\";\necho hex_key(\"ABED1A33\");\necho\
    \ \"<br>\";\necho hex_key(\"123456789ABCDEF0\");\necho \"<br>\";\necho hex_key(\"\
    2020\");\nfunction candidate(...$args) {\n    return hex_key(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"AB\") !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"1077E\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ABED1A33\") !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2020\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"123456789ABCDEF0\") !== 6) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"112233445566778899AABBCCDDEEFF00\"\
    ) !== 12) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: 1<br>2<br>4<br>6<br>2
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You have been tasked to write a function that receives \n//\
    \ a hexadecimal number as a string and counts the number of hexadecimal \n// digits\
    \ that are primes (prime number, or a prime, is a natural number \n// greater\
    \ than 1 that is not a product of two smaller natural numbers).\n// Hexadecimal\
    \ digits are 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, A, B, C, D, E, F.\n// Prime numbers\
    \ are 2, 3, 5, 7, 11, 13, 17,...\n// So you have to determine a number of the\
    \ following digits: 2, 3, 5, 7, \n// B (=decimal 11), D (=decimal 13).\n// Note:\
    \ you may assume the input is always correct or empty string, \n// and symbols\
    \ A,B,C,D,E,F are always uppercase.\n// Examples:\n// For num = \"AB\" the output\
    \ should be 1.\n// For num = \"1077E\" the output should be 2.\n// For num = \"\
    ABED1A33\" the output should be 4.\n// For num = \"123456789ABCDEF0\" the output\
    \ should be 6.\n// For num = \"2020\" the output should be 2.\nfunction hex_key($num)\
    \ {\n    $hex_key = array(\n        \"0\" => 0,\n        \"1\" => 1,\n       \
    \ \"2\" => 2,\n        \"3\" => 3,\n        \"4\" => 4,\n        \"5\" => 5,\n\
    \        \"6\" => 6,\n        \"7\" => 7,\n        \"8\" => 8,\n        \"9\"\
    \ => 9,\n        \"A\" => 10,\n        \"B\" => 11,\n        \"C\" => 12,\n  \
    \      \"D\" => 13,\n        \"E\" => 14,\n        \"F\" => 15\n    );\n    return\
    \ $hex_key[$num];\n}\nfunction candidate(...$args) {\n    return hex_key(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"AB\") !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"1077E\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ABED1A33\") !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2020\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"123456789ABCDEF0\") !== 6) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"112233445566778899AABBCCDDEEFF00\"\
    ) !== 12) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Warning:  Undefined array key \"AB\" in /tmp/tmpkwjmsrie.php on line\
    \ 37\nPHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpkwjmsrie.php:44\n\
    Stack trace:\n#0 /tmp/tmpkwjmsrie.php(52): test()\n#1 {main}\n  thrown in /tmp/tmpkwjmsrie.php\
    \ on line 44\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You have been tasked to write a function that receives \n//\
    \ a hexadecimal number as a string and counts the number of hexadecimal \n// digits\
    \ that are primes (prime number, or a prime, is a natural number \n// greater\
    \ than 1 that is not a product of two smaller natural numbers).\n// Hexadecimal\
    \ digits are 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, A, B, C, D, E, F.\n// Prime numbers\
    \ are 2, 3, 5, 7, 11, 13, 17,...\n// So you have to determine a number of the\
    \ following digits: 2, 3, 5, 7, \n// B (=decimal 11), D (=decimal 13).\n// Note:\
    \ you may assume the input is always correct or empty string, \n// and symbols\
    \ A,B,C,D,E,F are always uppercase.\n// Examples:\n// For num = \"AB\" the output\
    \ should be 1.\n// For num = \"1077E\" the output should be 2.\n// For num = \"\
    ABED1A33\" the output should be 4.\n// For num = \"123456789ABCDEF0\" the output\
    \ should be 6.\n// For num = \"2020\" the output should be 2.\nfunction hex_key($num)\
    \ {\n    $hex = [\n        '0' => 0,\n        '1' => 1,\n        '2' => 2,\n \
    \       '3' => 3,\n        '4' => 4,\n        '5' => 5,\n        '6' => 6,\n \
    \       '7' => 7,\n        '8' => 8,\n        '9' => 9,\n        'A' => 10,\n\
    \        'B' => 11,\n        'C' => 12,\n        'D' => 13,\n        'E' => 14,\n\
    \        'F' => 15\n    ];\n    $prime = [2, 3, 5, 7, 11, 13];\n    $count = 0;\n\
    \    for ($i = 0; $i < strlen($num); $i++) {\n        if (in_array($hex[$num[$i]],\
    \ $prime)) {\n            $count++;\n        }\n    }\n    return $count;\n}\n\
    echo hex_key(\"AB\") . \"<br>\";\necho hex_key(\"1077E\") . \"<br>\";\necho hex_key(\"\
    ABED1A33\") . \"<br>\";\necho hex_key(\"123456789ABCDEF0\") . \"<br>\";\necho\
    \ hex_key(\"2020\") . \"<br>\";\nfunction candidate(...$args) {\n    return hex_key(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"AB\") !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"1077E\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ABED1A33\") !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2020\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"123456789ABCDEF0\") !== 6) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"112233445566778899AABBCCDDEEFF00\"\
    ) !== 12) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: 1<br>2<br>4<br>6<br>2<br>
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You have been tasked to write a function that receives \n//\
    \ a hexadecimal number as a string and counts the number of hexadecimal \n// digits\
    \ that are primes (prime number, or a prime, is a natural number \n// greater\
    \ than 1 that is not a product of two smaller natural numbers).\n// Hexadecimal\
    \ digits are 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, A, B, C, D, E, F.\n// Prime numbers\
    \ are 2, 3, 5, 7, 11, 13, 17,...\n// So you have to determine a number of the\
    \ following digits: 2, 3, 5, 7, \n// B (=decimal 11), D (=decimal 13).\n// Note:\
    \ you may assume the input is always correct or empty string, \n// and symbols\
    \ A,B,C,D,E,F are always uppercase.\n// Examples:\n// For num = \"AB\" the output\
    \ should be 1.\n// For num = \"1077E\" the output should be 2.\n// For num = \"\
    ABED1A33\" the output should be 4.\n// For num = \"123456789ABCDEF0\" the output\
    \ should be 6.\n// For num = \"2020\" the output should be 2.\nfunction hex_key($num)\
    \ {\n    $hex_key = array(\n        \"0\" => 0,\n        \"1\" => 1,\n       \
    \ \"2\" => 2,\n        \"3\" => 3,\n        \"4\" => 4,\n        \"5\" => 5,\n\
    \        \"6\" => 6,\n        \"7\" => 7,\n        \"8\" => 8,\n        \"9\"\
    \ => 9,\n        \"A\" => 10,\n        \"B\" => 11,\n        \"C\" => 12,\n  \
    \      \"D\" => 13,\n        \"E\" => 14,\n        \"F\" => 15\n    );\n    return\
    \ $hex_key[$num];\n}\nfunction candidate(...$args) {\n    return hex_key(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"AB\") !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"1077E\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ABED1A33\") !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2020\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"123456789ABCDEF0\") !== 6) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"112233445566778899AABBCCDDEEFF00\"\
    ) !== 12) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Warning:  Undefined array key \"AB\" in /tmp/tmpjw_7bhag.php on line\
    \ 37\nPHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpjw_7bhag.php:44\n\
    Stack trace:\n#0 /tmp/tmpjw_7bhag.php(52): test()\n#1 {main}\n  thrown in /tmp/tmpjw_7bhag.php\
    \ on line 44\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You have been tasked to write a function that receives \n//\
    \ a hexadecimal number as a string and counts the number of hexadecimal \n// digits\
    \ that are primes (prime number, or a prime, is a natural number \n// greater\
    \ than 1 that is not a product of two smaller natural numbers).\n// Hexadecimal\
    \ digits are 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, A, B, C, D, E, F.\n// Prime numbers\
    \ are 2, 3, 5, 7, 11, 13, 17,...\n// So you have to determine a number of the\
    \ following digits: 2, 3, 5, 7, \n// B (=decimal 11), D (=decimal 13).\n// Note:\
    \ you may assume the input is always correct or empty string, \n// and symbols\
    \ A,B,C,D,E,F are always uppercase.\n// Examples:\n// For num = \"AB\" the output\
    \ should be 1.\n// For num = \"1077E\" the output should be 2.\n// For num = \"\
    ABED1A33\" the output should be 4.\n// For num = \"123456789ABCDEF0\" the output\
    \ should be 6.\n// For num = \"2020\" the output should be 2.\nfunction hex_key($num)\
    \ {\n    $hex = array(\n        '0' => 0,\n        '1' => 1,\n        '2' => 2,\n\
    \        '3' => 3,\n        '4' => 4,\n        '5' => 5,\n        '6' => 6,\n\
    \        '7' => 7,\n        '8' => 8,\n        '9' => 9,\n        'A' => 10,\n\
    \        'B' => 11,\n        'C' => 12,\n        'D' => 13,\n        'E' => 14,\n\
    \        'F' => 15\n    );\n    $prime = array(\n        2,\n        3,\n    \
    \    5,\n        7,\n        11,\n        13\n    );\n    $count = 0;\n    for\
    \ ($i = 0; $i < strlen($num); $i++) {\n        if (in_array($hex[$num[$i]], $prime))\
    \ {\n            $count++;\n        }\n    }\n    return $count;\n}\n\necho hex_key(\"\
    AB\") . \"<br>\";\necho hex_key(\"1077E\") . \"<br>\";\necho hex_key(\"ABED1A33\"\
    ) . \"<br>\";\necho hex_key(\"123456789ABCDEF0\") . \"<br>\";\necho hex_key(\"\
    2020\") . \"<br>\";\nfunction candidate(...$args) {\n    return hex_key(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"AB\") !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"1077E\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ABED1A33\") !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2020\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"123456789ABCDEF0\") !== 6) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"112233445566778899AABBCCDDEEFF00\"\
    ) !== 12) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: 1<br>2<br>4<br>6<br>2<br>
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You have been tasked to write a function that receives \n//\
    \ a hexadecimal number as a string and counts the number of hexadecimal \n// digits\
    \ that are primes (prime number, or a prime, is a natural number \n// greater\
    \ than 1 that is not a product of two smaller natural numbers).\n// Hexadecimal\
    \ digits are 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, A, B, C, D, E, F.\n// Prime numbers\
    \ are 2, 3, 5, 7, 11, 13, 17,...\n// So you have to determine a number of the\
    \ following digits: 2, 3, 5, 7, \n// B (=decimal 11), D (=decimal 13).\n// Note:\
    \ you may assume the input is always correct or empty string, \n// and symbols\
    \ A,B,C,D,E,F are always uppercase.\n// Examples:\n// For num = \"AB\" the output\
    \ should be 1.\n// For num = \"1077E\" the output should be 2.\n// For num = \"\
    ABED1A33\" the output should be 4.\n// For num = \"123456789ABCDEF0\" the output\
    \ should be 6.\n// For num = \"2020\" the output should be 2.\nfunction hex_key($num)\
    \ {\n    $hex = array(\n        '0' => 0,\n        '1' => 1,\n        '2' => 2,\n\
    \        '3' => 3,\n        '4' => 4,\n        '5' => 5,\n        '6' => 6,\n\
    \        '7' => 7,\n        '8' => 8,\n        '9' => 9,\n        'A' => 10,\n\
    \        'B' => 11,\n        'C' => 12,\n        'D' => 13,\n        'E' => 14,\n\
    \        'F' => 15\n    );\n    $primes = array(2, 3, 5, 7, 11, 13);\n    $count\
    \ = 0;\n    for ($i = 0; $i < strlen($num); $i++) {\n        if (in_array($hex[$num[$i]],\
    \ $primes)) {\n            $count++;\n        }\n    }\n    return $count;\n}\n\
    echo hex_key(\"AB\") . \"\\n\";\necho hex_key(\"1077E\") . \"\\n\";\necho hex_key(\"\
    ABED1A33\") . \"\\n\";\necho hex_key(\"123456789ABCDEF0\") . \"\\n\";\necho hex_key(\"\
    2020\") . \"\\n\";\nfunction candidate(...$args) {\n    return hex_key(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"AB\") !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"1077E\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ABED1A33\") !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2020\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"123456789ABCDEF0\") !== 6) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"112233445566778899AABBCCDDEEFF00\"\
    ) !== 12) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "1\n2\n4\n6\n2\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You have been tasked to write a function that receives \n//\
    \ a hexadecimal number as a string and counts the number of hexadecimal \n// digits\
    \ that are primes (prime number, or a prime, is a natural number \n// greater\
    \ than 1 that is not a product of two smaller natural numbers).\n// Hexadecimal\
    \ digits are 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, A, B, C, D, E, F.\n// Prime numbers\
    \ are 2, 3, 5, 7, 11, 13, 17,...\n// So you have to determine a number of the\
    \ following digits: 2, 3, 5, 7, \n// B (=decimal 11), D (=decimal 13).\n// Note:\
    \ you may assume the input is always correct or empty string, \n// and symbols\
    \ A,B,C,D,E,F are always uppercase.\n// Examples:\n// For num = \"AB\" the output\
    \ should be 1.\n// For num = \"1077E\" the output should be 2.\n// For num = \"\
    ABED1A33\" the output should be 4.\n// For num = \"123456789ABCDEF0\" the output\
    \ should be 6.\n// For num = \"2020\" the output should be 2.\nfunction hex_key($num)\
    \ {\n    $hex_key = array(\n        \"0\" => 0,\n        \"1\" => 1,\n       \
    \ \"2\" => 2,\n        \"3\" => 3,\n        \"4\" => 4,\n        \"5\" => 5,\n\
    \        \"6\" => 6,\n        \"7\" => 7,\n        \"8\" => 8,\n        \"9\"\
    \ => 9,\n        \"A\" => 10,\n        \"B\" => 11,\n        \"C\" => 12,\n  \
    \      \"D\" => 13,\n        \"E\" => 14,\n        \"F\" => 15\n    );\n    return\
    \ $hex_key[$num];\n}\nfunction candidate(...$args) {\n    return hex_key(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"AB\") !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"1077E\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ABED1A33\") !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2020\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"123456789ABCDEF0\") !== 6) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"112233445566778899AABBCCDDEEFF00\"\
    ) !== 12) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Warning:  Undefined array key \"AB\" in /tmp/tmps6wpprsk.php on line\
    \ 37\nPHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmps6wpprsk.php:44\n\
    Stack trace:\n#0 /tmp/tmps6wpprsk.php(52): test()\n#1 {main}\n  thrown in /tmp/tmps6wpprsk.php\
    \ on line 44\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You have been tasked to write a function that receives \n//\
    \ a hexadecimal number as a string and counts the number of hexadecimal \n// digits\
    \ that are primes (prime number, or a prime, is a natural number \n// greater\
    \ than 1 that is not a product of two smaller natural numbers).\n// Hexadecimal\
    \ digits are 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, A, B, C, D, E, F.\n// Prime numbers\
    \ are 2, 3, 5, 7, 11, 13, 17,...\n// So you have to determine a number of the\
    \ following digits: 2, 3, 5, 7, \n// B (=decimal 11), D (=decimal 13).\n// Note:\
    \ you may assume the input is always correct or empty string, \n// and symbols\
    \ A,B,C,D,E,F are always uppercase.\n// Examples:\n// For num = \"AB\" the output\
    \ should be 1.\n// For num = \"1077E\" the output should be 2.\n// For num = \"\
    ABED1A33\" the output should be 4.\n// For num = \"123456789ABCDEF0\" the output\
    \ should be 6.\n// For num = \"2020\" the output should be 2.\nfunction hex_key($num)\
    \ {\n    $hex_key = array(\n        '0' => 0,\n        '1' => 1,\n        '2'\
    \ => 2,\n        '3' => 3,\n        '4' => 4,\n        '5' => 5,\n        '6'\
    \ => 6,\n        '7' => 7,\n        '8' => 8,\n        '9' => 9,\n        'A'\
    \ => 10,\n        'B' => 11,\n        'C' => 12,\n        'D' => 13,\n       \
    \ 'E' => 14,\n        'F' => 15\n    );\n    return $hex_key[$num];\n}\nfunction\
    \ candidate(...$args) {\n    return hex_key(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"AB\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"1077E\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ABED1A33\") !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"2020\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"123456789ABCDEF0\") !== 6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"112233445566778899AABBCCDDEEFF00\") !==\
    \ 12) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Warning:  Undefined array key \"AB\" in /tmp/tmpd22cxvl3.php on line\
    \ 37\nPHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpd22cxvl3.php:44\n\
    Stack trace:\n#0 /tmp/tmpd22cxvl3.php(52): test()\n#1 {main}\n  thrown in /tmp/tmpd22cxvl3.php\
    \ on line 44\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You have been tasked to write a function that receives \n//\
    \ a hexadecimal number as a string and counts the number of hexadecimal \n// digits\
    \ that are primes (prime number, or a prime, is a natural number \n// greater\
    \ than 1 that is not a product of two smaller natural numbers).\n// Hexadecimal\
    \ digits are 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, A, B, C, D, E, F.\n// Prime numbers\
    \ are 2, 3, 5, 7, 11, 13, 17,...\n// So you have to determine a number of the\
    \ following digits: 2, 3, 5, 7, \n// B (=decimal 11), D (=decimal 13).\n// Note:\
    \ you may assume the input is always correct or empty string, \n// and symbols\
    \ A,B,C,D,E,F are always uppercase.\n// Examples:\n// For num = \"AB\" the output\
    \ should be 1.\n// For num = \"1077E\" the output should be 2.\n// For num = \"\
    ABED1A33\" the output should be 4.\n// For num = \"123456789ABCDEF0\" the output\
    \ should be 6.\n// For num = \"2020\" the output should be 2.\nfunction hex_key($num)\
    \ {\n    $hex_key = [\n        '0' => 0,\n        '1' => 1,\n        '2' => 2,\n\
    \        '3' => 3,\n        '4' => 4,\n        '5' => 5,\n        '6' => 6,\n\
    \        '7' => 7,\n        '8' => 8,\n        '9' => 9,\n        'A' => 10,\n\
    \        'B' => 11,\n        'C' => 12,\n        'D' => 13,\n        'E' => 14,\n\
    \        'F' => 15\n    ];\n    return $hex_key[$num];\n}\nfunction candidate(...$args)\
    \ {\n    return hex_key(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    AB\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1077E\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ABED1A33\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2020\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    123456789ABCDEF0\") !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"112233445566778899AABBCCDDEEFF00\") !== 12) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Warning:  Undefined array key \"AB\" in /tmp/tmpgiyes9gr.php on line\
    \ 37\nPHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpgiyes9gr.php:44\n\
    Stack trace:\n#0 /tmp/tmpgiyes9gr.php(52): test()\n#1 {main}\n  thrown in /tmp/tmpgiyes9gr.php\
    \ on line 44\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You have been tasked to write a function that receives \n//\
    \ a hexadecimal number as a string and counts the number of hexadecimal \n// digits\
    \ that are primes (prime number, or a prime, is a natural number \n// greater\
    \ than 1 that is not a product of two smaller natural numbers).\n// Hexadecimal\
    \ digits are 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, A, B, C, D, E, F.\n// Prime numbers\
    \ are 2, 3, 5, 7, 11, 13, 17,...\n// So you have to determine a number of the\
    \ following digits: 2, 3, 5, 7, \n// B (=decimal 11), D (=decimal 13).\n// Note:\
    \ you may assume the input is always correct or empty string, \n// and symbols\
    \ A,B,C,D,E,F are always uppercase.\n// Examples:\n// For num = \"AB\" the output\
    \ should be 1.\n// For num = \"1077E\" the output should be 2.\n// For num = \"\
    ABED1A33\" the output should be 4.\n// For num = \"123456789ABCDEF0\" the output\
    \ should be 6.\n// For num = \"2020\" the output should be 2.\nfunction hex_key($num)\
    \ {\n    $hex_key = [\n        '0' => 0,\n        '1' => 1,\n        '2' => 2,\n\
    \        '3' => 3,\n        '4' => 4,\n        '5' => 5,\n        '6' => 6,\n\
    \        '7' => 7,\n        '8' => 8,\n        '9' => 9,\n        'A' => 10,\n\
    \        'B' => 11,\n        'C' => 12,\n        'D' => 13,\n        'E' => 14,\n\
    \        'F' => 15\n    ];\n    return $hex_key[$num];\n}\nfunction candidate(...$args)\
    \ {\n    return hex_key(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    AB\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1077E\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ABED1A33\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2020\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    123456789ABCDEF0\") !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"112233445566778899AABBCCDDEEFF00\") !== 12) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Warning:  Undefined array key \"AB\" in /tmp/tmpr1aia8na.php on line\
    \ 37\nPHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpr1aia8na.php:44\n\
    Stack trace:\n#0 /tmp/tmpr1aia8na.php(52): test()\n#1 {main}\n  thrown in /tmp/tmpr1aia8na.php\
    \ on line 44\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You have been tasked to write a function that receives \n//\
    \ a hexadecimal number as a string and counts the number of hexadecimal \n// digits\
    \ that are primes (prime number, or a prime, is a natural number \n// greater\
    \ than 1 that is not a product of two smaller natural numbers).\n// Hexadecimal\
    \ digits are 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, A, B, C, D, E, F.\n// Prime numbers\
    \ are 2, 3, 5, 7, 11, 13, 17,...\n// So you have to determine a number of the\
    \ following digits: 2, 3, 5, 7, \n// B (=decimal 11), D (=decimal 13).\n// Note:\
    \ you may assume the input is always correct or empty string, \n// and symbols\
    \ A,B,C,D,E,F are always uppercase.\n// Examples:\n// For num = \"AB\" the output\
    \ should be 1.\n// For num = \"1077E\" the output should be 2.\n// For num = \"\
    ABED1A33\" the output should be 4.\n// For num = \"123456789ABCDEF0\" the output\
    \ should be 6.\n// For num = \"2020\" the output should be 2.\nfunction hex_key($num)\
    \ {\n    $hex_key = [\n        '0' => 0,\n        '1' => 1,\n        '2' => 2,\n\
    \        '3' => 3,\n        '4' => 4,\n        '5' => 5,\n        '6' => 6,\n\
    \        '7' => 7,\n        '8' => 8,\n        '9' => 9,\n        'A' => 10,\n\
    \        'B' => 11,\n        'C' => 12,\n        'D' => 13,\n        'E' => 14,\n\
    \        'F' => 15\n    ];\n    return $hex_key[$num];\n}\nfunction candidate(...$args)\
    \ {\n    return hex_key(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    AB\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1077E\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ABED1A33\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2020\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    123456789ABCDEF0\") !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"112233445566778899AABBCCDDEEFF00\") !== 12) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Warning:  Undefined array key \"AB\" in /tmp/tmpovtg4761.php on line\
    \ 37\nPHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpovtg4761.php:44\n\
    Stack trace:\n#0 /tmp/tmpovtg4761.php(52): test()\n#1 {main}\n  thrown in /tmp/tmpovtg4761.php\
    \ on line 44\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You have been tasked to write a function that receives \n//\
    \ a hexadecimal number as a string and counts the number of hexadecimal \n// digits\
    \ that are primes (prime number, or a prime, is a natural number \n// greater\
    \ than 1 that is not a product of two smaller natural numbers).\n// Hexadecimal\
    \ digits are 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, A, B, C, D, E, F.\n// Prime numbers\
    \ are 2, 3, 5, 7, 11, 13, 17,...\n// So you have to determine a number of the\
    \ following digits: 2, 3, 5, 7, \n// B (=decimal 11), D (=decimal 13).\n// Note:\
    \ you may assume the input is always correct or empty string, \n// and symbols\
    \ A,B,C,D,E,F are always uppercase.\n// Examples:\n// For num = \"AB\" the output\
    \ should be 1.\n// For num = \"1077E\" the output should be 2.\n// For num = \"\
    ABED1A33\" the output should be 4.\n// For num = \"123456789ABCDEF0\" the output\
    \ should be 6.\n// For num = \"2020\" the output should be 2.\nfunction hex_key($num)\
    \ {\n    $hex = array(\n        '0' => 0,\n        '1' => 1,\n        '2' => 2,\n\
    \        '3' => 3,\n        '4' => 4,\n        '5' => 5,\n        '6' => 6,\n\
    \        '7' => 7,\n        '8' => 8,\n        '9' => 9,\n        'A' => 10,\n\
    \        'B' => 11,\n        'C' => 12,\n        'D' => 13,\n        'E' => 14,\n\
    \        'F' => 15\n    );\n    $prime = array(2, 3, 5, 7, 11, 13);\n    $count\
    \ = 0;\n    for ($i = 0; $i < strlen($num); $i++) {\n        if (in_array($hex[$num[$i]],\
    \ $prime)) {\n            $count++;\n        }\n    }\n    return $count;\n}\n\
    echo hex_key(\"AB\");\necho \"<br>\";\necho hex_key(\"1077E\");\necho \"<br>\"\
    ;\necho hex_key(\"ABED1A33\");\necho \"<br>\";\necho hex_key(\"123456789ABCDEF0\"\
    );\necho \"<br>\";\necho hex_key(\"2020\");\nfunction candidate(...$args) {\n\
    \    return hex_key(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    AB\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1077E\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ABED1A33\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2020\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    123456789ABCDEF0\") !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"112233445566778899AABBCCDDEEFF00\") !== 12) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: 1<br>2<br>4<br>6<br>2
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You have been tasked to write a function that receives \n//\
    \ a hexadecimal number as a string and counts the number of hexadecimal \n// digits\
    \ that are primes (prime number, or a prime, is a natural number \n// greater\
    \ than 1 that is not a product of two smaller natural numbers).\n// Hexadecimal\
    \ digits are 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, A, B, C, D, E, F.\n// Prime numbers\
    \ are 2, 3, 5, 7, 11, 13, 17,...\n// So you have to determine a number of the\
    \ following digits: 2, 3, 5, 7, \n// B (=decimal 11), D (=decimal 13).\n// Note:\
    \ you may assume the input is always correct or empty string, \n// and symbols\
    \ A,B,C,D,E,F are always uppercase.\n// Examples:\n// For num = \"AB\" the output\
    \ should be 1.\n// For num = \"1077E\" the output should be 2.\n// For num = \"\
    ABED1A33\" the output should be 4.\n// For num = \"123456789ABCDEF0\" the output\
    \ should be 6.\n// For num = \"2020\" the output should be 2.\nfunction hex_key($num)\
    \ {\n    $hex_key = array(\n        '0' => 0,\n        '1' => 1,\n        '2'\
    \ => 2,\n        '3' => 3,\n        '4' => 4,\n        '5' => 5,\n        '6'\
    \ => 6,\n        '7' => 7,\n        '8' => 8,\n        '9' => 9,\n        'A'\
    \ => 10,\n        'B' => 11,\n        'C' => 12,\n        'D' => 13,\n       \
    \ 'E' => 14,\n        'F' => 15\n    );\n    return $hex_key[$num];\n}\nfunction\
    \ candidate(...$args) {\n    return hex_key(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"AB\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"1077E\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ABED1A33\") !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"2020\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"123456789ABCDEF0\") !== 6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"112233445566778899AABBCCDDEEFF00\") !==\
    \ 12) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Warning:  Undefined array key \"AB\" in /tmp/tmph0zv97tf.php on line\
    \ 37\nPHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmph0zv97tf.php:44\n\
    Stack trace:\n#0 /tmp/tmph0zv97tf.php(52): test()\n#1 {main}\n  thrown in /tmp/tmph0zv97tf.php\
    \ on line 44\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You have been tasked to write a function that receives \n//\
    \ a hexadecimal number as a string and counts the number of hexadecimal \n// digits\
    \ that are primes (prime number, or a prime, is a natural number \n// greater\
    \ than 1 that is not a product of two smaller natural numbers).\n// Hexadecimal\
    \ digits are 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, A, B, C, D, E, F.\n// Prime numbers\
    \ are 2, 3, 5, 7, 11, 13, 17,...\n// So you have to determine a number of the\
    \ following digits: 2, 3, 5, 7, \n// B (=decimal 11), D (=decimal 13).\n// Note:\
    \ you may assume the input is always correct or empty string, \n// and symbols\
    \ A,B,C,D,E,F are always uppercase.\n// Examples:\n// For num = \"AB\" the output\
    \ should be 1.\n// For num = \"1077E\" the output should be 2.\n// For num = \"\
    ABED1A33\" the output should be 4.\n// For num = \"123456789ABCDEF0\" the output\
    \ should be 6.\n// For num = \"2020\" the output should be 2.\nfunction hex_key($num)\
    \ {\n    $hex = [\n        '0' => 0,\n        '1' => 1,\n        '2' => 2,\n \
    \       '3' => 3,\n        '4' => 4,\n        '5' => 5,\n        '6' => 6,\n \
    \       '7' => 7,\n        '8' => 8,\n        '9' => 9,\n        'A' => 10,\n\
    \        'B' => 11,\n        'C' => 12,\n        'D' => 13,\n        'E' => 14,\n\
    \        'F' => 15\n    ];\n    $prime = [2, 3, 5, 7, 11, 13];\n    $count = 0;\n\
    \    for ($i = 0; $i < strlen($num); $i++) {\n        if (in_array($hex[$num[$i]],\
    \ $prime)) {\n            $count++;\n        }\n    }\n    return $count;\n}\n\
    echo hex_key(\"AB\") . \"<br>\";\necho hex_key(\"1077E\") . \"<br>\";\necho hex_key(\"\
    ABED1A33\") . \"<br>\";\necho hex_key(\"123456789ABCDEF0\") . \"<br>\";\necho\
    \ hex_key(\"2020\") . \"<br>\";\nfunction candidate(...$args) {\n    return hex_key(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"AB\") !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"1077E\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ABED1A33\") !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2020\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"123456789ABCDEF0\") !== 6) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"112233445566778899AABBCCDDEEFF00\"\
    ) !== 12) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: 1<br>2<br>4<br>6<br>2<br>
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You have been tasked to write a function that receives \n//\
    \ a hexadecimal number as a string and counts the number of hexadecimal \n// digits\
    \ that are primes (prime number, or a prime, is a natural number \n// greater\
    \ than 1 that is not a product of two smaller natural numbers).\n// Hexadecimal\
    \ digits are 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, A, B, C, D, E, F.\n// Prime numbers\
    \ are 2, 3, 5, 7, 11, 13, 17,...\n// So you have to determine a number of the\
    \ following digits: 2, 3, 5, 7, \n// B (=decimal 11), D (=decimal 13).\n// Note:\
    \ you may assume the input is always correct or empty string, \n// and symbols\
    \ A,B,C,D,E,F are always uppercase.\n// Examples:\n// For num = \"AB\" the output\
    \ should be 1.\n// For num = \"1077E\" the output should be 2.\n// For num = \"\
    ABED1A33\" the output should be 4.\n// For num = \"123456789ABCDEF0\" the output\
    \ should be 6.\n// For num = \"2020\" the output should be 2.\nfunction hex_key($num)\
    \ {\n    $hex_key = [\n        '0' => 0,\n        '1' => 1,\n        '2' => 2,\n\
    \        '3' => 3,\n        '4' => 4,\n        '5' => 5,\n        '6' => 6,\n\
    \        '7' => 7,\n        '8' => 8,\n        '9' => 9,\n        'A' => 10,\n\
    \        'B' => 11,\n        'C' => 12,\n        'D' => 13,\n        'E' => 14,\n\
    \        'F' => 15\n    ];\n    return $hex_key[$num];\n}\nfunction candidate(...$args)\
    \ {\n    return hex_key(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    AB\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1077E\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ABED1A33\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2020\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    123456789ABCDEF0\") !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"112233445566778899AABBCCDDEEFF00\") !== 12) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Warning:  Undefined array key \"AB\" in /tmp/tmpuhupvsh7.php on line\
    \ 37\nPHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpuhupvsh7.php:44\n\
    Stack trace:\n#0 /tmp/tmpuhupvsh7.php(52): test()\n#1 {main}\n  thrown in /tmp/tmpuhupvsh7.php\
    \ on line 44\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You have been tasked to write a function that receives \n//\
    \ a hexadecimal number as a string and counts the number of hexadecimal \n// digits\
    \ that are primes (prime number, or a prime, is a natural number \n// greater\
    \ than 1 that is not a product of two smaller natural numbers).\n// Hexadecimal\
    \ digits are 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, A, B, C, D, E, F.\n// Prime numbers\
    \ are 2, 3, 5, 7, 11, 13, 17,...\n// So you have to determine a number of the\
    \ following digits: 2, 3, 5, 7, \n// B (=decimal 11), D (=decimal 13).\n// Note:\
    \ you may assume the input is always correct or empty string, \n// and symbols\
    \ A,B,C,D,E,F are always uppercase.\n// Examples:\n// For num = \"AB\" the output\
    \ should be 1.\n// For num = \"1077E\" the output should be 2.\n// For num = \"\
    ABED1A33\" the output should be 4.\n// For num = \"123456789ABCDEF0\" the output\
    \ should be 6.\n// For num = \"2020\" the output should be 2.\nfunction hex_key($num)\
    \ {\n    $hex_key = array(\n        '0' => 0,\n        '1' => 1,\n        '2'\
    \ => 2,\n        '3' => 3,\n        '4' => 4,\n        '5' => 5,\n        '6'\
    \ => 6,\n        '7' => 7,\n        '8' => 8,\n        '9' => 9,\n        'A'\
    \ => 10,\n        'B' => 11,\n        'C' => 12,\n        'D' => 13,\n       \
    \ 'E' => 14,\n        'F' => 15\n    );\n    return $hex_key[$num];\n}\nfunction\
    \ candidate(...$args) {\n    return hex_key(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"AB\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"1077E\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ABED1A33\") !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"2020\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"123456789ABCDEF0\") !== 6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"112233445566778899AABBCCDDEEFF00\") !==\
    \ 12) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Warning:  Undefined array key \"AB\" in /tmp/tmp08n4uof5.php on line\
    \ 37\nPHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp08n4uof5.php:44\n\
    Stack trace:\n#0 /tmp/tmp08n4uof5.php(52): test()\n#1 {main}\n  thrown in /tmp/tmp08n4uof5.php\
    \ on line 44\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You have been tasked to write a function that receives \n//\
    \ a hexadecimal number as a string and counts the number of hexadecimal \n// digits\
    \ that are primes (prime number, or a prime, is a natural number \n// greater\
    \ than 1 that is not a product of two smaller natural numbers).\n// Hexadecimal\
    \ digits are 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, A, B, C, D, E, F.\n// Prime numbers\
    \ are 2, 3, 5, 7, 11, 13, 17,...\n// So you have to determine a number of the\
    \ following digits: 2, 3, 5, 7, \n// B (=decimal 11), D (=decimal 13).\n// Note:\
    \ you may assume the input is always correct or empty string, \n// and symbols\
    \ A,B,C,D,E,F are always uppercase.\n// Examples:\n// For num = \"AB\" the output\
    \ should be 1.\n// For num = \"1077E\" the output should be 2.\n// For num = \"\
    ABED1A33\" the output should be 4.\n// For num = \"123456789ABCDEF0\" the output\
    \ should be 6.\n// For num = \"2020\" the output should be 2.\nfunction hex_key($num)\
    \ {\n    $hex_key = array(\n        \"0\" => 0,\n        \"1\" => 1,\n       \
    \ \"2\" => 2,\n        \"3\" => 3,\n        \"4\" => 4,\n        \"5\" => 5,\n\
    \        \"6\" => 6,\n        \"7\" => 7,\n        \"8\" => 8,\n        \"9\"\
    \ => 9,\n        \"A\" => 10,\n        \"B\" => 11,\n        \"C\" => 12,\n  \
    \      \"D\" => 13,\n        \"E\" => 14,\n        \"F\" => 15\n    );\n    return\
    \ $hex_key[$num];\n}\nfunction candidate(...$args) {\n    return hex_key(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"AB\") !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"1077E\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ABED1A33\") !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2020\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"123456789ABCDEF0\") !== 6) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"112233445566778899AABBCCDDEEFF00\"\
    ) !== 12) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Warning:  Undefined array key \"AB\" in /tmp/tmp7gc4hb95.php on line\
    \ 37\nPHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp7gc4hb95.php:44\n\
    Stack trace:\n#0 /tmp/tmp7gc4hb95.php(52): test()\n#1 {main}\n  thrown in /tmp/tmp7gc4hb95.php\
    \ on line 44\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You have been tasked to write a function that receives \n//\
    \ a hexadecimal number as a string and counts the number of hexadecimal \n// digits\
    \ that are primes (prime number, or a prime, is a natural number \n// greater\
    \ than 1 that is not a product of two smaller natural numbers).\n// Hexadecimal\
    \ digits are 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, A, B, C, D, E, F.\n// Prime numbers\
    \ are 2, 3, 5, 7, 11, 13, 17,...\n// So you have to determine a number of the\
    \ following digits: 2, 3, 5, 7, \n// B (=decimal 11), D (=decimal 13).\n// Note:\
    \ you may assume the input is always correct or empty string, \n// and symbols\
    \ A,B,C,D,E,F are always uppercase.\n// Examples:\n// For num = \"AB\" the output\
    \ should be 1.\n// For num = \"1077E\" the output should be 2.\n// For num = \"\
    ABED1A33\" the output should be 4.\n// For num = \"123456789ABCDEF0\" the output\
    \ should be 6.\n// For num = \"2020\" the output should be 2.\nfunction hex_key($num)\
    \ {\n    $hex = [\n        '0' => 0,\n        '1' => 1,\n        '2' => 2,\n \
    \       '3' => 3,\n        '4' => 4,\n        '5' => 5,\n        '6' => 6,\n \
    \       '7' => 7,\n        '8' => 8,\n        '9' => 9,\n        'A' => 10,\n\
    \        'B' => 11,\n        'C' => 12,\n        'D' => 13,\n        'E' => 14,\n\
    \        'F' => 15\n    ];\n    $primes = [2, 3, 5, 7, 11, 13];\n    $count =\
    \ 0;\n    for ($i = 0; $i < strlen($num); $i++) {\n        if (in_array($hex[$num[$i]],\
    \ $primes)) {\n            $count++;\n        }\n    }\n    return $count;\n}\n\
    function candidate(...$args) {\n    return hex_key(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"AB\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"1077E\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ABED1A33\") !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"2020\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"123456789ABCDEF0\") !== 6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"112233445566778899AABBCCDDEEFF00\") !==\
    \ 12) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You have been tasked to write a function that receives \n//\
    \ a hexadecimal number as a string and counts the number of hexadecimal \n// digits\
    \ that are primes (prime number, or a prime, is a natural number \n// greater\
    \ than 1 that is not a product of two smaller natural numbers).\n// Hexadecimal\
    \ digits are 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, A, B, C, D, E, F.\n// Prime numbers\
    \ are 2, 3, 5, 7, 11, 13, 17,...\n// So you have to determine a number of the\
    \ following digits: 2, 3, 5, 7, \n// B (=decimal 11), D (=decimal 13).\n// Note:\
    \ you may assume the input is always correct or empty string, \n// and symbols\
    \ A,B,C,D,E,F are always uppercase.\n// Examples:\n// For num = \"AB\" the output\
    \ should be 1.\n// For num = \"1077E\" the output should be 2.\n// For num = \"\
    ABED1A33\" the output should be 4.\n// For num = \"123456789ABCDEF0\" the output\
    \ should be 6.\n// For num = \"2020\" the output should be 2.\nfunction hex_key($num)\
    \ {\n    $hex = ['A' => 10, 'B' => 11, 'C' => 12, 'D' => 13, 'E' => 14, 'F' =>\
    \ 15];\n    $hex_key = array_keys($hex);\n    return $hex_key;\n}\nfunction candidate(...$args)\
    \ {\n    return hex_key(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    AB\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1077E\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ABED1A33\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2020\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    123456789ABCDEF0\") !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"112233445566778899AABBCCDDEEFF00\") !== 12) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpy2w0_agf.php:28\n\
    Stack trace:\n#0 /tmp/tmpy2w0_agf.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpy2w0_agf.php\
    \ on line 28\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You have been tasked to write a function that receives \n//\
    \ a hexadecimal number as a string and counts the number of hexadecimal \n// digits\
    \ that are primes (prime number, or a prime, is a natural number \n// greater\
    \ than 1 that is not a product of two smaller natural numbers).\n// Hexadecimal\
    \ digits are 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, A, B, C, D, E, F.\n// Prime numbers\
    \ are 2, 3, 5, 7, 11, 13, 17,...\n// So you have to determine a number of the\
    \ following digits: 2, 3, 5, 7, \n// B (=decimal 11), D (=decimal 13).\n// Note:\
    \ you may assume the input is always correct or empty string, \n// and symbols\
    \ A,B,C,D,E,F are always uppercase.\n// Examples:\n// For num = \"AB\" the output\
    \ should be 1.\n// For num = \"1077E\" the output should be 2.\n// For num = \"\
    ABED1A33\" the output should be 4.\n// For num = \"123456789ABCDEF0\" the output\
    \ should be 6.\n// For num = \"2020\" the output should be 2.\nfunction hex_key($num)\
    \ {\n    $hex_key = [\n        '0' => 0,\n        '1' => 1,\n        '2' => 2,\n\
    \        '3' => 3,\n        '4' => 4,\n        '5' => 5,\n        '6' => 6,\n\
    \        '7' => 7,\n        '8' => 8,\n        '9' => 9,\n        'A' => 10,\n\
    \        'B' => 11,\n        'C' => 12,\n        'D' => 13,\n        'E' => 14,\n\
    \        'F' => 15\n    ];\n    return $hex_key[$num];\n}\nfunction candidate(...$args)\
    \ {\n    return hex_key(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    AB\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1077E\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ABED1A33\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2020\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    123456789ABCDEF0\") !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"112233445566778899AABBCCDDEEFF00\") !== 12) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Warning:  Undefined array key \"AB\" in /tmp/tmp24trcrin.php on line\
    \ 37\nPHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp24trcrin.php:44\n\
    Stack trace:\n#0 /tmp/tmp24trcrin.php(52): test()\n#1 {main}\n  thrown in /tmp/tmp24trcrin.php\
    \ on line 44\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You have been tasked to write a function that receives \n//\
    \ a hexadecimal number as a string and counts the number of hexadecimal \n// digits\
    \ that are primes (prime number, or a prime, is a natural number \n// greater\
    \ than 1 that is not a product of two smaller natural numbers).\n// Hexadecimal\
    \ digits are 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, A, B, C, D, E, F.\n// Prime numbers\
    \ are 2, 3, 5, 7, 11, 13, 17,...\n// So you have to determine a number of the\
    \ following digits: 2, 3, 5, 7, \n// B (=decimal 11), D (=decimal 13).\n// Note:\
    \ you may assume the input is always correct or empty string, \n// and symbols\
    \ A,B,C,D,E,F are always uppercase.\n// Examples:\n// For num = \"AB\" the output\
    \ should be 1.\n// For num = \"1077E\" the output should be 2.\n// For num = \"\
    ABED1A33\" the output should be 4.\n// For num = \"123456789ABCDEF0\" the output\
    \ should be 6.\n// For num = \"2020\" the output should be 2.\nfunction hex_key($num)\
    \ {\n    $hex = ['0','1','2','3','4','5','6','7','8','9','A','B','C','D','E','F'];\n\
    \    $primes = [2,3,5,7,11,13];\n    $count = 0;\n    for ($i=0; $i < strlen($num);\
    \ $i++) { \n        if (in_array($num[$i], $hex)) {\n            if (in_array($num[$i],\
    \ $primes)) {\n                $count++;\n            }\n        }\n    }\n  \
    \  return $count;\n}\necho hex_key(\"AB\").\"\\n\";\necho hex_key(\"1077E\").\"\
    \\n\";\necho hex_key(\"ABED1A33\").\"\\n\";\necho hex_key(\"123456789ABCDEF0\"\
    ).\"\\n\";\necho hex_key(\"2020\").\"\\n\";\nfunction candidate(...$args) {\n\
    \    return hex_key(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    AB\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1077E\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ABED1A33\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2020\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    123456789ABCDEF0\") !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"112233445566778899AABBCCDDEEFF00\") !== 12) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "0\n2\n2\n4\n2\n"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmplgh6f2ry.php:41\n\
    Stack trace:\n#0 /tmp/tmplgh6f2ry.php(49): test()\n#1 {main}\n  thrown in /tmp/tmplgh6f2ry.php\
    \ on line 41\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You have been tasked to write a function that receives \n//\
    \ a hexadecimal number as a string and counts the number of hexadecimal \n// digits\
    \ that are primes (prime number, or a prime, is a natural number \n// greater\
    \ than 1 that is not a product of two smaller natural numbers).\n// Hexadecimal\
    \ digits are 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, A, B, C, D, E, F.\n// Prime numbers\
    \ are 2, 3, 5, 7, 11, 13, 17,...\n// So you have to determine a number of the\
    \ following digits: 2, 3, 5, 7, \n// B (=decimal 11), D (=decimal 13).\n// Note:\
    \ you may assume the input is always correct or empty string, \n// and symbols\
    \ A,B,C,D,E,F are always uppercase.\n// Examples:\n// For num = \"AB\" the output\
    \ should be 1.\n// For num = \"1077E\" the output should be 2.\n// For num = \"\
    ABED1A33\" the output should be 4.\n// For num = \"123456789ABCDEF0\" the output\
    \ should be 6.\n// For num = \"2020\" the output should be 2.\nfunction hex_key($num)\
    \ {\n    $hex_key = array(\n        '0' => 0,\n        '1' => 1,\n        '2'\
    \ => 2,\n        '3' => 3,\n        '4' => 4,\n        '5' => 5,\n        '6'\
    \ => 6,\n        '7' => 7,\n        '8' => 8,\n        '9' => 9,\n        'A'\
    \ => 10,\n        'B' => 11,\n        'C' => 12,\n        'D' => 13,\n       \
    \ 'E' => 14,\n        'F' => 15\n    );\n    return $hex_key[$num];\n}\nfunction\
    \ candidate(...$args) {\n    return hex_key(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"AB\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"1077E\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ABED1A33\") !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"2020\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"123456789ABCDEF0\") !== 6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"112233445566778899AABBCCDDEEFF00\") !==\
    \ 12) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Warning:  Undefined array key \"AB\" in /tmp/tmp3c0gd5zo.php on line\
    \ 37\nPHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp3c0gd5zo.php:44\n\
    Stack trace:\n#0 /tmp/tmp3c0gd5zo.php(52): test()\n#1 {main}\n  thrown in /tmp/tmp3c0gd5zo.php\
    \ on line 44\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You have been tasked to write a function that receives \n//\
    \ a hexadecimal number as a string and counts the number of hexadecimal \n// digits\
    \ that are primes (prime number, or a prime, is a natural number \n// greater\
    \ than 1 that is not a product of two smaller natural numbers).\n// Hexadecimal\
    \ digits are 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, A, B, C, D, E, F.\n// Prime numbers\
    \ are 2, 3, 5, 7, 11, 13, 17,...\n// So you have to determine a number of the\
    \ following digits: 2, 3, 5, 7, \n// B (=decimal 11), D (=decimal 13).\n// Note:\
    \ you may assume the input is always correct or empty string, \n// and symbols\
    \ A,B,C,D,E,F are always uppercase.\n// Examples:\n// For num = \"AB\" the output\
    \ should be 1.\n// For num = \"1077E\" the output should be 2.\n// For num = \"\
    ABED1A33\" the output should be 4.\n// For num = \"123456789ABCDEF0\" the output\
    \ should be 6.\n// For num = \"2020\" the output should be 2.\nfunction hex_key($num)\
    \ {\n    $hex = array(\n        \"0\" => 0,\n        \"1\" => 1,\n        \"2\"\
    \ => 2,\n        \"3\" => 3,\n        \"4\" => 4,\n        \"5\" => 5,\n     \
    \   \"6\" => 6,\n        \"7\" => 7,\n        \"8\" => 8,\n        \"9\" => 9,\n\
    \        \"A\" => 10,\n        \"B\" => 11,\n        \"C\" => 12,\n        \"\
    D\" => 13,\n        \"E\" => 14,\n        \"F\" => 15\n    );\n    $prime = array(2,\
    \ 3, 5, 7, 11, 13);\n    $count = 0;\n    for ($i = 0; $i < strlen($num); $i++)\
    \ {\n        if (in_array($hex[$num[$i]], $prime)) {\n            $count++;\n\
    \        }\n    }\n    return $count;\n}\necho hex_key(\"AB\") . \"<br>\";\necho\
    \ hex_key(\"1077E\") . \"<br>\";\necho hex_key(\"ABED1A33\") . \"<br>\";\necho\
    \ hex_key(\"123456789ABCDEF0\") . \"<br>\";\necho hex_key(\"2020\") . \"<br>\"\
    ;\nfunction candidate(...$args) {\n    return hex_key(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"AB\") !== 1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"1077E\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ABED1A33\") !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2020\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"123456789ABCDEF0\") !== 6) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"112233445566778899AABBCCDDEEFF00\"\
    ) !== 12) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: 1<br>2<br>4<br>6<br>2<br>
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You have been tasked to write a function that receives \n//\
    \ a hexadecimal number as a string and counts the number of hexadecimal \n// digits\
    \ that are primes (prime number, or a prime, is a natural number \n// greater\
    \ than 1 that is not a product of two smaller natural numbers).\n// Hexadecimal\
    \ digits are 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, A, B, C, D, E, F.\n// Prime numbers\
    \ are 2, 3, 5, 7, 11, 13, 17,...\n// So you have to determine a number of the\
    \ following digits: 2, 3, 5, 7, \n// B (=decimal 11), D (=decimal 13).\n// Note:\
    \ you may assume the input is always correct or empty string, \n// and symbols\
    \ A,B,C,D,E,F are always uppercase.\n// Examples:\n// For num = \"AB\" the output\
    \ should be 1.\n// For num = \"1077E\" the output should be 2.\n// For num = \"\
    ABED1A33\" the output should be 4.\n// For num = \"123456789ABCDEF0\" the output\
    \ should be 6.\n// For num = \"2020\" the output should be 2.\nfunction hex_key($num)\
    \ {\n    $hex_key = array(\n        \"0\" => 0,\n        \"1\" => 1,\n       \
    \ \"2\" => 2,\n        \"3\" => 3,\n        \"4\" => 4,\n        \"5\" => 5,\n\
    \        \"6\" => 6,\n        \"7\" => 7,\n        \"8\" => 8,\n        \"9\"\
    \ => 9,\n        \"A\" => 10,\n        \"B\" => 11,\n        \"C\" => 12,\n  \
    \      \"D\" => 13,\n        \"E\" => 14,\n        \"F\" => 15\n    );\n    return\
    \ $hex_key[$num];\n}\nfunction candidate(...$args) {\n    return hex_key(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"AB\") !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"1077E\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ABED1A33\") !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2020\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"123456789ABCDEF0\") !== 6) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"112233445566778899AABBCCDDEEFF00\"\
    ) !== 12) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Warning:  Undefined array key \"AB\" in /tmp/tmpb46ycavk.php on line\
    \ 37\nPHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpb46ycavk.php:44\n\
    Stack trace:\n#0 /tmp/tmpb46ycavk.php(52): test()\n#1 {main}\n  thrown in /tmp/tmpb46ycavk.php\
    \ on line 44\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You have been tasked to write a function that receives \n//\
    \ a hexadecimal number as a string and counts the number of hexadecimal \n// digits\
    \ that are primes (prime number, or a prime, is a natural number \n// greater\
    \ than 1 that is not a product of two smaller natural numbers).\n// Hexadecimal\
    \ digits are 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, A, B, C, D, E, F.\n// Prime numbers\
    \ are 2, 3, 5, 7, 11, 13, 17,...\n// So you have to determine a number of the\
    \ following digits: 2, 3, 5, 7, \n// B (=decimal 11), D (=decimal 13).\n// Note:\
    \ you may assume the input is always correct or empty string, \n// and symbols\
    \ A,B,C,D,E,F are always uppercase.\n// Examples:\n// For num = \"AB\" the output\
    \ should be 1.\n// For num = \"1077E\" the output should be 2.\n// For num = \"\
    ABED1A33\" the output should be 4.\n// For num = \"123456789ABCDEF0\" the output\
    \ should be 6.\n// For num = \"2020\" the output should be 2.\nfunction hex_key($num)\
    \ {\n    $hex_key = array(\n        '0' => 0,\n        '1' => 1,\n        '2'\
    \ => 2,\n        '3' => 3,\n        '4' => 4,\n        '5' => 5,\n        '6'\
    \ => 6,\n        '7' => 7,\n        '8' => 8,\n        '9' => 9,\n        'A'\
    \ => 10,\n        'B' => 11,\n        'C' => 12,\n        'D' => 13,\n       \
    \ 'E' => 14,\n        'F' => 15\n    );\n    return $hex_key[$num];\n}\nfunction\
    \ candidate(...$args) {\n    return hex_key(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"AB\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"1077E\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ABED1A33\") !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"2020\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"123456789ABCDEF0\") !== 6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"112233445566778899AABBCCDDEEFF00\") !==\
    \ 12) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Warning:  Undefined array key \"AB\" in /tmp/tmpinmm0e5y.php on line\
    \ 37\nPHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpinmm0e5y.php:44\n\
    Stack trace:\n#0 /tmp/tmpinmm0e5y.php(52): test()\n#1 {main}\n  thrown in /tmp/tmpinmm0e5y.php\
    \ on line 44\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You have been tasked to write a function that receives \n//\
    \ a hexadecimal number as a string and counts the number of hexadecimal \n// digits\
    \ that are primes (prime number, or a prime, is a natural number \n// greater\
    \ than 1 that is not a product of two smaller natural numbers).\n// Hexadecimal\
    \ digits are 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, A, B, C, D, E, F.\n// Prime numbers\
    \ are 2, 3, 5, 7, 11, 13, 17,...\n// So you have to determine a number of the\
    \ following digits: 2, 3, 5, 7, \n// B (=decimal 11), D (=decimal 13).\n// Note:\
    \ you may assume the input is always correct or empty string, \n// and symbols\
    \ A,B,C,D,E,F are always uppercase.\n// Examples:\n// For num = \"AB\" the output\
    \ should be 1.\n// For num = \"1077E\" the output should be 2.\n// For num = \"\
    ABED1A33\" the output should be 4.\n// For num = \"123456789ABCDEF0\" the output\
    \ should be 6.\n// For num = \"2020\" the output should be 2.\nfunction hex_key($num)\
    \ {\n    $hex = array(\n        \"0\" => 0,\n        \"1\" => 1,\n        \"2\"\
    \ => 2,\n        \"3\" => 3,\n        \"4\" => 4,\n        \"5\" => 5,\n     \
    \   \"6\" => 6,\n        \"7\" => 7,\n        \"8\" => 8,\n        \"9\" => 9,\n\
    \        \"A\" => 10,\n        \"B\" => 11,\n        \"C\" => 12,\n        \"\
    D\" => 13,\n        \"E\" => 14,\n        \"F\" => 15\n    );\n    $prime = array(\n\
    \        \"2\" => 2,\n        \"3\" => 3,\n        \"5\" => 5,\n        \"7\"\
    \ => 7,\n        \"B\" => 11,\n        \"D\" => 13\n    );\n    $count = 0;\n\
    \    for ($i = 0; $i < strlen($num); $i++) {\n        if (array_key_exists($num[$i],\
    \ $prime)) {\n            $count++;\n        }\n    }\n    return $count;\n}\n\
    echo hex_key(\"AB\") . \"<br>\";\necho hex_key(\"1077E\") . \"<br>\";\necho hex_key(\"\
    ABED1A33\") . \"<br>\";\necho hex_key(\"123456789ABCDEF0\") . \"<br>\";\necho\
    \ hex_key(\"2020\") . \"<br>\";\nfunction candidate(...$args) {\n    return hex_key(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"AB\") !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"1077E\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ABED1A33\") !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2020\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"123456789ABCDEF0\") !== 6) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"112233445566778899AABBCCDDEEFF00\"\
    ) !== 12) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: 1<br>2<br>4<br>6<br>2<br>
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You have been tasked to write a function that receives \n//\
    \ a hexadecimal number as a string and counts the number of hexadecimal \n// digits\
    \ that are primes (prime number, or a prime, is a natural number \n// greater\
    \ than 1 that is not a product of two smaller natural numbers).\n// Hexadecimal\
    \ digits are 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, A, B, C, D, E, F.\n// Prime numbers\
    \ are 2, 3, 5, 7, 11, 13, 17,...\n// So you have to determine a number of the\
    \ following digits: 2, 3, 5, 7, \n// B (=decimal 11), D (=decimal 13).\n// Note:\
    \ you may assume the input is always correct or empty string, \n// and symbols\
    \ A,B,C,D,E,F are always uppercase.\n// Examples:\n// For num = \"AB\" the output\
    \ should be 1.\n// For num = \"1077E\" the output should be 2.\n// For num = \"\
    ABED1A33\" the output should be 4.\n// For num = \"123456789ABCDEF0\" the output\
    \ should be 6.\n// For num = \"2020\" the output should be 2.\nfunction hex_key($num)\
    \ {\n    $hex_key = array(\n        \"0\" => 0,\n        \"1\" => 1,\n       \
    \ \"2\" => 2,\n        \"3\" => 3,\n        \"4\" => 4,\n        \"5\" => 5,\n\
    \        \"6\" => 6,\n        \"7\" => 7,\n        \"8\" => 8,\n        \"9\"\
    \ => 9,\n        \"A\" => 10,\n        \"B\" => 11,\n        \"C\" => 12,\n  \
    \      \"D\" => 13,\n        \"E\" => 14,\n        \"F\" => 15\n    );\n    return\
    \ $hex_key[$num];\n}\nfunction candidate(...$args) {\n    return hex_key(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"AB\") !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"1077E\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ABED1A33\") !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2020\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"123456789ABCDEF0\") !== 6) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"112233445566778899AABBCCDDEEFF00\"\
    ) !== 12) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Warning:  Undefined array key \"AB\" in /tmp/tmprzrpqf2t.php on line\
    \ 37\nPHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmprzrpqf2t.php:44\n\
    Stack trace:\n#0 /tmp/tmprzrpqf2t.php(52): test()\n#1 {main}\n  thrown in /tmp/tmprzrpqf2t.php\
    \ on line 44\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You have been tasked to write a function that receives \n//\
    \ a hexadecimal number as a string and counts the number of hexadecimal \n// digits\
    \ that are primes (prime number, or a prime, is a natural number \n// greater\
    \ than 1 that is not a product of two smaller natural numbers).\n// Hexadecimal\
    \ digits are 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, A, B, C, D, E, F.\n// Prime numbers\
    \ are 2, 3, 5, 7, 11, 13, 17,...\n// So you have to determine a number of the\
    \ following digits: 2, 3, 5, 7, \n// B (=decimal 11), D (=decimal 13).\n// Note:\
    \ you may assume the input is always correct or empty string, \n// and symbols\
    \ A,B,C,D,E,F are always uppercase.\n// Examples:\n// For num = \"AB\" the output\
    \ should be 1.\n// For num = \"1077E\" the output should be 2.\n// For num = \"\
    ABED1A33\" the output should be 4.\n// For num = \"123456789ABCDEF0\" the output\
    \ should be 6.\n// For num = \"2020\" the output should be 2.\nfunction hex_key($num)\
    \ {\n    $hex = array(\n        '0' => 0,\n        '1' => 1,\n        '2' => 2,\n\
    \        '3' => 3,\n        '4' => 4,\n        '5' => 5,\n        '6' => 6,\n\
    \        '7' => 7,\n        '8' => 8,\n        '9' => 9,\n        'A' => 10,\n\
    \        'B' => 11,\n        'C' => 12,\n        'D' => 13,\n        'E' => 14,\n\
    \        'F' => 15\n    );\n    $hex_key = array_keys($hex);\n    return $hex_key;\n\
    }\nfunction candidate(...$args) {\n    return hex_key(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"AB\") !== 1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"1077E\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ABED1A33\") !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2020\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"123456789ABCDEF0\") !== 6) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"112233445566778899AABBCCDDEEFF00\"\
    ) !== 12) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpzirklf61.php:45\n\
    Stack trace:\n#0 /tmp/tmpzirklf61.php(53): test()\n#1 {main}\n  thrown in /tmp/tmpzirklf61.php\
    \ on line 45\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You have been tasked to write a function that receives \n//\
    \ a hexadecimal number as a string and counts the number of hexadecimal \n// digits\
    \ that are primes (prime number, or a prime, is a natural number \n// greater\
    \ than 1 that is not a product of two smaller natural numbers).\n// Hexadecimal\
    \ digits are 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, A, B, C, D, E, F.\n// Prime numbers\
    \ are 2, 3, 5, 7, 11, 13, 17,...\n// So you have to determine a number of the\
    \ following digits: 2, 3, 5, 7, \n// B (=decimal 11), D (=decimal 13).\n// Note:\
    \ you may assume the input is always correct or empty string, \n// and symbols\
    \ A,B,C,D,E,F are always uppercase.\n// Examples:\n// For num = \"AB\" the output\
    \ should be 1.\n// For num = \"1077E\" the output should be 2.\n// For num = \"\
    ABED1A33\" the output should be 4.\n// For num = \"123456789ABCDEF0\" the output\
    \ should be 6.\n// For num = \"2020\" the output should be 2.\nfunction hex_key($num)\
    \ {\n    $hex = array(\n        '0' => 0,\n        '1' => 1,\n        '2' => 2,\n\
    \        '3' => 3,\n        '4' => 4,\n        '5' => 5,\n        '6' => 6,\n\
    \        '7' => 7,\n        '8' => 8,\n        '9' => 9,\n        'A' => 10,\n\
    \        'B' => 11,\n        'C' => 12,\n        'D' => 13,\n        'E' => 14,\n\
    \        'F' => 15\n    );\n    $primes = array(2, 3, 5, 7, 11, 13);\n    $count\
    \ = 0;\n    for ($i = 0; $i < strlen($num); $i++) {\n        if (in_array($hex[$num[$i]],\
    \ $primes)) {\n            $count++;\n        }\n    }\n    return $count;\n}\n\
    echo hex_key(\"AB\") . \"\\n\";\necho hex_key(\"1077E\") . \"\\n\";\necho hex_key(\"\
    ABED1A33\") . \"\\n\";\necho hex_key(\"123456789ABCDEF0\") . \"\\n\";\necho hex_key(\"\
    2020\") . \"\\n\";\nfunction candidate(...$args) {\n    return hex_key(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"AB\") !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"1077E\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ABED1A33\") !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2020\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"123456789ABCDEF0\") !== 6) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"112233445566778899AABBCCDDEEFF00\"\
    ) !== 12) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "1\n2\n4\n6\n2\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You have been tasked to write a function that receives \n//\
    \ a hexadecimal number as a string and counts the number of hexadecimal \n// digits\
    \ that are primes (prime number, or a prime, is a natural number \n// greater\
    \ than 1 that is not a product of two smaller natural numbers).\n// Hexadecimal\
    \ digits are 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, A, B, C, D, E, F.\n// Prime numbers\
    \ are 2, 3, 5, 7, 11, 13, 17,...\n// So you have to determine a number of the\
    \ following digits: 2, 3, 5, 7, \n// B (=decimal 11), D (=decimal 13).\n// Note:\
    \ you may assume the input is always correct or empty string, \n// and symbols\
    \ A,B,C,D,E,F are always uppercase.\n// Examples:\n// For num = \"AB\" the output\
    \ should be 1.\n// For num = \"1077E\" the output should be 2.\n// For num = \"\
    ABED1A33\" the output should be 4.\n// For num = \"123456789ABCDEF0\" the output\
    \ should be 6.\n// For num = \"2020\" the output should be 2.\nfunction hex_key($num)\
    \ {\n    $hex_key = array(\n        '0' => 0,\n        '1' => 1,\n        '2'\
    \ => 2,\n        '3' => 3,\n        '4' => 4,\n        '5' => 5,\n        '6'\
    \ => 6,\n        '7' => 7,\n        '8' => 8,\n        '9' => 9,\n        'A'\
    \ => 10,\n        'B' => 11,\n        'C' => 12,\n        'D' => 13,\n       \
    \ 'E' => 14,\n        'F' => 15\n    );\n    return $hex_key[$num];\n}\nfunction\
    \ candidate(...$args) {\n    return hex_key(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"AB\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"1077E\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ABED1A33\") !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"2020\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"123456789ABCDEF0\") !== 6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"112233445566778899AABBCCDDEEFF00\") !==\
    \ 12) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Warning:  Undefined array key \"AB\" in /tmp/tmpd8p0gu4g.php on line\
    \ 37\nPHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpd8p0gu4g.php:44\n\
    Stack trace:\n#0 /tmp/tmpd8p0gu4g.php(52): test()\n#1 {main}\n  thrown in /tmp/tmpd8p0gu4g.php\
    \ on line 44\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You have been tasked to write a function that receives \n//\
    \ a hexadecimal number as a string and counts the number of hexadecimal \n// digits\
    \ that are primes (prime number, or a prime, is a natural number \n// greater\
    \ than 1 that is not a product of two smaller natural numbers).\n// Hexadecimal\
    \ digits are 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, A, B, C, D, E, F.\n// Prime numbers\
    \ are 2, 3, 5, 7, 11, 13, 17,...\n// So you have to determine a number of the\
    \ following digits: 2, 3, 5, 7, \n// B (=decimal 11), D (=decimal 13).\n// Note:\
    \ you may assume the input is always correct or empty string, \n// and symbols\
    \ A,B,C,D,E,F are always uppercase.\n// Examples:\n// For num = \"AB\" the output\
    \ should be 1.\n// For num = \"1077E\" the output should be 2.\n// For num = \"\
    ABED1A33\" the output should be 4.\n// For num = \"123456789ABCDEF0\" the output\
    \ should be 6.\n// For num = \"2020\" the output should be 2.\nfunction hex_key($num)\
    \ {\n    $hex_key = array(\n        \"0\" => 0,\n        \"1\" => 1,\n       \
    \ \"2\" => 2,\n        \"3\" => 3,\n        \"4\" => 4,\n        \"5\" => 5,\n\
    \        \"6\" => 6,\n        \"7\" => 7,\n        \"8\" => 8,\n        \"9\"\
    \ => 9,\n        \"A\" => 10,\n        \"B\" => 11,\n        \"C\" => 12,\n  \
    \      \"D\" => 13,\n        \"E\" => 14,\n        \"F\" => 15\n    );\n    return\
    \ $hex_key[$num];\n}\nfunction candidate(...$args) {\n    return hex_key(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"AB\") !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"1077E\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ABED1A33\") !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2020\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"123456789ABCDEF0\") !== 6) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"112233445566778899AABBCCDDEEFF00\"\
    ) !== 12) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Warning:  Undefined array key \"AB\" in /tmp/tmpz3mvy8mu.php on line\
    \ 37\nPHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpz3mvy8mu.php:44\n\
    Stack trace:\n#0 /tmp/tmpz3mvy8mu.php(52): test()\n#1 {main}\n  thrown in /tmp/tmpz3mvy8mu.php\
    \ on line 44\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You have been tasked to write a function that receives \n//\
    \ a hexadecimal number as a string and counts the number of hexadecimal \n// digits\
    \ that are primes (prime number, or a prime, is a natural number \n// greater\
    \ than 1 that is not a product of two smaller natural numbers).\n// Hexadecimal\
    \ digits are 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, A, B, C, D, E, F.\n// Prime numbers\
    \ are 2, 3, 5, 7, 11, 13, 17,...\n// So you have to determine a number of the\
    \ following digits: 2, 3, 5, 7, \n// B (=decimal 11), D (=decimal 13).\n// Note:\
    \ you may assume the input is always correct or empty string, \n// and symbols\
    \ A,B,C,D,E,F are always uppercase.\n// Examples:\n// For num = \"AB\" the output\
    \ should be 1.\n// For num = \"1077E\" the output should be 2.\n// For num = \"\
    ABED1A33\" the output should be 4.\n// For num = \"123456789ABCDEF0\" the output\
    \ should be 6.\n// For num = \"2020\" the output should be 2.\nfunction hex_key($num)\
    \ {\n    $hex = ['0','1','2','3','4','5','6','7','8','9','A','B','C','D','E','F'];\n\
    \    $prime = [2,3,5,7,11,13];\n    $count = 0;\n    for ($i=0; $i < strlen($num);\
    \ $i++) { \n        if (in_array($num[$i], $hex)) {\n            if (in_array($num[$i],\
    \ $prime)) {\n                $count++;\n            }\n        }\n    }\n   \
    \ return $count;\n}\necho hex_key(\"AB\").\"\\n\";\necho hex_key(\"1077E\").\"\
    \\n\";\necho hex_key(\"ABED1A33\").\"\\n\";\necho hex_key(\"123456789ABCDEF0\"\
    ).\"\\n\";\necho hex_key(\"2020\").\"\\n\";\nfunction candidate(...$args) {\n\
    \    return hex_key(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    AB\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1077E\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ABED1A33\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2020\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    123456789ABCDEF0\") !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"112233445566778899AABBCCDDEEFF00\") !== 12) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "0\n2\n2\n4\n2\n"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpkz4bkxus.php:41\n\
    Stack trace:\n#0 /tmp/tmpkz4bkxus.php(49): test()\n#1 {main}\n  thrown in /tmp/tmpkz4bkxus.php\
    \ on line 41\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You have been tasked to write a function that receives \n//\
    \ a hexadecimal number as a string and counts the number of hexadecimal \n// digits\
    \ that are primes (prime number, or a prime, is a natural number \n// greater\
    \ than 1 that is not a product of two smaller natural numbers).\n// Hexadecimal\
    \ digits are 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, A, B, C, D, E, F.\n// Prime numbers\
    \ are 2, 3, 5, 7, 11, 13, 17,...\n// So you have to determine a number of the\
    \ following digits: 2, 3, 5, 7, \n// B (=decimal 11), D (=decimal 13).\n// Note:\
    \ you may assume the input is always correct or empty string, \n// and symbols\
    \ A,B,C,D,E,F are always uppercase.\n// Examples:\n// For num = \"AB\" the output\
    \ should be 1.\n// For num = \"1077E\" the output should be 2.\n// For num = \"\
    ABED1A33\" the output should be 4.\n// For num = \"123456789ABCDEF0\" the output\
    \ should be 6.\n// For num = \"2020\" the output should be 2.\nfunction hex_key($num)\
    \ {\n    $hex_key = array(\n        \"0\" => 0,\n        \"1\" => 1,\n       \
    \ \"2\" => 2,\n        \"3\" => 3,\n        \"4\" => 4,\n        \"5\" => 5,\n\
    \        \"6\" => 6,\n        \"7\" => 7,\n        \"8\" => 8,\n        \"9\"\
    \ => 9,\n        \"A\" => 10,\n        \"B\" => 11,\n        \"C\" => 12,\n  \
    \      \"D\" => 13,\n        \"E\" => 14,\n        \"F\" => 15\n    );\n    return\
    \ $hex_key[$num];\n}\nfunction candidate(...$args) {\n    return hex_key(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"AB\") !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"1077E\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ABED1A33\") !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2020\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"123456789ABCDEF0\") !== 6) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"112233445566778899AABBCCDDEEFF00\"\
    ) !== 12) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Warning:  Undefined array key \"AB\" in /tmp/tmpnkkty_as.php on line\
    \ 37\nPHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpnkkty_as.php:44\n\
    Stack trace:\n#0 /tmp/tmpnkkty_as.php(52): test()\n#1 {main}\n  thrown in /tmp/tmpnkkty_as.php\
    \ on line 44\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You have been tasked to write a function that receives \n//\
    \ a hexadecimal number as a string and counts the number of hexadecimal \n// digits\
    \ that are primes (prime number, or a prime, is a natural number \n// greater\
    \ than 1 that is not a product of two smaller natural numbers).\n// Hexadecimal\
    \ digits are 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, A, B, C, D, E, F.\n// Prime numbers\
    \ are 2, 3, 5, 7, 11, 13, 17,...\n// So you have to determine a number of the\
    \ following digits: 2, 3, 5, 7, \n// B (=decimal 11), D (=decimal 13).\n// Note:\
    \ you may assume the input is always correct or empty string, \n// and symbols\
    \ A,B,C,D,E,F are always uppercase.\n// Examples:\n// For num = \"AB\" the output\
    \ should be 1.\n// For num = \"1077E\" the output should be 2.\n// For num = \"\
    ABED1A33\" the output should be 4.\n// For num = \"123456789ABCDEF0\" the output\
    \ should be 6.\n// For num = \"2020\" the output should be 2.\nfunction hex_key($num)\
    \ {\n    $hex = array(\n        '0' => 0,\n        '1' => 1,\n        '2' => 2,\n\
    \        '3' => 3,\n        '4' => 4,\n        '5' => 5,\n        '6' => 6,\n\
    \        '7' => 7,\n        '8' => 8,\n        '9' => 9,\n        'A' => 10,\n\
    \        'B' => 11,\n        'C' => 12,\n        'D' => 13,\n        'E' => 14,\n\
    \        'F' => 15\n    );\n    $primes = array(2, 3, 5, 7, 11, 13);\n    $count\
    \ = 0;\n    for ($i = 0; $i < strlen($num); $i++) {\n        if (in_array($hex[$num[$i]],\
    \ $primes)) {\n            $count++;\n        }\n    }\n    return $count;\n}\n\
    echo hex_key(\"AB\") . \"<br>\";\necho hex_key(\"1077E\") . \"<br>\";\necho hex_key(\"\
    ABED1A33\") . \"<br>\";\necho hex_key(\"123456789ABCDEF0\") . \"<br>\";\necho\
    \ hex_key(\"2020\") . \"<br>\";\nfunction candidate(...$args) {\n    return hex_key(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"AB\") !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"1077E\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ABED1A33\") !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2020\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"123456789ABCDEF0\") !== 6) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"112233445566778899AABBCCDDEEFF00\"\
    ) !== 12) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: 1<br>2<br>4<br>6<br>2<br>
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You have been tasked to write a function that receives \n//\
    \ a hexadecimal number as a string and counts the number of hexadecimal \n// digits\
    \ that are primes (prime number, or a prime, is a natural number \n// greater\
    \ than 1 that is not a product of two smaller natural numbers).\n// Hexadecimal\
    \ digits are 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, A, B, C, D, E, F.\n// Prime numbers\
    \ are 2, 3, 5, 7, 11, 13, 17,...\n// So you have to determine a number of the\
    \ following digits: 2, 3, 5, 7, \n// B (=decimal 11), D (=decimal 13).\n// Note:\
    \ you may assume the input is always correct or empty string, \n// and symbols\
    \ A,B,C,D,E,F are always uppercase.\n// Examples:\n// For num = \"AB\" the output\
    \ should be 1.\n// For num = \"1077E\" the output should be 2.\n// For num = \"\
    ABED1A33\" the output should be 4.\n// For num = \"123456789ABCDEF0\" the output\
    \ should be 6.\n// For num = \"2020\" the output should be 2.\nfunction hex_key($num)\
    \ {\n    $hex = array(\n        '0' => 0,\n        '1' => 1,\n        '2' => 2,\n\
    \        '3' => 3,\n        '4' => 4,\n        '5' => 5,\n        '6' => 6,\n\
    \        '7' => 7,\n        '8' => 8,\n        '9' => 9,\n        'A' => 10,\n\
    \        'B' => 11,\n        'C' => 12,\n        'D' => 13,\n        'E' => 14,\n\
    \        'F' => 15\n    );\n    $primes = array(2, 3, 5, 7, 11, 13);\n    $count\
    \ = 0;\n    for ($i = 0; $i < strlen($num); $i++) {\n        if (in_array($hex[$num[$i]],\
    \ $primes)) {\n            $count++;\n        }\n    }\n    return $count;\n}\n\
    echo hex_key(\"AB\") . \"\\n\";\necho hex_key(\"1077E\") . \"\\n\";\necho hex_key(\"\
    ABED1A33\") . \"\\n\";\necho hex_key(\"123456789ABCDEF0\") . \"\\n\";\necho hex_key(\"\
    2020\") . \"\\n\";\nfunction candidate(...$args) {\n    return hex_key(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"AB\") !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"1077E\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ABED1A33\") !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2020\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"123456789ABCDEF0\") !== 6) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"112233445566778899AABBCCDDEEFF00\"\
    ) !== 12) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "1\n2\n4\n6\n2\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You have been tasked to write a function that receives \n//\
    \ a hexadecimal number as a string and counts the number of hexadecimal \n// digits\
    \ that are primes (prime number, or a prime, is a natural number \n// greater\
    \ than 1 that is not a product of two smaller natural numbers).\n// Hexadecimal\
    \ digits are 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, A, B, C, D, E, F.\n// Prime numbers\
    \ are 2, 3, 5, 7, 11, 13, 17,...\n// So you have to determine a number of the\
    \ following digits: 2, 3, 5, 7, \n// B (=decimal 11), D (=decimal 13).\n// Note:\
    \ you may assume the input is always correct or empty string, \n// and symbols\
    \ A,B,C,D,E,F are always uppercase.\n// Examples:\n// For num = \"AB\" the output\
    \ should be 1.\n// For num = \"1077E\" the output should be 2.\n// For num = \"\
    ABED1A33\" the output should be 4.\n// For num = \"123456789ABCDEF0\" the output\
    \ should be 6.\n// For num = \"2020\" the output should be 2.\nfunction hex_key($num)\
    \ {\n    $hex_key = array(\n        '0' => 0,\n        '1' => 1,\n        '2'\
    \ => 2,\n        '3' => 3,\n        '4' => 4,\n        '5' => 5,\n        '6'\
    \ => 6,\n        '7' => 7,\n        '8' => 8,\n        '9' => 9,\n        'A'\
    \ => 10,\n        'B' => 11,\n        'C' => 12,\n        'D' => 13,\n       \
    \ 'E' => 14,\n        'F' => 15\n    );\n    return $hex_key[$num];\n}\nfunction\
    \ candidate(...$args) {\n    return hex_key(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"AB\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"1077E\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ABED1A33\") !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"2020\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"123456789ABCDEF0\") !== 6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"112233445566778899AABBCCDDEEFF00\") !==\
    \ 12) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Warning:  Undefined array key \"AB\" in /tmp/tmpvhn8l7n2.php on line\
    \ 37\nPHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpvhn8l7n2.php:44\n\
    Stack trace:\n#0 /tmp/tmpvhn8l7n2.php(52): test()\n#1 {main}\n  thrown in /tmp/tmpvhn8l7n2.php\
    \ on line 44\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You have been tasked to write a function that receives \n//\
    \ a hexadecimal number as a string and counts the number of hexadecimal \n// digits\
    \ that are primes (prime number, or a prime, is a natural number \n// greater\
    \ than 1 that is not a product of two smaller natural numbers).\n// Hexadecimal\
    \ digits are 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, A, B, C, D, E, F.\n// Prime numbers\
    \ are 2, 3, 5, 7, 11, 13, 17,...\n// So you have to determine a number of the\
    \ following digits: 2, 3, 5, 7, \n// B (=decimal 11), D (=decimal 13).\n// Note:\
    \ you may assume the input is always correct or empty string, \n// and symbols\
    \ A,B,C,D,E,F are always uppercase.\n// Examples:\n// For num = \"AB\" the output\
    \ should be 1.\n// For num = \"1077E\" the output should be 2.\n// For num = \"\
    ABED1A33\" the output should be 4.\n// For num = \"123456789ABCDEF0\" the output\
    \ should be 6.\n// For num = \"2020\" the output should be 2.\nfunction hex_key($num)\
    \ {\n    $hex_key = array(\n        '0' => 0,\n        '1' => 1,\n        '2'\
    \ => 2,\n        '3' => 3,\n        '4' => 4,\n        '5' => 5,\n        '6'\
    \ => 6,\n        '7' => 7,\n        '8' => 8,\n        '9' => 9,\n        'A'\
    \ => 10,\n        'B' => 11,\n        'C' => 12,\n        'D' => 13,\n       \
    \ 'E' => 14,\n        'F' => 15\n    );\n    return $hex_key[$num];\n}\nfunction\
    \ candidate(...$args) {\n    return hex_key(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"AB\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"1077E\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ABED1A33\") !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"2020\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"123456789ABCDEF0\") !== 6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"112233445566778899AABBCCDDEEFF00\") !==\
    \ 12) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Warning:  Undefined array key \"AB\" in /tmp/tmpa3mjd9v3.php on line\
    \ 37\nPHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpa3mjd9v3.php:44\n\
    Stack trace:\n#0 /tmp/tmpa3mjd9v3.php(52): test()\n#1 {main}\n  thrown in /tmp/tmpa3mjd9v3.php\
    \ on line 44\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You have been tasked to write a function that receives \n//\
    \ a hexadecimal number as a string and counts the number of hexadecimal \n// digits\
    \ that are primes (prime number, or a prime, is a natural number \n// greater\
    \ than 1 that is not a product of two smaller natural numbers).\n// Hexadecimal\
    \ digits are 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, A, B, C, D, E, F.\n// Prime numbers\
    \ are 2, 3, 5, 7, 11, 13, 17,...\n// So you have to determine a number of the\
    \ following digits: 2, 3, 5, 7, \n// B (=decimal 11), D (=decimal 13).\n// Note:\
    \ you may assume the input is always correct or empty string, \n// and symbols\
    \ A,B,C,D,E,F are always uppercase.\n// Examples:\n// For num = \"AB\" the output\
    \ should be 1.\n// For num = \"1077E\" the output should be 2.\n// For num = \"\
    ABED1A33\" the output should be 4.\n// For num = \"123456789ABCDEF0\" the output\
    \ should be 6.\n// For num = \"2020\" the output should be 2.\nfunction hex_key($num)\
    \ {\n    $hex_key = array(\n        '0' => 0,\n        '1' => 1,\n        '2'\
    \ => 2,\n        '3' => 3,\n        '4' => 4,\n        '5' => 5,\n        '6'\
    \ => 6,\n        '7' => 7,\n        '8' => 8,\n        '9' => 9,\n        'A'\
    \ => 10,\n        'B' => 11,\n        'C' => 12,\n        'D' => 13,\n       \
    \ 'E' => 14,\n        'F' => 15\n    );\n    return $hex_key[$num];\n}\nfunction\
    \ candidate(...$args) {\n    return hex_key(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"AB\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"1077E\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ABED1A33\") !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"2020\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"123456789ABCDEF0\") !== 6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"112233445566778899AABBCCDDEEFF00\") !==\
    \ 12) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Warning:  Undefined array key \"AB\" in /tmp/tmpmy47_ei5.php on line\
    \ 37\nPHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpmy47_ei5.php:44\n\
    Stack trace:\n#0 /tmp/tmpmy47_ei5.php(52): test()\n#1 {main}\n  thrown in /tmp/tmpmy47_ei5.php\
    \ on line 44\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You have been tasked to write a function that receives \n//\
    \ a hexadecimal number as a string and counts the number of hexadecimal \n// digits\
    \ that are primes (prime number, or a prime, is a natural number \n// greater\
    \ than 1 that is not a product of two smaller natural numbers).\n// Hexadecimal\
    \ digits are 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, A, B, C, D, E, F.\n// Prime numbers\
    \ are 2, 3, 5, 7, 11, 13, 17,...\n// So you have to determine a number of the\
    \ following digits: 2, 3, 5, 7, \n// B (=decimal 11), D (=decimal 13).\n// Note:\
    \ you may assume the input is always correct or empty string, \n// and symbols\
    \ A,B,C,D,E,F are always uppercase.\n// Examples:\n// For num = \"AB\" the output\
    \ should be 1.\n// For num = \"1077E\" the output should be 2.\n// For num = \"\
    ABED1A33\" the output should be 4.\n// For num = \"123456789ABCDEF0\" the output\
    \ should be 6.\n// For num = \"2020\" the output should be 2.\nfunction hex_key($num)\
    \ {\n    $hex = array(\n        \"0\" => 0,\n        \"1\" => 1,\n        \"2\"\
    \ => 2,\n        \"3\" => 3,\n        \"4\" => 4,\n        \"5\" => 5,\n     \
    \   \"6\" => 6,\n        \"7\" => 7,\n        \"8\" => 8,\n        \"9\" => 9,\n\
    \        \"A\" => 10,\n        \"B\" => 11,\n        \"C\" => 12,\n        \"\
    D\" => 13,\n        \"E\" => 14,\n        \"F\" => 15\n    );\n    $primes = array(2,\
    \ 3, 5, 7, 11, 13);\n    $count = 0;\n    for ($i = 0; $i < strlen($num); $i++)\
    \ {\n        if (in_array($hex[$num[$i]], $primes)) {\n            $count++;\n\
    \        }\n    }\n    return $count;\n}\nfunction candidate(...$args) {\n   \
    \ return hex_key(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    AB\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1077E\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ABED1A33\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2020\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    123456789ABCDEF0\") !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"112233445566778899AABBCCDDEEFF00\") !== 12) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You have been tasked to write a function that receives \n//\
    \ a hexadecimal number as a string and counts the number of hexadecimal \n// digits\
    \ that are primes (prime number, or a prime, is a natural number \n// greater\
    \ than 1 that is not a product of two smaller natural numbers).\n// Hexadecimal\
    \ digits are 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, A, B, C, D, E, F.\n// Prime numbers\
    \ are 2, 3, 5, 7, 11, 13, 17,...\n// So you have to determine a number of the\
    \ following digits: 2, 3, 5, 7, \n// B (=decimal 11), D (=decimal 13).\n// Note:\
    \ you may assume the input is always correct or empty string, \n// and symbols\
    \ A,B,C,D,E,F are always uppercase.\n// Examples:\n// For num = \"AB\" the output\
    \ should be 1.\n// For num = \"1077E\" the output should be 2.\n// For num = \"\
    ABED1A33\" the output should be 4.\n// For num = \"123456789ABCDEF0\" the output\
    \ should be 6.\n// For num = \"2020\" the output should be 2.\nfunction hex_key($num)\
    \ {\n\t$hex_key = array(\n\t\t\"0\" => 0,\n\t\t\"1\" => 1,\n\t\t\"2\" => 2,\n\t\
    \t\"3\" => 3,\n\t\t\"4\" => 4,\n\t\t\"5\" => 5,\n\t\t\"6\" => 6,\n\t\t\"7\" =>\
    \ 7,\n\t\t\"8\" => 8,\n\t\t\"9\" => 9,\n\t\t\"A\" => 10,\n\t\t\"B\" => 11,\n\t\
    \t\"C\" => 12,\n\t\t\"D\" => 13,\n\t\t\"E\" => 14,\n\t\t\"F\" => 15\n\t);\n\t\
    return $hex_key[$num];\n}\nfunction candidate(...$args) {\n    return hex_key(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"AB\") !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"1077E\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ABED1A33\") !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2020\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"123456789ABCDEF0\") !== 6) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"112233445566778899AABBCCDDEEFF00\"\
    ) !== 12) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Warning:  Undefined array key \"AB\" in /tmp/tmp26u1qer9.php on line\
    \ 37\nPHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp26u1qer9.php:44\n\
    Stack trace:\n#0 /tmp/tmp26u1qer9.php(52): test()\n#1 {main}\n  thrown in /tmp/tmp26u1qer9.php\
    \ on line 44\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You have been tasked to write a function that receives \n//\
    \ a hexadecimal number as a string and counts the number of hexadecimal \n// digits\
    \ that are primes (prime number, or a prime, is a natural number \n// greater\
    \ than 1 that is not a product of two smaller natural numbers).\n// Hexadecimal\
    \ digits are 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, A, B, C, D, E, F.\n// Prime numbers\
    \ are 2, 3, 5, 7, 11, 13, 17,...\n// So you have to determine a number of the\
    \ following digits: 2, 3, 5, 7, \n// B (=decimal 11), D (=decimal 13).\n// Note:\
    \ you may assume the input is always correct or empty string, \n// and symbols\
    \ A,B,C,D,E,F are always uppercase.\n// Examples:\n// For num = \"AB\" the output\
    \ should be 1.\n// For num = \"1077E\" the output should be 2.\n// For num = \"\
    ABED1A33\" the output should be 4.\n// For num = \"123456789ABCDEF0\" the output\
    \ should be 6.\n// For num = \"2020\" the output should be 2.\nfunction hex_key($num)\
    \ {\n    $hex_key = array(\n        '0' => 0,\n        '1' => 1,\n        '2'\
    \ => 2,\n        '3' => 3,\n        '4' => 4,\n        '5' => 5,\n        '6'\
    \ => 6,\n        '7' => 7,\n        '8' => 8,\n        '9' => 9,\n        'A'\
    \ => 10,\n        'B' => 11,\n        'C' => 12,\n        'D' => 13,\n       \
    \ 'E' => 14,\n        'F' => 15\n    );\n    return $hex_key[$num];\n}\nfunction\
    \ candidate(...$args) {\n    return hex_key(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"AB\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"1077E\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ABED1A33\") !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"2020\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"123456789ABCDEF0\") !== 6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"112233445566778899AABBCCDDEEFF00\") !==\
    \ 12) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Warning:  Undefined array key \"AB\" in /tmp/tmpcbh73a6v.php on line\
    \ 37\nPHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpcbh73a6v.php:44\n\
    Stack trace:\n#0 /tmp/tmpcbh73a6v.php(52): test()\n#1 {main}\n  thrown in /tmp/tmpcbh73a6v.php\
    \ on line 44\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You have been tasked to write a function that receives \n//\
    \ a hexadecimal number as a string and counts the number of hexadecimal \n// digits\
    \ that are primes (prime number, or a prime, is a natural number \n// greater\
    \ than 1 that is not a product of two smaller natural numbers).\n// Hexadecimal\
    \ digits are 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, A, B, C, D, E, F.\n// Prime numbers\
    \ are 2, 3, 5, 7, 11, 13, 17,...\n// So you have to determine a number of the\
    \ following digits: 2, 3, 5, 7, \n// B (=decimal 11), D (=decimal 13).\n// Note:\
    \ you may assume the input is always correct or empty string, \n// and symbols\
    \ A,B,C,D,E,F are always uppercase.\n// Examples:\n// For num = \"AB\" the output\
    \ should be 1.\n// For num = \"1077E\" the output should be 2.\n// For num = \"\
    ABED1A33\" the output should be 4.\n// For num = \"123456789ABCDEF0\" the output\
    \ should be 6.\n// For num = \"2020\" the output should be 2.\nfunction hex_key($num)\
    \ {\n    $hex_key = array(\n        \"0\" => 0,\n        \"1\" => 1,\n       \
    \ \"2\" => 2,\n        \"3\" => 3,\n        \"4\" => 4,\n        \"5\" => 5,\n\
    \        \"6\" => 6,\n        \"7\" => 7,\n        \"8\" => 8,\n        \"9\"\
    \ => 9,\n        \"A\" => 10,\n        \"B\" => 11,\n        \"C\" => 12,\n  \
    \      \"D\" => 13,\n        \"E\" => 14,\n        \"F\" => 15\n    );\n    return\
    \ $hex_key[$num];\n}\nfunction candidate(...$args) {\n    return hex_key(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"AB\") !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"1077E\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ABED1A33\") !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2020\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"123456789ABCDEF0\") !== 6) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"112233445566778899AABBCCDDEEFF00\"\
    ) !== 12) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Warning:  Undefined array key \"AB\" in /tmp/tmpb87xufi2.php on line\
    \ 37\nPHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpb87xufi2.php:44\n\
    Stack trace:\n#0 /tmp/tmpb87xufi2.php(52): test()\n#1 {main}\n  thrown in /tmp/tmpb87xufi2.php\
    \ on line 44\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You have been tasked to write a function that receives \n//\
    \ a hexadecimal number as a string and counts the number of hexadecimal \n// digits\
    \ that are primes (prime number, or a prime, is a natural number \n// greater\
    \ than 1 that is not a product of two smaller natural numbers).\n// Hexadecimal\
    \ digits are 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, A, B, C, D, E, F.\n// Prime numbers\
    \ are 2, 3, 5, 7, 11, 13, 17,...\n// So you have to determine a number of the\
    \ following digits: 2, 3, 5, 7, \n// B (=decimal 11), D (=decimal 13).\n// Note:\
    \ you may assume the input is always correct or empty string, \n// and symbols\
    \ A,B,C,D,E,F are always uppercase.\n// Examples:\n// For num = \"AB\" the output\
    \ should be 1.\n// For num = \"1077E\" the output should be 2.\n// For num = \"\
    ABED1A33\" the output should be 4.\n// For num = \"123456789ABCDEF0\" the output\
    \ should be 6.\n// For num = \"2020\" the output should be 2.\nfunction hex_key($num)\
    \ {\n  $hex_key = array(\n    \"0\" => 0,\n    \"1\" => 1,\n    \"2\" => 2,\n\
    \    \"3\" => 3,\n    \"4\" => 4,\n    \"5\" => 5,\n    \"6\" => 6,\n    \"7\"\
    \ => 7,\n    \"8\" => 8,\n    \"9\" => 9,\n    \"A\" => 10,\n    \"B\" => 11,\n\
    \    \"C\" => 12,\n    \"D\" => 13,\n    \"E\" => 14,\n    \"F\" => 15\n  );\n\
    \  return $hex_key[$num];\n}\nfunction candidate(...$args) {\n    return hex_key(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"AB\") !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"1077E\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ABED1A33\") !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2020\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"123456789ABCDEF0\") !== 6) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"112233445566778899AABBCCDDEEFF00\"\
    ) !== 12) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Warning:  Undefined array key \"AB\" in /tmp/tmprnp5xlk4.php on line\
    \ 37\nPHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmprnp5xlk4.php:44\n\
    Stack trace:\n#0 /tmp/tmprnp5xlk4.php(52): test()\n#1 {main}\n  thrown in /tmp/tmprnp5xlk4.php\
    \ on line 44\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You have been tasked to write a function that receives \n//\
    \ a hexadecimal number as a string and counts the number of hexadecimal \n// digits\
    \ that are primes (prime number, or a prime, is a natural number \n// greater\
    \ than 1 that is not a product of two smaller natural numbers).\n// Hexadecimal\
    \ digits are 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, A, B, C, D, E, F.\n// Prime numbers\
    \ are 2, 3, 5, 7, 11, 13, 17,...\n// So you have to determine a number of the\
    \ following digits: 2, 3, 5, 7, \n// B (=decimal 11), D (=decimal 13).\n// Note:\
    \ you may assume the input is always correct or empty string, \n// and symbols\
    \ A,B,C,D,E,F are always uppercase.\n// Examples:\n// For num = \"AB\" the output\
    \ should be 1.\n// For num = \"1077E\" the output should be 2.\n// For num = \"\
    ABED1A33\" the output should be 4.\n// For num = \"123456789ABCDEF0\" the output\
    \ should be 6.\n// For num = \"2020\" the output should be 2.\nfunction hex_key($num)\
    \ {\n    $hex_key = array(\n        '0' => 0,\n        '1' => 1,\n        '2'\
    \ => 2,\n        '3' => 3,\n        '4' => 4,\n        '5' => 5,\n        '6'\
    \ => 6,\n        '7' => 7,\n        '8' => 8,\n        '9' => 9,\n        'A'\
    \ => 10,\n        'B' => 11,\n        'C' => 12,\n        'D' => 13,\n       \
    \ 'E' => 14,\n        'F' => 15\n    );\n    return $hex_key[$num];\n}\nfunction\
    \ candidate(...$args) {\n    return hex_key(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"AB\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"1077E\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ABED1A33\") !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"2020\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"123456789ABCDEF0\") !== 6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"112233445566778899AABBCCDDEEFF00\") !==\
    \ 12) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Warning:  Undefined array key \"AB\" in /tmp/tmp5bf795bl.php on line\
    \ 37\nPHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp5bf795bl.php:44\n\
    Stack trace:\n#0 /tmp/tmp5bf795bl.php(52): test()\n#1 {main}\n  thrown in /tmp/tmp5bf795bl.php\
    \ on line 44\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You have been tasked to write a function that receives \n//\
    \ a hexadecimal number as a string and counts the number of hexadecimal \n// digits\
    \ that are primes (prime number, or a prime, is a natural number \n// greater\
    \ than 1 that is not a product of two smaller natural numbers).\n// Hexadecimal\
    \ digits are 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, A, B, C, D, E, F.\n// Prime numbers\
    \ are 2, 3, 5, 7, 11, 13, 17,...\n// So you have to determine a number of the\
    \ following digits: 2, 3, 5, 7, \n// B (=decimal 11), D (=decimal 13).\n// Note:\
    \ you may assume the input is always correct or empty string, \n// and symbols\
    \ A,B,C,D,E,F are always uppercase.\n// Examples:\n// For num = \"AB\" the output\
    \ should be 1.\n// For num = \"1077E\" the output should be 2.\n// For num = \"\
    ABED1A33\" the output should be 4.\n// For num = \"123456789ABCDEF0\" the output\
    \ should be 6.\n// For num = \"2020\" the output should be 2.\nfunction hex_key($num)\
    \ {\n    $hex_key = ['0' => 0, '1' => 1, '2' => 2, '3' => 3, '4' => 4, '5' =>\
    \ 5, '6' => 6, '7' => 7, '8' => 8, '9' => 9, 'A' => 10, 'B' => 11, 'C' => 12,\
    \ 'D' => 13, 'E' => 14, 'F' => 15];\n    return $hex_key[$num];\n}\nfunction candidate(...$args)\
    \ {\n    return hex_key(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    AB\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1077E\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ABED1A33\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2020\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    123456789ABCDEF0\") !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"112233445566778899AABBCCDDEEFF00\") !== 12) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Warning:  Undefined array key \"AB\" in /tmp/tmplha8df8g.php on line\
    \ 20\nPHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmplha8df8g.php:27\n\
    Stack trace:\n#0 /tmp/tmplha8df8g.php(35): test()\n#1 {main}\n  thrown in /tmp/tmplha8df8g.php\
    \ on line 27\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You have been tasked to write a function that receives \n//\
    \ a hexadecimal number as a string and counts the number of hexadecimal \n// digits\
    \ that are primes (prime number, or a prime, is a natural number \n// greater\
    \ than 1 that is not a product of two smaller natural numbers).\n// Hexadecimal\
    \ digits are 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, A, B, C, D, E, F.\n// Prime numbers\
    \ are 2, 3, 5, 7, 11, 13, 17,...\n// So you have to determine a number of the\
    \ following digits: 2, 3, 5, 7, \n// B (=decimal 11), D (=decimal 13).\n// Note:\
    \ you may assume the input is always correct or empty string, \n// and symbols\
    \ A,B,C,D,E,F are always uppercase.\n// Examples:\n// For num = \"AB\" the output\
    \ should be 1.\n// For num = \"1077E\" the output should be 2.\n// For num = \"\
    ABED1A33\" the output should be 4.\n// For num = \"123456789ABCDEF0\" the output\
    \ should be 6.\n// For num = \"2020\" the output should be 2.\nfunction hex_key($num)\
    \ {\n    $hex_key = array(\n        \"0\" => 0,\n        \"1\" => 1,\n       \
    \ \"2\" => 2,\n        \"3\" => 3,\n        \"4\" => 4,\n        \"5\" => 5,\n\
    \        \"6\" => 6,\n        \"7\" => 7,\n        \"8\" => 8,\n        \"9\"\
    \ => 9,\n        \"A\" => 10,\n        \"B\" => 11,\n        \"C\" => 12,\n  \
    \      \"D\" => 13,\n        \"E\" => 14,\n        \"F\" => 15\n    );\n    return\
    \ $hex_key[$num];\n}\nfunction candidate(...$args) {\n    return hex_key(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"AB\") !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"1077E\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ABED1A33\") !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2020\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"123456789ABCDEF0\") !== 6) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"112233445566778899AABBCCDDEEFF00\"\
    ) !== 12) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Warning:  Undefined array key \"AB\" in /tmp/tmpvndhhoz_.php on line\
    \ 37\nPHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpvndhhoz_.php:44\n\
    Stack trace:\n#0 /tmp/tmpvndhhoz_.php(52): test()\n#1 {main}\n  thrown in /tmp/tmpvndhhoz_.php\
    \ on line 44\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You have been tasked to write a function that receives \n//\
    \ a hexadecimal number as a string and counts the number of hexadecimal \n// digits\
    \ that are primes (prime number, or a prime, is a natural number \n// greater\
    \ than 1 that is not a product of two smaller natural numbers).\n// Hexadecimal\
    \ digits are 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, A, B, C, D, E, F.\n// Prime numbers\
    \ are 2, 3, 5, 7, 11, 13, 17,...\n// So you have to determine a number of the\
    \ following digits: 2, 3, 5, 7, \n// B (=decimal 11), D (=decimal 13).\n// Note:\
    \ you may assume the input is always correct or empty string, \n// and symbols\
    \ A,B,C,D,E,F are always uppercase.\n// Examples:\n// For num = \"AB\" the output\
    \ should be 1.\n// For num = \"1077E\" the output should be 2.\n// For num = \"\
    ABED1A33\" the output should be 4.\n// For num = \"123456789ABCDEF0\" the output\
    \ should be 6.\n// For num = \"2020\" the output should be 2.\nfunction hex_key($num)\
    \ {\n    $hex = array(\n        '0' => 0,\n        '1' => 1,\n        '2' => 2,\n\
    \        '3' => 3,\n        '4' => 4,\n        '5' => 5,\n        '6' => 6,\n\
    \        '7' => 7,\n        '8' => 8,\n        '9' => 9,\n        'A' => 10,\n\
    \        'B' => 11,\n        'C' => 12,\n        'D' => 13,\n        'E' => 14,\n\
    \        'F' => 15\n    );\n    $primes = array(2, 3, 5, 7, 11, 13);\n    $count\
    \ = 0;\n    for ($i = 0; $i < strlen($num); $i++) {\n        if (in_array($hex[$num[$i]],\
    \ $primes)) {\n            $count++;\n        }\n    }\n    return $count;\n}\n\
    echo hex_key(\"AB\") . \"\\n\";\necho hex_key(\"1077E\") . \"\\n\";\necho hex_key(\"\
    ABED1A33\") . \"\\n\";\necho hex_key(\"123456789ABCDEF0\") . \"\\n\";\necho hex_key(\"\
    2020\") . \"\\n\";\nfunction candidate(...$args) {\n    return hex_key(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"AB\") !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"1077E\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ABED1A33\") !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2020\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"123456789ABCDEF0\") !== 6) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"112233445566778899AABBCCDDEEFF00\"\
    ) !== 12) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "1\n2\n4\n6\n2\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You have been tasked to write a function that receives \n//\
    \ a hexadecimal number as a string and counts the number of hexadecimal \n// digits\
    \ that are primes (prime number, or a prime, is a natural number \n// greater\
    \ than 1 that is not a product of two smaller natural numbers).\n// Hexadecimal\
    \ digits are 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, A, B, C, D, E, F.\n// Prime numbers\
    \ are 2, 3, 5, 7, 11, 13, 17,...\n// So you have to determine a number of the\
    \ following digits: 2, 3, 5, 7, \n// B (=decimal 11), D (=decimal 13).\n// Note:\
    \ you may assume the input is always correct or empty string, \n// and symbols\
    \ A,B,C,D,E,F are always uppercase.\n// Examples:\n// For num = \"AB\" the output\
    \ should be 1.\n// For num = \"1077E\" the output should be 2.\n// For num = \"\
    ABED1A33\" the output should be 4.\n// For num = \"123456789ABCDEF0\" the output\
    \ should be 6.\n// For num = \"2020\" the output should be 2.\nfunction hex_key($num)\
    \ {\n    $hex = array(\n        \"0\" => 0,\n        \"1\" => 1,\n        \"2\"\
    \ => 2,\n        \"3\" => 3,\n        \"4\" => 4,\n        \"5\" => 5,\n     \
    \   \"6\" => 6,\n        \"7\" => 7,\n        \"8\" => 8,\n        \"9\" => 9,\n\
    \        \"A\" => 10,\n        \"B\" => 11,\n        \"C\" => 12,\n        \"\
    D\" => 13,\n        \"E\" => 14,\n        \"F\" => 15\n    );\n    $prime = array(2,\
    \ 3, 5, 7, 11, 13);\n    $count = 0;\n    for ($i = 0; $i < strlen($num); $i++)\
    \ {\n        if (in_array($hex[$num[$i]], $prime)) {\n            $count++;\n\
    \        }\n    }\n    return $count;\n}\necho hex_key(\"AB\") . \"<br>\";\necho\
    \ hex_key(\"1077E\") . \"<br>\";\necho hex_key(\"ABED1A33\") . \"<br>\";\necho\
    \ hex_key(\"123456789ABCDEF0\") . \"<br>\";\necho hex_key(\"2020\") . \"<br>\"\
    ;\nfunction candidate(...$args) {\n    return hex_key(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"AB\") !== 1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"1077E\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ABED1A33\") !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2020\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"123456789ABCDEF0\") !== 6) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"112233445566778899AABBCCDDEEFF00\"\
    ) !== 12) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: 1<br>2<br>4<br>6<br>2<br>
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You have been tasked to write a function that receives \n//\
    \ a hexadecimal number as a string and counts the number of hexadecimal \n// digits\
    \ that are primes (prime number, or a prime, is a natural number \n// greater\
    \ than 1 that is not a product of two smaller natural numbers).\n// Hexadecimal\
    \ digits are 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, A, B, C, D, E, F.\n// Prime numbers\
    \ are 2, 3, 5, 7, 11, 13, 17,...\n// So you have to determine a number of the\
    \ following digits: 2, 3, 5, 7, \n// B (=decimal 11), D (=decimal 13).\n// Note:\
    \ you may assume the input is always correct or empty string, \n// and symbols\
    \ A,B,C,D,E,F are always uppercase.\n// Examples:\n// For num = \"AB\" the output\
    \ should be 1.\n// For num = \"1077E\" the output should be 2.\n// For num = \"\
    ABED1A33\" the output should be 4.\n// For num = \"123456789ABCDEF0\" the output\
    \ should be 6.\n// For num = \"2020\" the output should be 2.\nfunction hex_key($num)\
    \ {\n    $hex_key = array(\n        \"0\" => 0,\n        \"1\" => 1,\n       \
    \ \"2\" => 2,\n        \"3\" => 3,\n        \"4\" => 4,\n        \"5\" => 5,\n\
    \        \"6\" => 6,\n        \"7\" => 7,\n        \"8\" => 8,\n        \"9\"\
    \ => 9,\n        \"A\" => 10,\n        \"B\" => 11,\n        \"C\" => 12,\n  \
    \      \"D\" => 13,\n        \"E\" => 14,\n        \"F\" => 15\n    );\n    return\
    \ $hex_key[$num];\n}\nfunction candidate(...$args) {\n    return hex_key(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"AB\") !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"1077E\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ABED1A33\") !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2020\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"123456789ABCDEF0\") !== 6) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"112233445566778899AABBCCDDEEFF00\"\
    ) !== 12) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Warning:  Undefined array key \"AB\" in /tmp/tmph399hllp.php on line\
    \ 37\nPHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmph399hllp.php:44\n\
    Stack trace:\n#0 /tmp/tmph399hllp.php(52): test()\n#1 {main}\n  thrown in /tmp/tmph399hllp.php\
    \ on line 44\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You have been tasked to write a function that receives \n//\
    \ a hexadecimal number as a string and counts the number of hexadecimal \n// digits\
    \ that are primes (prime number, or a prime, is a natural number \n// greater\
    \ than 1 that is not a product of two smaller natural numbers).\n// Hexadecimal\
    \ digits are 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, A, B, C, D, E, F.\n// Prime numbers\
    \ are 2, 3, 5, 7, 11, 13, 17,...\n// So you have to determine a number of the\
    \ following digits: 2, 3, 5, 7, \n// B (=decimal 11), D (=decimal 13).\n// Note:\
    \ you may assume the input is always correct or empty string, \n// and symbols\
    \ A,B,C,D,E,F are always uppercase.\n// Examples:\n// For num = \"AB\" the output\
    \ should be 1.\n// For num = \"1077E\" the output should be 2.\n// For num = \"\
    ABED1A33\" the output should be 4.\n// For num = \"123456789ABCDEF0\" the output\
    \ should be 6.\n// For num = \"2020\" the output should be 2.\nfunction hex_key($num)\
    \ {\n    $hex = array(\n        \"0\" => 0,\n        \"1\" => 1,\n        \"2\"\
    \ => 2,\n        \"3\" => 3,\n        \"4\" => 4,\n        \"5\" => 5,\n     \
    \   \"6\" => 6,\n        \"7\" => 7,\n        \"8\" => 8,\n        \"9\" => 9,\n\
    \        \"A\" => 10,\n        \"B\" => 11,\n        \"C\" => 12,\n        \"\
    D\" => 13,\n        \"E\" => 14,\n        \"F\" => 15\n    );\n    $prime = array(2,\
    \ 3, 5, 7, 11, 13);\n    $count = 0;\n    $num = str_split($num);\n    foreach\
    \ ($num as $key => $value) {\n        if (in_array($hex[$value], $prime)) {\n\
    \            $count++;\n        }\n    }\n    return $count;\n}\necho hex_key(\"\
    AB\") . \"<br>\";\necho hex_key(\"1077E\") . \"<br>\";\necho hex_key(\"ABED1A33\"\
    ) . \"<br>\";\necho hex_key(\"123456789ABCDEF0\") . \"<br>\";\necho hex_key(\"\
    2020\") . \"<br>\";\nfunction candidate(...$args) {\n    return hex_key(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"AB\") !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"1077E\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ABED1A33\") !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2020\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"123456789ABCDEF0\") !== 6) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"112233445566778899AABBCCDDEEFF00\"\
    ) !== 12) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: 1<br>2<br>4<br>6<br>2<br>
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You have been tasked to write a function that receives \n//\
    \ a hexadecimal number as a string and counts the number of hexadecimal \n// digits\
    \ that are primes (prime number, or a prime, is a natural number \n// greater\
    \ than 1 that is not a product of two smaller natural numbers).\n// Hexadecimal\
    \ digits are 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, A, B, C, D, E, F.\n// Prime numbers\
    \ are 2, 3, 5, 7, 11, 13, 17,...\n// So you have to determine a number of the\
    \ following digits: 2, 3, 5, 7, \n// B (=decimal 11), D (=decimal 13).\n// Note:\
    \ you may assume the input is always correct or empty string, \n// and symbols\
    \ A,B,C,D,E,F are always uppercase.\n// Examples:\n// For num = \"AB\" the output\
    \ should be 1.\n// For num = \"1077E\" the output should be 2.\n// For num = \"\
    ABED1A33\" the output should be 4.\n// For num = \"123456789ABCDEF0\" the output\
    \ should be 6.\n// For num = \"2020\" the output should be 2.\nfunction hex_key($num)\
    \ {\n    $hex = array(\n        '0' => 0,\n        '1' => 1,\n        '2' => 2,\n\
    \        '3' => 3,\n        '4' => 4,\n        '5' => 5,\n        '6' => 6,\n\
    \        '7' => 7,\n        '8' => 8,\n        '9' => 9,\n        'A' => 10,\n\
    \        'B' => 11,\n        'C' => 12,\n        'D' => 13,\n        'E' => 14,\n\
    \        'F' => 15\n    );\n    $primes = array(2, 3, 5, 7, 11, 13);\n    $count\
    \ = 0;\n    for ($i = 0; $i < strlen($num); $i++) {\n        if (in_array($hex[$num[$i]],\
    \ $primes)) {\n            $count++;\n        }\n    }\n    return $count;\n}\n\
    echo hex_key(\"AB\") . \"<br>\";\necho hex_key(\"1077E\") . \"<br>\";\necho hex_key(\"\
    ABED1A33\") . \"<br>\";\necho hex_key(\"123456789ABCDEF0\") . \"<br>\";\necho\
    \ hex_key(\"2020\") . \"<br>\";\nfunction candidate(...$args) {\n    return hex_key(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"AB\") !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"1077E\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ABED1A33\") !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2020\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"123456789ABCDEF0\") !== 6) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"112233445566778899AABBCCDDEEFF00\"\
    ) !== 12) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: 1<br>2<br>4<br>6<br>2<br>
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You have been tasked to write a function that receives \n//\
    \ a hexadecimal number as a string and counts the number of hexadecimal \n// digits\
    \ that are primes (prime number, or a prime, is a natural number \n// greater\
    \ than 1 that is not a product of two smaller natural numbers).\n// Hexadecimal\
    \ digits are 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, A, B, C, D, E, F.\n// Prime numbers\
    \ are 2, 3, 5, 7, 11, 13, 17,...\n// So you have to determine a number of the\
    \ following digits: 2, 3, 5, 7, \n// B (=decimal 11), D (=decimal 13).\n// Note:\
    \ you may assume the input is always correct or empty string, \n// and symbols\
    \ A,B,C,D,E,F are always uppercase.\n// Examples:\n// For num = \"AB\" the output\
    \ should be 1.\n// For num = \"1077E\" the output should be 2.\n// For num = \"\
    ABED1A33\" the output should be 4.\n// For num = \"123456789ABCDEF0\" the output\
    \ should be 6.\n// For num = \"2020\" the output should be 2.\nfunction hex_key($num)\
    \ {\n    $hex_key = array(\n        \"0\" => 0,\n        \"1\" => 1,\n       \
    \ \"2\" => 2,\n        \"3\" => 3,\n        \"4\" => 4,\n        \"5\" => 5,\n\
    \        \"6\" => 6,\n        \"7\" => 7,\n        \"8\" => 8,\n        \"9\"\
    \ => 9,\n        \"A\" => 10,\n        \"B\" => 11,\n        \"C\" => 12,\n  \
    \      \"D\" => 13,\n        \"E\" => 14,\n        \"F\" => 15\n    );\n    return\
    \ $hex_key[$num];\n}\nfunction candidate(...$args) {\n    return hex_key(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"AB\") !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"1077E\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ABED1A33\") !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2020\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"123456789ABCDEF0\") !== 6) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"112233445566778899AABBCCDDEEFF00\"\
    ) !== 12) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Warning:  Undefined array key \"AB\" in /tmp/tmplvh_q3q3.php on line\
    \ 37\nPHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmplvh_q3q3.php:44\n\
    Stack trace:\n#0 /tmp/tmplvh_q3q3.php(52): test()\n#1 {main}\n  thrown in /tmp/tmplvh_q3q3.php\
    \ on line 44\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You have been tasked to write a function that receives \n//\
    \ a hexadecimal number as a string and counts the number of hexadecimal \n// digits\
    \ that are primes (prime number, or a prime, is a natural number \n// greater\
    \ than 1 that is not a product of two smaller natural numbers).\n// Hexadecimal\
    \ digits are 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, A, B, C, D, E, F.\n// Prime numbers\
    \ are 2, 3, 5, 7, 11, 13, 17,...\n// So you have to determine a number of the\
    \ following digits: 2, 3, 5, 7, \n// B (=decimal 11), D (=decimal 13).\n// Note:\
    \ you may assume the input is always correct or empty string, \n// and symbols\
    \ A,B,C,D,E,F are always uppercase.\n// Examples:\n// For num = \"AB\" the output\
    \ should be 1.\n// For num = \"1077E\" the output should be 2.\n// For num = \"\
    ABED1A33\" the output should be 4.\n// For num = \"123456789ABCDEF0\" the output\
    \ should be 6.\n// For num = \"2020\" the output should be 2.\nfunction hex_key($num)\
    \ {\n    $hex_key = array(\n        \"0\" => 0,\n        \"1\" => 1,\n       \
    \ \"2\" => 2,\n        \"3\" => 3,\n        \"4\" => 4,\n        \"5\" => 5,\n\
    \        \"6\" => 6,\n        \"7\" => 7,\n        \"8\" => 8,\n        \"9\"\
    \ => 9,\n        \"A\" => 10,\n        \"B\" => 11,\n        \"C\" => 12,\n  \
    \      \"D\" => 13,\n        \"E\" => 14,\n        \"F\" => 15\n    );\n    return\
    \ $hex_key[$num];\n}\nfunction candidate(...$args) {\n    return hex_key(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"AB\") !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"1077E\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ABED1A33\") !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2020\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"123456789ABCDEF0\") !== 6) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"112233445566778899AABBCCDDEEFF00\"\
    ) !== 12) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Warning:  Undefined array key \"AB\" in /tmp/tmpznc7n2t5.php on line\
    \ 37\nPHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpznc7n2t5.php:44\n\
    Stack trace:\n#0 /tmp/tmpznc7n2t5.php(52): test()\n#1 {main}\n  thrown in /tmp/tmpznc7n2t5.php\
    \ on line 44\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You have been tasked to write a function that receives \n//\
    \ a hexadecimal number as a string and counts the number of hexadecimal \n// digits\
    \ that are primes (prime number, or a prime, is a natural number \n// greater\
    \ than 1 that is not a product of two smaller natural numbers).\n// Hexadecimal\
    \ digits are 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, A, B, C, D, E, F.\n// Prime numbers\
    \ are 2, 3, 5, 7, 11, 13, 17,...\n// So you have to determine a number of the\
    \ following digits: 2, 3, 5, 7, \n// B (=decimal 11), D (=decimal 13).\n// Note:\
    \ you may assume the input is always correct or empty string, \n// and symbols\
    \ A,B,C,D,E,F are always uppercase.\n// Examples:\n// For num = \"AB\" the output\
    \ should be 1.\n// For num = \"1077E\" the output should be 2.\n// For num = \"\
    ABED1A33\" the output should be 4.\n// For num = \"123456789ABCDEF0\" the output\
    \ should be 6.\n// For num = \"2020\" the output should be 2.\nfunction hex_key($num)\
    \ {\n    $hex_key = array(\n        '0' => 0,\n        '1' => 1,\n        '2'\
    \ => 2,\n        '3' => 3,\n        '4' => 4,\n        '5' => 5,\n        '6'\
    \ => 6,\n        '7' => 7,\n        '8' => 8,\n        '9' => 9,\n        'A'\
    \ => 10,\n        'B' => 11,\n        'C' => 12,\n        'D' => 13,\n       \
    \ 'E' => 14,\n        'F' => 15\n    );\n    return $hex_key[$num];\n}\nfunction\
    \ candidate(...$args) {\n    return hex_key(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"AB\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"1077E\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ABED1A33\") !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"2020\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"123456789ABCDEF0\") !== 6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"112233445566778899AABBCCDDEEFF00\") !==\
    \ 12) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Warning:  Undefined array key \"AB\" in /tmp/tmprwaoldxw.php on line\
    \ 37\nPHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmprwaoldxw.php:44\n\
    Stack trace:\n#0 /tmp/tmprwaoldxw.php(52): test()\n#1 {main}\n  thrown in /tmp/tmprwaoldxw.php\
    \ on line 44\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You have been tasked to write a function that receives \n//\
    \ a hexadecimal number as a string and counts the number of hexadecimal \n// digits\
    \ that are primes (prime number, or a prime, is a natural number \n// greater\
    \ than 1 that is not a product of two smaller natural numbers).\n// Hexadecimal\
    \ digits are 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, A, B, C, D, E, F.\n// Prime numbers\
    \ are 2, 3, 5, 7, 11, 13, 17,...\n// So you have to determine a number of the\
    \ following digits: 2, 3, 5, 7, \n// B (=decimal 11), D (=decimal 13).\n// Note:\
    \ you may assume the input is always correct or empty string, \n// and symbols\
    \ A,B,C,D,E,F are always uppercase.\n// Examples:\n// For num = \"AB\" the output\
    \ should be 1.\n// For num = \"1077E\" the output should be 2.\n// For num = \"\
    ABED1A33\" the output should be 4.\n// For num = \"123456789ABCDEF0\" the output\
    \ should be 6.\n// For num = \"2020\" the output should be 2.\nfunction hex_key($num)\
    \ {\n    $hex = [\n        '0' => 0,\n        '1' => 1,\n        '2' => 2,\n \
    \       '3' => 3,\n        '4' => 4,\n        '5' => 5,\n        '6' => 6,\n \
    \       '7' => 7,\n        '8' => 8,\n        '9' => 9,\n        'A' => 10,\n\
    \        'B' => 11,\n        'C' => 12,\n        'D' => 13,\n        'E' => 14,\n\
    \        'F' => 15\n    ];\n    $primes = [2, 3, 5, 7, 11, 13];\n    $count =\
    \ 0;\n    for ($i = 0; $i < strlen($num); $i++) {\n        if (in_array($hex[$num[$i]],\
    \ $primes)) {\n            $count++;\n        }\n    }\n    return $count;\n}\n\
    echo hex_key(\"AB\") . \"<br>\";\necho hex_key(\"1077E\") . \"<br>\";\necho hex_key(\"\
    ABED1A33\") . \"<br>\";\necho hex_key(\"123456789ABCDEF0\") . \"<br>\";\necho\
    \ hex_key(\"2020\") . \"<br>\";\nfunction candidate(...$args) {\n    return hex_key(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"AB\") !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"1077E\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ABED1A33\") !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2020\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"123456789ABCDEF0\") !== 6) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"112233445566778899AABBCCDDEEFF00\"\
    ) !== 12) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: 1<br>2<br>4<br>6<br>2<br>
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You have been tasked to write a function that receives \n//\
    \ a hexadecimal number as a string and counts the number of hexadecimal \n// digits\
    \ that are primes (prime number, or a prime, is a natural number \n// greater\
    \ than 1 that is not a product of two smaller natural numbers).\n// Hexadecimal\
    \ digits are 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, A, B, C, D, E, F.\n// Prime numbers\
    \ are 2, 3, 5, 7, 11, 13, 17,...\n// So you have to determine a number of the\
    \ following digits: 2, 3, 5, 7, \n// B (=decimal 11), D (=decimal 13).\n// Note:\
    \ you may assume the input is always correct or empty string, \n// and symbols\
    \ A,B,C,D,E,F are always uppercase.\n// Examples:\n// For num = \"AB\" the output\
    \ should be 1.\n// For num = \"1077E\" the output should be 2.\n// For num = \"\
    ABED1A33\" the output should be 4.\n// For num = \"123456789ABCDEF0\" the output\
    \ should be 6.\n// For num = \"2020\" the output should be 2.\nfunction hex_key($num)\
    \ {\n    $hex_key = array(\n        '0' => 0,\n        '1' => 1,\n        '2'\
    \ => 2,\n        '3' => 3,\n        '4' => 4,\n        '5' => 5,\n        '6'\
    \ => 6,\n        '7' => 7,\n        '8' => 8,\n        '9' => 9,\n        'A'\
    \ => 10,\n        'B' => 11,\n        'C' => 12,\n        'D' => 13,\n       \
    \ 'E' => 14,\n        'F' => 15\n    );\n    return $hex_key[$num];\n}\nfunction\
    \ candidate(...$args) {\n    return hex_key(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"AB\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"1077E\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ABED1A33\") !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"2020\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"123456789ABCDEF0\") !== 6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"112233445566778899AABBCCDDEEFF00\") !==\
    \ 12) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Warning:  Undefined array key \"AB\" in /tmp/tmp45vxrcbg.php on line\
    \ 37\nPHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp45vxrcbg.php:44\n\
    Stack trace:\n#0 /tmp/tmp45vxrcbg.php(52): test()\n#1 {main}\n  thrown in /tmp/tmp45vxrcbg.php\
    \ on line 44\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You have been tasked to write a function that receives \n//\
    \ a hexadecimal number as a string and counts the number of hexadecimal \n// digits\
    \ that are primes (prime number, or a prime, is a natural number \n// greater\
    \ than 1 that is not a product of two smaller natural numbers).\n// Hexadecimal\
    \ digits are 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, A, B, C, D, E, F.\n// Prime numbers\
    \ are 2, 3, 5, 7, 11, 13, 17,...\n// So you have to determine a number of the\
    \ following digits: 2, 3, 5, 7, \n// B (=decimal 11), D (=decimal 13).\n// Note:\
    \ you may assume the input is always correct or empty string, \n// and symbols\
    \ A,B,C,D,E,F are always uppercase.\n// Examples:\n// For num = \"AB\" the output\
    \ should be 1.\n// For num = \"1077E\" the output should be 2.\n// For num = \"\
    ABED1A33\" the output should be 4.\n// For num = \"123456789ABCDEF0\" the output\
    \ should be 6.\n// For num = \"2020\" the output should be 2.\nfunction hex_key($num)\
    \ {\n    $hex = array(\n        \"0\" => 0,\n        \"1\" => 1,\n        \"2\"\
    \ => 2,\n        \"3\" => 3,\n        \"4\" => 4,\n        \"5\" => 5,\n     \
    \   \"6\" => 6,\n        \"7\" => 7,\n        \"8\" => 8,\n        \"9\" => 9,\n\
    \        \"A\" => 10,\n        \"B\" => 11,\n        \"C\" => 12,\n        \"\
    D\" => 13,\n        \"E\" => 14,\n        \"F\" => 15\n    );\n    $primes = array(2,\
    \ 3, 5, 7, 11, 13);\n    $count = 0;\n    for ($i = 0; $i < strlen($num); $i++)\
    \ {\n        if (in_array($hex[$num[$i]], $primes)) {\n            $count++;\n\
    \        }\n    }\n    return $count;\n}\necho hex_key(\"AB\") . \"<br>\";\necho\
    \ hex_key(\"1077E\") . \"<br>\";\necho hex_key(\"ABED1A33\") . \"<br>\";\necho\
    \ hex_key(\"123456789ABCDEF0\") . \"<br>\";\necho hex_key(\"2020\") . \"<br>\"\
    ;\nfunction candidate(...$args) {\n    return hex_key(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"AB\") !== 1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"1077E\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ABED1A33\") !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2020\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"123456789ABCDEF0\") !== 6) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"112233445566778899AABBCCDDEEFF00\"\
    ) !== 12) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: 1<br>2<br>4<br>6<br>2<br>
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You have been tasked to write a function that receives \n//\
    \ a hexadecimal number as a string and counts the number of hexadecimal \n// digits\
    \ that are primes (prime number, or a prime, is a natural number \n// greater\
    \ than 1 that is not a product of two smaller natural numbers).\n// Hexadecimal\
    \ digits are 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, A, B, C, D, E, F.\n// Prime numbers\
    \ are 2, 3, 5, 7, 11, 13, 17,...\n// So you have to determine a number of the\
    \ following digits: 2, 3, 5, 7, \n// B (=decimal 11), D (=decimal 13).\n// Note:\
    \ you may assume the input is always correct or empty string, \n// and symbols\
    \ A,B,C,D,E,F are always uppercase.\n// Examples:\n// For num = \"AB\" the output\
    \ should be 1.\n// For num = \"1077E\" the output should be 2.\n// For num = \"\
    ABED1A33\" the output should be 4.\n// For num = \"123456789ABCDEF0\" the output\
    \ should be 6.\n// For num = \"2020\" the output should be 2.\nfunction hex_key($num)\
    \ {\n    $hex_key = [\n        '0' => 0,\n        '1' => 1,\n        '2' => 2,\n\
    \        '3' => 3,\n        '4' => 4,\n        '5' => 5,\n        '6' => 6,\n\
    \        '7' => 7,\n        '8' => 8,\n        '9' => 9,\n        'A' => 10,\n\
    \        'B' => 11,\n        'C' => 12,\n        'D' => 13,\n        'E' => 14,\n\
    \        'F' => 15\n    ];\n    return $hex_key[$num];\n}\nfunction candidate(...$args)\
    \ {\n    return hex_key(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    AB\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1077E\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ABED1A33\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2020\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    123456789ABCDEF0\") !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"112233445566778899AABBCCDDEEFF00\") !== 12) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Warning:  Undefined array key \"AB\" in /tmp/tmpi_s7sre6.php on line\
    \ 37\nPHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpi_s7sre6.php:44\n\
    Stack trace:\n#0 /tmp/tmpi_s7sre6.php(52): test()\n#1 {main}\n  thrown in /tmp/tmpi_s7sre6.php\
    \ on line 44\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You have been tasked to write a function that receives \n//\
    \ a hexadecimal number as a string and counts the number of hexadecimal \n// digits\
    \ that are primes (prime number, or a prime, is a natural number \n// greater\
    \ than 1 that is not a product of two smaller natural numbers).\n// Hexadecimal\
    \ digits are 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, A, B, C, D, E, F.\n// Prime numbers\
    \ are 2, 3, 5, 7, 11, 13, 17,...\n// So you have to determine a number of the\
    \ following digits: 2, 3, 5, 7, \n// B (=decimal 11), D (=decimal 13).\n// Note:\
    \ you may assume the input is always correct or empty string, \n// and symbols\
    \ A,B,C,D,E,F are always uppercase.\n// Examples:\n// For num = \"AB\" the output\
    \ should be 1.\n// For num = \"1077E\" the output should be 2.\n// For num = \"\
    ABED1A33\" the output should be 4.\n// For num = \"123456789ABCDEF0\" the output\
    \ should be 6.\n// For num = \"2020\" the output should be 2.\nfunction hex_key($num)\
    \ {\n    $hex = array(\n        '0' => 0,\n        '1' => 1,\n        '2' => 2,\n\
    \        '3' => 3,\n        '4' => 4,\n        '5' => 5,\n        '6' => 6,\n\
    \        '7' => 7,\n        '8' => 8,\n        '9' => 9,\n        'A' => 10,\n\
    \        'B' => 11,\n        'C' => 12,\n        'D' => 13,\n        'E' => 14,\n\
    \        'F' => 15\n    );\n    $prime = array(2, 3, 5, 7, 11, 13);\n    $count\
    \ = 0;\n    for ($i = 0; $i < strlen($num); $i++) {\n        if (in_array($hex[$num[$i]],\
    \ $prime)) {\n            $count++;\n        }\n    }\n    return $count;\n}\n\
    echo hex_key(\"AB\") . \"<br>\";\necho hex_key(\"1077E\") . \"<br>\";\necho hex_key(\"\
    ABED1A33\") . \"<br>\";\necho hex_key(\"123456789ABCDEF0\") . \"<br>\";\necho\
    \ hex_key(\"2020\") . \"<br>\";\nfunction candidate(...$args) {\n    return hex_key(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"AB\") !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"1077E\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ABED1A33\") !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2020\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"123456789ABCDEF0\") !== 6) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"112233445566778899AABBCCDDEEFF00\"\
    ) !== 12) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: 1<br>2<br>4<br>6<br>2<br>
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You have been tasked to write a function that receives \n//\
    \ a hexadecimal number as a string and counts the number of hexadecimal \n// digits\
    \ that are primes (prime number, or a prime, is a natural number \n// greater\
    \ than 1 that is not a product of two smaller natural numbers).\n// Hexadecimal\
    \ digits are 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, A, B, C, D, E, F.\n// Prime numbers\
    \ are 2, 3, 5, 7, 11, 13, 17,...\n// So you have to determine a number of the\
    \ following digits: 2, 3, 5, 7, \n// B (=decimal 11), D (=decimal 13).\n// Note:\
    \ you may assume the input is always correct or empty string, \n// and symbols\
    \ A,B,C,D,E,F are always uppercase.\n// Examples:\n// For num = \"AB\" the output\
    \ should be 1.\n// For num = \"1077E\" the output should be 2.\n// For num = \"\
    ABED1A33\" the output should be 4.\n// For num = \"123456789ABCDEF0\" the output\
    \ should be 6.\n// For num = \"2020\" the output should be 2.\nfunction hex_key($num)\
    \ {\n    $hex_key = array(\n        \"A\" => 10,\n        \"B\" => 11,\n     \
    \   \"C\" => 12,\n        \"D\" => 13,\n        \"E\" => 14,\n        \"F\" =>\
    \ 15\n    );\n    return $hex_key[$num];\n}\nfunction candidate(...$args) {\n\
    \    return hex_key(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    AB\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1077E\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ABED1A33\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2020\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    123456789ABCDEF0\") !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"112233445566778899AABBCCDDEEFF00\") !== 12) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Warning:  Undefined array key \"AB\" in /tmp/tmpfcacuyvw.php on line\
    \ 27\nPHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpfcacuyvw.php:34\n\
    Stack trace:\n#0 /tmp/tmpfcacuyvw.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpfcacuyvw.php\
    \ on line 34\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You have been tasked to write a function that receives \n//\
    \ a hexadecimal number as a string and counts the number of hexadecimal \n// digits\
    \ that are primes (prime number, or a prime, is a natural number \n// greater\
    \ than 1 that is not a product of two smaller natural numbers).\n// Hexadecimal\
    \ digits are 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, A, B, C, D, E, F.\n// Prime numbers\
    \ are 2, 3, 5, 7, 11, 13, 17,...\n// So you have to determine a number of the\
    \ following digits: 2, 3, 5, 7, \n// B (=decimal 11), D (=decimal 13).\n// Note:\
    \ you may assume the input is always correct or empty string, \n// and symbols\
    \ A,B,C,D,E,F are always uppercase.\n// Examples:\n// For num = \"AB\" the output\
    \ should be 1.\n// For num = \"1077E\" the output should be 2.\n// For num = \"\
    ABED1A33\" the output should be 4.\n// For num = \"123456789ABCDEF0\" the output\
    \ should be 6.\n// For num = \"2020\" the output should be 2.\nfunction hex_key($num)\
    \ {\n    $hex_key = array(\n        '0' => 0,\n        '1' => 1,\n        '2'\
    \ => 2,\n        '3' => 3,\n        '4' => 4,\n        '5' => 5,\n        '6'\
    \ => 6,\n        '7' => 7,\n        '8' => 8,\n        '9' => 9,\n        'A'\
    \ => 10,\n        'B' => 11,\n        'C' => 12,\n        'D' => 13,\n       \
    \ 'E' => 14,\n        'F' => 15\n    );\n    return $hex_key[$num];\n}\nfunction\
    \ candidate(...$args) {\n    return hex_key(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"AB\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"1077E\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ABED1A33\") !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"2020\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"123456789ABCDEF0\") !== 6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"112233445566778899AABBCCDDEEFF00\") !==\
    \ 12) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Warning:  Undefined array key \"AB\" in /tmp/tmpcx6e4o35.php on line\
    \ 37\nPHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpcx6e4o35.php:44\n\
    Stack trace:\n#0 /tmp/tmpcx6e4o35.php(52): test()\n#1 {main}\n  thrown in /tmp/tmpcx6e4o35.php\
    \ on line 44\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You have been tasked to write a function that receives \n//\
    \ a hexadecimal number as a string and counts the number of hexadecimal \n// digits\
    \ that are primes (prime number, or a prime, is a natural number \n// greater\
    \ than 1 that is not a product of two smaller natural numbers).\n// Hexadecimal\
    \ digits are 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, A, B, C, D, E, F.\n// Prime numbers\
    \ are 2, 3, 5, 7, 11, 13, 17,...\n// So you have to determine a number of the\
    \ following digits: 2, 3, 5, 7, \n// B (=decimal 11), D (=decimal 13).\n// Note:\
    \ you may assume the input is always correct or empty string, \n// and symbols\
    \ A,B,C,D,E,F are always uppercase.\n// Examples:\n// For num = \"AB\" the output\
    \ should be 1.\n// For num = \"1077E\" the output should be 2.\n// For num = \"\
    ABED1A33\" the output should be 4.\n// For num = \"123456789ABCDEF0\" the output\
    \ should be 6.\n// For num = \"2020\" the output should be 2.\nfunction hex_key($num)\
    \ {\n    $hex = array(\n        '0' => 0,\n        '1' => 1,\n        '2' => 2,\n\
    \        '3' => 3,\n        '4' => 4,\n        '5' => 5,\n        '6' => 6,\n\
    \        '7' => 7,\n        '8' => 8,\n        '9' => 9,\n        'A' => 10,\n\
    \        'B' => 11,\n        'C' => 12,\n        'D' => 13,\n        'E' => 14,\n\
    \        'F' => 15\n    );\n    $primes = array(2, 3, 5, 7, 11, 13);\n    $count\
    \ = 0;\n    for ($i = 0; $i < strlen($num); $i++) {\n        if (in_array($hex[$num[$i]],\
    \ $primes)) {\n            $count++;\n        }\n    }\n    return $count;\n}\n\
    echo hex_key(\"AB\");\necho \"<br>\";\necho hex_key(\"1077E\");\necho \"<br>\"\
    ;\necho hex_key(\"ABED1A33\");\necho \"<br>\";\necho hex_key(\"123456789ABCDEF0\"\
    );\necho \"<br>\";\necho hex_key(\"2020\");\nfunction candidate(...$args) {\n\
    \    return hex_key(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    AB\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1077E\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ABED1A33\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2020\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    123456789ABCDEF0\") !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"112233445566778899AABBCCDDEEFF00\") !== 12) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: 1<br>2<br>4<br>6<br>2
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You have been tasked to write a function that receives \n//\
    \ a hexadecimal number as a string and counts the number of hexadecimal \n// digits\
    \ that are primes (prime number, or a prime, is a natural number \n// greater\
    \ than 1 that is not a product of two smaller natural numbers).\n// Hexadecimal\
    \ digits are 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, A, B, C, D, E, F.\n// Prime numbers\
    \ are 2, 3, 5, 7, 11, 13, 17,...\n// So you have to determine a number of the\
    \ following digits: 2, 3, 5, 7, \n// B (=decimal 11), D (=decimal 13).\n// Note:\
    \ you may assume the input is always correct or empty string, \n// and symbols\
    \ A,B,C,D,E,F are always uppercase.\n// Examples:\n// For num = \"AB\" the output\
    \ should be 1.\n// For num = \"1077E\" the output should be 2.\n// For num = \"\
    ABED1A33\" the output should be 4.\n// For num = \"123456789ABCDEF0\" the output\
    \ should be 6.\n// For num = \"2020\" the output should be 2.\nfunction hex_key($num)\
    \ {\n    $hex_key = [\n        '0' => 0,\n        '1' => 1,\n        '2' => 2,\n\
    \        '3' => 3,\n        '4' => 4,\n        '5' => 5,\n        '6' => 6,\n\
    \        '7' => 7,\n        '8' => 8,\n        '9' => 9,\n        'A' => 10,\n\
    \        'B' => 11,\n        'C' => 12,\n        'D' => 13,\n        'E' => 14,\n\
    \        'F' => 15\n    ];\n    return $hex_key[$num];\n}\nfunction candidate(...$args)\
    \ {\n    return hex_key(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    AB\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1077E\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ABED1A33\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2020\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    123456789ABCDEF0\") !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"112233445566778899AABBCCDDEEFF00\") !== 12) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Warning:  Undefined array key \"AB\" in /tmp/tmp9kko6ink.php on line\
    \ 37\nPHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp9kko6ink.php:44\n\
    Stack trace:\n#0 /tmp/tmp9kko6ink.php(52): test()\n#1 {main}\n  thrown in /tmp/tmp9kko6ink.php\
    \ on line 44\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You have been tasked to write a function that receives \n//\
    \ a hexadecimal number as a string and counts the number of hexadecimal \n// digits\
    \ that are primes (prime number, or a prime, is a natural number \n// greater\
    \ than 1 that is not a product of two smaller natural numbers).\n// Hexadecimal\
    \ digits are 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, A, B, C, D, E, F.\n// Prime numbers\
    \ are 2, 3, 5, 7, 11, 13, 17,...\n// So you have to determine a number of the\
    \ following digits: 2, 3, 5, 7, \n// B (=decimal 11), D (=decimal 13).\n// Note:\
    \ you may assume the input is always correct or empty string, \n// and symbols\
    \ A,B,C,D,E,F are always uppercase.\n// Examples:\n// For num = \"AB\" the output\
    \ should be 1.\n// For num = \"1077E\" the output should be 2.\n// For num = \"\
    ABED1A33\" the output should be 4.\n// For num = \"123456789ABCDEF0\" the output\
    \ should be 6.\n// For num = \"2020\" the output should be 2.\nfunction hex_key($num)\
    \ {\n    $hex_key = array(\n        '0' => 0,\n        '1' => 1,\n        '2'\
    \ => 2,\n        '3' => 3,\n        '4' => 4,\n        '5' => 5,\n        '6'\
    \ => 6,\n        '7' => 7,\n        '8' => 8,\n        '9' => 9,\n        'A'\
    \ => 10,\n        'B' => 11,\n        'C' => 12,\n        'D' => 13,\n       \
    \ 'E' => 14,\n        'F' => 15\n    );\n    return $hex_key[$num];\n}\nfunction\
    \ candidate(...$args) {\n    return hex_key(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"AB\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"1077E\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ABED1A33\") !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"2020\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"123456789ABCDEF0\") !== 6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"112233445566778899AABBCCDDEEFF00\") !==\
    \ 12) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Warning:  Undefined array key \"AB\" in /tmp/tmpwans11i9.php on line\
    \ 37\nPHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpwans11i9.php:44\n\
    Stack trace:\n#0 /tmp/tmpwans11i9.php(52): test()\n#1 {main}\n  thrown in /tmp/tmpwans11i9.php\
    \ on line 44\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You have been tasked to write a function that receives \n//\
    \ a hexadecimal number as a string and counts the number of hexadecimal \n// digits\
    \ that are primes (prime number, or a prime, is a natural number \n// greater\
    \ than 1 that is not a product of two smaller natural numbers).\n// Hexadecimal\
    \ digits are 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, A, B, C, D, E, F.\n// Prime numbers\
    \ are 2, 3, 5, 7, 11, 13, 17,...\n// So you have to determine a number of the\
    \ following digits: 2, 3, 5, 7, \n// B (=decimal 11), D (=decimal 13).\n// Note:\
    \ you may assume the input is always correct or empty string, \n// and symbols\
    \ A,B,C,D,E,F are always uppercase.\n// Examples:\n// For num = \"AB\" the output\
    \ should be 1.\n// For num = \"1077E\" the output should be 2.\n// For num = \"\
    ABED1A33\" the output should be 4.\n// For num = \"123456789ABCDEF0\" the output\
    \ should be 6.\n// For num = \"2020\" the output should be 2.\nfunction hex_key($num)\
    \ {\n    $hex_key = array(\n        '0' => 0,\n        '1' => 1,\n        '2'\
    \ => 2,\n        '3' => 3,\n        '4' => 4,\n        '5' => 5,\n        '6'\
    \ => 6,\n        '7' => 7,\n        '8' => 8,\n        '9' => 9,\n        'A'\
    \ => 10,\n        'B' => 11,\n        'C' => 12,\n        'D' => 13,\n       \
    \ 'E' => 14,\n        'F' => 15\n    );\n    return $hex_key[$num];\n}\nfunction\
    \ candidate(...$args) {\n    return hex_key(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"AB\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"1077E\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ABED1A33\") !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"2020\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"123456789ABCDEF0\") !== 6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"112233445566778899AABBCCDDEEFF00\") !==\
    \ 12) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Warning:  Undefined array key \"AB\" in /tmp/tmp8pnv6f22.php on line\
    \ 37\nPHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp8pnv6f22.php:44\n\
    Stack trace:\n#0 /tmp/tmp8pnv6f22.php(52): test()\n#1 {main}\n  thrown in /tmp/tmp8pnv6f22.php\
    \ on line 44\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You have been tasked to write a function that receives \n//\
    \ a hexadecimal number as a string and counts the number of hexadecimal \n// digits\
    \ that are primes (prime number, or a prime, is a natural number \n// greater\
    \ than 1 that is not a product of two smaller natural numbers).\n// Hexadecimal\
    \ digits are 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, A, B, C, D, E, F.\n// Prime numbers\
    \ are 2, 3, 5, 7, 11, 13, 17,...\n// So you have to determine a number of the\
    \ following digits: 2, 3, 5, 7, \n// B (=decimal 11), D (=decimal 13).\n// Note:\
    \ you may assume the input is always correct or empty string, \n// and symbols\
    \ A,B,C,D,E,F are always uppercase.\n// Examples:\n// For num = \"AB\" the output\
    \ should be 1.\n// For num = \"1077E\" the output should be 2.\n// For num = \"\
    ABED1A33\" the output should be 4.\n// For num = \"123456789ABCDEF0\" the output\
    \ should be 6.\n// For num = \"2020\" the output should be 2.\nfunction hex_key($num)\
    \ {\n    $hex_key = array(\n        'A' => 10,\n        'B' => 11,\n        'C'\
    \ => 12,\n        'D' => 13,\n        'E' => 14,\n        'F' => 15\n    );\n\
    \    return $hex_key[$num];\n}\nfunction candidate(...$args) {\n    return hex_key(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"AB\") !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"1077E\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ABED1A33\") !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2020\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"123456789ABCDEF0\") !== 6) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"112233445566778899AABBCCDDEEFF00\"\
    ) !== 12) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Warning:  Undefined array key \"AB\" in /tmp/tmple2x4889.php on line\
    \ 27\nPHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmple2x4889.php:34\n\
    Stack trace:\n#0 /tmp/tmple2x4889.php(42): test()\n#1 {main}\n  thrown in /tmp/tmple2x4889.php\
    \ on line 34\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You have been tasked to write a function that receives \n//\
    \ a hexadecimal number as a string and counts the number of hexadecimal \n// digits\
    \ that are primes (prime number, or a prime, is a natural number \n// greater\
    \ than 1 that is not a product of two smaller natural numbers).\n// Hexadecimal\
    \ digits are 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, A, B, C, D, E, F.\n// Prime numbers\
    \ are 2, 3, 5, 7, 11, 13, 17,...\n// So you have to determine a number of the\
    \ following digits: 2, 3, 5, 7, \n// B (=decimal 11), D (=decimal 13).\n// Note:\
    \ you may assume the input is always correct or empty string, \n// and symbols\
    \ A,B,C,D,E,F are always uppercase.\n// Examples:\n// For num = \"AB\" the output\
    \ should be 1.\n// For num = \"1077E\" the output should be 2.\n// For num = \"\
    ABED1A33\" the output should be 4.\n// For num = \"123456789ABCDEF0\" the output\
    \ should be 6.\n// For num = \"2020\" the output should be 2.\nfunction hex_key($num)\
    \ {\n    $hex_key = [\n        '0' => 0,\n        '1' => 1,\n        '2' => 2,\n\
    \        '3' => 3,\n        '4' => 4,\n        '5' => 5,\n        '6' => 6,\n\
    \        '7' => 7,\n        '8' => 8,\n        '9' => 9,\n        'A' => 10,\n\
    \        'B' => 11,\n        'C' => 12,\n        'D' => 13,\n        'E' => 14,\n\
    \        'F' => 15\n    ];\n    return $hex_key[$num];\n}\nfunction candidate(...$args)\
    \ {\n    return hex_key(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    AB\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1077E\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ABED1A33\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2020\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    123456789ABCDEF0\") !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"112233445566778899AABBCCDDEEFF00\") !== 12) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Warning:  Undefined array key \"AB\" in /tmp/tmptq_7hihy.php on line\
    \ 37\nPHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmptq_7hihy.php:44\n\
    Stack trace:\n#0 /tmp/tmptq_7hihy.php(52): test()\n#1 {main}\n  thrown in /tmp/tmptq_7hihy.php\
    \ on line 44\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You have been tasked to write a function that receives \n//\
    \ a hexadecimal number as a string and counts the number of hexadecimal \n// digits\
    \ that are primes (prime number, or a prime, is a natural number \n// greater\
    \ than 1 that is not a product of two smaller natural numbers).\n// Hexadecimal\
    \ digits are 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, A, B, C, D, E, F.\n// Prime numbers\
    \ are 2, 3, 5, 7, 11, 13, 17,...\n// So you have to determine a number of the\
    \ following digits: 2, 3, 5, 7, \n// B (=decimal 11), D (=decimal 13).\n// Note:\
    \ you may assume the input is always correct or empty string, \n// and symbols\
    \ A,B,C,D,E,F are always uppercase.\n// Examples:\n// For num = \"AB\" the output\
    \ should be 1.\n// For num = \"1077E\" the output should be 2.\n// For num = \"\
    ABED1A33\" the output should be 4.\n// For num = \"123456789ABCDEF0\" the output\
    \ should be 6.\n// For num = \"2020\" the output should be 2.\nfunction hex_key($num)\
    \ {\n    $hex_key = array(\n        \"0\" => 0,\n        \"1\" => 1,\n       \
    \ \"2\" => 2,\n        \"3\" => 3,\n        \"4\" => 4,\n        \"5\" => 5,\n\
    \        \"6\" => 6,\n        \"7\" => 7,\n        \"8\" => 8,\n        \"9\"\
    \ => 9,\n        \"A\" => 10,\n        \"B\" => 11,\n        \"C\" => 12,\n  \
    \      \"D\" => 13,\n        \"E\" => 14,\n        \"F\" => 15\n    );\n    return\
    \ $hex_key[$num];\n}\nfunction candidate(...$args) {\n    return hex_key(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"AB\") !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"1077E\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ABED1A33\") !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2020\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"123456789ABCDEF0\") !== 6) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"112233445566778899AABBCCDDEEFF00\"\
    ) !== 12) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Warning:  Undefined array key \"AB\" in /tmp/tmpwjodg3jb.php on line\
    \ 37\nPHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpwjodg3jb.php:44\n\
    Stack trace:\n#0 /tmp/tmpwjodg3jb.php(52): test()\n#1 {main}\n  thrown in /tmp/tmpwjodg3jb.php\
    \ on line 44\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You have been tasked to write a function that receives \n//\
    \ a hexadecimal number as a string and counts the number of hexadecimal \n// digits\
    \ that are primes (prime number, or a prime, is a natural number \n// greater\
    \ than 1 that is not a product of two smaller natural numbers).\n// Hexadecimal\
    \ digits are 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, A, B, C, D, E, F.\n// Prime numbers\
    \ are 2, 3, 5, 7, 11, 13, 17,...\n// So you have to determine a number of the\
    \ following digits: 2, 3, 5, 7, \n// B (=decimal 11), D (=decimal 13).\n// Note:\
    \ you may assume the input is always correct or empty string, \n// and symbols\
    \ A,B,C,D,E,F are always uppercase.\n// Examples:\n// For num = \"AB\" the output\
    \ should be 1.\n// For num = \"1077E\" the output should be 2.\n// For num = \"\
    ABED1A33\" the output should be 4.\n// For num = \"123456789ABCDEF0\" the output\
    \ should be 6.\n// For num = \"2020\" the output should be 2.\nfunction hex_key($num)\
    \ {\n    $hex_key = [\n        \"0\" => 0,\n        \"1\" => 1,\n        \"2\"\
    \ => 2,\n        \"3\" => 3,\n        \"4\" => 4,\n        \"5\" => 5,\n     \
    \   \"6\" => 6,\n        \"7\" => 7,\n        \"8\" => 8,\n        \"9\" => 9,\n\
    \        \"A\" => 10,\n        \"B\" => 11,\n        \"C\" => 12,\n        \"\
    D\" => 13,\n        \"E\" => 14,\n        \"F\" => 15\n    ];\n    return $hex_key[$num];\n\
    }\nfunction candidate(...$args) {\n    return hex_key(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"AB\") !== 1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"1077E\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ABED1A33\") !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2020\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"123456789ABCDEF0\") !== 6) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"112233445566778899AABBCCDDEEFF00\"\
    ) !== 12) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Warning:  Undefined array key \"AB\" in /tmp/tmpdiaez7kf.php on line\
    \ 37\nPHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpdiaez7kf.php:44\n\
    Stack trace:\n#0 /tmp/tmpdiaez7kf.php(52): test()\n#1 {main}\n  thrown in /tmp/tmpdiaez7kf.php\
    \ on line 44\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You have been tasked to write a function that receives \n//\
    \ a hexadecimal number as a string and counts the number of hexadecimal \n// digits\
    \ that are primes (prime number, or a prime, is a natural number \n// greater\
    \ than 1 that is not a product of two smaller natural numbers).\n// Hexadecimal\
    \ digits are 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, A, B, C, D, E, F.\n// Prime numbers\
    \ are 2, 3, 5, 7, 11, 13, 17,...\n// So you have to determine a number of the\
    \ following digits: 2, 3, 5, 7, \n// B (=decimal 11), D (=decimal 13).\n// Note:\
    \ you may assume the input is always correct or empty string, \n// and symbols\
    \ A,B,C,D,E,F are always uppercase.\n// Examples:\n// For num = \"AB\" the output\
    \ should be 1.\n// For num = \"1077E\" the output should be 2.\n// For num = \"\
    ABED1A33\" the output should be 4.\n// For num = \"123456789ABCDEF0\" the output\
    \ should be 6.\n// For num = \"2020\" the output should be 2.\nfunction hex_key($num)\
    \ {\n    $hex = array(\n        '0' => 0,\n        '1' => 1,\n        '2' => 2,\n\
    \        '3' => 3,\n        '4' => 4,\n        '5' => 5,\n        '6' => 6,\n\
    \        '7' => 7,\n        '8' => 8,\n        '9' => 9,\n        'A' => 10,\n\
    \        'B' => 11,\n        'C' => 12,\n        'D' => 13,\n        'E' => 14,\n\
    \        'F' => 15\n    );\n    $prime = array(\n        '2' => 2,\n        '3'\
    \ => 3,\n        '5' => 5,\n        '7' => 7,\n        'B' => 11,\n        'D'\
    \ => 13\n    );\n    $count = 0;\n    for ($i = 0; $i < strlen($num); $i++) {\n\
    \        if (array_key_exists($num[$i], $prime)) {\n            $count++;\n  \
    \      }\n    }\n    return $count;\n}\necho hex_key(\"AB\") . \"<br>\";\necho\
    \ hex_key(\"1077E\") . \"<br>\";\necho hex_key(\"ABED1A33\") . \"<br>\";\necho\
    \ hex_key(\"123456789ABCDEF0\") . \"<br>\";\necho hex_key(\"2020\") . \"<br>\"\
    ;\nfunction candidate(...$args) {\n    return hex_key(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"AB\") !== 1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"1077E\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ABED1A33\") !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2020\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"123456789ABCDEF0\") !== 6) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"112233445566778899AABBCCDDEEFF00\"\
    ) !== 12) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: 1<br>2<br>4<br>6<br>2<br>
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You have been tasked to write a function that receives \n//\
    \ a hexadecimal number as a string and counts the number of hexadecimal \n// digits\
    \ that are primes (prime number, or a prime, is a natural number \n// greater\
    \ than 1 that is not a product of two smaller natural numbers).\n// Hexadecimal\
    \ digits are 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, A, B, C, D, E, F.\n// Prime numbers\
    \ are 2, 3, 5, 7, 11, 13, 17,...\n// So you have to determine a number of the\
    \ following digits: 2, 3, 5, 7, \n// B (=decimal 11), D (=decimal 13).\n// Note:\
    \ you may assume the input is always correct or empty string, \n// and symbols\
    \ A,B,C,D,E,F are always uppercase.\n// Examples:\n// For num = \"AB\" the output\
    \ should be 1.\n// For num = \"1077E\" the output should be 2.\n// For num = \"\
    ABED1A33\" the output should be 4.\n// For num = \"123456789ABCDEF0\" the output\
    \ should be 6.\n// For num = \"2020\" the output should be 2.\nfunction hex_key($num)\
    \ {\n    $hex_key = array(\n        '0' => 0,\n        '1' => 1,\n        '2'\
    \ => 2,\n        '3' => 3,\n        '4' => 4,\n        '5' => 5,\n        '6'\
    \ => 6,\n        '7' => 7,\n        '8' => 8,\n        '9' => 9,\n        'A'\
    \ => 10,\n        'B' => 11,\n        'C' => 12,\n        'D' => 13,\n       \
    \ 'E' => 14,\n        'F' => 15\n    );\n    return $hex_key[$num];\n}\nfunction\
    \ candidate(...$args) {\n    return hex_key(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"AB\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"1077E\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ABED1A33\") !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"2020\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"123456789ABCDEF0\") !== 6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"112233445566778899AABBCCDDEEFF00\") !==\
    \ 12) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Warning:  Undefined array key \"AB\" in /tmp/tmp__kpxch5.php on line\
    \ 37\nPHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp__kpxch5.php:44\n\
    Stack trace:\n#0 /tmp/tmp__kpxch5.php(52): test()\n#1 {main}\n  thrown in /tmp/tmp__kpxch5.php\
    \ on line 44\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You have been tasked to write a function that receives \n//\
    \ a hexadecimal number as a string and counts the number of hexadecimal \n// digits\
    \ that are primes (prime number, or a prime, is a natural number \n// greater\
    \ than 1 that is not a product of two smaller natural numbers).\n// Hexadecimal\
    \ digits are 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, A, B, C, D, E, F.\n// Prime numbers\
    \ are 2, 3, 5, 7, 11, 13, 17,...\n// So you have to determine a number of the\
    \ following digits: 2, 3, 5, 7, \n// B (=decimal 11), D (=decimal 13).\n// Note:\
    \ you may assume the input is always correct or empty string, \n// and symbols\
    \ A,B,C,D,E,F are always uppercase.\n// Examples:\n// For num = \"AB\" the output\
    \ should be 1.\n// For num = \"1077E\" the output should be 2.\n// For num = \"\
    ABED1A33\" the output should be 4.\n// For num = \"123456789ABCDEF0\" the output\
    \ should be 6.\n// For num = \"2020\" the output should be 2.\nfunction hex_key($num)\
    \ {\n    $hex_key = array(\n        '0' => 0,\n        '1' => 1,\n        '2'\
    \ => 2,\n        '3' => 3,\n        '4' => 4,\n        '5' => 5,\n        '6'\
    \ => 6,\n        '7' => 7,\n        '8' => 8,\n        '9' => 9,\n        'A'\
    \ => 10,\n        'B' => 11,\n        'C' => 12,\n        'D' => 13,\n       \
    \ 'E' => 14,\n        'F' => 15\n    );\n    return $hex_key[$num];\n}\nfunction\
    \ candidate(...$args) {\n    return hex_key(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"AB\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"1077E\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ABED1A33\") !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"2020\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"123456789ABCDEF0\") !== 6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"112233445566778899AABBCCDDEEFF00\") !==\
    \ 12) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Warning:  Undefined array key \"AB\" in /tmp/tmprxgn8oix.php on line\
    \ 37\nPHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmprxgn8oix.php:44\n\
    Stack trace:\n#0 /tmp/tmprxgn8oix.php(52): test()\n#1 {main}\n  thrown in /tmp/tmprxgn8oix.php\
    \ on line 44\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You have been tasked to write a function that receives \n//\
    \ a hexadecimal number as a string and counts the number of hexadecimal \n// digits\
    \ that are primes (prime number, or a prime, is a natural number \n// greater\
    \ than 1 that is not a product of two smaller natural numbers).\n// Hexadecimal\
    \ digits are 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, A, B, C, D, E, F.\n// Prime numbers\
    \ are 2, 3, 5, 7, 11, 13, 17,...\n// So you have to determine a number of the\
    \ following digits: 2, 3, 5, 7, \n// B (=decimal 11), D (=decimal 13).\n// Note:\
    \ you may assume the input is always correct or empty string, \n// and symbols\
    \ A,B,C,D,E,F are always uppercase.\n// Examples:\n// For num = \"AB\" the output\
    \ should be 1.\n// For num = \"1077E\" the output should be 2.\n// For num = \"\
    ABED1A33\" the output should be 4.\n// For num = \"123456789ABCDEF0\" the output\
    \ should be 6.\n// For num = \"2020\" the output should be 2.\nfunction hex_key($num)\
    \ {\n    $hex = ['0','1','2','3','4','5','6','7','8','9','A','B','C','D','E','F'];\n\
    \    $prime = [2,3,5,7,11,13];\n    $count = 0;\n    for ($i=0; $i < strlen($num);\
    \ $i++) { \n        if (in_array($num[$i], $hex)) {\n            if (in_array($num[$i],\
    \ $prime)) {\n                $count++;\n            }\n        }\n    }\n   \
    \ return $count;\n}\necho hex_key(\"AB\").\"\\n\";\necho hex_key(\"1077E\").\"\
    \\n\";\necho hex_key(\"ABED1A33\").\"\\n\";\necho hex_key(\"123456789ABCDEF0\"\
    ).\"\\n\";\necho hex_key(\"2020\").\"\\n\";\nfunction candidate(...$args) {\n\
    \    return hex_key(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    AB\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1077E\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ABED1A33\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2020\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    123456789ABCDEF0\") !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"112233445566778899AABBCCDDEEFF00\") !== 12) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "0\n2\n2\n4\n2\n"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpbpb6lt3v.php:41\n\
    Stack trace:\n#0 /tmp/tmpbpb6lt3v.php(49): test()\n#1 {main}\n  thrown in /tmp/tmpbpb6lt3v.php\
    \ on line 41\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You have been tasked to write a function that receives \n//\
    \ a hexadecimal number as a string and counts the number of hexadecimal \n// digits\
    \ that are primes (prime number, or a prime, is a natural number \n// greater\
    \ than 1 that is not a product of two smaller natural numbers).\n// Hexadecimal\
    \ digits are 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, A, B, C, D, E, F.\n// Prime numbers\
    \ are 2, 3, 5, 7, 11, 13, 17,...\n// So you have to determine a number of the\
    \ following digits: 2, 3, 5, 7, \n// B (=decimal 11), D (=decimal 13).\n// Note:\
    \ you may assume the input is always correct or empty string, \n// and symbols\
    \ A,B,C,D,E,F are always uppercase.\n// Examples:\n// For num = \"AB\" the output\
    \ should be 1.\n// For num = \"1077E\" the output should be 2.\n// For num = \"\
    ABED1A33\" the output should be 4.\n// For num = \"123456789ABCDEF0\" the output\
    \ should be 6.\n// For num = \"2020\" the output should be 2.\nfunction hex_key($num)\
    \ {\n    $hex_key = array(\n        \"0\" => 0,\n        \"1\" => 1,\n       \
    \ \"2\" => 2,\n        \"3\" => 3,\n        \"4\" => 4,\n        \"5\" => 5,\n\
    \        \"6\" => 6,\n        \"7\" => 7,\n        \"8\" => 8,\n        \"9\"\
    \ => 9,\n        \"A\" => 10,\n        \"B\" => 11,\n        \"C\" => 12,\n  \
    \      \"D\" => 13,\n        \"E\" => 14,\n        \"F\" => 15\n    );\n    return\
    \ $hex_key[$num];\n}\nfunction candidate(...$args) {\n    return hex_key(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"AB\") !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"1077E\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ABED1A33\") !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2020\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"123456789ABCDEF0\") !== 6) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"112233445566778899AABBCCDDEEFF00\"\
    ) !== 12) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Warning:  Undefined array key \"AB\" in /tmp/tmpa16p8p62.php on line\
    \ 37\nPHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpa16p8p62.php:44\n\
    Stack trace:\n#0 /tmp/tmpa16p8p62.php(52): test()\n#1 {main}\n  thrown in /tmp/tmpa16p8p62.php\
    \ on line 44\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You have been tasked to write a function that receives \n//\
    \ a hexadecimal number as a string and counts the number of hexadecimal \n// digits\
    \ that are primes (prime number, or a prime, is a natural number \n// greater\
    \ than 1 that is not a product of two smaller natural numbers).\n// Hexadecimal\
    \ digits are 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, A, B, C, D, E, F.\n// Prime numbers\
    \ are 2, 3, 5, 7, 11, 13, 17,...\n// So you have to determine a number of the\
    \ following digits: 2, 3, 5, 7, \n// B (=decimal 11), D (=decimal 13).\n// Note:\
    \ you may assume the input is always correct or empty string, \n// and symbols\
    \ A,B,C,D,E,F are always uppercase.\n// Examples:\n// For num = \"AB\" the output\
    \ should be 1.\n// For num = \"1077E\" the output should be 2.\n// For num = \"\
    ABED1A33\" the output should be 4.\n// For num = \"123456789ABCDEF0\" the output\
    \ should be 6.\n// For num = \"2020\" the output should be 2.\nfunction hex_key($num)\
    \ {\n    $hex = array(\n        '0' => 0,\n        '1' => 1,\n        '2' => 2,\n\
    \        '3' => 3,\n        '4' => 4,\n        '5' => 5,\n        '6' => 6,\n\
    \        '7' => 7,\n        '8' => 8,\n        '9' => 9,\n        'A' => 10,\n\
    \        'B' => 11,\n        'C' => 12,\n        'D' => 13,\n        'E' => 14,\n\
    \        'F' => 15\n    );\n    $primes = array(2, 3, 5, 7, 11, 13);\n    $count\
    \ = 0;\n    for ($i = 0; $i < strlen($num); $i++) {\n        if (in_array($hex[$num[$i]],\
    \ $primes)) {\n            $count++;\n        }\n    }\n    return $count;\n}\n\
    echo hex_key(\"AB\") . \"<br>\";\necho hex_key(\"1077E\") . \"<br>\";\necho hex_key(\"\
    ABED1A33\") . \"<br>\";\necho hex_key(\"123456789ABCDEF0\") . \"<br>\";\necho\
    \ hex_key(\"2020\") . \"<br>\";\nfunction candidate(...$args) {\n    return hex_key(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"AB\") !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"1077E\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ABED1A33\") !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2020\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"123456789ABCDEF0\") !== 6) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"112233445566778899AABBCCDDEEFF00\"\
    ) !== 12) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: 1<br>2<br>4<br>6<br>2<br>
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You have been tasked to write a function that receives \n//\
    \ a hexadecimal number as a string and counts the number of hexadecimal \n// digits\
    \ that are primes (prime number, or a prime, is a natural number \n// greater\
    \ than 1 that is not a product of two smaller natural numbers).\n// Hexadecimal\
    \ digits are 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, A, B, C, D, E, F.\n// Prime numbers\
    \ are 2, 3, 5, 7, 11, 13, 17,...\n// So you have to determine a number of the\
    \ following digits: 2, 3, 5, 7, \n// B (=decimal 11), D (=decimal 13).\n// Note:\
    \ you may assume the input is always correct or empty string, \n// and symbols\
    \ A,B,C,D,E,F are always uppercase.\n// Examples:\n// For num = \"AB\" the output\
    \ should be 1.\n// For num = \"1077E\" the output should be 2.\n// For num = \"\
    ABED1A33\" the output should be 4.\n// For num = \"123456789ABCDEF0\" the output\
    \ should be 6.\n// For num = \"2020\" the output should be 2.\nfunction hex_key($num)\
    \ {\n    $hex_key = array(\n        '0' => 0,\n        '1' => 1,\n        '2'\
    \ => 2,\n        '3' => 3,\n        '4' => 4,\n        '5' => 5,\n        '6'\
    \ => 6,\n        '7' => 7,\n        '8' => 8,\n        '9' => 9,\n        'A'\
    \ => 10,\n        'B' => 11,\n        'C' => 12,\n        'D' => 13,\n       \
    \ 'E' => 14,\n        'F' => 15\n    );\n    return $hex_key[$num];\n}\nfunction\
    \ candidate(...$args) {\n    return hex_key(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"AB\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"1077E\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ABED1A33\") !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"2020\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"123456789ABCDEF0\") !== 6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"112233445566778899AABBCCDDEEFF00\") !==\
    \ 12) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Warning:  Undefined array key \"AB\" in /tmp/tmp3kc9myob.php on line\
    \ 37\nPHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp3kc9myob.php:44\n\
    Stack trace:\n#0 /tmp/tmp3kc9myob.php(52): test()\n#1 {main}\n  thrown in /tmp/tmp3kc9myob.php\
    \ on line 44\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You have been tasked to write a function that receives \n//\
    \ a hexadecimal number as a string and counts the number of hexadecimal \n// digits\
    \ that are primes (prime number, or a prime, is a natural number \n// greater\
    \ than 1 that is not a product of two smaller natural numbers).\n// Hexadecimal\
    \ digits are 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, A, B, C, D, E, F.\n// Prime numbers\
    \ are 2, 3, 5, 7, 11, 13, 17,...\n// So you have to determine a number of the\
    \ following digits: 2, 3, 5, 7, \n// B (=decimal 11), D (=decimal 13).\n// Note:\
    \ you may assume the input is always correct or empty string, \n// and symbols\
    \ A,B,C,D,E,F are always uppercase.\n// Examples:\n// For num = \"AB\" the output\
    \ should be 1.\n// For num = \"1077E\" the output should be 2.\n// For num = \"\
    ABED1A33\" the output should be 4.\n// For num = \"123456789ABCDEF0\" the output\
    \ should be 6.\n// For num = \"2020\" the output should be 2.\nfunction hex_key($num)\
    \ {\n    $hex_key = array(\n        \"0\" => 0,\n        \"1\" => 1,\n       \
    \ \"2\" => 2,\n        \"3\" => 3,\n        \"4\" => 4,\n        \"5\" => 5,\n\
    \        \"6\" => 6,\n        \"7\" => 7,\n        \"8\" => 8,\n        \"9\"\
    \ => 9,\n        \"A\" => 10,\n        \"B\" => 11,\n        \"C\" => 12,\n  \
    \      \"D\" => 13,\n        \"E\" => 14,\n        \"F\" => 15\n    );\n    return\
    \ $hex_key[$num];\n}\nfunction candidate(...$args) {\n    return hex_key(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"AB\") !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"1077E\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ABED1A33\") !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2020\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"123456789ABCDEF0\") !== 6) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"112233445566778899AABBCCDDEEFF00\"\
    ) !== 12) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Warning:  Undefined array key \"AB\" in /tmp/tmpxspd3bmn.php on line\
    \ 37\nPHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpxspd3bmn.php:44\n\
    Stack trace:\n#0 /tmp/tmpxspd3bmn.php(52): test()\n#1 {main}\n  thrown in /tmp/tmpxspd3bmn.php\
    \ on line 44\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You have been tasked to write a function that receives \n//\
    \ a hexadecimal number as a string and counts the number of hexadecimal \n// digits\
    \ that are primes (prime number, or a prime, is a natural number \n// greater\
    \ than 1 that is not a product of two smaller natural numbers).\n// Hexadecimal\
    \ digits are 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, A, B, C, D, E, F.\n// Prime numbers\
    \ are 2, 3, 5, 7, 11, 13, 17,...\n// So you have to determine a number of the\
    \ following digits: 2, 3, 5, 7, \n// B (=decimal 11), D (=decimal 13).\n// Note:\
    \ you may assume the input is always correct or empty string, \n// and symbols\
    \ A,B,C,D,E,F are always uppercase.\n// Examples:\n// For num = \"AB\" the output\
    \ should be 1.\n// For num = \"1077E\" the output should be 2.\n// For num = \"\
    ABED1A33\" the output should be 4.\n// For num = \"123456789ABCDEF0\" the output\
    \ should be 6.\n// For num = \"2020\" the output should be 2.\nfunction hex_key($num)\
    \ {\n    $hex_key = array(\n        '0' => 0,\n        '1' => 1,\n        '2'\
    \ => 2,\n        '3' => 3,\n        '4' => 4,\n        '5' => 5,\n        '6'\
    \ => 6,\n        '7' => 7,\n        '8' => 8,\n        '9' => 9,\n        'A'\
    \ => 10,\n        'B' => 11,\n        'C' => 12,\n        'D' => 13,\n       \
    \ 'E' => 14,\n        'F' => 15\n    );\n    return $hex_key[$num];\n}\nfunction\
    \ candidate(...$args) {\n    return hex_key(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"AB\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"1077E\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ABED1A33\") !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"2020\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"123456789ABCDEF0\") !== 6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"112233445566778899AABBCCDDEEFF00\") !==\
    \ 12) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Warning:  Undefined array key \"AB\" in /tmp/tmp2w6o66su.php on line\
    \ 37\nPHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp2w6o66su.php:44\n\
    Stack trace:\n#0 /tmp/tmp2w6o66su.php(52): test()\n#1 {main}\n  thrown in /tmp/tmp2w6o66su.php\
    \ on line 44\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You have been tasked to write a function that receives \n//\
    \ a hexadecimal number as a string and counts the number of hexadecimal \n// digits\
    \ that are primes (prime number, or a prime, is a natural number \n// greater\
    \ than 1 that is not a product of two smaller natural numbers).\n// Hexadecimal\
    \ digits are 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, A, B, C, D, E, F.\n// Prime numbers\
    \ are 2, 3, 5, 7, 11, 13, 17,...\n// So you have to determine a number of the\
    \ following digits: 2, 3, 5, 7, \n// B (=decimal 11), D (=decimal 13).\n// Note:\
    \ you may assume the input is always correct or empty string, \n// and symbols\
    \ A,B,C,D,E,F are always uppercase.\n// Examples:\n// For num = \"AB\" the output\
    \ should be 1.\n// For num = \"1077E\" the output should be 2.\n// For num = \"\
    ABED1A33\" the output should be 4.\n// For num = \"123456789ABCDEF0\" the output\
    \ should be 6.\n// For num = \"2020\" the output should be 2.\nfunction hex_key($num)\
    \ {\n    $hex_key = array(\n        '0' => 0,\n        '1' => 1,\n        '2'\
    \ => 2,\n        '3' => 3,\n        '4' => 4,\n        '5' => 5,\n        '6'\
    \ => 6,\n        '7' => 7,\n        '8' => 8,\n        '9' => 9,\n        'A'\
    \ => 10,\n        'B' => 11,\n        'C' => 12,\n        'D' => 13,\n       \
    \ 'E' => 14,\n        'F' => 15\n    );\n    return $hex_key[$num];\n}\nfunction\
    \ candidate(...$args) {\n    return hex_key(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"AB\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"1077E\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ABED1A33\") !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"2020\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"123456789ABCDEF0\") !== 6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"112233445566778899AABBCCDDEEFF00\") !==\
    \ 12) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Warning:  Undefined array key \"AB\" in /tmp/tmpb06d3l0q.php on line\
    \ 37\nPHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpb06d3l0q.php:44\n\
    Stack trace:\n#0 /tmp/tmpb06d3l0q.php(52): test()\n#1 {main}\n  thrown in /tmp/tmpb06d3l0q.php\
    \ on line 44\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You have been tasked to write a function that receives \n//\
    \ a hexadecimal number as a string and counts the number of hexadecimal \n// digits\
    \ that are primes (prime number, or a prime, is a natural number \n// greater\
    \ than 1 that is not a product of two smaller natural numbers).\n// Hexadecimal\
    \ digits are 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, A, B, C, D, E, F.\n// Prime numbers\
    \ are 2, 3, 5, 7, 11, 13, 17,...\n// So you have to determine a number of the\
    \ following digits: 2, 3, 5, 7, \n// B (=decimal 11), D (=decimal 13).\n// Note:\
    \ you may assume the input is always correct or empty string, \n// and symbols\
    \ A,B,C,D,E,F are always uppercase.\n// Examples:\n// For num = \"AB\" the output\
    \ should be 1.\n// For num = \"1077E\" the output should be 2.\n// For num = \"\
    ABED1A33\" the output should be 4.\n// For num = \"123456789ABCDEF0\" the output\
    \ should be 6.\n// For num = \"2020\" the output should be 2.\nfunction hex_key($num)\
    \ {\n    $hex = array(\n        \"0\" => 0,\n        \"1\" => 1,\n        \"2\"\
    \ => 2,\n        \"3\" => 3,\n        \"4\" => 4,\n        \"5\" => 5,\n     \
    \   \"6\" => 6,\n        \"7\" => 7,\n        \"8\" => 8,\n        \"9\" => 9,\n\
    \        \"A\" => 10,\n        \"B\" => 11,\n        \"C\" => 12,\n        \"\
    D\" => 13,\n        \"E\" => 14,\n        \"F\" => 15\n    );\n    $primes = array(2,\
    \ 3, 5, 7, 11, 13);\n    $count = 0;\n    for ($i = 0; $i < strlen($num); $i++)\
    \ {\n        if (in_array($hex[$num[$i]], $primes)) {\n            $count++;\n\
    \        }\n    }\n    return $count;\n}\necho hex_key(\"AB\") . \"<br>\";\necho\
    \ hex_key(\"1077E\") . \"<br>\";\necho hex_key(\"ABED1A33\") . \"<br>\";\necho\
    \ hex_key(\"123456789ABCDEF0\") . \"<br>\";\necho hex_key(\"2020\") . \"<br>\"\
    ;\nfunction candidate(...$args) {\n    return hex_key(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"AB\") !== 1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"1077E\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ABED1A33\") !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2020\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"123456789ABCDEF0\") !== 6) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"112233445566778899AABBCCDDEEFF00\"\
    ) !== 12) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: 1<br>2<br>4<br>6<br>2<br>
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You have been tasked to write a function that receives \n//\
    \ a hexadecimal number as a string and counts the number of hexadecimal \n// digits\
    \ that are primes (prime number, or a prime, is a natural number \n// greater\
    \ than 1 that is not a product of two smaller natural numbers).\n// Hexadecimal\
    \ digits are 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, A, B, C, D, E, F.\n// Prime numbers\
    \ are 2, 3, 5, 7, 11, 13, 17,...\n// So you have to determine a number of the\
    \ following digits: 2, 3, 5, 7, \n// B (=decimal 11), D (=decimal 13).\n// Note:\
    \ you may assume the input is always correct or empty string, \n// and symbols\
    \ A,B,C,D,E,F are always uppercase.\n// Examples:\n// For num = \"AB\" the output\
    \ should be 1.\n// For num = \"1077E\" the output should be 2.\n// For num = \"\
    ABED1A33\" the output should be 4.\n// For num = \"123456789ABCDEF0\" the output\
    \ should be 6.\n// For num = \"2020\" the output should be 2.\nfunction hex_key($num)\
    \ {\n    $hex_key = [\n        '0' => 0,\n        '1' => 1,\n        '2' => 2,\n\
    \        '3' => 3,\n        '4' => 4,\n        '5' => 5,\n        '6' => 6,\n\
    \        '7' => 7,\n        '8' => 8,\n        '9' => 9,\n        'A' => 10,\n\
    \        'B' => 11,\n        'C' => 12,\n        'D' => 13,\n        'E' => 14,\n\
    \        'F' => 15\n    ];\n    return $hex_key[$num];\n}\nfunction candidate(...$args)\
    \ {\n    return hex_key(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    AB\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1077E\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ABED1A33\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2020\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    123456789ABCDEF0\") !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"112233445566778899AABBCCDDEEFF00\") !== 12) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Warning:  Undefined array key \"AB\" in /tmp/tmpvtne779j.php on line\
    \ 37\nPHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpvtne779j.php:44\n\
    Stack trace:\n#0 /tmp/tmpvtne779j.php(52): test()\n#1 {main}\n  thrown in /tmp/tmpvtne779j.php\
    \ on line 44\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You have been tasked to write a function that receives \n//\
    \ a hexadecimal number as a string and counts the number of hexadecimal \n// digits\
    \ that are primes (prime number, or a prime, is a natural number \n// greater\
    \ than 1 that is not a product of two smaller natural numbers).\n// Hexadecimal\
    \ digits are 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, A, B, C, D, E, F.\n// Prime numbers\
    \ are 2, 3, 5, 7, 11, 13, 17,...\n// So you have to determine a number of the\
    \ following digits: 2, 3, 5, 7, \n// B (=decimal 11), D (=decimal 13).\n// Note:\
    \ you may assume the input is always correct or empty string, \n// and symbols\
    \ A,B,C,D,E,F are always uppercase.\n// Examples:\n// For num = \"AB\" the output\
    \ should be 1.\n// For num = \"1077E\" the output should be 2.\n// For num = \"\
    ABED1A33\" the output should be 4.\n// For num = \"123456789ABCDEF0\" the output\
    \ should be 6.\n// For num = \"2020\" the output should be 2.\nfunction hex_key($num)\
    \ {\n    $hex = array(\n        '0' => 0,\n        '1' => 1,\n        '2' => 2,\n\
    \        '3' => 3,\n        '4' => 4,\n        '5' => 5,\n        '6' => 6,\n\
    \        '7' => 7,\n        '8' => 8,\n        '9' => 9,\n        'A' => 10,\n\
    \        'B' => 11,\n        'C' => 12,\n        'D' => 13,\n        'E' => 14,\n\
    \        'F' => 15\n    );\n    $prime = array(\n        2, 3, 5, 7, 11, 13\n\
    \    );\n    $count = 0;\n    for ($i = 0; $i < strlen($num); $i++) {\n      \
    \  if (in_array($hex[$num[$i]], $prime)) {\n            $count++;\n        }\n\
    \    }\n    return $count;\n}\necho hex_key(\"AB\") . \"<br>\";\necho hex_key(\"\
    1077E\") . \"<br>\";\necho hex_key(\"ABED1A33\") . \"<br>\";\necho hex_key(\"\
    123456789ABCDEF0\") . \"<br>\";\necho hex_key(\"2020\") . \"<br>\";\nfunction\
    \ candidate(...$args) {\n    return hex_key(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"AB\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"1077E\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ABED1A33\") !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"2020\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"123456789ABCDEF0\") !== 6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"112233445566778899AABBCCDDEEFF00\") !==\
    \ 12) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: 1<br>2<br>4<br>6<br>2<br>
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You have been tasked to write a function that receives \n//\
    \ a hexadecimal number as a string and counts the number of hexadecimal \n// digits\
    \ that are primes (prime number, or a prime, is a natural number \n// greater\
    \ than 1 that is not a product of two smaller natural numbers).\n// Hexadecimal\
    \ digits are 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, A, B, C, D, E, F.\n// Prime numbers\
    \ are 2, 3, 5, 7, 11, 13, 17,...\n// So you have to determine a number of the\
    \ following digits: 2, 3, 5, 7, \n// B (=decimal 11), D (=decimal 13).\n// Note:\
    \ you may assume the input is always correct or empty string, \n// and symbols\
    \ A,B,C,D,E,F are always uppercase.\n// Examples:\n// For num = \"AB\" the output\
    \ should be 1.\n// For num = \"1077E\" the output should be 2.\n// For num = \"\
    ABED1A33\" the output should be 4.\n// For num = \"123456789ABCDEF0\" the output\
    \ should be 6.\n// For num = \"2020\" the output should be 2.\nfunction hex_key($num)\
    \ {\n    $hex_key = array(\n        '0' => 0,\n        '1' => 1,\n        '2'\
    \ => 2,\n        '3' => 3,\n        '4' => 4,\n        '5' => 5,\n        '6'\
    \ => 6,\n        '7' => 7,\n        '8' => 8,\n        '9' => 9,\n        'A'\
    \ => 10,\n        'B' => 11,\n        'C' => 12,\n        'D' => 13,\n       \
    \ 'E' => 14,\n        'F' => 15\n    );\n    return $hex_key[$num];\n}\nfunction\
    \ candidate(...$args) {\n    return hex_key(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"AB\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"1077E\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ABED1A33\") !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"2020\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"123456789ABCDEF0\") !== 6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"112233445566778899AABBCCDDEEFF00\") !==\
    \ 12) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Warning:  Undefined array key \"AB\" in /tmp/tmpbywco65g.php on line\
    \ 37\nPHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpbywco65g.php:44\n\
    Stack trace:\n#0 /tmp/tmpbywco65g.php(52): test()\n#1 {main}\n  thrown in /tmp/tmpbywco65g.php\
    \ on line 44\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You have been tasked to write a function that receives \n//\
    \ a hexadecimal number as a string and counts the number of hexadecimal \n// digits\
    \ that are primes (prime number, or a prime, is a natural number \n// greater\
    \ than 1 that is not a product of two smaller natural numbers).\n// Hexadecimal\
    \ digits are 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, A, B, C, D, E, F.\n// Prime numbers\
    \ are 2, 3, 5, 7, 11, 13, 17,...\n// So you have to determine a number of the\
    \ following digits: 2, 3, 5, 7, \n// B (=decimal 11), D (=decimal 13).\n// Note:\
    \ you may assume the input is always correct or empty string, \n// and symbols\
    \ A,B,C,D,E,F are always uppercase.\n// Examples:\n// For num = \"AB\" the output\
    \ should be 1.\n// For num = \"1077E\" the output should be 2.\n// For num = \"\
    ABED1A33\" the output should be 4.\n// For num = \"123456789ABCDEF0\" the output\
    \ should be 6.\n// For num = \"2020\" the output should be 2.\nfunction hex_key($num)\
    \ {\n    $hex_key = array(\n        '0' => 0,\n        '1' => 1,\n        '2'\
    \ => 2,\n        '3' => 3,\n        '4' => 4,\n        '5' => 5,\n        '6'\
    \ => 6,\n        '7' => 7,\n        '8' => 8,\n        '9' => 9,\n        'A'\
    \ => 10,\n        'B' => 11,\n        'C' => 12,\n        'D' => 13,\n       \
    \ 'E' => 14,\n        'F' => 15\n    );\n    return $hex_key[$num];\n}\nfunction\
    \ candidate(...$args) {\n    return hex_key(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"AB\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"1077E\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ABED1A33\") !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"2020\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"123456789ABCDEF0\") !== 6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"112233445566778899AABBCCDDEEFF00\") !==\
    \ 12) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Warning:  Undefined array key \"AB\" in /tmp/tmpuco36esq.php on line\
    \ 37\nPHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpuco36esq.php:44\n\
    Stack trace:\n#0 /tmp/tmpuco36esq.php(52): test()\n#1 {main}\n  thrown in /tmp/tmpuco36esq.php\
    \ on line 44\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You have been tasked to write a function that receives \n//\
    \ a hexadecimal number as a string and counts the number of hexadecimal \n// digits\
    \ that are primes (prime number, or a prime, is a natural number \n// greater\
    \ than 1 that is not a product of two smaller natural numbers).\n// Hexadecimal\
    \ digits are 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, A, B, C, D, E, F.\n// Prime numbers\
    \ are 2, 3, 5, 7, 11, 13, 17,...\n// So you have to determine a number of the\
    \ following digits: 2, 3, 5, 7, \n// B (=decimal 11), D (=decimal 13).\n// Note:\
    \ you may assume the input is always correct or empty string, \n// and symbols\
    \ A,B,C,D,E,F are always uppercase.\n// Examples:\n// For num = \"AB\" the output\
    \ should be 1.\n// For num = \"1077E\" the output should be 2.\n// For num = \"\
    ABED1A33\" the output should be 4.\n// For num = \"123456789ABCDEF0\" the output\
    \ should be 6.\n// For num = \"2020\" the output should be 2.\nfunction hex_key($num)\
    \ {\n    $hex_key = [\n        '0' => 0,\n        '1' => 1,\n        '2' => 2,\n\
    \        '3' => 3,\n        '4' => 4,\n        '5' => 5,\n        '6' => 6,\n\
    \        '7' => 7,\n        '8' => 8,\n        '9' => 9,\n        'A' => 10,\n\
    \        'B' => 11,\n        'C' => 12,\n        'D' => 13,\n        'E' => 14,\n\
    \        'F' => 15\n    ];\n    return $hex_key[$num];\n}\nfunction candidate(...$args)\
    \ {\n    return hex_key(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    AB\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1077E\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ABED1A33\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2020\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    123456789ABCDEF0\") !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"112233445566778899AABBCCDDEEFF00\") !== 12) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Warning:  Undefined array key \"AB\" in /tmp/tmp_221v3ov.php on line\
    \ 37\nPHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp_221v3ov.php:44\n\
    Stack trace:\n#0 /tmp/tmp_221v3ov.php(52): test()\n#1 {main}\n  thrown in /tmp/tmp_221v3ov.php\
    \ on line 44\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You have been tasked to write a function that receives \n//\
    \ a hexadecimal number as a string and counts the number of hexadecimal \n// digits\
    \ that are primes (prime number, or a prime, is a natural number \n// greater\
    \ than 1 that is not a product of two smaller natural numbers).\n// Hexadecimal\
    \ digits are 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, A, B, C, D, E, F.\n// Prime numbers\
    \ are 2, 3, 5, 7, 11, 13, 17,...\n// So you have to determine a number of the\
    \ following digits: 2, 3, 5, 7, \n// B (=decimal 11), D (=decimal 13).\n// Note:\
    \ you may assume the input is always correct or empty string, \n// and symbols\
    \ A,B,C,D,E,F are always uppercase.\n// Examples:\n// For num = \"AB\" the output\
    \ should be 1.\n// For num = \"1077E\" the output should be 2.\n// For num = \"\
    ABED1A33\" the output should be 4.\n// For num = \"123456789ABCDEF0\" the output\
    \ should be 6.\n// For num = \"2020\" the output should be 2.\nfunction hex_key($num)\
    \ {\n    $hex_key = array(\n        '0' => 0,\n        '1' => 1,\n        '2'\
    \ => 2,\n        '3' => 3,\n        '4' => 4,\n        '5' => 5,\n        '6'\
    \ => 6,\n        '7' => 7,\n        '8' => 8,\n        '9' => 9,\n        'A'\
    \ => 10,\n        'B' => 11,\n        'C' => 12,\n        'D' => 13,\n       \
    \ 'E' => 14,\n        'F' => 15\n    );\n    return $hex_key[$num];\n}\nfunction\
    \ candidate(...$args) {\n    return hex_key(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"AB\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"1077E\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ABED1A33\") !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"2020\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"123456789ABCDEF0\") !== 6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"112233445566778899AABBCCDDEEFF00\") !==\
    \ 12) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Warning:  Undefined array key \"AB\" in /tmp/tmpw1dvs_yw.php on line\
    \ 37\nPHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpw1dvs_yw.php:44\n\
    Stack trace:\n#0 /tmp/tmpw1dvs_yw.php(52): test()\n#1 {main}\n  thrown in /tmp/tmpw1dvs_yw.php\
    \ on line 44\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You have been tasked to write a function that receives \n//\
    \ a hexadecimal number as a string and counts the number of hexadecimal \n// digits\
    \ that are primes (prime number, or a prime, is a natural number \n// greater\
    \ than 1 that is not a product of two smaller natural numbers).\n// Hexadecimal\
    \ digits are 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, A, B, C, D, E, F.\n// Prime numbers\
    \ are 2, 3, 5, 7, 11, 13, 17,...\n// So you have to determine a number of the\
    \ following digits: 2, 3, 5, 7, \n// B (=decimal 11), D (=decimal 13).\n// Note:\
    \ you may assume the input is always correct or empty string, \n// and symbols\
    \ A,B,C,D,E,F are always uppercase.\n// Examples:\n// For num = \"AB\" the output\
    \ should be 1.\n// For num = \"1077E\" the output should be 2.\n// For num = \"\
    ABED1A33\" the output should be 4.\n// For num = \"123456789ABCDEF0\" the output\
    \ should be 6.\n// For num = \"2020\" the output should be 2.\nfunction hex_key($num)\
    \ {\n    $hex_key = array(\n        '0' => 0,\n        '1' => 1,\n        '2'\
    \ => 2,\n        '3' => 3,\n        '4' => 4,\n        '5' => 5,\n        '6'\
    \ => 6,\n        '7' => 7,\n        '8' => 8,\n        '9' => 9,\n        'A'\
    \ => 10,\n        'B' => 11,\n        'C' => 12,\n        'D' => 13,\n       \
    \ 'E' => 14,\n        'F' => 15\n    );\n    return $hex_key[$num];\n}\nfunction\
    \ candidate(...$args) {\n    return hex_key(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"AB\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"1077E\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ABED1A33\") !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"2020\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"123456789ABCDEF0\") !== 6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"112233445566778899AABBCCDDEEFF00\") !==\
    \ 12) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Warning:  Undefined array key \"AB\" in /tmp/tmphtq6_24j.php on line\
    \ 37\nPHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmphtq6_24j.php:44\n\
    Stack trace:\n#0 /tmp/tmphtq6_24j.php(52): test()\n#1 {main}\n  thrown in /tmp/tmphtq6_24j.php\
    \ on line 44\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You have been tasked to write a function that receives \n//\
    \ a hexadecimal number as a string and counts the number of hexadecimal \n// digits\
    \ that are primes (prime number, or a prime, is a natural number \n// greater\
    \ than 1 that is not a product of two smaller natural numbers).\n// Hexadecimal\
    \ digits are 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, A, B, C, D, E, F.\n// Prime numbers\
    \ are 2, 3, 5, 7, 11, 13, 17,...\n// So you have to determine a number of the\
    \ following digits: 2, 3, 5, 7, \n// B (=decimal 11), D (=decimal 13).\n// Note:\
    \ you may assume the input is always correct or empty string, \n// and symbols\
    \ A,B,C,D,E,F are always uppercase.\n// Examples:\n// For num = \"AB\" the output\
    \ should be 1.\n// For num = \"1077E\" the output should be 2.\n// For num = \"\
    ABED1A33\" the output should be 4.\n// For num = \"123456789ABCDEF0\" the output\
    \ should be 6.\n// For num = \"2020\" the output should be 2.\nfunction hex_key($num)\
    \ {\n    $key = array(\n        \"0\" => 0,\n        \"1\" => 1,\n        \"2\"\
    \ => 2,\n        \"3\" => 3,\n        \"4\" => 4,\n        \"5\" => 5,\n     \
    \   \"6\" => 6,\n        \"7\" => 7,\n        \"8\" => 8,\n        \"9\" => 9,\n\
    \        \"A\" => 10,\n        \"B\" => 11,\n        \"C\" => 12,\n        \"\
    D\" => 13,\n        \"E\" => 14,\n        \"F\" => 15\n    );\n    return $key[$num];\n\
    }\nfunction candidate(...$args) {\n    return hex_key(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"AB\") !== 1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"1077E\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ABED1A33\") !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2020\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"123456789ABCDEF0\") !== 6) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"112233445566778899AABBCCDDEEFF00\"\
    ) !== 12) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Warning:  Undefined array key \"AB\" in /tmp/tmpr805px8g.php on line\
    \ 37\nPHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpr805px8g.php:44\n\
    Stack trace:\n#0 /tmp/tmpr805px8g.php(52): test()\n#1 {main}\n  thrown in /tmp/tmpr805px8g.php\
    \ on line 44\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You have been tasked to write a function that receives \n//\
    \ a hexadecimal number as a string and counts the number of hexadecimal \n// digits\
    \ that are primes (prime number, or a prime, is a natural number \n// greater\
    \ than 1 that is not a product of two smaller natural numbers).\n// Hexadecimal\
    \ digits are 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, A, B, C, D, E, F.\n// Prime numbers\
    \ are 2, 3, 5, 7, 11, 13, 17,...\n// So you have to determine a number of the\
    \ following digits: 2, 3, 5, 7, \n// B (=decimal 11), D (=decimal 13).\n// Note:\
    \ you may assume the input is always correct or empty string, \n// and symbols\
    \ A,B,C,D,E,F are always uppercase.\n// Examples:\n// For num = \"AB\" the output\
    \ should be 1.\n// For num = \"1077E\" the output should be 2.\n// For num = \"\
    ABED1A33\" the output should be 4.\n// For num = \"123456789ABCDEF0\" the output\
    \ should be 6.\n// For num = \"2020\" the output should be 2.\nfunction hex_key($num)\
    \ {\n    $hex = array(0,1,2,3,4,5,6,7,8,9,'A','B','C','D','E','F');\n    $hex_key\
    \ = array_flip($hex);\n    return $hex_key;\n}\nfunction candidate(...$args) {\n\
    \    return hex_key(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    AB\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1077E\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ABED1A33\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2020\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    123456789ABCDEF0\") !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"112233445566778899AABBCCDDEEFF00\") !== 12) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpu2_syohr.php:28\n\
    Stack trace:\n#0 /tmp/tmpu2_syohr.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpu2_syohr.php\
    \ on line 28\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You have been tasked to write a function that receives \n//\
    \ a hexadecimal number as a string and counts the number of hexadecimal \n// digits\
    \ that are primes (prime number, or a prime, is a natural number \n// greater\
    \ than 1 that is not a product of two smaller natural numbers).\n// Hexadecimal\
    \ digits are 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, A, B, C, D, E, F.\n// Prime numbers\
    \ are 2, 3, 5, 7, 11, 13, 17,...\n// So you have to determine a number of the\
    \ following digits: 2, 3, 5, 7, \n// B (=decimal 11), D (=decimal 13).\n// Note:\
    \ you may assume the input is always correct or empty string, \n// and symbols\
    \ A,B,C,D,E,F are always uppercase.\n// Examples:\n// For num = \"AB\" the output\
    \ should be 1.\n// For num = \"1077E\" the output should be 2.\n// For num = \"\
    ABED1A33\" the output should be 4.\n// For num = \"123456789ABCDEF0\" the output\
    \ should be 6.\n// For num = \"2020\" the output should be 2.\nfunction hex_key($num)\
    \ {\n    $hex_key = array(\n        '0' => 0,\n        '1' => 1,\n        '2'\
    \ => 2,\n        '3' => 3,\n        '4' => 4,\n        '5' => 5,\n        '6'\
    \ => 6,\n        '7' => 7,\n        '8' => 8,\n        '9' => 9,\n        'A'\
    \ => 10,\n        'B' => 11,\n        'C' => 12,\n        'D' => 13,\n       \
    \ 'E' => 14,\n        'F' => 15\n    );\n    return $hex_key[$num];\n}\nfunction\
    \ candidate(...$args) {\n    return hex_key(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"AB\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"1077E\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ABED1A33\") !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"2020\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"123456789ABCDEF0\") !== 6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"112233445566778899AABBCCDDEEFF00\") !==\
    \ 12) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Warning:  Undefined array key \"AB\" in /tmp/tmpj1z0ij93.php on line\
    \ 37\nPHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpj1z0ij93.php:44\n\
    Stack trace:\n#0 /tmp/tmpj1z0ij93.php(52): test()\n#1 {main}\n  thrown in /tmp/tmpj1z0ij93.php\
    \ on line 44\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You have been tasked to write a function that receives \n//\
    \ a hexadecimal number as a string and counts the number of hexadecimal \n// digits\
    \ that are primes (prime number, or a prime, is a natural number \n// greater\
    \ than 1 that is not a product of two smaller natural numbers).\n// Hexadecimal\
    \ digits are 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, A, B, C, D, E, F.\n// Prime numbers\
    \ are 2, 3, 5, 7, 11, 13, 17,...\n// So you have to determine a number of the\
    \ following digits: 2, 3, 5, 7, \n// B (=decimal 11), D (=decimal 13).\n// Note:\
    \ you may assume the input is always correct or empty string, \n// and symbols\
    \ A,B,C,D,E,F are always uppercase.\n// Examples:\n// For num = \"AB\" the output\
    \ should be 1.\n// For num = \"1077E\" the output should be 2.\n// For num = \"\
    ABED1A33\" the output should be 4.\n// For num = \"123456789ABCDEF0\" the output\
    \ should be 6.\n// For num = \"2020\" the output should be 2.\nfunction hex_key($num)\
    \ {\n    $hex = ['0','1','2','3','4','5','6','7','8','9','A','B','C','D','E','F'];\n\
    \    $primes = [2,3,5,7,11,13];\n    $count = 0;\n    for ($i=0; $i < strlen($num);\
    \ $i++) { \n        if (in_array($num[$i], $hex)) {\n            if (in_array($num[$i],\
    \ $primes)) {\n                $count++;\n            }\n        }\n    }\n  \
    \  return $count;\n}\necho hex_key(\"AB\").\"\\n\";\necho hex_key(\"1077E\").\"\
    \\n\";\necho hex_key(\"ABED1A33\").\"\\n\";\necho hex_key(\"123456789ABCDEF0\"\
    ).\"\\n\";\necho hex_key(\"2020\").\"\\n\";\nfunction candidate(...$args) {\n\
    \    return hex_key(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    AB\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1077E\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ABED1A33\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2020\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    123456789ABCDEF0\") !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"112233445566778899AABBCCDDEEFF00\") !== 12) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "0\n2\n2\n4\n2\n"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp0xjdwo40.php:41\n\
    Stack trace:\n#0 /tmp/tmp0xjdwo40.php(49): test()\n#1 {main}\n  thrown in /tmp/tmp0xjdwo40.php\
    \ on line 41\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You have been tasked to write a function that receives \n//\
    \ a hexadecimal number as a string and counts the number of hexadecimal \n// digits\
    \ that are primes (prime number, or a prime, is a natural number \n// greater\
    \ than 1 that is not a product of two smaller natural numbers).\n// Hexadecimal\
    \ digits are 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, A, B, C, D, E, F.\n// Prime numbers\
    \ are 2, 3, 5, 7, 11, 13, 17,...\n// So you have to determine a number of the\
    \ following digits: 2, 3, 5, 7, \n// B (=decimal 11), D (=decimal 13).\n// Note:\
    \ you may assume the input is always correct or empty string, \n// and symbols\
    \ A,B,C,D,E,F are always uppercase.\n// Examples:\n// For num = \"AB\" the output\
    \ should be 1.\n// For num = \"1077E\" the output should be 2.\n// For num = \"\
    ABED1A33\" the output should be 4.\n// For num = \"123456789ABCDEF0\" the output\
    \ should be 6.\n// For num = \"2020\" the output should be 2.\nfunction hex_key($num)\
    \ {\n    $hex_key = array(\n        '0' => 0,\n        '1' => 1,\n        '2'\
    \ => 2,\n        '3' => 3,\n        '4' => 4,\n        '5' => 5,\n        '6'\
    \ => 6,\n        '7' => 7,\n        '8' => 8,\n        '9' => 9,\n        'A'\
    \ => 10,\n        'B' => 11,\n        'C' => 12,\n        'D' => 13,\n       \
    \ 'E' => 14,\n        'F' => 15\n    );\n    return $hex_key[$num];\n}\nfunction\
    \ candidate(...$args) {\n    return hex_key(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"AB\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"1077E\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ABED1A33\") !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"2020\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"123456789ABCDEF0\") !== 6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"112233445566778899AABBCCDDEEFF00\") !==\
    \ 12) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Warning:  Undefined array key \"AB\" in /tmp/tmp8o0iuwaq.php on line\
    \ 37\nPHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp8o0iuwaq.php:44\n\
    Stack trace:\n#0 /tmp/tmp8o0iuwaq.php(52): test()\n#1 {main}\n  thrown in /tmp/tmp8o0iuwaq.php\
    \ on line 44\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You have been tasked to write a function that receives \n//\
    \ a hexadecimal number as a string and counts the number of hexadecimal \n// digits\
    \ that are primes (prime number, or a prime, is a natural number \n// greater\
    \ than 1 that is not a product of two smaller natural numbers).\n// Hexadecimal\
    \ digits are 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, A, B, C, D, E, F.\n// Prime numbers\
    \ are 2, 3, 5, 7, 11, 13, 17,...\n// So you have to determine a number of the\
    \ following digits: 2, 3, 5, 7, \n// B (=decimal 11), D (=decimal 13).\n// Note:\
    \ you may assume the input is always correct or empty string, \n// and symbols\
    \ A,B,C,D,E,F are always uppercase.\n// Examples:\n// For num = \"AB\" the output\
    \ should be 1.\n// For num = \"1077E\" the output should be 2.\n// For num = \"\
    ABED1A33\" the output should be 4.\n// For num = \"123456789ABCDEF0\" the output\
    \ should be 6.\n// For num = \"2020\" the output should be 2.\nfunction hex_key($num)\
    \ {\n    $hex_key = [\n        '0' => 0,\n        '1' => 1,\n        '2' => 2,\n\
    \        '3' => 3,\n        '4' => 4,\n        '5' => 5,\n        '6' => 6,\n\
    \        '7' => 7,\n        '8' => 8,\n        '9' => 9,\n        'A' => 10,\n\
    \        'B' => 11,\n        'C' => 12,\n        'D' => 13,\n        'E' => 14,\n\
    \        'F' => 15\n    ];\n    return $hex_key[$num];\n}\nfunction candidate(...$args)\
    \ {\n    return hex_key(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    AB\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1077E\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ABED1A33\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2020\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    123456789ABCDEF0\") !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"112233445566778899AABBCCDDEEFF00\") !== 12) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Warning:  Undefined array key \"AB\" in /tmp/tmpg8jvdfj4.php on line\
    \ 37\nPHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpg8jvdfj4.php:44\n\
    Stack trace:\n#0 /tmp/tmpg8jvdfj4.php(52): test()\n#1 {main}\n  thrown in /tmp/tmpg8jvdfj4.php\
    \ on line 44\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You have been tasked to write a function that receives \n//\
    \ a hexadecimal number as a string and counts the number of hexadecimal \n// digits\
    \ that are primes (prime number, or a prime, is a natural number \n// greater\
    \ than 1 that is not a product of two smaller natural numbers).\n// Hexadecimal\
    \ digits are 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, A, B, C, D, E, F.\n// Prime numbers\
    \ are 2, 3, 5, 7, 11, 13, 17,...\n// So you have to determine a number of the\
    \ following digits: 2, 3, 5, 7, \n// B (=decimal 11), D (=decimal 13).\n// Note:\
    \ you may assume the input is always correct or empty string, \n// and symbols\
    \ A,B,C,D,E,F are always uppercase.\n// Examples:\n// For num = \"AB\" the output\
    \ should be 1.\n// For num = \"1077E\" the output should be 2.\n// For num = \"\
    ABED1A33\" the output should be 4.\n// For num = \"123456789ABCDEF0\" the output\
    \ should be 6.\n// For num = \"2020\" the output should be 2.\nfunction hex_key($num)\
    \ {\n    $hex_key = array(\n        '0' => 0,\n        '1' => 1,\n        '2'\
    \ => 2,\n        '3' => 3,\n        '4' => 4,\n        '5' => 5,\n        '6'\
    \ => 6,\n        '7' => 7,\n        '8' => 8,\n        '9' => 9,\n        'A'\
    \ => 10,\n        'B' => 11,\n        'C' => 12,\n        'D' => 13,\n       \
    \ 'E' => 14,\n        'F' => 15\n    );\n    return $hex_key[$num];\n}\nfunction\
    \ candidate(...$args) {\n    return hex_key(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"AB\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"1077E\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ABED1A33\") !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"2020\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"123456789ABCDEF0\") !== 6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"112233445566778899AABBCCDDEEFF00\") !==\
    \ 12) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Warning:  Undefined array key \"AB\" in /tmp/tmp_hd12q73.php on line\
    \ 37\nPHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp_hd12q73.php:44\n\
    Stack trace:\n#0 /tmp/tmp_hd12q73.php(52): test()\n#1 {main}\n  thrown in /tmp/tmp_hd12q73.php\
    \ on line 44\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You have been tasked to write a function that receives \n//\
    \ a hexadecimal number as a string and counts the number of hexadecimal \n// digits\
    \ that are primes (prime number, or a prime, is a natural number \n// greater\
    \ than 1 that is not a product of two smaller natural numbers).\n// Hexadecimal\
    \ digits are 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, A, B, C, D, E, F.\n// Prime numbers\
    \ are 2, 3, 5, 7, 11, 13, 17,...\n// So you have to determine a number of the\
    \ following digits: 2, 3, 5, 7, \n// B (=decimal 11), D (=decimal 13).\n// Note:\
    \ you may assume the input is always correct or empty string, \n// and symbols\
    \ A,B,C,D,E,F are always uppercase.\n// Examples:\n// For num = \"AB\" the output\
    \ should be 1.\n// For num = \"1077E\" the output should be 2.\n// For num = \"\
    ABED1A33\" the output should be 4.\n// For num = \"123456789ABCDEF0\" the output\
    \ should be 6.\n// For num = \"2020\" the output should be 2.\nfunction hex_key($num)\
    \ {\n    $hex_key = [\n        '0' => 0,\n        '1' => 1,\n        '2' => 2,\n\
    \        '3' => 3,\n        '4' => 4,\n        '5' => 5,\n        '6' => 6,\n\
    \        '7' => 7,\n        '8' => 8,\n        '9' => 9,\n        'A' => 10,\n\
    \        'B' => 11,\n        'C' => 12,\n        'D' => 13,\n        'E' => 14,\n\
    \        'F' => 15\n    ];\n    return $hex_key[$num];\n}\nfunction candidate(...$args)\
    \ {\n    return hex_key(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    AB\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1077E\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ABED1A33\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2020\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    123456789ABCDEF0\") !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"112233445566778899AABBCCDDEEFF00\") !== 12) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Warning:  Undefined array key \"AB\" in /tmp/tmp7gdkrbbl.php on line\
    \ 37\nPHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp7gdkrbbl.php:44\n\
    Stack trace:\n#0 /tmp/tmp7gdkrbbl.php(52): test()\n#1 {main}\n  thrown in /tmp/tmp7gdkrbbl.php\
    \ on line 44\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You have been tasked to write a function that receives \n//\
    \ a hexadecimal number as a string and counts the number of hexadecimal \n// digits\
    \ that are primes (prime number, or a prime, is a natural number \n// greater\
    \ than 1 that is not a product of two smaller natural numbers).\n// Hexadecimal\
    \ digits are 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, A, B, C, D, E, F.\n// Prime numbers\
    \ are 2, 3, 5, 7, 11, 13, 17,...\n// So you have to determine a number of the\
    \ following digits: 2, 3, 5, 7, \n// B (=decimal 11), D (=decimal 13).\n// Note:\
    \ you may assume the input is always correct or empty string, \n// and symbols\
    \ A,B,C,D,E,F are always uppercase.\n// Examples:\n// For num = \"AB\" the output\
    \ should be 1.\n// For num = \"1077E\" the output should be 2.\n// For num = \"\
    ABED1A33\" the output should be 4.\n// For num = \"123456789ABCDEF0\" the output\
    \ should be 6.\n// For num = \"2020\" the output should be 2.\nfunction hex_key($num)\
    \ {\n    $hex = array(\n        '0' => 0,\n        '1' => 1,\n        '2' => 2,\n\
    \        '3' => 3,\n        '4' => 4,\n        '5' => 5,\n        '6' => 6,\n\
    \        '7' => 7,\n        '8' => 8,\n        '9' => 9,\n        'A' => 10,\n\
    \        'B' => 11,\n        'C' => 12,\n        'D' => 13,\n        'E' => 14,\n\
    \        'F' => 15\n    );\n    $prime = array(2, 3, 5, 7, 11, 13);\n    $count\
    \ = 0;\n    for ($i = 0; $i < strlen($num); $i++) {\n        if (in_array($hex[$num[$i]],\
    \ $prime)) {\n            $count++;\n        }\n    }\n    return $count;\n}\n\
    echo hex_key(\"AB\") . \"<br>\";\necho hex_key(\"1077E\") . \"<br>\";\necho hex_key(\"\
    ABED1A33\") . \"<br>\";\necho hex_key(\"123456789ABCDEF0\") . \"<br>\";\necho\
    \ hex_key(\"2020\") . \"<br>\";\nfunction candidate(...$args) {\n    return hex_key(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"AB\") !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"1077E\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ABED1A33\") !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2020\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"123456789ABCDEF0\") !== 6) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"112233445566778899AABBCCDDEEFF00\"\
    ) !== 12) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: 1<br>2<br>4<br>6<br>2<br>
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You have been tasked to write a function that receives \n//\
    \ a hexadecimal number as a string and counts the number of hexadecimal \n// digits\
    \ that are primes (prime number, or a prime, is a natural number \n// greater\
    \ than 1 that is not a product of two smaller natural numbers).\n// Hexadecimal\
    \ digits are 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, A, B, C, D, E, F.\n// Prime numbers\
    \ are 2, 3, 5, 7, 11, 13, 17,...\n// So you have to determine a number of the\
    \ following digits: 2, 3, 5, 7, \n// B (=decimal 11), D (=decimal 13).\n// Note:\
    \ you may assume the input is always correct or empty string, \n// and symbols\
    \ A,B,C,D,E,F are always uppercase.\n// Examples:\n// For num = \"AB\" the output\
    \ should be 1.\n// For num = \"1077E\" the output should be 2.\n// For num = \"\
    ABED1A33\" the output should be 4.\n// For num = \"123456789ABCDEF0\" the output\
    \ should be 6.\n// For num = \"2020\" the output should be 2.\nfunction hex_key($num)\
    \ {\n    $hex = array(\n        '0' => 0,\n        '1' => 1,\n        '2' => 2,\n\
    \        '3' => 3,\n        '4' => 4,\n        '5' => 5,\n        '6' => 6,\n\
    \        '7' => 7,\n        '8' => 8,\n        '9' => 9,\n        'A' => 10,\n\
    \        'B' => 11,\n        'C' => 12,\n        'D' => 13,\n        'E' => 14,\n\
    \        'F' => 15\n    );\n    $hex_key = array_keys($hex);\n    return $hex_key;\n\
    }\nfunction candidate(...$args) {\n    return hex_key(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"AB\") !== 1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"1077E\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ABED1A33\") !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2020\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"123456789ABCDEF0\") !== 6) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"112233445566778899AABBCCDDEEFF00\"\
    ) !== 12) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp3t7iqbwn.php:45\n\
    Stack trace:\n#0 /tmp/tmp3t7iqbwn.php(53): test()\n#1 {main}\n  thrown in /tmp/tmp3t7iqbwn.php\
    \ on line 45\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You have been tasked to write a function that receives \n//\
    \ a hexadecimal number as a string and counts the number of hexadecimal \n// digits\
    \ that are primes (prime number, or a prime, is a natural number \n// greater\
    \ than 1 that is not a product of two smaller natural numbers).\n// Hexadecimal\
    \ digits are 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, A, B, C, D, E, F.\n// Prime numbers\
    \ are 2, 3, 5, 7, 11, 13, 17,...\n// So you have to determine a number of the\
    \ following digits: 2, 3, 5, 7, \n// B (=decimal 11), D (=decimal 13).\n// Note:\
    \ you may assume the input is always correct or empty string, \n// and symbols\
    \ A,B,C,D,E,F are always uppercase.\n// Examples:\n// For num = \"AB\" the output\
    \ should be 1.\n// For num = \"1077E\" the output should be 2.\n// For num = \"\
    ABED1A33\" the output should be 4.\n// For num = \"123456789ABCDEF0\" the output\
    \ should be 6.\n// For num = \"2020\" the output should be 2.\nfunction hex_key($num)\
    \ {\n    $hex_key = array(\n        \"A\" => 10,\n        \"B\" => 11,\n     \
    \   \"C\" => 12,\n        \"D\" => 13,\n        \"E\" => 14,\n        \"F\" =>\
    \ 15\n    );\n    return $hex_key[$num];\n}\nfunction candidate(...$args) {\n\
    \    return hex_key(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    AB\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1077E\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ABED1A33\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2020\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    123456789ABCDEF0\") !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"112233445566778899AABBCCDDEEFF00\") !== 12) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Warning:  Undefined array key \"AB\" in /tmp/tmppxgtkves.php on line\
    \ 27\nPHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmppxgtkves.php:34\n\
    Stack trace:\n#0 /tmp/tmppxgtkves.php(42): test()\n#1 {main}\n  thrown in /tmp/tmppxgtkves.php\
    \ on line 34\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You have been tasked to write a function that receives \n//\
    \ a hexadecimal number as a string and counts the number of hexadecimal \n// digits\
    \ that are primes (prime number, or a prime, is a natural number \n// greater\
    \ than 1 that is not a product of two smaller natural numbers).\n// Hexadecimal\
    \ digits are 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, A, B, C, D, E, F.\n// Prime numbers\
    \ are 2, 3, 5, 7, 11, 13, 17,...\n// So you have to determine a number of the\
    \ following digits: 2, 3, 5, 7, \n// B (=decimal 11), D (=decimal 13).\n// Note:\
    \ you may assume the input is always correct or empty string, \n// and symbols\
    \ A,B,C,D,E,F are always uppercase.\n// Examples:\n// For num = \"AB\" the output\
    \ should be 1.\n// For num = \"1077E\" the output should be 2.\n// For num = \"\
    ABED1A33\" the output should be 4.\n// For num = \"123456789ABCDEF0\" the output\
    \ should be 6.\n// For num = \"2020\" the output should be 2.\nfunction hex_key($num)\
    \ {\n    $hex = array(\n        '0' => 0,\n        '1' => 1,\n        '2' => 2,\n\
    \        '3' => 3,\n        '4' => 4,\n        '5' => 5,\n        '6' => 6,\n\
    \        '7' => 7,\n        '8' => 8,\n        '9' => 9,\n        'A' => 10,\n\
    \        'B' => 11,\n        'C' => 12,\n        'D' => 13,\n        'E' => 14,\n\
    \        'F' => 15\n    );\n    $hex_key = array_keys($hex);\n    return $hex_key;\n\
    }\nfunction candidate(...$args) {\n    return hex_key(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"AB\") !== 1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"1077E\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ABED1A33\") !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2020\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"123456789ABCDEF0\") !== 6) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"112233445566778899AABBCCDDEEFF00\"\
    ) !== 12) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpdvp68es0.php:45\n\
    Stack trace:\n#0 /tmp/tmpdvp68es0.php(53): test()\n#1 {main}\n  thrown in /tmp/tmpdvp68es0.php\
    \ on line 45\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You have been tasked to write a function that receives \n//\
    \ a hexadecimal number as a string and counts the number of hexadecimal \n// digits\
    \ that are primes (prime number, or a prime, is a natural number \n// greater\
    \ than 1 that is not a product of two smaller natural numbers).\n// Hexadecimal\
    \ digits are 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, A, B, C, D, E, F.\n// Prime numbers\
    \ are 2, 3, 5, 7, 11, 13, 17,...\n// So you have to determine a number of the\
    \ following digits: 2, 3, 5, 7, \n// B (=decimal 11), D (=decimal 13).\n// Note:\
    \ you may assume the input is always correct or empty string, \n// and symbols\
    \ A,B,C,D,E,F are always uppercase.\n// Examples:\n// For num = \"AB\" the output\
    \ should be 1.\n// For num = \"1077E\" the output should be 2.\n// For num = \"\
    ABED1A33\" the output should be 4.\n// For num = \"123456789ABCDEF0\" the output\
    \ should be 6.\n// For num = \"2020\" the output should be 2.\nfunction hex_key($num)\
    \ {\n    $hex_key = array(\n        '0' => 0,\n        '1' => 1,\n        '2'\
    \ => 2,\n        '3' => 3,\n        '4' => 4,\n        '5' => 5,\n        '6'\
    \ => 6,\n        '7' => 7,\n        '8' => 8,\n        '9' => 9,\n        'A'\
    \ => 10,\n        'B' => 11,\n        'C' => 12,\n        'D' => 13,\n       \
    \ 'E' => 14,\n        'F' => 15\n    );\n    return $hex_key[$num];\n}\nfunction\
    \ candidate(...$args) {\n    return hex_key(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"AB\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"1077E\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ABED1A33\") !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"2020\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"123456789ABCDEF0\") !== 6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"112233445566778899AABBCCDDEEFF00\") !==\
    \ 12) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Warning:  Undefined array key \"AB\" in /tmp/tmptd_2jb9s.php on line\
    \ 37\nPHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmptd_2jb9s.php:44\n\
    Stack trace:\n#0 /tmp/tmptd_2jb9s.php(52): test()\n#1 {main}\n  thrown in /tmp/tmptd_2jb9s.php\
    \ on line 44\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You have been tasked to write a function that receives \n//\
    \ a hexadecimal number as a string and counts the number of hexadecimal \n// digits\
    \ that are primes (prime number, or a prime, is a natural number \n// greater\
    \ than 1 that is not a product of two smaller natural numbers).\n// Hexadecimal\
    \ digits are 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, A, B, C, D, E, F.\n// Prime numbers\
    \ are 2, 3, 5, 7, 11, 13, 17,...\n// So you have to determine a number of the\
    \ following digits: 2, 3, 5, 7, \n// B (=decimal 11), D (=decimal 13).\n// Note:\
    \ you may assume the input is always correct or empty string, \n// and symbols\
    \ A,B,C,D,E,F are always uppercase.\n// Examples:\n// For num = \"AB\" the output\
    \ should be 1.\n// For num = \"1077E\" the output should be 2.\n// For num = \"\
    ABED1A33\" the output should be 4.\n// For num = \"123456789ABCDEF0\" the output\
    \ should be 6.\n// For num = \"2020\" the output should be 2.\nfunction hex_key($num)\
    \ {\n    $num = strtoupper($num);\n    $hex_key = array(\n        '0' => 0,\n\
    \        '1' => 1,\n        '2' => 2,\n        '3' => 3,\n        '4' => 4,\n\
    \        '5' => 5,\n        '6' => 6,\n        '7' => 7,\n        '8' => 8,\n\
    \        '9' => 9,\n        'A' => 10,\n        'B' => 11,\n        'C' => 12,\n\
    \        'D' => 13,\n        'E' => 14,\n        'F' => 15\n    );\n    $hex_key_reverse\
    \ = array_flip($hex_key);\n    $hex_key_reverse = array_map('strtoupper', $hex_key_reverse);\n\
    \    $hex_key_reverse = array_map('strval', $hex_key_reverse);\n    return array($hex_key,\
    \ $hex_key_reverse);\n}\nfunction candidate(...$args) {\n    return hex_key(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"AB\") !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"1077E\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ABED1A33\") !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2020\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"123456789ABCDEF0\") !== 6) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"112233445566778899AABBCCDDEEFF00\"\
    ) !== 12) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp_ks2ik2p.php:48\n\
    Stack trace:\n#0 /tmp/tmp_ks2ik2p.php(56): test()\n#1 {main}\n  thrown in /tmp/tmp_ks2ik2p.php\
    \ on line 48\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You have been tasked to write a function that receives \n//\
    \ a hexadecimal number as a string and counts the number of hexadecimal \n// digits\
    \ that are primes (prime number, or a prime, is a natural number \n// greater\
    \ than 1 that is not a product of two smaller natural numbers).\n// Hexadecimal\
    \ digits are 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, A, B, C, D, E, F.\n// Prime numbers\
    \ are 2, 3, 5, 7, 11, 13, 17,...\n// So you have to determine a number of the\
    \ following digits: 2, 3, 5, 7, \n// B (=decimal 11), D (=decimal 13).\n// Note:\
    \ you may assume the input is always correct or empty string, \n// and symbols\
    \ A,B,C,D,E,F are always uppercase.\n// Examples:\n// For num = \"AB\" the output\
    \ should be 1.\n// For num = \"1077E\" the output should be 2.\n// For num = \"\
    ABED1A33\" the output should be 4.\n// For num = \"123456789ABCDEF0\" the output\
    \ should be 6.\n// For num = \"2020\" the output should be 2.\nfunction hex_key($num)\
    \ {\n    $hex_key = array(\n        '0' => 0,\n        '1' => 1,\n        '2'\
    \ => 2,\n        '3' => 3,\n        '4' => 4,\n        '5' => 5,\n        '6'\
    \ => 6,\n        '7' => 7,\n        '8' => 8,\n        '9' => 9,\n        'A'\
    \ => 10,\n        'B' => 11,\n        'C' => 12,\n        'D' => 13,\n       \
    \ 'E' => 14,\n        'F' => 15\n    );\n    return $hex_key[$num];\n}\nfunction\
    \ candidate(...$args) {\n    return hex_key(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"AB\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"1077E\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ABED1A33\") !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"2020\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"123456789ABCDEF0\") !== 6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"112233445566778899AABBCCDDEEFF00\") !==\
    \ 12) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Warning:  Undefined array key \"AB\" in /tmp/tmpw9zjabfo.php on line\
    \ 37\nPHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpw9zjabfo.php:44\n\
    Stack trace:\n#0 /tmp/tmpw9zjabfo.php(52): test()\n#1 {main}\n  thrown in /tmp/tmpw9zjabfo.php\
    \ on line 44\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You have been tasked to write a function that receives \n//\
    \ a hexadecimal number as a string and counts the number of hexadecimal \n// digits\
    \ that are primes (prime number, or a prime, is a natural number \n// greater\
    \ than 1 that is not a product of two smaller natural numbers).\n// Hexadecimal\
    \ digits are 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, A, B, C, D, E, F.\n// Prime numbers\
    \ are 2, 3, 5, 7, 11, 13, 17,...\n// So you have to determine a number of the\
    \ following digits: 2, 3, 5, 7, \n// B (=decimal 11), D (=decimal 13).\n// Note:\
    \ you may assume the input is always correct or empty string, \n// and symbols\
    \ A,B,C,D,E,F are always uppercase.\n// Examples:\n// For num = \"AB\" the output\
    \ should be 1.\n// For num = \"1077E\" the output should be 2.\n// For num = \"\
    ABED1A33\" the output should be 4.\n// For num = \"123456789ABCDEF0\" the output\
    \ should be 6.\n// For num = \"2020\" the output should be 2.\nfunction hex_key($num)\
    \ {\n    $hex = array(\n        '0' => 0,\n        '1' => 1,\n        '2' => 2,\n\
    \        '3' => 3,\n        '4' => 4,\n        '5' => 5,\n        '6' => 6,\n\
    \        '7' => 7,\n        '8' => 8,\n        '9' => 9,\n        'A' => 10,\n\
    \        'B' => 11,\n        'C' => 12,\n        'D' => 13,\n        'E' => 14,\n\
    \        'F' => 15\n    );\n    $primes = array(2, 3, 5, 7, 11, 13);\n    $count\
    \ = 0;\n    for ($i = 0; $i < strlen($num); $i++) {\n        if (in_array($hex[$num[$i]],\
    \ $primes)) {\n            $count++;\n        }\n    }\n    return $count;\n}\n\
    echo hex_key(\"AB\");\necho \"<br>\";\necho hex_key(\"1077E\");\necho \"<br>\"\
    ;\necho hex_key(\"ABED1A33\");\necho \"<br>\";\necho hex_key(\"123456789ABCDEF0\"\
    );\necho \"<br>\";\necho hex_key(\"2020\");\necho \"<br>\";\nfunction candidate(...$args)\
    \ {\n    return hex_key(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    AB\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1077E\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ABED1A33\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2020\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    123456789ABCDEF0\") !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"112233445566778899AABBCCDDEEFF00\") !== 12) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: 1<br>2<br>4<br>6<br>2<br>
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You have been tasked to write a function that receives \n//\
    \ a hexadecimal number as a string and counts the number of hexadecimal \n// digits\
    \ that are primes (prime number, or a prime, is a natural number \n// greater\
    \ than 1 that is not a product of two smaller natural numbers).\n// Hexadecimal\
    \ digits are 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, A, B, C, D, E, F.\n// Prime numbers\
    \ are 2, 3, 5, 7, 11, 13, 17,...\n// So you have to determine a number of the\
    \ following digits: 2, 3, 5, 7, \n// B (=decimal 11), D (=decimal 13).\n// Note:\
    \ you may assume the input is always correct or empty string, \n// and symbols\
    \ A,B,C,D,E,F are always uppercase.\n// Examples:\n// For num = \"AB\" the output\
    \ should be 1.\n// For num = \"1077E\" the output should be 2.\n// For num = \"\
    ABED1A33\" the output should be 4.\n// For num = \"123456789ABCDEF0\" the output\
    \ should be 6.\n// For num = \"2020\" the output should be 2.\nfunction hex_key($num)\
    \ {\n    $hex_key = array(\n        'A' => 10,\n        'B' => 11,\n        'C'\
    \ => 12,\n        'D' => 13,\n        'E' => 14,\n        'F' => 15\n    );\n\
    \    return $hex_key[$num];\n}\nfunction candidate(...$args) {\n    return hex_key(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"AB\") !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"1077E\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ABED1A33\") !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2020\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"123456789ABCDEF0\") !== 6) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"112233445566778899AABBCCDDEEFF00\"\
    ) !== 12) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Warning:  Undefined array key \"AB\" in /tmp/tmpbby46s86.php on line\
    \ 27\nPHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpbby46s86.php:34\n\
    Stack trace:\n#0 /tmp/tmpbby46s86.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpbby46s86.php\
    \ on line 34\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You have been tasked to write a function that receives \n//\
    \ a hexadecimal number as a string and counts the number of hexadecimal \n// digits\
    \ that are primes (prime number, or a prime, is a natural number \n// greater\
    \ than 1 that is not a product of two smaller natural numbers).\n// Hexadecimal\
    \ digits are 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, A, B, C, D, E, F.\n// Prime numbers\
    \ are 2, 3, 5, 7, 11, 13, 17,...\n// So you have to determine a number of the\
    \ following digits: 2, 3, 5, 7, \n// B (=decimal 11), D (=decimal 13).\n// Note:\
    \ you may assume the input is always correct or empty string, \n// and symbols\
    \ A,B,C,D,E,F are always uppercase.\n// Examples:\n// For num = \"AB\" the output\
    \ should be 1.\n// For num = \"1077E\" the output should be 2.\n// For num = \"\
    ABED1A33\" the output should be 4.\n// For num = \"123456789ABCDEF0\" the output\
    \ should be 6.\n// For num = \"2020\" the output should be 2.\nfunction hex_key($num)\
    \ {\n    $hex_key = array(\n        \"0\" => 0,\n        \"1\" => 1,\n       \
    \ \"2\" => 2,\n        \"3\" => 3,\n        \"4\" => 4,\n        \"5\" => 5,\n\
    \        \"6\" => 6,\n        \"7\" => 7,\n        \"8\" => 8,\n        \"9\"\
    \ => 9,\n        \"A\" => 10,\n        \"B\" => 11,\n        \"C\" => 12,\n  \
    \      \"D\" => 13,\n        \"E\" => 14,\n        \"F\" => 15\n    );\n    return\
    \ $hex_key[$num];\n}\nfunction candidate(...$args) {\n    return hex_key(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"AB\") !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"1077E\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ABED1A33\") !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2020\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"123456789ABCDEF0\") !== 6) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"112233445566778899AABBCCDDEEFF00\"\
    ) !== 12) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Warning:  Undefined array key \"AB\" in /tmp/tmp7p_jddld.php on line\
    \ 37\nPHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp7p_jddld.php:44\n\
    Stack trace:\n#0 /tmp/tmp7p_jddld.php(52): test()\n#1 {main}\n  thrown in /tmp/tmp7p_jddld.php\
    \ on line 44\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You have been tasked to write a function that receives \n//\
    \ a hexadecimal number as a string and counts the number of hexadecimal \n// digits\
    \ that are primes (prime number, or a prime, is a natural number \n// greater\
    \ than 1 that is not a product of two smaller natural numbers).\n// Hexadecimal\
    \ digits are 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, A, B, C, D, E, F.\n// Prime numbers\
    \ are 2, 3, 5, 7, 11, 13, 17,...\n// So you have to determine a number of the\
    \ following digits: 2, 3, 5, 7, \n// B (=decimal 11), D (=decimal 13).\n// Note:\
    \ you may assume the input is always correct or empty string, \n// and symbols\
    \ A,B,C,D,E,F are always uppercase.\n// Examples:\n// For num = \"AB\" the output\
    \ should be 1.\n// For num = \"1077E\" the output should be 2.\n// For num = \"\
    ABED1A33\" the output should be 4.\n// For num = \"123456789ABCDEF0\" the output\
    \ should be 6.\n// For num = \"2020\" the output should be 2.\nfunction hex_key($num)\
    \ {\n\t$hex_key = array(\n\t\t'0' => 0,\n\t\t'1' => 1,\n\t\t'2' => 2,\n\t\t'3'\
    \ => 3,\n\t\t'4' => 4,\n\t\t'5' => 5,\n\t\t'6' => 6,\n\t\t'7' => 7,\n\t\t'8' =>\
    \ 8,\n\t\t'9' => 9,\n\t\t'A' => 10,\n\t\t'B' => 11,\n\t\t'C' => 12,\n\t\t'D' =>\
    \ 13,\n\t\t'E' => 14,\n\t\t'F' => 15\n\t);\n\treturn $hex_key[$num];\n}\nfunction\
    \ candidate(...$args) {\n    return hex_key(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"AB\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"1077E\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ABED1A33\") !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"2020\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"123456789ABCDEF0\") !== 6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"112233445566778899AABBCCDDEEFF00\") !==\
    \ 12) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Warning:  Undefined array key \"AB\" in /tmp/tmp62op1_to.php on line\
    \ 37\nPHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp62op1_to.php:44\n\
    Stack trace:\n#0 /tmp/tmp62op1_to.php(52): test()\n#1 {main}\n  thrown in /tmp/tmp62op1_to.php\
    \ on line 44\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You have been tasked to write a function that receives \n//\
    \ a hexadecimal number as a string and counts the number of hexadecimal \n// digits\
    \ that are primes (prime number, or a prime, is a natural number \n// greater\
    \ than 1 that is not a product of two smaller natural numbers).\n// Hexadecimal\
    \ digits are 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, A, B, C, D, E, F.\n// Prime numbers\
    \ are 2, 3, 5, 7, 11, 13, 17,...\n// So you have to determine a number of the\
    \ following digits: 2, 3, 5, 7, \n// B (=decimal 11), D (=decimal 13).\n// Note:\
    \ you may assume the input is always correct or empty string, \n// and symbols\
    \ A,B,C,D,E,F are always uppercase.\n// Examples:\n// For num = \"AB\" the output\
    \ should be 1.\n// For num = \"1077E\" the output should be 2.\n// For num = \"\
    ABED1A33\" the output should be 4.\n// For num = \"123456789ABCDEF0\" the output\
    \ should be 6.\n// For num = \"2020\" the output should be 2.\nfunction hex_key($num)\
    \ {\n    $hex_key = array(\n        '0' => 0,\n        '1' => 1,\n        '2'\
    \ => 2,\n        '3' => 3,\n        '4' => 4,\n        '5' => 5,\n        '6'\
    \ => 6,\n        '7' => 7,\n        '8' => 8,\n        '9' => 9,\n        'A'\
    \ => 10,\n        'B' => 11,\n        'C' => 12,\n        'D' => 13,\n       \
    \ 'E' => 14,\n        'F' => 15\n    );\n    return $hex_key[$num];\n}\nfunction\
    \ candidate(...$args) {\n    return hex_key(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"AB\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"1077E\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ABED1A33\") !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"2020\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"123456789ABCDEF0\") !== 6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"112233445566778899AABBCCDDEEFF00\") !==\
    \ 12) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Warning:  Undefined array key \"AB\" in /tmp/tmpkaf2p4iu.php on line\
    \ 37\nPHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpkaf2p4iu.php:44\n\
    Stack trace:\n#0 /tmp/tmpkaf2p4iu.php(52): test()\n#1 {main}\n  thrown in /tmp/tmpkaf2p4iu.php\
    \ on line 44\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You have been tasked to write a function that receives \n//\
    \ a hexadecimal number as a string and counts the number of hexadecimal \n// digits\
    \ that are primes (prime number, or a prime, is a natural number \n// greater\
    \ than 1 that is not a product of two smaller natural numbers).\n// Hexadecimal\
    \ digits are 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, A, B, C, D, E, F.\n// Prime numbers\
    \ are 2, 3, 5, 7, 11, 13, 17,...\n// So you have to determine a number of the\
    \ following digits: 2, 3, 5, 7, \n// B (=decimal 11), D (=decimal 13).\n// Note:\
    \ you may assume the input is always correct or empty string, \n// and symbols\
    \ A,B,C,D,E,F are always uppercase.\n// Examples:\n// For num = \"AB\" the output\
    \ should be 1.\n// For num = \"1077E\" the output should be 2.\n// For num = \"\
    ABED1A33\" the output should be 4.\n// For num = \"123456789ABCDEF0\" the output\
    \ should be 6.\n// For num = \"2020\" the output should be 2.\nfunction hex_key($num)\
    \ {\n    $hex_key = array(\n        \"0\" => 0,\n        \"1\" => 1,\n       \
    \ \"2\" => 2,\n        \"3\" => 3,\n        \"4\" => 4,\n        \"5\" => 5,\n\
    \        \"6\" => 6,\n        \"7\" => 7,\n        \"8\" => 8,\n        \"9\"\
    \ => 9,\n        \"A\" => 10,\n        \"B\" => 11,\n        \"C\" => 12,\n  \
    \      \"D\" => 13,\n        \"E\" => 14,\n        \"F\" => 15\n    );\n    return\
    \ $hex_key[$num];\n}\nfunction candidate(...$args) {\n    return hex_key(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"AB\") !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"1077E\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ABED1A33\") !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2020\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"123456789ABCDEF0\") !== 6) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"112233445566778899AABBCCDDEEFF00\"\
    ) !== 12) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Warning:  Undefined array key \"AB\" in /tmp/tmp8w7izj22.php on line\
    \ 37\nPHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp8w7izj22.php:44\n\
    Stack trace:\n#0 /tmp/tmp8w7izj22.php(52): test()\n#1 {main}\n  thrown in /tmp/tmp8w7izj22.php\
    \ on line 44\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You have been tasked to write a function that receives \n//\
    \ a hexadecimal number as a string and counts the number of hexadecimal \n// digits\
    \ that are primes (prime number, or a prime, is a natural number \n// greater\
    \ than 1 that is not a product of two smaller natural numbers).\n// Hexadecimal\
    \ digits are 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, A, B, C, D, E, F.\n// Prime numbers\
    \ are 2, 3, 5, 7, 11, 13, 17,...\n// So you have to determine a number of the\
    \ following digits: 2, 3, 5, 7, \n// B (=decimal 11), D (=decimal 13).\n// Note:\
    \ you may assume the input is always correct or empty string, \n// and symbols\
    \ A,B,C,D,E,F are always uppercase.\n// Examples:\n// For num = \"AB\" the output\
    \ should be 1.\n// For num = \"1077E\" the output should be 2.\n// For num = \"\
    ABED1A33\" the output should be 4.\n// For num = \"123456789ABCDEF0\" the output\
    \ should be 6.\n// For num = \"2020\" the output should be 2.\nfunction hex_key($num)\
    \ {\n    $hex = array(\n        \"0\" => 0,\n        \"1\" => 1,\n        \"2\"\
    \ => 2,\n        \"3\" => 3,\n        \"4\" => 4,\n        \"5\" => 5,\n     \
    \   \"6\" => 6,\n        \"7\" => 7,\n        \"8\" => 8,\n        \"9\" => 9,\n\
    \        \"A\" => 10,\n        \"B\" => 11,\n        \"C\" => 12,\n        \"\
    D\" => 13,\n        \"E\" => 14,\n        \"F\" => 15\n    );\n    $prime = array(\n\
    \        \"2\" => 2,\n        \"3\" => 3,\n        \"5\" => 5,\n        \"7\"\
    \ => 7,\n        \"B\" => 11,\n        \"D\" => 13\n    );\n    $count = 0;\n\
    \    for ($i = 0; $i < strlen($num); $i++) {\n        if (array_key_exists($num[$i],\
    \ $prime)) {\n            $count++;\n        }\n    }\n    return $count;\n}\n\
    echo hex_key(\"AB\") . \"<br>\";\necho hex_key(\"1077E\") . \"<br>\";\necho hex_key(\"\
    ABED1A33\") . \"<br>\";\necho hex_key(\"123456789ABCDEF0\") . \"<br>\";\necho\
    \ hex_key(\"2020\") . \"<br>\";\nfunction candidate(...$args) {\n    return hex_key(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"AB\") !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"1077E\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ABED1A33\") !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2020\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"123456789ABCDEF0\") !== 6) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"112233445566778899AABBCCDDEEFF00\"\
    ) !== 12) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: 1<br>2<br>4<br>6<br>2<br>
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You have been tasked to write a function that receives \n//\
    \ a hexadecimal number as a string and counts the number of hexadecimal \n// digits\
    \ that are primes (prime number, or a prime, is a natural number \n// greater\
    \ than 1 that is not a product of two smaller natural numbers).\n// Hexadecimal\
    \ digits are 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, A, B, C, D, E, F.\n// Prime numbers\
    \ are 2, 3, 5, 7, 11, 13, 17,...\n// So you have to determine a number of the\
    \ following digits: 2, 3, 5, 7, \n// B (=decimal 11), D (=decimal 13).\n// Note:\
    \ you may assume the input is always correct or empty string, \n// and symbols\
    \ A,B,C,D,E,F are always uppercase.\n// Examples:\n// For num = \"AB\" the output\
    \ should be 1.\n// For num = \"1077E\" the output should be 2.\n// For num = \"\
    ABED1A33\" the output should be 4.\n// For num = \"123456789ABCDEF0\" the output\
    \ should be 6.\n// For num = \"2020\" the output should be 2.\nfunction hex_key($num)\
    \ {\n    $hex_key = array(\n        '0' => 0,\n        '1' => 1,\n        '2'\
    \ => 2,\n        '3' => 3,\n        '4' => 4,\n        '5' => 5,\n        '6'\
    \ => 6,\n        '7' => 7,\n        '8' => 8,\n        '9' => 9,\n        'A'\
    \ => 10,\n        'B' => 11,\n        'C' => 12,\n        'D' => 13,\n       \
    \ 'E' => 14,\n        'F' => 15\n    );\n    return $hex_key[$num];\n}\nfunction\
    \ candidate(...$args) {\n    return hex_key(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"AB\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"1077E\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ABED1A33\") !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"2020\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"123456789ABCDEF0\") !== 6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"112233445566778899AABBCCDDEEFF00\") !==\
    \ 12) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Warning:  Undefined array key \"AB\" in /tmp/tmpp1ejzvjy.php on line\
    \ 37\nPHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpp1ejzvjy.php:44\n\
    Stack trace:\n#0 /tmp/tmpp1ejzvjy.php(52): test()\n#1 {main}\n  thrown in /tmp/tmpp1ejzvjy.php\
    \ on line 44\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You have been tasked to write a function that receives \n//\
    \ a hexadecimal number as a string and counts the number of hexadecimal \n// digits\
    \ that are primes (prime number, or a prime, is a natural number \n// greater\
    \ than 1 that is not a product of two smaller natural numbers).\n// Hexadecimal\
    \ digits are 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, A, B, C, D, E, F.\n// Prime numbers\
    \ are 2, 3, 5, 7, 11, 13, 17,...\n// So you have to determine a number of the\
    \ following digits: 2, 3, 5, 7, \n// B (=decimal 11), D (=decimal 13).\n// Note:\
    \ you may assume the input is always correct or empty string, \n// and symbols\
    \ A,B,C,D,E,F are always uppercase.\n// Examples:\n// For num = \"AB\" the output\
    \ should be 1.\n// For num = \"1077E\" the output should be 2.\n// For num = \"\
    ABED1A33\" the output should be 4.\n// For num = \"123456789ABCDEF0\" the output\
    \ should be 6.\n// For num = \"2020\" the output should be 2.\nfunction hex_key($num)\
    \ {\n    $hex_key = [\n        '0' => 0,\n        '1' => 1,\n        '2' => 2,\n\
    \        '3' => 3,\n        '4' => 4,\n        '5' => 5,\n        '6' => 6,\n\
    \        '7' => 7,\n        '8' => 8,\n        '9' => 9,\n        'A' => 10,\n\
    \        'B' => 11,\n        'C' => 12,\n        'D' => 13,\n        'E' => 14,\n\
    \        'F' => 15\n    ];\n    return $hex_key[$num];\n}\nfunction candidate(...$args)\
    \ {\n    return hex_key(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    AB\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1077E\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ABED1A33\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2020\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    123456789ABCDEF0\") !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"112233445566778899AABBCCDDEEFF00\") !== 12) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Warning:  Undefined array key \"AB\" in /tmp/tmpduir3793.php on line\
    \ 37\nPHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpduir3793.php:44\n\
    Stack trace:\n#0 /tmp/tmpduir3793.php(52): test()\n#1 {main}\n  thrown in /tmp/tmpduir3793.php\
    \ on line 44\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You have been tasked to write a function that receives \n//\
    \ a hexadecimal number as a string and counts the number of hexadecimal \n// digits\
    \ that are primes (prime number, or a prime, is a natural number \n// greater\
    \ than 1 that is not a product of two smaller natural numbers).\n// Hexadecimal\
    \ digits are 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, A, B, C, D, E, F.\n// Prime numbers\
    \ are 2, 3, 5, 7, 11, 13, 17,...\n// So you have to determine a number of the\
    \ following digits: 2, 3, 5, 7, \n// B (=decimal 11), D (=decimal 13).\n// Note:\
    \ you may assume the input is always correct or empty string, \n// and symbols\
    \ A,B,C,D,E,F are always uppercase.\n// Examples:\n// For num = \"AB\" the output\
    \ should be 1.\n// For num = \"1077E\" the output should be 2.\n// For num = \"\
    ABED1A33\" the output should be 4.\n// For num = \"123456789ABCDEF0\" the output\
    \ should be 6.\n// For num = \"2020\" the output should be 2.\nfunction hex_key($num)\
    \ {\n    $hex = array(\n        '0' => 0,\n        '1' => 1,\n        '2' => 2,\n\
    \        '3' => 3,\n        '4' => 4,\n        '5' => 5,\n        '6' => 6,\n\
    \        '7' => 7,\n        '8' => 8,\n        '9' => 9,\n        'A' => 10,\n\
    \        'B' => 11,\n        'C' => 12,\n        'D' => 13,\n        'E' => 14,\n\
    \        'F' => 15\n    );\n    $prime = array(\n        2, 3, 5, 7, 11, 13\n\
    \    );\n    $count = 0;\n    for ($i = 0; $i < strlen($num); $i++) {\n      \
    \  if (in_array($hex[$num[$i]], $prime)) {\n            $count++;\n        }\n\
    \    }\n    return $count;\n}\necho hex_key(\"AB\");\necho \"<br>\";\necho hex_key(\"\
    1077E\");\necho \"<br>\";\necho hex_key(\"ABED1A33\");\necho \"<br>\";\necho hex_key(\"\
    123456789ABCDEF0\");\necho \"<br>\";\necho hex_key(\"2020\");\nfunction candidate(...$args)\
    \ {\n    return hex_key(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    AB\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1077E\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ABED1A33\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2020\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    123456789ABCDEF0\") !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"112233445566778899AABBCCDDEEFF00\") !== 12) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: 1<br>2<br>4<br>6<br>2
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You have been tasked to write a function that receives \n//\
    \ a hexadecimal number as a string and counts the number of hexadecimal \n// digits\
    \ that are primes (prime number, or a prime, is a natural number \n// greater\
    \ than 1 that is not a product of two smaller natural numbers).\n// Hexadecimal\
    \ digits are 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, A, B, C, D, E, F.\n// Prime numbers\
    \ are 2, 3, 5, 7, 11, 13, 17,...\n// So you have to determine a number of the\
    \ following digits: 2, 3, 5, 7, \n// B (=decimal 11), D (=decimal 13).\n// Note:\
    \ you may assume the input is always correct or empty string, \n// and symbols\
    \ A,B,C,D,E,F are always uppercase.\n// Examples:\n// For num = \"AB\" the output\
    \ should be 1.\n// For num = \"1077E\" the output should be 2.\n// For num = \"\
    ABED1A33\" the output should be 4.\n// For num = \"123456789ABCDEF0\" the output\
    \ should be 6.\n// For num = \"2020\" the output should be 2.\nfunction hex_key($num)\
    \ {\n    $hex_key = array(\n        '0' => 0,\n        '1' => 1,\n        '2'\
    \ => 2,\n        '3' => 3,\n        '4' => 4,\n        '5' => 5,\n        '6'\
    \ => 6,\n        '7' => 7,\n        '8' => 8,\n        '9' => 9,\n        'A'\
    \ => 10,\n        'B' => 11,\n        'C' => 12,\n        'D' => 13,\n       \
    \ 'E' => 14,\n        'F' => 15\n    );\n    return $hex_key[$num];\n}\nfunction\
    \ candidate(...$args) {\n    return hex_key(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"AB\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"1077E\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ABED1A33\") !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"2020\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"123456789ABCDEF0\") !== 6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"112233445566778899AABBCCDDEEFF00\") !==\
    \ 12) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Warning:  Undefined array key \"AB\" in /tmp/tmpe_lwva0o.php on line\
    \ 37\nPHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpe_lwva0o.php:44\n\
    Stack trace:\n#0 /tmp/tmpe_lwva0o.php(52): test()\n#1 {main}\n  thrown in /tmp/tmpe_lwva0o.php\
    \ on line 44\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You have been tasked to write a function that receives \n//\
    \ a hexadecimal number as a string and counts the number of hexadecimal \n// digits\
    \ that are primes (prime number, or a prime, is a natural number \n// greater\
    \ than 1 that is not a product of two smaller natural numbers).\n// Hexadecimal\
    \ digits are 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, A, B, C, D, E, F.\n// Prime numbers\
    \ are 2, 3, 5, 7, 11, 13, 17,...\n// So you have to determine a number of the\
    \ following digits: 2, 3, 5, 7, \n// B (=decimal 11), D (=decimal 13).\n// Note:\
    \ you may assume the input is always correct or empty string, \n// and symbols\
    \ A,B,C,D,E,F are always uppercase.\n// Examples:\n// For num = \"AB\" the output\
    \ should be 1.\n// For num = \"1077E\" the output should be 2.\n// For num = \"\
    ABED1A33\" the output should be 4.\n// For num = \"123456789ABCDEF0\" the output\
    \ should be 6.\n// For num = \"2020\" the output should be 2.\nfunction hex_key($num)\
    \ {\n    $hex = array(\n        '0' => 0,\n        '1' => 1,\n        '2' => 2,\n\
    \        '3' => 3,\n        '4' => 4,\n        '5' => 5,\n        '6' => 6,\n\
    \        '7' => 7,\n        '8' => 8,\n        '9' => 9,\n        'A' => 10,\n\
    \        'B' => 11,\n        'C' => 12,\n        'D' => 13,\n        'E' => 14,\n\
    \        'F' => 15\n    );\n    $primes = array(2, 3, 5, 7, 11, 13);\n    $count\
    \ = 0;\n    for ($i = 0; $i < strlen($num); $i++) {\n        if (in_array($hex[$num[$i]],\
    \ $primes)) {\n            $count++;\n        }\n    }\n    return $count;\n}\n\
    echo hex_key(\"AB\") . \"\\n\";\necho hex_key(\"1077E\") . \"\\n\";\necho hex_key(\"\
    ABED1A33\") . \"\\n\";\necho hex_key(\"123456789ABCDEF0\") . \"\\n\";\necho hex_key(\"\
    2020\") . \"\\n\";\nfunction candidate(...$args) {\n    return hex_key(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"AB\") !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"1077E\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ABED1A33\") !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2020\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"123456789ABCDEF0\") !== 6) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"112233445566778899AABBCCDDEEFF00\"\
    ) !== 12) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "1\n2\n4\n6\n2\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You have been tasked to write a function that receives \n//\
    \ a hexadecimal number as a string and counts the number of hexadecimal \n// digits\
    \ that are primes (prime number, or a prime, is a natural number \n// greater\
    \ than 1 that is not a product of two smaller natural numbers).\n// Hexadecimal\
    \ digits are 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, A, B, C, D, E, F.\n// Prime numbers\
    \ are 2, 3, 5, 7, 11, 13, 17,...\n// So you have to determine a number of the\
    \ following digits: 2, 3, 5, 7, \n// B (=decimal 11), D (=decimal 13).\n// Note:\
    \ you may assume the input is always correct or empty string, \n// and symbols\
    \ A,B,C,D,E,F are always uppercase.\n// Examples:\n// For num = \"AB\" the output\
    \ should be 1.\n// For num = \"1077E\" the output should be 2.\n// For num = \"\
    ABED1A33\" the output should be 4.\n// For num = \"123456789ABCDEF0\" the output\
    \ should be 6.\n// For num = \"2020\" the output should be 2.\nfunction hex_key($num)\
    \ {\n    $hex_key = array(\n        '0' => 0,\n        '1' => 1,\n        '2'\
    \ => 2,\n        '3' => 3,\n        '4' => 4,\n        '5' => 5,\n        '6'\
    \ => 6,\n        '7' => 7,\n        '8' => 8,\n        '9' => 9,\n        'A'\
    \ => 10,\n        'B' => 11,\n        'C' => 12,\n        'D' => 13,\n       \
    \ 'E' => 14,\n        'F' => 15\n    );\n    return $hex_key[$num];\n}\nfunction\
    \ candidate(...$args) {\n    return hex_key(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"AB\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"1077E\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ABED1A33\") !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"2020\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"123456789ABCDEF0\") !== 6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"112233445566778899AABBCCDDEEFF00\") !==\
    \ 12) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Warning:  Undefined array key \"AB\" in /tmp/tmprw26ojhq.php on line\
    \ 37\nPHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmprw26ojhq.php:44\n\
    Stack trace:\n#0 /tmp/tmprw26ojhq.php(52): test()\n#1 {main}\n  thrown in /tmp/tmprw26ojhq.php\
    \ on line 44\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You have been tasked to write a function that receives \n//\
    \ a hexadecimal number as a string and counts the number of hexadecimal \n// digits\
    \ that are primes (prime number, or a prime, is a natural number \n// greater\
    \ than 1 that is not a product of two smaller natural numbers).\n// Hexadecimal\
    \ digits are 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, A, B, C, D, E, F.\n// Prime numbers\
    \ are 2, 3, 5, 7, 11, 13, 17,...\n// So you have to determine a number of the\
    \ following digits: 2, 3, 5, 7, \n// B (=decimal 11), D (=decimal 13).\n// Note:\
    \ you may assume the input is always correct or empty string, \n// and symbols\
    \ A,B,C,D,E,F are always uppercase.\n// Examples:\n// For num = \"AB\" the output\
    \ should be 1.\n// For num = \"1077E\" the output should be 2.\n// For num = \"\
    ABED1A33\" the output should be 4.\n// For num = \"123456789ABCDEF0\" the output\
    \ should be 6.\n// For num = \"2020\" the output should be 2.\nfunction hex_key($num)\
    \ {\n    $hex_key = array(\n        '0' => 0,\n        '1' => 1,\n        '2'\
    \ => 2,\n        '3' => 3,\n        '4' => 4,\n        '5' => 5,\n        '6'\
    \ => 6,\n        '7' => 7,\n        '8' => 8,\n        '9' => 9,\n        'A'\
    \ => 10,\n        'B' => 11,\n        'C' => 12,\n        'D' => 13,\n       \
    \ 'E' => 14,\n        'F' => 15\n    );\n    return $hex_key[$num];\n}\n\nfunction\
    \ candidate(...$args) {\n    return hex_key(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"AB\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"1077E\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ABED1A33\") !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"2020\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"123456789ABCDEF0\") !== 6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"112233445566778899AABBCCDDEEFF00\") !==\
    \ 12) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Warning:  Undefined array key \"AB\" in /tmp/tmpw6rtdh06.php on line\
    \ 37\nPHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpw6rtdh06.php:45\n\
    Stack trace:\n#0 /tmp/tmpw6rtdh06.php(53): test()\n#1 {main}\n  thrown in /tmp/tmpw6rtdh06.php\
    \ on line 45\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You have been tasked to write a function that receives \n//\
    \ a hexadecimal number as a string and counts the number of hexadecimal \n// digits\
    \ that are primes (prime number, or a prime, is a natural number \n// greater\
    \ than 1 that is not a product of two smaller natural numbers).\n// Hexadecimal\
    \ digits are 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, A, B, C, D, E, F.\n// Prime numbers\
    \ are 2, 3, 5, 7, 11, 13, 17,...\n// So you have to determine a number of the\
    \ following digits: 2, 3, 5, 7, \n// B (=decimal 11), D (=decimal 13).\n// Note:\
    \ you may assume the input is always correct or empty string, \n// and symbols\
    \ A,B,C,D,E,F are always uppercase.\n// Examples:\n// For num = \"AB\" the output\
    \ should be 1.\n// For num = \"1077E\" the output should be 2.\n// For num = \"\
    ABED1A33\" the output should be 4.\n// For num = \"123456789ABCDEF0\" the output\
    \ should be 6.\n// For num = \"2020\" the output should be 2.\nfunction hex_key($num)\
    \ {\n    $hex = array(\n        \"0\" => 0,\n        \"1\" => 1,\n        \"2\"\
    \ => 2,\n        \"3\" => 3,\n        \"4\" => 4,\n        \"5\" => 5,\n     \
    \   \"6\" => 6,\n        \"7\" => 7,\n        \"8\" => 8,\n        \"9\" => 9,\n\
    \        \"A\" => 10,\n        \"B\" => 11,\n        \"C\" => 12,\n        \"\
    D\" => 13,\n        \"E\" => 14,\n        \"F\" => 15\n    );\n    return $hex[$num];\n\
    }\nfunction candidate(...$args) {\n    return hex_key(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"AB\") !== 1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"1077E\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ABED1A33\") !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2020\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"123456789ABCDEF0\") !== 6) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"112233445566778899AABBCCDDEEFF00\"\
    ) !== 12) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Warning:  Undefined array key \"AB\" in /tmp/tmp1nwdeu0c.php on line\
    \ 37\nPHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp1nwdeu0c.php:44\n\
    Stack trace:\n#0 /tmp/tmp1nwdeu0c.php(52): test()\n#1 {main}\n  thrown in /tmp/tmp1nwdeu0c.php\
    \ on line 44\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You have been tasked to write a function that receives \n//\
    \ a hexadecimal number as a string and counts the number of hexadecimal \n// digits\
    \ that are primes (prime number, or a prime, is a natural number \n// greater\
    \ than 1 that is not a product of two smaller natural numbers).\n// Hexadecimal\
    \ digits are 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, A, B, C, D, E, F.\n// Prime numbers\
    \ are 2, 3, 5, 7, 11, 13, 17,...\n// So you have to determine a number of the\
    \ following digits: 2, 3, 5, 7, \n// B (=decimal 11), D (=decimal 13).\n// Note:\
    \ you may assume the input is always correct or empty string, \n// and symbols\
    \ A,B,C,D,E,F are always uppercase.\n// Examples:\n// For num = \"AB\" the output\
    \ should be 1.\n// For num = \"1077E\" the output should be 2.\n// For num = \"\
    ABED1A33\" the output should be 4.\n// For num = \"123456789ABCDEF0\" the output\
    \ should be 6.\n// For num = \"2020\" the output should be 2.\nfunction hex_key($num)\
    \ {\n    $hex = [\n        '0' => 0,\n        '1' => 1,\n        '2' => 2,\n \
    \       '3' => 3,\n        '4' => 4,\n        '5' => 5,\n        '6' => 6,\n \
    \       '7' => 7,\n        '8' => 8,\n        '9' => 9,\n        'A' => 10,\n\
    \        'B' => 11,\n        'C' => 12,\n        'D' => 13,\n        'E' => 14,\n\
    \        'F' => 15\n    ];\n    $primes = [2, 3, 5, 7, 11, 13];\n    $count =\
    \ 0;\n    $num = str_split($num);\n    foreach ($num as $key => $value) {\n  \
    \      if (in_array($hex[$value], $primes)) {\n            $count++;\n       \
    \ }\n    }\n    return $count;\n}\necho hex_key(\"AB\") . \"<br>\";\necho hex_key(\"\
    1077E\") . \"<br>\";\necho hex_key(\"ABED1A33\") . \"<br>\";\necho hex_key(\"\
    123456789ABCDEF0\") . \"<br>\";\necho hex_key(\"2020\") . \"<br>\";\nfunction\
    \ candidate(...$args) {\n    return hex_key(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"AB\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"1077E\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ABED1A33\") !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"2020\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"123456789ABCDEF0\") !== 6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"112233445566778899AABBCCDDEEFF00\") !==\
    \ 12) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: 1<br>2<br>4<br>6<br>2<br>
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You have been tasked to write a function that receives \n//\
    \ a hexadecimal number as a string and counts the number of hexadecimal \n// digits\
    \ that are primes (prime number, or a prime, is a natural number \n// greater\
    \ than 1 that is not a product of two smaller natural numbers).\n// Hexadecimal\
    \ digits are 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, A, B, C, D, E, F.\n// Prime numbers\
    \ are 2, 3, 5, 7, 11, 13, 17,...\n// So you have to determine a number of the\
    \ following digits: 2, 3, 5, 7, \n// B (=decimal 11), D (=decimal 13).\n// Note:\
    \ you may assume the input is always correct or empty string, \n// and symbols\
    \ A,B,C,D,E,F are always uppercase.\n// Examples:\n// For num = \"AB\" the output\
    \ should be 1.\n// For num = \"1077E\" the output should be 2.\n// For num = \"\
    ABED1A33\" the output should be 4.\n// For num = \"123456789ABCDEF0\" the output\
    \ should be 6.\n// For num = \"2020\" the output should be 2.\nfunction hex_key($num)\
    \ {\n    $hex_key = array(\n        '0' => 0,\n        '1' => 1,\n        '2'\
    \ => 2,\n        '3' => 3,\n        '4' => 4,\n        '5' => 5,\n        '6'\
    \ => 6,\n        '7' => 7,\n        '8' => 8,\n        '9' => 9,\n        'A'\
    \ => 10,\n        'B' => 11,\n        'C' => 12,\n        'D' => 13,\n       \
    \ 'E' => 14,\n        'F' => 15\n    );\n    return $hex_key[$num];\n}\n\nfunction\
    \ candidate(...$args) {\n    return hex_key(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"AB\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"1077E\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ABED1A33\") !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"2020\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"123456789ABCDEF0\") !== 6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"112233445566778899AABBCCDDEEFF00\") !==\
    \ 12) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Warning:  Undefined array key \"AB\" in /tmp/tmp00bvlfqy.php on line\
    \ 37\nPHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp00bvlfqy.php:45\n\
    Stack trace:\n#0 /tmp/tmp00bvlfqy.php(53): test()\n#1 {main}\n  thrown in /tmp/tmp00bvlfqy.php\
    \ on line 45\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You have been tasked to write a function that receives \n//\
    \ a hexadecimal number as a string and counts the number of hexadecimal \n// digits\
    \ that are primes (prime number, or a prime, is a natural number \n// greater\
    \ than 1 that is not a product of two smaller natural numbers).\n// Hexadecimal\
    \ digits are 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, A, B, C, D, E, F.\n// Prime numbers\
    \ are 2, 3, 5, 7, 11, 13, 17,...\n// So you have to determine a number of the\
    \ following digits: 2, 3, 5, 7, \n// B (=decimal 11), D (=decimal 13).\n// Note:\
    \ you may assume the input is always correct or empty string, \n// and symbols\
    \ A,B,C,D,E,F are always uppercase.\n// Examples:\n// For num = \"AB\" the output\
    \ should be 1.\n// For num = \"1077E\" the output should be 2.\n// For num = \"\
    ABED1A33\" the output should be 4.\n// For num = \"123456789ABCDEF0\" the output\
    \ should be 6.\n// For num = \"2020\" the output should be 2.\nfunction hex_key($num)\
    \ {\n    $hex_key = ['0' => 0, '1' => 1, '2' => 2, '3' => 3, '4' => 4, '5' =>\
    \ 5, '6' => 6, '7' => 7, '8' => 8, '9' => 9, 'A' => 10, 'B' => 11, 'C' => 12,\
    \ 'D' => 13, 'E' => 14, 'F' => 15];\n    return $hex_key[$num];\n}\nfunction candidate(...$args)\
    \ {\n    return hex_key(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    AB\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1077E\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ABED1A33\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2020\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    123456789ABCDEF0\") !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"112233445566778899AABBCCDDEEFF00\") !== 12) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Warning:  Undefined array key \"AB\" in /tmp/tmpqxin7m2m.php on line\
    \ 20\nPHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpqxin7m2m.php:27\n\
    Stack trace:\n#0 /tmp/tmpqxin7m2m.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpqxin7m2m.php\
    \ on line 27\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You have been tasked to write a function that receives \n//\
    \ a hexadecimal number as a string and counts the number of hexadecimal \n// digits\
    \ that are primes (prime number, or a prime, is a natural number \n// greater\
    \ than 1 that is not a product of two smaller natural numbers).\n// Hexadecimal\
    \ digits are 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, A, B, C, D, E, F.\n// Prime numbers\
    \ are 2, 3, 5, 7, 11, 13, 17,...\n// So you have to determine a number of the\
    \ following digits: 2, 3, 5, 7, \n// B (=decimal 11), D (=decimal 13).\n// Note:\
    \ you may assume the input is always correct or empty string, \n// and symbols\
    \ A,B,C,D,E,F are always uppercase.\n// Examples:\n// For num = \"AB\" the output\
    \ should be 1.\n// For num = \"1077E\" the output should be 2.\n// For num = \"\
    ABED1A33\" the output should be 4.\n// For num = \"123456789ABCDEF0\" the output\
    \ should be 6.\n// For num = \"2020\" the output should be 2.\nfunction hex_key($num)\
    \ {\n    $hex = array(\n        \"0\" => 0,\n        \"1\" => 1,\n        \"2\"\
    \ => 2,\n        \"3\" => 3,\n        \"4\" => 4,\n        \"5\" => 5,\n     \
    \   \"6\" => 6,\n        \"7\" => 7,\n        \"8\" => 8,\n        \"9\" => 9,\n\
    \        \"A\" => 10,\n        \"B\" => 11,\n        \"C\" => 12,\n        \"\
    D\" => 13,\n        \"E\" => 14,\n        \"F\" => 15\n    );\n    $prime = array(2,\
    \ 3, 5, 7, 11, 13);\n    $count = 0;\n    for ($i = 0; $i < strlen($num); $i++)\
    \ {\n        if (in_array($hex[$num[$i]], $prime)) {\n            $count++;\n\
    \        }\n    }\n    return $count;\n}\necho hex_key(\"AB\") . \"<br>\";\necho\
    \ hex_key(\"1077E\") . \"<br>\";\necho hex_key(\"ABED1A33\") . \"<br>\";\necho\
    \ hex_key(\"123456789ABCDEF0\") . \"<br>\";\necho hex_key(\"2020\") . \"<br>\"\
    ;\nfunction candidate(...$args) {\n    return hex_key(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"AB\") !== 1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"1077E\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ABED1A33\") !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2020\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"123456789ABCDEF0\") !== 6) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"112233445566778899AABBCCDDEEFF00\"\
    ) !== 12) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: 1<br>2<br>4<br>6<br>2<br>
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You have been tasked to write a function that receives \n//\
    \ a hexadecimal number as a string and counts the number of hexadecimal \n// digits\
    \ that are primes (prime number, or a prime, is a natural number \n// greater\
    \ than 1 that is not a product of two smaller natural numbers).\n// Hexadecimal\
    \ digits are 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, A, B, C, D, E, F.\n// Prime numbers\
    \ are 2, 3, 5, 7, 11, 13, 17,...\n// So you have to determine a number of the\
    \ following digits: 2, 3, 5, 7, \n// B (=decimal 11), D (=decimal 13).\n// Note:\
    \ you may assume the input is always correct or empty string, \n// and symbols\
    \ A,B,C,D,E,F are always uppercase.\n// Examples:\n// For num = \"AB\" the output\
    \ should be 1.\n// For num = \"1077E\" the output should be 2.\n// For num = \"\
    ABED1A33\" the output should be 4.\n// For num = \"123456789ABCDEF0\" the output\
    \ should be 6.\n// For num = \"2020\" the output should be 2.\nfunction hex_key($num)\
    \ {\n    $hex = array(\n        \"0\" => 0,\n        \"1\" => 1,\n        \"2\"\
    \ => 2,\n        \"3\" => 3,\n        \"4\" => 4,\n        \"5\" => 5,\n     \
    \   \"6\" => 6,\n        \"7\" => 7,\n        \"8\" => 8,\n        \"9\" => 9,\n\
    \        \"A\" => 10,\n        \"B\" => 11,\n        \"C\" => 12,\n        \"\
    D\" => 13,\n        \"E\" => 14,\n        \"F\" => 15\n    );\n    $primes = array(2,\
    \ 3, 5, 7, 11, 13);\n    $count = 0;\n    for ($i = 0; $i < strlen($num); $i++)\
    \ {\n        if (in_array($hex[$num[$i]], $primes)) {\n            $count++;\n\
    \        }\n    }\n    return $count;\n}\necho hex_key(\"AB\") . \"<br>\";\necho\
    \ hex_key(\"1077E\") . \"<br>\";\necho hex_key(\"ABED1A33\") . \"<br>\";\necho\
    \ hex_key(\"123456789ABCDEF0\") . \"<br>\";\necho hex_key(\"2020\") . \"<br>\"\
    ;\nfunction candidate(...$args) {\n    return hex_key(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"AB\") !== 1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"1077E\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ABED1A33\") !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2020\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"123456789ABCDEF0\") !== 6) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"112233445566778899AABBCCDDEEFF00\"\
    ) !== 12) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: 1<br>2<br>4<br>6<br>2<br>
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You have been tasked to write a function that receives \n//\
    \ a hexadecimal number as a string and counts the number of hexadecimal \n// digits\
    \ that are primes (prime number, or a prime, is a natural number \n// greater\
    \ than 1 that is not a product of two smaller natural numbers).\n// Hexadecimal\
    \ digits are 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, A, B, C, D, E, F.\n// Prime numbers\
    \ are 2, 3, 5, 7, 11, 13, 17,...\n// So you have to determine a number of the\
    \ following digits: 2, 3, 5, 7, \n// B (=decimal 11), D (=decimal 13).\n// Note:\
    \ you may assume the input is always correct or empty string, \n// and symbols\
    \ A,B,C,D,E,F are always uppercase.\n// Examples:\n// For num = \"AB\" the output\
    \ should be 1.\n// For num = \"1077E\" the output should be 2.\n// For num = \"\
    ABED1A33\" the output should be 4.\n// For num = \"123456789ABCDEF0\" the output\
    \ should be 6.\n// For num = \"2020\" the output should be 2.\nfunction hex_key($num)\
    \ {\n    $hex_key = array(\n        '0' => 0,\n        '1' => 1,\n        '2'\
    \ => 2,\n        '3' => 3,\n        '4' => 4,\n        '5' => 5,\n        '6'\
    \ => 6,\n        '7' => 7,\n        '8' => 8,\n        '9' => 9,\n        'A'\
    \ => 10,\n        'B' => 11,\n        'C' => 12,\n        'D' => 13,\n       \
    \ 'E' => 14,\n        'F' => 15\n    );\n    return $hex_key[$num];\n}\nfunction\
    \ candidate(...$args) {\n    return hex_key(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"AB\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"1077E\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ABED1A33\") !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"2020\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"123456789ABCDEF0\") !== 6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"112233445566778899AABBCCDDEEFF00\") !==\
    \ 12) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Warning:  Undefined array key \"AB\" in /tmp/tmphhtmfd9t.php on line\
    \ 37\nPHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmphhtmfd9t.php:44\n\
    Stack trace:\n#0 /tmp/tmphhtmfd9t.php(52): test()\n#1 {main}\n  thrown in /tmp/tmphhtmfd9t.php\
    \ on line 44\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You have been tasked to write a function that receives \n//\
    \ a hexadecimal number as a string and counts the number of hexadecimal \n// digits\
    \ that are primes (prime number, or a prime, is a natural number \n// greater\
    \ than 1 that is not a product of two smaller natural numbers).\n// Hexadecimal\
    \ digits are 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, A, B, C, D, E, F.\n// Prime numbers\
    \ are 2, 3, 5, 7, 11, 13, 17,...\n// So you have to determine a number of the\
    \ following digits: 2, 3, 5, 7, \n// B (=decimal 11), D (=decimal 13).\n// Note:\
    \ you may assume the input is always correct or empty string, \n// and symbols\
    \ A,B,C,D,E,F are always uppercase.\n// Examples:\n// For num = \"AB\" the output\
    \ should be 1.\n// For num = \"1077E\" the output should be 2.\n// For num = \"\
    ABED1A33\" the output should be 4.\n// For num = \"123456789ABCDEF0\" the output\
    \ should be 6.\n// For num = \"2020\" the output should be 2.\nfunction hex_key($num)\
    \ {\n    $hex_key = array(\n        '0' => 0,\n        '1' => 1,\n        '2'\
    \ => 2,\n        '3' => 3,\n        '4' => 4,\n        '5' => 5,\n        '6'\
    \ => 6,\n        '7' => 7,\n        '8' => 8,\n        '9' => 9,\n        'A'\
    \ => 10,\n        'B' => 11,\n        'C' => 12,\n        'D' => 13,\n       \
    \ 'E' => 14,\n        'F' => 15\n    );\n    return $hex_key[$num];\n}\nfunction\
    \ candidate(...$args) {\n    return hex_key(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"AB\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"1077E\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ABED1A33\") !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"2020\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"123456789ABCDEF0\") !== 6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"112233445566778899AABBCCDDEEFF00\") !==\
    \ 12) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Warning:  Undefined array key \"AB\" in /tmp/tmpoaqlzot8.php on line\
    \ 37\nPHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpoaqlzot8.php:44\n\
    Stack trace:\n#0 /tmp/tmpoaqlzot8.php(52): test()\n#1 {main}\n  thrown in /tmp/tmpoaqlzot8.php\
    \ on line 44\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You have been tasked to write a function that receives \n//\
    \ a hexadecimal number as a string and counts the number of hexadecimal \n// digits\
    \ that are primes (prime number, or a prime, is a natural number \n// greater\
    \ than 1 that is not a product of two smaller natural numbers).\n// Hexadecimal\
    \ digits are 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, A, B, C, D, E, F.\n// Prime numbers\
    \ are 2, 3, 5, 7, 11, 13, 17,...\n// So you have to determine a number of the\
    \ following digits: 2, 3, 5, 7, \n// B (=decimal 11), D (=decimal 13).\n// Note:\
    \ you may assume the input is always correct or empty string, \n// and symbols\
    \ A,B,C,D,E,F are always uppercase.\n// Examples:\n// For num = \"AB\" the output\
    \ should be 1.\n// For num = \"1077E\" the output should be 2.\n// For num = \"\
    ABED1A33\" the output should be 4.\n// For num = \"123456789ABCDEF0\" the output\
    \ should be 6.\n// For num = \"2020\" the output should be 2.\nfunction hex_key($num)\
    \ {\n    $hex_key = array(\n        \"0\" => 0,\n        \"1\" => 1,\n       \
    \ \"2\" => 2,\n        \"3\" => 3,\n        \"4\" => 4,\n        \"5\" => 5,\n\
    \        \"6\" => 6,\n        \"7\" => 7,\n        \"8\" => 8,\n        \"9\"\
    \ => 9,\n        \"A\" => 10,\n        \"B\" => 11,\n        \"C\" => 12,\n  \
    \      \"D\" => 13,\n        \"E\" => 14,\n        \"F\" => 15\n    );\n    return\
    \ $hex_key[$num];\n}\nfunction candidate(...$args) {\n    return hex_key(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"AB\") !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"1077E\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ABED1A33\") !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2020\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"123456789ABCDEF0\") !== 6) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"112233445566778899AABBCCDDEEFF00\"\
    ) !== 12) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Warning:  Undefined array key \"AB\" in /tmp/tmpo433pyaf.php on line\
    \ 37\nPHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpo433pyaf.php:44\n\
    Stack trace:\n#0 /tmp/tmpo433pyaf.php(52): test()\n#1 {main}\n  thrown in /tmp/tmpo433pyaf.php\
    \ on line 44\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You have been tasked to write a function that receives \n//\
    \ a hexadecimal number as a string and counts the number of hexadecimal \n// digits\
    \ that are primes (prime number, or a prime, is a natural number \n// greater\
    \ than 1 that is not a product of two smaller natural numbers).\n// Hexadecimal\
    \ digits are 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, A, B, C, D, E, F.\n// Prime numbers\
    \ are 2, 3, 5, 7, 11, 13, 17,...\n// So you have to determine a number of the\
    \ following digits: 2, 3, 5, 7, \n// B (=decimal 11), D (=decimal 13).\n// Note:\
    \ you may assume the input is always correct or empty string, \n// and symbols\
    \ A,B,C,D,E,F are always uppercase.\n// Examples:\n// For num = \"AB\" the output\
    \ should be 1.\n// For num = \"1077E\" the output should be 2.\n// For num = \"\
    ABED1A33\" the output should be 4.\n// For num = \"123456789ABCDEF0\" the output\
    \ should be 6.\n// For num = \"2020\" the output should be 2.\nfunction hex_key($num)\
    \ {\n    $hex_key = array(\n        \"0\" => 0,\n        \"1\" => 1,\n       \
    \ \"2\" => 2,\n        \"3\" => 3,\n        \"4\" => 4,\n        \"5\" => 5,\n\
    \        \"6\" => 6,\n        \"7\" => 7,\n        \"8\" => 8,\n        \"9\"\
    \ => 9,\n        \"A\" => 10,\n        \"B\" => 11,\n        \"C\" => 12,\n  \
    \      \"D\" => 13,\n        \"E\" => 14,\n        \"F\" => 15\n    );\n    return\
    \ $hex_key[$num];\n}\nfunction candidate(...$args) {\n    return hex_key(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"AB\") !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"1077E\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ABED1A33\") !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2020\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"123456789ABCDEF0\") !== 6) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"112233445566778899AABBCCDDEEFF00\"\
    ) !== 12) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Warning:  Undefined array key \"AB\" in /tmp/tmpfhlt4do6.php on line\
    \ 37\nPHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpfhlt4do6.php:44\n\
    Stack trace:\n#0 /tmp/tmpfhlt4do6.php(52): test()\n#1 {main}\n  thrown in /tmp/tmpfhlt4do6.php\
    \ on line 44\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You have been tasked to write a function that receives \n//\
    \ a hexadecimal number as a string and counts the number of hexadecimal \n// digits\
    \ that are primes (prime number, or a prime, is a natural number \n// greater\
    \ than 1 that is not a product of two smaller natural numbers).\n// Hexadecimal\
    \ digits are 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, A, B, C, D, E, F.\n// Prime numbers\
    \ are 2, 3, 5, 7, 11, 13, 17,...\n// So you have to determine a number of the\
    \ following digits: 2, 3, 5, 7, \n// B (=decimal 11), D (=decimal 13).\n// Note:\
    \ you may assume the input is always correct or empty string, \n// and symbols\
    \ A,B,C,D,E,F are always uppercase.\n// Examples:\n// For num = \"AB\" the output\
    \ should be 1.\n// For num = \"1077E\" the output should be 2.\n// For num = \"\
    ABED1A33\" the output should be 4.\n// For num = \"123456789ABCDEF0\" the output\
    \ should be 6.\n// For num = \"2020\" the output should be 2.\nfunction hex_key($num)\
    \ {\n    $hex = array(\n        '0' => 0,\n        '1' => 1,\n        '2' => 2,\n\
    \        '3' => 3,\n        '4' => 4,\n        '5' => 5,\n        '6' => 6,\n\
    \        '7' => 7,\n        '8' => 8,\n        '9' => 9,\n        'A' => 10,\n\
    \        'B' => 11,\n        'C' => 12,\n        'D' => 13,\n        'E' => 14,\n\
    \        'F' => 15\n    );\n    $prime = array(2, 3, 5, 7, 11, 13);\n    $count\
    \ = 0;\n    for ($i = 0; $i < strlen($num); $i++) {\n        if (in_array($hex[$num[$i]],\
    \ $prime)) {\n            $count++;\n        }\n    }\n    return $count;\n}\n\
    echo hex_key(\"AB\") . \"\\n\";\necho hex_key(\"1077E\") . \"\\n\";\necho hex_key(\"\
    ABED1A33\") . \"\\n\";\necho hex_key(\"123456789ABCDEF0\") . \"\\n\";\necho hex_key(\"\
    2020\") . \"\\n\";\nfunction candidate(...$args) {\n    return hex_key(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"AB\") !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"1077E\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ABED1A33\") !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2020\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"123456789ABCDEF0\") !== 6) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"112233445566778899AABBCCDDEEFF00\"\
    ) !== 12) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "1\n2\n4\n6\n2\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You have been tasked to write a function that receives \n//\
    \ a hexadecimal number as a string and counts the number of hexadecimal \n// digits\
    \ that are primes (prime number, or a prime, is a natural number \n// greater\
    \ than 1 that is not a product of two smaller natural numbers).\n// Hexadecimal\
    \ digits are 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, A, B, C, D, E, F.\n// Prime numbers\
    \ are 2, 3, 5, 7, 11, 13, 17,...\n// So you have to determine a number of the\
    \ following digits: 2, 3, 5, 7, \n// B (=decimal 11), D (=decimal 13).\n// Note:\
    \ you may assume the input is always correct or empty string, \n// and symbols\
    \ A,B,C,D,E,F are always uppercase.\n// Examples:\n// For num = \"AB\" the output\
    \ should be 1.\n// For num = \"1077E\" the output should be 2.\n// For num = \"\
    ABED1A33\" the output should be 4.\n// For num = \"123456789ABCDEF0\" the output\
    \ should be 6.\n// For num = \"2020\" the output should be 2.\nfunction hex_key($num)\
    \ {\n    $hex_key = array(\n        '0' => 0,\n        '1' => 1,\n        '2'\
    \ => 2,\n        '3' => 3,\n        '4' => 4,\n        '5' => 5,\n        '6'\
    \ => 6,\n        '7' => 7,\n        '8' => 8,\n        '9' => 9,\n        'A'\
    \ => 10,\n        'B' => 11,\n        'C' => 12,\n        'D' => 13,\n       \
    \ 'E' => 14,\n        'F' => 15\n    );\n    return $hex_key[$num];\n}\nfunction\
    \ candidate(...$args) {\n    return hex_key(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"AB\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"1077E\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ABED1A33\") !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"2020\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"123456789ABCDEF0\") !== 6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"112233445566778899AABBCCDDEEFF00\") !==\
    \ 12) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Warning:  Undefined array key \"AB\" in /tmp/tmpod_8nkoo.php on line\
    \ 37\nPHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpod_8nkoo.php:44\n\
    Stack trace:\n#0 /tmp/tmpod_8nkoo.php(52): test()\n#1 {main}\n  thrown in /tmp/tmpod_8nkoo.php\
    \ on line 44\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You have been tasked to write a function that receives \n//\
    \ a hexadecimal number as a string and counts the number of hexadecimal \n// digits\
    \ that are primes (prime number, or a prime, is a natural number \n// greater\
    \ than 1 that is not a product of two smaller natural numbers).\n// Hexadecimal\
    \ digits are 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, A, B, C, D, E, F.\n// Prime numbers\
    \ are 2, 3, 5, 7, 11, 13, 17,...\n// So you have to determine a number of the\
    \ following digits: 2, 3, 5, 7, \n// B (=decimal 11), D (=decimal 13).\n// Note:\
    \ you may assume the input is always correct or empty string, \n// and symbols\
    \ A,B,C,D,E,F are always uppercase.\n// Examples:\n// For num = \"AB\" the output\
    \ should be 1.\n// For num = \"1077E\" the output should be 2.\n// For num = \"\
    ABED1A33\" the output should be 4.\n// For num = \"123456789ABCDEF0\" the output\
    \ should be 6.\n// For num = \"2020\" the output should be 2.\nfunction hex_key($num)\
    \ {\n    $hex = ['0','1','2','3','4','5','6','7','8','9','A','B','C','D','E','F'];\n\
    \    $prime = [2,3,5,7,11,13];\n    $count = 0;\n    $num = str_split($num);\n\
    \    foreach ($num as $key => $value) {\n        if (in_array($value, $hex)) {\n\
    \            if (in_array($value, $prime)) {\n                $count++;\n    \
    \        }\n        }\n    }\n    return $count;\n}\necho hex_key(\"AB\");\necho\
    \ \"<br>\";\necho hex_key(\"1077E\");\necho \"<br>\";\necho hex_key(\"ABED1A33\"\
    );\necho \"<br>\";\necho hex_key(\"123456789ABCDEF0\");\necho \"<br>\";\necho\
    \ hex_key(\"2020\");\nfunction candidate(...$args) {\n    return hex_key(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"AB\") !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"1077E\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ABED1A33\") !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2020\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"123456789ABCDEF0\") !== 6) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"112233445566778899AABBCCDDEEFF00\"\
    ) !== 12) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: 0<br>2<br>2<br>4<br>2
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp4x0qhb96.php:46\n\
    Stack trace:\n#0 /tmp/tmp4x0qhb96.php(54): test()\n#1 {main}\n  thrown in /tmp/tmp4x0qhb96.php\
    \ on line 46\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You have been tasked to write a function that receives \n//\
    \ a hexadecimal number as a string and counts the number of hexadecimal \n// digits\
    \ that are primes (prime number, or a prime, is a natural number \n// greater\
    \ than 1 that is not a product of two smaller natural numbers).\n// Hexadecimal\
    \ digits are 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, A, B, C, D, E, F.\n// Prime numbers\
    \ are 2, 3, 5, 7, 11, 13, 17,...\n// So you have to determine a number of the\
    \ following digits: 2, 3, 5, 7, \n// B (=decimal 11), D (=decimal 13).\n// Note:\
    \ you may assume the input is always correct or empty string, \n// and symbols\
    \ A,B,C,D,E,F are always uppercase.\n// Examples:\n// For num = \"AB\" the output\
    \ should be 1.\n// For num = \"1077E\" the output should be 2.\n// For num = \"\
    ABED1A33\" the output should be 4.\n// For num = \"123456789ABCDEF0\" the output\
    \ should be 6.\n// For num = \"2020\" the output should be 2.\nfunction hex_key($num)\
    \ {\n    $hex_key = array(\n        '0' => 0,\n        '1' => 1,\n        '2'\
    \ => 2,\n        '3' => 3,\n        '4' => 4,\n        '5' => 5,\n        '6'\
    \ => 6,\n        '7' => 7,\n        '8' => 8,\n        '9' => 9,\n        'A'\
    \ => 10,\n        'B' => 11,\n        'C' => 12,\n        'D' => 13,\n       \
    \ 'E' => 14,\n        'F' => 15\n    );\n    return $hex_key[$num];\n}\nfunction\
    \ candidate(...$args) {\n    return hex_key(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"AB\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"1077E\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ABED1A33\") !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"2020\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"123456789ABCDEF0\") !== 6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"112233445566778899AABBCCDDEEFF00\") !==\
    \ 12) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Warning:  Undefined array key \"AB\" in /tmp/tmp6abkalhw.php on line\
    \ 37\nPHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp6abkalhw.php:44\n\
    Stack trace:\n#0 /tmp/tmp6abkalhw.php(52): test()\n#1 {main}\n  thrown in /tmp/tmp6abkalhw.php\
    \ on line 44\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You have been tasked to write a function that receives \n//\
    \ a hexadecimal number as a string and counts the number of hexadecimal \n// digits\
    \ that are primes (prime number, or a prime, is a natural number \n// greater\
    \ than 1 that is not a product of two smaller natural numbers).\n// Hexadecimal\
    \ digits are 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, A, B, C, D, E, F.\n// Prime numbers\
    \ are 2, 3, 5, 7, 11, 13, 17,...\n// So you have to determine a number of the\
    \ following digits: 2, 3, 5, 7, \n// B (=decimal 11), D (=decimal 13).\n// Note:\
    \ you may assume the input is always correct or empty string, \n// and symbols\
    \ A,B,C,D,E,F are always uppercase.\n// Examples:\n// For num = \"AB\" the output\
    \ should be 1.\n// For num = \"1077E\" the output should be 2.\n// For num = \"\
    ABED1A33\" the output should be 4.\n// For num = \"123456789ABCDEF0\" the output\
    \ should be 6.\n// For num = \"2020\" the output should be 2.\nfunction hex_key($num)\
    \ {\n    $hex_key = array(\n        \"0\" => 0,\n        \"1\" => 1,\n       \
    \ \"2\" => 2,\n        \"3\" => 3,\n        \"4\" => 4,\n        \"5\" => 5,\n\
    \        \"6\" => 6,\n        \"7\" => 7,\n        \"8\" => 8,\n        \"9\"\
    \ => 9,\n        \"A\" => 10,\n        \"B\" => 11,\n        \"C\" => 12,\n  \
    \      \"D\" => 13,\n        \"E\" => 14,\n        \"F\" => 15\n    );\n    return\
    \ $hex_key[$num];\n}\nfunction candidate(...$args) {\n    return hex_key(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"AB\") !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"1077E\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ABED1A33\") !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2020\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"123456789ABCDEF0\") !== 6) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"112233445566778899AABBCCDDEEFF00\"\
    ) !== 12) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Warning:  Undefined array key \"AB\" in /tmp/tmph0bzokju.php on line\
    \ 37\nPHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmph0bzokju.php:44\n\
    Stack trace:\n#0 /tmp/tmph0bzokju.php(52): test()\n#1 {main}\n  thrown in /tmp/tmph0bzokju.php\
    \ on line 44\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You have been tasked to write a function that receives \n//\
    \ a hexadecimal number as a string and counts the number of hexadecimal \n// digits\
    \ that are primes (prime number, or a prime, is a natural number \n// greater\
    \ than 1 that is not a product of two smaller natural numbers).\n// Hexadecimal\
    \ digits are 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, A, B, C, D, E, F.\n// Prime numbers\
    \ are 2, 3, 5, 7, 11, 13, 17,...\n// So you have to determine a number of the\
    \ following digits: 2, 3, 5, 7, \n// B (=decimal 11), D (=decimal 13).\n// Note:\
    \ you may assume the input is always correct or empty string, \n// and symbols\
    \ A,B,C,D,E,F are always uppercase.\n// Examples:\n// For num = \"AB\" the output\
    \ should be 1.\n// For num = \"1077E\" the output should be 2.\n// For num = \"\
    ABED1A33\" the output should be 4.\n// For num = \"123456789ABCDEF0\" the output\
    \ should be 6.\n// For num = \"2020\" the output should be 2.\nfunction hex_key($num)\
    \ {\n    $hex_key = array(\n        '0' => 0,\n        '1' => 1,\n        '2'\
    \ => 2,\n        '3' => 3,\n        '4' => 4,\n        '5' => 5,\n        '6'\
    \ => 6,\n        '7' => 7,\n        '8' => 8,\n        '9' => 9,\n        'A'\
    \ => 10,\n        'B' => 11,\n        'C' => 12,\n        'D' => 13,\n       \
    \ 'E' => 14,\n        'F' => 15\n    );\n    return $hex_key[$num];\n}\nfunction\
    \ candidate(...$args) {\n    return hex_key(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"AB\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"1077E\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ABED1A33\") !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"2020\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"123456789ABCDEF0\") !== 6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"112233445566778899AABBCCDDEEFF00\") !==\
    \ 12) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Warning:  Undefined array key \"AB\" in /tmp/tmp92mulve0.php on line\
    \ 37\nPHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp92mulve0.php:44\n\
    Stack trace:\n#0 /tmp/tmp92mulve0.php(52): test()\n#1 {main}\n  thrown in /tmp/tmp92mulve0.php\
    \ on line 44\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You have been tasked to write a function that receives \n//\
    \ a hexadecimal number as a string and counts the number of hexadecimal \n// digits\
    \ that are primes (prime number, or a prime, is a natural number \n// greater\
    \ than 1 that is not a product of two smaller natural numbers).\n// Hexadecimal\
    \ digits are 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, A, B, C, D, E, F.\n// Prime numbers\
    \ are 2, 3, 5, 7, 11, 13, 17,...\n// So you have to determine a number of the\
    \ following digits: 2, 3, 5, 7, \n// B (=decimal 11), D (=decimal 13).\n// Note:\
    \ you may assume the input is always correct or empty string, \n// and symbols\
    \ A,B,C,D,E,F are always uppercase.\n// Examples:\n// For num = \"AB\" the output\
    \ should be 1.\n// For num = \"1077E\" the output should be 2.\n// For num = \"\
    ABED1A33\" the output should be 4.\n// For num = \"123456789ABCDEF0\" the output\
    \ should be 6.\n// For num = \"2020\" the output should be 2.\nfunction hex_key($num)\
    \ {\n    $hex_key = [\n        '0' => 0,\n        '1' => 1,\n        '2' => 2,\n\
    \        '3' => 3,\n        '4' => 4,\n        '5' => 5,\n        '6' => 6,\n\
    \        '7' => 7,\n        '8' => 8,\n        '9' => 9,\n        'A' => 10,\n\
    \        'B' => 11,\n        'C' => 12,\n        'D' => 13,\n        'E' => 14,\n\
    \        'F' => 15\n    ];\n    return $hex_key[$num];\n}\nfunction candidate(...$args)\
    \ {\n    return hex_key(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    AB\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1077E\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ABED1A33\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2020\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    123456789ABCDEF0\") !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"112233445566778899AABBCCDDEEFF00\") !== 12) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Warning:  Undefined array key \"AB\" in /tmp/tmpl8seg7_n.php on line\
    \ 37\nPHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpl8seg7_n.php:44\n\
    Stack trace:\n#0 /tmp/tmpl8seg7_n.php(52): test()\n#1 {main}\n  thrown in /tmp/tmpl8seg7_n.php\
    \ on line 44\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You have been tasked to write a function that receives \n//\
    \ a hexadecimal number as a string and counts the number of hexadecimal \n// digits\
    \ that are primes (prime number, or a prime, is a natural number \n// greater\
    \ than 1 that is not a product of two smaller natural numbers).\n// Hexadecimal\
    \ digits are 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, A, B, C, D, E, F.\n// Prime numbers\
    \ are 2, 3, 5, 7, 11, 13, 17,...\n// So you have to determine a number of the\
    \ following digits: 2, 3, 5, 7, \n// B (=decimal 11), D (=decimal 13).\n// Note:\
    \ you may assume the input is always correct or empty string, \n// and symbols\
    \ A,B,C,D,E,F are always uppercase.\n// Examples:\n// For num = \"AB\" the output\
    \ should be 1.\n// For num = \"1077E\" the output should be 2.\n// For num = \"\
    ABED1A33\" the output should be 4.\n// For num = \"123456789ABCDEF0\" the output\
    \ should be 6.\n// For num = \"2020\" the output should be 2.\nfunction hex_key($num)\
    \ {\n    $hex = array(\n        \"0\" => 0,\n        \"1\" => 1,\n        \"2\"\
    \ => 2,\n        \"3\" => 3,\n        \"4\" => 4,\n        \"5\" => 5,\n     \
    \   \"6\" => 6,\n        \"7\" => 7,\n        \"8\" => 8,\n        \"9\" => 9,\n\
    \        \"A\" => 10,\n        \"B\" => 11,\n        \"C\" => 12,\n        \"\
    D\" => 13,\n        \"E\" => 14,\n        \"F\" => 15\n    );\n    $prime = array(2,\
    \ 3, 5, 7, 11, 13);\n    $count = 0;\n    for ($i = 0; $i < strlen($num); $i++)\
    \ {\n        if (in_array($hex[$num[$i]], $prime)) {\n            $count++;\n\
    \        }\n    }\n    return $count;\n}\necho hex_key(\"AB\") . \"\\n\";\necho\
    \ hex_key(\"1077E\") . \"\\n\";\necho hex_key(\"ABED1A33\") . \"\\n\";\necho hex_key(\"\
    123456789ABCDEF0\") . \"\\n\";\necho hex_key(\"2020\") . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return hex_key(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    AB\") !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1077E\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ABED1A33\") !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    2020\") !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    123456789ABCDEF0\") !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"112233445566778899AABBCCDDEEFF00\") !== 12) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "1\n2\n4\n6\n2\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You have been tasked to write a function that receives \n//\
    \ a hexadecimal number as a string and counts the number of hexadecimal \n// digits\
    \ that are primes (prime number, or a prime, is a natural number \n// greater\
    \ than 1 that is not a product of two smaller natural numbers).\n// Hexadecimal\
    \ digits are 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, A, B, C, D, E, F.\n// Prime numbers\
    \ are 2, 3, 5, 7, 11, 13, 17,...\n// So you have to determine a number of the\
    \ following digits: 2, 3, 5, 7, \n// B (=decimal 11), D (=decimal 13).\n// Note:\
    \ you may assume the input is always correct or empty string, \n// and symbols\
    \ A,B,C,D,E,F are always uppercase.\n// Examples:\n// For num = \"AB\" the output\
    \ should be 1.\n// For num = \"1077E\" the output should be 2.\n// For num = \"\
    ABED1A33\" the output should be 4.\n// For num = \"123456789ABCDEF0\" the output\
    \ should be 6.\n// For num = \"2020\" the output should be 2.\nfunction hex_key($num)\
    \ {\n    $hex_key = [\n        \"0\" => 0,\n        \"1\" => 1,\n        \"2\"\
    \ => 2,\n        \"3\" => 3,\n        \"4\" => 4,\n        \"5\" => 5,\n     \
    \   \"6\" => 6,\n        \"7\" => 7,\n        \"8\" => 8,\n        \"9\" => 9,\n\
    \        \"A\" => 10,\n        \"B\" => 11,\n        \"C\" => 12,\n        \"\
    D\" => 13,\n        \"E\" => 14,\n        \"F\" => 15\n    ];\n    return $hex_key[$num];\n\
    }\nfunction candidate(...$args) {\n    return hex_key(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"AB\") !== 1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"1077E\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ABED1A33\") !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2020\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"123456789ABCDEF0\") !== 6) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"112233445566778899AABBCCDDEEFF00\"\
    ) !== 12) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Warning:  Undefined array key \"AB\" in /tmp/tmp_8ibq4ez.php on line\
    \ 37\nPHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp_8ibq4ez.php:44\n\
    Stack trace:\n#0 /tmp/tmp_8ibq4ez.php(52): test()\n#1 {main}\n  thrown in /tmp/tmp_8ibq4ez.php\
    \ on line 44\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You have been tasked to write a function that receives \n//\
    \ a hexadecimal number as a string and counts the number of hexadecimal \n// digits\
    \ that are primes (prime number, or a prime, is a natural number \n// greater\
    \ than 1 that is not a product of two smaller natural numbers).\n// Hexadecimal\
    \ digits are 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, A, B, C, D, E, F.\n// Prime numbers\
    \ are 2, 3, 5, 7, 11, 13, 17,...\n// So you have to determine a number of the\
    \ following digits: 2, 3, 5, 7, \n// B (=decimal 11), D (=decimal 13).\n// Note:\
    \ you may assume the input is always correct or empty string, \n// and symbols\
    \ A,B,C,D,E,F are always uppercase.\n// Examples:\n// For num = \"AB\" the output\
    \ should be 1.\n// For num = \"1077E\" the output should be 2.\n// For num = \"\
    ABED1A33\" the output should be 4.\n// For num = \"123456789ABCDEF0\" the output\
    \ should be 6.\n// For num = \"2020\" the output should be 2.\nfunction hex_key($num)\
    \ {\n    $hex_key = array(\n        '0' => 0,\n        '1' => 1,\n        '2'\
    \ => 2,\n        '3' => 3,\n        '4' => 4,\n        '5' => 5,\n        '6'\
    \ => 6,\n        '7' => 7,\n        '8' => 8,\n        '9' => 9,\n        'A'\
    \ => 10,\n        'B' => 11,\n        'C' => 12,\n        'D' => 13,\n       \
    \ 'E' => 14,\n        'F' => 15\n    );\n    return $hex_key[$num];\n}\nfunction\
    \ candidate(...$args) {\n    return hex_key(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"AB\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"1077E\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"ABED1A33\") !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"2020\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"123456789ABCDEF0\") !== 6) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"112233445566778899AABBCCDDEEFF00\") !==\
    \ 12) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Warning:  Undefined array key \"AB\" in /tmp/tmpzzw_77mj.php on line\
    \ 37\nPHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpzzw_77mj.php:44\n\
    Stack trace:\n#0 /tmp/tmpzzw_77mj.php(52): test()\n#1 {main}\n  thrown in /tmp/tmpzzw_77mj.php\
    \ on line 44\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You have been tasked to write a function that receives \n//\
    \ a hexadecimal number as a string and counts the number of hexadecimal \n// digits\
    \ that are primes (prime number, or a prime, is a natural number \n// greater\
    \ than 1 that is not a product of two smaller natural numbers).\n// Hexadecimal\
    \ digits are 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, A, B, C, D, E, F.\n// Prime numbers\
    \ are 2, 3, 5, 7, 11, 13, 17,...\n// So you have to determine a number of the\
    \ following digits: 2, 3, 5, 7, \n// B (=decimal 11), D (=decimal 13).\n// Note:\
    \ you may assume the input is always correct or empty string, \n// and symbols\
    \ A,B,C,D,E,F are always uppercase.\n// Examples:\n// For num = \"AB\" the output\
    \ should be 1.\n// For num = \"1077E\" the output should be 2.\n// For num = \"\
    ABED1A33\" the output should be 4.\n// For num = \"123456789ABCDEF0\" the output\
    \ should be 6.\n// For num = \"2020\" the output should be 2.\nfunction hex_key($num)\
    \ {\n    $hex = array(\n        \"0\" => 0,\n        \"1\" => 1,\n        \"2\"\
    \ => 2,\n        \"3\" => 3,\n        \"4\" => 4,\n        \"5\" => 5,\n     \
    \   \"6\" => 6,\n        \"7\" => 7,\n        \"8\" => 8,\n        \"9\" => 9,\n\
    \        \"A\" => 10,\n        \"B\" => 11,\n        \"C\" => 12,\n        \"\
    D\" => 13,\n        \"E\" => 14,\n        \"F\" => 15\n    );\n    $prime = array(2,\
    \ 3, 5, 7, 11, 13);\n    $count = 0;\n    for ($i = 0; $i < strlen($num); $i++)\
    \ {\n        if (in_array($hex[$num[$i]], $prime)) {\n            $count++;\n\
    \        }\n    }\n    return $count;\n}\necho hex_key(\"AB\");\necho \"<br>\"\
    ;\necho hex_key(\"1077E\");\necho \"<br>\";\necho hex_key(\"ABED1A33\");\necho\
    \ \"<br>\";\necho hex_key(\"123456789ABCDEF0\");\necho \"<br>\";\necho hex_key(\"\
    2020\");\nfunction candidate(...$args) {\n    return hex_key(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"AB\") !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"1077E\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ABED1A33\") !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2020\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"123456789ABCDEF0\") !== 6) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"112233445566778899AABBCCDDEEFF00\"\
    ) !== 12) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: 1<br>2<br>4<br>6<br>2
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// You have been tasked to write a function that receives \n//\
    \ a hexadecimal number as a string and counts the number of hexadecimal \n// digits\
    \ that are primes (prime number, or a prime, is a natural number \n// greater\
    \ than 1 that is not a product of two smaller natural numbers).\n// Hexadecimal\
    \ digits are 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, A, B, C, D, E, F.\n// Prime numbers\
    \ are 2, 3, 5, 7, 11, 13, 17,...\n// So you have to determine a number of the\
    \ following digits: 2, 3, 5, 7, \n// B (=decimal 11), D (=decimal 13).\n// Note:\
    \ you may assume the input is always correct or empty string, \n// and symbols\
    \ A,B,C,D,E,F are always uppercase.\n// Examples:\n// For num = \"AB\" the output\
    \ should be 1.\n// For num = \"1077E\" the output should be 2.\n// For num = \"\
    ABED1A33\" the output should be 4.\n// For num = \"123456789ABCDEF0\" the output\
    \ should be 6.\n// For num = \"2020\" the output should be 2.\nfunction hex_key($num)\
    \ {\n    $hex = ['0','1','2','3','4','5','6','7','8','9','A','B','C','D','E','F'];\n\
    \    $prime = [2,3,5,7,11,13];\n    $count = 0;\n    for ($i=0; $i < strlen($num);\
    \ $i++) { \n        if (in_array($num[$i], $hex)) {\n            if (in_array($num[$i],\
    \ $prime)) {\n                $count++;\n            }\n        }\n    }\n   \
    \ return $count;\n}\nfunction candidate(...$args) {\n    return hex_key(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"AB\") !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"1077E\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"ABED1A33\") !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"2020\") !== 2) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"123456789ABCDEF0\") !== 6) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"112233445566778899AABBCCDDEEFF00\"\
    ) !== 12) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp93brcuxd.php:36\n\
    Stack trace:\n#0 /tmp/tmp93brcuxd.php(44): test()\n#1 {main}\n  thrown in /tmp/tmp93brcuxd.php\
    \ on line 36\n"
  exit_code: 255
  status: Exception

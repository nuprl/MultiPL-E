name: HumanEval_155_even_odd_count
language: php
results:
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n    $even\
    \ = 0;\n    $odd = 0;\n    $num = abs($num);\n    while ($num > 0) {\n       \
    \ $digit = $num % 10;\n        if ($digit % 2 == 0) {\n            $even++;\n\
    \        } else {\n            $odd++;\n        }\n        $num = floor($num /\
    \ 10);\n    }\n    return array($even, $odd);\n}\n\nfunction candidate(...$args)\
    \ {\n    return even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(7) !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp5_h7b_9l.php:34\n\
    Stack trace:\n#0 /tmp/tmp5_h7b_9l.php(37): test()\n#1 {main}\n  thrown in /tmp/tmp5_h7b_9l.php\
    \ on line 34\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n    $even\
    \ = 0;\n    $odd = 0;\n    $num = abs($num);\n    while ($num > 0) {\n       \
    \ $digit = $num % 10;\n        if ($digit % 2 == 0) {\n            $even++;\n\
    \        } else {\n            $odd++;\n        }\n        $num = (int)($num /\
    \ 10);\n    }\n    return [$even, $odd];\n}\n\nfunction candidate(...$args) {\n\
    \    return even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if (candidate(7)\
    \ !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-78)\
    \ !== array(1, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3452)\
    \ !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211)\
    \ !== array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821)\
    \ !== array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpymkcvjbx.php:34\n\
    Stack trace:\n#0 /tmp/tmpymkcvjbx.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpymkcvjbx.php\
    \ on line 34\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n    $even\
    \ = 0;\n    $odd = 0;\n    $num = abs($num);\n    while ($num > 0) {\n       \
    \ $digit = $num % 10;\n        if ($digit % 2 == 0) {\n            $even++;\n\
    \        } else {\n            $odd++;\n        }\n        $num = floor($num /\
    \ 10);\n    }\n    return array($even, $odd);\n}\n\nfunction candidate(...$args)\
    \ {\n    return even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(7) !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp0xjhlrdi.php:34\n\
    Stack trace:\n#0 /tmp/tmp0xjhlrdi.php(37): test()\n#1 {main}\n  thrown in /tmp/tmp0xjhlrdi.php\
    \ on line 34\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n    $even\
    \ = 0;\n    $odd = 0;\n    $num = abs($num);\n    while ($num > 0) {\n       \
    \ $digit = $num % 10;\n        if ($digit % 2 == 0) {\n            $even++;\n\
    \        } else {\n            $odd++;\n        }\n        $num = floor($num /\
    \ 10);\n    }\n    return [$even, $odd];\n}\n\nfunction candidate(...$args) {\n\
    \    return even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if (candidate(7)\
    \ !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-78)\
    \ !== array(1, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3452)\
    \ !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211)\
    \ !== array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821)\
    \ !== array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp4hyv_q2c.php:34\n\
    Stack trace:\n#0 /tmp/tmp4hyv_q2c.php(37): test()\n#1 {main}\n  thrown in /tmp/tmp4hyv_q2c.php\
    \ on line 34\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n    $even\
    \ = 0;\n    $odd = 0;\n    $num = abs($num);\n    while ($num > 0) {\n       \
    \ $digit = $num % 10;\n        if ($digit % 2 == 0) {\n            $even++;\n\
    \        } else {\n            $odd++;\n        }\n        $num = floor($num /\
    \ 10);\n    }\n    return array($even, $odd);\n}\n\nfunction candidate(...$args)\
    \ {\n    return even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(7) !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmptdz2w3w7.php:34\n\
    Stack trace:\n#0 /tmp/tmptdz2w3w7.php(37): test()\n#1 {main}\n  thrown in /tmp/tmptdz2w3w7.php\
    \ on line 34\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n    $even\
    \ = 0;\n    $odd = 0;\n    $num = abs($num);\n    while ($num > 0) {\n       \
    \ $digit = $num % 10;\n        if ($digit % 2 == 0) {\n            $even++;\n\
    \        } else {\n            $odd++;\n        }\n        $num = floor($num /\
    \ 10);\n    }\n    return array($even, $odd);\n}\n\nfunction candidate(...$args)\
    \ {\n    return even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(7) !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpluywqsmd.php:34\n\
    Stack trace:\n#0 /tmp/tmpluywqsmd.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpluywqsmd.php\
    \ on line 34\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n    $even\
    \ = 0;\n    $odd = 0;\n    $num = abs($num);\n    while ($num > 0) {\n       \
    \ $digit = $num % 10;\n        if ($digit % 2 == 0) {\n            $even++;\n\
    \        } else {\n            $odd++;\n        }\n        $num = intval($num\
    \ / 10);\n    }\n    return array($even, $odd);\n}\n\nfunction candidate(...$args)\
    \ {\n    return even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(7) !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpx18b24if.php:34\n\
    Stack trace:\n#0 /tmp/tmpx18b24if.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpx18b24if.php\
    \ on line 34\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n    $even\
    \ = 0;\n    $odd = 0;\n    $num = abs($num);\n    while ($num > 0) {\n       \
    \ $digit = $num % 10;\n        if ($digit % 2 == 0) {\n            $even++;\n\
    \        } else {\n            $odd++;\n        }\n        $num = floor($num /\
    \ 10);\n    }\n    return array($even, $odd);\n}\necho \"<pre>\";\nprint_r(even_odd_count(-12));\n\
    echo \"</pre>\";\necho \"<pre>\";\nprint_r(even_odd_count(123));\necho \"</pre>\"\
    ;\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "<pre>Array\n(\n    [0] => 1\n    [1] => 1\n)\n</pre><pre>Array\n(\n   \
    \ [0] => 1\n    [1] => 2\n)\n</pre>"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpoe6lal0t.php:39\n\
    Stack trace:\n#0 /tmp/tmpoe6lal0t.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpoe6lal0t.php\
    \ on line 39\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n  $even =\
    \ 0;\n  $odd = 0;\n  $num = abs($num);\n  while ($num > 0) {\n    $digit = $num\
    \ % 10;\n    if ($digit % 2 == 0) {\n      $even++;\n    } else {\n      $odd++;\n\
    \    }\n    $num = ($num - $digit) / 10;\n  }\n  return array($even, $odd);\n\
    }\n\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp3co8uj0e.php:34\n\
    Stack trace:\n#0 /tmp/tmp3co8uj0e.php(37): test()\n#1 {main}\n  thrown in /tmp/tmp3co8uj0e.php\
    \ on line 34\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n    $even\
    \ = 0;\n    $odd = 0;\n    $num = abs($num);\n    while ($num > 0) {\n       \
    \ $digit = $num % 10;\n        if ($digit % 2 == 0) {\n            $even++;\n\
    \        } else {\n            $odd++;\n        }\n        $num = floor($num /\
    \ 10);\n    }\n    return array($even, $odd);\n}\n\nfunction candidate(...$args)\
    \ {\n    return even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(7) !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpchw21hl0.php:34\n\
    Stack trace:\n#0 /tmp/tmpchw21hl0.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpchw21hl0.php\
    \ on line 34\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n    $even\
    \ = 0;\n    $odd = 0;\n    $num = abs($num);\n    while ($num > 0) {\n       \
    \ $digit = $num % 10;\n        if ($digit % 2 == 0) {\n            $even++;\n\
    \        } else {\n            $odd++;\n        }\n        $num = floor($num /\
    \ 10);\n    }\n    return [$even, $odd];\n}\n\nfunction candidate(...$args) {\n\
    \    return even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if (candidate(7)\
    \ !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-78)\
    \ !== array(1, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3452)\
    \ !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211)\
    \ !== array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821)\
    \ !== array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpp7qe8hc1.php:34\n\
    Stack trace:\n#0 /tmp/tmpp7qe8hc1.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpp7qe8hc1.php\
    \ on line 34\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n    $even\
    \ = 0;\n    $odd = 0;\n    $num = abs($num);\n    while ($num > 0) {\n       \
    \ $digit = $num % 10;\n        if ($digit % 2 == 0) {\n            $even++;\n\
    \        } else {\n            $odd++;\n        }\n        $num = floor($num /\
    \ 10);\n    }\n    return [$even, $odd];\n}\n\nfunction candidate(...$args) {\n\
    \    return even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if (candidate(7)\
    \ !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-78)\
    \ !== array(1, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3452)\
    \ !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211)\
    \ !== array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821)\
    \ !== array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp3t0j1iyt.php:34\n\
    Stack trace:\n#0 /tmp/tmp3t0j1iyt.php(37): test()\n#1 {main}\n  thrown in /tmp/tmp3t0j1iyt.php\
    \ on line 34\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n    $even\
    \ = 0;\n    $odd = 0;\n    $num = abs($num);\n    while ($num > 0) {\n       \
    \ $digit = $num % 10;\n        if ($digit % 2 == 0) {\n            $even++;\n\
    \        } else {\n            $odd++;\n        }\n        $num = floor($num /\
    \ 10);\n    }\n    return array($even, $odd);\n}\n\nfunction candidate(...$args)\
    \ {\n    return even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(7) !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpg47dcoqw.php:34\n\
    Stack trace:\n#0 /tmp/tmpg47dcoqw.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpg47dcoqw.php\
    \ on line 34\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n    $even\
    \ = 0;\n    $odd = 0;\n    $num = abs($num);\n    while ($num > 0) {\n       \
    \ $digit = $num % 10;\n        if ($digit % 2 == 0) {\n            $even++;\n\
    \        } else {\n            $odd++;\n        }\n        $num = floor($num /\
    \ 10);\n    }\n    return [$even, $odd];\n}\n\nfunction candidate(...$args) {\n\
    \    return even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if (candidate(7)\
    \ !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-78)\
    \ !== array(1, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3452)\
    \ !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211)\
    \ !== array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821)\
    \ !== array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpoegtp2bp.php:34\n\
    Stack trace:\n#0 /tmp/tmpoegtp2bp.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpoegtp2bp.php\
    \ on line 34\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n    $even\
    \ = 0;\n    $odd = 0;\n    $num = abs($num);\n    while ($num > 0) {\n       \
    \ $digit = $num % 10;\n        if ($digit % 2 == 0) {\n            $even++;\n\
    \        } else {\n            $odd++;\n        }\n        $num = floor($num /\
    \ 10);\n    }\n    return array($even, $odd);\n}\n\nfunction candidate(...$args)\
    \ {\n    return even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(7) !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpbefz6zwb.php:34\n\
    Stack trace:\n#0 /tmp/tmpbefz6zwb.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpbefz6zwb.php\
    \ on line 34\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n    $even\
    \ = 0;\n    $odd = 0;\n    $num = abs($num);\n    while ($num > 0) {\n       \
    \ $rem = $num % 10;\n        if ($rem % 2 == 0) {\n            $even++;\n    \
    \    } else {\n            $odd++;\n        }\n        $num = floor($num / 10);\n\
    \    }\n    return array($even, $odd);\n}\n\nfunction candidate(...$args) {\n\
    \    return even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if (candidate(7)\
    \ !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-78)\
    \ !== array(1, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3452)\
    \ !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211)\
    \ !== array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821)\
    \ !== array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp0tt1c25s.php:34\n\
    Stack trace:\n#0 /tmp/tmp0tt1c25s.php(37): test()\n#1 {main}\n  thrown in /tmp/tmp0tt1c25s.php\
    \ on line 34\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n    $even\
    \ = 0;\n    $odd = 0;\n    $num = abs($num);\n    while ($num > 0) {\n       \
    \ $remainder = $num % 10;\n        if ($remainder % 2 == 0) {\n            $even++;\n\
    \        } else {\n            $odd++;\n        }\n        $num = floor($num /\
    \ 10);\n    }\n    return array($even, $odd);\n}\n\nfunction candidate(...$args)\
    \ {\n    return even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(7) !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpii8h5ia0.php:34\n\
    Stack trace:\n#0 /tmp/tmpii8h5ia0.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpii8h5ia0.php\
    \ on line 34\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n    $even\
    \ = 0;\n    $odd = 0;\n    $num = abs($num);\n    while ($num > 0) {\n       \
    \ $digit = $num % 10;\n        if ($digit % 2 == 0) {\n            $even++;\n\
    \        } else {\n            $odd++;\n        }\n        $num = floor($num /\
    \ 10);\n    }\n    return array($even, $odd);\n}\n\nfunction candidate(...$args)\
    \ {\n    return even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(7) !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp95omsqk5.php:34\n\
    Stack trace:\n#0 /tmp/tmp95omsqk5.php(37): test()\n#1 {main}\n  thrown in /tmp/tmp95omsqk5.php\
    \ on line 34\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n    $even\
    \ = 0;\n    $odd = 0;\n    $num = abs($num);\n    while ($num > 0) {\n       \
    \ $digit = $num % 10;\n        if ($digit % 2 == 0) {\n            $even++;\n\
    \        } else {\n            $odd++;\n        }\n        $num = intval($num\
    \ / 10);\n    }\n    return array($even, $odd);\n}\n\nfunction candidate(...$args)\
    \ {\n    return even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(7) !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp4giugra0.php:34\n\
    Stack trace:\n#0 /tmp/tmp4giugra0.php(37): test()\n#1 {main}\n  thrown in /tmp/tmp4giugra0.php\
    \ on line 34\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n    $even\
    \ = 0;\n    $odd = 0;\n    $num = abs($num);\n    while ($num > 0) {\n       \
    \ $digit = $num % 10;\n        if ($digit % 2 == 0) {\n            $even++;\n\
    \        } else {\n            $odd++;\n        }\n        $num = intval($num\
    \ / 10);\n    }\n    return array($even, $odd);\n}\n\nfunction candidate(...$args)\
    \ {\n    return even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(7) !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmploh2fzz1.php:34\n\
    Stack trace:\n#0 /tmp/tmploh2fzz1.php(37): test()\n#1 {main}\n  thrown in /tmp/tmploh2fzz1.php\
    \ on line 34\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n    $even\
    \ = 0;\n    $odd = 0;\n    $num = abs($num);\n    while ($num > 0) {\n       \
    \ $digit = $num % 10;\n        if ($digit % 2 == 0) {\n            $even++;\n\
    \        } else {\n            $odd++;\n        }\n        $num = floor($num /\
    \ 10);\n    }\n    return array($even, $odd);\n}\n\nfunction candidate(...$args)\
    \ {\n    return even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(7) !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp1yq7tszd.php:34\n\
    Stack trace:\n#0 /tmp/tmp1yq7tszd.php(37): test()\n#1 {main}\n  thrown in /tmp/tmp1yq7tszd.php\
    \ on line 34\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n    $even\
    \ = 0;\n    $odd = 0;\n    $num = abs($num);\n    while ($num > 0) {\n       \
    \ $digit = $num % 10;\n        if ($digit % 2 == 0) {\n            $even++;\n\
    \        } else {\n            $odd++;\n        }\n        $num = floor($num /\
    \ 10);\n    }\n    return [$even, $odd];\n}\n\nfunction candidate(...$args) {\n\
    \    return even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if (candidate(7)\
    \ !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-78)\
    \ !== array(1, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3452)\
    \ !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211)\
    \ !== array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821)\
    \ !== array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpomy282v7.php:34\n\
    Stack trace:\n#0 /tmp/tmpomy282v7.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpomy282v7.php\
    \ on line 34\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n    $even\
    \ = 0;\n    $odd = 0;\n    $num = abs($num);\n    while ($num > 0) {\n       \
    \ $digit = $num % 10;\n        if ($digit % 2 == 0) {\n            $even++;\n\
    \        } else {\n            $odd++;\n        }\n        $num = floor($num /\
    \ 10);\n    }\n    return array($even, $odd);\n}\nfunction candidate(...$args)\
    \ {\n    return even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(7) !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpakat42al.php:33\n\
    Stack trace:\n#0 /tmp/tmpakat42al.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpakat42al.php\
    \ on line 33\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n    $even\
    \ = 0;\n    $odd = 0;\n    $num = abs($num);\n    while ($num > 0) {\n       \
    \ $digit = $num % 10;\n        if ($digit % 2 == 0) {\n            $even++;\n\
    \        } else {\n            $odd++;\n        }\n        $num = floor($num /\
    \ 10);\n    }\n    return array($even, $odd);\n}\n\nfunction candidate(...$args)\
    \ {\n    return even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(7) !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpi156a1w5.php:34\n\
    Stack trace:\n#0 /tmp/tmpi156a1w5.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpi156a1w5.php\
    \ on line 34\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n    $even\
    \ = 0;\n    $odd = 0;\n    $num = abs($num);\n    while ($num > 0) {\n       \
    \ $digit = $num % 10;\n        if ($digit % 2 == 0) {\n            $even++;\n\
    \        } else {\n            $odd++;\n        }\n        $num = intval($num\
    \ / 10);\n    }\n    return [$even, $odd];\n}\n\nfunction candidate(...$args)\
    \ {\n    return even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(7) !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpeddrqnsf.php:34\n\
    Stack trace:\n#0 /tmp/tmpeddrqnsf.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpeddrqnsf.php\
    \ on line 34\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n    $even\
    \ = 0;\n    $odd = 0;\n    $num = abs($num);\n    while ($num > 0) {\n       \
    \ $digit = $num % 10;\n        if ($digit % 2 == 0) {\n            $even++;\n\
    \        } else {\n            $odd++;\n        }\n        $num = floor($num /\
    \ 10);\n    }\n    return array($even, $odd);\n}\n\nfunction candidate(...$args)\
    \ {\n    return even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(7) !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp8ea9rpcp.php:34\n\
    Stack trace:\n#0 /tmp/tmp8ea9rpcp.php(37): test()\n#1 {main}\n  thrown in /tmp/tmp8ea9rpcp.php\
    \ on line 34\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n    $even\
    \ = 0;\n    $odd = 0;\n    $num = abs($num);\n    while ($num > 0) {\n       \
    \ $digit = $num % 10;\n        if ($digit % 2 == 0) {\n            $even++;\n\
    \        } else {\n            $odd++;\n        }\n        $num = floor($num /\
    \ 10);\n    }\n    return array($even, $odd);\n}\n\nfunction candidate(...$args)\
    \ {\n    return even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(7) !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpq5vdvb0o.php:34\n\
    Stack trace:\n#0 /tmp/tmpq5vdvb0o.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpq5vdvb0o.php\
    \ on line 34\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n    $even\
    \ = 0;\n    $odd = 0;\n    $num = abs($num);\n    while ($num > 0) {\n       \
    \ $digit = $num % 10;\n        if ($digit % 2 == 0) {\n            $even++;\n\
    \        } else {\n            $odd++;\n        }\n        $num = (int)($num /\
    \ 10);\n    }\n    return [$even, $odd];\n}\n\nfunction candidate(...$args) {\n\
    \    return even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if (candidate(7)\
    \ !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-78)\
    \ !== array(1, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3452)\
    \ !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211)\
    \ !== array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821)\
    \ !== array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp_8x1_3u2.php:34\n\
    Stack trace:\n#0 /tmp/tmp_8x1_3u2.php(37): test()\n#1 {main}\n  thrown in /tmp/tmp_8x1_3u2.php\
    \ on line 34\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n    $even\
    \ = 0;\n    $odd = 0;\n    $num = abs($num);\n    while ($num > 0) {\n       \
    \ $digit = $num % 10;\n        if ($digit % 2 == 0) {\n            $even++;\n\
    \        } else {\n            $odd++;\n        }\n        $num = floor($num /\
    \ 10);\n    }\n    return array($even, $odd);\n}\n\nfunction candidate(...$args)\
    \ {\n    return even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(7) !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmppg9l9uv0.php:34\n\
    Stack trace:\n#0 /tmp/tmppg9l9uv0.php(37): test()\n#1 {main}\n  thrown in /tmp/tmppg9l9uv0.php\
    \ on line 34\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n    $even\
    \ = 0;\n    $odd = 0;\n    $num = abs($num);\n    while ($num > 0) {\n       \
    \ $digit = $num % 10;\n        if ($digit % 2 == 0) {\n            $even++;\n\
    \        } else {\n            $odd++;\n        }\n        $num = floor($num /\
    \ 10);\n    }\n    return array($even, $odd);\n}\n\nfunction candidate(...$args)\
    \ {\n    return even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(7) !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpnwff07vf.php:34\n\
    Stack trace:\n#0 /tmp/tmpnwff07vf.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpnwff07vf.php\
    \ on line 34\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n    $even\
    \ = 0;\n    $odd = 0;\n    $num = abs($num);\n    while ($num > 0) {\n       \
    \ $digit = $num % 10;\n        if ($digit % 2 == 0) {\n            $even++;\n\
    \        } else {\n            $odd++;\n        }\n        $num = floor($num /\
    \ 10);\n    }\n    return [$even, $odd];\n}\n\nfunction candidate(...$args) {\n\
    \    return even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if (candidate(7)\
    \ !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-78)\
    \ !== array(1, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3452)\
    \ !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211)\
    \ !== array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821)\
    \ !== array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp_2epsy9_.php:34\n\
    Stack trace:\n#0 /tmp/tmp_2epsy9_.php(37): test()\n#1 {main}\n  thrown in /tmp/tmp_2epsy9_.php\
    \ on line 34\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n    $even\
    \ = 0;\n    $odd = 0;\n    $num = abs($num);\n    while ($num > 0) {\n       \
    \ $digit = $num % 10;\n        if ($digit % 2 == 0) {\n            $even++;\n\
    \        } else {\n            $odd++;\n        }\n        $num = floor($num /\
    \ 10);\n    }\n    return array($even, $odd);\n}\n\nfunction candidate(...$args)\
    \ {\n    return even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(7) !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpqxprngge.php:34\n\
    Stack trace:\n#0 /tmp/tmpqxprngge.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpqxprngge.php\
    \ on line 34\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n    $even\
    \ = 0;\n    $odd = 0;\n    $num = abs($num);\n    while ($num > 0) {\n       \
    \ $remainder = $num % 10;\n        if ($remainder % 2 == 0) {\n            $even++;\n\
    \        } else {\n            $odd++;\n        }\n        $num = floor($num /\
    \ 10);\n    }\n    return array($even, $odd);\n}\n\nfunction candidate(...$args)\
    \ {\n    return even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(7) !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpfs9nx25p.php:34\n\
    Stack trace:\n#0 /tmp/tmpfs9nx25p.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpfs9nx25p.php\
    \ on line 34\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n    $even\
    \ = 0;\n    $odd = 0;\n    $num = abs($num);\n    while ($num > 0) {\n       \
    \ $digit = $num % 10;\n        if ($digit % 2 == 0) {\n            $even++;\n\
    \        } else {\n            $odd++;\n        }\n        $num = floor($num /\
    \ 10);\n    }\n    return array($even, $odd);\n}\n\nfunction candidate(...$args)\
    \ {\n    return even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(7) !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp7nevx9kt.php:34\n\
    Stack trace:\n#0 /tmp/tmp7nevx9kt.php(37): test()\n#1 {main}\n  thrown in /tmp/tmp7nevx9kt.php\
    \ on line 34\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n  $even =\
    \ 0;\n  $odd = 0;\n  $num = abs($num);\n  while ($num > 0) {\n    $digit = $num\
    \ % 10;\n    if ($digit % 2 == 0) {\n      $even++;\n    } else {\n      $odd++;\n\
    \    }\n    $num = floor($num / 10);\n  }\n  return array($even, $odd);\n}\n\n\
    function candidate(...$args) {\n    return even_odd_count(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp0j1fhfnp.php:34\n\
    Stack trace:\n#0 /tmp/tmp0j1fhfnp.php(37): test()\n#1 {main}\n  thrown in /tmp/tmp0j1fhfnp.php\
    \ on line 34\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n    $even\
    \ = 0;\n    $odd = 0;\n    $num = abs($num);\n    while ($num > 0) {\n       \
    \ $digit = $num % 10;\n        if ($digit % 2 == 0) {\n            $even++;\n\
    \        } else {\n            $odd++;\n        }\n        $num = floor($num /\
    \ 10);\n    }\n    return array($even, $odd);\n}\n\nfunction candidate(...$args)\
    \ {\n    return even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(7) !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpqg_n9mzm.php:34\n\
    Stack trace:\n#0 /tmp/tmpqg_n9mzm.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpqg_n9mzm.php\
    \ on line 34\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n    $even\
    \ = 0;\n    $odd = 0;\n    $num = abs($num);\n    while ($num > 0) {\n       \
    \ $digit = $num % 10;\n        if ($digit % 2 == 0) {\n            $even++;\n\
    \        } else {\n            $odd++;\n        }\n        $num = floor($num /\
    \ 10);\n    }\n    return [$even, $odd];\n}\n\nfunction candidate(...$args) {\n\
    \    return even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if (candidate(7)\
    \ !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-78)\
    \ !== array(1, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3452)\
    \ !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211)\
    \ !== array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821)\
    \ !== array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp6gj3_zcy.php:34\n\
    Stack trace:\n#0 /tmp/tmp6gj3_zcy.php(37): test()\n#1 {main}\n  thrown in /tmp/tmp6gj3_zcy.php\
    \ on line 34\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n    $even\
    \ = 0;\n    $odd = 0;\n    $num = abs($num);\n    while ($num > 0) {\n       \
    \ $digit = $num % 10;\n        if ($digit % 2 == 0) {\n            $even++;\n\
    \        } else {\n            $odd++;\n        }\n        $num = floor($num /\
    \ 10);\n    }\n    return array($even, $odd);\n}\n\nfunction candidate(...$args)\
    \ {\n    return even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(7) !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpiew78pjo.php:34\n\
    Stack trace:\n#0 /tmp/tmpiew78pjo.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpiew78pjo.php\
    \ on line 34\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n    $even\
    \ = 0;\n    $odd = 0;\n    $num = abs($num);\n    while ($num > 0) {\n       \
    \ $digit = $num % 10;\n        if ($digit % 2 == 0) {\n            $even++;\n\
    \        } else {\n            $odd++;\n        }\n        $num = floor($num /\
    \ 10);\n    }\n    return array($even, $odd);\n}\n\nfunction candidate(...$args)\
    \ {\n    return even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(7) !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpv2iwcb40.php:34\n\
    Stack trace:\n#0 /tmp/tmpv2iwcb40.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpv2iwcb40.php\
    \ on line 34\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n  $even =\
    \ 0;\n  $odd = 0;\n  $num = abs($num);\n  while ($num > 0) {\n    $digit = $num\
    \ % 10;\n    if ($digit % 2 == 0) {\n      $even++;\n    } else {\n      $odd++;\n\
    \    }\n    $num = floor($num / 10);\n  }\n  return array($even, $odd);\n}\n\n\
    function candidate(...$args) {\n    return even_odd_count(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpix4c64ab.php:34\n\
    Stack trace:\n#0 /tmp/tmpix4c64ab.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpix4c64ab.php\
    \ on line 34\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n    $even\
    \ = 0;\n    $odd = 0;\n    $num = abs($num);\n    while ($num > 0) {\n       \
    \ $digit = $num % 10;\n        if ($digit % 2 == 0) {\n            $even++;\n\
    \        } else {\n            $odd++;\n        }\n        $num = ($num - $digit)\
    \ / 10;\n    }\n    return array($even, $odd);\n}\n\nfunction candidate(...$args)\
    \ {\n    return even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(7) !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpbnl9p75q.php:34\n\
    Stack trace:\n#0 /tmp/tmpbnl9p75q.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpbnl9p75q.php\
    \ on line 34\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n    $even\
    \ = 0;\n    $odd = 0;\n    $num = abs($num);\n    while ($num > 0) {\n       \
    \ $digit = $num % 10;\n        if ($digit % 2 == 0) {\n            $even++;\n\
    \        } else {\n            $odd++;\n        }\n        $num = floor($num /\
    \ 10);\n    }\n    return array($even, $odd);\n}\n\nfunction candidate(...$args)\
    \ {\n    return even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(7) !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmplnmubadb.php:34\n\
    Stack trace:\n#0 /tmp/tmplnmubadb.php(37): test()\n#1 {main}\n  thrown in /tmp/tmplnmubadb.php\
    \ on line 34\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n    $even\
    \ = 0;\n    $odd = 0;\n    $num = abs($num);\n    while ($num > 0) {\n       \
    \ $digit = $num % 10;\n        if ($digit % 2 == 0) {\n            $even++;\n\
    \        } else {\n            $odd++;\n        }\n        $num = floor($num /\
    \ 10);\n    }\n    return array($even, $odd);\n}\nfunction candidate(...$args)\
    \ {\n    return even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(7) !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpeb9shjxh.php:33\n\
    Stack trace:\n#0 /tmp/tmpeb9shjxh.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpeb9shjxh.php\
    \ on line 33\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n    $even\
    \ = 0;\n    $odd = 0;\n    $num = abs($num);\n    while ($num > 0) {\n       \
    \ $digit = $num % 10;\n        if ($digit % 2 == 0) {\n            $even++;\n\
    \        } else {\n            $odd++;\n        }\n        $num = (int)($num /\
    \ 10);\n    }\n    return [$even, $odd];\n}\n\nfunction candidate(...$args) {\n\
    \    return even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if (candidate(7)\
    \ !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-78)\
    \ !== array(1, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3452)\
    \ !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211)\
    \ !== array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821)\
    \ !== array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp5_uj9mc0.php:34\n\
    Stack trace:\n#0 /tmp/tmp5_uj9mc0.php(37): test()\n#1 {main}\n  thrown in /tmp/tmp5_uj9mc0.php\
    \ on line 34\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n    $even\
    \ = 0;\n    $odd = 0;\n    $num = abs($num);\n    while ($num > 0) {\n       \
    \ $digit = $num % 10;\n        if ($digit % 2 == 0) {\n            $even++;\n\
    \        } else {\n            $odd++;\n        }\n        $num = floor($num /\
    \ 10);\n    }\n    return array($even, $odd);\n}\n\nfunction candidate(...$args)\
    \ {\n    return even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(7) !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpmbz1t7__.php:34\n\
    Stack trace:\n#0 /tmp/tmpmbz1t7__.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpmbz1t7__.php\
    \ on line 34\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n  $even =\
    \ 0;\n  $odd = 0;\n  $num = abs($num);\n  while ($num > 0) {\n    $digit = $num\
    \ % 10;\n    if ($digit % 2 == 0) {\n      $even++;\n    } else {\n      $odd++;\n\
    \    }\n    $num = floor($num / 10);\n  }\n  return array($even, $odd);\n}\n\n\
    function candidate(...$args) {\n    return even_odd_count(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmprie15gx2.php:34\n\
    Stack trace:\n#0 /tmp/tmprie15gx2.php(37): test()\n#1 {main}\n  thrown in /tmp/tmprie15gx2.php\
    \ on line 34\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n    $even\
    \ = 0;\n    $odd = 0;\n    $num = abs($num);\n    while ($num > 0) {\n       \
    \ $digit = $num % 10;\n        if ($digit % 2 == 0) {\n            $even++;\n\
    \        } else {\n            $odd++;\n        }\n        $num = floor($num /\
    \ 10);\n    }\n    return array($even, $odd);\n}\n\nfunction candidate(...$args)\
    \ {\n    return even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(7) !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp2s4h8o6d.php:34\n\
    Stack trace:\n#0 /tmp/tmp2s4h8o6d.php(37): test()\n#1 {main}\n  thrown in /tmp/tmp2s4h8o6d.php\
    \ on line 34\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n    $even\
    \ = 0;\n    $odd = 0;\n    $num = abs($num);\n    while ($num > 0) {\n       \
    \ $digit = $num % 10;\n        if ($digit % 2 == 0) {\n            $even++;\n\
    \        } else {\n            $odd++;\n        }\n        $num = floor($num /\
    \ 10);\n    }\n    return [$even, $odd];\n}\n\necho \"even_odd_count(-12) ==>\
    \ \";\nvar_dump(even_odd_count(-12));\necho \"even_odd_count(123) ==> \";\nvar_dump(even_odd_count(123));\n\
    echo \"even_odd_count(0) ==> \";\nvar_dump(even_odd_count(0));\necho \"even_odd_count(1)\
    \ ==> \";\nvar_dump(even_odd_count(1));\necho \"even_odd_count(2) ==> \";\nvar_dump(even_odd_count(2));\n\
    echo \"even_odd_count(3) ==> \";\nvar_dump(even_odd_count(3));\necho \"even_odd_count(4)\
    \ ==> \";\nvar_dump(even_odd_count(4));\necho \"even_odd_count(5) ==> \";\nvar_dump(even_odd_count(5));\n\
    echo \"even_odd_count(6) ==> \";\nvar_dump(even_odd_count(6));\necho \"even_odd_count(7)\
    \ ==> \";\nvar_dump(even_odd_count(7));\necho \"even_odd_count(8) ==> \";\nvar_dump(even_odd_count(8));\n\
    echo \"even_odd_count(9) ==> \";\nvar_dump(even_odd_count(9));\necho \"even_odd_count(10)\
    \ ==> \";\nvar_dump(even_odd_count(10));\necho \"even_odd_count(11) ==> \";\n\
    var_dump(even_odd_count(11));\necho \"even_odd_count(12) ==> \";\nvar_dump(even_\n\
    function candidate(...$args) {\n    return even_odd_count(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Parse error:  syntax error, unexpected token \"function\", expecting\
    \ \")\" in /tmp/tmpo1w5vmfj.php on line 52\n"
  exit_code: 255
  status: SyntaxError
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n    $even\
    \ = 0;\n    $odd = 0;\n    $num = abs($num);\n    while ($num > 0) {\n       \
    \ $digit = $num % 10;\n        if ($digit % 2 == 0) {\n            $even++;\n\
    \        } else {\n            $odd++;\n        }\n        $num = floor($num /\
    \ 10);\n    }\n    return array($even, $odd);\n}\n\nfunction candidate(...$args)\
    \ {\n    return even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(7) !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpxif04uv7.php:34\n\
    Stack trace:\n#0 /tmp/tmpxif04uv7.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpxif04uv7.php\
    \ on line 34\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n    $even\
    \ = 0;\n    $odd = 0;\n    $num = abs($num);\n    while ($num > 0) {\n       \
    \ $digit = $num % 10;\n        if ($digit % 2 == 0) {\n            $even++;\n\
    \        } else {\n            $odd++;\n        }\n        $num = floor($num /\
    \ 10);\n    }\n    return array($even, $odd);\n}\n\nfunction candidate(...$args)\
    \ {\n    return even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(7) !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpxjn2q3m0.php:34\n\
    Stack trace:\n#0 /tmp/tmpxjn2q3m0.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpxjn2q3m0.php\
    \ on line 34\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n    $even\
    \ = 0;\n    $odd = 0;\n    $num = abs($num);\n    while ($num > 0) {\n       \
    \ $digit = $num % 10;\n        if ($digit % 2 == 0) {\n            $even++;\n\
    \        } else {\n            $odd++;\n        }\n        $num = floor($num /\
    \ 10);\n    }\n    return array($even, $odd);\n}\n\nfunction candidate(...$args)\
    \ {\n    return even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(7) !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp07pvtp_p.php:34\n\
    Stack trace:\n#0 /tmp/tmp07pvtp_p.php(37): test()\n#1 {main}\n  thrown in /tmp/tmp07pvtp_p.php\
    \ on line 34\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n    $even\
    \ = 0;\n    $odd = 0;\n    $num = abs($num);\n    while ($num > 0) {\n       \
    \ $digit = $num % 10;\n        if ($digit % 2 == 0) {\n            $even++;\n\
    \        } else {\n            $odd++;\n        }\n        $num = floor($num /\
    \ 10);\n    }\n    return array($even, $odd);\n}\n\nfunction candidate(...$args)\
    \ {\n    return even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(7) !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpwucm0fdi.php:34\n\
    Stack trace:\n#0 /tmp/tmpwucm0fdi.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpwucm0fdi.php\
    \ on line 34\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n    $even\
    \ = 0;\n    $odd = 0;\n    $num = abs($num);\n    while ($num > 0) {\n       \
    \ $digit = $num % 10;\n        if ($digit % 2 == 0) {\n            $even++;\n\
    \        } else {\n            $odd++;\n        }\n        $num = floor($num /\
    \ 10);\n    }\n    return array($even, $odd);\n}\n\nfunction candidate(...$args)\
    \ {\n    return even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(7) !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp59h5hvxx.php:34\n\
    Stack trace:\n#0 /tmp/tmp59h5hvxx.php(37): test()\n#1 {main}\n  thrown in /tmp/tmp59h5hvxx.php\
    \ on line 34\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n    $even\
    \ = 0;\n    $odd = 0;\n    $num = abs($num);\n    while ($num > 0) {\n       \
    \ $digit = $num % 10;\n        if ($digit % 2 == 0) {\n            $even++;\n\
    \        } else {\n            $odd++;\n        }\n        $num = floor($num /\
    \ 10);\n    }\n    return [$even, $odd];\n}\n\nfunction candidate(...$args) {\n\
    \    return even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if (candidate(7)\
    \ !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-78)\
    \ !== array(1, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3452)\
    \ !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211)\
    \ !== array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821)\
    \ !== array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpwhflbaio.php:34\n\
    Stack trace:\n#0 /tmp/tmpwhflbaio.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpwhflbaio.php\
    \ on line 34\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n\t$even =\
    \ 0;\n\t$odd = 0;\n\t$num = abs($num);\n\twhile ($num > 0) {\n\t\t$digit = $num\
    \ % 10;\n\t\tif ($digit % 2 == 0) {\n\t\t\t$even++;\n\t\t} else {\n\t\t\t$odd++;\n\
    \t\t}\n\t\t$num = floor($num / 10);\n\t}\n\treturn array($even, $odd);\n}\n\n\
    function candidate(...$args) {\n    return even_odd_count(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp7wx4bmdb.php:34\n\
    Stack trace:\n#0 /tmp/tmp7wx4bmdb.php(37): test()\n#1 {main}\n  thrown in /tmp/tmp7wx4bmdb.php\
    \ on line 34\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n    $even\
    \ = 0;\n    $odd = 0;\n    $num = abs($num);\n    while ($num > 0) {\n       \
    \ $digit = $num % 10;\n        if ($digit % 2 == 0) {\n            $even++;\n\
    \        } else {\n            $odd++;\n        }\n        $num = floor($num /\
    \ 10);\n    }\n    return array($even, $odd);\n}\n\nfunction candidate(...$args)\
    \ {\n    return even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(7) !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpzxrxuzfm.php:34\n\
    Stack trace:\n#0 /tmp/tmpzxrxuzfm.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpzxrxuzfm.php\
    \ on line 34\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n    $even\
    \ = 0;\n    $odd = 0;\n    $num = abs($num);\n    while ($num > 0) {\n       \
    \ $digit = $num % 10;\n        if ($digit % 2 == 0) {\n            $even++;\n\
    \        } else {\n            $odd++;\n        }\n        $num = floor($num /\
    \ 10);\n    }\n    return array($even, $odd);\n}\n\nfunction candidate(...$args)\
    \ {\n    return even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(7) !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpcml8dm3d.php:34\n\
    Stack trace:\n#0 /tmp/tmpcml8dm3d.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpcml8dm3d.php\
    \ on line 34\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n    $even\
    \ = 0;\n    $odd = 0;\n    $num = abs($num);\n    while ($num > 0) {\n       \
    \ $digit = $num % 10;\n        if ($digit % 2 == 0) {\n            $even++;\n\
    \        } else {\n            $odd++;\n        }\n        $num = floor($num /\
    \ 10);\n    }\n    return [$even, $odd];\n}\n\nfunction candidate(...$args) {\n\
    \    return even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if (candidate(7)\
    \ !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-78)\
    \ !== array(1, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3452)\
    \ !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211)\
    \ !== array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821)\
    \ !== array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpe43wpkxv.php:34\n\
    Stack trace:\n#0 /tmp/tmpe43wpkxv.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpe43wpkxv.php\
    \ on line 34\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n    $even\
    \ = 0;\n    $odd = 0;\n    $num = abs($num);\n    while ($num > 0) {\n       \
    \ $digit = $num % 10;\n        if ($digit % 2 == 0) {\n            $even++;\n\
    \        } else {\n            $odd++;\n        }\n        $num = floor($num /\
    \ 10);\n    }\n    return array($even, $odd);\n}\n\nfunction candidate(...$args)\
    \ {\n    return even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(7) !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpm6n9ozxa.php:34\n\
    Stack trace:\n#0 /tmp/tmpm6n9ozxa.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpm6n9ozxa.php\
    \ on line 34\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n    $even\
    \ = 0;\n    $odd = 0;\n    $num = abs($num);\n    while ($num > 0) {\n       \
    \ $digit = $num % 10;\n        if ($digit % 2 == 0) {\n            $even++;\n\
    \        } else {\n            $odd++;\n        }\n        $num = floor($num /\
    \ 10);\n    }\n    return array($even, $odd);\n}\n\nfunction candidate(...$args)\
    \ {\n    return even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(7) !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp5jhrgou0.php:34\n\
    Stack trace:\n#0 /tmp/tmp5jhrgou0.php(37): test()\n#1 {main}\n  thrown in /tmp/tmp5jhrgou0.php\
    \ on line 34\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n    $even\
    \ = 0;\n    $odd = 0;\n    $num = abs($num);\n    while ($num > 0) {\n       \
    \ $digit = $num % 10;\n        if ($digit % 2 == 0) {\n            $even++;\n\
    \        } else {\n            $odd++;\n        }\n        $num = floor($num /\
    \ 10);\n    }\n    return array($even, $odd);\n}\n\nfunction candidate(...$args)\
    \ {\n    return even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(7) !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpa6ndtf76.php:34\n\
    Stack trace:\n#0 /tmp/tmpa6ndtf76.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpa6ndtf76.php\
    \ on line 34\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n    $even\
    \ = 0;\n    $odd = 0;\n    $num = abs($num);\n    while ($num > 0) {\n       \
    \ $digit = $num % 10;\n        if ($digit % 2 == 0) {\n            $even++;\n\
    \        } else {\n            $odd++;\n        }\n        $num = floor($num /\
    \ 10);\n    }\n    return array($even, $odd);\n}\n\nfunction candidate(...$args)\
    \ {\n    return even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(7) !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpbtopxy8e.php:34\n\
    Stack trace:\n#0 /tmp/tmpbtopxy8e.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpbtopxy8e.php\
    \ on line 34\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n    $even\
    \ = 0;\n    $odd = 0;\n    $num = abs($num);\n    while ($num > 0) {\n       \
    \ $digit = $num % 10;\n        if ($digit % 2 == 0) {\n            $even++;\n\
    \        } else {\n            $odd++;\n        }\n        $num = floor($num /\
    \ 10);\n    }\n    return array($even, $odd);\n}\n\nfunction candidate(...$args)\
    \ {\n    return even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(7) !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmppvi7g9pd.php:34\n\
    Stack trace:\n#0 /tmp/tmppvi7g9pd.php(37): test()\n#1 {main}\n  thrown in /tmp/tmppvi7g9pd.php\
    \ on line 34\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n    $even\
    \ = 0;\n    $odd = 0;\n    $num = abs($num);\n    while ($num > 0) {\n       \
    \ $digit = $num % 10;\n        if ($digit % 2 == 0) {\n            $even++;\n\
    \        } else {\n            $odd++;\n        }\n        $num = floor($num /\
    \ 10);\n    }\n    return array($even, $odd);\n}\n\nfunction candidate(...$args)\
    \ {\n    return even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(7) !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpfjabox8w.php:34\n\
    Stack trace:\n#0 /tmp/tmpfjabox8w.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpfjabox8w.php\
    \ on line 34\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n    $even\
    \ = 0;\n    $odd = 0;\n    $num = abs($num);\n    while ($num > 0) {\n       \
    \ $digit = $num % 10;\n        if ($digit % 2 == 0) {\n            $even++;\n\
    \        } else {\n            $odd++;\n        }\n        $num = floor($num /\
    \ 10);\n    }\n    return [$even, $odd];\n}\n\nfunction candidate(...$args) {\n\
    \    return even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if (candidate(7)\
    \ !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-78)\
    \ !== array(1, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3452)\
    \ !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211)\
    \ !== array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821)\
    \ !== array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp35546k8m.php:34\n\
    Stack trace:\n#0 /tmp/tmp35546k8m.php(37): test()\n#1 {main}\n  thrown in /tmp/tmp35546k8m.php\
    \ on line 34\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n    $even\
    \ = 0;\n    $odd = 0;\n    $num = abs($num);\n    while ($num > 0) {\n       \
    \ $digit = $num % 10;\n        if ($digit % 2 == 0) {\n            $even++;\n\
    \        } else {\n            $odd++;\n        }\n        $num = floor($num /\
    \ 10);\n    }\n    return [$even, $odd];\n}\n\nfunction candidate(...$args) {\n\
    \    return even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if (candidate(7)\
    \ !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-78)\
    \ !== array(1, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3452)\
    \ !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211)\
    \ !== array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821)\
    \ !== array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpnv8616op.php:34\n\
    Stack trace:\n#0 /tmp/tmpnv8616op.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpnv8616op.php\
    \ on line 34\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n    $even\
    \ = 0;\n    $odd = 0;\n    $num = abs($num);\n    while ($num > 0) {\n       \
    \ $digit = $num % 10;\n        if ($digit % 2 == 0) {\n            $even++;\n\
    \        } else {\n            $odd++;\n        }\n        $num = floor($num /\
    \ 10);\n    }\n    return array($even, $odd);\n}\n\nfunction candidate(...$args)\
    \ {\n    return even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(7) !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpalb4e7gf.php:34\n\
    Stack trace:\n#0 /tmp/tmpalb4e7gf.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpalb4e7gf.php\
    \ on line 34\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n    $even\
    \ = 0;\n    $odd = 0;\n    $num = abs($num);\n    while ($num > 0) {\n       \
    \ $digit = $num % 10;\n        if ($digit % 2 == 0) {\n            $even++;\n\
    \        } else {\n            $odd++;\n        }\n        $num = floor($num /\
    \ 10);\n    }\n    return array($even, $odd);\n}\n\nfunction candidate(...$args)\
    \ {\n    return even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(7) !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp0o41jod9.php:34\n\
    Stack trace:\n#0 /tmp/tmp0o41jod9.php(37): test()\n#1 {main}\n  thrown in /tmp/tmp0o41jod9.php\
    \ on line 34\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n    $even\
    \ = 0;\n    $odd = 0;\n    $num = abs($num);\n    while ($num > 0) {\n       \
    \ $digit = $num % 10;\n        if ($digit % 2 == 0) {\n            $even++;\n\
    \        } else {\n            $odd++;\n        }\n        $num = (int)($num /\
    \ 10);\n    }\n    return array($even, $odd);\n}\n\nfunction candidate(...$args)\
    \ {\n    return even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(7) !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpm0pf76uc.php:34\n\
    Stack trace:\n#0 /tmp/tmpm0pf76uc.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpm0pf76uc.php\
    \ on line 34\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n    $even\
    \ = 0;\n    $odd = 0;\n    $num = abs($num);\n    while ($num > 0) {\n       \
    \ $digit = $num % 10;\n        if ($digit % 2 == 0) {\n            $even++;\n\
    \        } else {\n            $odd++;\n        }\n        $num = floor($num /\
    \ 10);\n    }\n    return array($even, $odd);\n}\n\nfunction candidate(...$args)\
    \ {\n    return even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(7) !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpyd7t7ifo.php:34\n\
    Stack trace:\n#0 /tmp/tmpyd7t7ifo.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpyd7t7ifo.php\
    \ on line 34\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n  $even =\
    \ 0;\n  $odd = 0;\n  $num = abs($num);\n  while ($num > 0) {\n    $digit = $num\
    \ % 10;\n    if ($digit % 2 == 0) {\n      $even++;\n    } else {\n      $odd++;\n\
    \    }\n    $num = floor($num / 10);\n  }\n  return array($even, $odd);\n}\n\n\
    function candidate(...$args) {\n    return even_odd_count(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpb9yw762h.php:34\n\
    Stack trace:\n#0 /tmp/tmpb9yw762h.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpb9yw762h.php\
    \ on line 34\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n    $even\
    \ = 0;\n    $odd = 0;\n    $num = abs($num);\n    while ($num != 0) {\n      \
    \  $digit = $num % 10;\n        if ($digit % 2 == 0) {\n            $even++;\n\
    \        } else {\n            $odd++;\n        }\n        $num = floor($num /\
    \ 10);\n    }\n    return array($even, $odd);\n}\n\nfunction candidate(...$args)\
    \ {\n    return even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(7) !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmplre5t3p3.php:34\n\
    Stack trace:\n#0 /tmp/tmplre5t3p3.php(37): test()\n#1 {main}\n  thrown in /tmp/tmplre5t3p3.php\
    \ on line 34\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n    $even\
    \ = 0;\n    $odd = 0;\n    $num = abs($num);\n    while ($num > 0) {\n       \
    \ $digit = $num % 10;\n        if ($digit % 2 == 0) {\n            $even++;\n\
    \        } else {\n            $odd++;\n        }\n        $num = floor($num /\
    \ 10);\n    }\n    return [$even, $odd];\n}\n\nfunction candidate(...$args) {\n\
    \    return even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if (candidate(7)\
    \ !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-78)\
    \ !== array(1, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3452)\
    \ !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211)\
    \ !== array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821)\
    \ !== array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpm4v61fv8.php:34\n\
    Stack trace:\n#0 /tmp/tmpm4v61fv8.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpm4v61fv8.php\
    \ on line 34\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n    $even\
    \ = 0;\n    $odd = 0;\n    $num = abs($num);\n    while ($num > 0) {\n       \
    \ $digit = $num % 10;\n        if ($digit % 2 == 0) {\n            $even++;\n\
    \        } else {\n            $odd++;\n        }\n        $num = floor($num /\
    \ 10);\n    }\n    return array($even, $odd);\n}\n\nfunction candidate(...$args)\
    \ {\n    return even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(7) !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp7i683u0_.php:34\n\
    Stack trace:\n#0 /tmp/tmp7i683u0_.php(37): test()\n#1 {main}\n  thrown in /tmp/tmp7i683u0_.php\
    \ on line 34\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n    $even\
    \ = 0;\n    $odd = 0;\n    $num = abs($num);\n    while ($num > 0) {\n       \
    \ $digit = $num % 10;\n        if ($digit % 2 == 0) {\n            $even++;\n\
    \        } else {\n            $odd++;\n        }\n        $num = floor($num /\
    \ 10);\n    }\n    return array($even, $odd);\n}\n\nfunction candidate(...$args)\
    \ {\n    return even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(7) !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpbkh3hbdv.php:34\n\
    Stack trace:\n#0 /tmp/tmpbkh3hbdv.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpbkh3hbdv.php\
    \ on line 34\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n    $even\
    \ = 0;\n    $odd = 0;\n    $num = abs($num);\n    while ($num > 0) {\n       \
    \ $digit = $num % 10;\n        if ($digit % 2 == 0) {\n            $even++;\n\
    \        } else {\n            $odd++;\n        }\n        $num = floor($num /\
    \ 10);\n    }\n    return array($even, $odd);\n}\n\nfunction candidate(...$args)\
    \ {\n    return even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(7) !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpocmmu_bo.php:34\n\
    Stack trace:\n#0 /tmp/tmpocmmu_bo.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpocmmu_bo.php\
    \ on line 34\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n    $even\
    \ = 0;\n    $odd = 0;\n    $num = abs($num);\n    while ($num > 0) {\n       \
    \ $digit = $num % 10;\n        if ($digit % 2 == 0) {\n            $even++;\n\
    \        } else {\n            $odd++;\n        }\n        $num = floor($num /\
    \ 10);\n    }\n    return [$even, $odd];\n}\n\nfunction candidate(...$args) {\n\
    \    return even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if (candidate(7)\
    \ !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-78)\
    \ !== array(1, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3452)\
    \ !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211)\
    \ !== array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821)\
    \ !== array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpz5fabsbm.php:34\n\
    Stack trace:\n#0 /tmp/tmpz5fabsbm.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpz5fabsbm.php\
    \ on line 34\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n  $even =\
    \ 0;\n  $odd = 0;\n  $num = abs($num);\n  while ($num > 0) {\n    $digit = $num\
    \ % 10;\n    if ($digit % 2 == 0) {\n      $even++;\n    } else {\n      $odd++;\n\
    \    }\n    $num = floor($num / 10);\n  }\n  return array($even, $odd);\n}\n\n\
    function candidate(...$args) {\n    return even_odd_count(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmppmsy6o9w.php:34\n\
    Stack trace:\n#0 /tmp/tmppmsy6o9w.php(37): test()\n#1 {main}\n  thrown in /tmp/tmppmsy6o9w.php\
    \ on line 34\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n    $even\
    \ = 0;\n    $odd = 0;\n    $num = abs($num);\n    while ($num > 0) {\n       \
    \ $digit = $num % 10;\n        if ($digit % 2 == 0) {\n            $even++;\n\
    \        } else {\n            $odd++;\n        }\n        $num = floor($num /\
    \ 10);\n    }\n    return array($even, $odd);\n}\n\nfunction candidate(...$args)\
    \ {\n    return even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(7) !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpv6kmc3mx.php:34\n\
    Stack trace:\n#0 /tmp/tmpv6kmc3mx.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpv6kmc3mx.php\
    \ on line 34\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n    $even\
    \ = 0;\n    $odd = 0;\n    $num = abs($num);\n    while ($num > 0) {\n       \
    \ $digit = $num % 10;\n        if ($digit % 2 == 0) {\n            $even++;\n\
    \        } else {\n            $odd++;\n        }\n        $num = floor($num /\
    \ 10);\n    }\n    return array($even, $odd);\n}\n\nfunction candidate(...$args)\
    \ {\n    return even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(7) !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp0kdodjt5.php:34\n\
    Stack trace:\n#0 /tmp/tmp0kdodjt5.php(37): test()\n#1 {main}\n  thrown in /tmp/tmp0kdodjt5.php\
    \ on line 34\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n    $even\
    \ = 0;\n    $odd = 0;\n    $num = abs($num);\n    while ($num > 0) {\n       \
    \ $digit = $num % 10;\n        if ($digit % 2 == 0) {\n            $even++;\n\
    \        } else {\n            $odd++;\n        }\n        $num = floor($num /\
    \ 10);\n    }\n    return array($even, $odd);\n}\n\nfunction candidate(...$args)\
    \ {\n    return even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(7) !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpirw19a98.php:34\n\
    Stack trace:\n#0 /tmp/tmpirw19a98.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpirw19a98.php\
    \ on line 34\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n    $even\
    \ = 0;\n    $odd = 0;\n    $num = abs($num);\n    while ($num > 0) {\n       \
    \ $digit = $num % 10;\n        if ($digit % 2 == 0) {\n            $even++;\n\
    \        } else {\n            $odd++;\n        }\n        $num = floor($num /\
    \ 10);\n    }\n    return array($even, $odd);\n}\n\nfunction candidate(...$args)\
    \ {\n    return even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(7) !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp3b0ldjbu.php:34\n\
    Stack trace:\n#0 /tmp/tmp3b0ldjbu.php(37): test()\n#1 {main}\n  thrown in /tmp/tmp3b0ldjbu.php\
    \ on line 34\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n    $even\
    \ = 0;\n    $odd = 0;\n    $num = abs($num);\n    while ($num > 0) {\n       \
    \ $digit = $num % 10;\n        if ($digit % 2 == 0) {\n            $even++;\n\
    \        } else {\n            $odd++;\n        }\n        $num = floor($num /\
    \ 10);\n    }\n    return array($even, $odd);\n}\n\nfunction candidate(...$args)\
    \ {\n    return even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(7) !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpg6958_nh.php:34\n\
    Stack trace:\n#0 /tmp/tmpg6958_nh.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpg6958_nh.php\
    \ on line 34\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n    $even\
    \ = 0;\n    $odd = 0;\n    $num = abs($num);\n    while ($num > 0) {\n       \
    \ $digit = $num % 10;\n        if ($digit % 2 == 0) {\n            $even++;\n\
    \        } else {\n            $odd++;\n        }\n        $num = floor($num /\
    \ 10);\n    }\n    return [$even, $odd];\n}\n\nfunction candidate(...$args) {\n\
    \    return even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if (candidate(7)\
    \ !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-78)\
    \ !== array(1, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3452)\
    \ !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211)\
    \ !== array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821)\
    \ !== array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmptoxspem6.php:34\n\
    Stack trace:\n#0 /tmp/tmptoxspem6.php(37): test()\n#1 {main}\n  thrown in /tmp/tmptoxspem6.php\
    \ on line 34\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n    $even\
    \ = 0;\n    $odd = 0;\n    $num = abs($num);\n    while ($num > 0) {\n       \
    \ $digit = $num % 10;\n        if ($digit % 2 == 0) {\n            $even++;\n\
    \        } else {\n            $odd++;\n        }\n        $num = floor($num /\
    \ 10);\n    }\n    return array($even, $odd);\n}\n\nfunction candidate(...$args)\
    \ {\n    return even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(7) !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpwv6mlvmr.php:34\n\
    Stack trace:\n#0 /tmp/tmpwv6mlvmr.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpwv6mlvmr.php\
    \ on line 34\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n  $even =\
    \ 0;\n  $odd = 0;\n  $num = abs($num);\n  while ($num > 0) {\n    $digit = $num\
    \ % 10;\n    if ($digit % 2 == 0) {\n      $even++;\n    } else {\n      $odd++;\n\
    \    }\n    $num = floor($num / 10);\n  }\n  return array($even, $odd);\n}\n\n\
    function candidate(...$args) {\n    return even_odd_count(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpz4uv3y7w.php:34\n\
    Stack trace:\n#0 /tmp/tmpz4uv3y7w.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpz4uv3y7w.php\
    \ on line 34\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n  $even =\
    \ 0;\n  $odd = 0;\n  $num = abs($num);\n  while ($num > 0) {\n    $digit = $num\
    \ % 10;\n    if ($digit % 2 == 0) {\n      $even++;\n    } else {\n      $odd++;\n\
    \    }\n    $num = floor($num / 10);\n  }\n  return array($even, $odd);\n}\n\n\
    function candidate(...$args) {\n    return even_odd_count(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp_y7nhbks.php:34\n\
    Stack trace:\n#0 /tmp/tmp_y7nhbks.php(37): test()\n#1 {main}\n  thrown in /tmp/tmp_y7nhbks.php\
    \ on line 34\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n    $even\
    \ = 0;\n    $odd = 0;\n    $num = abs($num);\n    while ($num > 0) {\n       \
    \ $digit = $num % 10;\n        if ($digit % 2 == 0) {\n            $even++;\n\
    \        } else {\n            $odd++;\n        }\n        $num = floor($num /\
    \ 10);\n    }\n    return array($even, $odd);\n}\n\nfunction candidate(...$args)\
    \ {\n    return even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(7) !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpi4ay2_0u.php:34\n\
    Stack trace:\n#0 /tmp/tmpi4ay2_0u.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpi4ay2_0u.php\
    \ on line 34\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n    $even\
    \ = 0;\n    $odd = 0;\n    $num = abs($num);\n    while ($num > 0) {\n       \
    \ $digit = $num % 10;\n        if ($digit % 2 == 0) {\n            $even++;\n\
    \        } else {\n            $odd++;\n        }\n        $num = floor($num /\
    \ 10);\n    }\n    return [$even, $odd];\n}\n\nfunction candidate(...$args) {\n\
    \    return even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if (candidate(7)\
    \ !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-78)\
    \ !== array(1, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3452)\
    \ !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211)\
    \ !== array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821)\
    \ !== array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpn8otl154.php:34\n\
    Stack trace:\n#0 /tmp/tmpn8otl154.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpn8otl154.php\
    \ on line 34\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n    $even\
    \ = 0;\n    $odd = 0;\n    $num = abs($num);\n    while ($num > 0) {\n       \
    \ $digit = $num % 10;\n        if ($digit % 2 == 0) {\n            $even++;\n\
    \        } else {\n            $odd++;\n        }\n        $num = floor($num /\
    \ 10);\n    }\n    return array($even, $odd);\n}\n\nfunction candidate(...$args)\
    \ {\n    return even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(7) !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp66mewi4b.php:34\n\
    Stack trace:\n#0 /tmp/tmp66mewi4b.php(37): test()\n#1 {main}\n  thrown in /tmp/tmp66mewi4b.php\
    \ on line 34\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n    $even\
    \ = 0;\n    $odd = 0;\n    $num = abs($num);\n    while ($num > 0) {\n       \
    \ $digit = $num % 10;\n        if ($digit % 2 == 0) {\n            $even++;\n\
    \        } else {\n            $odd++;\n        }\n        $num = floor($num /\
    \ 10);\n    }\n    return [$even, $odd];\n}\n\nfunction candidate(...$args) {\n\
    \    return even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if (candidate(7)\
    \ !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-78)\
    \ !== array(1, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3452)\
    \ !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211)\
    \ !== array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821)\
    \ !== array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp8ms8n8wi.php:34\n\
    Stack trace:\n#0 /tmp/tmp8ms8n8wi.php(37): test()\n#1 {main}\n  thrown in /tmp/tmp8ms8n8wi.php\
    \ on line 34\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n  $even =\
    \ 0;\n  $odd = 0;\n  $num = abs($num);\n  while ($num > 0) {\n    $digit = $num\
    \ % 10;\n    if ($digit % 2 == 0) {\n      $even++;\n    } else {\n      $odd++;\n\
    \    }\n    $num = floor($num / 10);\n  }\n  return array($even, $odd);\n}\n\n\
    function candidate(...$args) {\n    return even_odd_count(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpe0phb8gu.php:34\n\
    Stack trace:\n#0 /tmp/tmpe0phb8gu.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpe0phb8gu.php\
    \ on line 34\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n  $even =\
    \ 0;\n  $odd = 0;\n  $num = abs($num);\n  while ($num > 0) {\n    $digit = $num\
    \ % 10;\n    if ($digit % 2 == 0) {\n      $even++;\n    } else {\n      $odd++;\n\
    \    }\n    $num = floor($num / 10);\n  }\n  return array($even, $odd);\n}\n\n\
    function candidate(...$args) {\n    return even_odd_count(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp73jnw2bv.php:34\n\
    Stack trace:\n#0 /tmp/tmp73jnw2bv.php(37): test()\n#1 {main}\n  thrown in /tmp/tmp73jnw2bv.php\
    \ on line 34\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n    $even\
    \ = 0;\n    $odd = 0;\n    $num = abs($num);\n    while ($num > 0) {\n       \
    \ $digit = $num % 10;\n        if ($digit % 2 == 0) {\n            $even++;\n\
    \        } else {\n            $odd++;\n        }\n        $num = floor($num /\
    \ 10);\n    }\n    return [$even, $odd];\n}\n\nfunction candidate(...$args) {\n\
    \    return even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if (candidate(7)\
    \ !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-78)\
    \ !== array(1, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3452)\
    \ !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211)\
    \ !== array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821)\
    \ !== array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpi8tdoltz.php:34\n\
    Stack trace:\n#0 /tmp/tmpi8tdoltz.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpi8tdoltz.php\
    \ on line 34\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n  $even =\
    \ 0;\n  $odd = 0;\n  $num = abs($num);\n  while ($num > 0) {\n    $digit = $num\
    \ % 10;\n    if ($digit % 2 == 0) {\n      $even++;\n    } else {\n      $odd++;\n\
    \    }\n    $num = floor($num / 10);\n  }\n  return [$even, $odd];\n}\n\nfunction\
    \ candidate(...$args) {\n    return even_odd_count(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(7) !== array(0, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpdm1otq8u.php:34\n\
    Stack trace:\n#0 /tmp/tmpdm1otq8u.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpdm1otq8u.php\
    \ on line 34\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n    $even\
    \ = 0;\n    $odd = 0;\n    $num = abs($num);\n    while ($num > 0) {\n       \
    \ $digit = $num % 10;\n        if ($digit % 2 == 0) {\n            $even++;\n\
    \        } else {\n            $odd++;\n        }\n        $num = floor($num /\
    \ 10);\n    }\n    return array($even, $odd);\n}\n\nfunction candidate(...$args)\
    \ {\n    return even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(7) !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp_79btrj8.php:34\n\
    Stack trace:\n#0 /tmp/tmp_79btrj8.php(37): test()\n#1 {main}\n  thrown in /tmp/tmp_79btrj8.php\
    \ on line 34\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n    $even\
    \ = 0;\n    $odd = 0;\n    $num = abs($num);\n    while ($num > 0) {\n       \
    \ $digit = $num % 10;\n        if ($digit % 2 == 0) {\n            $even++;\n\
    \        } else {\n            $odd++;\n        }\n        $num = floor($num /\
    \ 10);\n    }\n    return [$even, $odd];\n}\n\nfunction candidate(...$args) {\n\
    \    return even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if (candidate(7)\
    \ !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-78)\
    \ !== array(1, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3452)\
    \ !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211)\
    \ !== array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821)\
    \ !== array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp7qm8j929.php:34\n\
    Stack trace:\n#0 /tmp/tmp7qm8j929.php(37): test()\n#1 {main}\n  thrown in /tmp/tmp7qm8j929.php\
    \ on line 34\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n    $even\
    \ = 0;\n    $odd = 0;\n    $num = abs($num);\n    while ($num > 0) {\n       \
    \ $digit = $num % 10;\n        if ($digit % 2 == 0) {\n            $even++;\n\
    \        } else {\n            $odd++;\n        }\n        $num = floor($num /\
    \ 10);\n    }\n    return array($even, $odd);\n}\n\nfunction candidate(...$args)\
    \ {\n    return even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(7) !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp8g3wqyib.php:34\n\
    Stack trace:\n#0 /tmp/tmp8g3wqyib.php(37): test()\n#1 {main}\n  thrown in /tmp/tmp8g3wqyib.php\
    \ on line 34\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n    $even\
    \ = 0;\n    $odd = 0;\n    $num = abs($num);\n    while ($num > 0) {\n       \
    \ $digit = $num % 10;\n        if ($digit % 2 == 0) {\n            $even++;\n\
    \        } else {\n            $odd++;\n        }\n        $num = floor($num /\
    \ 10);\n    }\n    return [$even, $odd];\n}\n\nfunction candidate(...$args) {\n\
    \    return even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if (candidate(7)\
    \ !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-78)\
    \ !== array(1, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3452)\
    \ !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211)\
    \ !== array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821)\
    \ !== array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmppmfw9x39.php:34\n\
    Stack trace:\n#0 /tmp/tmppmfw9x39.php(37): test()\n#1 {main}\n  thrown in /tmp/tmppmfw9x39.php\
    \ on line 34\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n    $even\
    \ = 0;\n    $odd = 0;\n    $num = abs($num);\n    while ($num > 0) {\n       \
    \ $digit = $num % 10;\n        if ($digit % 2 == 0) {\n            $even++;\n\
    \        } else {\n            $odd++;\n        }\n        $num = ($num - $digit)\
    \ / 10;\n    }\n    return array($even, $odd);\n}\n\nfunction candidate(...$args)\
    \ {\n    return even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(7) !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpyir9r4_p.php:34\n\
    Stack trace:\n#0 /tmp/tmpyir9r4_p.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpyir9r4_p.php\
    \ on line 34\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n    $even\
    \ = 0;\n    $odd = 0;\n    $num = abs($num);\n    while ($num > 0) {\n       \
    \ $digit = $num % 10;\n        if ($digit % 2 == 0) {\n            $even++;\n\
    \        } else {\n            $odd++;\n        }\n        $num = floor($num /\
    \ 10);\n    }\n    return array($even, $odd);\n}\n\nfunction candidate(...$args)\
    \ {\n    return even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(7) !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp5cz0h754.php:34\n\
    Stack trace:\n#0 /tmp/tmp5cz0h754.php(37): test()\n#1 {main}\n  thrown in /tmp/tmp5cz0h754.php\
    \ on line 34\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n    $even\
    \ = 0;\n    $odd = 0;\n    $num = abs($num);\n    while ($num > 0) {\n       \
    \ $digit = $num % 10;\n        if ($digit % 2 == 0) {\n            $even++;\n\
    \        } else {\n            $odd++;\n        }\n        $num = floor($num /\
    \ 10);\n    }\n    return [$even, $odd];\n}\n\necho '<pre>';\nprint_r(even_odd_count(-12));\n\
    echo '</pre>';\n\necho '<pre>';\nprint_r(even_odd_count(123));\necho '</pre>';\n\
    function candidate(...$args) {\n    return even_odd_count(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "<pre>Array\n(\n    [0] => 1\n    [1] => 1\n)\n</pre><pre>Array\n(\n   \
    \ [0] => 1\n    [1] => 2\n)\n</pre>"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpyz2h8ru6.php:41\n\
    Stack trace:\n#0 /tmp/tmpyz2h8ru6.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpyz2h8ru6.php\
    \ on line 41\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n    $even\
    \ = 0;\n    $odd = 0;\n    $num = abs($num);\n    while ($num > 0) {\n       \
    \ $digit = $num % 10;\n        if ($digit % 2 == 0) {\n            $even++;\n\
    \        } else {\n            $odd++;\n        }\n        $num = floor($num /\
    \ 10);\n    }\n    return [$even, $odd];\n}\n\nfunction candidate(...$args) {\n\
    \    return even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if (candidate(7)\
    \ !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-78)\
    \ !== array(1, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3452)\
    \ !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211)\
    \ !== array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821)\
    \ !== array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpg69ooput.php:34\n\
    Stack trace:\n#0 /tmp/tmpg69ooput.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpg69ooput.php\
    \ on line 34\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n    $even\
    \ = 0;\n    $odd = 0;\n    $num = abs($num);\n    while ($num > 0) {\n       \
    \ $digit = $num % 10;\n        if ($digit % 2 == 0) {\n            $even++;\n\
    \        } else {\n            $odd++;\n        }\n        $num = floor($num /\
    \ 10);\n    }\n    return [$even, $odd];\n}\n\nfunction candidate(...$args) {\n\
    \    return even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if (candidate(7)\
    \ !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-78)\
    \ !== array(1, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3452)\
    \ !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211)\
    \ !== array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821)\
    \ !== array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp7_nqj4ep.php:34\n\
    Stack trace:\n#0 /tmp/tmp7_nqj4ep.php(37): test()\n#1 {main}\n  thrown in /tmp/tmp7_nqj4ep.php\
    \ on line 34\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n    $even\
    \ = 0;\n    $odd = 0;\n    $num = abs($num);\n    while ($num > 0) {\n       \
    \ $digit = $num % 10;\n        if ($digit % 2 == 0) {\n            $even++;\n\
    \        } else {\n            $odd++;\n        }\n        $num = floor($num /\
    \ 10);\n    }\n    return array($even, $odd);\n}\n\nfunction candidate(...$args)\
    \ {\n    return even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(7) !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpjs0m47w4.php:34\n\
    Stack trace:\n#0 /tmp/tmpjs0m47w4.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpjs0m47w4.php\
    \ on line 34\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n    $even\
    \ = 0;\n    $odd = 0;\n    $num = abs($num);\n    while ($num > 0) {\n       \
    \ $digit = $num % 10;\n        if ($digit % 2 == 0) {\n            $even++;\n\
    \        } else {\n            $odd++;\n        }\n        $num = floor($num /\
    \ 10);\n    }\n    return array($even, $odd);\n}\n\nfunction candidate(...$args)\
    \ {\n    return even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(7) !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp9c62lupk.php:34\n\
    Stack trace:\n#0 /tmp/tmp9c62lupk.php(37): test()\n#1 {main}\n  thrown in /tmp/tmp9c62lupk.php\
    \ on line 34\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n    $even\
    \ = 0;\n    $odd = 0;\n    $num = abs($num);\n    while ($num > 0) {\n       \
    \ $digit = $num % 10;\n        if ($digit % 2 == 0) {\n            $even++;\n\
    \        } else {\n            $odd++;\n        }\n        $num = floor($num /\
    \ 10);\n    }\n    return [$even, $odd];\n}\n\necho \"even_odd_count(-12) ==>\
    \ \";\nvar_dump(even_odd_count(-12));\necho \"even_odd_count(123) ==> \";\nvar_dump(even_odd_count(123));\n\
    echo \"even_odd_count(0) ==> \";\nvar_dump(even_odd_count(0));\necho \"even_odd_count(123456789)\
    \ ==> \";\nvar_dump(even_odd_count(123456789));\necho \"even_odd_count(12345678901234567890)\
    \ ==> \";\nvar_dump(even_odd_count(12345678901234567890));\nfunction candidate(...$args)\
    \ {\n    return even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(7) !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "even_odd_count(-12) ==> array(2) {\n  [0]=>\n  int(1)\n  [1]=>\n  int(1)\n\
    }\neven_odd_count(123) ==> array(2) {\n  [0]=>\n  int(1)\n  [1]=>\n  int(2)\n\
    }\neven_odd_count(0) ==> array(2) {\n  [0]=>\n  int(0)\n  [1]=>\n  int(0)\n}\n\
    even_odd_count(123456789) ==> array(2) {\n  [0]=>\n  int(4)\n  [1]=>\n  int(5)\n\
    }\neven_odd_count(12345678901234567890) ==> array(2) {\n  [0]=>\n  int(12)\n \
    \ [1]=>\n  int(8)\n}\n"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpx6nu5nkr.php:44\n\
    Stack trace:\n#0 /tmp/tmpx6nu5nkr.php(47): test()\n#1 {main}\n  thrown in /tmp/tmpx6nu5nkr.php\
    \ on line 44\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n  $even =\
    \ 0;\n  $odd = 0;\n  $num = abs($num);\n  while ($num > 0) {\n    $digit = $num\
    \ % 10;\n    if ($digit % 2 == 0) {\n      $even++;\n    } else {\n      $odd++;\n\
    \    }\n    $num = floor($num / 10);\n  }\n  return array($even, $odd);\n}\n\n\
    echo \"even_odd_count(-12) ==> \";\nvar_dump(even_odd_count(-12));\necho \"even_odd_count(123)\
    \ ==> \";\nvar_dump(even_odd_count(123));\nfunction candidate(...$args) {\n  \
    \  return even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if (candidate(7)\
    \ !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-78)\
    \ !== array(1, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3452)\
    \ !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211)\
    \ !== array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821)\
    \ !== array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "even_odd_count(-12) ==> array(2) {\n  [0]=>\n  int(1)\n  [1]=>\n  int(1)\n\
    }\neven_odd_count(123) ==> array(2) {\n  [0]=>\n  int(1)\n  [1]=>\n  int(2)\n\
    }\n"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpohyt1jum.php:38\n\
    Stack trace:\n#0 /tmp/tmpohyt1jum.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpohyt1jum.php\
    \ on line 38\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n    $even\
    \ = 0;\n    $odd = 0;\n    $num = abs($num);\n    while ($num > 0) {\n       \
    \ $digit = $num % 10;\n        if ($digit % 2 == 0) {\n            $even++;\n\
    \        } else {\n            $odd++;\n        }\n        $num = floor($num /\
    \ 10);\n    }\n    return array($even, $odd);\n}\n\nfunction candidate(...$args)\
    \ {\n    return even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(7) !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpbp9_9lri.php:34\n\
    Stack trace:\n#0 /tmp/tmpbp9_9lri.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpbp9_9lri.php\
    \ on line 34\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n    $even\
    \ = 0;\n    $odd = 0;\n    $num = abs($num);\n    while ($num > 0) {\n       \
    \ $digit = $num % 10;\n        if ($digit % 2 == 0) {\n            $even++;\n\
    \        } else {\n            $odd++;\n        }\n        $num = floor($num /\
    \ 10);\n    }\n    return array($even, $odd);\n}\n\nfunction candidate(...$args)\
    \ {\n    return even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(7) !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpv60m8suh.php:34\n\
    Stack trace:\n#0 /tmp/tmpv60m8suh.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpv60m8suh.php\
    \ on line 34\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n    $even\
    \ = 0;\n    $odd = 0;\n    $num = abs($num);\n    while ($num > 0) {\n       \
    \ $digit = $num % 10;\n        if ($digit % 2 == 0) {\n            $even++;\n\
    \        } else {\n            $odd++;\n        }\n        $num = floor($num /\
    \ 10);\n    }\n    return [$even, $odd];\n}\necho even_odd_count(-12)[0] . ' '\
    \ . even_odd_count(-12)[1] . PHP_EOL;\necho even_odd_count(123)[0] . ' ' . even_odd_count(123)[1]\
    \ . PHP_EOL;\n\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(3452) !== array(2, 2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211) !== array(3,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821) !==\
    \ array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "1 1\n1 2\n"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp7928y6hn.php:36\n\
    Stack trace:\n#0 /tmp/tmp7928y6hn.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp7928y6hn.php\
    \ on line 36\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n    $even\
    \ = 0;\n    $odd = 0;\n    $num = abs($num);\n    while ($num > 0) {\n       \
    \ $digit = $num % 10;\n        if ($digit % 2 == 0) {\n            $even++;\n\
    \        } else {\n            $odd++;\n        }\n        $num = floor($num /\
    \ 10);\n    }\n    return array($even, $odd);\n}\n\nfunction candidate(...$args)\
    \ {\n    return even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(7) !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpdvzj6yza.php:34\n\
    Stack trace:\n#0 /tmp/tmpdvzj6yza.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpdvzj6yza.php\
    \ on line 34\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n    $even\
    \ = 0;\n    $odd = 0;\n    $num = abs($num);\n    while ($num > 0) {\n       \
    \ $digit = $num % 10;\n        if ($digit % 2 == 0) {\n            $even++;\n\
    \        } else {\n            $odd++;\n        }\n        $num = ($num - $digit)\
    \ / 10;\n    }\n    return [$even, $odd];\n}\n\nfunction candidate(...$args) {\n\
    \    return even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if (candidate(7)\
    \ !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-78)\
    \ !== array(1, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3452)\
    \ !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211)\
    \ !== array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821)\
    \ !== array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpllwdcepc.php:34\n\
    Stack trace:\n#0 /tmp/tmpllwdcepc.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpllwdcepc.php\
    \ on line 34\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n    $even\
    \ = 0;\n    $odd = 0;\n    $num = abs($num);\n    while ($num > 0) {\n       \
    \ $digit = $num % 10;\n        if ($digit % 2 == 0) {\n            $even++;\n\
    \        } else {\n            $odd++;\n        }\n        $num = floor($num /\
    \ 10);\n    }\n    return [$even, $odd];\n}\n\nfunction candidate(...$args) {\n\
    \    return even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if (candidate(7)\
    \ !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-78)\
    \ !== array(1, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3452)\
    \ !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211)\
    \ !== array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821)\
    \ !== array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp_858egmc.php:34\n\
    Stack trace:\n#0 /tmp/tmp_858egmc.php(37): test()\n#1 {main}\n  thrown in /tmp/tmp_858egmc.php\
    \ on line 34\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n    $even\
    \ = 0;\n    $odd = 0;\n    $num = abs($num);\n    while ($num > 0) {\n       \
    \ $digit = $num % 10;\n        if ($digit % 2 == 0) {\n            $even++;\n\
    \        } else {\n            $odd++;\n        }\n        $num = (int)($num /\
    \ 10);\n    }\n    return array($even, $odd);\n}\n\nfunction candidate(...$args)\
    \ {\n    return even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(7) !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmphsd7bndf.php:34\n\
    Stack trace:\n#0 /tmp/tmphsd7bndf.php(37): test()\n#1 {main}\n  thrown in /tmp/tmphsd7bndf.php\
    \ on line 34\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n    $even\
    \ = 0;\n    $odd = 0;\n    $num = abs($num);\n    while ($num > 0) {\n       \
    \ $digit = $num % 10;\n        if ($digit % 2 == 0) {\n            $even++;\n\
    \        } else {\n            $odd++;\n        }\n        $num = floor($num /\
    \ 10);\n    }\n    return array($even, $odd);\n}\n\nfunction candidate(...$args)\
    \ {\n    return even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(7) !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpuvadndx_.php:34\n\
    Stack trace:\n#0 /tmp/tmpuvadndx_.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpuvadndx_.php\
    \ on line 34\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n    $even\
    \ = 0;\n    $odd = 0;\n    $num = abs($num);\n    while ($num > 0) {\n       \
    \ $digit = $num % 10;\n        if ($digit % 2 == 0) {\n            $even++;\n\
    \        } else {\n            $odd++;\n        }\n        $num = floor($num /\
    \ 10);\n    }\n    return array($even, $odd);\n}\n\nfunction candidate(...$args)\
    \ {\n    return even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(7) !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp755qor7s.php:34\n\
    Stack trace:\n#0 /tmp/tmp755qor7s.php(37): test()\n#1 {main}\n  thrown in /tmp/tmp755qor7s.php\
    \ on line 34\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n    $even\
    \ = 0;\n    $odd = 0;\n    $num = abs($num);\n    while ($num > 0) {\n       \
    \ $digit = $num % 10;\n        if ($digit % 2 == 0) {\n            $even++;\n\
    \        } else {\n            $odd++;\n        }\n        $num = floor($num /\
    \ 10);\n    }\n    return array($even, $odd);\n}\n\nfunction candidate(...$args)\
    \ {\n    return even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(7) !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmphmphqnm0.php:34\n\
    Stack trace:\n#0 /tmp/tmphmphqnm0.php(37): test()\n#1 {main}\n  thrown in /tmp/tmphmphqnm0.php\
    \ on line 34\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n    $even\
    \ = 0;\n    $odd = 0;\n    $num = abs($num);\n    while ($num > 0) {\n       \
    \ $digit = $num % 10;\n        if ($digit % 2 == 0) {\n            $even++;\n\
    \        } else {\n            $odd++;\n        }\n        $num = floor($num /\
    \ 10);\n    }\n    return [$even, $odd];\n}\n\nfunction candidate(...$args) {\n\
    \    return even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if (candidate(7)\
    \ !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-78)\
    \ !== array(1, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3452)\
    \ !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211)\
    \ !== array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821)\
    \ !== array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp480_o2ol.php:34\n\
    Stack trace:\n#0 /tmp/tmp480_o2ol.php(37): test()\n#1 {main}\n  thrown in /tmp/tmp480_o2ol.php\
    \ on line 34\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n    $even\
    \ = 0;\n    $odd = 0;\n    $num = abs($num);\n    while ($num > 0) {\n       \
    \ $digit = $num % 10;\n        if ($digit % 2 == 0) {\n            $even++;\n\
    \        } else {\n            $odd++;\n        }\n        $num = floor($num /\
    \ 10);\n    }\n    return array($even, $odd);\n}\n\nfunction candidate(...$args)\
    \ {\n    return even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(7) !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmplyhy2vjt.php:34\n\
    Stack trace:\n#0 /tmp/tmplyhy2vjt.php(37): test()\n#1 {main}\n  thrown in /tmp/tmplyhy2vjt.php\
    \ on line 34\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n    $even\
    \ = 0;\n    $odd = 0;\n    $num = abs($num);\n    while ($num > 0) {\n       \
    \ $digit = $num % 10;\n        if ($digit % 2 == 0) {\n            $even++;\n\
    \        } else {\n            $odd++;\n        }\n        $num = floor($num /\
    \ 10);\n    }\n    return array($even, $odd);\n}\n\nfunction candidate(...$args)\
    \ {\n    return even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(7) !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp_4vdmchh.php:34\n\
    Stack trace:\n#0 /tmp/tmp_4vdmchh.php(37): test()\n#1 {main}\n  thrown in /tmp/tmp_4vdmchh.php\
    \ on line 34\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n    $even\
    \ = 0;\n    $odd = 0;\n    $num = abs($num);\n    while ($num > 0) {\n       \
    \ $digit = $num % 10;\n        if ($digit % 2 == 0) {\n            $even++;\n\
    \        } else {\n            $odd++;\n        }\n        $num = floor($num /\
    \ 10);\n    }\n    return array($even, $odd);\n}\necho even_odd_count(-12) . \"\
    \\n\";\necho even_odd_count(123) . \"\\n\";\nfunction candidate(...$args) {\n\
    \    return even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if (candidate(7)\
    \ !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-78)\
    \ !== array(1, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3452)\
    \ !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211)\
    \ !== array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821)\
    \ !== array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "Array\nArray\n"
  stderr: "PHP Warning:  Array to string conversion in /tmp/tmpxyxydojv.php on line\
    \ 21\nPHP Warning:  Array to string conversion in /tmp/tmpxyxydojv.php on line\
    \ 22\nPHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpxyxydojv.php:35\n\
    Stack trace:\n#0 /tmp/tmpxyxydojv.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpxyxydojv.php\
    \ on line 35\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n    $even\
    \ = 0;\n    $odd = 0;\n    $num = abs($num);\n    while ($num > 0) {\n       \
    \ $digit = $num % 10;\n        if ($digit % 2 == 0) {\n            $even++;\n\
    \        } else {\n            $odd++;\n        }\n        $num = floor($num /\
    \ 10);\n    }\n    return [$even, $odd];\n}\n\nfunction candidate(...$args) {\n\
    \    return even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if (candidate(7)\
    \ !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-78)\
    \ !== array(1, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3452)\
    \ !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211)\
    \ !== array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821)\
    \ !== array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp8wczb_ua.php:34\n\
    Stack trace:\n#0 /tmp/tmp8wczb_ua.php(37): test()\n#1 {main}\n  thrown in /tmp/tmp8wczb_ua.php\
    \ on line 34\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n    $even\
    \ = 0;\n    $odd = 0;\n    $num = abs($num);\n    while ($num > 0) {\n       \
    \ $digit = $num % 10;\n        if ($digit % 2 == 0) {\n            $even++;\n\
    \        } else {\n            $odd++;\n        }\n        $num = (int)($num /\
    \ 10);\n    }\n    return array($even, $odd);\n}\n\nfunction candidate(...$args)\
    \ {\n    return even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(7) !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpwytwxy2w.php:34\n\
    Stack trace:\n#0 /tmp/tmpwytwxy2w.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpwytwxy2w.php\
    \ on line 34\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n    $even\
    \ = 0;\n    $odd = 0;\n    $num = abs($num);\n    while ($num > 0) {\n       \
    \ $digit = $num % 10;\n        if ($digit % 2 == 0) {\n            $even++;\n\
    \        } else {\n            $odd++;\n        }\n        $num = floor($num /\
    \ 10);\n    }\n    return array($even, $odd);\n}\n\nfunction candidate(...$args)\
    \ {\n    return even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(7) !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpjb_2wl3y.php:34\n\
    Stack trace:\n#0 /tmp/tmpjb_2wl3y.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpjb_2wl3y.php\
    \ on line 34\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n    $even\
    \ = 0;\n    $odd = 0;\n    $num = abs($num);\n    while ($num > 0) {\n       \
    \ $digit = $num % 10;\n        if ($digit % 2 == 0) {\n            $even++;\n\
    \        } else {\n            $odd++;\n        }\n        $num = floor($num /\
    \ 10);\n    }\n    return [$even, $odd];\n}\n\nfunction candidate(...$args) {\n\
    \    return even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if (candidate(7)\
    \ !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-78)\
    \ !== array(1, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3452)\
    \ !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211)\
    \ !== array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821)\
    \ !== array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp2cgi5w40.php:34\n\
    Stack trace:\n#0 /tmp/tmp2cgi5w40.php(37): test()\n#1 {main}\n  thrown in /tmp/tmp2cgi5w40.php\
    \ on line 34\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n    $even\
    \ = 0;\n    $odd = 0;\n    $num = abs($num);\n    while ($num > 0) {\n       \
    \ $digit = $num % 10;\n        if ($digit % 2 == 0) {\n            $even++;\n\
    \        } else {\n            $odd++;\n        }\n        $num = floor($num /\
    \ 10);\n    }\n    return [$even, $odd];\n}\n\nfunction candidate(...$args) {\n\
    \    return even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if (candidate(7)\
    \ !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-78)\
    \ !== array(1, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3452)\
    \ !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211)\
    \ !== array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821)\
    \ !== array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp_8vwv09r.php:34\n\
    Stack trace:\n#0 /tmp/tmp_8vwv09r.php(37): test()\n#1 {main}\n  thrown in /tmp/tmp_8vwv09r.php\
    \ on line 34\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n  $even =\
    \ 0;\n  $odd = 0;\n  $num = abs($num);\n  while ($num > 0) {\n    $digit = $num\
    \ % 10;\n    if ($digit % 2 == 0) {\n      $even++;\n    } else {\n      $odd++;\n\
    \    }\n    $num = floor($num / 10);\n  }\n  return array($even, $odd);\n}\n\n\
    function candidate(...$args) {\n    return even_odd_count(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp4xxj7ycg.php:34\n\
    Stack trace:\n#0 /tmp/tmp4xxj7ycg.php(37): test()\n#1 {main}\n  thrown in /tmp/tmp4xxj7ycg.php\
    \ on line 34\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n    $even\
    \ = 0;\n    $odd = 0;\n    $num = abs($num);\n    while ($num > 0) {\n       \
    \ $digit = $num % 10;\n        if ($digit % 2 == 0) {\n            $even++;\n\
    \        } else {\n            $odd++;\n        }\n        $num = floor($num /\
    \ 10);\n    }\n    return [$even, $odd];\n}\necho even_odd_count(-12)[0] . \"\
    \ \" . even_odd_count(-12)[1] . \"\\n\";\necho even_odd_count(123)[0] . \" \"\
    \ . even_odd_count(123)[1] . \"\\n\";\nfunction candidate(...$args) {\n    return\
    \ even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if (candidate(7)\
    \ !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-78)\
    \ !== array(1, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3452)\
    \ !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211)\
    \ !== array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821)\
    \ !== array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "1 1\n1 2\n"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp89lu8h9n.php:35\n\
    Stack trace:\n#0 /tmp/tmp89lu8h9n.php(38): test()\n#1 {main}\n  thrown in /tmp/tmp89lu8h9n.php\
    \ on line 35\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n    $even\
    \ = 0;\n    $odd = 0;\n    $num = abs($num);\n    while ($num > 0) {\n       \
    \ $digit = $num % 10;\n        if ($digit % 2 == 0) {\n            $even++;\n\
    \        } else {\n            $odd++;\n        }\n        $num = floor($num /\
    \ 10);\n    }\n    return [$even, $odd];\n}\n\nfunction candidate(...$args) {\n\
    \    return even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if (candidate(7)\
    \ !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-78)\
    \ !== array(1, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3452)\
    \ !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211)\
    \ !== array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821)\
    \ !== array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp2o9s4ded.php:34\n\
    Stack trace:\n#0 /tmp/tmp2o9s4ded.php(37): test()\n#1 {main}\n  thrown in /tmp/tmp2o9s4ded.php\
    \ on line 34\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n  $even =\
    \ 0;\n  $odd = 0;\n  $num = abs($num);\n  while ($num > 0) {\n    $digit = $num\
    \ % 10;\n    if ($digit % 2 == 0) {\n      $even++;\n    } else {\n      $odd++;\n\
    \    }\n    $num = floor($num / 10);\n  }\n  return array($even, $odd);\n}\n\n\
    function candidate(...$args) {\n    return even_odd_count(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmphopq9qgy.php:34\n\
    Stack trace:\n#0 /tmp/tmphopq9qgy.php(37): test()\n#1 {main}\n  thrown in /tmp/tmphopq9qgy.php\
    \ on line 34\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n  $even =\
    \ 0;\n  $odd = 0;\n  $num = abs($num);\n  while ($num > 0) {\n    $digit = $num\
    \ % 10;\n    if ($digit % 2 == 0) {\n      $even++;\n    } else {\n      $odd++;\n\
    \    }\n    $num = floor($num / 10);\n  }\n  return array($even, $odd);\n}\n\n\
    function candidate(...$args) {\n    return even_odd_count(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpmjx25cq1.php:34\n\
    Stack trace:\n#0 /tmp/tmpmjx25cq1.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpmjx25cq1.php\
    \ on line 34\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n    $even\
    \ = 0;\n    $odd = 0;\n    $num = abs($num);\n    while ($num > 0) {\n       \
    \ $digit = $num % 10;\n        if ($digit % 2 == 0) {\n            $even++;\n\
    \        } else {\n            $odd++;\n        }\n        $num = floor($num /\
    \ 10);\n    }\n    return array($even, $odd);\n}\n\nfunction candidate(...$args)\
    \ {\n    return even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(7) !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpy8ly2fgl.php:34\n\
    Stack trace:\n#0 /tmp/tmpy8ly2fgl.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpy8ly2fgl.php\
    \ on line 34\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n    $even\
    \ = 0;\n    $odd = 0;\n    $num = abs($num);\n    while ($num > 0) {\n       \
    \ $digit = $num % 10;\n        if ($digit % 2 == 0) {\n            $even++;\n\
    \        } else {\n            $odd++;\n        }\n        $num = floor($num /\
    \ 10);\n    }\n    return array($even, $odd);\n}\n\nfunction candidate(...$args)\
    \ {\n    return even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(7) !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpk4f1zjmk.php:34\n\
    Stack trace:\n#0 /tmp/tmpk4f1zjmk.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpk4f1zjmk.php\
    \ on line 34\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n    $even\
    \ = 0;\n    $odd = 0;\n    $num = abs($num);\n    while ($num > 0) {\n       \
    \ $digit = $num % 10;\n        if ($digit % 2 == 0) {\n            $even++;\n\
    \        } else {\n            $odd++;\n        }\n        $num = intval($num\
    \ / 10);\n    }\n    return array($even, $odd);\n}\n\nfunction candidate(...$args)\
    \ {\n    return even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(7) !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpjly_xdp6.php:34\n\
    Stack trace:\n#0 /tmp/tmpjly_xdp6.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpjly_xdp6.php\
    \ on line 34\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n    $even\
    \ = 0;\n    $odd = 0;\n    $num = abs($num);\n    while ($num > 0) {\n       \
    \ $digit = $num % 10;\n        if ($digit % 2 == 0) {\n            $even++;\n\
    \        } else {\n            $odd++;\n        }\n        $num = floor($num /\
    \ 10);\n    }\n    return [$even, $odd];\n}\n\nfunction candidate(...$args) {\n\
    \    return even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if (candidate(7)\
    \ !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-78)\
    \ !== array(1, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3452)\
    \ !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211)\
    \ !== array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821)\
    \ !== array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp4ziubv_m.php:34\n\
    Stack trace:\n#0 /tmp/tmp4ziubv_m.php(37): test()\n#1 {main}\n  thrown in /tmp/tmp4ziubv_m.php\
    \ on line 34\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n    $even\
    \ = 0;\n    $odd = 0;\n    $num = abs($num);\n    while ($num > 0) {\n       \
    \ $digit = $num % 10;\n        if ($digit % 2 == 0) {\n            $even++;\n\
    \        } else {\n            $odd++;\n        }\n        $num = floor($num /\
    \ 10);\n    }\n    return [$even, $odd];\n}\n\nfunction candidate(...$args) {\n\
    \    return even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if (candidate(7)\
    \ !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-78)\
    \ !== array(1, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3452)\
    \ !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211)\
    \ !== array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821)\
    \ !== array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmplmfbd0rv.php:34\n\
    Stack trace:\n#0 /tmp/tmplmfbd0rv.php(37): test()\n#1 {main}\n  thrown in /tmp/tmplmfbd0rv.php\
    \ on line 34\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n  $even =\
    \ 0;\n  $odd = 0;\n  $num = abs($num);\n  while ($num > 0) {\n    $digit = $num\
    \ % 10;\n    if ($digit % 2 == 0) {\n      $even++;\n    } else {\n      $odd++;\n\
    \    }\n    $num = floor($num / 10);\n  }\n  return array($even, $odd);\n}\n\n\
    function candidate(...$args) {\n    return even_odd_count(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpp_inn2zm.php:34\n\
    Stack trace:\n#0 /tmp/tmpp_inn2zm.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpp_inn2zm.php\
    \ on line 34\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n    $even\
    \ = 0;\n    $odd = 0;\n    $num = abs($num);\n    while ($num > 0) {\n       \
    \ $digit = $num % 10;\n        if ($digit % 2 == 0) {\n            $even++;\n\
    \        } else {\n            $odd++;\n        }\n        $num = (int)($num /\
    \ 10);\n    }\n    return array($even, $odd);\n}\n\nfunction candidate(...$args)\
    \ {\n    return even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(7) !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp8nyo0om9.php:34\n\
    Stack trace:\n#0 /tmp/tmp8nyo0om9.php(37): test()\n#1 {main}\n  thrown in /tmp/tmp8nyo0om9.php\
    \ on line 34\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n  $even =\
    \ 0;\n  $odd = 0;\n  $num = abs($num);\n  while ($num > 0) {\n    $digit = $num\
    \ % 10;\n    if ($digit % 2 == 0) {\n      $even++;\n    } else {\n      $odd++;\n\
    \    }\n    $num = floor($num / 10);\n  }\n  return array($even, $odd);\n}\n\n\
    function candidate(...$args) {\n    return even_odd_count(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpu7mngeim.php:34\n\
    Stack trace:\n#0 /tmp/tmpu7mngeim.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpu7mngeim.php\
    \ on line 34\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n    $even\
    \ = 0;\n    $odd = 0;\n    $num = abs($num);\n    while ($num > 0) {\n       \
    \ $digit = $num % 10;\n        if ($digit % 2 == 0) {\n            $even++;\n\
    \        } else {\n            $odd++;\n        }\n        $num = floor($num /\
    \ 10);\n    }\n    return array($even, $odd);\n}\n\nfunction candidate(...$args)\
    \ {\n    return even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(7) !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpf1k4t9wy.php:34\n\
    Stack trace:\n#0 /tmp/tmpf1k4t9wy.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpf1k4t9wy.php\
    \ on line 34\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n    $even\
    \ = 0;\n    $odd = 0;\n    $num = abs($num);\n    while ($num > 0) {\n       \
    \ $digit = $num % 10;\n        if ($digit % 2 == 0) {\n            $even++;\n\
    \        } else {\n            $odd++;\n        }\n        $num = floor($num /\
    \ 10);\n    }\n    return [$even, $odd];\n}\n\nfunction candidate(...$args) {\n\
    \    return even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if (candidate(7)\
    \ !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-78)\
    \ !== array(1, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3452)\
    \ !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211)\
    \ !== array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821)\
    \ !== array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp0820tbu9.php:34\n\
    Stack trace:\n#0 /tmp/tmp0820tbu9.php(37): test()\n#1 {main}\n  thrown in /tmp/tmp0820tbu9.php\
    \ on line 34\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n    $even\
    \ = 0;\n    $odd = 0;\n    $num = abs($num);\n    while ($num > 0) {\n       \
    \ $digit = $num % 10;\n        if ($digit % 2 == 0) {\n            $even++;\n\
    \        } else {\n            $odd++;\n        }\n        $num = floor($num /\
    \ 10);\n    }\n    return [$even, $odd];\n}\n\nfunction candidate(...$args) {\n\
    \    return even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if (candidate(7)\
    \ !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-78)\
    \ !== array(1, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3452)\
    \ !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211)\
    \ !== array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821)\
    \ !== array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpjd0g8a0z.php:34\n\
    Stack trace:\n#0 /tmp/tmpjd0g8a0z.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpjd0g8a0z.php\
    \ on line 34\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n    $even\
    \ = 0;\n    $odd = 0;\n    $num = abs($num);\n    while ($num > 0) {\n       \
    \ $digit = $num % 10;\n        if ($digit % 2 == 0) {\n            $even++;\n\
    \        } else {\n            $odd++;\n        }\n        $num = floor($num /\
    \ 10);\n    }\n    return [$even, $odd];\n}\n\nfunction candidate(...$args) {\n\
    \    return even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if (candidate(7)\
    \ !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-78)\
    \ !== array(1, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3452)\
    \ !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211)\
    \ !== array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821)\
    \ !== array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmphs6_cw_6.php:34\n\
    Stack trace:\n#0 /tmp/tmphs6_cw_6.php(37): test()\n#1 {main}\n  thrown in /tmp/tmphs6_cw_6.php\
    \ on line 34\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n    $even\
    \ = 0;\n    $odd = 0;\n    $num = abs($num);\n    while ($num > 0) {\n       \
    \ $digit = $num % 10;\n        if ($digit % 2 == 0) {\n            $even++;\n\
    \        } else {\n            $odd++;\n        }\n        $num = floor($num /\
    \ 10);\n    }\n    return [$even, $odd];\n}\n\necho even_odd_count(-12)[0] . '\
    \ ' . even_odd_count(-12)[1] . PHP_EOL;\necho even_odd_count(123)[0] . ' ' . even_odd_count(123)[1]\
    \ . PHP_EOL;\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(3452) !== array(2, 2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211) !== array(3,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821) !==\
    \ array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "1 1\n1 2\n"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpufqtkauv.php:36\n\
    Stack trace:\n#0 /tmp/tmpufqtkauv.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpufqtkauv.php\
    \ on line 36\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n    $even\
    \ = 0;\n    $odd = 0;\n    $num = abs($num);\n    while ($num > 0) {\n       \
    \ $digit = $num % 10;\n        if ($digit % 2 == 0) {\n            $even++;\n\
    \        } else {\n            $odd++;\n        }\n        $num = floor($num /\
    \ 10);\n    }\n    return array($even, $odd);\n}\n\nfunction candidate(...$args)\
    \ {\n    return even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(7) !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmptjc67u_c.php:34\n\
    Stack trace:\n#0 /tmp/tmptjc67u_c.php(37): test()\n#1 {main}\n  thrown in /tmp/tmptjc67u_c.php\
    \ on line 34\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n    $even\
    \ = 0;\n    $odd = 0;\n    $num = abs($num);\n    while ($num > 0) {\n       \
    \ $digit = $num % 10;\n        if ($digit % 2 == 0) {\n            $even++;\n\
    \        } else {\n            $odd++;\n        }\n        $num = floor($num /\
    \ 10);\n    }\n    return array($even, $odd);\n}\n\nfunction candidate(...$args)\
    \ {\n    return even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(7) !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp27zj0sam.php:34\n\
    Stack trace:\n#0 /tmp/tmp27zj0sam.php(37): test()\n#1 {main}\n  thrown in /tmp/tmp27zj0sam.php\
    \ on line 34\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n    $even\
    \ = 0;\n    $odd = 0;\n    $num = abs($num);\n    while ($num > 0) {\n       \
    \ $digit = $num % 10;\n        if ($digit % 2 == 0) {\n            $even++;\n\
    \        } else {\n            $odd++;\n        }\n        $num = floor($num /\
    \ 10);\n    }\n    return array($even, $odd);\n}\n\nfunction candidate(...$args)\
    \ {\n    return even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(7) !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpa0d6ubhk.php:34\n\
    Stack trace:\n#0 /tmp/tmpa0d6ubhk.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpa0d6ubhk.php\
    \ on line 34\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n    $even\
    \ = 0;\n    $odd = 0;\n    $num = abs($num);\n    while ($num > 0) {\n       \
    \ $digit = $num % 10;\n        if ($digit % 2 == 0) {\n            $even++;\n\
    \        } else {\n            $odd++;\n        }\n        $num = floor($num /\
    \ 10);\n    }\n    return [$even, $odd];\n}\n\nfunction candidate(...$args) {\n\
    \    return even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if (candidate(7)\
    \ !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-78)\
    \ !== array(1, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3452)\
    \ !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211)\
    \ !== array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821)\
    \ !== array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp010z7ud1.php:34\n\
    Stack trace:\n#0 /tmp/tmp010z7ud1.php(37): test()\n#1 {main}\n  thrown in /tmp/tmp010z7ud1.php\
    \ on line 34\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n    $even\
    \ = 0;\n    $odd = 0;\n    $num = abs($num);\n    while ($num > 0) {\n       \
    \ $digit = $num % 10;\n        if ($digit % 2 == 0) {\n            $even++;\n\
    \        } else {\n            $odd++;\n        }\n        $num = floor($num /\
    \ 10);\n    }\n    return array($even, $odd);\n}\n\nfunction candidate(...$args)\
    \ {\n    return even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(7) !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmppn0g1_8q.php:34\n\
    Stack trace:\n#0 /tmp/tmppn0g1_8q.php(37): test()\n#1 {main}\n  thrown in /tmp/tmppn0g1_8q.php\
    \ on line 34\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n    $even\
    \ = 0;\n    $odd = 0;\n    $num = abs($num);\n    while ($num > 0) {\n       \
    \ $digit = $num % 10;\n        if ($digit % 2 == 0) {\n            $even++;\n\
    \        } else {\n            $odd++;\n        }\n        $num = floor($num /\
    \ 10);\n    }\n    return array($even, $odd);\n}\n\nfunction candidate(...$args)\
    \ {\n    return even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(7) !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpfo7suj4a.php:34\n\
    Stack trace:\n#0 /tmp/tmpfo7suj4a.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpfo7suj4a.php\
    \ on line 34\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n    $even\
    \ = 0;\n    $odd = 0;\n    $num = abs($num);\n    while ($num > 0) {\n       \
    \ $digit = $num % 10;\n        if ($digit % 2 == 0) {\n            $even++;\n\
    \        } else {\n            $odd++;\n        }\n        $num = floor($num /\
    \ 10);\n    }\n    return array($even, $odd);\n}\n\nfunction candidate(...$args)\
    \ {\n    return even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(7) !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpi7bc_82m.php:34\n\
    Stack trace:\n#0 /tmp/tmpi7bc_82m.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpi7bc_82m.php\
    \ on line 34\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n    $even\
    \ = 0;\n    $odd = 0;\n    $num = abs($num);\n    while ($num > 0) {\n       \
    \ $digit = $num % 10;\n        if ($digit % 2 == 0) {\n            $even++;\n\
    \        } else {\n            $odd++;\n        }\n        $num = floor($num /\
    \ 10);\n    }\n    return [$even, $odd];\n}\n\nfunction candidate(...$args) {\n\
    \    return even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if (candidate(7)\
    \ !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-78)\
    \ !== array(1, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3452)\
    \ !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211)\
    \ !== array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821)\
    \ !== array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpvu29ayc4.php:34\n\
    Stack trace:\n#0 /tmp/tmpvu29ayc4.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpvu29ayc4.php\
    \ on line 34\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n    $even\
    \ = 0;\n    $odd = 0;\n    $num = abs($num);\n    $num = (string)$num;\n    for\
    \ ($i = 0; $i < strlen($num); $i++) {\n        if ($num[$i] % 2 == 0) {\n    \
    \        $even++;\n        } else {\n            $odd++;\n        }\n    }\n \
    \   return [$even, $odd];\n}\n\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(3452) !== array(2, 2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211) !== array(3,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821) !==\
    \ array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n    $even\
    \ = 0;\n    $odd = 0;\n    $num = abs($num);\n    while ($num > 0) {\n       \
    \ $digit = $num % 10;\n        if ($digit % 2 == 0) {\n            $even++;\n\
    \        } else {\n            $odd++;\n        }\n        $num = floor($num /\
    \ 10);\n    }\n    return array($even, $odd);\n}\n\nfunction candidate(...$args)\
    \ {\n    return even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(7) !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpoffencoo.php:34\n\
    Stack trace:\n#0 /tmp/tmpoffencoo.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpoffencoo.php\
    \ on line 34\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n    $even\
    \ = 0;\n    $odd = 0;\n    $num = abs($num);\n    while ($num > 0) {\n       \
    \ $digit = $num % 10;\n        if ($digit % 2 == 0) {\n            $even++;\n\
    \        } else {\n            $odd++;\n        }\n        $num = floor($num /\
    \ 10);\n    }\n    return [$even, $odd];\n}\n\nfunction candidate(...$args) {\n\
    \    return even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if (candidate(7)\
    \ !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-78)\
    \ !== array(1, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3452)\
    \ !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211)\
    \ !== array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821)\
    \ !== array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpkbj_yz8t.php:34\n\
    Stack trace:\n#0 /tmp/tmpkbj_yz8t.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpkbj_yz8t.php\
    \ on line 34\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n    $even\
    \ = 0;\n    $odd = 0;\n    $num = abs($num);\n    while ($num > 0) {\n       \
    \ $digit = $num % 10;\n        if ($digit % 2 == 0) {\n            $even++;\n\
    \        } else {\n            $odd++;\n        }\n        $num = floor($num /\
    \ 10);\n    }\n    return array($even, $odd);\n}\n\nfunction candidate(...$args)\
    \ {\n    return even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(7) !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp9dbmbetf.php:34\n\
    Stack trace:\n#0 /tmp/tmp9dbmbetf.php(37): test()\n#1 {main}\n  thrown in /tmp/tmp9dbmbetf.php\
    \ on line 34\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n    $even\
    \ = 0;\n    $odd = 0;\n    $num = abs($num);\n    while ($num > 0) {\n       \
    \ $digit = $num % 10;\n        if ($digit % 2 == 0) {\n            $even++;\n\
    \        } else {\n            $odd++;\n        }\n        $num = floor($num /\
    \ 10);\n    }\n    return array($even, $odd);\n}\n\nfunction candidate(...$args)\
    \ {\n    return even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(7) !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpbbjhjzrh.php:34\n\
    Stack trace:\n#0 /tmp/tmpbbjhjzrh.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpbbjhjzrh.php\
    \ on line 34\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n    $even\
    \ = 0;\n    $odd = 0;\n    $num = abs($num);\n    while ($num > 0) {\n       \
    \ $digit = $num % 10;\n        if ($digit % 2 == 0) {\n            $even++;\n\
    \        } else {\n            $odd++;\n        }\n        $num = floor($num /\
    \ 10);\n    }\n    return array($even, $odd);\n}\n\nfunction candidate(...$args)\
    \ {\n    return even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(7) !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpihmwliz1.php:34\n\
    Stack trace:\n#0 /tmp/tmpihmwliz1.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpihmwliz1.php\
    \ on line 34\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n    $even\
    \ = 0;\n    $odd = 0;\n    $num = abs($num);\n    while ($num > 0) {\n       \
    \ $digit = $num % 10;\n        if ($digit % 2 == 0) {\n            $even++;\n\
    \        } else {\n            $odd++;\n        }\n        $num = (int)($num /\
    \ 10);\n    }\n    return [$even, $odd];\n}\necho \"even_odd_count(-12) ==> \"\
    ;\nvar_dump(even_odd_count(-12));\necho \"even_odd_count(123) ==> \";\nvar_dump(even_odd_count(123));\n\
    function candidate(...$args) {\n    return even_odd_count(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "even_odd_count(-12) ==> array(2) {\n  [0]=>\n  int(1)\n  [1]=>\n  int(1)\n\
    }\neven_odd_count(123) ==> array(2) {\n  [0]=>\n  int(1)\n  [1]=>\n  int(2)\n\
    }\n"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp17l72w_3.php:37\n\
    Stack trace:\n#0 /tmp/tmp17l72w_3.php(40): test()\n#1 {main}\n  thrown in /tmp/tmp17l72w_3.php\
    \ on line 37\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n    $even\
    \ = 0;\n    $odd = 0;\n    $num = abs($num);\n    while ($num > 0) {\n       \
    \ $digit = $num % 10;\n        if ($digit % 2 == 0) {\n            $even++;\n\
    \        } else {\n            $odd++;\n        }\n        $num = floor($num /\
    \ 10);\n    }\n    return [$even, $odd];\n}\n\nfunction candidate(...$args) {\n\
    \    return even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if (candidate(7)\
    \ !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-78)\
    \ !== array(1, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3452)\
    \ !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211)\
    \ !== array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821)\
    \ !== array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpu2hnt4ah.php:34\n\
    Stack trace:\n#0 /tmp/tmpu2hnt4ah.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpu2hnt4ah.php\
    \ on line 34\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n    $even\
    \ = 0;\n    $odd = 0;\n    $num = abs($num);\n    while ($num > 0) {\n       \
    \ $digit = $num % 10;\n        if ($digit % 2 == 0) {\n            $even++;\n\
    \        } else {\n            $odd++;\n        }\n        $num = floor($num /\
    \ 10);\n    }\n    return array($even, $odd);\n}\n\nfunction candidate(...$args)\
    \ {\n    return even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(7) !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpat1hmncr.php:34\n\
    Stack trace:\n#0 /tmp/tmpat1hmncr.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpat1hmncr.php\
    \ on line 34\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n    $even\
    \ = 0;\n    $odd = 0;\n    $num = abs($num);\n    while ($num > 0) {\n       \
    \ $digit = $num % 10;\n        if ($digit % 2 == 0) {\n            $even++;\n\
    \        } else {\n            $odd++;\n        }\n        $num = floor($num /\
    \ 10);\n    }\n    return array($even, $odd);\n}\n\nfunction candidate(...$args)\
    \ {\n    return even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(7) !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpynxbo4zh.php:34\n\
    Stack trace:\n#0 /tmp/tmpynxbo4zh.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpynxbo4zh.php\
    \ on line 34\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n    $even\
    \ = 0;\n    $odd = 0;\n    $num = abs($num);\n    while ($num > 0) {\n       \
    \ $digit = $num % 10;\n        if ($digit % 2 == 0) {\n            $even++;\n\
    \        } else {\n            $odd++;\n        }\n        $num = floor($num /\
    \ 10);\n    }\n    return array($even, $odd);\n}\n\nfunction candidate(...$args)\
    \ {\n    return even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(7) !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp1157x6cd.php:34\n\
    Stack trace:\n#0 /tmp/tmp1157x6cd.php(37): test()\n#1 {main}\n  thrown in /tmp/tmp1157x6cd.php\
    \ on line 34\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n    $even\
    \ = 0;\n    $odd = 0;\n    $num = abs($num);\n    while ($num > 0) {\n       \
    \ $remainder = $num % 10;\n        if ($remainder % 2 == 0) {\n            $even++;\n\
    \        } else {\n            $odd++;\n        }\n        $num = floor($num /\
    \ 10);\n    }\n    return array($even, $odd);\n}\necho '<pre>';\nprint_r(even_odd_count(-12));\n\
    echo '</pre>';\n\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(3452) !== array(2, 2))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211) !== array(3,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821) !==\
    \ array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "<pre>Array\n(\n    [0] => 1\n    [1] => 1\n)\n</pre>"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpbn8k2ae7.php:37\n\
    Stack trace:\n#0 /tmp/tmpbn8k2ae7.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpbn8k2ae7.php\
    \ on line 37\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n    $even\
    \ = 0;\n    $odd = 0;\n    $num = abs($num);\n    while ($num > 0) {\n       \
    \ $digit = $num % 10;\n        if ($digit % 2 == 0) {\n            $even++;\n\
    \        } else {\n            $odd++;\n        }\n        $num = floor($num /\
    \ 10);\n    }\n    return array($even, $odd);\n}\n\nfunction candidate(...$args)\
    \ {\n    return even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(7) !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpmczrxvol.php:34\n\
    Stack trace:\n#0 /tmp/tmpmczrxvol.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpmczrxvol.php\
    \ on line 34\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n    $even\
    \ = 0;\n    $odd = 0;\n    $num = abs($num);\n    while ($num > 0) {\n       \
    \ $digit = $num % 10;\n        if ($digit % 2 == 0) {\n            $even++;\n\
    \        } else {\n            $odd++;\n        }\n        $num = floor($num /\
    \ 10);\n    }\n    return [$even, $odd];\n}\n\nfunction candidate(...$args) {\n\
    \    return even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if (candidate(7)\
    \ !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-78)\
    \ !== array(1, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3452)\
    \ !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211)\
    \ !== array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821)\
    \ !== array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpwwzltdsf.php:34\n\
    Stack trace:\n#0 /tmp/tmpwwzltdsf.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpwwzltdsf.php\
    \ on line 34\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n  $even =\
    \ 0;\n  $odd = 0;\n  $num = abs($num);\n  while ($num > 0) {\n    $digit = $num\
    \ % 10;\n    if ($digit % 2 == 0) {\n      $even++;\n    } else {\n      $odd++;\n\
    \    }\n    $num = floor($num / 10);\n  }\n  return [$even, $odd];\n}\n\nfunction\
    \ candidate(...$args) {\n    return even_odd_count(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(7) !== array(0, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpr35e2wd3.php:34\n\
    Stack trace:\n#0 /tmp/tmpr35e2wd3.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpr35e2wd3.php\
    \ on line 34\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n  $even =\
    \ 0;\n  $odd = 0;\n  $num = abs($num);\n  while ($num > 0) {\n    $digit = $num\
    \ % 10;\n    if ($digit % 2 == 0) {\n      $even++;\n    } else {\n      $odd++;\n\
    \    }\n    $num = floor($num / 10);\n  }\n  return array($even, $odd);\n}\n\n\
    function candidate(...$args) {\n    return even_odd_count(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpkqfvmkfb.php:34\n\
    Stack trace:\n#0 /tmp/tmpkqfvmkfb.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpkqfvmkfb.php\
    \ on line 34\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n    $even\
    \ = 0;\n    $odd = 0;\n    $num = abs($num);\n    while ($num > 0) {\n       \
    \ $digit = $num % 10;\n        if ($digit % 2 == 0) {\n            $even++;\n\
    \        } else {\n            $odd++;\n        }\n        $num = floor($num /\
    \ 10);\n    }\n    return array($even, $odd);\n}\n\nfunction candidate(...$args)\
    \ {\n    return even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(7) !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpr_ew6aj5.php:34\n\
    Stack trace:\n#0 /tmp/tmpr_ew6aj5.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpr_ew6aj5.php\
    \ on line 34\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n    $even\
    \ = 0;\n    $odd = 0;\n    $num = abs($num);\n    while ($num > 0) {\n       \
    \ $lastDigit = $num % 10;\n        if ($lastDigit % 2 == 0) {\n            $even++;\n\
    \        } else {\n            $odd++;\n        }\n        $num = floor($num /\
    \ 10);\n    }\n    return [$even, $odd];\n}\n\nfunction candidate(...$args) {\n\
    \    return even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if (candidate(7)\
    \ !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-78)\
    \ !== array(1, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3452)\
    \ !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211)\
    \ !== array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821)\
    \ !== array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpp4cix2oi.php:34\n\
    Stack trace:\n#0 /tmp/tmpp4cix2oi.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpp4cix2oi.php\
    \ on line 34\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n    $even\
    \ = 0;\n    $odd = 0;\n    $num = abs($num);\n    while ($num > 0) {\n       \
    \ $remainder = $num % 10;\n        if ($remainder % 2 == 0) {\n            $even++;\n\
    \        } else {\n            $odd++;\n        }\n        $num = floor($num /\
    \ 10);\n    }\n    return array($even, $odd);\n}\n\nfunction candidate(...$args)\
    \ {\n    return even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(7) !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp2juapthw.php:34\n\
    Stack trace:\n#0 /tmp/tmp2juapthw.php(37): test()\n#1 {main}\n  thrown in /tmp/tmp2juapthw.php\
    \ on line 34\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n    $even\
    \ = 0;\n    $odd = 0;\n    $num = abs($num);\n    while ($num > 0) {\n       \
    \ $digit = $num % 10;\n        if ($digit % 2 == 0) {\n            $even++;\n\
    \        } else {\n            $odd++;\n        }\n        $num = (int)($num /\
    \ 10);\n    }\n    return [$even, $odd];\n}\n\nfunction candidate(...$args) {\n\
    \    return even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if (candidate(7)\
    \ !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-78)\
    \ !== array(1, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3452)\
    \ !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211)\
    \ !== array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821)\
    \ !== array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpf35iss0a.php:34\n\
    Stack trace:\n#0 /tmp/tmpf35iss0a.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpf35iss0a.php\
    \ on line 34\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n    $even\
    \ = 0;\n    $odd = 0;\n    $num = abs($num);\n    while ($num > 0) {\n       \
    \ $digit = $num % 10;\n        if ($digit % 2 == 0) {\n            $even++;\n\
    \        } else {\n            $odd++;\n        }\n        $num = floor($num /\
    \ 10);\n    }\n    return array($even, $odd);\n}\n\nfunction candidate(...$args)\
    \ {\n    return even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(7) !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpyl2ddr3s.php:34\n\
    Stack trace:\n#0 /tmp/tmpyl2ddr3s.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpyl2ddr3s.php\
    \ on line 34\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n    $even\
    \ = 0;\n    $odd = 0;\n    $num = abs($num);\n    while ($num > 0) {\n       \
    \ $digit = $num % 10;\n        if ($digit % 2 == 0) {\n            $even++;\n\
    \        } else {\n            $odd++;\n        }\n        $num = floor($num /\
    \ 10);\n    }\n    return [$even, $odd];\n}\n\nfunction candidate(...$args) {\n\
    \    return even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if (candidate(7)\
    \ !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-78)\
    \ !== array(1, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3452)\
    \ !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211)\
    \ !== array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821)\
    \ !== array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpv9gpy9i8.php:34\n\
    Stack trace:\n#0 /tmp/tmpv9gpy9i8.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpv9gpy9i8.php\
    \ on line 34\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n    $even\
    \ = 0;\n    $odd = 0;\n    $num = abs($num);\n    while ($num > 0) {\n       \
    \ $remainder = $num % 10;\n        if ($remainder % 2 == 0) {\n            $even++;\n\
    \        } else {\n            $odd++;\n        }\n        $num = floor($num /\
    \ 10);\n    }\n    return array($even, $odd);\n}\n\nfunction candidate(...$args)\
    \ {\n    return even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(7) !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpmx0mtzeq.php:34\n\
    Stack trace:\n#0 /tmp/tmpmx0mtzeq.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpmx0mtzeq.php\
    \ on line 34\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n  $even =\
    \ 0;\n  $odd = 0;\n  $num = abs($num);\n  while ($num > 0) {\n    $digit = $num\
    \ % 10;\n    if ($digit % 2 == 0) {\n      $even++;\n    } else {\n      $odd++;\n\
    \    }\n    $num = floor($num / 10);\n  }\n  return [$even, $odd];\n}\n\nfunction\
    \ candidate(...$args) {\n    return even_odd_count(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(7) !== array(0, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp9liu_tjd.php:34\n\
    Stack trace:\n#0 /tmp/tmp9liu_tjd.php(37): test()\n#1 {main}\n  thrown in /tmp/tmp9liu_tjd.php\
    \ on line 34\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n    $even\
    \ = 0;\n    $odd = 0;\n    $num = abs($num);\n    while ($num > 0) {\n       \
    \ $digit = $num % 10;\n        if ($digit % 2 == 0) {\n            $even++;\n\
    \        } else {\n            $odd++;\n        }\n        $num = floor($num /\
    \ 10);\n    }\n    return array($even, $odd);\n}\n\nfunction candidate(...$args)\
    \ {\n    return even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(7) !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmppw16mfyb.php:34\n\
    Stack trace:\n#0 /tmp/tmppw16mfyb.php(37): test()\n#1 {main}\n  thrown in /tmp/tmppw16mfyb.php\
    \ on line 34\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n    $even\
    \ = 0;\n    $odd = 0;\n    $num = abs($num);\n    while ($num > 0) {\n       \
    \ $digit = $num % 10;\n        if ($digit % 2 == 0) {\n            $even++;\n\
    \        } else {\n            $odd++;\n        }\n        $num = floor($num /\
    \ 10);\n    }\n    return [$even, $odd];\n}\n\nfunction candidate(...$args) {\n\
    \    return even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if (candidate(7)\
    \ !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-78)\
    \ !== array(1, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3452)\
    \ !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211)\
    \ !== array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821)\
    \ !== array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmptgtddkqq.php:34\n\
    Stack trace:\n#0 /tmp/tmptgtddkqq.php(37): test()\n#1 {main}\n  thrown in /tmp/tmptgtddkqq.php\
    \ on line 34\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n    $even\
    \ = 0;\n    $odd = 0;\n    $num = abs($num);\n    while ($num > 0) {\n       \
    \ $digit = $num % 10;\n        if ($digit % 2 == 0) {\n            $even++;\n\
    \        } else {\n            $odd++;\n        }\n        $num = floor($num /\
    \ 10);\n    }\n    return [$even, $odd];\n}\n\nfunction candidate(...$args) {\n\
    \    return even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if (candidate(7)\
    \ !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-78)\
    \ !== array(1, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3452)\
    \ !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211)\
    \ !== array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821)\
    \ !== array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmprwo3zq1d.php:34\n\
    Stack trace:\n#0 /tmp/tmprwo3zq1d.php(37): test()\n#1 {main}\n  thrown in /tmp/tmprwo3zq1d.php\
    \ on line 34\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n    $even\
    \ = 0;\n    $odd = 0;\n    $num = abs($num);\n    while ($num > 0) {\n       \
    \ $digit = $num % 10;\n        if ($digit % 2 == 0) {\n            $even++;\n\
    \        } else {\n            $odd++;\n        }\n        $num = floor($num /\
    \ 10);\n    }\n    return array($even, $odd);\n}\n\nfunction candidate(...$args)\
    \ {\n    return even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(7) !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp8dqp27uw.php:34\n\
    Stack trace:\n#0 /tmp/tmp8dqp27uw.php(37): test()\n#1 {main}\n  thrown in /tmp/tmp8dqp27uw.php\
    \ on line 34\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n  $even =\
    \ 0;\n  $odd = 0;\n  $num = abs($num);\n  while ($num > 0) {\n    $digit = $num\
    \ % 10;\n    if ($digit % 2 == 0) {\n      $even++;\n    } else {\n      $odd++;\n\
    \    }\n    $num = floor($num / 10);\n  }\n  return array($even, $odd);\n}\n\n\
    function candidate(...$args) {\n    return even_odd_count(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpq2f2xbw8.php:34\n\
    Stack trace:\n#0 /tmp/tmpq2f2xbw8.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpq2f2xbw8.php\
    \ on line 34\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n    $even\
    \ = 0;\n    $odd = 0;\n    $num = abs($num);\n    while ($num > 0) {\n       \
    \ $digit = $num % 10;\n        if ($digit % 2 == 0) {\n            $even++;\n\
    \        } else {\n            $odd++;\n        }\n        $num = floor($num /\
    \ 10);\n    }\n    return [$even, $odd];\n}\n\nfunction candidate(...$args) {\n\
    \    return even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if (candidate(7)\
    \ !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-78)\
    \ !== array(1, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3452)\
    \ !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211)\
    \ !== array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821)\
    \ !== array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpx9yccavv.php:34\n\
    Stack trace:\n#0 /tmp/tmpx9yccavv.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpx9yccavv.php\
    \ on line 34\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n    $even\
    \ = 0;\n    $odd = 0;\n    $num = abs($num);\n    while ($num > 0) {\n       \
    \ $digit = $num % 10;\n        if ($digit % 2 == 0) {\n            $even++;\n\
    \        } else {\n            $odd++;\n        }\n        $num = floor($num /\
    \ 10);\n    }\n    return array($even, $odd);\n}\necho \"<pre>\";\nprint_r(even_odd_count(-12));\n\
    echo \"</pre>\";\n\necho \"<pre>\";\nprint_r(even_odd_count(123));\necho \"</pre>\"\
    ;\n\nfunction candidate(...$args) {\n    return even_odd_count(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "<pre>Array\n(\n    [0] => 1\n    [1] => 1\n)\n</pre><pre>Array\n(\n   \
    \ [0] => 1\n    [1] => 2\n)\n</pre>"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpqc34z53u.php:41\n\
    Stack trace:\n#0 /tmp/tmpqc34z53u.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpqc34z53u.php\
    \ on line 41\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n    $even\
    \ = 0;\n    $odd = 0;\n    $num = abs($num);\n    while ($num > 0) {\n       \
    \ $digit = $num % 10;\n        if ($digit % 2 == 0) {\n            $even++;\n\
    \        } else {\n            $odd++;\n        }\n        $num = floor($num /\
    \ 10);\n    }\n    return [$even, $odd];\n}\n\nfunction candidate(...$args) {\n\
    \    return even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if (candidate(7)\
    \ !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-78)\
    \ !== array(1, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3452)\
    \ !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211)\
    \ !== array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821)\
    \ !== array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpbc0pf3xr.php:34\n\
    Stack trace:\n#0 /tmp/tmpbc0pf3xr.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpbc0pf3xr.php\
    \ on line 34\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n    $even\
    \ = 0;\n    $odd = 0;\n    $num = abs($num);\n    while ($num > 0) {\n       \
    \ $digit = $num % 10;\n        if ($digit % 2 == 0) {\n            $even++;\n\
    \        } else {\n            $odd++;\n        }\n        $num = floor($num /\
    \ 10);\n    }\n    return [$even, $odd];\n}\n\nfunction candidate(...$args) {\n\
    \    return even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if (candidate(7)\
    \ !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-78)\
    \ !== array(1, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3452)\
    \ !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211)\
    \ !== array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821)\
    \ !== array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpk0qphks2.php:34\n\
    Stack trace:\n#0 /tmp/tmpk0qphks2.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpk0qphks2.php\
    \ on line 34\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n  $even =\
    \ 0;\n  $odd = 0;\n  $num = abs($num);\n  while ($num > 0) {\n    $digit = $num\
    \ % 10;\n    if ($digit % 2 == 0) {\n      $even++;\n    } else {\n      $odd++;\n\
    \    }\n    $num = floor($num / 10);\n  }\n  return array($even, $odd);\n}\n\n\
    echo \"even_odd_count(-12) ==> \";\nvar_dump(even_odd_count(-12));\necho \"even_odd_count(123)\
    \ ==> \";\nvar_dump(even_odd_count(123));\nfunction candidate(...$args) {\n  \
    \  return even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if (candidate(7)\
    \ !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-78)\
    \ !== array(1, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3452)\
    \ !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211)\
    \ !== array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821)\
    \ !== array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "even_odd_count(-12) ==> array(2) {\n  [0]=>\n  int(1)\n  [1]=>\n  int(1)\n\
    }\neven_odd_count(123) ==> array(2) {\n  [0]=>\n  int(1)\n  [1]=>\n  int(2)\n\
    }\n"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpmm7q7pdd.php:38\n\
    Stack trace:\n#0 /tmp/tmpmm7q7pdd.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpmm7q7pdd.php\
    \ on line 38\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n    $even\
    \ = 0;\n    $odd = 0;\n    $num = abs($num);\n    while ($num > 0) {\n       \
    \ $digit = $num % 10;\n        if ($digit % 2 == 0) {\n            $even++;\n\
    \        } else {\n            $odd++;\n        }\n        $num = floor($num /\
    \ 10);\n    }\n    return array($even, $odd);\n}\n\nfunction candidate(...$args)\
    \ {\n    return even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(7) !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp5yhiq483.php:34\n\
    Stack trace:\n#0 /tmp/tmp5yhiq483.php(37): test()\n#1 {main}\n  thrown in /tmp/tmp5yhiq483.php\
    \ on line 34\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n    $even\
    \ = 0;\n    $odd = 0;\n    $num = abs($num);\n    while ($num > 0) {\n       \
    \ $digit = $num % 10;\n        if ($digit % 2 == 0) {\n            $even++;\n\
    \        } else {\n            $odd++;\n        }\n        $num = floor($num /\
    \ 10);\n    }\n    return array($even, $odd);\n}\n\nfunction candidate(...$args)\
    \ {\n    return even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(7) !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpcc2kmfhu.php:34\n\
    Stack trace:\n#0 /tmp/tmpcc2kmfhu.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpcc2kmfhu.php\
    \ on line 34\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n    $even\
    \ = 0;\n    $odd = 0;\n    $num = abs($num);\n    while ($num > 0) {\n       \
    \ $digit = $num % 10;\n        if ($digit % 2 == 0) {\n            $even++;\n\
    \        } else {\n            $odd++;\n        }\n        $num = (int)($num /\
    \ 10);\n    }\n    return array($even, $odd);\n}\n\nfunction candidate(...$args)\
    \ {\n    return even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(7) !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmprv1x8hqt.php:34\n\
    Stack trace:\n#0 /tmp/tmprv1x8hqt.php(37): test()\n#1 {main}\n  thrown in /tmp/tmprv1x8hqt.php\
    \ on line 34\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n    $even\
    \ = 0;\n    $odd = 0;\n    $num = abs($num);\n    while ($num > 0) {\n       \
    \ $digit = $num % 10;\n        if ($digit % 2 == 0) {\n            $even++;\n\
    \        } else {\n            $odd++;\n        }\n        $num = floor($num /\
    \ 10);\n    }\n    return array($even, $odd);\n}\n\nfunction candidate(...$args)\
    \ {\n    return even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(7) !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp515z180a.php:34\n\
    Stack trace:\n#0 /tmp/tmp515z180a.php(37): test()\n#1 {main}\n  thrown in /tmp/tmp515z180a.php\
    \ on line 34\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n    $even\
    \ = 0;\n    $odd = 0;\n    $num = abs($num);\n    while ($num > 0) {\n       \
    \ $digit = $num % 10;\n        if ($digit % 2 == 0) {\n            $even++;\n\
    \        } else {\n            $odd++;\n        }\n        $num = floor($num /\
    \ 10);\n    }\n    return array($even, $odd);\n}\n\nfunction candidate(...$args)\
    \ {\n    return even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(7) !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmptv17lu0j.php:34\n\
    Stack trace:\n#0 /tmp/tmptv17lu0j.php(37): test()\n#1 {main}\n  thrown in /tmp/tmptv17lu0j.php\
    \ on line 34\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n    $even\
    \ = 0;\n    $odd = 0;\n    $num = abs($num);\n    while ($num > 0) {\n       \
    \ $digit = $num % 10;\n        if ($digit % 2 == 0) {\n            $even++;\n\
    \        } else {\n            $odd++;\n        }\n        $num = floor($num /\
    \ 10);\n    }\n    return array($even, $odd);\n}\n\nfunction candidate(...$args)\
    \ {\n    return even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(7) !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpak41ftss.php:34\n\
    Stack trace:\n#0 /tmp/tmpak41ftss.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpak41ftss.php\
    \ on line 34\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n    $even\
    \ = 0;\n    $odd = 0;\n    $num = abs($num);\n    while ($num > 0) {\n       \
    \ $digit = $num % 10;\n        if ($digit % 2 == 0) {\n            $even++;\n\
    \        } else {\n            $odd++;\n        }\n        $num = floor($num /\
    \ 10);\n    }\n    return array($even, $odd);\n}\n\nfunction candidate(...$args)\
    \ {\n    return even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(7) !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp5pbh1gge.php:34\n\
    Stack trace:\n#0 /tmp/tmp5pbh1gge.php(37): test()\n#1 {main}\n  thrown in /tmp/tmp5pbh1gge.php\
    \ on line 34\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n  $even =\
    \ 0;\n  $odd = 0;\n  $num = abs($num);\n  while ($num > 0) {\n    $digit = $num\
    \ % 10;\n    if ($digit % 2 == 0) {\n      $even++;\n    } else {\n      $odd++;\n\
    \    }\n    $num = floor($num / 10);\n  }\n  return array($even, $odd);\n}\n\n\
    echo \"even_odd_count(-12) ==> \";\nvar_dump(even_odd_count(-12));\necho \"even_odd_count(123)\
    \ ==> \";\nvar_dump(even_odd_count(123));\nfunction candidate(...$args) {\n  \
    \  return even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if (candidate(7)\
    \ !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-78)\
    \ !== array(1, 1)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3452)\
    \ !== array(2, 2)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(346211)\
    \ !== array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-345821)\
    \ !== array(3, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-2)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-45347)\
    \ !== array(2, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0)\
    \ !== array(1, 0)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "even_odd_count(-12) ==> array(2) {\n  [0]=>\n  int(1)\n  [1]=>\n  int(1)\n\
    }\neven_odd_count(123) ==> array(2) {\n  [0]=>\n  int(1)\n  [1]=>\n  int(2)\n\
    }\n"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpr45ikt7l.php:38\n\
    Stack trace:\n#0 /tmp/tmpr45ikt7l.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpr45ikt7l.php\
    \ on line 38\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n  $even =\
    \ 0;\n  $odd = 0;\n  $num = abs($num);\n  while ($num > 0) {\n    $digit = $num\
    \ % 10;\n    if ($digit % 2 == 0) {\n      $even++;\n    } else {\n      $odd++;\n\
    \    }\n    $num = floor($num / 10);\n  }\n  return array($even, $odd);\n}\n\n\
    function candidate(...$args) {\n    return even_odd_count(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpbaa3jr92.php:34\n\
    Stack trace:\n#0 /tmp/tmpbaa3jr92.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpbaa3jr92.php\
    \ on line 34\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n  $even =\
    \ 0;\n  $odd = 0;\n  $num = abs($num);\n  while ($num > 0) {\n    $digit = $num\
    \ % 10;\n    if ($digit % 2 == 0) {\n      $even++;\n    } else {\n      $odd++;\n\
    \    }\n    $num = floor($num / 10);\n  }\n  return array($even, $odd);\n}\n\n\
    function candidate(...$args) {\n    return even_odd_count(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpmbh1jw6k.php:34\n\
    Stack trace:\n#0 /tmp/tmpmbh1jw6k.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpmbh1jw6k.php\
    \ on line 34\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n  $even =\
    \ 0;\n  $odd = 0;\n  $num = abs($num);\n  while ($num > 0) {\n    $digit = $num\
    \ % 10;\n    if ($digit % 2 == 0) {\n      $even++;\n    } else {\n      $odd++;\n\
    \    }\n    $num = floor($num / 10);\n  }\n  return array($even, $odd);\n}\n\n\
    function candidate(...$args) {\n    return even_odd_count(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpp8kyfhap.php:34\n\
    Stack trace:\n#0 /tmp/tmpp8kyfhap.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpp8kyfhap.php\
    \ on line 34\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n    $even\
    \ = 0;\n    $odd = 0;\n    $num = abs($num);\n    while ($num > 0) {\n       \
    \ $digit = $num % 10;\n        if ($digit % 2 == 0) {\n            $even++;\n\
    \        } else {\n            $odd++;\n        }\n        $num = floor($num /\
    \ 10);\n    }\n    return array($even, $odd);\n}\n\nfunction candidate(...$args)\
    \ {\n    return even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(7) !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpesrbde5x.php:34\n\
    Stack trace:\n#0 /tmp/tmpesrbde5x.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpesrbde5x.php\
    \ on line 34\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given an integer. return a tuple that has the number of even\
    \ and odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n\
    // even_odd_count(123) ==> (1, 2)\nfunction even_odd_count($num) {\n    $even\
    \ = 0;\n    $odd = 0;\n    $num = abs($num);\n    while ($num > 0) {\n       \
    \ $digit = $num % 10;\n        if ($digit % 2 == 0) {\n            $even++;\n\
    \        } else {\n            $odd++;\n        }\n        $num = floor($num /\
    \ 10);\n    }\n    return array($even, $odd);\n}\n\nfunction candidate(...$args)\
    \ {\n    return even_odd_count(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(7) !== array(0, 1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp97_hdu_s.php:34\n\
    Stack trace:\n#0 /tmp/tmp97_hdu_s.php(37): test()\n#1 {main}\n  thrown in /tmp/tmp97_hdu_s.php\
    \ on line 34\n"
  exit_code: 255
  status: Exception

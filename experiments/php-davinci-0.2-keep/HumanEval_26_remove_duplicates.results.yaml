name: HumanEval_26_remove_duplicates
language: php
results:
- program: "<?php\n// From a list of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\n// >>>\
    \ remove_duplicates([1, 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates($numbers)\
    \ {\n    $result = [];\n    $seen = [];\n    foreach ($numbers as $number) {\n\
    \        if (!in_array($number, $seen)) {\n            $result[] = $number;\n\
    \            $seen[] = $number;\n        }\n    }\n    return $result;\n}\n\n\
    function candidate(...$args) {\n    return remove_duplicates(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3,\
    \ 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpwpocjctu.php:25\n\
    Stack trace:\n#0 /tmp/tmpwpocjctu.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpwpocjctu.php\
    \ on line 25\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// From a list of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\n// >>>\
    \ remove_duplicates([1, 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates($numbers)\
    \ {\n    $result = [];\n    foreach ($numbers as $number) {\n        if (!in_array($number,\
    \ $result)) {\n            $result[] = $number;\n        }\n    }\n    return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp8tkfiih1.php:23\n\
    Stack trace:\n#0 /tmp/tmp8tkfiih1.php(26): test()\n#1 {main}\n  thrown in /tmp/tmp8tkfiih1.php\
    \ on line 23\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// From a list of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\n// >>>\
    \ remove_duplicates([1, 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates($numbers)\
    \ {\n    $result = [];\n    foreach ($numbers as $number) {\n        if (!in_array($number,\
    \ $result)) {\n            $result[] = $number;\n        }\n    }\n    return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp_f5uizew.php:23\n\
    Stack trace:\n#0 /tmp/tmp_f5uizew.php(26): test()\n#1 {main}\n  thrown in /tmp/tmp_f5uizew.php\
    \ on line 23\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// From a list of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\n// >>>\
    \ remove_duplicates([1, 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates($numbers)\
    \ {\n    $result = [];\n    foreach ($numbers as $number) {\n        if (!in_array($number,\
    \ $result)) {\n            $result[] = $number;\n        }\n    }\n    return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpeisbvnym.php:23\n\
    Stack trace:\n#0 /tmp/tmpeisbvnym.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpeisbvnym.php\
    \ on line 23\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// From a list of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\n// >>>\
    \ remove_duplicates([1, 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates($numbers)\
    \ {\n    $result = [];\n    $count = count($numbers);\n    for ($i = 0; $i < $count;\
    \ $i++) {\n        $number = $numbers[$i];\n        if (in_array($number, $result))\
    \ {\n            continue;\n        }\n        $result[] = $number;\n    }\n \
    \   return $result;\n}\n\n$numbers = [1, 2, 3, 2, 4];\nvar_dump(remove_duplicates($numbers));\n\
    function candidate(...$args) {\n    return remove_duplicates(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3,\
    \ 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "array(4) {\n  [0]=>\n  int(1)\n  [1]=>\n  int(2)\n  [2]=>\n  int(3)\n \
    \ [3]=>\n  int(4)\n}\n"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpndva9hsd.php:28\n\
    Stack trace:\n#0 /tmp/tmpndva9hsd.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpndva9hsd.php\
    \ on line 28\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// From a list of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\n// >>>\
    \ remove_duplicates([1, 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates($numbers)\
    \ {\n    $result = [];\n    foreach ($numbers as $number) {\n        if (!in_array($number,\
    \ $result)) {\n            $result[] = $number;\n        }\n    }\n    return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpdkw_sk3z.php:23\n\
    Stack trace:\n#0 /tmp/tmpdkw_sk3z.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpdkw_sk3z.php\
    \ on line 23\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// From a list of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\n// >>>\
    \ remove_duplicates([1, 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates($numbers)\
    \ {\n    $result = [];\n    $counts = array_count_values($numbers);\n    foreach\
    \ ($numbers as $number) {\n        if ($counts[$number] == 1) {\n            $result[]\
    \ = $number;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5))\
    \ !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// From a list of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\n// >>>\
    \ remove_duplicates([1, 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates($numbers)\
    \ {\n    $result = [];\n    foreach ($numbers as $number) {\n        if (!in_array($number,\
    \ $result)) {\n            $result[] = $number;\n        }\n    }\n    return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpve2icob_.php:23\n\
    Stack trace:\n#0 /tmp/tmpve2icob_.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpve2icob_.php\
    \ on line 23\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// From a list of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\n// >>>\
    \ remove_duplicates([1, 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates($numbers)\
    \ {\n    $result = [];\n    $unique = [];\n    foreach ($numbers as $number) {\n\
    \        if (!in_array($number, $unique)) {\n            $unique[] = $number;\n\
    \            $result[] = $number;\n        }\n    }\n    return $result;\n}\n\n\
    function candidate(...$args) {\n    return remove_duplicates(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3,\
    \ 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp5_4o4624.php:25\n\
    Stack trace:\n#0 /tmp/tmp5_4o4624.php(28): test()\n#1 {main}\n  thrown in /tmp/tmp5_4o4624.php\
    \ on line 25\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// From a list of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\n// >>>\
    \ remove_duplicates([1, 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates($numbers)\
    \ {\n  $result = [];\n  foreach ($numbers as $number) {\n    if (!in_array($number,\
    \ $result)) {\n      $result[] = $number;\n    }\n  }\n  return $result;\n}\n\n\
    function candidate(...$args) {\n    return remove_duplicates(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3,\
    \ 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmplmssv5q4.php:23\n\
    Stack trace:\n#0 /tmp/tmplmssv5q4.php(26): test()\n#1 {main}\n  thrown in /tmp/tmplmssv5q4.php\
    \ on line 23\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// From a list of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\n// >>>\
    \ remove_duplicates([1, 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates($numbers)\
    \ {\n    $result = [];\n    foreach ($numbers as $number) {\n        if (!in_array($number,\
    \ $result)) {\n            $result[] = $number;\n        }\n    }\n    return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpesa2ek7q.php:23\n\
    Stack trace:\n#0 /tmp/tmpesa2ek7q.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpesa2ek7q.php\
    \ on line 23\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// From a list of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\n// >>>\
    \ remove_duplicates([1, 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates($numbers)\
    \ {\n    $result = [];\n    foreach ($numbers as $number) {\n        if (!in_array($number,\
    \ $result)) {\n            $result[] = $number;\n        }\n    }\n    return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp69op2k6d.php:23\n\
    Stack trace:\n#0 /tmp/tmp69op2k6d.php(26): test()\n#1 {main}\n  thrown in /tmp/tmp69op2k6d.php\
    \ on line 23\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// From a list of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\n// >>>\
    \ remove_duplicates([1, 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates($numbers)\
    \ {\n    $result = [];\n    foreach ($numbers as $number) {\n        if (!in_array($number,\
    \ $result)) {\n            $result[] = $number;\n        }\n    }\n    return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpksbkwl1i.php:23\n\
    Stack trace:\n#0 /tmp/tmpksbkwl1i.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpksbkwl1i.php\
    \ on line 23\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// From a list of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\n// >>>\
    \ remove_duplicates([1, 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates($numbers)\
    \ {\n    $result = [];\n    foreach ($numbers as $number) {\n        if (!in_array($number,\
    \ $result)) {\n            $result[] = $number;\n        }\n    }\n    return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpogbfqm21.php:23\n\
    Stack trace:\n#0 /tmp/tmpogbfqm21.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpogbfqm21.php\
    \ on line 23\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// From a list of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\n// >>>\
    \ remove_duplicates([1, 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates($numbers)\
    \ {\n    $result = [];\n    foreach ($numbers as $number) {\n        if (!in_array($number,\
    \ $result)) {\n            $result[] = $number;\n        }\n    }\n    return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp37tqy20u.php:23\n\
    Stack trace:\n#0 /tmp/tmp37tqy20u.php(26): test()\n#1 {main}\n  thrown in /tmp/tmp37tqy20u.php\
    \ on line 23\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// From a list of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\n// >>>\
    \ remove_duplicates([1, 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates($numbers)\
    \ {\n    $result = [];\n    foreach ($numbers as $number) {\n        if (!in_array($number,\
    \ $result)) {\n            $result[] = $number;\n        }\n    }\n    return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp5pbq154r.php:23\n\
    Stack trace:\n#0 /tmp/tmp5pbq154r.php(26): test()\n#1 {main}\n  thrown in /tmp/tmp5pbq154r.php\
    \ on line 23\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// From a list of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\n// >>>\
    \ remove_duplicates([1, 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates($numbers)\
    \ {\n    $result = [];\n    foreach ($numbers as $number) {\n        if (!in_array($number,\
    \ $result)) {\n            $result[] = $number;\n        }\n    }\n    return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpjoc6hno2.php:23\n\
    Stack trace:\n#0 /tmp/tmpjoc6hno2.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpjoc6hno2.php\
    \ on line 23\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// From a list of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\n// >>>\
    \ remove_duplicates([1, 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates($numbers)\
    \ {\n    $result = [];\n    foreach ($numbers as $number) {\n        if (!in_array($number,\
    \ $result)) {\n            $result[] = $number;\n        }\n    }\n    return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp9i0dvp4o.php:23\n\
    Stack trace:\n#0 /tmp/tmp9i0dvp4o.php(26): test()\n#1 {main}\n  thrown in /tmp/tmp9i0dvp4o.php\
    \ on line 23\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// From a list of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\n// >>>\
    \ remove_duplicates([1, 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates($numbers)\
    \ {\n    $result = [];\n    foreach ($numbers as $number) {\n        if (!in_array($number,\
    \ $result)) {\n            $result[] = $number;\n        }\n    }\n    return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp3fowuq5u.php:23\n\
    Stack trace:\n#0 /tmp/tmp3fowuq5u.php(26): test()\n#1 {main}\n  thrown in /tmp/tmp3fowuq5u.php\
    \ on line 23\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// From a list of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\n// >>>\
    \ remove_duplicates([1, 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates($numbers)\
    \ {\n    $result = [];\n    foreach ($numbers as $number) {\n        if (!in_array($number,\
    \ $result)) {\n            $result[] = $number;\n        }\n    }\n    return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpvnxz9yvo.php:23\n\
    Stack trace:\n#0 /tmp/tmpvnxz9yvo.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpvnxz9yvo.php\
    \ on line 23\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// From a list of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\n// >>>\
    \ remove_duplicates([1, 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates($numbers)\
    \ {\n    $uniques = [];\n    foreach ($numbers as $number) {\n        if (!in_array($number,\
    \ $uniques)) {\n            $uniques[] = $number;\n        }\n    }\n    return\
    \ $uniques;\n}\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp7c3882h6.php:23\n\
    Stack trace:\n#0 /tmp/tmp7c3882h6.php(26): test()\n#1 {main}\n  thrown in /tmp/tmp7c3882h6.php\
    \ on line 23\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// From a list of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\n// >>>\
    \ remove_duplicates([1, 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates($numbers)\
    \ {\n    $result = [];\n    $count = [];\n    foreach ($numbers as $number) {\n\
    \        if (isset($count[$number])) {\n            $count[$number]++;\n     \
    \   } else {\n            $count[$number] = 1;\n        }\n    }\n    foreach\
    \ ($numbers as $number) {\n        if ($count[$number] == 1) {\n            $result[]\
    \ = $number;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5))\
    \ !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// From a list of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\n// >>>\
    \ remove_duplicates([1, 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates($numbers)\
    \ {\n    $unique = [];\n    foreach ($numbers as $number) {\n        if (!in_array($number,\
    \ $unique)) {\n            $unique[] = $number;\n        }\n    }\n    return\
    \ $unique;\n}\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpkqgof1sz.php:23\n\
    Stack trace:\n#0 /tmp/tmpkqgof1sz.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpkqgof1sz.php\
    \ on line 23\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// From a list of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\n// >>>\
    \ remove_duplicates([1, 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates($numbers)\
    \ {\n    $uniques = [];\n    foreach ($numbers as $number) {\n        if (!in_array($number,\
    \ $uniques)) {\n            $uniques[] = $number;\n        }\n    }\n    return\
    \ $uniques;\n}\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpx4tch1p3.php:23\n\
    Stack trace:\n#0 /tmp/tmpx4tch1p3.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpx4tch1p3.php\
    \ on line 23\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// From a list of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\n// >>>\
    \ remove_duplicates([1, 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates($numbers)\
    \ {\n    $result = [];\n    foreach ($numbers as $number) {\n        if (!in_array($number,\
    \ $result)) {\n            $result[] = $number;\n        }\n    }\n    return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp3ty8fjjg.php:23\n\
    Stack trace:\n#0 /tmp/tmp3ty8fjjg.php(26): test()\n#1 {main}\n  thrown in /tmp/tmp3ty8fjjg.php\
    \ on line 23\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// From a list of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\n// >>>\
    \ remove_duplicates([1, 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates($numbers)\
    \ {\n    $result = [];\n    foreach ($numbers as $number) {\n        if (!in_array($number,\
    \ $result)) {\n            $result[] = $number;\n        }\n    }\n    return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpfs7wfqwo.php:23\n\
    Stack trace:\n#0 /tmp/tmpfs7wfqwo.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpfs7wfqwo.php\
    \ on line 23\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// From a list of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\n// >>>\
    \ remove_duplicates([1, 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates($numbers)\
    \ {\n    $numbers = array_unique($numbers);\n    return $numbers;\n}\n\nfunction\
    \ candidate(...$args) {\n    return remove_duplicates(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3,\
    \ 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp3338v9jd.php:18\n\
    Stack trace:\n#0 /tmp/tmp3338v9jd.php(21): test()\n#1 {main}\n  thrown in /tmp/tmp3338v9jd.php\
    \ on line 18\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// From a list of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\n// >>>\
    \ remove_duplicates([1, 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates($numbers)\
    \ {\n  $result = [];\n  foreach ($numbers as $number) {\n    if (!in_array($number,\
    \ $result)) {\n      $result[] = $number;\n    }\n  }\n  return $result;\n}\n\n\
    function candidate(...$args) {\n    return remove_duplicates(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3,\
    \ 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpmavflnpo.php:23\n\
    Stack trace:\n#0 /tmp/tmpmavflnpo.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpmavflnpo.php\
    \ on line 23\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// From a list of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\n// >>>\
    \ remove_duplicates([1, 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates($numbers)\
    \ {\n    $unique = [];\n    foreach ($numbers as $number) {\n        if (!in_array($number,\
    \ $unique)) {\n            $unique[] = $number;\n        }\n    }\n    return\
    \ $unique;\n}\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpbfoeu7_f.php:23\n\
    Stack trace:\n#0 /tmp/tmpbfoeu7_f.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpbfoeu7_f.php\
    \ on line 23\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// From a list of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\n// >>>\
    \ remove_duplicates([1, 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates($numbers)\
    \ {\n    $unique = [];\n    foreach ($numbers as $number) {\n        if (!in_array($number,\
    \ $unique)) {\n            $unique[] = $number;\n        }\n    }\n    return\
    \ $unique;\n}\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmplfl4tybr.php:23\n\
    Stack trace:\n#0 /tmp/tmplfl4tybr.php(26): test()\n#1 {main}\n  thrown in /tmp/tmplfl4tybr.php\
    \ on line 23\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// From a list of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\n// >>>\
    \ remove_duplicates([1, 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates($numbers)\
    \ {\n    $result = [];\n    $occurrences = [];\n    foreach ($numbers as $number)\
    \ {\n        if (!isset($occurrences[$number])) {\n            $occurrences[$number]\
    \ = 0;\n        }\n        $occurrences[$number]++;\n    }\n    foreach ($numbers\
    \ as $number) {\n        if ($occurrences[$number] == 1) {\n            $result[]\
    \ = $number;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5))\
    \ !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// From a list of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\n// >>>\
    \ remove_duplicates([1, 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates($numbers)\
    \ {\n  $result = [];\n  foreach ($numbers as $number) {\n    if (!in_array($number,\
    \ $result)) {\n      $result[] = $number;\n    }\n  }\n  return $result;\n}\n\n\
    function candidate(...$args) {\n    return remove_duplicates(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3,\
    \ 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpd4k886jh.php:23\n\
    Stack trace:\n#0 /tmp/tmpd4k886jh.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpd4k886jh.php\
    \ on line 23\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// From a list of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\n// >>>\
    \ remove_duplicates([1, 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates($numbers)\
    \ {\n    $unique_numbers = [];\n    foreach ($numbers as $number) {\n        if\
    \ (!in_array($number, $unique_numbers)) {\n            $unique_numbers[] = $number;\n\
    \        }\n    }\n    return $unique_numbers;\n}\n\nfunction candidate(...$args)\
    \ {\n    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5))\
    \ !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp6scvew78.php:23\n\
    Stack trace:\n#0 /tmp/tmp6scvew78.php(26): test()\n#1 {main}\n  thrown in /tmp/tmp6scvew78.php\
    \ on line 23\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// From a list of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\n// >>>\
    \ remove_duplicates([1, 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates($numbers)\
    \ {\n    $result = [];\n    foreach ($numbers as $number) {\n        if (!in_array($number,\
    \ $result)) {\n            $result[] = $number;\n        }\n    }\n    return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp_r67ga18.php:23\n\
    Stack trace:\n#0 /tmp/tmp_r67ga18.php(26): test()\n#1 {main}\n  thrown in /tmp/tmp_r67ga18.php\
    \ on line 23\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// From a list of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\n// >>>\
    \ remove_duplicates([1, 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates($numbers)\
    \ {\n    $unique_numbers = [];\n    foreach ($numbers as $number) {\n        if\
    \ (!in_array($number, $unique_numbers)) {\n            $unique_numbers[] = $number;\n\
    \        }\n    }\n    return $unique_numbers;\n}\n\nfunction candidate(...$args)\
    \ {\n    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5))\
    \ !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpi1c0cnh5.php:23\n\
    Stack trace:\n#0 /tmp/tmpi1c0cnh5.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpi1c0cnh5.php\
    \ on line 23\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// From a list of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\n// >>>\
    \ remove_duplicates([1, 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates($numbers)\
    \ {\n    $result = [];\n    foreach ($numbers as $number) {\n        if (!in_array($number,\
    \ $result)) {\n            $result[] = $number;\n        }\n    }\n    return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp0qjc8gvg.php:23\n\
    Stack trace:\n#0 /tmp/tmp0qjc8gvg.php(26): test()\n#1 {main}\n  thrown in /tmp/tmp0qjc8gvg.php\
    \ on line 23\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// From a list of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\n// >>>\
    \ remove_duplicates([1, 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates($numbers)\
    \ {\n    $result = [];\n    foreach ($numbers as $number) {\n        if (!in_array($number,\
    \ $result)) {\n            $result[] = $number;\n        }\n    }\n    return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp5p51iqca.php:23\n\
    Stack trace:\n#0 /tmp/tmp5p51iqca.php(26): test()\n#1 {main}\n  thrown in /tmp/tmp5p51iqca.php\
    \ on line 23\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// From a list of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\n// >>>\
    \ remove_duplicates([1, 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates($numbers)\
    \ {\n  $result = [];\n  foreach ($numbers as $number) {\n    if (!in_array($number,\
    \ $result)) {\n      $result[] = $number;\n    }\n  }\n  return $result;\n}\n\n\
    function candidate(...$args) {\n    return remove_duplicates(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3,\
    \ 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpncw0fgcp.php:23\n\
    Stack trace:\n#0 /tmp/tmpncw0fgcp.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpncw0fgcp.php\
    \ on line 23\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// From a list of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\n// >>>\
    \ remove_duplicates([1, 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates($numbers)\
    \ {\n    $result = [];\n    foreach ($numbers as $number) {\n        if (!in_array($number,\
    \ $result)) {\n            $result[] = $number;\n        }\n    }\n    return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpid8yzkpl.php:23\n\
    Stack trace:\n#0 /tmp/tmpid8yzkpl.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpid8yzkpl.php\
    \ on line 23\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// From a list of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\n// >>>\
    \ remove_duplicates([1, 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates($numbers)\
    \ {\n\t$result = [];\n\tforeach ($numbers as $number) {\n\t\tif (!in_array($number,\
    \ $result)) {\n\t\t\t$result[] = $number;\n\t\t}\n\t}\n\treturn $result;\n}\n\n\
    function candidate(...$args) {\n    return remove_duplicates(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3,\
    \ 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp6c8b338e.php:23\n\
    Stack trace:\n#0 /tmp/tmp6c8b338e.php(26): test()\n#1 {main}\n  thrown in /tmp/tmp6c8b338e.php\
    \ on line 23\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// From a list of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\n// >>>\
    \ remove_duplicates([1, 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates($numbers)\
    \ {\n    $result = [];\n    foreach ($numbers as $number) {\n        if (!in_array($number,\
    \ $result)) {\n            $result[] = $number;\n        }\n    }\n    return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpid2iybaq.php:23\n\
    Stack trace:\n#0 /tmp/tmpid2iybaq.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpid2iybaq.php\
    \ on line 23\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// From a list of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\n// >>>\
    \ remove_duplicates([1, 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates($numbers)\
    \ {\n    $output = [];\n    foreach ($numbers as $number) {\n        if (!in_array($number,\
    \ $output)) {\n            $output[] = $number;\n        }\n    }\n    return\
    \ $output;\n}\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp78y8kdrg.php:23\n\
    Stack trace:\n#0 /tmp/tmp78y8kdrg.php(26): test()\n#1 {main}\n  thrown in /tmp/tmp78y8kdrg.php\
    \ on line 23\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// From a list of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\n// >>>\
    \ remove_duplicates([1, 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates($numbers)\
    \ {\n    $result = [];\n    foreach ($numbers as $number) {\n        if (!in_array($number,\
    \ $result)) {\n            $result[] = $number;\n        }\n    }\n    return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpekfthnev.php:23\n\
    Stack trace:\n#0 /tmp/tmpekfthnev.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpekfthnev.php\
    \ on line 23\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// From a list of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\n// >>>\
    \ remove_duplicates([1, 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates($numbers)\
    \ {\n    $result = [];\n    foreach ($numbers as $number) {\n        if (!in_array($number,\
    \ $result)) {\n            $result[] = $number;\n        }\n    }\n    return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpneftkgp_.php:23\n\
    Stack trace:\n#0 /tmp/tmpneftkgp_.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpneftkgp_.php\
    \ on line 23\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// From a list of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\n// >>>\
    \ remove_duplicates([1, 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates($numbers)\
    \ {\n    $result = [];\n    $counts = array_count_values($numbers);\n    foreach\
    \ ($numbers as $number) {\n        if ($counts[$number] == 1) {\n            $result[]\
    \ = $number;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5))\
    \ !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// From a list of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\n// >>>\
    \ remove_duplicates([1, 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates($numbers)\
    \ {\n    $result = [];\n    foreach ($numbers as $number) {\n        if (!in_array($number,\
    \ $result)) {\n            $result[] = $number;\n        }\n    }\n    return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpeqmkcmmv.php:23\n\
    Stack trace:\n#0 /tmp/tmpeqmkcmmv.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpeqmkcmmv.php\
    \ on line 23\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// From a list of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\n// >>>\
    \ remove_duplicates([1, 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates($numbers)\
    \ {\n    $result = [];\n    foreach ($numbers as $number) {\n        if (!in_array($number,\
    \ $result)) {\n            $result[] = $number;\n        }\n    }\n    return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp8y0cvkb9.php:23\n\
    Stack trace:\n#0 /tmp/tmp8y0cvkb9.php(26): test()\n#1 {main}\n  thrown in /tmp/tmp8y0cvkb9.php\
    \ on line 23\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// From a list of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\n// >>>\
    \ remove_duplicates([1, 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates($numbers)\
    \ {\n    $result = [];\n    foreach ($numbers as $number) {\n        if (!in_array($number,\
    \ $result)) {\n            $result[] = $number;\n        }\n    }\n    return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmptfqc82m3.php:23\n\
    Stack trace:\n#0 /tmp/tmptfqc82m3.php(26): test()\n#1 {main}\n  thrown in /tmp/tmptfqc82m3.php\
    \ on line 23\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// From a list of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\n// >>>\
    \ remove_duplicates([1, 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates($numbers)\
    \ {\n    $result = [];\n    foreach ($numbers as $number) {\n        if (!in_array($number,\
    \ $result)) {\n            $result[] = $number;\n        }\n    }\n    return\
    \ $result;\n}\n\n$numbers = [1, 2, 3, 2, 4];\n$result = remove_duplicates($numbers);\n\
    print_r($result);\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n)\n"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpi_ihy0di.php:26\n\
    Stack trace:\n#0 /tmp/tmpi_ihy0di.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpi_ihy0di.php\
    \ on line 26\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// From a list of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\n// >>>\
    \ remove_duplicates([1, 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates($numbers)\
    \ {\n  $result = [];\n  foreach ($numbers as $number) {\n    if (!in_array($number,\
    \ $result)) {\n      $result[] = $number;\n    }\n  }\n  return $result;\n}\n\n\
    function candidate(...$args) {\n    return remove_duplicates(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3,\
    \ 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpoah49hn5.php:23\n\
    Stack trace:\n#0 /tmp/tmpoah49hn5.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpoah49hn5.php\
    \ on line 23\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// From a list of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\n// >>>\
    \ remove_duplicates([1, 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates($numbers)\
    \ {\n    $result = [];\n    $count = [];\n    foreach ($numbers as $number) {\n\
    \        if (!isset($count[$number])) {\n            $count[$number] = 0;\n  \
    \      }\n        $count[$number]++;\n    }\n    foreach ($numbers as $number)\
    \ {\n        if ($count[$number] == 1) {\n            $result[] = $number;\n \
    \       }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n \
    \   return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5)) !== array(1,\
    \ 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// From a list of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\n// >>>\
    \ remove_duplicates([1, 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates($numbers)\
    \ {\n    $result = [];\n    foreach ($numbers as $number) {\n        if (!in_array($number,\
    \ $result)) {\n            $result[] = $number;\n        }\n    }\n    return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp1bnki2gq.php:23\n\
    Stack trace:\n#0 /tmp/tmp1bnki2gq.php(26): test()\n#1 {main}\n  thrown in /tmp/tmp1bnki2gq.php\
    \ on line 23\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// From a list of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\n// >>>\
    \ remove_duplicates([1, 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates($numbers)\
    \ {\n    $result = [];\n    foreach ($numbers as $number) {\n        if (!in_array($number,\
    \ $result)) {\n            $result[] = $number;\n        }\n    }\n    return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmph8bo9gnb.php:23\n\
    Stack trace:\n#0 /tmp/tmph8bo9gnb.php(26): test()\n#1 {main}\n  thrown in /tmp/tmph8bo9gnb.php\
    \ on line 23\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// From a list of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\n// >>>\
    \ remove_duplicates([1, 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates($numbers)\
    \ {\n    $result = [];\n    foreach ($numbers as $number) {\n        if (!in_array($number,\
    \ $result)) {\n            $result[] = $number;\n        }\n    }\n    return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpidlma0bh.php:23\n\
    Stack trace:\n#0 /tmp/tmpidlma0bh.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpidlma0bh.php\
    \ on line 23\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// From a list of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\n// >>>\
    \ remove_duplicates([1, 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates($numbers)\
    \ {\n    $result = [];\n    foreach ($numbers as $number) {\n        if (!in_array($number,\
    \ $result)) {\n            $result[] = $number;\n        }\n    }\n    return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp4p4irdug.php:23\n\
    Stack trace:\n#0 /tmp/tmp4p4irdug.php(26): test()\n#1 {main}\n  thrown in /tmp/tmp4p4irdug.php\
    \ on line 23\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// From a list of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\n// >>>\
    \ remove_duplicates([1, 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates($numbers)\
    \ {\n  $numbers = array_unique($numbers);\n  return $numbers;\n}\n\nfunction candidate(...$args)\
    \ {\n    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5))\
    \ !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp_ye_sb2r.php:18\n\
    Stack trace:\n#0 /tmp/tmp_ye_sb2r.php(21): test()\n#1 {main}\n  thrown in /tmp/tmp_ye_sb2r.php\
    \ on line 18\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// From a list of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\n// >>>\
    \ remove_duplicates([1, 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates($numbers)\
    \ {\n    $result = [];\n    foreach ($numbers as $number) {\n        if (!in_array($number,\
    \ $result)) {\n            $result[] = $number;\n        }\n    }\n    return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpgr9l7ake.php:23\n\
    Stack trace:\n#0 /tmp/tmpgr9l7ake.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpgr9l7ake.php\
    \ on line 23\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// From a list of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\n// >>>\
    \ remove_duplicates([1, 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates($numbers)\
    \ {\n    $result = [];\n    foreach ($numbers as $number) {\n        if (!in_array($number,\
    \ $result)) {\n            $result[] = $number;\n        }\n    }\n    return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp2vtoxk6g.php:23\n\
    Stack trace:\n#0 /tmp/tmp2vtoxk6g.php(26): test()\n#1 {main}\n  thrown in /tmp/tmp2vtoxk6g.php\
    \ on line 23\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// From a list of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\n// >>>\
    \ remove_duplicates([1, 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates($numbers)\
    \ {\n    $result = [];\n    foreach ($numbers as $number) {\n        if (!in_array($number,\
    \ $result)) {\n            $result[] = $number;\n        }\n    }\n    return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp_rfdl2f3.php:23\n\
    Stack trace:\n#0 /tmp/tmp_rfdl2f3.php(26): test()\n#1 {main}\n  thrown in /tmp/tmp_rfdl2f3.php\
    \ on line 23\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// From a list of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\n// >>>\
    \ remove_duplicates([1, 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates($numbers)\
    \ {\n    $result = [];\n    foreach ($numbers as $number) {\n        if (!in_array($number,\
    \ $result)) {\n            $result[] = $number;\n        }\n    }\n    return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmptwbp32ev.php:23\n\
    Stack trace:\n#0 /tmp/tmptwbp32ev.php(26): test()\n#1 {main}\n  thrown in /tmp/tmptwbp32ev.php\
    \ on line 23\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// From a list of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\n// >>>\
    \ remove_duplicates([1, 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates($numbers)\
    \ {\n    $result = [];\n    foreach ($numbers as $number) {\n        if (!in_array($number,\
    \ $result)) {\n            $result[] = $number;\n        }\n    }\n    return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpkdxdtzwj.php:23\n\
    Stack trace:\n#0 /tmp/tmpkdxdtzwj.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpkdxdtzwj.php\
    \ on line 23\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// From a list of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\n// >>>\
    \ remove_duplicates([1, 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates($numbers)\
    \ {\n\t$result = [];\n\tforeach ($numbers as $number) {\n\t\tif (!in_array($number,\
    \ $result)) {\n\t\t\t$result[] = $number;\n\t\t}\n\t}\n\treturn $result;\n}\n\n\
    function candidate(...$args) {\n    return remove_duplicates(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3,\
    \ 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpddkswkoa.php:23\n\
    Stack trace:\n#0 /tmp/tmpddkswkoa.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpddkswkoa.php\
    \ on line 23\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// From a list of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\n// >>>\
    \ remove_duplicates([1, 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates($numbers)\
    \ {\n    $result = [];\n    $counts = array_count_values($numbers);\n    foreach\
    \ ($numbers as $number) {\n        if ($counts[$number] == 1) {\n            $result[]\
    \ = $number;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5))\
    \ !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// From a list of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\n// >>>\
    \ remove_duplicates([1, 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates($numbers)\
    \ {\n    $result = [];\n    foreach ($numbers as $number) {\n        if (!in_array($number,\
    \ $result)) {\n            $result[] = $number;\n        }\n    }\n    return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmptzqr8pkm.php:23\n\
    Stack trace:\n#0 /tmp/tmptzqr8pkm.php(26): test()\n#1 {main}\n  thrown in /tmp/tmptzqr8pkm.php\
    \ on line 23\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// From a list of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\n// >>>\
    \ remove_duplicates([1, 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates($numbers)\
    \ {\n    $result = [];\n    foreach ($numbers as $number) {\n        if (!in_array($number,\
    \ $result)) {\n            $result[] = $number;\n        }\n    }\n    return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp7bi520ui.php:23\n\
    Stack trace:\n#0 /tmp/tmp7bi520ui.php(26): test()\n#1 {main}\n  thrown in /tmp/tmp7bi520ui.php\
    \ on line 23\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// From a list of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\n// >>>\
    \ remove_duplicates([1, 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates($numbers)\
    \ {\n    $result = [];\n    foreach ($numbers as $number) {\n        if (!in_array($number,\
    \ $result)) {\n            $result[] = $number;\n        }\n    }\n    return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpn2xzyoi1.php:23\n\
    Stack trace:\n#0 /tmp/tmpn2xzyoi1.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpn2xzyoi1.php\
    \ on line 23\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// From a list of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\n// >>>\
    \ remove_duplicates([1, 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates($numbers)\
    \ {\n    $result = [];\n    foreach ($numbers as $number) {\n        if (!in_array($number,\
    \ $result)) {\n            $result[] = $number;\n        }\n    }\n    return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpbnshznky.php:23\n\
    Stack trace:\n#0 /tmp/tmpbnshznky.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpbnshznky.php\
    \ on line 23\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// From a list of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\n// >>>\
    \ remove_duplicates([1, 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates($numbers)\
    \ {\n    $result = [];\n    foreach ($numbers as $number) {\n        if (!in_array($number,\
    \ $result)) {\n            $result[] = $number;\n        }\n    }\n    return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpze0eye3o.php:23\n\
    Stack trace:\n#0 /tmp/tmpze0eye3o.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpze0eye3o.php\
    \ on line 23\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// From a list of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\n// >>>\
    \ remove_duplicates([1, 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates($numbers)\
    \ {\n    $unique = [];\n    foreach ($numbers as $number) {\n        if (!in_array($number,\
    \ $unique)) {\n            $unique[] = $number;\n        }\n    }\n    return\
    \ $unique;\n}\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpodta1ghk.php:23\n\
    Stack trace:\n#0 /tmp/tmpodta1ghk.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpodta1ghk.php\
    \ on line 23\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// From a list of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\n// >>>\
    \ remove_duplicates([1, 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates($numbers)\
    \ {\n    $result = [];\n    foreach ($numbers as $number) {\n        if (!in_array($number,\
    \ $result)) {\n            $result[] = $number;\n        }\n    }\n    return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpp019_35l.php:23\n\
    Stack trace:\n#0 /tmp/tmpp019_35l.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpp019_35l.php\
    \ on line 23\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// From a list of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\n// >>>\
    \ remove_duplicates([1, 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates($numbers)\
    \ {\n    $result = [];\n    $counts = array_count_values($numbers);\n    foreach\
    \ ($numbers as $number) {\n        if ($counts[$number] == 1) {\n            $result[]\
    \ = $number;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5))\
    \ !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// From a list of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\n// >>>\
    \ remove_duplicates([1, 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates($numbers)\
    \ {\n    $result = [];\n    $occurrences = [];\n    foreach ($numbers as $number)\
    \ {\n        if (!isset($occurrences[$number])) {\n            $occurrences[$number]\
    \ = 0;\n        }\n        $occurrences[$number]++;\n    }\n    foreach ($numbers\
    \ as $number) {\n        if ($occurrences[$number] == 1) {\n            $result[]\
    \ = $number;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5))\
    \ !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// From a list of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\n// >>>\
    \ remove_duplicates([1, 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates($numbers)\
    \ {\n    $result = [];\n    $occurrences = [];\n    foreach ($numbers as $number)\
    \ {\n        if (!isset($occurrences[$number])) {\n            $occurrences[$number]\
    \ = 0;\n        }\n        $occurrences[$number] += 1;\n    }\n    foreach ($numbers\
    \ as $number) {\n        if ($occurrences[$number] === 1) {\n            $result[]\
    \ = $number;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5))\
    \ !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// From a list of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\n// >>>\
    \ remove_duplicates([1, 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates($numbers)\
    \ {\n    $result = [];\n    foreach ($numbers as $number) {\n        if (!in_array($number,\
    \ $result)) {\n            $result[] = $number;\n        }\n    }\n    return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpz7poa3sj.php:23\n\
    Stack trace:\n#0 /tmp/tmpz7poa3sj.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpz7poa3sj.php\
    \ on line 23\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// From a list of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\n// >>>\
    \ remove_duplicates([1, 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates($numbers)\
    \ {\n    $result = [];\n    foreach ($numbers as $number) {\n        if (!in_array($number,\
    \ $result)) {\n            $result[] = $number;\n        }\n    }\n    return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpr9jsb1ah.php:23\n\
    Stack trace:\n#0 /tmp/tmpr9jsb1ah.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpr9jsb1ah.php\
    \ on line 23\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// From a list of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\n// >>>\
    \ remove_duplicates([1, 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates($numbers)\
    \ {\n    $result = [];\n    foreach ($numbers as $number) {\n        if (!in_array($number,\
    \ $result)) {\n            $result[] = $number;\n        }\n    }\n    return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmplemtdz4j.php:23\n\
    Stack trace:\n#0 /tmp/tmplemtdz4j.php(26): test()\n#1 {main}\n  thrown in /tmp/tmplemtdz4j.php\
    \ on line 23\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// From a list of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\n// >>>\
    \ remove_duplicates([1, 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates($numbers)\
    \ {\n  $result = [];\n  foreach ($numbers as $number) {\n    if (!in_array($number,\
    \ $result)) {\n      $result[] = $number;\n    }\n  }\n  return $result;\n}\n\n\
    function candidate(...$args) {\n    return remove_duplicates(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3,\
    \ 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmphoy4zlp0.php:23\n\
    Stack trace:\n#0 /tmp/tmphoy4zlp0.php(26): test()\n#1 {main}\n  thrown in /tmp/tmphoy4zlp0.php\
    \ on line 23\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// From a list of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\n// >>>\
    \ remove_duplicates([1, 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates($numbers)\
    \ {\n    $result = [];\n    foreach ($numbers as $number) {\n        if (!in_array($number,\
    \ $result)) {\n            $result[] = $number;\n        }\n    }\n    return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpkptaj4lt.php:23\n\
    Stack trace:\n#0 /tmp/tmpkptaj4lt.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpkptaj4lt.php\
    \ on line 23\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// From a list of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\n// >>>\
    \ remove_duplicates([1, 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates($numbers)\
    \ {\n  $unique_numbers = [];\n  foreach ($numbers as $number) {\n    if (!in_array($number,\
    \ $unique_numbers)) {\n      $unique_numbers[] = $number;\n    }\n  }\n  return\
    \ $unique_numbers;\n}\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp_d53sebd.php:23\n\
    Stack trace:\n#0 /tmp/tmp_d53sebd.php(26): test()\n#1 {main}\n  thrown in /tmp/tmp_d53sebd.php\
    \ on line 23\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// From a list of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\n// >>>\
    \ remove_duplicates([1, 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates($numbers)\
    \ {\n    $result = [];\n    $seen = [];\n    foreach ($numbers as $number) {\n\
    \        if (!in_array($number, $seen)) {\n            $result[] = $number;\n\
    \            $seen[] = $number;\n        }\n    }\n    return $result;\n}\n\n\
    function candidate(...$args) {\n    return remove_duplicates(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3,\
    \ 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpuri71l3z.php:25\n\
    Stack trace:\n#0 /tmp/tmpuri71l3z.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpuri71l3z.php\
    \ on line 25\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// From a list of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\n// >>>\
    \ remove_duplicates([1, 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates($numbers)\
    \ {\n    $result = [];\n    foreach ($numbers as $number) {\n        if (!in_array($number,\
    \ $result)) {\n            $result[] = $number;\n        }\n    }\n    return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpna7odime.php:23\n\
    Stack trace:\n#0 /tmp/tmpna7odime.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpna7odime.php\
    \ on line 23\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// From a list of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\n// >>>\
    \ remove_duplicates([1, 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates($numbers)\
    \ {\n    $result = [];\n    foreach ($numbers as $number) {\n        if (!in_array($number,\
    \ $result)) {\n            $result[] = $number;\n        }\n    }\n    return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpy8vl2tra.php:23\n\
    Stack trace:\n#0 /tmp/tmpy8vl2tra.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpy8vl2tra.php\
    \ on line 23\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// From a list of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\n// >>>\
    \ remove_duplicates([1, 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates($numbers)\
    \ {\n    $result = [];\n    foreach ($numbers as $number) {\n        if (!in_array($number,\
    \ $result)) {\n            $result[] = $number;\n        }\n    }\n    return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpsespta8l.php:23\n\
    Stack trace:\n#0 /tmp/tmpsespta8l.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpsespta8l.php\
    \ on line 23\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// From a list of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\n// >>>\
    \ remove_duplicates([1, 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates($numbers)\
    \ {\n    $result = [];\n    foreach ($numbers as $number) {\n        if (!in_array($number,\
    \ $result)) {\n            $result[] = $number;\n        }\n    }\n    return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp7ls53fe8.php:23\n\
    Stack trace:\n#0 /tmp/tmp7ls53fe8.php(26): test()\n#1 {main}\n  thrown in /tmp/tmp7ls53fe8.php\
    \ on line 23\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// From a list of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\n// >>>\
    \ remove_duplicates([1, 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates($numbers)\
    \ {\n    $result = [];\n    foreach ($numbers as $number) {\n        if (!in_array($number,\
    \ $result)) {\n            $result[] = $number;\n        }\n    }\n    return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpqpysghm9.php:23\n\
    Stack trace:\n#0 /tmp/tmpqpysghm9.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpqpysghm9.php\
    \ on line 23\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// From a list of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\n// >>>\
    \ remove_duplicates([1, 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates($numbers)\
    \ {\n    $result = [];\n    foreach ($numbers as $number) {\n        if (!in_array($number,\
    \ $result)) {\n            $result[] = $number;\n        }\n    }\n    return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpedi7tvfx.php:23\n\
    Stack trace:\n#0 /tmp/tmpedi7tvfx.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpedi7tvfx.php\
    \ on line 23\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// From a list of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\n// >>>\
    \ remove_duplicates([1, 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates($numbers)\
    \ {\n    $result = [];\n    foreach ($numbers as $number) {\n        if (!in_array($number,\
    \ $result)) {\n            $result[] = $number;\n        }\n    }\n    return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmppe9wrvcg.php:23\n\
    Stack trace:\n#0 /tmp/tmppe9wrvcg.php(26): test()\n#1 {main}\n  thrown in /tmp/tmppe9wrvcg.php\
    \ on line 23\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// From a list of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\n// >>>\
    \ remove_duplicates([1, 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates($numbers)\
    \ {\n    $result = [];\n    foreach ($numbers as $number) {\n        if (!in_array($number,\
    \ $result)) {\n            $result[] = $number;\n        }\n    }\n    return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpomyllroz.php:23\n\
    Stack trace:\n#0 /tmp/tmpomyllroz.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpomyllroz.php\
    \ on line 23\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// From a list of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\n// >>>\
    \ remove_duplicates([1, 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates($numbers)\
    \ {\n    $result = [];\n    foreach ($numbers as $number) {\n        if (!in_array($number,\
    \ $result)) {\n            $result[] = $number;\n        }\n    }\n    return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpdeizo4jz.php:23\n\
    Stack trace:\n#0 /tmp/tmpdeizo4jz.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpdeizo4jz.php\
    \ on line 23\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// From a list of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\n// >>>\
    \ remove_duplicates([1, 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates($numbers)\
    \ {\n    $result = [];\n    foreach ($numbers as $number) {\n        if (!in_array($number,\
    \ $result)) {\n            $result[] = $number;\n        }\n    }\n    return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpt6flasc9.php:23\n\
    Stack trace:\n#0 /tmp/tmpt6flasc9.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpt6flasc9.php\
    \ on line 23\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// From a list of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\n// >>>\
    \ remove_duplicates([1, 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates($numbers)\
    \ {\n  $result = [];\n  foreach ($numbers as $number) {\n    if (!in_array($number,\
    \ $result)) {\n      $result[] = $number;\n    }\n  }\n  return $result;\n}\n\n\
    function candidate(...$args) {\n    return remove_duplicates(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3,\
    \ 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp7bs7glym.php:23\n\
    Stack trace:\n#0 /tmp/tmp7bs7glym.php(26): test()\n#1 {main}\n  thrown in /tmp/tmp7bs7glym.php\
    \ on line 23\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// From a list of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\n// >>>\
    \ remove_duplicates([1, 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates($numbers)\
    \ {\n    $unique_numbers = [];\n    foreach ($numbers as $number) {\n        if\
    \ (!in_array($number, $unique_numbers)) {\n            $unique_numbers[] = $number;\n\
    \        }\n    }\n    return $unique_numbers;\n}\n\nfunction candidate(...$args)\
    \ {\n    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5))\
    \ !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp28z3vdno.php:23\n\
    Stack trace:\n#0 /tmp/tmp28z3vdno.php(26): test()\n#1 {main}\n  thrown in /tmp/tmp28z3vdno.php\
    \ on line 23\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// From a list of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\n// >>>\
    \ remove_duplicates([1, 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates($numbers)\
    \ {\n    $result = [];\n    foreach ($numbers as $number) {\n        if (!in_array($number,\
    \ $result)) {\n            $result[] = $number;\n        }\n    }\n    return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpukni_nzn.php:23\n\
    Stack trace:\n#0 /tmp/tmpukni_nzn.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpukni_nzn.php\
    \ on line 23\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// From a list of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\n// >>>\
    \ remove_duplicates([1, 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates($numbers)\
    \ {\n    $result = [];\n    foreach ($numbers as $number) {\n        if (!in_array($number,\
    \ $result)) {\n            $result[] = $number;\n        }\n    }\n    return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmppamharfz.php:23\n\
    Stack trace:\n#0 /tmp/tmppamharfz.php(26): test()\n#1 {main}\n  thrown in /tmp/tmppamharfz.php\
    \ on line 23\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// From a list of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\n// >>>\
    \ remove_duplicates([1, 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates($numbers)\
    \ {\n  $result = [];\n  foreach ($numbers as $number) {\n    if (!in_array($number,\
    \ $result)) {\n      $result[] = $number;\n    }\n  }\n  return $result;\n}\n\n\
    function candidate(...$args) {\n    return remove_duplicates(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3,\
    \ 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpypg3yetd.php:23\n\
    Stack trace:\n#0 /tmp/tmpypg3yetd.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpypg3yetd.php\
    \ on line 23\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// From a list of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\n// >>>\
    \ remove_duplicates([1, 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates($numbers)\
    \ {\n    $result = [];\n    foreach ($numbers as $number) {\n        if (!in_array($number,\
    \ $result)) {\n            $result[] = $number;\n        }\n    }\n    return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpbmmw57ws.php:23\n\
    Stack trace:\n#0 /tmp/tmpbmmw57ws.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpbmmw57ws.php\
    \ on line 23\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// From a list of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\n// >>>\
    \ remove_duplicates([1, 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates($numbers)\
    \ {\n    $result = [];\n    foreach ($numbers as $number) {\n        if (!in_array($number,\
    \ $result)) {\n            $result[] = $number;\n        }\n    }\n    return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpfede_ixi.php:23\n\
    Stack trace:\n#0 /tmp/tmpfede_ixi.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpfede_ixi.php\
    \ on line 23\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// From a list of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\n// >>>\
    \ remove_duplicates([1, 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates($numbers)\
    \ {\n  $numbers_count = array_count_values($numbers);\n  $result = [];\n  foreach\
    \ ($numbers as $number) {\n    if ($numbers_count[$number] == 1) {\n      $result[]\
    \ = $number;\n    }\n  }\n  return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5))\
    \ !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// From a list of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\n// >>>\
    \ remove_duplicates([1, 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates($numbers)\
    \ {\n    $result = [];\n    foreach ($numbers as $number) {\n        if (!in_array($number,\
    \ $result)) {\n            $result[] = $number;\n        }\n    }\n    return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp_0pr4ohn.php:23\n\
    Stack trace:\n#0 /tmp/tmp_0pr4ohn.php(26): test()\n#1 {main}\n  thrown in /tmp/tmp_0pr4ohn.php\
    \ on line 23\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// From a list of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\n// >>>\
    \ remove_duplicates([1, 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates($numbers)\
    \ {\n    $result = [];\n    foreach ($numbers as $number) {\n        if (!in_array($number,\
    \ $result)) {\n            $result[] = $number;\n        }\n    }\n    return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpjtcuweeb.php:23\n\
    Stack trace:\n#0 /tmp/tmpjtcuweeb.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpjtcuweeb.php\
    \ on line 23\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// From a list of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\n// >>>\
    \ remove_duplicates([1, 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates($numbers)\
    \ {\n    $result = [];\n    foreach ($numbers as $number) {\n        if (!in_array($number,\
    \ $result)) {\n            $result[] = $number;\n        }\n    }\n    return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpsxgilxce.php:23\n\
    Stack trace:\n#0 /tmp/tmpsxgilxce.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpsxgilxce.php\
    \ on line 23\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// From a list of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\n// >>>\
    \ remove_duplicates([1, 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates($numbers)\
    \ {\n    $result = [];\n    foreach ($numbers as $number) {\n        if (!in_array($number,\
    \ $result)) {\n            $result[] = $number;\n        }\n    }\n    return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmppyj0okyc.php:23\n\
    Stack trace:\n#0 /tmp/tmppyj0okyc.php(26): test()\n#1 {main}\n  thrown in /tmp/tmppyj0okyc.php\
    \ on line 23\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// From a list of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\n// >>>\
    \ remove_duplicates([1, 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates($numbers)\
    \ {\n    $result = [];\n    foreach ($numbers as $number) {\n        if (!in_array($number,\
    \ $result)) {\n            $result[] = $number;\n        }\n    }\n    return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpbwmwf1o7.php:23\n\
    Stack trace:\n#0 /tmp/tmpbwmwf1o7.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpbwmwf1o7.php\
    \ on line 23\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// From a list of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\n// >>>\
    \ remove_duplicates([1, 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates($numbers)\
    \ {\n    $result = [];\n    foreach ($numbers as $number) {\n        if (!in_array($number,\
    \ $result)) {\n            $result[] = $number;\n        }\n    }\n    return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpa_u67qfx.php:23\n\
    Stack trace:\n#0 /tmp/tmpa_u67qfx.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpa_u67qfx.php\
    \ on line 23\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// From a list of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\n// >>>\
    \ remove_duplicates([1, 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates($numbers)\
    \ {\n    $result = [];\n    foreach ($numbers as $number) {\n        if (!in_array($number,\
    \ $result)) {\n            $result[] = $number;\n        }\n    }\n    return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp6y1pnjng.php:23\n\
    Stack trace:\n#0 /tmp/tmp6y1pnjng.php(26): test()\n#1 {main}\n  thrown in /tmp/tmp6y1pnjng.php\
    \ on line 23\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// From a list of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\n// >>>\
    \ remove_duplicates([1, 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates($numbers)\
    \ {\n    $unique_numbers = [];\n    foreach ($numbers as $number) {\n        if\
    \ (!in_array($number, $unique_numbers)) {\n            $unique_numbers[] = $number;\n\
    \        }\n    }\n    return $unique_numbers;\n}\n\nfunction candidate(...$args)\
    \ {\n    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5))\
    \ !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpt7e3tjlz.php:23\n\
    Stack trace:\n#0 /tmp/tmpt7e3tjlz.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpt7e3tjlz.php\
    \ on line 23\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// From a list of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\n// >>>\
    \ remove_duplicates([1, 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates($numbers)\
    \ {\n    $result = [];\n    foreach ($numbers as $number) {\n        if (!in_array($number,\
    \ $result)) {\n            $result[] = $number;\n        }\n    }\n    return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpbyuv255f.php:23\n\
    Stack trace:\n#0 /tmp/tmpbyuv255f.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpbyuv255f.php\
    \ on line 23\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// From a list of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\n// >>>\
    \ remove_duplicates([1, 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates($numbers)\
    \ {\n    $result = [];\n    foreach ($numbers as $number) {\n        if (!in_array($number,\
    \ $result)) {\n            $result[] = $number;\n        }\n    }\n    return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpo_v9e1rv.php:23\n\
    Stack trace:\n#0 /tmp/tmpo_v9e1rv.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpo_v9e1rv.php\
    \ on line 23\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// From a list of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\n// >>>\
    \ remove_duplicates([1, 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates($numbers)\
    \ {\n    $result = [];\n    $count = count($numbers);\n    for ($i = 0; $i < $count;\
    \ $i++) {\n        $number = $numbers[$i];\n        if (!in_array($number, $result))\
    \ {\n            $result[] = $number;\n        }\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpkp1xykj5.php:25\n\
    Stack trace:\n#0 /tmp/tmpkp1xykj5.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpkp1xykj5.php\
    \ on line 25\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// From a list of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\n// >>>\
    \ remove_duplicates([1, 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates($numbers)\
    \ {\n    $result = [];\n    foreach ($numbers as $number) {\n        if (!in_array($number,\
    \ $result)) {\n            $result[] = $number;\n        }\n    }\n    return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpcho1ncst.php:23\n\
    Stack trace:\n#0 /tmp/tmpcho1ncst.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpcho1ncst.php\
    \ on line 23\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// From a list of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\n// >>>\
    \ remove_duplicates([1, 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates($numbers)\
    \ {\n    $result = [];\n    foreach ($numbers as $number) {\n        if (!in_array($number,\
    \ $result)) {\n            $result[] = $number;\n        }\n    }\n    return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp5d6b63io.php:23\n\
    Stack trace:\n#0 /tmp/tmp5d6b63io.php(26): test()\n#1 {main}\n  thrown in /tmp/tmp5d6b63io.php\
    \ on line 23\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// From a list of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\n// >>>\
    \ remove_duplicates([1, 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates($numbers)\
    \ {\n  $result = [];\n  foreach ($numbers as $number) {\n    if (!in_array($number,\
    \ $result)) {\n      $result[] = $number;\n    }\n  }\n  return $result;\n}\n\n\
    function candidate(...$args) {\n    return remove_duplicates(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3,\
    \ 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp1b59tsow.php:23\n\
    Stack trace:\n#0 /tmp/tmp1b59tsow.php(26): test()\n#1 {main}\n  thrown in /tmp/tmp1b59tsow.php\
    \ on line 23\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// From a list of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\n// >>>\
    \ remove_duplicates([1, 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates($numbers)\
    \ {\n    $numbers_count = array_count_values($numbers);\n    $result = [];\n \
    \   foreach ($numbers_count as $key => $value) {\n        if ($value == 1) {\n\
    \            $result[] = $key;\n        }\n    }\n    return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return remove_duplicates(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3,\
    \ 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// From a list of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\n// >>>\
    \ remove_duplicates([1, 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates($numbers)\
    \ {\n    $result = [];\n    foreach ($numbers as $number) {\n        if (!in_array($number,\
    \ $result)) {\n            $result[] = $number;\n        }\n    }\n    return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpwbwa0opw.php:23\n\
    Stack trace:\n#0 /tmp/tmpwbwa0opw.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpwbwa0opw.php\
    \ on line 23\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// From a list of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\n// >>>\
    \ remove_duplicates([1, 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates($numbers)\
    \ {\n    $result = [];\n    foreach ($numbers as $number) {\n        if (!in_array($number,\
    \ $result)) {\n            $result[] = $number;\n        }\n    }\n    return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpmyzxwo2u.php:23\n\
    Stack trace:\n#0 /tmp/tmpmyzxwo2u.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpmyzxwo2u.php\
    \ on line 23\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// From a list of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\n// >>>\
    \ remove_duplicates([1, 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates($numbers)\
    \ {\n    $result = [];\n    foreach ($numbers as $number) {\n        if (!in_array($number,\
    \ $result)) {\n            $result[] = $number;\n        }\n    }\n    return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpg6ul0l7k.php:23\n\
    Stack trace:\n#0 /tmp/tmpg6ul0l7k.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpg6ul0l7k.php\
    \ on line 23\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// From a list of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\n// >>>\
    \ remove_duplicates([1, 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates($numbers)\
    \ {\n    $result = [];\n    foreach ($numbers as $number) {\n        if (!in_array($number,\
    \ $result)) {\n            $result[] = $number;\n        }\n    }\n    return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp9nfrerpx.php:23\n\
    Stack trace:\n#0 /tmp/tmp9nfrerpx.php(26): test()\n#1 {main}\n  thrown in /tmp/tmp9nfrerpx.php\
    \ on line 23\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// From a list of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\n// >>>\
    \ remove_duplicates([1, 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates($numbers)\
    \ {\n    $result = [];\n    foreach ($numbers as $number) {\n        if (!in_array($number,\
    \ $result)) {\n            $result[] = $number;\n        }\n    }\n    return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp0m0pclzq.php:23\n\
    Stack trace:\n#0 /tmp/tmp0m0pclzq.php(26): test()\n#1 {main}\n  thrown in /tmp/tmp0m0pclzq.php\
    \ on line 23\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// From a list of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\n// >>>\
    \ remove_duplicates([1, 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates($numbers)\
    \ {\n    $numbers = array_unique($numbers);\n    return $numbers;\n}\n\nfunction\
    \ candidate(...$args) {\n    return remove_duplicates(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3,\
    \ 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpinwt_1kl.php:18\n\
    Stack trace:\n#0 /tmp/tmpinwt_1kl.php(21): test()\n#1 {main}\n  thrown in /tmp/tmpinwt_1kl.php\
    \ on line 18\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// From a list of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\n// >>>\
    \ remove_duplicates([1, 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates($numbers)\
    \ {\n    $unique_numbers = [];\n    foreach ($numbers as $number) {\n        if\
    \ (!in_array($number, $unique_numbers)) {\n            $unique_numbers[] = $number;\n\
    \        }\n    }\n    return $unique_numbers;\n}\n\nfunction candidate(...$args)\
    \ {\n    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5))\
    \ !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpzmb5iu6f.php:23\n\
    Stack trace:\n#0 /tmp/tmpzmb5iu6f.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpzmb5iu6f.php\
    \ on line 23\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// From a list of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\n// >>>\
    \ remove_duplicates([1, 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates($numbers)\
    \ {\n    $result = [];\n    foreach ($numbers as $number) {\n        if (!in_array($number,\
    \ $result)) {\n            $result[] = $number;\n        }\n    }\n    return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp_lqkbon8.php:23\n\
    Stack trace:\n#0 /tmp/tmp_lqkbon8.php(26): test()\n#1 {main}\n  thrown in /tmp/tmp_lqkbon8.php\
    \ on line 23\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// From a list of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\n// >>>\
    \ remove_duplicates([1, 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates($numbers)\
    \ {\n  $result = [];\n  foreach ($numbers as $number) {\n    if (!in_array($number,\
    \ $result)) {\n      $result[] = $number;\n    }\n  }\n  return $result;\n}\n\n\
    function candidate(...$args) {\n    return remove_duplicates(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3,\
    \ 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp7vt_xar5.php:23\n\
    Stack trace:\n#0 /tmp/tmp7vt_xar5.php(26): test()\n#1 {main}\n  thrown in /tmp/tmp7vt_xar5.php\
    \ on line 23\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// From a list of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\n// >>>\
    \ remove_duplicates([1, 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates($numbers)\
    \ {\n    $result = [];\n    foreach ($numbers as $number) {\n        if (!in_array($number,\
    \ $result)) {\n            $result[] = $number;\n        }\n    }\n    return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmptzk8m3lq.php:23\n\
    Stack trace:\n#0 /tmp/tmptzk8m3lq.php(26): test()\n#1 {main}\n  thrown in /tmp/tmptzk8m3lq.php\
    \ on line 23\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// From a list of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\n// >>>\
    \ remove_duplicates([1, 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates($numbers)\
    \ {\n    $unique_numbers = [];\n    foreach ($numbers as $number) {\n        if\
    \ (!in_array($number, $unique_numbers)) {\n            $unique_numbers[] = $number;\n\
    \        }\n    }\n    return $unique_numbers;\n}\n\nfunction candidate(...$args)\
    \ {\n    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5))\
    \ !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpiqimwmz7.php:23\n\
    Stack trace:\n#0 /tmp/tmpiqimwmz7.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpiqimwmz7.php\
    \ on line 23\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// From a list of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\n// >>>\
    \ remove_duplicates([1, 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates($numbers)\
    \ {\n  $result = [];\n  foreach ($numbers as $number) {\n    if (!in_array($number,\
    \ $result)) {\n      $result[] = $number;\n    }\n  }\n  return $result;\n}\n\n\
    function candidate(...$args) {\n    return remove_duplicates(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3,\
    \ 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmptwe46gsh.php:23\n\
    Stack trace:\n#0 /tmp/tmptwe46gsh.php(26): test()\n#1 {main}\n  thrown in /tmp/tmptwe46gsh.php\
    \ on line 23\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// From a list of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\n// >>>\
    \ remove_duplicates([1, 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates($numbers)\
    \ {\n    $result = [];\n    foreach ($numbers as $number) {\n        if (!in_array($number,\
    \ $result)) {\n            $result[] = $number;\n        }\n    }\n    return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmppzf6x1i1.php:23\n\
    Stack trace:\n#0 /tmp/tmppzf6x1i1.php(26): test()\n#1 {main}\n  thrown in /tmp/tmppzf6x1i1.php\
    \ on line 23\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// From a list of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\n// >>>\
    \ remove_duplicates([1, 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates($numbers)\
    \ {\n    $uniques = [];\n    foreach ($numbers as $number) {\n        if (!in_array($number,\
    \ $uniques)) {\n            $uniques[] = $number;\n        }\n    }\n    return\
    \ $uniques;\n}\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpeoaisaob.php:23\n\
    Stack trace:\n#0 /tmp/tmpeoaisaob.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpeoaisaob.php\
    \ on line 23\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// From a list of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\n// >>>\
    \ remove_duplicates([1, 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates($numbers)\
    \ {\n    $result = [];\n    foreach ($numbers as $number) {\n        if (!in_array($number,\
    \ $result)) {\n            $result[] = $number;\n        }\n    }\n    return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpqu6dr84e.php:23\n\
    Stack trace:\n#0 /tmp/tmpqu6dr84e.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpqu6dr84e.php\
    \ on line 23\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// From a list of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\n// >>>\
    \ remove_duplicates([1, 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates($numbers)\
    \ {\n    $result = [];\n    foreach ($numbers as $number) {\n        if (!in_array($number,\
    \ $result)) {\n            $result[] = $number;\n        }\n    }\n    return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp2hiaf5i3.php:23\n\
    Stack trace:\n#0 /tmp/tmp2hiaf5i3.php(26): test()\n#1 {main}\n  thrown in /tmp/tmp2hiaf5i3.php\
    \ on line 23\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// From a list of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\n// >>>\
    \ remove_duplicates([1, 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates($numbers)\
    \ {\n    $result = [];\n    foreach ($numbers as $number) {\n        if (!in_array($number,\
    \ $result)) {\n            $result[] = $number;\n        }\n    }\n    return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpyuabk8a5.php:23\n\
    Stack trace:\n#0 /tmp/tmpyuabk8a5.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpyuabk8a5.php\
    \ on line 23\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// From a list of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\n// >>>\
    \ remove_duplicates([1, 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates($numbers)\
    \ {\n    $result = [];\n    foreach ($numbers as $number) {\n        if (!in_array($number,\
    \ $result)) {\n            $result[] = $number;\n        }\n    }\n    return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp2vtqcggx.php:23\n\
    Stack trace:\n#0 /tmp/tmp2vtqcggx.php(26): test()\n#1 {main}\n  thrown in /tmp/tmp2vtqcggx.php\
    \ on line 23\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// From a list of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\n// >>>\
    \ remove_duplicates([1, 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates($numbers)\
    \ {\n    $unique = [];\n    foreach ($numbers as $number) {\n        if (!in_array($number,\
    \ $unique)) {\n            $unique[] = $number;\n        }\n    }\n    return\
    \ $unique;\n}\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmppb7ui8fr.php:23\n\
    Stack trace:\n#0 /tmp/tmppb7ui8fr.php(26): test()\n#1 {main}\n  thrown in /tmp/tmppb7ui8fr.php\
    \ on line 23\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// From a list of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\n// >>>\
    \ remove_duplicates([1, 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates($numbers)\
    \ {\n    $result = [];\n    foreach ($numbers as $number) {\n        if (!in_array($number,\
    \ $result)) {\n            $result[] = $number;\n        }\n    }\n    return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp4a9dqh6j.php:23\n\
    Stack trace:\n#0 /tmp/tmp4a9dqh6j.php(26): test()\n#1 {main}\n  thrown in /tmp/tmp4a9dqh6j.php\
    \ on line 23\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// From a list of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\n// >>>\
    \ remove_duplicates([1, 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates($numbers)\
    \ {\n    $result = [];\n    $counts = array_count_values($numbers);\n    foreach\
    \ ($numbers as $number) {\n        if ($counts[$number] == 1) {\n            $result[]\
    \ = $number;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5))\
    \ !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// From a list of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\n// >>>\
    \ remove_duplicates([1, 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates($numbers)\
    \ {\n    $result = [];\n    foreach ($numbers as $number) {\n        if (!in_array($number,\
    \ $result)) {\n            $result[] = $number;\n        }\n    }\n    return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmphtz3pa1c.php:23\n\
    Stack trace:\n#0 /tmp/tmphtz3pa1c.php(26): test()\n#1 {main}\n  thrown in /tmp/tmphtz3pa1c.php\
    \ on line 23\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// From a list of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\n// >>>\
    \ remove_duplicates([1, 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates($numbers)\
    \ {\n    $result = [];\n    foreach ($numbers as $number) {\n        if (!in_array($number,\
    \ $result)) {\n            $result[] = $number;\n        }\n    }\n    return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp899e71il.php:23\n\
    Stack trace:\n#0 /tmp/tmp899e71il.php(26): test()\n#1 {main}\n  thrown in /tmp/tmp899e71il.php\
    \ on line 23\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// From a list of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\n// >>>\
    \ remove_duplicates([1, 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates($numbers)\
    \ {\n  $result = [];\n  foreach ($numbers as $number) {\n    if (!in_array($number,\
    \ $result)) {\n      $result[] = $number;\n    }\n  }\n  return $result;\n}\n\n\
    $numbers = [1, 2, 3, 2, 4];\nprint_r(remove_duplicates($numbers));\nfunction candidate(...$args)\
    \ {\n    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5))\
    \ !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 3\n    [3] => 4\n)\n"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpo9v_l_nq.php:25\n\
    Stack trace:\n#0 /tmp/tmpo9v_l_nq.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpo9v_l_nq.php\
    \ on line 25\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// From a list of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\n// >>>\
    \ remove_duplicates([1, 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates($numbers)\
    \ {\n    $unique = [];\n    foreach ($numbers as $number) {\n        if (!in_array($number,\
    \ $unique)) {\n            $unique[] = $number;\n        }\n    }\n    return\
    \ $unique;\n}\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpie3ecn3e.php:23\n\
    Stack trace:\n#0 /tmp/tmpie3ecn3e.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpie3ecn3e.php\
    \ on line 23\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// From a list of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\n// >>>\
    \ remove_duplicates([1, 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates($numbers)\
    \ {\n    $result = [];\n    foreach ($numbers as $number) {\n        if (!in_array($number,\
    \ $result)) {\n            $result[] = $number;\n        }\n    }\n    return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpzfhuh5pa.php:23\n\
    Stack trace:\n#0 /tmp/tmpzfhuh5pa.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpzfhuh5pa.php\
    \ on line 23\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// From a list of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\n// >>>\
    \ remove_duplicates([1, 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates($numbers)\
    \ {\n    $unique_numbers = [];\n    foreach ($numbers as $number) {\n        if\
    \ (!in_array($number, $unique_numbers)) {\n            $unique_numbers[] = $number;\n\
    \        }\n    }\n    return $unique_numbers;\n}\n\nfunction candidate(...$args)\
    \ {\n    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5))\
    \ !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpf0xpjf_r.php:23\n\
    Stack trace:\n#0 /tmp/tmpf0xpjf_r.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpf0xpjf_r.php\
    \ on line 23\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// From a list of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\n// >>>\
    \ remove_duplicates([1, 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates($numbers)\
    \ {\n    $result = [];\n    foreach ($numbers as $number) {\n        if (!in_array($number,\
    \ $result)) {\n            $result[] = $number;\n        }\n    }\n    return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpl2bp8afd.php:23\n\
    Stack trace:\n#0 /tmp/tmpl2bp8afd.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpl2bp8afd.php\
    \ on line 23\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// From a list of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\n// >>>\
    \ remove_duplicates([1, 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates($numbers)\
    \ {\n    $result = [];\n    $count = [];\n    foreach ($numbers as $number) {\n\
    \        if (!isset($count[$number])) {\n            $count[$number] = 0;\n  \
    \      }\n        $count[$number]++;\n    }\n    foreach ($numbers as $number)\
    \ {\n        if ($count[$number] == 1) {\n            $result[] = $number;\n \
    \       }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n \
    \   return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5)) !== array(1,\
    \ 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// From a list of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\n// >>>\
    \ remove_duplicates([1, 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates($numbers)\
    \ {\n    $unique_numbers = [];\n    foreach ($numbers as $number) {\n        if\
    \ (!in_array($number, $unique_numbers)) {\n            $unique_numbers[] = $number;\n\
    \        }\n    }\n    return $unique_numbers;\n}\n\nfunction candidate(...$args)\
    \ {\n    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5))\
    \ !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp7_hmdlct.php:23\n\
    Stack trace:\n#0 /tmp/tmp7_hmdlct.php(26): test()\n#1 {main}\n  thrown in /tmp/tmp7_hmdlct.php\
    \ on line 23\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// From a list of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\n// >>>\
    \ remove_duplicates([1, 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates($numbers)\
    \ {\n    $result = [];\n    foreach ($numbers as $number) {\n        if (!in_array($number,\
    \ $result)) {\n            $result[] = $number;\n        }\n    }\n    return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpbtzgg5br.php:23\n\
    Stack trace:\n#0 /tmp/tmpbtzgg5br.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpbtzgg5br.php\
    \ on line 23\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// From a list of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\n// >>>\
    \ remove_duplicates([1, 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates($numbers)\
    \ {\n    $result = [];\n    foreach ($numbers as $number) {\n        if (!in_array($number,\
    \ $result)) {\n            $result[] = $number;\n        }\n    }\n    return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpy3turh9n.php:23\n\
    Stack trace:\n#0 /tmp/tmpy3turh9n.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpy3turh9n.php\
    \ on line 23\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// From a list of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\n// >>>\
    \ remove_duplicates([1, 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates($numbers)\
    \ {\n    $result = [];\n    foreach ($numbers as $number) {\n        if (!in_array($number,\
    \ $result)) {\n            $result[] = $number;\n        }\n    }\n    return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp6ctk_ufo.php:23\n\
    Stack trace:\n#0 /tmp/tmp6ctk_ufo.php(26): test()\n#1 {main}\n  thrown in /tmp/tmp6ctk_ufo.php\
    \ on line 23\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// From a list of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\n// >>>\
    \ remove_duplicates([1, 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates($numbers)\
    \ {\n    $result = [];\n    foreach ($numbers as $number) {\n        if (!in_array($number,\
    \ $result)) {\n            $result[] = $number;\n        }\n    }\n    return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpvcbedo22.php:23\n\
    Stack trace:\n#0 /tmp/tmpvcbedo22.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpvcbedo22.php\
    \ on line 23\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// From a list of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\n// >>>\
    \ remove_duplicates([1, 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates($numbers)\
    \ {\n    $result = [];\n    foreach ($numbers as $number) {\n        if (!in_array($number,\
    \ $result)) {\n            $result[] = $number;\n        }\n    }\n    return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp0id4cn7b.php:23\n\
    Stack trace:\n#0 /tmp/tmp0id4cn7b.php(26): test()\n#1 {main}\n  thrown in /tmp/tmp0id4cn7b.php\
    \ on line 23\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// From a list of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\n// >>>\
    \ remove_duplicates([1, 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates($numbers)\
    \ {\n  $result = [];\n  foreach ($numbers as $number) {\n    if (!in_array($number,\
    \ $result)) {\n      $result[] = $number;\n    }\n  }\n  return $result;\n}\n\n\
    function candidate(...$args) {\n    return remove_duplicates(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3,\
    \ 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp0w3432m_.php:23\n\
    Stack trace:\n#0 /tmp/tmp0w3432m_.php(26): test()\n#1 {main}\n  thrown in /tmp/tmp0w3432m_.php\
    \ on line 23\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// From a list of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\n// >>>\
    \ remove_duplicates([1, 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates($numbers)\
    \ {\n    $result = [];\n    foreach ($numbers as $number) {\n        if (!in_array($number,\
    \ $result)) {\n            $result[] = $number;\n        }\n    }\n    return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp5qbzf_q0.php:23\n\
    Stack trace:\n#0 /tmp/tmp5qbzf_q0.php(26): test()\n#1 {main}\n  thrown in /tmp/tmp5qbzf_q0.php\
    \ on line 23\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// From a list of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\n// >>>\
    \ remove_duplicates([1, 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates($numbers)\
    \ {\n    $result = [];\n    foreach ($numbers as $number) {\n        if (!in_array($number,\
    \ $result)) {\n            $result[] = $number;\n        }\n    }\n    return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpctxkhck5.php:23\n\
    Stack trace:\n#0 /tmp/tmpctxkhck5.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpctxkhck5.php\
    \ on line 23\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// From a list of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\n// >>>\
    \ remove_duplicates([1, 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates($numbers)\
    \ {\n    $result = [];\n    foreach ($numbers as $number) {\n        if (!in_array($number,\
    \ $result)) {\n            $result[] = $number;\n        }\n    }\n    return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpfph0dg1_.php:23\n\
    Stack trace:\n#0 /tmp/tmpfph0dg1_.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpfph0dg1_.php\
    \ on line 23\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// From a list of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\n// >>>\
    \ remove_duplicates([1, 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates($numbers)\
    \ {\n    $unique = [];\n    foreach ($numbers as $number) {\n        if (!in_array($number,\
    \ $unique)) {\n            $unique[] = $number;\n        }\n    }\n    return\
    \ $unique;\n}\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmppdbi_1dy.php:23\n\
    Stack trace:\n#0 /tmp/tmppdbi_1dy.php(26): test()\n#1 {main}\n  thrown in /tmp/tmppdbi_1dy.php\
    \ on line 23\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// From a list of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\n// >>>\
    \ remove_duplicates([1, 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates($numbers)\
    \ {\n    $result = [];\n    foreach ($numbers as $number) {\n        if (!in_array($number,\
    \ $result)) {\n            $result[] = $number;\n        }\n    }\n    return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpf0_embmp.php:23\n\
    Stack trace:\n#0 /tmp/tmpf0_embmp.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpf0_embmp.php\
    \ on line 23\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// From a list of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\n// >>>\
    \ remove_duplicates([1, 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates($numbers)\
    \ {\n    $result = [];\n    foreach ($numbers as $number) {\n        if (!in_array($number,\
    \ $result)) {\n            $result[] = $number;\n        }\n    }\n    return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpdpv5zxct.php:23\n\
    Stack trace:\n#0 /tmp/tmpdpv5zxct.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpdpv5zxct.php\
    \ on line 23\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// From a list of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\n// >>>\
    \ remove_duplicates([1, 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates($numbers)\
    \ {\n    $result = [];\n    foreach ($numbers as $number) {\n        if (!in_array($number,\
    \ $result)) {\n            $result[] = $number;\n        }\n    }\n    return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp1rdsk769.php:23\n\
    Stack trace:\n#0 /tmp/tmp1rdsk769.php(26): test()\n#1 {main}\n  thrown in /tmp/tmp1rdsk769.php\
    \ on line 23\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// From a list of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\n// >>>\
    \ remove_duplicates([1, 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates($numbers)\
    \ {\n    $result = [];\n    foreach ($numbers as $number) {\n        if (!in_array($number,\
    \ $result)) {\n            $result[] = $number;\n        }\n    }\n    return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp3ttctqlt.php:23\n\
    Stack trace:\n#0 /tmp/tmp3ttctqlt.php(26): test()\n#1 {main}\n  thrown in /tmp/tmp3ttctqlt.php\
    \ on line 23\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// From a list of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\n// >>>\
    \ remove_duplicates([1, 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates($numbers)\
    \ {\n    $result = [];\n    $numbers_count = count($numbers);\n    for ($i = 0;\
    \ $i < $numbers_count; $i++) {\n        if (count(array_keys($numbers, $numbers[$i]))\
    \ == 1) {\n            $result[] = $numbers[$i];\n        }\n    }\n    return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// From a list of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\n// >>>\
    \ remove_duplicates([1, 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates($numbers)\
    \ {\n    $result = [];\n    $count = count($numbers);\n    for ($i = 0; $i < $count;\
    \ $i++) {\n        $number = $numbers[$i];\n        if (in_array($number, $result))\
    \ {\n            continue;\n        }\n        $result[] = $number;\n    }\n \
    \   return $result;\n}\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpux9rbazm.php:26\n\
    Stack trace:\n#0 /tmp/tmpux9rbazm.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpux9rbazm.php\
    \ on line 26\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// From a list of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\n// >>>\
    \ remove_duplicates([1, 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates($numbers)\
    \ {\n    $result = [];\n    $count = count($numbers);\n    for ($i = 0; $i < $count;\
    \ $i++) {\n        $number = $numbers[$i];\n        if (!in_array($number, $result))\
    \ {\n            $result[] = $number;\n        }\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpl_6q3u40.php:25\n\
    Stack trace:\n#0 /tmp/tmpl_6q3u40.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpl_6q3u40.php\
    \ on line 25\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// From a list of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\n// >>>\
    \ remove_duplicates([1, 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates($numbers)\
    \ {\n  $result = [];\n  foreach ($numbers as $number) {\n    if (!in_array($number,\
    \ $result)) {\n      $result[] = $number;\n    }\n  }\n  return $result;\n}\n\n\
    function candidate(...$args) {\n    return remove_duplicates(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3,\
    \ 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmplbhsku4d.php:23\n\
    Stack trace:\n#0 /tmp/tmplbhsku4d.php(26): test()\n#1 {main}\n  thrown in /tmp/tmplbhsku4d.php\
    \ on line 23\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// From a list of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\n// >>>\
    \ remove_duplicates([1, 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates($numbers)\
    \ {\n    $result = [];\n    foreach ($numbers as $number) {\n        if (!in_array($number,\
    \ $result)) {\n            $result[] = $number;\n        }\n    }\n    return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpr3o2cdwu.php:23\n\
    Stack trace:\n#0 /tmp/tmpr3o2cdwu.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpr3o2cdwu.php\
    \ on line 23\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// From a list of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\n// >>>\
    \ remove_duplicates([1, 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates($numbers)\
    \ {\n    $result = [];\n    foreach ($numbers as $number) {\n        if (!in_array($number,\
    \ $result)) {\n            $result[] = $number;\n        }\n    }\n    return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpk4mqroui.php:23\n\
    Stack trace:\n#0 /tmp/tmpk4mqroui.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpk4mqroui.php\
    \ on line 23\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// From a list of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\n// >>>\
    \ remove_duplicates([1, 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates($numbers)\
    \ {\n    $numbers = array_unique($numbers);\n    return $numbers;\n}\n\nfunction\
    \ candidate(...$args) {\n    return remove_duplicates(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3,\
    \ 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp7ghc2q17.php:18\n\
    Stack trace:\n#0 /tmp/tmp7ghc2q17.php(21): test()\n#1 {main}\n  thrown in /tmp/tmp7ghc2q17.php\
    \ on line 18\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// From a list of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\n// >>>\
    \ remove_duplicates([1, 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates($numbers)\
    \ {\n    $result = [];\n    foreach ($numbers as $number) {\n        if (!in_array($number,\
    \ $result)) {\n            $result[] = $number;\n        }\n    }\n    return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpc1unn1q_.php:23\n\
    Stack trace:\n#0 /tmp/tmpc1unn1q_.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpc1unn1q_.php\
    \ on line 23\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// From a list of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\n// >>>\
    \ remove_duplicates([1, 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates($numbers)\
    \ {\n    $numbers = array_unique($numbers);\n    return $numbers;\n}\n\nfunction\
    \ candidate(...$args) {\n    return remove_duplicates(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3,\
    \ 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp6fdq06yo.php:18\n\
    Stack trace:\n#0 /tmp/tmp6fdq06yo.php(21): test()\n#1 {main}\n  thrown in /tmp/tmp6fdq06yo.php\
    \ on line 18\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// From a list of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\n// >>>\
    \ remove_duplicates([1, 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates($numbers)\
    \ {\n    $result = [];\n    foreach ($numbers as $number) {\n        if (!in_array($number,\
    \ $result)) {\n            $result[] = $number;\n        }\n    }\n    return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpoxuzrh7p.php:23\n\
    Stack trace:\n#0 /tmp/tmpoxuzrh7p.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpoxuzrh7p.php\
    \ on line 23\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// From a list of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\n// >>>\
    \ remove_duplicates([1, 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates($numbers)\
    \ {\n  $unique_numbers = [];\n  foreach ($numbers as $number) {\n    if (!in_array($number,\
    \ $unique_numbers)) {\n      $unique_numbers[] = $number;\n    }\n  }\n  return\
    \ $unique_numbers;\n}\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpgy5q3lx8.php:23\n\
    Stack trace:\n#0 /tmp/tmpgy5q3lx8.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpgy5q3lx8.php\
    \ on line 23\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// From a list of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\n// >>>\
    \ remove_duplicates([1, 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates($numbers)\
    \ {\n    $result = [];\n    $occurrences = [];\n    foreach ($numbers as $number)\
    \ {\n        if (!isset($occurrences[$number])) {\n            $occurrences[$number]\
    \ = 0;\n        }\n        $occurrences[$number]++;\n    }\n    foreach ($numbers\
    \ as $number) {\n        if ($occurrences[$number] == 1) {\n            $result[]\
    \ = $number;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5))\
    \ !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// From a list of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\n// >>>\
    \ remove_duplicates([1, 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates($numbers)\
    \ {\n    $result = [];\n    foreach ($numbers as $number) {\n        if (!in_array($number,\
    \ $result)) {\n            $result[] = $number;\n        }\n    }\n    return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpvb8ih5gj.php:23\n\
    Stack trace:\n#0 /tmp/tmpvb8ih5gj.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpvb8ih5gj.php\
    \ on line 23\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// From a list of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\n// >>>\
    \ remove_duplicates([1, 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates($numbers)\
    \ {\n    $result = [];\n    foreach ($numbers as $number) {\n        if (!in_array($number,\
    \ $result)) {\n            $result[] = $number;\n        }\n    }\n    return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp6dup_fq0.php:23\n\
    Stack trace:\n#0 /tmp/tmp6dup_fq0.php(26): test()\n#1 {main}\n  thrown in /tmp/tmp6dup_fq0.php\
    \ on line 23\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// From a list of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\n// >>>\
    \ remove_duplicates([1, 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates($numbers)\
    \ {\n    $result = [];\n    foreach ($numbers as $number) {\n        if (!in_array($number,\
    \ $result)) {\n            $result[] = $number;\n        }\n    }\n    return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpb3543dxb.php:23\n\
    Stack trace:\n#0 /tmp/tmpb3543dxb.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpb3543dxb.php\
    \ on line 23\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// From a list of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\n// >>>\
    \ remove_duplicates([1, 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates($numbers)\
    \ {\n    $unique = [];\n    foreach ($numbers as $number) {\n        if (!in_array($number,\
    \ $unique)) {\n            $unique[] = $number;\n        }\n    }\n    return\
    \ $unique;\n}\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpgb9xwxtl.php:23\n\
    Stack trace:\n#0 /tmp/tmpgb9xwxtl.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpgb9xwxtl.php\
    \ on line 23\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// From a list of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\n// >>>\
    \ remove_duplicates([1, 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates($numbers)\
    \ {\n    $unique_numbers = [];\n    foreach ($numbers as $number) {\n        if\
    \ (!in_array($number, $unique_numbers)) {\n            $unique_numbers[] = $number;\n\
    \        }\n    }\n    return $unique_numbers;\n}\n\nfunction candidate(...$args)\
    \ {\n    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5))\
    \ !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp7lgdfgvb.php:23\n\
    Stack trace:\n#0 /tmp/tmp7lgdfgvb.php(26): test()\n#1 {main}\n  thrown in /tmp/tmp7lgdfgvb.php\
    \ on line 23\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// From a list of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\n// >>>\
    \ remove_duplicates([1, 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates($numbers)\
    \ {\n    $unique = [];\n    foreach ($numbers as $number) {\n        if (!in_array($number,\
    \ $unique)) {\n            $unique[] = $number;\n        }\n    }\n    return\
    \ $unique;\n}\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpjz7g78by.php:23\n\
    Stack trace:\n#0 /tmp/tmpjz7g78by.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpjz7g78by.php\
    \ on line 23\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// From a list of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\n// >>>\
    \ remove_duplicates([1, 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates($numbers)\
    \ {\n    $result = [];\n    foreach ($numbers as $number) {\n        if (!in_array($number,\
    \ $result)) {\n            $result[] = $number;\n        }\n    }\n    return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpttndotcv.php:23\n\
    Stack trace:\n#0 /tmp/tmpttndotcv.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpttndotcv.php\
    \ on line 23\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// From a list of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\n// >>>\
    \ remove_duplicates([1, 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates($numbers)\
    \ {\n    $result = [];\n    $occurences = [];\n    foreach ($numbers as $number)\
    \ {\n        if (!isset($occurences[$number])) {\n            $occurences[$number]\
    \ = 0;\n        }\n        $occurences[$number]++;\n    }\n    foreach ($numbers\
    \ as $number) {\n        if ($occurences[$number] == 1) {\n            $result[]\
    \ = $number;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5))\
    \ !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// From a list of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\n// >>>\
    \ remove_duplicates([1, 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates($numbers)\
    \ {\n    $result = [];\n    foreach ($numbers as $number) {\n        if (!in_array($number,\
    \ $result)) {\n            $result[] = $number;\n        }\n    }\n    return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpr98rdz76.php:23\n\
    Stack trace:\n#0 /tmp/tmpr98rdz76.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpr98rdz76.php\
    \ on line 23\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// From a list of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\n// >>>\
    \ remove_duplicates([1, 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates($numbers)\
    \ {\n    $result = [];\n    foreach ($numbers as $number) {\n        if (!in_array($number,\
    \ $result)) {\n            $result[] = $number;\n        }\n    }\n    return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmph59qwej9.php:23\n\
    Stack trace:\n#0 /tmp/tmph59qwej9.php(26): test()\n#1 {main}\n  thrown in /tmp/tmph59qwej9.php\
    \ on line 23\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// From a list of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\n// >>>\
    \ remove_duplicates([1, 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates($numbers)\
    \ {\n    $result = [];\n    foreach ($numbers as $number) {\n        if (!in_array($number,\
    \ $result)) {\n            $result[] = $number;\n        }\n    }\n    return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpd6dcnzy9.php:23\n\
    Stack trace:\n#0 /tmp/tmpd6dcnzy9.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpd6dcnzy9.php\
    \ on line 23\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// From a list of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\n// >>>\
    \ remove_duplicates([1, 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates($numbers)\
    \ {\n    $result = [];\n    foreach ($numbers as $number) {\n        if (!in_array($number,\
    \ $result)) {\n            $result[] = $number;\n        }\n    }\n    return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpqzsu6vnk.php:23\n\
    Stack trace:\n#0 /tmp/tmpqzsu6vnk.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpqzsu6vnk.php\
    \ on line 23\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// From a list of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\n// >>>\
    \ remove_duplicates([1, 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates($numbers)\
    \ {\n    $result = [];\n    foreach ($numbers as $number) {\n        if (!in_array($number,\
    \ $result)) {\n            $result[] = $number;\n        }\n    }\n    return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp_og4uw5q.php:23\n\
    Stack trace:\n#0 /tmp/tmp_og4uw5q.php(26): test()\n#1 {main}\n  thrown in /tmp/tmp_og4uw5q.php\
    \ on line 23\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// From a list of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\n// >>>\
    \ remove_duplicates([1, 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates($numbers)\
    \ {\n    $result = [];\n    foreach ($numbers as $number) {\n        if (!in_array($number,\
    \ $result)) {\n            $result[] = $number;\n        }\n    }\n    return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp9_48_ate.php:23\n\
    Stack trace:\n#0 /tmp/tmp9_48_ate.php(26): test()\n#1 {main}\n  thrown in /tmp/tmp9_48_ate.php\
    \ on line 23\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// From a list of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\n// >>>\
    \ remove_duplicates([1, 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates($numbers)\
    \ {\n    $result = [];\n    $counts = array_count_values($numbers);\n    foreach\
    \ ($numbers as $number) {\n        if ($counts[$number] == 1) {\n            $result[]\
    \ = $number;\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5))\
    \ !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// From a list of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\n// >>>\
    \ remove_duplicates([1, 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates($numbers)\
    \ {\n    $result = [];\n    foreach ($numbers as $number) {\n        if (!in_array($number,\
    \ $result)) {\n            $result[] = $number;\n        }\n    }\n    return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpit8aanja.php:23\n\
    Stack trace:\n#0 /tmp/tmpit8aanja.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpit8aanja.php\
    \ on line 23\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// From a list of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\n// >>>\
    \ remove_duplicates([1, 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates($numbers)\
    \ {\n  $unique = [];\n  foreach ($numbers as $number) {\n    if (!in_array($number,\
    \ $unique)) {\n      $unique[] = $number;\n    }\n  }\n  return $unique;\n}\n\n\
    function candidate(...$args) {\n    return remove_duplicates(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3,\
    \ 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpllxpfvub.php:23\n\
    Stack trace:\n#0 /tmp/tmpllxpfvub.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpllxpfvub.php\
    \ on line 23\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// From a list of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\n// >>>\
    \ remove_duplicates([1, 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates($numbers)\
    \ {\n    $result = [];\n    foreach ($numbers as $number) {\n        if (!in_array($number,\
    \ $result)) {\n            $result[] = $number;\n        }\n    }\n    return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp216niq2j.php:23\n\
    Stack trace:\n#0 /tmp/tmp216niq2j.php(26): test()\n#1 {main}\n  thrown in /tmp/tmp216niq2j.php\
    \ on line 23\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// From a list of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\n// >>>\
    \ remove_duplicates([1, 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates($numbers)\
    \ {\n    $numbers = array_unique($numbers);\n    return $numbers;\n}\n\nfunction\
    \ candidate(...$args) {\n    return remove_duplicates(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3,\
    \ 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpg_mw9d90.php:18\n\
    Stack trace:\n#0 /tmp/tmpg_mw9d90.php(21): test()\n#1 {main}\n  thrown in /tmp/tmpg_mw9d90.php\
    \ on line 18\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// From a list of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\n// >>>\
    \ remove_duplicates([1, 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates($numbers)\
    \ {\n    $result = [];\n    foreach ($numbers as $number) {\n        if (!in_array($number,\
    \ $result)) {\n            $result[] = $number;\n        }\n    }\n    return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp3j4zz065.php:23\n\
    Stack trace:\n#0 /tmp/tmp3j4zz065.php(26): test()\n#1 {main}\n  thrown in /tmp/tmp3j4zz065.php\
    \ on line 23\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// From a list of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\n// >>>\
    \ remove_duplicates([1, 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates($numbers)\
    \ {\n    $unique_numbers = [];\n    foreach ($numbers as $number) {\n        if\
    \ (!in_array($number, $unique_numbers)) {\n            $unique_numbers[] = $number;\n\
    \        }\n    }\n    return $unique_numbers;\n}\n\nfunction candidate(...$args)\
    \ {\n    return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n \
    \   if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5))\
    \ !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp5w2aewny.php:23\n\
    Stack trace:\n#0 /tmp/tmp5w2aewny.php(26): test()\n#1 {main}\n  thrown in /tmp/tmp5w2aewny.php\
    \ on line 23\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// From a list of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\n// >>>\
    \ remove_duplicates([1, 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates($numbers)\
    \ {\n    $result = [];\n    foreach ($numbers as $number) {\n        if (!in_array($number,\
    \ $result)) {\n            $result[] = $number;\n        }\n    }\n    return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpglsja25a.php:23\n\
    Stack trace:\n#0 /tmp/tmpglsja25a.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpglsja25a.php\
    \ on line 23\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// From a list of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\n// >>>\
    \ remove_duplicates([1, 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates($numbers)\
    \ {\n    $result = [];\n    foreach ($numbers as $number) {\n        if (!in_array($number,\
    \ $result)) {\n            $result[] = $number;\n        }\n    }\n    return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp8s8yg1wy.php:23\n\
    Stack trace:\n#0 /tmp/tmp8s8yg1wy.php(26): test()\n#1 {main}\n  thrown in /tmp/tmp8s8yg1wy.php\
    \ on line 23\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// From a list of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\n// >>>\
    \ remove_duplicates([1, 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates($numbers)\
    \ {\n    $result = [];\n    $count = [];\n    foreach ($numbers as $number) {\n\
    \        if (!isset($count[$number])) {\n            $count[$number] = 0;\n  \
    \      }\n        $count[$number]++;\n    }\n    foreach ($numbers as $number)\
    \ {\n        if ($count[$number] == 1) {\n            $result[] = $number;\n \
    \       }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n \
    \   return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5)) !== array(1,\
    \ 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// From a list of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\n// >>>\
    \ remove_duplicates([1, 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates($numbers)\
    \ {\n\t$result = [];\n\tforeach ($numbers as $number) {\n\t\tif (!in_array($number,\
    \ $result)) {\n\t\t\t$result[] = $number;\n\t\t}\n\t}\n\treturn $result;\n}\n\n\
    function candidate(...$args) {\n    return remove_duplicates(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(array()) !== array()) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3,\
    \ 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpr9hjlf87.php:23\n\
    Stack trace:\n#0 /tmp/tmpr9hjlf87.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpr9hjlf87.php\
    \ on line 23\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// From a list of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\n// >>>\
    \ remove_duplicates([1, 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates($numbers)\
    \ {\n    $result = [];\n    $count = count($numbers);\n    for ($i = 0; $i < $count;\
    \ $i++) {\n        $number = $numbers[$i];\n        if (!in_array($number, $result))\
    \ {\n            $result[] = $number;\n        }\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpedxa2n7_.php:25\n\
    Stack trace:\n#0 /tmp/tmpedxa2n7_.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpedxa2n7_.php\
    \ on line 25\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// From a list of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\n// >>>\
    \ remove_duplicates([1, 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates($numbers)\
    \ {\n    $result = [];\n    foreach ($numbers as $number) {\n        if (!in_array($number,\
    \ $result)) {\n            $result[] = $number;\n        }\n    }\n    return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpx8ab7ibb.php:23\n\
    Stack trace:\n#0 /tmp/tmpx8ab7ibb.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpx8ab7ibb.php\
    \ on line 23\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// From a list of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\n// >>>\
    \ remove_duplicates([1, 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates($numbers)\
    \ {\n    $result = [];\n    foreach ($numbers as $number) {\n        if (!in_array($number,\
    \ $result)) {\n            $result[] = $number;\n        }\n    }\n    return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpfiei5jxh.php:23\n\
    Stack trace:\n#0 /tmp/tmpfiei5jxh.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpfiei5jxh.php\
    \ on line 23\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// From a list of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\n// >>>\
    \ remove_duplicates([1, 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates($numbers)\
    \ {\n    $result = [];\n    $count = [];\n    foreach ($numbers as $number) {\n\
    \        if (!isset($count[$number])) {\n            $count[$number] = 0;\n  \
    \      }\n        $count[$number]++;\n    }\n    foreach ($numbers as $number)\
    \ {\n        if ($count[$number] == 1) {\n            $result[] = $number;\n \
    \       }\n    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n \
    \   return remove_duplicates(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(1, 2, 3, 4)) !== array(1, 2, 3, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 2, 3, 2, 4, 3, 5)) !== array(1,\
    \ 4, 5)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// From a list of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\n// >>>\
    \ remove_duplicates([1, 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates($numbers)\
    \ {\n    $result = [];\n    foreach ($numbers as $number) {\n        if (!in_array($number,\
    \ $result)) {\n            $result[] = $number;\n        }\n    }\n    return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmplcnlbtgm.php:23\n\
    Stack trace:\n#0 /tmp/tmplcnlbtgm.php(26): test()\n#1 {main}\n  thrown in /tmp/tmplcnlbtgm.php\
    \ on line 23\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// From a list of integers, remove all elements that occur more\
    \ than once.\n// Keep order of elements left the same as in the input.\n// >>>\
    \ remove_duplicates([1, 2, 3, 2, 4])\n// [1, 3, 4]\nfunction remove_duplicates($numbers)\
    \ {\n    $result = [];\n    $count = count($numbers);\n    for ($i = 0; $i < $count;\
    \ $i++) {\n        $number = $numbers[$i];\n        if (!in_array($number, $result))\
    \ {\n            $result[] = $number;\n        }\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return remove_duplicates(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== array()) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 2, 3, 4)) !==\
    \ array(1, 2, 3, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 2, 3, 2, 4, 3, 5)) !== array(1, 4, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmptu2j2lo9.php:25\n\
    Stack trace:\n#0 /tmp/tmptu2j2lo9.php(28): test()\n#1 {main}\n  thrown in /tmp/tmptu2j2lo9.php\
    \ on line 25\n"
  exit_code: 255
  status: Exception

name: HumanEval_108_count_nums
language: php
results:
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n    $count = 0;\n    foreach ($arr as $num) {\n        $sum = 0;\n      \
    \  if ($num < 0) {\n            $sum += $num % 10;\n            $num = -($num\
    \ / 10);\n        }\n        while ($num > 0) {\n            $sum += $num % 10;\n\
    \            $num /= 10;\n        }\n        if ($sum > 0) {\n            $count++;\n\
    \        }\n    }\n    return $count;\n}\n\nfunction candidate(...$args) {\n \
    \   return count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp6cqlr850.php:38\n\
    Stack trace:\n#0 /tmp/tmp6cqlr850.php(43): test()\n#1 {main}\n  thrown in /tmp/tmp6cqlr850.php\
    \ on line 38\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n    $count = 0;\n    foreach ($arr as $num) {\n        $sum = 0;\n      \
    \  $num = abs($num);\n        while ($num > 0) {\n            $sum += $num % 10;\n\
    \            $num = (int)($num / 10);\n        }\n        if ($sum > 0) {\n  \
    \          $count++;\n        }\n    }\n    return $count;\n}\n\nfunction candidate(...$args)\
    \ {\n    return count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp02l4l0x8.php:31\n\
    Stack trace:\n#0 /tmp/tmp02l4l0x8.php(40): test()\n#1 {main}\n  thrown in /tmp/tmp02l4l0x8.php\
    \ on line 31\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n    $count = 0;\n    foreach ($arr as $num) {\n        $sum = 0;\n      \
    \  if ($num < 0) {\n            $num = -$num;\n            $sum += -1;\n     \
    \   }\n        while ($num > 0) {\n            $sum += $num % 10;\n          \
    \  $num = (int)($num / 10);\n        }\n        if ($sum > 0) {\n            $count++;\n\
    \        }\n    }\n    return $count;\n}\n\nfunction candidate(...$args) {\n \
    \   return count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpfqxyqrop.php:34\n\
    Stack trace:\n#0 /tmp/tmpfqxyqrop.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpfqxyqrop.php\
    \ on line 34\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n    $count = 0;\n    foreach ($arr as $num) {\n        $sum = 0;\n      \
    \  $num = abs($num);\n        while ($num > 0) {\n            $sum += $num % 10;\n\
    \            $num = floor($num / 10);\n        }\n        if ($sum > 0) {\n  \
    \          $count++;\n        }\n    }\n    return $count;\n}\n\nfunction candidate(...$args)\
    \ {\n    return count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpn26beg0k.php:31\n\
    Stack trace:\n#0 /tmp/tmpn26beg0k.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpn26beg0k.php\
    \ on line 31\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n    $count = 0;\n    foreach ($arr as $num) {\n        $sum = 0;\n      \
    \  $num = abs($num);\n        while ($num > 0) {\n            $sum += $num % 10;\n\
    \            $num = floor($num / 10);\n        }\n        if ($sum > 0) {\n  \
    \          $count++;\n        }\n    }\n    return $count;\n}\n\nfunction candidate(...$args)\
    \ {\n    return count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpa26w4htg.php:31\n\
    Stack trace:\n#0 /tmp/tmpa26w4htg.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpa26w4htg.php\
    \ on line 31\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n    $count = 0;\n    foreach ($arr as $num) {\n        $sum = 0;\n      \
    \  $num = abs($num);\n        while ($num > 0) {\n            $sum += $num % 10;\n\
    \            $num = floor($num / 10);\n        }\n        if ($sum > 0) {\n  \
    \          $count++;\n        }\n    }\n    return $count;\n}\n\nfunction candidate(...$args)\
    \ {\n    return count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpzi4y_5gh.php:31\n\
    Stack trace:\n#0 /tmp/tmpzi4y_5gh.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpzi4y_5gh.php\
    \ on line 31\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n    $count = 0;\n    foreach ($arr as $num) {\n        $sum = 0;\n      \
    \  if ($num < 0) {\n            $num = -$num;\n            $sum += -1;\n     \
    \   }\n        while ($num > 0) {\n            $sum += $num % 10;\n          \
    \  $num = (int)($num / 10);\n        }\n        if ($sum > 0) {\n            $count++;\n\
    \        }\n    }\n    return $count;\n}\n\nfunction candidate(...$args) {\n \
    \   return count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpqst7nsj5.php:34\n\
    Stack trace:\n#0 /tmp/tmpqst7nsj5.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpqst7nsj5.php\
    \ on line 34\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n    $count = 0;\n    foreach ($arr as $num) {\n        $sum = 0;\n      \
    \  $num = abs($num);\n        while ($num > 0) {\n            $sum += $num % 10;\n\
    \            $num = floor($num / 10);\n        }\n        if ($sum > 0) {\n  \
    \          $count++;\n        }\n    }\n    return $count;\n}\n\nfunction candidate(...$args)\
    \ {\n    return count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmps008iaa6.php:31\n\
    Stack trace:\n#0 /tmp/tmps008iaa6.php(40): test()\n#1 {main}\n  thrown in /tmp/tmps008iaa6.php\
    \ on line 31\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n  $count = 0;\n  foreach ($arr as $num) {\n    $sum = 0;\n    $num = abs($num);\n\
    \    while ($num > 0) {\n      $sum += $num % 10;\n      $num = floor($num / 10);\n\
    \    }\n    if ($sum > 0) {\n      $count++;\n    }\n  }\n  return $count;\n}\n\
    \nfunction candidate(...$args) {\n    return count_nums(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-1, -2, 0)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 2, -2, 3, 4, 5)) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 6, 9, -6, 0,\
    \ 1, 5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 100, 98, -7, 1, -1)) !== 4) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(12, 23, 34, -45, -56, 0)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpbr74v0ii.php:31\n\
    Stack trace:\n#0 /tmp/tmpbr74v0ii.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpbr74v0ii.php\
    \ on line 31\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n    $count = 0;\n    foreach ($arr as $num) {\n        $sum = 0;\n      \
    \  $num = abs($num);\n        while ($num > 0) {\n            $sum += $num % 10;\n\
    \            $num = (int)($num / 10);\n        }\n        if ($sum > 0) {\n  \
    \          $count++;\n        }\n    }\n    return $count;\n}\n\nfunction candidate(...$args)\
    \ {\n    return count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpsniyt7tk.php:31\n\
    Stack trace:\n#0 /tmp/tmpsniyt7tk.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpsniyt7tk.php\
    \ on line 31\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n    $count = 0;\n    foreach ($arr as $num) {\n        $sum = 0;\n      \
    \  if ($num < 0) {\n            $num = $num * -1;\n            $sum = $sum + $num\
    \ % 10;\n            $num = $num / 10;\n        }\n        while ($num > 0) {\n\
    \            $sum = $sum + $num % 10;\n            $num = $num / 10;\n       \
    \ }\n        if ($sum > 0) {\n            $count = $count + 1;\n        }\n  \
    \  }\n    return $count;\n}\n\nfunction candidate(...$args) {\n    return count_nums(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, 0)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 2, -2, 3, 4, 5)) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 6, 9, -6, 0,\
    \ 1, 5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 100, 98, -7, 1, -1)) !== 4) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(12, 23, 34, -45, -56, 0)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpi84ryaob.php:35\n\
    Stack trace:\n#0 /tmp/tmpi84ryaob.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpi84ryaob.php\
    \ on line 35\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n  $count = 0;\n  foreach ($arr as $num) {\n    $sum = 0;\n    if ($num <\
    \ 0) {\n      $sum += abs($num) % 10;\n      $num = abs($num) / 10;\n    }\n \
    \   while ($num > 0) {\n      $sum += $num % 10;\n      $num = $num / 10;\n  \
    \  }\n    if ($sum > 0) {\n      $count++;\n    }\n  }\n  return $count;\n}\n\n\
    function candidate(...$args) {\n    return count_nums(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-1, -2, 0)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 2, -2, 3, 4, 5)) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 6, 9, -6, 0,\
    \ 1, 5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 100, 98, -7, 1, -1)) !== 4) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(12, 23, 34, -45, -56, 0)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp05p9ts02.php:34\n\
    Stack trace:\n#0 /tmp/tmp05p9ts02.php(43): test()\n#1 {main}\n  thrown in /tmp/tmp05p9ts02.php\
    \ on line 34\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n    $count = 0;\n    foreach ($arr as $num) {\n        $sum = 0;\n      \
    \  $num = abs($num);\n        while ($num > 0) {\n            $sum += $num % 10;\n\
    \            $num = floor($num / 10);\n        }\n        if ($sum > 0) {\n  \
    \          $count++;\n        }\n    }\n    return $count;\n}\n\nfunction candidate(...$args)\
    \ {\n    return count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpclzzj_8v.php:31\n\
    Stack trace:\n#0 /tmp/tmpclzzj_8v.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpclzzj_8v.php\
    \ on line 31\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n    $count = 0;\n    foreach ($arr as $num) {\n        $sum = 0;\n      \
    \  $num = abs($num);\n        while ($num > 0) {\n            $sum += $num % 10;\n\
    \            $num = floor($num / 10);\n        }\n        if ($sum > 0) {\n  \
    \          $count++;\n        }\n    }\n    return $count;\n}\n\nfunction candidate(...$args)\
    \ {\n    return count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp6i9bu5mp.php:31\n\
    Stack trace:\n#0 /tmp/tmp6i9bu5mp.php(40): test()\n#1 {main}\n  thrown in /tmp/tmp6i9bu5mp.php\
    \ on line 31\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n    $count = 0;\n    foreach ($arr as $num) {\n        $sum = 0;\n      \
    \  $num = abs($num);\n        while ($num > 0) {\n            $sum += $num % 10;\n\
    \            $num = floor($num / 10);\n        }\n        if ($sum > 0) {\n  \
    \          $count++;\n        }\n    }\n    return $count;\n}\nfunction candidate(...$args)\
    \ {\n    return count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp9xsgd9xz.php:30\n\
    Stack trace:\n#0 /tmp/tmp9xsgd9xz.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp9xsgd9xz.php\
    \ on line 30\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n    $count = 0;\n    foreach ($arr as $num) {\n        if ($num < 0) {\n\
    \            $num = -$num;\n        }\n        $sum = 0;\n        while ($num\
    \ > 0) {\n            $sum += $num % 10;\n            $num = (int)($num / 10);\n\
    \        }\n        if ($sum > 0) {\n            $count++;\n        }\n    }\n\
    \    return $count;\n}\n\nfunction candidate(...$args) {\n    return count_nums(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, 0)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 2, -2, 3, 4, 5)) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 6, 9, -6, 0,\
    \ 1, 5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 100, 98, -7, 1, -1)) !== 4) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(12, 23, 34, -45, -56, 0)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpcv95syg1.php:33\n\
    Stack trace:\n#0 /tmp/tmpcv95syg1.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpcv95syg1.php\
    \ on line 33\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n    $count = 0;\n    foreach ($arr as $num) {\n        $sum = 0;\n      \
    \  if ($num < 0) {\n            $num = -$num;\n            $sum += -1;\n     \
    \   }\n        while ($num > 0) {\n            $sum += $num % 10;\n          \
    \  $num = (int)($num / 10);\n        }\n        if ($sum > 0) {\n            $count++;\n\
    \        }\n    }\n    return $count;\n}\n\nfunction candidate(...$args) {\n \
    \   return count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmppvmayzk8.php:34\n\
    Stack trace:\n#0 /tmp/tmppvmayzk8.php(43): test()\n#1 {main}\n  thrown in /tmp/tmppvmayzk8.php\
    \ on line 34\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n    $count = 0;\n    foreach ($arr as $num) {\n        $sum = 0;\n      \
    \  if ($num < 0) {\n            $num = abs($num);\n            $sum += $num %\
    \ 10;\n            $num = floor($num / 10);\n        }\n        while ($num >\
    \ 0) {\n            $sum += $num % 10;\n            $num = floor($num / 10);\n\
    \        }\n        if ($sum > 0) {\n            $count++;\n        }\n    }\n\
    \    return $count;\n}\n\nfunction candidate(...$args) {\n    return count_nums(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, 0)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 2, -2, 3, 4, 5)) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 6, 9, -6, 0,\
    \ 1, 5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 100, 98, -7, 1, -1)) !== 4) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(12, 23, 34, -45, -56, 0)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp2y2ovt8q.php:35\n\
    Stack trace:\n#0 /tmp/tmp2y2ovt8q.php(44): test()\n#1 {main}\n  thrown in /tmp/tmp2y2ovt8q.php\
    \ on line 35\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n    $count = 0;\n    foreach ($arr as $num) {\n        $sum = 0;\n      \
    \  $num = abs($num);\n        while ($num > 0) {\n            $sum += $num % 10;\n\
    \            $num = floor($num / 10);\n        }\n        if ($sum > 0) {\n  \
    \          $count++;\n        }\n    }\n    return $count;\n}\n\nfunction candidate(...$args)\
    \ {\n    return count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpz_li34k7.php:31\n\
    Stack trace:\n#0 /tmp/tmpz_li34k7.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpz_li34k7.php\
    \ on line 31\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n    $count = 0;\n    foreach ($arr as $num) {\n        $sum = 0;\n      \
    \  if ($num < 0) {\n            $num = -$num;\n            $sum += $num % 10;\n\
    \            $num = (int)($num / 10);\n        }\n        while ($num > 0) {\n\
    \            $sum += $num % 10;\n            $num = (int)($num / 10);\n      \
    \  }\n        if ($sum > 0) {\n            $count++;\n        }\n    }\n    return\
    \ $count;\n}\n\nfunction candidate(...$args) {\n    return count_nums(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, 0)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 2, -2, 3, 4, 5)) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 6, 9, -6, 0,\
    \ 1, 5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 100, 98, -7, 1, -1)) !== 4) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(12, 23, 34, -45, -56, 0)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpd4v7unz4.php:35\n\
    Stack trace:\n#0 /tmp/tmpd4v7unz4.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpd4v7unz4.php\
    \ on line 35\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n    $count = 0;\n    foreach ($arr as $num) {\n        $sum = 0;\n      \
    \  $num = abs($num);\n        while ($num > 0) {\n            $sum += $num % 10;\n\
    \            $num = floor($num / 10);\n        }\n        if ($sum > 0) {\n  \
    \          $count++;\n        }\n    }\n    return $count;\n}\n\nfunction candidate(...$args)\
    \ {\n    return count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp569lp8gz.php:31\n\
    Stack trace:\n#0 /tmp/tmp569lp8gz.php(40): test()\n#1 {main}\n  thrown in /tmp/tmp569lp8gz.php\
    \ on line 31\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n    $count = 0;\n    foreach ($arr as $num) {\n        $sum = 0;\n      \
    \  $num = abs($num);\n        while ($num > 0) {\n            $sum += $num % 10;\n\
    \            $num = floor($num / 10);\n        }\n        if ($sum > 0) {\n  \
    \          $count++;\n        }\n    }\n    return $count;\n}\n\nfunction candidate(...$args)\
    \ {\n    return count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp5tsg8lxw.php:31\n\
    Stack trace:\n#0 /tmp/tmp5tsg8lxw.php(40): test()\n#1 {main}\n  thrown in /tmp/tmp5tsg8lxw.php\
    \ on line 31\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n  $count = 0;\n  foreach ($arr as $num) {\n    $sum = 0;\n    $num = abs($num);\n\
    \    while ($num > 0) {\n      $sum += $num % 10;\n      $num = floor($num / 10);\n\
    \    }\n    if ($sum > 0) {\n      $count++;\n    }\n  }\n  return $count;\n}\n\
    \nfunction candidate(...$args) {\n    return count_nums(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-1, -2, 0)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 2, -2, 3, 4, 5)) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 6, 9, -6, 0,\
    \ 1, 5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 100, 98, -7, 1, -1)) !== 4) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(12, 23, 34, -45, -56, 0)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp1k8hvfcz.php:31\n\
    Stack trace:\n#0 /tmp/tmp1k8hvfcz.php(40): test()\n#1 {main}\n  thrown in /tmp/tmp1k8hvfcz.php\
    \ on line 31\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n    $count = 0;\n    foreach ($arr as $num) {\n        if ($num < 0) {\n\
    \            $num = -$num;\n        }\n        $sum = 0;\n        while ($num\
    \ > 0) {\n            $sum += $num % 10;\n            $num = (int)($num / 10);\n\
    \        }\n        if ($sum > 0) {\n            $count++;\n        }\n    }\n\
    \    return $count;\n}\n\nfunction candidate(...$args) {\n    return count_nums(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, 0)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 2, -2, 3, 4, 5)) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 6, 9, -6, 0,\
    \ 1, 5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 100, 98, -7, 1, -1)) !== 4) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(12, 23, 34, -45, -56, 0)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpg26wux4d.php:33\n\
    Stack trace:\n#0 /tmp/tmpg26wux4d.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpg26wux4d.php\
    \ on line 33\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n    $count = 0;\n    foreach ($arr as $num) {\n        $sum = 0;\n      \
    \  $num = abs($num);\n        while ($num > 0) {\n            $sum += $num % 10;\n\
    \            $num = (int)($num / 10);\n        }\n        if ($sum > 0) {\n  \
    \          $count++;\n        }\n    }\n    return $count;\n}\n\nfunction candidate(...$args)\
    \ {\n    return count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpqlajrw38.php:31\n\
    Stack trace:\n#0 /tmp/tmpqlajrw38.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpqlajrw38.php\
    \ on line 31\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n    $count = 0;\n    foreach ($arr as $num) {\n        $sum = 0;\n      \
    \  $num = abs($num);\n        while ($num > 0) {\n            $sum += $num % 10;\n\
    \            $num = floor($num / 10);\n        }\n        if ($sum > 0) {\n  \
    \          $count++;\n        }\n    }\n    return $count;\n}\n\nfunction candidate(...$args)\
    \ {\n    return count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpvblra0nu.php:31\n\
    Stack trace:\n#0 /tmp/tmpvblra0nu.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpvblra0nu.php\
    \ on line 31\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n    $count = 0;\n    foreach ($arr as $num) {\n        $sum = 0;\n      \
    \  if ($num < 0) {\n            $sum += abs($num) % 10;\n            $num = abs($num)\
    \ / 10;\n        }\n        while ($num > 0) {\n            $sum += $num % 10;\n\
    \            $num = $num / 10;\n        }\n        if ($sum > 0) {\n         \
    \   $count++;\n        }\n    }\n    return $count;\n}\n\nfunction candidate(...$args)\
    \ {\n    return count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp3lpmf9jr.php:34\n\
    Stack trace:\n#0 /tmp/tmp3lpmf9jr.php(43): test()\n#1 {main}\n  thrown in /tmp/tmp3lpmf9jr.php\
    \ on line 34\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n    $count = 0;\n    foreach ($arr as $num) {\n        $sum = 0;\n      \
    \  if ($num < 0) {\n            $num = -$num;\n            $sum += -1;\n     \
    \   }\n        while ($num > 0) {\n            $sum += $num % 10;\n          \
    \  $num = (int)($num / 10);\n        }\n        if ($sum > 0) {\n            $count++;\n\
    \        }\n    }\n    return $count;\n}\n\nfunction candidate(...$args) {\n \
    \   return count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpt4mqmbvk.php:34\n\
    Stack trace:\n#0 /tmp/tmpt4mqmbvk.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpt4mqmbvk.php\
    \ on line 34\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n    $count = 0;\n    foreach ($arr as $num) {\n        $sum = 0;\n      \
    \  if ($num < 0) {\n            $num = -$num;\n            $sum += -1;\n     \
    \   }\n        while ($num > 0) {\n            $sum += $num % 10;\n          \
    \  $num = (int)($num / 10);\n        }\n        if ($sum > 0) {\n            $count++;\n\
    \        }\n    }\n    return $count;\n}\n\nfunction candidate(...$args) {\n \
    \   return count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpg1n24jar.php:34\n\
    Stack trace:\n#0 /tmp/tmpg1n24jar.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpg1n24jar.php\
    \ on line 34\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n    $count = 0;\n    foreach ($arr as $num) {\n        if ($num < 0) {\n\
    \            $num = -$num;\n        }\n        $sum = 0;\n        while ($num\
    \ > 0) {\n            $sum += $num % 10;\n            $num = (int)($num / 10);\n\
    \        }\n        if ($sum > 0) {\n            $count++;\n        }\n    }\n\
    \    return $count;\n}\nfunction candidate(...$args) {\n    return count_nums(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, 0)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 2, -2, 3, 4, 5)) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 6, 9, -6, 0,\
    \ 1, 5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 100, 98, -7, 1, -1)) !== 4) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(12, 23, 34, -45, -56, 0)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpgkj1dr5l.php:32\n\
    Stack trace:\n#0 /tmp/tmpgkj1dr5l.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpgkj1dr5l.php\
    \ on line 32\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n    $count = 0;\n    foreach ($arr as $num) {\n        $sum = 0;\n      \
    \  if ($num < 0) {\n            $num = -$num;\n            $sum += -1;\n     \
    \   }\n        while ($num > 0) {\n            $sum += $num % 10;\n          \
    \  $num = floor($num / 10);\n        }\n        if ($sum > 0) {\n            $count++;\n\
    \        }\n    }\n    return $count;\n}\n\nfunction candidate(...$args) {\n \
    \   return count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp11vhk5mw.php:34\n\
    Stack trace:\n#0 /tmp/tmp11vhk5mw.php(43): test()\n#1 {main}\n  thrown in /tmp/tmp11vhk5mw.php\
    \ on line 34\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n    $count = 0;\n    foreach ($arr as $num) {\n        $sum = 0;\n      \
    \  if ($num < 0) {\n            $num = -$num;\n            $sum += -1;\n     \
    \   }\n        while ($num > 0) {\n            $sum += $num % 10;\n          \
    \  $num = (int)($num / 10);\n        }\n        if ($sum > 0) {\n            $count++;\n\
    \        }\n    }\n    return $count;\n}\n\nfunction candidate(...$args) {\n \
    \   return count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp4jz6rx5p.php:34\n\
    Stack trace:\n#0 /tmp/tmp4jz6rx5p.php(43): test()\n#1 {main}\n  thrown in /tmp/tmp4jz6rx5p.php\
    \ on line 34\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n    $count = 0;\n    foreach ($arr as $num) {\n        $sum = 0;\n      \
    \  if ($num < 0) {\n            $num = -$num;\n            $sum += -1;\n     \
    \   }\n        while ($num > 0) {\n            $sum += $num % 10;\n          \
    \  $num = (int)($num / 10);\n        }\n        if ($sum > 0) {\n            $count++;\n\
    \        }\n    }\n    return $count;\n}\n\nfunction candidate(...$args) {\n \
    \   return count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpxedy6x50.php:34\n\
    Stack trace:\n#0 /tmp/tmpxedy6x50.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpxedy6x50.php\
    \ on line 34\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n    $count = 0;\n    foreach ($arr as $num) {\n        $sum = 0;\n      \
    \  if ($num < 0) {\n            $num = $num * -1;\n            $sum += $num %\
    \ 10;\n            $num = $num / 10;\n        }\n        while ($num > 0) {\n\
    \            $sum += $num % 10;\n            $num = $num / 10;\n        }\n  \
    \      if ($sum > 0) {\n            $count++;\n        }\n    }\n    return $count;\n\
    }\n\nfunction candidate(...$args) {\n    return count_nums(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-1, -2, 0)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 2, -2, 3, 4, 5)) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 6, 9, -6, 0,\
    \ 1, 5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 100, 98, -7, 1, -1)) !== 4) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(12, 23, 34, -45, -56, 0)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpg5ifxtrp.php:35\n\
    Stack trace:\n#0 /tmp/tmpg5ifxtrp.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpg5ifxtrp.php\
    \ on line 35\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n  $count = 0;\n  foreach ($arr as $num) {\n    $sum = 0;\n    if ($num <\
    \ 0) {\n      $sum += $num % 10;\n      $num = -1 * ($num / 10);\n    }\n    while\
    \ ($num > 0) {\n      $sum += $num % 10;\n      $num = $num / 10;\n    }\n   \
    \ if ($sum > 0) {\n      $count++;\n    }\n  }\n  return $count;\n}\n\nfunction\
    \ candidate(...$args) {\n    return count_nums(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array()) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2, 0)) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 1, 2, -2, 3, 4, 5)) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 6, 9, -6, 0,\
    \ 1, 5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 100, 98, -7, 1, -1)) !== 4) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(12, 23, 34, -45, -56, 0)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmppp2flskb.php:38\n\
    Stack trace:\n#0 /tmp/tmppp2flskb.php(43): test()\n#1 {main}\n  thrown in /tmp/tmppp2flskb.php\
    \ on line 38\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n    $count = 0;\n    foreach ($arr as $num) {\n        $sum = 0;\n      \
    \  if ($num < 0) {\n            $sum += $num % 10;\n            $num = -$num;\n\
    \        }\n        while ($num > 0) {\n            $sum += $num % 10;\n     \
    \       $num = (int)($num / 10);\n        }\n        if ($sum > 0) {\n       \
    \     $count++;\n        }\n    }\n    return $count;\n}\n\nfunction candidate(...$args)\
    \ {\n    return count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n    $count = 0;\n    foreach ($arr as $num) {\n        $sum = 0;\n      \
    \  $num = abs($num);\n        while ($num > 0) {\n            $sum += $num % 10;\n\
    \            $num = intval($num / 10);\n        }\n        if ($sum > 0) {\n \
    \           $count++;\n        }\n    }\n    return $count;\n}\n\nfunction candidate(...$args)\
    \ {\n    return count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp1zbu2uuw.php:31\n\
    Stack trace:\n#0 /tmp/tmp1zbu2uuw.php(40): test()\n#1 {main}\n  thrown in /tmp/tmp1zbu2uuw.php\
    \ on line 31\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n    $count = 0;\n    foreach ($arr as $num) {\n        $sum = 0;\n      \
    \  if ($num < 0) {\n            $num = -$num;\n            $sum += $num % 10;\n\
    \            $num = (int)($num / 10);\n        }\n        while ($num > 0) {\n\
    \            $sum += $num % 10;\n            $num = (int)($num / 10);\n      \
    \  }\n        if ($sum > 0) {\n            $count++;\n        }\n    }\n    return\
    \ $count;\n}\n\nfunction candidate(...$args) {\n    return count_nums(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, 0)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 2, -2, 3, 4, 5)) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 6, 9, -6, 0,\
    \ 1, 5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 100, 98, -7, 1, -1)) !== 4) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(12, 23, 34, -45, -56, 0)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpord2k_5a.php:35\n\
    Stack trace:\n#0 /tmp/tmpord2k_5a.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpord2k_5a.php\
    \ on line 35\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n    $count = 0;\n    foreach ($arr as $num) {\n        $sum = 0;\n      \
    \  if ($num < 0) {\n            $sum += abs($num) % 10;\n            $num = abs($num)\
    \ / 10;\n        }\n        while ($num > 0) {\n            $sum += $num % 10;\n\
    \            $num = $num / 10;\n        }\n        if ($sum > 0) {\n         \
    \   $count++;\n        }\n    }\n    return $count;\n}\n\nfunction candidate(...$args)\
    \ {\n    return count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpdndep4vw.php:34\n\
    Stack trace:\n#0 /tmp/tmpdndep4vw.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpdndep4vw.php\
    \ on line 34\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n    $count = 0;\n    foreach ($arr as $num) {\n        $sum = 0;\n      \
    \  if ($num < 0) {\n            $sum += $num % 10;\n            $num = abs($num);\n\
    \        }\n        while ($num > 0) {\n            $sum += $num % 10;\n     \
    \       $num = floor($num / 10);\n        }\n        if ($sum > 0) {\n       \
    \     $count++;\n        }\n    }\n    return $count;\n}\n\nfunction candidate(...$args)\
    \ {\n    return count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n    $count = 0;\n    foreach ($arr as $num) {\n        $sum = 0;\n      \
    \  $num = abs($num);\n        while ($num > 0) {\n            $sum += $num % 10;\n\
    \            $num = floor($num / 10);\n        }\n        if ($sum > 0) {\n  \
    \          $count++;\n        }\n    }\n    return $count;\n}\nfunction candidate(...$args)\
    \ {\n    return count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp2_fksxe1.php:30\n\
    Stack trace:\n#0 /tmp/tmp2_fksxe1.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp2_fksxe1.php\
    \ on line 30\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n    $count = 0;\n    foreach ($arr as $num) {\n        $sum = 0;\n      \
    \  if ($num < 0) {\n            $num = -$num;\n            $sum -= $num % 10;\n\
    \            $num = (int)($num / 10);\n        }\n        while ($num > 0) {\n\
    \            $sum += $num % 10;\n            $num = (int)($num / 10);\n      \
    \  }\n        if ($sum > 0) {\n            $count++;\n        }\n    }\n    return\
    \ $count;\n}\n\nfunction candidate(...$args) {\n    return count_nums(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, 0)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 2, -2, 3, 4, 5)) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 6, 9, -6, 0,\
    \ 1, 5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 100, 98, -7, 1, -1)) !== 4) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(12, 23, 34, -45, -56, 0)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpp2nvgc6_.php:39\n\
    Stack trace:\n#0 /tmp/tmpp2nvgc6_.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpp2nvgc6_.php\
    \ on line 39\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n    $count = 0;\n    foreach ($arr as $num) {\n        $sum = 0;\n      \
    \  $num = abs($num);\n        while ($num > 0) {\n            $sum += $num % 10;\n\
    \            $num = floor($num / 10);\n        }\n        if ($sum > 0) {\n  \
    \          $count++;\n        }\n    }\n    return $count;\n}\n\nfunction candidate(...$args)\
    \ {\n    return count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmptol496s2.php:31\n\
    Stack trace:\n#0 /tmp/tmptol496s2.php(40): test()\n#1 {main}\n  thrown in /tmp/tmptol496s2.php\
    \ on line 31\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n    $count = 0;\n    foreach ($arr as $num) {\n        $sum = 0;\n      \
    \  $num = abs($num);\n        while ($num > 0) {\n            $sum += $num % 10;\n\
    \            $num = (int)($num / 10);\n        }\n        if ($sum > 0) {\n  \
    \          $count++;\n        }\n    }\n    return $count;\n}\n\nfunction candidate(...$args)\
    \ {\n    return count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmphvqsumi4.php:31\n\
    Stack trace:\n#0 /tmp/tmphvqsumi4.php(40): test()\n#1 {main}\n  thrown in /tmp/tmphvqsumi4.php\
    \ on line 31\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n    $count = 0;\n    foreach ($arr as $num) {\n        $sum = 0;\n      \
    \  if ($num < 0) {\n            $sum += $num % 10;\n            $num = -$num;\n\
    \        }\n        while ($num > 0) {\n            $sum += $num % 10;\n     \
    \       $num = (int)($num / 10);\n        }\n        if ($sum > 0) {\n       \
    \     $count++;\n        }\n    }\n    return $count;\n}\n\nfunction candidate(...$args)\
    \ {\n    return count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n    $count = 0;\n    foreach ($arr as $num) {\n        $sum = 0;\n      \
    \  $num = abs($num);\n        while ($num > 0) {\n            $sum += $num % 10;\n\
    \            $num = floor($num / 10);\n        }\n        if ($sum > 0) {\n  \
    \          $count++;\n        }\n    }\n    return $count;\n}\nfunction candidate(...$args)\
    \ {\n    return count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp8xi_2nqs.php:30\n\
    Stack trace:\n#0 /tmp/tmp8xi_2nqs.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp8xi_2nqs.php\
    \ on line 30\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n    $count = 0;\n    foreach ($arr as $num) {\n        $sum = 0;\n      \
    \  if ($num < 0) {\n            $sum += $num % 10;\n            $num = -$num;\n\
    \        }\n        while ($num > 0) {\n            $sum += $num % 10;\n     \
    \       $num = (int)($num / 10);\n        }\n        if ($sum > 0) {\n       \
    \     $count++;\n        }\n    }\n    return $count;\n}\n\nfunction candidate(...$args)\
    \ {\n    return count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n    $count = 0;\n    foreach ($arr as $num) {\n        $sum = 0;\n      \
    \  if ($num < 0) {\n            $num = -$num;\n            $sum += -1;\n     \
    \   }\n        while ($num > 0) {\n            $sum += $num % 10;\n          \
    \  $num = (int)($num / 10);\n        }\n        if ($sum > 0) {\n            $count++;\n\
    \        }\n    }\n    return $count;\n}\n\nfunction candidate(...$args) {\n \
    \   return count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpbxiojjer.php:34\n\
    Stack trace:\n#0 /tmp/tmpbxiojjer.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpbxiojjer.php\
    \ on line 34\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n    $count = 0;\n    foreach ($arr as $num) {\n        $sum = 0;\n      \
    \  $num = abs($num);\n        while ($num > 0) {\n            $sum += $num % 10;\n\
    \            $num = floor($num / 10);\n        }\n        if ($sum > 0) {\n  \
    \          $count++;\n        }\n    }\n    return $count;\n}\n\nfunction candidate(...$args)\
    \ {\n    return count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpw9khfclx.php:31\n\
    Stack trace:\n#0 /tmp/tmpw9khfclx.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpw9khfclx.php\
    \ on line 31\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n    $count = 0;\n    foreach ($arr as $num) {\n        $sum = 0;\n      \
    \  $num = abs($num);\n        while ($num > 0) {\n            $sum += $num % 10;\n\
    \            $num = floor($num / 10);\n        }\n        if ($sum > 0) {\n  \
    \          $count++;\n        }\n    }\n    return $count;\n}\nfunction candidate(...$args)\
    \ {\n    return count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpblirb6_k.php:30\n\
    Stack trace:\n#0 /tmp/tmpblirb6_k.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpblirb6_k.php\
    \ on line 30\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n    $count = 0;\n    foreach ($arr as $num) {\n        if ($num < 0) {\n\
    \            $num = -$num;\n        }\n        $sum = 0;\n        while ($num\
    \ > 0) {\n            $sum += $num % 10;\n            $num = (int)($num / 10);\n\
    \        }\n        if ($sum > 0) {\n            $count++;\n        }\n    }\n\
    \    return $count;\n}\n\nfunction candidate(...$args) {\n    return count_nums(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, 0)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 2, -2, 3, 4, 5)) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 6, 9, -6, 0,\
    \ 1, 5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 100, 98, -7, 1, -1)) !== 4) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(12, 23, 34, -45, -56, 0)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpcwhe1wmg.php:33\n\
    Stack trace:\n#0 /tmp/tmpcwhe1wmg.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpcwhe1wmg.php\
    \ on line 33\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n    $count = 0;\n    foreach ($arr as $num) {\n        $sum = 0;\n      \
    \  if ($num < 0) {\n            $num = -$num;\n            $sum += -1;\n     \
    \   }\n        while ($num > 0) {\n            $sum += $num % 10;\n          \
    \  $num = (int)($num / 10);\n        }\n        if ($sum > 0) {\n            $count++;\n\
    \        }\n    }\n    return $count;\n}\n\nfunction candidate(...$args) {\n \
    \   return count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpb4ndbd3p.php:34\n\
    Stack trace:\n#0 /tmp/tmpb4ndbd3p.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpb4ndbd3p.php\
    \ on line 34\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n    $count = 0;\n    foreach ($arr as $num) {\n        $sum = 0;\n      \
    \  if ($num < 0) {\n            $sum += $num % 10;\n            $num = -$num;\n\
    \        }\n        while ($num > 0) {\n            $sum += $num % 10;\n     \
    \       $num = (int)($num / 10);\n        }\n        if ($sum > 0) {\n       \
    \     $count++;\n        }\n    }\n    return $count;\n}\n\nfunction candidate(...$args)\
    \ {\n    return count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n    $count = 0;\n    foreach ($arr as $num) {\n        $sum = 0;\n      \
    \  if ($num < 0) {\n            $num = $num * -1;\n            $sum += $num %\
    \ 10;\n            $num = $num / 10;\n        }\n        while ($num > 0) {\n\
    \            $sum += $num % 10;\n            $num = $num / 10;\n        }\n  \
    \      if ($sum > 0) {\n            $count++;\n        }\n    }\n    return $count;\n\
    }\n\nfunction candidate(...$args) {\n    return count_nums(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-1, -2, 0)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 2, -2, 3, 4, 5)) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 6, 9, -6, 0,\
    \ 1, 5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 100, 98, -7, 1, -1)) !== 4) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(12, 23, 34, -45, -56, 0)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp7sgbpr3t.php:35\n\
    Stack trace:\n#0 /tmp/tmp7sgbpr3t.php(44): test()\n#1 {main}\n  thrown in /tmp/tmp7sgbpr3t.php\
    \ on line 35\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n    $count = 0;\n    foreach ($arr as $num) {\n        $sum = 0;\n      \
    \  $num = abs($num);\n        while ($num > 0) {\n            $sum += $num % 10;\n\
    \            $num = (int)($num / 10);\n        }\n        if ($sum > 0) {\n  \
    \          $count++;\n        }\n    }\n    return $count;\n}\n\nfunction candidate(...$args)\
    \ {\n    return count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpfpmynys7.php:31\n\
    Stack trace:\n#0 /tmp/tmpfpmynys7.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpfpmynys7.php\
    \ on line 31\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n    $count = 0;\n    foreach ($arr as $num) {\n        $sum = 0;\n      \
    \  $num = abs($num);\n        while ($num > 0) {\n            $sum += $num % 10;\n\
    \            $num = (int)($num / 10);\n        }\n        if ($sum > 0) {\n  \
    \          $count++;\n        }\n    }\n    return $count;\n}\n\nfunction candidate(...$args)\
    \ {\n    return count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmphzfkztsq.php:31\n\
    Stack trace:\n#0 /tmp/tmphzfkztsq.php(40): test()\n#1 {main}\n  thrown in /tmp/tmphzfkztsq.php\
    \ on line 31\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n    $count = 0;\n    foreach ($arr as $num) {\n        $sum = 0;\n      \
    \  if ($num < 0) {\n            $num = -$num;\n            $sum += -1;\n     \
    \   }\n        while ($num > 0) {\n            $sum += $num % 10;\n          \
    \  $num = (int)($num / 10);\n        }\n        if ($sum > 0) {\n            $count++;\n\
    \        }\n    }\n    return $count;\n}\n\nfunction candidate(...$args) {\n \
    \   return count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp99rcg_s8.php:34\n\
    Stack trace:\n#0 /tmp/tmp99rcg_s8.php(43): test()\n#1 {main}\n  thrown in /tmp/tmp99rcg_s8.php\
    \ on line 34\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n    $count = 0;\n    foreach ($arr as $num) {\n        $sum = 0;\n      \
    \  if ($num < 0) {\n            $sum += $num % 10;\n            $num = -$num;\n\
    \        }\n        while ($num > 0) {\n            $sum += $num % 10;\n     \
    \       $num = (int)($num / 10);\n        }\n        if ($sum > 0) {\n       \
    \     $count++;\n        }\n    }\n    return $count;\n}\n\nfunction candidate(...$args)\
    \ {\n    return count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n    $count = 0;\n    foreach ($arr as $num) {\n        $sum = 0;\n      \
    \  if ($num < 0) {\n            $num = -$num;\n            $sum += -1;\n     \
    \   }\n        while ($num > 0) {\n            $sum += $num % 10;\n          \
    \  $num = floor($num / 10);\n        }\n        if ($sum > 0) {\n            $count++;\n\
    \        }\n    }\n    return $count;\n}\n\nfunction candidate(...$args) {\n \
    \   return count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpbgo0wiqy.php:34\n\
    Stack trace:\n#0 /tmp/tmpbgo0wiqy.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpbgo0wiqy.php\
    \ on line 34\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n    $count = 0;\n    foreach ($arr as $num) {\n        $sum = 0;\n      \
    \  if ($num < 0) {\n            $num = substr($num, 1);\n            $sum += substr($num,\
    \ 0, 1);\n            $num = substr($num, 1);\n        }\n        while ($num\
    \ > 0) {\n            $sum += $num % 10;\n            $num = (int)($num / 10);\n\
    \        }\n        if ($sum > 0) {\n            $count++;\n        }\n    }\n\
    \    return $count;\n}\nfunction candidate(...$args) {\n    return count_nums(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, 0)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 2, -2, 3, 4, 5)) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 6, 9, -6, 0,\
    \ 1, 5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 100, 98, -7, 1, -1)) !== 4) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(12, 23, 34, -45, -56, 0)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpn8o89vbp.php:34\n\
    Stack trace:\n#0 /tmp/tmpn8o89vbp.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpn8o89vbp.php\
    \ on line 34\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n  $count = 0;\n  foreach ($arr as $num) {\n    $sum = 0;\n    $num = abs($num);\n\
    \    while ($num > 0) {\n      $sum += $num % 10;\n      $num = (int)($num / 10);\n\
    \    }\n    if ($sum > 0) {\n      $count++;\n    }\n  }\n  return $count;\n}\n\
    \nfunction candidate(...$args) {\n    return count_nums(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-1, -2, 0)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 2, -2, 3, 4, 5)) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 6, 9, -6, 0,\
    \ 1, 5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 100, 98, -7, 1, -1)) !== 4) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(12, 23, 34, -45, -56, 0)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpi6zv18qe.php:31\n\
    Stack trace:\n#0 /tmp/tmpi6zv18qe.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpi6zv18qe.php\
    \ on line 31\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n    $count = 0;\n    foreach ($arr as $num) {\n        $sum = 0;\n      \
    \  if ($num < 0) {\n            $sum += $num % 10;\n            $num = -$num;\n\
    \        }\n        while ($num > 0) {\n            $sum += $num % 10;\n     \
    \       $num = floor($num / 10);\n        }\n        if ($sum > 0) {\n       \
    \     $count++;\n        }\n    }\n    return $count;\n}\n\nfunction candidate(...$args)\
    \ {\n    return count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n  $count = 0;\n  foreach ($arr as $num) {\n    $sum = 0;\n    if ($num <\
    \ 0) {\n      $sum += $num % 10;\n      $num = -1 * ($num / 10);\n    }\n    while\
    \ ($num > 0) {\n      $sum += $num % 10;\n      $num = $num / 10;\n    }\n   \
    \ if ($sum > 0) {\n      $count++;\n    }\n  }\n  return $count;\n}\n\nfunction\
    \ candidate(...$args) {\n    return count_nums(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array()) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2, 0)) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 1, 2, -2, 3, 4, 5)) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 6, 9, -6, 0,\
    \ 1, 5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 100, 98, -7, 1, -1)) !== 4) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(12, 23, 34, -45, -56, 0)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp5icz33jp.php:38\n\
    Stack trace:\n#0 /tmp/tmp5icz33jp.php(43): test()\n#1 {main}\n  thrown in /tmp/tmp5icz33jp.php\
    \ on line 38\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n    $count = 0;\n    foreach ($arr as $num) {\n        $sum = 0;\n      \
    \  $num = abs($num);\n        while ($num > 0) {\n            $sum += $num % 10;\n\
    \            $num = floor($num / 10);\n        }\n        if ($sum > 0) {\n  \
    \          $count++;\n        }\n    }\n    return $count;\n}\nfunction candidate(...$args)\
    \ {\n    return count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp2qghsn1m.php:30\n\
    Stack trace:\n#0 /tmp/tmp2qghsn1m.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp2qghsn1m.php\
    \ on line 30\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n    $count = 0;\n    foreach ($arr as $num) {\n        $sum = 0;\n      \
    \  $num = abs($num);\n        while ($num > 0) {\n            $sum += $num % 10;\n\
    \            $num = floor($num / 10);\n        }\n        if ($sum > 0) {\n  \
    \          $count++;\n        }\n    }\n    return $count;\n}\n\nfunction candidate(...$args)\
    \ {\n    return count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpiejxaxda.php:31\n\
    Stack trace:\n#0 /tmp/tmpiejxaxda.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpiejxaxda.php\
    \ on line 31\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n    $count = 0;\n    foreach ($arr as $num) {\n        $sum = 0;\n      \
    \  $num = abs($num);\n        while ($num > 0) {\n            $sum += $num % 10;\n\
    \            $num = floor($num / 10);\n        }\n        if ($sum > 0) {\n  \
    \          $count++;\n        }\n    }\n    return $count;\n}\n\nfunction candidate(...$args)\
    \ {\n    return count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpjerlmwan.php:31\n\
    Stack trace:\n#0 /tmp/tmpjerlmwan.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpjerlmwan.php\
    \ on line 31\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n  $count = 0;\n  foreach ($arr as $num) {\n    $sum = 0;\n    $num = abs($num);\n\
    \    while ($num > 0) {\n      $sum += $num % 10;\n      $num = floor($num / 10);\n\
    \    }\n    if ($sum > 0) {\n      $count++;\n    }\n  }\n  return $count;\n}\n\
    \nfunction candidate(...$args) {\n    return count_nums(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-1, -2, 0)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 2, -2, 3, 4, 5)) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 6, 9, -6, 0,\
    \ 1, 5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 100, 98, -7, 1, -1)) !== 4) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(12, 23, 34, -45, -56, 0)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmprc9ucvlh.php:31\n\
    Stack trace:\n#0 /tmp/tmprc9ucvlh.php(40): test()\n#1 {main}\n  thrown in /tmp/tmprc9ucvlh.php\
    \ on line 31\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n    $count = 0;\n    foreach ($arr as $num) {\n        $sum = 0;\n      \
    \  if ($num < 0) {\n            $sum += abs($num) % 10;\n            $num = abs($num)\
    \ / 10;\n        }\n        while ($num > 0) {\n            $sum += $num % 10;\n\
    \            $num = $num / 10;\n        }\n        if ($sum > 0) {\n         \
    \   $count++;\n        }\n    }\n    return $count;\n}\n\nfunction candidate(...$args)\
    \ {\n    return count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpsi0ya22c.php:34\n\
    Stack trace:\n#0 /tmp/tmpsi0ya22c.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpsi0ya22c.php\
    \ on line 34\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n    $count = 0;\n    foreach ($arr as $value) {\n        $sum = 0;\n    \
    \    $value = abs($value);\n        while ($value > 0) {\n            $sum +=\
    \ $value % 10;\n            $value = floor($value / 10);\n        }\n        if\
    \ ($sum > 0) {\n            $count++;\n        }\n    }\n    return $count;\n\
    }\nfunction candidate(...$args) {\n    return count_nums(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-1, -2, 0)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 2, -2, 3, 4, 5)) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 6, 9, -6, 0,\
    \ 1, 5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 100, 98, -7, 1, -1)) !== 4) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(12, 23, 34, -45, -56, 0)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp_z9e5c9s.php:30\n\
    Stack trace:\n#0 /tmp/tmp_z9e5c9s.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp_z9e5c9s.php\
    \ on line 30\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n    $count = 0;\n    foreach ($arr as $key => $value) {\n        $sum = 0;\n\
    \        if ($value < 0) {\n            $value = $value * -1;\n        }\n   \
    \     while ($value > 0) {\n            $sum += $value % 10;\n            $value\
    \ = floor($value / 10);\n        }\n        if ($sum > 0) {\n            $count++;\n\
    \        }\n    }\n    return $count;\n}\n\nfunction candidate(...$args) {\n \
    \   return count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp1hl0f6ps.php:33\n\
    Stack trace:\n#0 /tmp/tmp1hl0f6ps.php(42): test()\n#1 {main}\n  thrown in /tmp/tmp1hl0f6ps.php\
    \ on line 33\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n    $count = 0;\n    foreach ($arr as $num) {\n        $sum = 0;\n      \
    \  if ($num < 0) {\n            $num = -$num;\n            $sum += -1;\n     \
    \   }\n        while ($num > 0) {\n            $sum += $num % 10;\n          \
    \  $num = (int)($num / 10);\n        }\n        if ($sum > 0) {\n            $count++;\n\
    \        }\n    }\n    return $count;\n}\n\nfunction candidate(...$args) {\n \
    \   return count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpdtq23i_5.php:34\n\
    Stack trace:\n#0 /tmp/tmpdtq23i_5.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpdtq23i_5.php\
    \ on line 34\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n    $count = 0;\n    foreach ($arr as $num) {\n        $sum = 0;\n      \
    \  $num = abs($num);\n        while ($num > 0) {\n            $sum += $num % 10;\n\
    \            $num = floor($num / 10);\n        }\n        if ($sum > 0) {\n  \
    \          $count++;\n        }\n    }\n    return $count;\n}\n\nfunction candidate(...$args)\
    \ {\n    return count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpt8onoij3.php:31\n\
    Stack trace:\n#0 /tmp/tmpt8onoij3.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpt8onoij3.php\
    \ on line 31\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n    $count = 0;\n    foreach ($arr as $n) {\n        $sum = 0;\n        $n\
    \ = abs($n);\n        while ($n > 0) {\n            $sum += $n % 10;\n       \
    \     $n = (int)($n / 10);\n        }\n        if ($sum > 0) {\n            $count++;\n\
    \        }\n    }\n    return $count;\n}\n\nfunction candidate(...$args) {\n \
    \   return count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp89l74h5y.php:31\n\
    Stack trace:\n#0 /tmp/tmp89l74h5y.php(40): test()\n#1 {main}\n  thrown in /tmp/tmp89l74h5y.php\
    \ on line 31\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n    $count = 0;\n    foreach ($arr as $num) {\n        $sum = 0;\n      \
    \  $num = abs($num);\n        while ($num > 0) {\n            $sum += $num % 10;\n\
    \            $num = floor($num / 10);\n        }\n        if ($sum > 0) {\n  \
    \          $count++;\n        }\n    }\n    return $count;\n}\n\nfunction candidate(...$args)\
    \ {\n    return count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpset51r2t.php:31\n\
    Stack trace:\n#0 /tmp/tmpset51r2t.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpset51r2t.php\
    \ on line 31\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n    $count = 0;\n    foreach ($arr as $num) {\n        $sum = 0;\n      \
    \  if ($num < 0) {\n            $num = -$num;\n            $sum += -1;\n     \
    \   }\n        while ($num > 0) {\n            $sum += $num % 10;\n          \
    \  $num = (int)($num / 10);\n        }\n        if ($sum > 0) {\n            $count++;\n\
    \        }\n    }\n    return $count;\n}\n\nfunction candidate(...$args) {\n \
    \   return count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpgaquo3z7.php:34\n\
    Stack trace:\n#0 /tmp/tmpgaquo3z7.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpgaquo3z7.php\
    \ on line 34\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n  $count = 0;\n  foreach ($arr as $num) {\n    $sum = 0;\n    if ($num <\
    \ 0) {\n      $sum += abs($num) % 10;\n      $num = abs($num) / 10;\n    }\n \
    \   while ($num > 0) {\n      $sum += $num % 10;\n      $num = $num / 10;\n  \
    \  }\n    if ($sum > 0) {\n      $count++;\n    }\n  }\n  return $count;\n}\n\n\
    function candidate(...$args) {\n    return count_nums(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-1, -2, 0)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 2, -2, 3, 4, 5)) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 6, 9, -6, 0,\
    \ 1, 5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 100, 98, -7, 1, -1)) !== 4) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(12, 23, 34, -45, -56, 0)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpljja867h.php:34\n\
    Stack trace:\n#0 /tmp/tmpljja867h.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpljja867h.php\
    \ on line 34\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n    $count = 0;\n    foreach ($arr as $num) {\n        $sum = 0;\n      \
    \  if ($num < 0) {\n            $num = -$num;\n            $sum += -1;\n     \
    \   }\n        while ($num > 0) {\n            $sum += $num % 10;\n          \
    \  $num = (int)($num / 10);\n        }\n        if ($sum > 0) {\n            $count++;\n\
    \        }\n    }\n    return $count;\n}\n\nfunction candidate(...$args) {\n \
    \   return count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmprj8ageoq.php:34\n\
    Stack trace:\n#0 /tmp/tmprj8ageoq.php(43): test()\n#1 {main}\n  thrown in /tmp/tmprj8ageoq.php\
    \ on line 34\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n    $count = 0;\n    foreach ($arr as $num) {\n        $sum = 0;\n      \
    \  if ($num < 0) {\n            $num = -$num;\n            $sum += -1;\n     \
    \   }\n        while ($num > 0) {\n            $sum += $num % 10;\n          \
    \  $num = floor($num / 10);\n        }\n        if ($sum > 0) {\n            $count++;\n\
    \        }\n    }\n    return $count;\n}\n\nfunction candidate(...$args) {\n \
    \   return count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpo_1_6dic.php:34\n\
    Stack trace:\n#0 /tmp/tmpo_1_6dic.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpo_1_6dic.php\
    \ on line 34\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n    $count = 0;\n    foreach ($arr as $num) {\n        if ($num < 0) {\n\
    \            $num = -$num;\n        }\n        $sum = 0;\n        while ($num\
    \ > 0) {\n            $sum += $num % 10;\n            $num = (int)($num / 10);\n\
    \        }\n        if ($sum > 0) {\n            $count++;\n        }\n    }\n\
    \    return $count;\n}\n\nfunction candidate(...$args) {\n    return count_nums(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, 0)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 2, -2, 3, 4, 5)) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 6, 9, -6, 0,\
    \ 1, 5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 100, 98, -7, 1, -1)) !== 4) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(12, 23, 34, -45, -56, 0)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp09spbzhc.php:33\n\
    Stack trace:\n#0 /tmp/tmp09spbzhc.php(42): test()\n#1 {main}\n  thrown in /tmp/tmp09spbzhc.php\
    \ on line 33\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n    $count = 0;\n    foreach ($arr as $num) {\n        $sum = 0;\n      \
    \  if ($num < 0) {\n            $num = -$num;\n            $sum += -1;\n     \
    \   }\n        while ($num > 0) {\n            $sum += $num % 10;\n          \
    \  $num = intval($num / 10);\n        }\n        if ($sum > 0) {\n           \
    \ $count++;\n        }\n    }\n    return $count;\n}\n\nfunction candidate(...$args)\
    \ {\n    return count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp8hdl4tq0.php:34\n\
    Stack trace:\n#0 /tmp/tmp8hdl4tq0.php(43): test()\n#1 {main}\n  thrown in /tmp/tmp8hdl4tq0.php\
    \ on line 34\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n    $count = 0;\n    foreach ($arr as $num) {\n        $sum = 0;\n      \
    \  $num = abs($num);\n        while ($num > 0) {\n            $sum += $num % 10;\n\
    \            $num = floor($num / 10);\n        }\n        if ($sum > 0) {\n  \
    \          $count++;\n        }\n    }\n    return $count;\n}\n\nfunction candidate(...$args)\
    \ {\n    return count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp9qm4fvbx.php:31\n\
    Stack trace:\n#0 /tmp/tmp9qm4fvbx.php(40): test()\n#1 {main}\n  thrown in /tmp/tmp9qm4fvbx.php\
    \ on line 31\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n    $count = 0;\n    foreach ($arr as $num) {\n        $sum = 0;\n      \
    \  if ($num < 0) {\n            $num = abs($num);\n            $sum += $num %\
    \ 10;\n            $num = floor($num / 10);\n        }\n        while ($num >\
    \ 0) {\n            $sum += $num % 10;\n            $num = floor($num / 10);\n\
    \        }\n        if ($sum > 0) {\n            $count++;\n        }\n    }\n\
    \    return $count;\n}\nfunction candidate(...$args) {\n    return count_nums(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, 0)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 2, -2, 3, 4, 5)) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 6, 9, -6, 0,\
    \ 1, 5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 100, 98, -7, 1, -1)) !== 4) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(12, 23, 34, -45, -56, 0)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmps4giqe62.php:34\n\
    Stack trace:\n#0 /tmp/tmps4giqe62.php(43): test()\n#1 {main}\n  thrown in /tmp/tmps4giqe62.php\
    \ on line 34\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n  $count = 0;\n  foreach ($arr as $num) {\n    $sum = 0;\n    if ($num <\
    \ 0) {\n      $sum += $num % 10;\n      $num = floor($num / 10);\n    }\n    while\
    \ ($num > 0) {\n      $sum += $num % 10;\n      $num = floor($num / 10);\n   \
    \ }\n    if ($sum > 0) {\n      $count++;\n    }\n  }\n  return $count;\n}\n\n\
    function candidate(...$args) {\n    return count_nums(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-1, -2, 0)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 2, -2, 3, 4, 5)) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 6, 9, -6, 0,\
    \ 1, 5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 100, 98, -7, 1, -1)) !== 4) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(12, 23, 34, -45, -56, 0)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpqkr25ri6.php:38\n\
    Stack trace:\n#0 /tmp/tmpqkr25ri6.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpqkr25ri6.php\
    \ on line 38\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n    $count = 0;\n    foreach ($arr as $num) {\n        $sum = 0;\n      \
    \  $num = abs($num);\n        while ($num > 0) {\n            $sum += $num % 10;\n\
    \            $num = floor($num / 10);\n        }\n        if ($sum > 0) {\n  \
    \          $count++;\n        }\n    }\n    return $count;\n}\n\nfunction candidate(...$args)\
    \ {\n    return count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpzfe16lhn.php:31\n\
    Stack trace:\n#0 /tmp/tmpzfe16lhn.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpzfe16lhn.php\
    \ on line 31\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n    $count = 0;\n    foreach ($arr as $num) {\n        $sum = 0;\n      \
    \  if ($num < 0) {\n            $num = -$num;\n            $sum += -1;\n     \
    \   }\n        while ($num > 0) {\n            $sum += $num % 10;\n          \
    \  $num = floor($num / 10);\n        }\n        if ($sum > 0) {\n            $count++;\n\
    \        }\n    }\n    return $count;\n}\n\nfunction candidate(...$args) {\n \
    \   return count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpuhnbca1_.php:34\n\
    Stack trace:\n#0 /tmp/tmpuhnbca1_.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpuhnbca1_.php\
    \ on line 34\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n    $count = 0;\n    foreach ($arr as $num) {\n        if ($num < 0) {\n\
    \            $num = -$num;\n        }\n        $sum = 0;\n        while ($num\
    \ > 0) {\n            $sum += $num % 10;\n            $num = (int)($num / 10);\n\
    \        }\n        if ($sum > 0) {\n            $count++;\n        }\n    }\n\
    \    return $count;\n}\n\nfunction candidate(...$args) {\n    return count_nums(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, 0)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 2, -2, 3, 4, 5)) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 6, 9, -6, 0,\
    \ 1, 5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 100, 98, -7, 1, -1)) !== 4) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(12, 23, 34, -45, -56, 0)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmptmd59lhb.php:33\n\
    Stack trace:\n#0 /tmp/tmptmd59lhb.php(42): test()\n#1 {main}\n  thrown in /tmp/tmptmd59lhb.php\
    \ on line 33\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n    $count = 0;\n    foreach ($arr as $num) {\n        $sum = 0;\n      \
    \  if ($num < 0) {\n            $num = -$num;\n            $sum += -1;\n     \
    \   }\n        while ($num > 0) {\n            $sum += $num % 10;\n          \
    \  $num = (int)($num / 10);\n        }\n        if ($sum > 0) {\n            $count++;\n\
    \        }\n    }\n    return $count;\n}\n\nfunction candidate(...$args) {\n \
    \   return count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmppgspv9i0.php:34\n\
    Stack trace:\n#0 /tmp/tmppgspv9i0.php(43): test()\n#1 {main}\n  thrown in /tmp/tmppgspv9i0.php\
    \ on line 34\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n    $count = 0;\n    foreach ($arr as $num) {\n        $sum = 0;\n      \
    \  $num = abs($num);\n        while ($num > 0) {\n            $sum += $num % 10;\n\
    \            $num = floor($num / 10);\n        }\n        if ($sum > 0) {\n  \
    \          $count++;\n        }\n    }\n    return $count;\n}\n\nfunction candidate(...$args)\
    \ {\n    return count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp_vk4f6_2.php:31\n\
    Stack trace:\n#0 /tmp/tmp_vk4f6_2.php(40): test()\n#1 {main}\n  thrown in /tmp/tmp_vk4f6_2.php\
    \ on line 31\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n    $count = 0;\n    foreach ($arr as $num) {\n        $sum = 0;\n      \
    \  if ($num < 0) {\n            $num = abs($num);\n            $sum += $num %\
    \ 10;\n            $num = floor($num / 10);\n        }\n        while ($num >\
    \ 0) {\n            $sum += $num % 10;\n            $num = floor($num / 10);\n\
    \        }\n        if ($sum > 0) {\n            $count++;\n        }\n    }\n\
    \    return $count;\n}\n\nfunction candidate(...$args) {\n    return count_nums(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, 0)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 2, -2, 3, 4, 5)) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 6, 9, -6, 0,\
    \ 1, 5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 100, 98, -7, 1, -1)) !== 4) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(12, 23, 34, -45, -56, 0)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmprk6r619_.php:35\n\
    Stack trace:\n#0 /tmp/tmprk6r619_.php(44): test()\n#1 {main}\n  thrown in /tmp/tmprk6r619_.php\
    \ on line 35\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n    $count = 0;\n    foreach ($arr as $num) {\n        $sum = 0;\n      \
    \  if ($num < 0) {\n            $num = -$num;\n            $sum += -1;\n     \
    \   }\n        while ($num > 0) {\n            $sum += $num % 10;\n          \
    \  $num = (int)($num / 10);\n        }\n        if ($sum > 0) {\n            $count++;\n\
    \        }\n    }\n    return $count;\n}\n\nfunction candidate(...$args) {\n \
    \   return count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp7ga7upi7.php:34\n\
    Stack trace:\n#0 /tmp/tmp7ga7upi7.php(43): test()\n#1 {main}\n  thrown in /tmp/tmp7ga7upi7.php\
    \ on line 34\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n    $count = 0;\n    foreach ($arr as $num) {\n        $sum = 0;\n      \
    \  $num = abs($num);\n        while ($num > 0) {\n            $sum += $num % 10;\n\
    \            $num = (int)($num / 10);\n        }\n        if ($sum > 0) {\n  \
    \          $count++;\n        }\n    }\n    return $count;\n}\n\nfunction candidate(...$args)\
    \ {\n    return count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpo3cmgrky.php:31\n\
    Stack trace:\n#0 /tmp/tmpo3cmgrky.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpo3cmgrky.php\
    \ on line 31\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n    $count = 0;\n    foreach ($arr as $num) {\n        $sum = 0;\n      \
    \  $num = abs($num);\n        while ($num > 0) {\n            $sum += $num % 10;\n\
    \            $num = floor($num / 10);\n        }\n        if ($sum > 0) {\n  \
    \          $count++;\n        }\n    }\n    return $count;\n}\nfunction candidate(...$args)\
    \ {\n    return count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp6lyqvsqa.php:30\n\
    Stack trace:\n#0 /tmp/tmp6lyqvsqa.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp6lyqvsqa.php\
    \ on line 30\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n    $count = 0;\n    foreach ($arr as $num) {\n        $sum = 0;\n      \
    \  $num = abs($num);\n        while ($num > 0) {\n            $sum += $num % 10;\n\
    \            $num = intval($num / 10);\n        }\n        if ($sum > 0) {\n \
    \           $count++;\n        }\n    }\n    return $count;\n}\n\nfunction candidate(...$args)\
    \ {\n    return count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpjroavb6f.php:31\n\
    Stack trace:\n#0 /tmp/tmpjroavb6f.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpjroavb6f.php\
    \ on line 31\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n    $count = 0;\n    foreach ($arr as $num) {\n        $sum = 0;\n      \
    \  if ($num < 0) {\n            $sum += abs($num) % 10;\n            $num = abs($num)\
    \ / 10;\n        }\n        while ($num > 0) {\n            $sum += $num % 10;\n\
    \            $num = $num / 10;\n        }\n        if ($sum > 0) {\n         \
    \   $count++;\n        }\n    }\n    return $count;\n}\n\nfunction candidate(...$args)\
    \ {\n    return count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpywedb4iv.php:34\n\
    Stack trace:\n#0 /tmp/tmpywedb4iv.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpywedb4iv.php\
    \ on line 34\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n    $count = 0;\n    foreach ($arr as $num) {\n        $sum = 0;\n      \
    \  if ($num < 0) {\n            $num = -$num;\n            $sum += -1;\n     \
    \   }\n        while ($num > 0) {\n            $sum += $num % 10;\n          \
    \  $num = (int)($num / 10);\n        }\n        if ($sum > 0) {\n            $count++;\n\
    \        }\n    }\n    return $count;\n}\n\nfunction candidate(...$args) {\n \
    \   return count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpi24of2l6.php:34\n\
    Stack trace:\n#0 /tmp/tmpi24of2l6.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpi24of2l6.php\
    \ on line 34\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n    $count = 0;\n    foreach ($arr as $num) {\n        $sum = 0;\n      \
    \  if ($num < 0) {\n            $num = -$num;\n            $sum += -1;\n     \
    \   }\n        while ($num > 0) {\n            $sum += $num % 10;\n          \
    \  $num = (int)($num / 10);\n        }\n        if ($sum > 0) {\n            $count++;\n\
    \        }\n    }\n    return $count;\n}\n\nfunction candidate(...$args) {\n \
    \   return count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp5a_dpiab.php:34\n\
    Stack trace:\n#0 /tmp/tmp5a_dpiab.php(43): test()\n#1 {main}\n  thrown in /tmp/tmp5a_dpiab.php\
    \ on line 34\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n    $count = 0;\n    foreach ($arr as $num) {\n        $sum = 0;\n      \
    \  $num = abs($num);\n        while ($num > 0) {\n            $sum += $num % 10;\n\
    \            $num = floor($num / 10);\n        }\n        if ($sum > 0) {\n  \
    \          $count++;\n        }\n    }\n    return $count;\n}\n\nfunction candidate(...$args)\
    \ {\n    return count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpneslvl91.php:31\n\
    Stack trace:\n#0 /tmp/tmpneslvl91.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpneslvl91.php\
    \ on line 31\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n    $count = 0;\n    foreach ($arr as $num) {\n        $sum = 0;\n      \
    \  $num = abs($num);\n        while ($num > 0) {\n            $sum += $num % 10;\n\
    \            $num = floor($num / 10);\n        }\n        if ($sum > 0) {\n  \
    \          $count++;\n        }\n    }\n    return $count;\n}\nfunction candidate(...$args)\
    \ {\n    return count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpxn1a7huw.php:30\n\
    Stack trace:\n#0 /tmp/tmpxn1a7huw.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpxn1a7huw.php\
    \ on line 30\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n    $count = 0;\n    foreach ($arr as $num) {\n        $sum = 0;\n      \
    \  $num = abs($num);\n        while ($num > 0) {\n            $sum += $num % 10;\n\
    \            $num = (int)($num / 10);\n        }\n        if ($sum > 0) {\n  \
    \          $count++;\n        }\n    }\n    return $count;\n}\n\nfunction candidate(...$args)\
    \ {\n    return count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpdl311vx2.php:31\n\
    Stack trace:\n#0 /tmp/tmpdl311vx2.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpdl311vx2.php\
    \ on line 31\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n    $count = 0;\n    foreach ($arr as $num) {\n        $sum = 0;\n      \
    \  if ($num < 0) {\n            $num = -$num;\n            $sum += $num % 10;\n\
    \            $num = (int)($num / 10);\n        }\n        while ($num > 0) {\n\
    \            $sum += $num % 10;\n            $num = (int)($num / 10);\n      \
    \  }\n        if ($sum > 0) {\n            $count++;\n        }\n    }\n    return\
    \ $count;\n}\n\nfunction candidate(...$args) {\n    return count_nums(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, 0)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 2, -2, 3, 4, 5)) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 6, 9, -6, 0,\
    \ 1, 5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 100, 98, -7, 1, -1)) !== 4) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(12, 23, 34, -45, -56, 0)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmphwfbbzzc.php:35\n\
    Stack trace:\n#0 /tmp/tmphwfbbzzc.php(44): test()\n#1 {main}\n  thrown in /tmp/tmphwfbbzzc.php\
    \ on line 35\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n    $count = 0;\n    foreach ($arr as $num) {\n        $sum = 0;\n      \
    \  $num = abs($num);\n        while ($num > 0) {\n            $sum += $num % 10;\n\
    \            $num = floor($num / 10);\n        }\n        if ($sum > 0) {\n  \
    \          $count++;\n        }\n    }\n    return $count;\n}\n\nfunction candidate(...$args)\
    \ {\n    return count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp4ovf7ncf.php:31\n\
    Stack trace:\n#0 /tmp/tmp4ovf7ncf.php(40): test()\n#1 {main}\n  thrown in /tmp/tmp4ovf7ncf.php\
    \ on line 31\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n    $count = 0;\n    foreach ($arr as $num) {\n        if ($num < 0) {\n\
    \            $num = abs($num);\n            $num = -$num;\n        }\n       \
    \ $sum = 0;\n        while ($num > 0) {\n            $sum += $num % 10;\n    \
    \        $num = floor($num / 10);\n        }\n        if ($sum > 0) {\n      \
    \      $count++;\n        }\n    }\n    return $count;\n}\n\nfunction candidate(...$args)\
    \ {\n    return count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpqm6_fk4c.php:38\n\
    Stack trace:\n#0 /tmp/tmpqm6_fk4c.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpqm6_fk4c.php\
    \ on line 38\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n    $count = 0;\n    foreach ($arr as $num) {\n        if ($num < 0) {\n\
    \            $num = -$num;\n        }\n        $sum = 0;\n        while ($num\
    \ > 0) {\n            $sum += $num % 10;\n            $num = (int)($num / 10);\n\
    \        }\n        if ($sum > 0) {\n            $count++;\n        }\n    }\n\
    \    return $count;\n}\n\nfunction candidate(...$args) {\n    return count_nums(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, 0)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 2, -2, 3, 4, 5)) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 6, 9, -6, 0,\
    \ 1, 5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 100, 98, -7, 1, -1)) !== 4) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(12, 23, 34, -45, -56, 0)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpu7lpg34j.php:33\n\
    Stack trace:\n#0 /tmp/tmpu7lpg34j.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpu7lpg34j.php\
    \ on line 33\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n    $count = 0;\n    foreach ($arr as $num) {\n        $sum = 0;\n      \
    \  if ($num < 0) {\n            $num = -$num;\n            $sum += -1;\n     \
    \   }\n        while ($num > 0) {\n            $sum += $num % 10;\n          \
    \  $num = (int)($num / 10);\n        }\n        if ($sum > 0) {\n            $count++;\n\
    \        }\n    }\n    return $count;\n}\n\nfunction candidate(...$args) {\n \
    \   return count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpl23o7p_z.php:34\n\
    Stack trace:\n#0 /tmp/tmpl23o7p_z.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpl23o7p_z.php\
    \ on line 34\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n    $count = 0;\n    foreach ($arr as $num) {\n        $sum = 0;\n      \
    \  if ($num < 0) {\n            $num = -$num;\n            $sum += -1;\n     \
    \   }\n        while ($num > 0) {\n            $sum += $num % 10;\n          \
    \  $num = (int)($num / 10);\n        }\n        if ($sum > 0) {\n            $count++;\n\
    \        }\n    }\n    return $count;\n}\n\nfunction candidate(...$args) {\n \
    \   return count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpixui3r_d.php:34\n\
    Stack trace:\n#0 /tmp/tmpixui3r_d.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpixui3r_d.php\
    \ on line 34\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n    $count = 0;\n    foreach ($arr as $num) {\n        $sum = 0;\n      \
    \  if ($num < 0) {\n            $num = -$num;\n            $sum += -1;\n     \
    \   }\n        while ($num > 0) {\n            $sum += $num % 10;\n          \
    \  $num = (int)($num / 10);\n        }\n        if ($sum > 0) {\n            $count++;\n\
    \        }\n    }\n    return $count;\n}\n\nfunction candidate(...$args) {\n \
    \   return count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpevadvxfu.php:34\n\
    Stack trace:\n#0 /tmp/tmpevadvxfu.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpevadvxfu.php\
    \ on line 34\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n    $count = 0;\n    foreach ($arr as $num) {\n        $sum = 0;\n      \
    \  if ($num < 0) {\n            $num = $num * -1;\n            $sum += $num %\
    \ 10;\n            $num = $num / 10;\n        }\n        while ($num > 0) {\n\
    \            $sum += $num % 10;\n            $num = $num / 10;\n        }\n  \
    \      if ($sum > 0) {\n            $count++;\n        }\n    }\n    return $count;\n\
    }\n\nfunction candidate(...$args) {\n    return count_nums(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-1, -2, 0)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 2, -2, 3, 4, 5)) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 6, 9, -6, 0,\
    \ 1, 5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 100, 98, -7, 1, -1)) !== 4) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(12, 23, 34, -45, -56, 0)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpakjmbe_t.php:35\n\
    Stack trace:\n#0 /tmp/tmpakjmbe_t.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpakjmbe_t.php\
    \ on line 35\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n    $count = 0;\n    foreach ($arr as $num) {\n        $sum = 0;\n      \
    \  if ($num < 0) {\n            $sum += abs($num) % 10;\n            $num = abs($num)\
    \ / 10;\n        }\n        while ($num > 0) {\n            $sum += $num % 10;\n\
    \            $num = $num / 10;\n        }\n        if ($sum > 0) {\n         \
    \   $count++;\n        }\n    }\n    return $count;\n}\nfunction candidate(...$args)\
    \ {\n    return count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpyzx4z6uf.php:33\n\
    Stack trace:\n#0 /tmp/tmpyzx4z6uf.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpyzx4z6uf.php\
    \ on line 33\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n  $count = 0;\n  foreach ($arr as $num) {\n    $sum = 0;\n    if ($num <\
    \ 0) {\n      $sum += abs($num) % 10;\n      $num = abs($num) / 10;\n    }\n \
    \   while ($num > 0) {\n      $sum += $num % 10;\n      $num = $num / 10;\n  \
    \  }\n    if ($sum > 0) {\n      $count++;\n    }\n  }\n  return $count;\n}\n\n\
    function candidate(...$args) {\n    return count_nums(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-1, -2, 0)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 2, -2, 3, 4, 5)) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 6, 9, -6, 0,\
    \ 1, 5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 100, 98, -7, 1, -1)) !== 4) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(12, 23, 34, -45, -56, 0)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmptfkri_dy.php:34\n\
    Stack trace:\n#0 /tmp/tmptfkri_dy.php(43): test()\n#1 {main}\n  thrown in /tmp/tmptfkri_dy.php\
    \ on line 34\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n    $count = 0;\n    foreach ($arr as $num) {\n        $sum = 0;\n      \
    \  $num = abs($num);\n        while ($num > 0) {\n            $sum += $num % 10;\n\
    \            $num = floor($num / 10);\n        }\n        if ($sum > 0) {\n  \
    \          $count++;\n        }\n    }\n    return $count;\n}\n\nfunction candidate(...$args)\
    \ {\n    return count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp1dg3x8s4.php:31\n\
    Stack trace:\n#0 /tmp/tmp1dg3x8s4.php(40): test()\n#1 {main}\n  thrown in /tmp/tmp1dg3x8s4.php\
    \ on line 31\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n    $count = 0;\n    foreach ($arr as $num) {\n        $sum = 0;\n      \
    \  if ($num < 0) {\n            $num = abs($num);\n            $sum += $num %\
    \ 10;\n            $num = floor($num / 10);\n        }\n        while ($num >\
    \ 0) {\n            $sum += $num % 10;\n            $num = floor($num / 10);\n\
    \        }\n        if ($sum > 0) {\n            $count++;\n        }\n    }\n\
    \    return $count;\n}\n\nfunction candidate(...$args) {\n    return count_nums(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, 0)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 2, -2, 3, 4, 5)) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 6, 9, -6, 0,\
    \ 1, 5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 100, 98, -7, 1, -1)) !== 4) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(12, 23, 34, -45, -56, 0)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp3o2upw7c.php:35\n\
    Stack trace:\n#0 /tmp/tmp3o2upw7c.php(44): test()\n#1 {main}\n  thrown in /tmp/tmp3o2upw7c.php\
    \ on line 35\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n    $count = 0;\n    foreach ($arr as $num) {\n        $sum = 0;\n      \
    \  $num = abs($num);\n        while ($num > 0) {\n            $sum += $num % 10;\n\
    \            $num = floor($num / 10);\n        }\n        if ($sum > 0) {\n  \
    \          $count++;\n        }\n    }\n    return $count;\n}\n\nfunction candidate(...$args)\
    \ {\n    return count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpv46qme33.php:31\n\
    Stack trace:\n#0 /tmp/tmpv46qme33.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpv46qme33.php\
    \ on line 31\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n    $count = 0;\n    foreach ($arr as $num) {\n        $sum = 0;\n      \
    \  if ($num < 0) {\n            $sum += abs($num) % 10;\n            $num = abs($num)\
    \ / 10;\n        }\n        while ($num > 0) {\n            $sum += $num % 10;\n\
    \            $num = $num / 10;\n        }\n        if ($sum > 0) {\n         \
    \   $count++;\n        }\n    }\n    return $count;\n}\n\nfunction candidate(...$args)\
    \ {\n    return count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpayx37ytq.php:34\n\
    Stack trace:\n#0 /tmp/tmpayx37ytq.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpayx37ytq.php\
    \ on line 34\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n    $count = 0;\n    foreach ($arr as $num) {\n        $sum = 0;\n      \
    \  $num = abs($num);\n        while ($num > 0) {\n            $sum += $num % 10;\n\
    \            $num = floor($num / 10);\n        }\n        if ($sum > 0) {\n  \
    \          $count++;\n        }\n    }\n    return $count;\n}\nfunction candidate(...$args)\
    \ {\n    return count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpnp795qe5.php:30\n\
    Stack trace:\n#0 /tmp/tmpnp795qe5.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpnp795qe5.php\
    \ on line 30\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n    $count = 0;\n    foreach ($arr as $num) {\n        $sum = 0;\n      \
    \  $num = abs($num);\n        while ($num > 0) {\n            $sum += $num % 10;\n\
    \            $num = (int)($num / 10);\n        }\n        if ($sum > 0) {\n  \
    \          $count++;\n        }\n    }\n    return $count;\n}\n\nfunction candidate(...$args)\
    \ {\n    return count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpgme2s1wd.php:31\n\
    Stack trace:\n#0 /tmp/tmpgme2s1wd.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpgme2s1wd.php\
    \ on line 31\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n    $count = 0;\n    foreach ($arr as $num) {\n        $sum = 0;\n      \
    \  if ($num < 0) {\n            $num = -$num;\n            $sum += -1;\n     \
    \   }\n        while ($num > 0) {\n            $sum += $num % 10;\n          \
    \  $num = (int)($num / 10);\n        }\n        if ($sum > 0) {\n            $count++;\n\
    \        }\n    }\n    return $count;\n}\n\nfunction candidate(...$args) {\n \
    \   return count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp864rmmrv.php:34\n\
    Stack trace:\n#0 /tmp/tmp864rmmrv.php(43): test()\n#1 {main}\n  thrown in /tmp/tmp864rmmrv.php\
    \ on line 34\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n  $count = 0;\n  foreach ($arr as $num) {\n    $sum = 0;\n    $num = abs($num);\n\
    \    while ($num > 0) {\n      $sum += $num % 10;\n      $num = (int)($num / 10);\n\
    \    }\n    if ($sum > 0) {\n      $count++;\n    }\n  }\n  return $count;\n}\n\
    \nfunction candidate(...$args) {\n    return count_nums(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-1, -2, 0)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 2, -2, 3, 4, 5)) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 6, 9, -6, 0,\
    \ 1, 5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 100, 98, -7, 1, -1)) !== 4) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(12, 23, 34, -45, -56, 0)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpt0dyd9i4.php:31\n\
    Stack trace:\n#0 /tmp/tmpt0dyd9i4.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpt0dyd9i4.php\
    \ on line 31\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n    $count = 0;\n    foreach ($arr as $num) {\n        $sum = 0;\n      \
    \  $num = abs($num);\n        while ($num > 0) {\n            $sum += $num % 10;\n\
    \            $num = floor($num / 10);\n        }\n        if ($sum > 0) {\n  \
    \          $count++;\n        }\n    }\n    return $count;\n}\n\nfunction candidate(...$args)\
    \ {\n    return count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpwlpvrha3.php:31\n\
    Stack trace:\n#0 /tmp/tmpwlpvrha3.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpwlpvrha3.php\
    \ on line 31\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n    $count = 0;\n    foreach ($arr as $num) {\n        $sum = 0;\n      \
    \  if ($num < 0) {\n            $num = $num * -1;\n            $sum = $sum + ($num\
    \ % 10);\n            $num = $num / 10;\n        }\n        while ($num > 0) {\n\
    \            $sum = $sum + ($num % 10);\n            $num = $num / 10;\n     \
    \   }\n        if ($sum > 0) {\n            $count++;\n        }\n    }\n    return\
    \ $count;\n}\n\nfunction candidate(...$args) {\n    return count_nums(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, 0)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 2, -2, 3, 4, 5)) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 6, 9, -6, 0,\
    \ 1, 5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 100, 98, -7, 1, -1)) !== 4) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(12, 23, 34, -45, -56, 0)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp9wam6zo6.php:35\n\
    Stack trace:\n#0 /tmp/tmp9wam6zo6.php(44): test()\n#1 {main}\n  thrown in /tmp/tmp9wam6zo6.php\
    \ on line 35\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n    $count = 0;\n    foreach ($arr as $num) {\n        $sum = 0;\n      \
    \  if ($num < 0) {\n            $sum += abs($num % 10);\n            $num = abs($num\
    \ / 10);\n        }\n        while ($num > 0) {\n            $sum += $num % 10;\n\
    \            $num = $num / 10;\n        }\n        if ($sum > 0) {\n         \
    \   $count++;\n        }\n    }\n    return $count;\n}\n\nfunction candidate(...$args)\
    \ {\n    return count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpk1o5yby9.php:34\n\
    Stack trace:\n#0 /tmp/tmpk1o5yby9.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpk1o5yby9.php\
    \ on line 34\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n    $count = 0;\n    foreach ($arr as $num) {\n        $sum = 0;\n      \
    \  if ($num < 0) {\n            $num = -$num;\n            $sum += -1;\n     \
    \   }\n        while ($num > 0) {\n            $sum += $num % 10;\n          \
    \  $num = (int)($num / 10);\n        }\n        if ($sum > 0) {\n            $count++;\n\
    \        }\n    }\n    return $count;\n}\n\nfunction candidate(...$args) {\n \
    \   return count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmplfih1z9t.php:34\n\
    Stack trace:\n#0 /tmp/tmplfih1z9t.php(43): test()\n#1 {main}\n  thrown in /tmp/tmplfih1z9t.php\
    \ on line 34\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n  $count = 0;\n  foreach ($arr as $num) {\n    $digits = array_map('intval',\
    \ str_split(abs($num)));\n    $sum = array_sum($digits);\n    if ($sum > 0) {\n\
    \      $count++;\n    }\n  }\n  return $count;\n}\n\nfunction candidate(...$args)\
    \ {\n    return count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpejqzv5st.php:27\n\
    Stack trace:\n#0 /tmp/tmpejqzv5st.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpejqzv5st.php\
    \ on line 27\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n    $count = 0;\n    foreach ($arr as $num) {\n        $sum = 0;\n      \
    \  if ($num < 0) {\n            $num = -$num;\n            $sum += -1;\n     \
    \   }\n        while ($num > 0) {\n            $sum += $num % 10;\n          \
    \  $num = (int)($num / 10);\n        }\n        if ($sum > 0) {\n            $count++;\n\
    \        }\n    }\n    return $count;\n}\n\nfunction candidate(...$args) {\n \
    \   return count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpj36t4p_v.php:34\n\
    Stack trace:\n#0 /tmp/tmpj36t4p_v.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpj36t4p_v.php\
    \ on line 34\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n    $count = 0;\n    foreach ($arr as $num) {\n        $sum = 0;\n      \
    \  if ($num < 0) {\n            $num = -$num;\n            $sum += -1;\n     \
    \   }\n        while ($num > 0) {\n            $sum += $num % 10;\n          \
    \  $num = (int)($num / 10);\n        }\n        if ($sum > 0) {\n            $count++;\n\
    \        }\n    }\n    return $count;\n}\n\nfunction candidate(...$args) {\n \
    \   return count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp5uy33o53.php:34\n\
    Stack trace:\n#0 /tmp/tmp5uy33o53.php(43): test()\n#1 {main}\n  thrown in /tmp/tmp5uy33o53.php\
    \ on line 34\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n    $count = 0;\n    foreach ($arr as $num) {\n        $digits = str_split(abs($num));\n\
    \        $sum = 0;\n        foreach ($digits as $digit) {\n            $sum +=\
    \ $digit;\n        }\n        if ($sum > 0) {\n            $count++;\n       \
    \ }\n    }\n    return $count;\n}\nfunction candidate(...$args) {\n    return\
    \ count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpaezxuwvl.php:29\n\
    Stack trace:\n#0 /tmp/tmpaezxuwvl.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpaezxuwvl.php\
    \ on line 29\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n    $count = 0;\n    foreach ($arr as $num) {\n        if ($num < 0) {\n\
    \            $num = -$num;\n        }\n        $sum = 0;\n        while ($num\
    \ > 0) {\n            $sum += $num % 10;\n            $num = intval($num / 10);\n\
    \        }\n        if ($sum > 0) {\n            $count++;\n        }\n    }\n\
    \    return $count;\n}\n\nfunction candidate(...$args) {\n    return count_nums(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, 0)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 2, -2, 3, 4, 5)) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 6, 9, -6, 0,\
    \ 1, 5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 100, 98, -7, 1, -1)) !== 4) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(12, 23, 34, -45, -56, 0)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp02fard3w.php:33\n\
    Stack trace:\n#0 /tmp/tmp02fard3w.php(42): test()\n#1 {main}\n  thrown in /tmp/tmp02fard3w.php\
    \ on line 33\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n    $count = 0;\n    foreach ($arr as $num) {\n        $sum = 0;\n      \
    \  $num = abs($num);\n        while ($num > 0) {\n            $sum += $num % 10;\n\
    \            $num = floor($num / 10);\n        }\n        if ($sum > 0) {\n  \
    \          $count++;\n        }\n    }\n    return $count;\n}\n\nfunction candidate(...$args)\
    \ {\n    return count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpzsqim_7z.php:31\n\
    Stack trace:\n#0 /tmp/tmpzsqim_7z.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpzsqim_7z.php\
    \ on line 31\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n    $count = 0;\n    foreach ($arr as $num) {\n        $sum = 0;\n      \
    \  $num = abs($num);\n        while ($num > 0) {\n            $sum += $num % 10;\n\
    \            $num = floor($num / 10);\n        }\n        if ($sum > 0) {\n  \
    \          $count++;\n        }\n    }\n    return $count;\n}\n\nfunction candidate(...$args)\
    \ {\n    return count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpt73pt1xh.php:31\n\
    Stack trace:\n#0 /tmp/tmpt73pt1xh.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpt73pt1xh.php\
    \ on line 31\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n    $count = 0;\n    foreach ($arr as $num) {\n        $sum = 0;\n      \
    \  if ($num < 0) {\n            $num = -$num;\n            $sum += -1;\n     \
    \   }\n        while ($num > 0) {\n            $sum += $num % 10;\n          \
    \  $num = (int)($num / 10);\n        }\n        if ($sum > 0) {\n            $count++;\n\
    \        }\n    }\n    return $count;\n}\n\nfunction candidate(...$args) {\n \
    \   return count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpfl52v9l4.php:34\n\
    Stack trace:\n#0 /tmp/tmpfl52v9l4.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpfl52v9l4.php\
    \ on line 34\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n    $count = 0;\n    foreach ($arr as $num) {\n        if ($num < 0) {\n\
    \            $num = -$num;\n        }\n        $sum = 0;\n        while ($num\
    \ > 0) {\n            $sum += $num % 10;\n            $num = (int)($num / 10);\n\
    \        }\n        if ($sum > 0) {\n            $count++;\n        }\n    }\n\
    \    return $count;\n}\n\nfunction candidate(...$args) {\n    return count_nums(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, 0)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 2, -2, 3, 4, 5)) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 6, 9, -6, 0,\
    \ 1, 5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 100, 98, -7, 1, -1)) !== 4) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(12, 23, 34, -45, -56, 0)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp7p89p_s2.php:33\n\
    Stack trace:\n#0 /tmp/tmp7p89p_s2.php(42): test()\n#1 {main}\n  thrown in /tmp/tmp7p89p_s2.php\
    \ on line 33\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n    $count = 0;\n    foreach ($arr as $num) {\n        $sum = 0;\n      \
    \  if ($num < 0) {\n            $num = -$num;\n            $sum += $num % 10;\n\
    \            $num = floor($num / 10);\n        }\n        while ($num > 0) {\n\
    \            $sum += $num % 10;\n            $num = floor($num / 10);\n      \
    \  }\n        if ($sum > 0) {\n            $count++;\n        }\n    }\n    return\
    \ $count;\n}\n\nfunction candidate(...$args) {\n    return count_nums(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, 0)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 2, -2, 3, 4, 5)) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 6, 9, -6, 0,\
    \ 1, 5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 100, 98, -7, 1, -1)) !== 4) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(12, 23, 34, -45, -56, 0)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpd2mkdpqe.php:35\n\
    Stack trace:\n#0 /tmp/tmpd2mkdpqe.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpd2mkdpqe.php\
    \ on line 35\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n    $count = 0;\n    foreach ($arr as $num) {\n        $sum = 0;\n      \
    \  $num = abs($num);\n        while ($num > 0) {\n            $sum += $num % 10;\n\
    \            $num = floor($num / 10);\n        }\n        if ($sum > 0) {\n  \
    \          $count++;\n        }\n    }\n    return $count;\n}\n\nfunction candidate(...$args)\
    \ {\n    return count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpznawi2hv.php:31\n\
    Stack trace:\n#0 /tmp/tmpznawi2hv.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpznawi2hv.php\
    \ on line 31\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n    $count = 0;\n    foreach ($arr as $num) {\n        $sum = 0;\n      \
    \  if ($num < 0) {\n            $sum += abs($num) % 10;\n            $num = abs($num)\
    \ / 10;\n        }\n        while ($num > 0) {\n            $sum += $num % 10;\n\
    \            $num = $num / 10;\n        }\n        if ($sum > 0) {\n         \
    \   $count++;\n        }\n    }\n    return $count;\n}\n\nfunction candidate(...$args)\
    \ {\n    return count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmprq2yls3h.php:34\n\
    Stack trace:\n#0 /tmp/tmprq2yls3h.php(43): test()\n#1 {main}\n  thrown in /tmp/tmprq2yls3h.php\
    \ on line 34\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n    $count = 0;\n    foreach ($arr as $num) {\n        $sum = 0;\n      \
    \  $num = abs($num);\n        while ($num > 0) {\n            $sum += $num % 10;\n\
    \            $num = (int)($num / 10);\n        }\n        if ($sum > 0) {\n  \
    \          $count++;\n        }\n    }\n    return $count;\n}\n\nfunction candidate(...$args)\
    \ {\n    return count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp01tavcht.php:31\n\
    Stack trace:\n#0 /tmp/tmp01tavcht.php(40): test()\n#1 {main}\n  thrown in /tmp/tmp01tavcht.php\
    \ on line 31\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n    $count = 0;\n    foreach ($arr as $num) {\n        $sum = 0;\n      \
    \  if ($num < 0) {\n            $num = -$num;\n            $sum += -1;\n     \
    \   }\n        while ($num > 0) {\n            $sum += $num % 10;\n          \
    \  $num = (int)($num / 10);\n        }\n        if ($sum > 0) {\n            $count++;\n\
    \        }\n    }\n    return $count;\n}\n\nfunction candidate(...$args) {\n \
    \   return count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpmwoo5hip.php:34\n\
    Stack trace:\n#0 /tmp/tmpmwoo5hip.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpmwoo5hip.php\
    \ on line 34\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n    $count = 0;\n    foreach ($arr as $num) {\n        $sum = 0;\n      \
    \  $num = abs($num);\n        while ($num > 0) {\n            $sum += $num % 10;\n\
    \            $num = floor($num / 10);\n        }\n        if ($sum > 0) {\n  \
    \          $count++;\n        }\n    }\n    return $count;\n}\n\nfunction candidate(...$args)\
    \ {\n    return count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpdsji_90a.php:31\n\
    Stack trace:\n#0 /tmp/tmpdsji_90a.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpdsji_90a.php\
    \ on line 31\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n    $count = 0;\n    foreach ($arr as $num) {\n        $sum = 0;\n      \
    \  $num = abs($num);\n        while ($num > 0) {\n            $sum += $num % 10;\n\
    \            $num = floor($num / 10);\n        }\n        if ($sum > 0) {\n  \
    \          $count++;\n        }\n    }\n    return $count;\n}\n\nfunction candidate(...$args)\
    \ {\n    return count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpdw7bz1g4.php:31\n\
    Stack trace:\n#0 /tmp/tmpdw7bz1g4.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpdw7bz1g4.php\
    \ on line 31\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n    $count = 0;\n    foreach ($arr as $num) {\n        $sum = 0;\n      \
    \  $num = abs($num);\n        while ($num > 0) {\n            $sum += $num % 10;\n\
    \            $num = floor($num / 10);\n        }\n        if ($sum > 0) {\n  \
    \          $count++;\n        }\n    }\n    return $count;\n}\n\nfunction candidate(...$args)\
    \ {\n    return count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpcspgtbrr.php:31\n\
    Stack trace:\n#0 /tmp/tmpcspgtbrr.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpcspgtbrr.php\
    \ on line 31\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n    $count = 0;\n    foreach ($arr as $num) {\n        $sum = 0;\n      \
    \  if ($num < 0) {\n            $sum += abs($num) % 10;\n            $num = abs($num)\
    \ / 10;\n        }\n        while ($num > 0) {\n            $sum += $num % 10;\n\
    \            $num = $num / 10;\n        }\n        if ($sum > 0) {\n         \
    \   $count++;\n        }\n    }\n    return $count;\n}\n\nfunction candidate(...$args)\
    \ {\n    return count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpe358qb98.php:34\n\
    Stack trace:\n#0 /tmp/tmpe358qb98.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpe358qb98.php\
    \ on line 34\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n    $count = 0;\n    foreach ($arr as $num) {\n        $sum = 0;\n      \
    \  if ($num < 0) {\n            $sum += $num % 10;\n            $num = -$num;\n\
    \        }\n        while ($num > 0) {\n            $sum += $num % 10;\n     \
    \       $num = (int)($num / 10);\n        }\n        if ($sum > 0) {\n       \
    \     $count++;\n        }\n    }\n    return $count;\n}\n\nfunction candidate(...$args)\
    \ {\n    return count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n  $count = 0;\n  foreach ($arr as $num) {\n    $sum = 0;\n    $num = abs($num);\n\
    \    while ($num > 0) {\n      $sum += $num % 10;\n      $num = floor($num / 10);\n\
    \    }\n    if ($sum > 0) {\n      $count++;\n    }\n  }\n  return $count;\n}\n\
    \nfunction candidate(...$args) {\n    return count_nums(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-1, -2, 0)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 2, -2, 3, 4, 5)) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 6, 9, -6, 0,\
    \ 1, 5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 100, 98, -7, 1, -1)) !== 4) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(12, 23, 34, -45, -56, 0)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmps2ry576y.php:31\n\
    Stack trace:\n#0 /tmp/tmps2ry576y.php(40): test()\n#1 {main}\n  thrown in /tmp/tmps2ry576y.php\
    \ on line 31\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n    $count = 0;\n    foreach ($arr as $num) {\n        $sum = 0;\n      \
    \  $num = abs($num);\n        while ($num > 0) {\n            $sum += $num % 10;\n\
    \            $num = floor($num / 10);\n        }\n        if ($sum > 0) {\n  \
    \          $count++;\n        }\n    }\n    return $count;\n}\n\nfunction candidate(...$args)\
    \ {\n    return count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpzjgurdk4.php:31\n\
    Stack trace:\n#0 /tmp/tmpzjgurdk4.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpzjgurdk4.php\
    \ on line 31\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n    $count = 0;\n    foreach ($arr as $num) {\n        $sum = 0;\n      \
    \  if ($num < 0) {\n            $num = -$num;\n            $sum += -1;\n     \
    \   }\n        while ($num > 0) {\n            $sum += $num % 10;\n          \
    \  $num = floor($num / 10);\n        }\n        if ($sum > 0) {\n            $count++;\n\
    \        }\n    }\n    return $count;\n}\nfunction candidate(...$args) {\n   \
    \ return count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp3tqcl2ba.php:33\n\
    Stack trace:\n#0 /tmp/tmp3tqcl2ba.php(42): test()\n#1 {main}\n  thrown in /tmp/tmp3tqcl2ba.php\
    \ on line 33\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n    $count = 0;\n    foreach ($arr as $num) {\n        $sum = 0;\n      \
    \  $num = abs($num);\n        while ($num > 0) {\n            $sum += $num % 10;\n\
    \            $num = floor($num / 10);\n        }\n        if ($sum > 0) {\n  \
    \          $count++;\n        }\n    }\n    return $count;\n}\n\nfunction candidate(...$args)\
    \ {\n    return count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp8g794a_8.php:31\n\
    Stack trace:\n#0 /tmp/tmp8g794a_8.php(40): test()\n#1 {main}\n  thrown in /tmp/tmp8g794a_8.php\
    \ on line 31\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n    $count = 0;\n    foreach ($arr as $num) {\n        $sum = 0;\n      \
    \  if ($num < 0) {\n            $sum += abs($num) % 10;\n            $num = abs($num)\
    \ / 10;\n        }\n        while ($num > 0) {\n            $sum += $num % 10;\n\
    \            $num = $num / 10;\n        }\n        if ($sum > 0) {\n         \
    \   $count++;\n        }\n    }\n    return $count;\n}\n\nfunction candidate(...$args)\
    \ {\n    return count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp4w0igama.php:34\n\
    Stack trace:\n#0 /tmp/tmp4w0igama.php(43): test()\n#1 {main}\n  thrown in /tmp/tmp4w0igama.php\
    \ on line 34\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n    $count = 0;\n    foreach ($arr as $num) {\n        $sum = 0;\n      \
    \  $num = abs($num);\n        while ($num > 0) {\n            $sum += $num % 10;\n\
    \            $num = floor($num / 10);\n        }\n        if ($sum > 0) {\n  \
    \          $count++;\n        }\n    }\n    return $count;\n}\n\nfunction candidate(...$args)\
    \ {\n    return count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp_z7fh3bq.php:31\n\
    Stack trace:\n#0 /tmp/tmp_z7fh3bq.php(40): test()\n#1 {main}\n  thrown in /tmp/tmp_z7fh3bq.php\
    \ on line 31\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n    $count = 0;\n    foreach ($arr as $num) {\n        $sum = 0;\n      \
    \  if ($num < 0) {\n            $num = -$num;\n            $sum += -1;\n     \
    \   }\n        while ($num > 0) {\n            $sum += $num % 10;\n          \
    \  $num = (int)($num / 10);\n        }\n        if ($sum > 0) {\n            $count++;\n\
    \        }\n    }\n    return $count;\n}\n\nfunction candidate(...$args) {\n \
    \   return count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpozotq1vj.php:34\n\
    Stack trace:\n#0 /tmp/tmpozotq1vj.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpozotq1vj.php\
    \ on line 34\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n    $count = 0;\n    foreach ($arr as $num) {\n        $sum = 0;\n      \
    \  $num = abs($num);\n        while ($num > 0) {\n            $sum += $num % 10;\n\
    \            $num = floor($num / 10);\n        }\n        if ($sum > 0) {\n  \
    \          $count++;\n        }\n    }\n    return $count;\n}\n\nfunction candidate(...$args)\
    \ {\n    return count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpw33rk4uh.php:31\n\
    Stack trace:\n#0 /tmp/tmpw33rk4uh.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpw33rk4uh.php\
    \ on line 31\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n  $count = 0;\n  foreach ($arr as $num) {\n    $sum = 0;\n    $num = abs($num);\n\
    \    while ($num > 0) {\n      $sum += $num % 10;\n      $num = floor($num / 10);\n\
    \    }\n    if ($sum > 0) {\n      $count++;\n    }\n  }\n  return $count;\n}\n\
    \nfunction candidate(...$args) {\n    return count_nums(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-1, -2, 0)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 2, -2, 3, 4, 5)) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 6, 9, -6, 0,\
    \ 1, 5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 100, 98, -7, 1, -1)) !== 4) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(12, 23, 34, -45, -56, 0)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp8tp9l_j1.php:31\n\
    Stack trace:\n#0 /tmp/tmp8tp9l_j1.php(40): test()\n#1 {main}\n  thrown in /tmp/tmp8tp9l_j1.php\
    \ on line 31\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n    $count = 0;\n    foreach ($arr as $num) {\n        $sum = 0;\n      \
    \  $num = abs($num);\n        while ($num > 0) {\n            $sum += $num % 10;\n\
    \            $num = floor($num / 10);\n        }\n        if ($sum > 0) {\n  \
    \          $count++;\n        }\n    }\n    return $count;\n}\n\nfunction candidate(...$args)\
    \ {\n    return count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpvr_q7lv6.php:31\n\
    Stack trace:\n#0 /tmp/tmpvr_q7lv6.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpvr_q7lv6.php\
    \ on line 31\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n    $count = 0;\n    foreach ($arr as $num) {\n        $sum = 0;\n      \
    \  if ($num < 0) {\n            $num = -$num;\n            $sum += -1;\n     \
    \   }\n        while ($num > 0) {\n            $sum += $num % 10;\n          \
    \  $num = floor($num / 10);\n        }\n        if ($sum > 0) {\n            $count++;\n\
    \        }\n    }\n    return $count;\n}\n\nfunction candidate(...$args) {\n \
    \   return count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpioqu1tvc.php:34\n\
    Stack trace:\n#0 /tmp/tmpioqu1tvc.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpioqu1tvc.php\
    \ on line 34\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n    $count = 0;\n    foreach ($arr as $num) {\n        $sum = 0;\n      \
    \  if ($num < 0) {\n            $num = -$num;\n            $sum += -1;\n     \
    \   }\n        while ($num > 0) {\n            $sum += $num % 10;\n          \
    \  $num = (int)($num / 10);\n        }\n        if ($sum > 0) {\n            $count++;\n\
    \        }\n    }\n    return $count;\n}\n\nfunction candidate(...$args) {\n \
    \   return count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpsn5b1e9_.php:34\n\
    Stack trace:\n#0 /tmp/tmpsn5b1e9_.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpsn5b1e9_.php\
    \ on line 34\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n    $count = 0;\n    foreach ($arr as $item) {\n        $sum = 0;\n     \
    \   $item = abs($item);\n        while ($item > 0) {\n            $sum += $item\
    \ % 10;\n            $item = floor($item / 10);\n        }\n        if ($sum >\
    \ 0) {\n            $count++;\n        }\n    }\n    return $count;\n}\n\nfunction\
    \ candidate(...$args) {\n    return count_nums(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array()) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-1, -2, 0)) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 1, 2, -2, 3, 4, 5)) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 6, 9, -6, 0,\
    \ 1, 5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 100, 98, -7, 1, -1)) !== 4) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(12, 23, 34, -45, -56, 0)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpd2cm_njg.php:31\n\
    Stack trace:\n#0 /tmp/tmpd2cm_njg.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpd2cm_njg.php\
    \ on line 31\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n    $count = 0;\n    foreach ($arr as $num) {\n        $sum = 0;\n      \
    \  if ($num < 0) {\n            $sum += abs($num) % 10;\n            $num = abs($num)\
    \ / 10;\n        }\n        while ($num > 0) {\n            $sum += $num % 10;\n\
    \            $num = $num / 10;\n        }\n        if ($sum > 0) {\n         \
    \   $count++;\n        }\n    }\n    return $count;\n}\n\nfunction candidate(...$args)\
    \ {\n    return count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmptmigdgi5.php:34\n\
    Stack trace:\n#0 /tmp/tmptmigdgi5.php(43): test()\n#1 {main}\n  thrown in /tmp/tmptmigdgi5.php\
    \ on line 34\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n    $count = 0;\n    foreach ($arr as $num) {\n        $sum = 0;\n      \
    \  $num = abs($num);\n        while ($num > 0) {\n            $sum += $num % 10;\n\
    \            $num = floor($num / 10);\n        }\n        if ($sum > 0) {\n  \
    \          $count++;\n        }\n    }\n    return $count;\n}\n\nfunction candidate(...$args)\
    \ {\n    return count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpvgkx1r8s.php:31\n\
    Stack trace:\n#0 /tmp/tmpvgkx1r8s.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpvgkx1r8s.php\
    \ on line 31\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n    $count = 0;\n    foreach ($arr as $num) {\n        $sum = 0;\n      \
    \  $num = abs($num);\n        while ($num > 0) {\n            $sum += $num % 10;\n\
    \            $num = floor($num / 10);\n        }\n        if ($sum > 0) {\n  \
    \          $count++;\n        }\n    }\n    return $count;\n}\nfunction candidate(...$args)\
    \ {\n    return count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmptte8qb4j.php:30\n\
    Stack trace:\n#0 /tmp/tmptte8qb4j.php(39): test()\n#1 {main}\n  thrown in /tmp/tmptte8qb4j.php\
    \ on line 30\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n  $count = 0;\n  foreach ($arr as $num) {\n    $sum = 0;\n    if ($num <\
    \ 0) {\n      $sum += abs($num) % 10;\n      $num = abs($num) / 10;\n    }\n \
    \   while ($num > 0) {\n      $sum += $num % 10;\n      $num = $num / 10;\n  \
    \  }\n    if ($sum > 0) {\n      $count++;\n    }\n  }\n  return $count;\n}\n\n\
    function candidate(...$args) {\n    return count_nums(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-1, -2, 0)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 2, -2, 3, 4, 5)) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 6, 9, -6, 0,\
    \ 1, 5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 100, 98, -7, 1, -1)) !== 4) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(12, 23, 34, -45, -56, 0)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpeok1fgm7.php:34\n\
    Stack trace:\n#0 /tmp/tmpeok1fgm7.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpeok1fgm7.php\
    \ on line 34\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n    $count = 0;\n    foreach ($arr as $num) {\n        $sum = 0;\n      \
    \  if ($num < 0) {\n            $num = -$num;\n            $sum += -1;\n     \
    \   }\n        while ($num > 0) {\n            $sum += $num % 10;\n          \
    \  $num = (int)($num / 10);\n        }\n        if ($sum > 0) {\n            $count++;\n\
    \        }\n    }\n    return $count;\n}\n\nfunction candidate(...$args) {\n \
    \   return count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpwi4irj0o.php:34\n\
    Stack trace:\n#0 /tmp/tmpwi4irj0o.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpwi4irj0o.php\
    \ on line 34\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n  $count = 0;\n  foreach ($arr as $num) {\n    $sum = 0;\n    $num = abs($num);\n\
    \    while ($num > 0) {\n      $sum += $num % 10;\n      $num = floor($num / 10);\n\
    \    }\n    if ($sum > 0) {\n      $count++;\n    }\n  }\n  return $count;\n}\n\
    \nfunction candidate(...$args) {\n    return count_nums(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-1, -2, 0)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 2, -2, 3, 4, 5)) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 6, 9, -6, 0,\
    \ 1, 5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 100, 98, -7, 1, -1)) !== 4) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(12, 23, 34, -45, -56, 0)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpx18a0kky.php:31\n\
    Stack trace:\n#0 /tmp/tmpx18a0kky.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpx18a0kky.php\
    \ on line 31\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n    $count = 0;\n    foreach ($arr as $num) {\n        $sum = 0;\n      \
    \  if ($num < 0) {\n            $num = -$num;\n            $sum += -1;\n     \
    \   }\n        while ($num > 0) {\n            $sum += $num % 10;\n          \
    \  $num = (int)($num / 10);\n        }\n        if ($sum > 0) {\n            $count++;\n\
    \        }\n    }\n    return $count;\n}\n\nfunction candidate(...$args) {\n \
    \   return count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpa48gkpw0.php:34\n\
    Stack trace:\n#0 /tmp/tmpa48gkpw0.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpa48gkpw0.php\
    \ on line 34\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n    $count = 0;\n    foreach ($arr as $num) {\n        $sum = 0;\n      \
    \  $num = abs($num);\n        while ($num > 0) {\n            $sum += $num % 10;\n\
    \            $num = floor($num / 10);\n        }\n        if ($sum > 0) {\n  \
    \          $count++;\n        }\n    }\n    return $count;\n}\n\nfunction candidate(...$args)\
    \ {\n    return count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp1n0jjc3h.php:31\n\
    Stack trace:\n#0 /tmp/tmp1n0jjc3h.php(40): test()\n#1 {main}\n  thrown in /tmp/tmp1n0jjc3h.php\
    \ on line 31\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n    $count = 0;\n    foreach ($arr as $num) {\n        $sum = 0;\n      \
    \  if ($num < 0) {\n            $sum -= $num % 10;\n            $num = -$num;\n\
    \        }\n        while ($num > 0) {\n            $sum += $num % 10;\n     \
    \       $num = intval($num / 10);\n        }\n        if ($sum > 0) {\n      \
    \      $count++;\n        }\n    }\n    return $count;\n}\n\nfunction candidate(...$args)\
    \ {\n    return count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpdqsw3h_8.php:34\n\
    Stack trace:\n#0 /tmp/tmpdqsw3h_8.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpdqsw3h_8.php\
    \ on line 34\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n    $count = 0;\n    foreach ($arr as $num) {\n        $sum = 0;\n      \
    \  if ($num < 0) {\n            $sum += abs($num) % 10;\n            $num = abs($num)\
    \ / 10;\n        }\n        while ($num > 0) {\n            $sum += $num % 10;\n\
    \            $num = $num / 10;\n        }\n        if ($sum > 0) {\n         \
    \   $count++;\n        }\n    }\n    return $count;\n}\n\nfunction candidate(...$args)\
    \ {\n    return count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpmnox302z.php:34\n\
    Stack trace:\n#0 /tmp/tmpmnox302z.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpmnox302z.php\
    \ on line 34\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n    $count = 0;\n    foreach ($arr as $num) {\n        $sum = 0;\n      \
    \  if ($num < 0) {\n            $num = -$num;\n            $sum += -1;\n     \
    \   }\n        while ($num > 0) {\n            $sum += $num % 10;\n          \
    \  $num = (int)($num / 10);\n        }\n        if ($sum > 0) {\n            $count++;\n\
    \        }\n    }\n    return $count;\n}\n\nfunction candidate(...$args) {\n \
    \   return count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpvebrd0t9.php:34\n\
    Stack trace:\n#0 /tmp/tmpvebrd0t9.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpvebrd0t9.php\
    \ on line 34\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n    $count = 0;\n    foreach ($arr as $num) {\n        $sum = 0;\n      \
    \  if ($num < 0) {\n            $num = -$num;\n            $sum += -1;\n     \
    \   }\n        while ($num > 0) {\n            $sum += $num % 10;\n          \
    \  $num = floor($num / 10);\n        }\n        if ($sum > 0) {\n            $count++;\n\
    \        }\n    }\n    return $count;\n}\n\nfunction candidate(...$args) {\n \
    \   return count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpd131e4rg.php:34\n\
    Stack trace:\n#0 /tmp/tmpd131e4rg.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpd131e4rg.php\
    \ on line 34\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n    $count = 0;\n    foreach ($arr as $num) {\n        $sum = 0;\n      \
    \  if ($num < 0) {\n            $num = -$num;\n            $sum += -1;\n     \
    \   }\n        while ($num > 0) {\n            $sum += $num % 10;\n          \
    \  $num = (int)($num / 10);\n        }\n        if ($sum > 0) {\n            $count++;\n\
    \        }\n    }\n    return $count;\n}\n\nfunction candidate(...$args) {\n \
    \   return count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpev3si7it.php:34\n\
    Stack trace:\n#0 /tmp/tmpev3si7it.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpev3si7it.php\
    \ on line 34\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n    $count = 0;\n    foreach ($arr as $num) {\n        $sum = 0;\n      \
    \  if ($num < 0) {\n            $num = -$num;\n            $sum += -1;\n     \
    \   }\n        while ($num > 0) {\n            $sum += $num % 10;\n          \
    \  $num = (int)($num / 10);\n        }\n        if ($sum > 0) {\n            $count++;\n\
    \        }\n    }\n    return $count;\n}\n\nfunction candidate(...$args) {\n \
    \   return count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp8sxde5o3.php:34\n\
    Stack trace:\n#0 /tmp/tmp8sxde5o3.php(43): test()\n#1 {main}\n  thrown in /tmp/tmp8sxde5o3.php\
    \ on line 34\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n  $count = 0;\n  foreach ($arr as $num) {\n    $sum = 0;\n    $num = abs($num);\n\
    \    while ($num > 0) {\n      $sum += $num % 10;\n      $num = floor($num / 10);\n\
    \    }\n    if ($sum > 0) {\n      $count++;\n    }\n  }\n  return $count;\n}\n\
    \nfunction candidate(...$args) {\n    return count_nums(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-1, -2, 0)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 2, -2, 3, 4, 5)) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 6, 9, -6, 0,\
    \ 1, 5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 100, 98, -7, 1, -1)) !== 4) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(12, 23, 34, -45, -56, 0)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp2i66_me1.php:31\n\
    Stack trace:\n#0 /tmp/tmp2i66_me1.php(40): test()\n#1 {main}\n  thrown in /tmp/tmp2i66_me1.php\
    \ on line 31\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n    $count = 0;\n    foreach ($arr as $num) {\n        $sum = 0;\n      \
    \  $num = abs($num);\n        while ($num > 0) {\n            $sum += $num % 10;\n\
    \            $num = floor($num / 10);\n        }\n        if ($sum > 0) {\n  \
    \          $count++;\n        }\n    }\n    return $count;\n}\n\nfunction candidate(...$args)\
    \ {\n    return count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpschbc9sq.php:31\n\
    Stack trace:\n#0 /tmp/tmpschbc9sq.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpschbc9sq.php\
    \ on line 31\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n    $count = 0;\n    foreach ($arr as $num) {\n        $sum = 0;\n      \
    \  $num = abs($num);\n        while ($num > 0) {\n            $sum += $num % 10;\n\
    \            $num = floor($num / 10);\n        }\n        if ($sum > 0) {\n  \
    \          $count++;\n        }\n    }\n    return $count;\n}\n\nfunction candidate(...$args)\
    \ {\n    return count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpeuubwk76.php:31\n\
    Stack trace:\n#0 /tmp/tmpeuubwk76.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpeuubwk76.php\
    \ on line 31\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n    $count = 0;\n    foreach ($arr as $num) {\n        $sum = 0;\n      \
    \  $num = abs($num);\n        while ($num > 0) {\n            $sum += $num % 10;\n\
    \            $num = (int)($num / 10);\n        }\n        if ($sum > 0) {\n  \
    \          $count++;\n        }\n    }\n    return $count;\n}\nfunction candidate(...$args)\
    \ {\n    return count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp9ps3sdnk.php:30\n\
    Stack trace:\n#0 /tmp/tmp9ps3sdnk.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp9ps3sdnk.php\
    \ on line 30\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n    $count = 0;\n    foreach ($arr as $num) {\n        $sum = 0;\n      \
    \  $num = abs($num);\n        while ($num > 0) {\n            $sum += $num % 10;\n\
    \            $num = (int)($num / 10);\n        }\n        if ($sum > 0) {\n  \
    \          $count++;\n        }\n    }\n    return $count;\n}\n\nfunction candidate(...$args)\
    \ {\n    return count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp571dxlga.php:31\n\
    Stack trace:\n#0 /tmp/tmp571dxlga.php(40): test()\n#1 {main}\n  thrown in /tmp/tmp571dxlga.php\
    \ on line 31\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n    $count = 0;\n    foreach ($arr as $num) {\n        $sum = 0;\n      \
    \  if ($num < 0) {\n            $num = $num * -1;\n            $sum = $sum + $num\
    \ % 10;\n            $num = $num / 10;\n        }\n        while ($num > 0) {\n\
    \            $sum = $sum + $num % 10;\n            $num = $num / 10;\n       \
    \ }\n        if ($sum > 0) {\n            $count++;\n        }\n    }\n    return\
    \ $count;\n}\nfunction candidate(...$args) {\n    return count_nums(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, 0)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 2, -2, 3, 4, 5)) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 6, 9, -6, 0,\
    \ 1, 5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 100, 98, -7, 1, -1)) !== 4) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(12, 23, 34, -45, -56, 0)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp0fhxiz0g.php:34\n\
    Stack trace:\n#0 /tmp/tmp0fhxiz0g.php(43): test()\n#1 {main}\n  thrown in /tmp/tmp0fhxiz0g.php\
    \ on line 34\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n    $count = 0;\n    foreach ($arr as $num) {\n        $sum = 0;\n      \
    \  $num = abs($num);\n        while ($num > 0) {\n            $sum += $num % 10;\n\
    \            $num = floor($num / 10);\n        }\n        if ($sum > 0) {\n  \
    \          $count++;\n        }\n    }\n    return $count;\n}\n\nfunction candidate(...$args)\
    \ {\n    return count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpir9kobp_.php:31\n\
    Stack trace:\n#0 /tmp/tmpir9kobp_.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpir9kobp_.php\
    \ on line 31\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n    $count = 0;\n    foreach ($arr as $num) {\n        $num = abs($num);\n\
    \        $sum = 0;\n        while ($num > 0) {\n            $sum += $num % 10;\n\
    \            $num = floor($num / 10);\n        }\n        if ($sum > 0) {\n  \
    \          $count++;\n        }\n    }\n    return $count;\n}\n\nfunction candidate(...$args)\
    \ {\n    return count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp40b361yj.php:31\n\
    Stack trace:\n#0 /tmp/tmp40b361yj.php(40): test()\n#1 {main}\n  thrown in /tmp/tmp40b361yj.php\
    \ on line 31\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n  $count = 0;\n  foreach ($arr as $num) {\n    $sum = 0;\n    if ($num <\
    \ 0) {\n      $num = -$num;\n      $sum += -1;\n    }\n    while ($num > 0) {\n\
    \      $sum += $num % 10;\n      $num = floor($num / 10);\n    }\n    if ($sum\
    \ > 0) {\n      $count++;\n    }\n  }\n  return $count;\n}\n\nfunction candidate(...$args)\
    \ {\n    return count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp2lssdiyl.php:34\n\
    Stack trace:\n#0 /tmp/tmp2lssdiyl.php(43): test()\n#1 {main}\n  thrown in /tmp/tmp2lssdiyl.php\
    \ on line 34\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n    $count = 0;\n    foreach ($arr as $num) {\n        $sum = 0;\n      \
    \  if ($num < 0) {\n            $sum += abs($num) % 10;\n            $num = abs($num)\
    \ / 10;\n        }\n        while ($num > 0) {\n            $sum += $num % 10;\n\
    \            $num = $num / 10;\n        }\n        if ($sum > 0) {\n         \
    \   $count++;\n        }\n    }\n    return $count;\n}\nfunction candidate(...$args)\
    \ {\n    return count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpj6xlm5zh.php:33\n\
    Stack trace:\n#0 /tmp/tmpj6xlm5zh.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpj6xlm5zh.php\
    \ on line 33\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n    $count = 0;\n    foreach ($arr as $number) {\n        $sum = 0;\n   \
    \     $number = abs($number);\n        while ($number > 0) {\n            $sum\
    \ += $number % 10;\n            $number = floor($number / 10);\n        }\n  \
    \      if ($sum > 0) {\n            $count++;\n        }\n    }\n    return $count;\n\
    }\n\nfunction candidate(...$args) {\n    return count_nums(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-1, -2, 0)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 2, -2, 3, 4, 5)) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 6, 9, -6, 0,\
    \ 1, 5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 100, 98, -7, 1, -1)) !== 4) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(12, 23, 34, -45, -56, 0)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpluafs50x.php:31\n\
    Stack trace:\n#0 /tmp/tmpluafs50x.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpluafs50x.php\
    \ on line 31\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n    $count = 0;\n    foreach ($arr as $num) {\n        $sum = 0;\n      \
    \  $num = abs($num);\n        while ($num > 0) {\n            $sum += $num % 10;\n\
    \            $num = floor($num / 10);\n        }\n        if ($sum > 0) {\n  \
    \          $count++;\n        }\n    }\n    return $count;\n}\n\nfunction candidate(...$args)\
    \ {\n    return count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpf5paqrtt.php:31\n\
    Stack trace:\n#0 /tmp/tmpf5paqrtt.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpf5paqrtt.php\
    \ on line 31\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n    $count = 0;\n    foreach ($arr as $num) {\n        $sum = 0;\n      \
    \  $num = abs($num);\n        while ($num > 0) {\n            $sum += $num % 10;\n\
    \            $num = floor($num / 10);\n        }\n        if ($sum > 0) {\n  \
    \          $count++;\n        }\n    }\n    return $count;\n}\n\nfunction candidate(...$args)\
    \ {\n    return count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpiqoxpw77.php:31\n\
    Stack trace:\n#0 /tmp/tmpiqoxpw77.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpiqoxpw77.php\
    \ on line 31\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n    $count = 0;\n    foreach ($arr as $num) {\n        $sum = 0;\n      \
    \  if ($num < 0) {\n            $num = $num * -1;\n            $sum += $num %\
    \ 10;\n            $num = $num / 10;\n        }\n        while ($num > 0) {\n\
    \            $sum += $num % 10;\n            $num = $num / 10;\n        }\n  \
    \      if ($sum > 0) {\n            $count++;\n        }\n    }\n    return $count;\n\
    }\n\nfunction candidate(...$args) {\n    return count_nums(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-1, -2, 0)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 2, -2, 3, 4, 5)) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 6, 9, -6, 0,\
    \ 1, 5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 100, 98, -7, 1, -1)) !== 4) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(12, 23, 34, -45, -56, 0)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpg7a3mtqh.php:35\n\
    Stack trace:\n#0 /tmp/tmpg7a3mtqh.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpg7a3mtqh.php\
    \ on line 35\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n    $count = 0;\n    foreach ($arr as $num) {\n        $sum = 0;\n      \
    \  if ($num < 0) {\n            $sum += $num % 10;\n            $num = -$num;\n\
    \        }\n        while ($num > 0) {\n            $sum += $num % 10;\n     \
    \       $num = (int)($num / 10);\n        }\n        if ($sum > 0) {\n       \
    \     $count++;\n        }\n    }\n    return $count;\n}\n\nfunction candidate(...$args)\
    \ {\n    return count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n    $count = 0;\n    foreach ($arr as $num) {\n        $sum = 0;\n      \
    \  $num = abs($num);\n        while ($num > 0) {\n            $sum += $num % 10;\n\
    \            $num = floor($num / 10);\n        }\n        if ($sum > 0) {\n  \
    \          $count++;\n        }\n    }\n    return $count;\n}\n\nfunction candidate(...$args)\
    \ {\n    return count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp87sdwuo2.php:31\n\
    Stack trace:\n#0 /tmp/tmp87sdwuo2.php(40): test()\n#1 {main}\n  thrown in /tmp/tmp87sdwuo2.php\
    \ on line 31\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n    $count = 0;\n    foreach ($arr as $num) {\n        $sum = 0;\n      \
    \  $num = abs($num);\n        while ($num > 0) {\n            $sum += $num % 10;\n\
    \            $num = floor($num / 10);\n        }\n        if ($sum > 0) {\n  \
    \          $count++;\n        }\n    }\n    return $count;\n}\n\nfunction candidate(...$args)\
    \ {\n    return count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp_yf92oev.php:31\n\
    Stack trace:\n#0 /tmp/tmp_yf92oev.php(40): test()\n#1 {main}\n  thrown in /tmp/tmp_yf92oev.php\
    \ on line 31\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n    $count = 0;\n    foreach ($arr as $num) {\n        $sum = 0;\n      \
    \  if ($num < 0) {\n            $num = -$num;\n            $sum += $num % 10;\n\
    \            $num = (int)($num / 10);\n        }\n        while ($num > 0) {\n\
    \            $sum += $num % 10;\n            $num = (int)($num / 10);\n      \
    \  }\n        if ($sum > 0) {\n            $count++;\n        }\n    }\n    return\
    \ $count;\n}\n\nfunction candidate(...$args) {\n    return count_nums(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, 0)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 2, -2, 3, 4, 5)) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 6, 9, -6, 0,\
    \ 1, 5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 100, 98, -7, 1, -1)) !== 4) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(12, 23, 34, -45, -56, 0)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp2tvdmxeg.php:35\n\
    Stack trace:\n#0 /tmp/tmp2tvdmxeg.php(44): test()\n#1 {main}\n  thrown in /tmp/tmp2tvdmxeg.php\
    \ on line 35\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n    $count = 0;\n    foreach ($arr as $num) {\n        $sum = 0;\n      \
    \  if ($num < 0) {\n            $num = -$num;\n            $sum += -1;\n     \
    \   }\n        while ($num > 0) {\n            $sum += $num % 10;\n          \
    \  $num = (int)($num / 10);\n        }\n        if ($sum > 0) {\n            $count++;\n\
    \        }\n    }\n    return $count;\n}\n\nfunction candidate(...$args) {\n \
    \   return count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpamu1hygz.php:34\n\
    Stack trace:\n#0 /tmp/tmpamu1hygz.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpamu1hygz.php\
    \ on line 34\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n    $count = 0;\n    foreach ($arr as $num) {\n        $sum = 0;\n      \
    \  $num = abs($num);\n        while ($num > 0) {\n            $sum += $num % 10;\n\
    \            $num = floor($num / 10);\n        }\n        if ($sum > 0) {\n  \
    \          $count++;\n        }\n    }\n    return $count;\n}\n\nfunction candidate(...$args)\
    \ {\n    return count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpbvnvdkxb.php:31\n\
    Stack trace:\n#0 /tmp/tmpbvnvdkxb.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpbvnvdkxb.php\
    \ on line 31\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n  $count = 0;\n  foreach ($arr as $num) {\n    $sum = 0;\n    if ($num <\
    \ 0) {\n      $num = -$num;\n      $sum += -1;\n    }\n    while ($num > 0) {\n\
    \      $sum += $num % 10;\n      $num = (int)($num / 10);\n    }\n    if ($sum\
    \ > 0) {\n      $count++;\n    }\n  }\n  return $count;\n}\n\nfunction candidate(...$args)\
    \ {\n    return count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpe7iio4ru.php:34\n\
    Stack trace:\n#0 /tmp/tmpe7iio4ru.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpe7iio4ru.php\
    \ on line 34\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n    $count = 0;\n    foreach ($arr as $num) {\n        $sum = 0;\n      \
    \  if ($num < 0) {\n            $num = -$num;\n            $sum -= $num % 10;\n\
    \            $num = (int)($num / 10);\n        }\n        while ($num > 0) {\n\
    \            $sum += $num % 10;\n            $num = (int)($num / 10);\n      \
    \  }\n        if ($sum > 0) {\n            $count++;\n        }\n    }\n    return\
    \ $count;\n}\n\nfunction candidate(...$args) {\n    return count_nums(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, 0)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 2, -2, 3, 4, 5)) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 6, 9, -6, 0,\
    \ 1, 5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 100, 98, -7, 1, -1)) !== 4) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(12, 23, 34, -45, -56, 0)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpej2t9_6b.php:39\n\
    Stack trace:\n#0 /tmp/tmpej2t9_6b.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpej2t9_6b.php\
    \ on line 39\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n    $count = 0;\n    foreach ($arr as $num) {\n        $sum = 0;\n      \
    \  if ($num < 0) {\n            $sum += $num % 10;\n            $num = -$num;\n\
    \        }\n        while ($num > 0) {\n            $sum += $num % 10;\n     \
    \       $num = (int)($num / 10);\n        }\n        if ($sum > 0) {\n       \
    \     $count++;\n        }\n    }\n    return $count;\n}\n\nfunction candidate(...$args)\
    \ {\n    return count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n    $count = 0;\n    foreach ($arr as $num) {\n        $sum = 0;\n      \
    \  if ($num < 0) {\n            $num = -$num;\n            $sum += -1;\n     \
    \   }\n        while ($num > 0) {\n            $sum += $num % 10;\n          \
    \  $num = floor($num / 10);\n        }\n        if ($sum > 0) {\n            $count++;\n\
    \        }\n    }\n    return $count;\n}\n\nfunction candidate(...$args) {\n \
    \   return count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpfhlp910e.php:34\n\
    Stack trace:\n#0 /tmp/tmpfhlp910e.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpfhlp910e.php\
    \ on line 34\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n    $count = 0;\n    foreach ($arr as $num) {\n        $sum = 0;\n      \
    \  if ($num < 0) {\n            $num = -$num;\n            $sum += -1;\n     \
    \   }\n        while ($num > 0) {\n            $sum += $num % 10;\n          \
    \  $num = (int)($num / 10);\n        }\n        if ($sum > 0) {\n            $count++;\n\
    \        }\n    }\n    return $count;\n}\n\nfunction candidate(...$args) {\n \
    \   return count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp0pk5vfff.php:34\n\
    Stack trace:\n#0 /tmp/tmp0pk5vfff.php(43): test()\n#1 {main}\n  thrown in /tmp/tmp0pk5vfff.php\
    \ on line 34\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n    $count = 0;\n    foreach ($arr as $num) {\n        $sum = 0;\n      \
    \  if ($num < 0) {\n            $num = -$num;\n            $sum += -1;\n     \
    \   }\n        while ($num > 0) {\n            $sum += $num % 10;\n          \
    \  $num = (int)($num / 10);\n        }\n        if ($sum > 0) {\n            $count++;\n\
    \        }\n    }\n    return $count;\n}\n\nfunction candidate(...$args) {\n \
    \   return count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpvghqgs1o.php:34\n\
    Stack trace:\n#0 /tmp/tmpvghqgs1o.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpvghqgs1o.php\
    \ on line 34\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n    $count = 0;\n    foreach ($arr as $num) {\n        $sum = 0;\n      \
    \  $num = abs($num);\n        while ($num > 0) {\n            $sum += $num % 10;\n\
    \            $num = floor($num / 10);\n        }\n        if ($sum > 0) {\n  \
    \          $count++;\n        }\n    }\n    return $count;\n}\n\nfunction candidate(...$args)\
    \ {\n    return count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpxphd3yvg.php:31\n\
    Stack trace:\n#0 /tmp/tmpxphd3yvg.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpxphd3yvg.php\
    \ on line 31\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n    $count = 0;\n    foreach ($arr as $num) {\n        $sum = 0;\n      \
    \  $num = abs($num);\n        while ($num > 0) {\n            $sum += $num % 10;\n\
    \            $num = floor($num / 10);\n        }\n        if ($sum > 0) {\n  \
    \          $count++;\n        }\n    }\n    return $count;\n}\n\nfunction candidate(...$args)\
    \ {\n    return count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpz8kvx9v0.php:31\n\
    Stack trace:\n#0 /tmp/tmpz8kvx9v0.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpz8kvx9v0.php\
    \ on line 31\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n    $count = 0;\n    foreach ($arr as $num) {\n        $sum = 0;\n      \
    \  $num = abs($num);\n        while ($num > 0) {\n            $sum += $num % 10;\n\
    \            $num = floor($num / 10);\n        }\n        if ($sum > 0) {\n  \
    \          $count++;\n        }\n    }\n    return $count;\n}\n\nfunction candidate(...$args)\
    \ {\n    return count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpqf0v_ez8.php:31\n\
    Stack trace:\n#0 /tmp/tmpqf0v_ez8.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpqf0v_ez8.php\
    \ on line 31\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n    $count = 0;\n    foreach ($arr as $num) {\n        $sum = 0;\n      \
    \  if ($num < 0) {\n            $num = -$num;\n            $sum += -1;\n     \
    \   }\n        while ($num > 0) {\n            $sum += $num % 10;\n          \
    \  $num = floor($num / 10);\n        }\n        if ($sum > 0) {\n            $count++;\n\
    \        }\n    }\n    return $count;\n}\n\nfunction candidate(...$args) {\n \
    \   return count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpzaojb00s.php:34\n\
    Stack trace:\n#0 /tmp/tmpzaojb00s.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpzaojb00s.php\
    \ on line 34\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n  $count = 0;\n  foreach ($arr as $num) {\n    $sum = 0;\n    $num = abs($num);\n\
    \    while ($num > 0) {\n      $sum += $num % 10;\n      $num = floor($num / 10);\n\
    \    }\n    if ($sum > 0) {\n      $count++;\n    }\n  }\n  return $count;\n}\n\
    \nfunction candidate(...$args) {\n    return count_nums(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(-1, -2, 0)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 2, -2, 3, 4, 5)) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 6, 9, -6, 0,\
    \ 1, 5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 100, 98, -7, 1, -1)) !== 4) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(12, 23, 34, -45, -56, 0)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp42hfpgxh.php:31\n\
    Stack trace:\n#0 /tmp/tmp42hfpgxh.php(40): test()\n#1 {main}\n  thrown in /tmp/tmp42hfpgxh.php\
    \ on line 31\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n    $count = 0;\n    foreach ($arr as $num) {\n        if ($num < 0) {\n\
    \            $num = -$num;\n        }\n        $sum = 0;\n        while ($num\
    \ > 0) {\n            $sum += $num % 10;\n            $num = intval($num / 10);\n\
    \        }\n        if ($sum > 0) {\n            $count++;\n        }\n    }\n\
    \    return $count;\n}\n\nfunction candidate(...$args) {\n    return count_nums(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array()) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1, -2, 0)) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1, 1, 2, -2, 3, 4, 5)) !== 6) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 6, 9, -6, 0,\
    \ 1, 5)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 100, 98, -7, 1, -1)) !== 4) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(12, 23, 34, -45, -56, 0)) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(0, 1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(1)) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp4rzorjcm.php:33\n\
    Stack trace:\n#0 /tmp/tmp4rzorjcm.php(42): test()\n#1 {main}\n  thrown in /tmp/tmp4rzorjcm.php\
    \ on line 33\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Write a function count_nums which takes an array of integers\
    \ and returns\n// the number of elements which has a sum of digits > 0.\n// If\
    \ a number is negative, then its first signed digit will be negative:\n// e.g.\
    \ -123 has signed digits -1, 2, and 3.\n// >>> count_nums([]) == 0\n// >>> count_nums([-1,\
    \ 11, -11]) == 1\n// >>> count_nums([1, 1, 2]) == 3\nfunction count_nums($arr)\
    \ {\n    $count = 0;\n    foreach ($arr as $num) {\n        $sum = 0;\n      \
    \  $num = abs($num);\n        while ($num > 0) {\n            $sum += $num % 10;\n\
    \            $num = floor($num / 10);\n        }\n        if ($sum > 0) {\n  \
    \          $count++;\n        }\n    }\n    return $count;\n}\n\nfunction candidate(...$args)\
    \ {\n    return count_nums(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array())\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1,\
    \ -2, 0)) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1,\
    \ 1, 2, -2, 3, 4, 5)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(array(1, 6, 9, -6, 0, 1, 5)) !== 5) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 100, 98, -7, 1, -1)) !== 4) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(12, 23, 34, -45,\
    \ -56, 0)) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0,\
    \ 1)) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpm9lrc8f3.php:31\n\
    Stack trace:\n#0 /tmp/tmpm9lrc8f3.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpm9lrc8f3.php\
    \ on line 31\n"
  exit_code: 255
  status: Exception

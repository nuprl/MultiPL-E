name: HumanEval_103_rounded_avg
language: php
results:
- program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// rounded_avg(1, 5) => \"\
    0b11\"\n// rounded_avg(7, 5) => -1\n// rounded_avg(10, 20) => \"0b1111\"\n// rounded_avg(20,\
    \ 33) => \"0b11010\"\nfunction rounded_avg($n, $m) {\n  if ($n > $m) return -1;\n\
    \  $sum = 0;\n  for ($i = $n; $i <= $m; $i++) {\n    $sum += $i;\n  }\n  $avg\
    \ = round($sum / ($m - $n + 1));\n  return \"0b\" . decbin($avg);\n}\n\necho rounded_avg(1,\
    \ 5) . \"\\n\";\necho rounded_avg(7, 5) . \"\\n\";\necho rounded_avg(10, 20) .\
    \ \"\\n\";\necho rounded_avg(20, 33) . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1,\
    \ 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964,\
    \ 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !==\
    \ \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197,\
    \ 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "0b11\n-1\n0b1111\n0b11011\n"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp4qgg6kqv.php:32\n\
    Stack trace:\n#0 /tmp/tmp4qgg6kqv.php(44): test()\n#1 {main}\n  thrown in /tmp/tmp4qgg6kqv.php\
    \ on line 32\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// rounded_avg(1, 5) => \"\
    0b11\"\n// rounded_avg(7, 5) => -1\n// rounded_avg(10, 20) => \"0b1111\"\n// rounded_avg(20,\
    \ 33) => \"0b11010\"\nfunction rounded_avg($n, $m) {\n    if ($n > $m) {\n   \
    \     return -1;\n    }\n    $sum = 0;\n    for ($i = $n; $i <= $m; $i++) {\n\
    \        $sum += $i;\n    }\n    $avg = round($sum / ($m - $n + 1));\n    return\
    \ \"0b\" . decbin($avg);\n}\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !==\
    \ \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560,\
    \ 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpqp4w665l.php:29\n\
    Stack trace:\n#0 /tmp/tmpqp4w665l.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpqp4w665l.php\
    \ on line 29\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// rounded_avg(1, 5) => \"\
    0b11\"\n// rounded_avg(7, 5) => -1\n// rounded_avg(10, 20) => \"0b1111\"\n// rounded_avg(20,\
    \ 33) => \"0b11010\"\nfunction rounded_avg($n, $m) {\n    if ($n > $m) {\n   \
    \     return -1;\n    }\n    $sum = 0;\n    for ($i = $n; $i <= $m; $i++) {\n\
    \        $sum += $i;\n    }\n    $avg = round($sum / ($m - $n + 1));\n    return\
    \ \"0b\" . decbin($avg);\n}\n\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !==\
    \ \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560,\
    \ 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpq4a3o6ea.php:30\n\
    Stack trace:\n#0 /tmp/tmpq4a3o6ea.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpq4a3o6ea.php\
    \ on line 30\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// rounded_avg(1, 5) => \"\
    0b11\"\n// rounded_avg(7, 5) => -1\n// rounded_avg(10, 20) => \"0b1111\"\n// rounded_avg(20,\
    \ 33) => \"0b11010\"\nfunction rounded_avg($n, $m) {\n    if ($n > $m) {\n   \
    \     return -1;\n    }\n    $sum = 0;\n    for ($i = $n; $i <= $m; $i++) {\n\
    \        $sum += $i;\n    }\n    $avg = round($sum / ($m - $n + 1));\n    return\
    \ \"0b\" . decbin($avg);\n}\n\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !==\
    \ \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560,\
    \ 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpuvdtovc2.php:30\n\
    Stack trace:\n#0 /tmp/tmpuvdtovc2.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpuvdtovc2.php\
    \ on line 30\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// rounded_avg(1, 5) => \"\
    0b11\"\n// rounded_avg(7, 5) => -1\n// rounded_avg(10, 20) => \"0b1111\"\n// rounded_avg(20,\
    \ 33) => \"0b11010\"\nfunction rounded_avg($n, $m) {\n  if ($n > $m) return -1;\n\
    \  $sum = 0;\n  for ($i = $n; $i <= $m; $i++) {\n    $sum += $i;\n  }\n  $avg\
    \ = round($sum / ($m - $n + 1));\n  return \"0b\" . decbin($avg);\n}\n\nfunction\
    \ candidate(...$args) {\n    return rounded_avg(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(1, 5) !== \"0b11\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(7, 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(964, 977) !== \"0b1111001010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(996, 997) !== \"0b1111100100\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(560, 851) !== \"0b1011000010\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(185, 546) !==\
    \ \"0b101101110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(362,\
    \ 496) !== \"0b110101101\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(350, 902) !== \"0b1001110010\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(197, 233) !== \"0b11010111\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 5) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5, 1) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5, 5) !== \"0b101\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpaxi2hadt.php:28\n\
    Stack trace:\n#0 /tmp/tmpaxi2hadt.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpaxi2hadt.php\
    \ on line 28\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// rounded_avg(1, 5) => \"\
    0b11\"\n// rounded_avg(7, 5) => -1\n// rounded_avg(10, 20) => \"0b1111\"\n// rounded_avg(20,\
    \ 33) => \"0b11010\"\nfunction rounded_avg($n, $m) {\n  if ($n > $m) {\n    return\
    \ -1;\n  }\n  $sum = 0;\n  for ($i = $n; $i <= $m; $i++) {\n    $sum += $i;\n\
    \  }\n  $avg = round($sum / ($m - $n + 1));\n  return \"0b\" . decbin($avg);\n\
    }\n\necho rounded_avg(1, 5) . \"\\n\";\necho rounded_avg(7, 5) . \"\\n\";\necho\
    \ rounded_avg(10, 20) . \"\\n\";\necho rounded_avg(20, 33) . \"\\n\";\nfunction\
    \ candidate(...$args) {\n    return rounded_avg(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(1, 5) !== \"0b11\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(7, 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(964, 977) !== \"0b1111001010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(996, 997) !== \"0b1111100100\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(560, 851) !== \"0b1011000010\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(185, 546) !==\
    \ \"0b101101110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(362,\
    \ 496) !== \"0b110101101\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(350, 902) !== \"0b1001110010\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(197, 233) !== \"0b11010111\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 5) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5, 1) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5, 5) !== \"0b101\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "0b11\n-1\n0b1111\n0b11011\n"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp0wv1ve9t.php:34\n\
    Stack trace:\n#0 /tmp/tmp0wv1ve9t.php(46): test()\n#1 {main}\n  thrown in /tmp/tmp0wv1ve9t.php\
    \ on line 34\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// rounded_avg(1, 5) => \"\
    0b11\"\n// rounded_avg(7, 5) => -1\n// rounded_avg(10, 20) => \"0b1111\"\n// rounded_avg(20,\
    \ 33) => \"0b11010\"\nfunction rounded_avg($n, $m) {\n    if ($n > $m) {\n   \
    \     return -1;\n    }\n    $sum = 0;\n    for ($i = $n; $i <= $m; $i++) {\n\
    \        $sum += $i;\n    }\n    $avg = round($sum / ($m - $n + 1));\n    return\
    \ \"0b\" . decbin($avg);\n}\necho rounded_avg(1, 5) . \"\\n\";\necho rounded_avg(7,\
    \ 5) . \"\\n\";\necho rounded_avg(10, 20) . \"\\n\";\necho rounded_avg(20, 33)\
    \ . \"\\n\";\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !==\
    \ \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560,\
    \ 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "0b11\n-1\n0b1111\n0b11011\n"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpmzu1tf5g.php:33\n\
    Stack trace:\n#0 /tmp/tmpmzu1tf5g.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpmzu1tf5g.php\
    \ on line 33\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// rounded_avg(1, 5) => \"\
    0b11\"\n// rounded_avg(7, 5) => -1\n// rounded_avg(10, 20) => \"0b1111\"\n// rounded_avg(20,\
    \ 33) => \"0b11010\"\nfunction rounded_avg($n, $m) {\n  if ($n > $m) {\n    return\
    \ -1;\n  }\n  $sum = 0;\n  for ($i = $n; $i <= $m; $i++) {\n    $sum += $i;\n\
    \  }\n  $avg = round($sum / ($m - $n + 1));\n  return \"0b\" . decbin($avg);\n\
    }\n\necho rounded_avg(1, 5) . \"\\n\";\necho rounded_avg(7, 5) . \"\\n\";\necho\
    \ rounded_avg(10, 20) . \"\\n\";\necho rounded_avg(20, 33) . \"\\n\";\n\nfunction\
    \ candidate(...$args) {\n    return rounded_avg(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(1, 5) !== \"0b11\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(7, 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(964, 977) !== \"0b1111001010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(996, 997) !== \"0b1111100100\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(560, 851) !== \"0b1011000010\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(185, 546) !==\
    \ \"0b101101110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(362,\
    \ 496) !== \"0b110101101\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(350, 902) !== \"0b1001110010\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(197, 233) !== \"0b11010111\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 5) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5, 1) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5, 5) !== \"0b101\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "0b11\n-1\n0b1111\n0b11011\n"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp7_sy4zig.php:35\n\
    Stack trace:\n#0 /tmp/tmp7_sy4zig.php(47): test()\n#1 {main}\n  thrown in /tmp/tmp7_sy4zig.php\
    \ on line 35\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// rounded_avg(1, 5) => \"\
    0b11\"\n// rounded_avg(7, 5) => -1\n// rounded_avg(10, 20) => \"0b1111\"\n// rounded_avg(20,\
    \ 33) => \"0b11010\"\nfunction rounded_avg($n, $m) {\n    if ($n > $m) {\n   \
    \     return -1;\n    }\n    $sum = 0;\n    for ($i = $n; $i <= $m; $i++) {\n\
    \        $sum += $i;\n    }\n    $avg = round($sum / ($m - $n + 1));\n    return\
    \ \"0b\" . decbin($avg);\n}\n\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !==\
    \ \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560,\
    \ 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpjfg72l7v.php:30\n\
    Stack trace:\n#0 /tmp/tmpjfg72l7v.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpjfg72l7v.php\
    \ on line 30\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// rounded_avg(1, 5) => \"\
    0b11\"\n// rounded_avg(7, 5) => -1\n// rounded_avg(10, 20) => \"0b1111\"\n// rounded_avg(20,\
    \ 33) => \"0b11010\"\nfunction rounded_avg($n, $m) {\n    if ($n > $m) {\n   \
    \     return -1;\n    }\n    $sum = 0;\n    for ($i = $n; $i <= $m; $i++) {\n\
    \        $sum += $i;\n    }\n    $avg = round($sum / ($m - $n + 1));\n    return\
    \ \"0b\" . decbin($avg);\n}\necho rounded_avg(1, 5) . \"\\n\";\necho rounded_avg(7,\
    \ 5) . \"\\n\";\necho rounded_avg(10, 20) . \"\\n\";\necho rounded_avg(20, 33)\
    \ . \"\\n\";\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !==\
    \ \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560,\
    \ 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "0b11\n-1\n0b1111\n0b11011\n"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpmpnvj_sr.php:33\n\
    Stack trace:\n#0 /tmp/tmpmpnvj_sr.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpmpnvj_sr.php\
    \ on line 33\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// rounded_avg(1, 5) => \"\
    0b11\"\n// rounded_avg(7, 5) => -1\n// rounded_avg(10, 20) => \"0b1111\"\n// rounded_avg(20,\
    \ 33) => \"0b11010\"\nfunction rounded_avg($n, $m) {\n  if ($n > $m) {\n    return\
    \ -1;\n  }\n  $sum = 0;\n  for ($i = $n; $i <= $m; $i++) {\n    $sum += $i;\n\
    \  }\n  $avg = round($sum / ($m - $n + 1));\n  return \"0b\" . decbin($avg);\n\
    }\n\necho rounded_avg(1, 5) . \"\\n\";\necho rounded_avg(7, 5) . \"\\n\";\necho\
    \ rounded_avg(10, 20) . \"\\n\";\necho rounded_avg(20, 33) . \"\\n\";\nfunction\
    \ candidate(...$args) {\n    return rounded_avg(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(1, 5) !== \"0b11\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(7, 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(964, 977) !== \"0b1111001010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(996, 997) !== \"0b1111100100\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(560, 851) !== \"0b1011000010\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(185, 546) !==\
    \ \"0b101101110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(362,\
    \ 496) !== \"0b110101101\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(350, 902) !== \"0b1001110010\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(197, 233) !== \"0b11010111\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 5) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5, 1) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5, 5) !== \"0b101\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "0b11\n-1\n0b1111\n0b11011\n"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpdbekm9go.php:34\n\
    Stack trace:\n#0 /tmp/tmpdbekm9go.php(46): test()\n#1 {main}\n  thrown in /tmp/tmpdbekm9go.php\
    \ on line 34\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// rounded_avg(1, 5) => \"\
    0b11\"\n// rounded_avg(7, 5) => -1\n// rounded_avg(10, 20) => \"0b1111\"\n// rounded_avg(20,\
    \ 33) => \"0b11010\"\nfunction rounded_avg($n, $m) {\n    if ($n > $m) {\n   \
    \     return -1;\n    }\n    $sum = 0;\n    for ($i = $n; $i <= $m; $i++) {\n\
    \        $sum += $i;\n    }\n    $avg = round($sum / ($m - $n + 1));\n    return\
    \ \"0b\" . decbin($avg);\n}\n\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !==\
    \ \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560,\
    \ 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpnx8sblpj.php:30\n\
    Stack trace:\n#0 /tmp/tmpnx8sblpj.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpnx8sblpj.php\
    \ on line 30\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// rounded_avg(1, 5) => \"\
    0b11\"\n// rounded_avg(7, 5) => -1\n// rounded_avg(10, 20) => \"0b1111\"\n// rounded_avg(20,\
    \ 33) => \"0b11010\"\nfunction rounded_avg($n, $m) {\n    if ($n > $m) {\n   \
    \     return -1;\n    }\n    $sum = 0;\n    for ($i = $n; $i <= $m; $i++) {\n\
    \        $sum += $i;\n    }\n    $avg = round($sum / ($m - $n + 1));\n    return\
    \ \"0b\" . decbin($avg);\n}\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !==\
    \ \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560,\
    \ 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpf2q_09cx.php:29\n\
    Stack trace:\n#0 /tmp/tmpf2q_09cx.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpf2q_09cx.php\
    \ on line 29\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// rounded_avg(1, 5) => \"\
    0b11\"\n// rounded_avg(7, 5) => -1\n// rounded_avg(10, 20) => \"0b1111\"\n// rounded_avg(20,\
    \ 33) => \"0b11010\"\nfunction rounded_avg($n, $m) {\n    if ($n > $m) {\n   \
    \     return -1;\n    }\n    $sum = 0;\n    for ($i = $n; $i <= $m; $i++) {\n\
    \        $sum += $i;\n    }\n    $avg = round($sum / ($m - $n + 1));\n    return\
    \ \"0b\" . decbin($avg);\n}\n\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !==\
    \ \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560,\
    \ 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmptge55gae.php:30\n\
    Stack trace:\n#0 /tmp/tmptge55gae.php(42): test()\n#1 {main}\n  thrown in /tmp/tmptge55gae.php\
    \ on line 30\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// rounded_avg(1, 5) => \"\
    0b11\"\n// rounded_avg(7, 5) => -1\n// rounded_avg(10, 20) => \"0b1111\"\n// rounded_avg(20,\
    \ 33) => \"0b11010\"\nfunction rounded_avg($n, $m) {\n    if ($n > $m) {\n   \
    \     return -1;\n    }\n    $sum = 0;\n    for ($i = $n; $i <= $m; $i++) {\n\
    \        $sum += $i;\n    }\n    $avg = round($sum / ($m - $n + 1));\n    return\
    \ decbin($avg);\n}\n\necho rounded_avg(1, 5) . \"\\n\";\necho rounded_avg(7, 5)\
    \ . \"\\n\";\necho rounded_avg(10, 20) . \"\\n\";\necho rounded_avg(20, 33) .\
    \ \"\\n\";\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !==\
    \ \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560,\
    \ 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "11\n-1\n1111\n11011\n"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp80ixpcua.php:32\n\
    Stack trace:\n#0 /tmp/tmp80ixpcua.php(46): test()\n#1 {main}\n  thrown in /tmp/tmp80ixpcua.php\
    \ on line 32\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// rounded_avg(1, 5) => \"\
    0b11\"\n// rounded_avg(7, 5) => -1\n// rounded_avg(10, 20) => \"0b1111\"\n// rounded_avg(20,\
    \ 33) => \"0b11010\"\nfunction rounded_avg($n, $m) {\n  if ($n > $m) {\n    return\
    \ -1;\n  }\n  $sum = 0;\n  for ($i = $n; $i <= $m; $i++) {\n    $sum += $i;\n\
    \  }\n  $avg = round($sum / ($m - $n + 1));\n  return \"0b\" . decbin($avg);\n\
    }\n\necho rounded_avg(1, 5) . \"\\n\";\necho rounded_avg(7, 5) . \"\\n\";\necho\
    \ rounded_avg(10, 20) . \"\\n\";\necho rounded_avg(20, 33) . \"\\n\";\nfunction\
    \ candidate(...$args) {\n    return rounded_avg(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(1, 5) !== \"0b11\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(7, 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(964, 977) !== \"0b1111001010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(996, 997) !== \"0b1111100100\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(560, 851) !== \"0b1011000010\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(185, 546) !==\
    \ \"0b101101110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(362,\
    \ 496) !== \"0b110101101\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(350, 902) !== \"0b1001110010\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(197, 233) !== \"0b11010111\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 5) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5, 1) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5, 5) !== \"0b101\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "0b11\n-1\n0b1111\n0b11011\n"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpi4se4abl.php:34\n\
    Stack trace:\n#0 /tmp/tmpi4se4abl.php(46): test()\n#1 {main}\n  thrown in /tmp/tmpi4se4abl.php\
    \ on line 34\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// rounded_avg(1, 5) => \"\
    0b11\"\n// rounded_avg(7, 5) => -1\n// rounded_avg(10, 20) => \"0b1111\"\n// rounded_avg(20,\
    \ 33) => \"0b11010\"\nfunction rounded_avg($n, $m) {\n    if ($n > $m) {\n   \
    \     return -1;\n    }\n    $sum = 0;\n    for ($i = $n; $i <= $m; $i++) {\n\
    \        $sum += $i;\n    }\n    $avg = round($sum / ($m - $n + 1));\n    return\
    \ \"0b\" . decbin($avg);\n}\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !==\
    \ \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560,\
    \ 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmplqxn_1ts.php:29\n\
    Stack trace:\n#0 /tmp/tmplqxn_1ts.php(41): test()\n#1 {main}\n  thrown in /tmp/tmplqxn_1ts.php\
    \ on line 29\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// rounded_avg(1, 5) => \"\
    0b11\"\n// rounded_avg(7, 5) => -1\n// rounded_avg(10, 20) => \"0b1111\"\n// rounded_avg(20,\
    \ 33) => \"0b11010\"\nfunction rounded_avg($n, $m) {\n  if ($n > $m) return -1;\n\
    \  $sum = 0;\n  for ($i = $n; $i <= $m; $i++) {\n    $sum += $i;\n  }\n  $avg\
    \ = round($sum / ($m - $n + 1));\n  return \"0b\" . decbin($avg);\n}\n\necho rounded_avg(1,\
    \ 5) . \"\\n\";\necho rounded_avg(7, 5) . \"\\n\";\necho rounded_avg(10, 20) .\
    \ \"\\n\";\necho rounded_avg(20, 33) . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1,\
    \ 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964,\
    \ 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !==\
    \ \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197,\
    \ 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "0b11\n-1\n0b1111\n0b11011\n"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpkhgaadb1.php:32\n\
    Stack trace:\n#0 /tmp/tmpkhgaadb1.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpkhgaadb1.php\
    \ on line 32\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// rounded_avg(1, 5) => \"\
    0b11\"\n// rounded_avg(7, 5) => -1\n// rounded_avg(10, 20) => \"0b1111\"\n// rounded_avg(20,\
    \ 33) => \"0b11010\"\nfunction rounded_avg($n, $m) {\n  if ($n > $m) {\n    return\
    \ -1;\n  }\n  $sum = 0;\n  for ($i = $n; $i <= $m; $i++) {\n    $sum += $i;\n\
    \  }\n  $avg = round($sum / ($m - $n + 1));\n  return \"0b\" . decbin($avg);\n\
    }\n\necho rounded_avg(1, 5) . \"\\n\";\necho rounded_avg(7, 5) . \"\\n\";\necho\
    \ rounded_avg(10, 20) . \"\\n\";\necho rounded_avg(20, 33) . \"\\n\";\n\nfunction\
    \ candidate(...$args) {\n    return rounded_avg(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(1, 5) !== \"0b11\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(7, 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(964, 977) !== \"0b1111001010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(996, 997) !== \"0b1111100100\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(560, 851) !== \"0b1011000010\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(185, 546) !==\
    \ \"0b101101110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(362,\
    \ 496) !== \"0b110101101\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(350, 902) !== \"0b1001110010\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(197, 233) !== \"0b11010111\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 5) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5, 1) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5, 5) !== \"0b101\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "0b11\n-1\n0b1111\n0b11011\n"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpq7dzskqe.php:35\n\
    Stack trace:\n#0 /tmp/tmpq7dzskqe.php(47): test()\n#1 {main}\n  thrown in /tmp/tmpq7dzskqe.php\
    \ on line 35\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// rounded_avg(1, 5) => \"\
    0b11\"\n// rounded_avg(7, 5) => -1\n// rounded_avg(10, 20) => \"0b1111\"\n// rounded_avg(20,\
    \ 33) => \"0b11010\"\nfunction rounded_avg($n, $m) {\n    if ($n > $m) {\n   \
    \     return -1;\n    }\n    $sum = 0;\n    for ($i = $n; $i <= $m; $i++) {\n\
    \        $sum += $i;\n    }\n    $avg = round($sum / ($m - $n + 1));\n    return\
    \ \"0b\" . decbin($avg);\n}\n\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !==\
    \ \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560,\
    \ 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpsgcv8_or.php:30\n\
    Stack trace:\n#0 /tmp/tmpsgcv8_or.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpsgcv8_or.php\
    \ on line 30\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// rounded_avg(1, 5) => \"\
    0b11\"\n// rounded_avg(7, 5) => -1\n// rounded_avg(10, 20) => \"0b1111\"\n// rounded_avg(20,\
    \ 33) => \"0b11010\"\nfunction rounded_avg($n, $m) {\n  if ($n > $m) return -1;\n\
    \  $avg = round(($n + $m) / 2);\n  return decbin($avg);\n}\n\nfunction candidate(...$args)\
    \ {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1,\
    \ 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964,\
    \ 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !==\
    \ \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197,\
    \ 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp4pwzt0lb.php:22\n\
    Stack trace:\n#0 /tmp/tmp4pwzt0lb.php(36): test()\n#1 {main}\n  thrown in /tmp/tmp4pwzt0lb.php\
    \ on line 22\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// rounded_avg(1, 5) => \"\
    0b11\"\n// rounded_avg(7, 5) => -1\n// rounded_avg(10, 20) => \"0b1111\"\n// rounded_avg(20,\
    \ 33) => \"0b11010\"\nfunction rounded_avg($n, $m) {\n    if ($n > $m) {\n   \
    \     return -1;\n    }\n    $sum = 0;\n    for ($i = $n; $i <= $m; $i++) {\n\
    \        $sum += $i;\n    }\n    $avg = round($sum / ($m - $n + 1));\n    return\
    \ \"0b\" . decbin($avg);\n}\n\necho rounded_avg(1, 5) . \"\\n\";\necho rounded_avg(7,\
    \ 5) . \"\\n\";\necho rounded_avg(10, 20) . \"\\n\";\necho rounded_avg(20, 33)\
    \ . \"\\n\";\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !==\
    \ \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560,\
    \ 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "0b11\n-1\n0b1111\n0b11011\n"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpibwanb05.php:34\n\
    Stack trace:\n#0 /tmp/tmpibwanb05.php(46): test()\n#1 {main}\n  thrown in /tmp/tmpibwanb05.php\
    \ on line 34\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// rounded_avg(1, 5) => \"\
    0b11\"\n// rounded_avg(7, 5) => -1\n// rounded_avg(10, 20) => \"0b1111\"\n// rounded_avg(20,\
    \ 33) => \"0b11010\"\nfunction rounded_avg($n, $m) {\n    if ($n > $m) {\n   \
    \     return -1;\n    }\n    $sum = 0;\n    for ($i = $n; $i <= $m; $i++) {\n\
    \        $sum += $i;\n    }\n    $avg = round($sum / ($m - $n + 1));\n    return\
    \ \"0b\" . decbin($avg);\n}\n\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !==\
    \ \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560,\
    \ 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpy5rrxb_g.php:30\n\
    Stack trace:\n#0 /tmp/tmpy5rrxb_g.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpy5rrxb_g.php\
    \ on line 30\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// rounded_avg(1, 5) => \"\
    0b11\"\n// rounded_avg(7, 5) => -1\n// rounded_avg(10, 20) => \"0b1111\"\n// rounded_avg(20,\
    \ 33) => \"0b11010\"\nfunction rounded_avg($n, $m) {\n    if ($n > $m) return\
    \ -1;\n    $sum = 0;\n    for ($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n\
    \    }\n    $avg = round($sum / ($m - $n + 1));\n    return \"0b\" . decbin($avg);\n\
    }\n\necho rounded_avg(1, 5) . \"\\n\";\necho rounded_avg(7, 5) . \"\\n\";\necho\
    \ rounded_avg(10, 20) . \"\\n\";\necho rounded_avg(20, 33) . \"\\n\";\nfunction\
    \ candidate(...$args) {\n    return rounded_avg(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(1, 5) !== \"0b11\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(7, 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(964, 977) !== \"0b1111001010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(996, 997) !== \"0b1111100100\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(560, 851) !== \"0b1011000010\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(185, 546) !==\
    \ \"0b101101110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(362,\
    \ 496) !== \"0b110101101\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(350, 902) !== \"0b1001110010\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(197, 233) !== \"0b11010111\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 5) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5, 1) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5, 5) !== \"0b101\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "0b11\n-1\n0b1111\n0b11011\n"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpjd88in43.php:32\n\
    Stack trace:\n#0 /tmp/tmpjd88in43.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpjd88in43.php\
    \ on line 32\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// rounded_avg(1, 5) => \"\
    0b11\"\n// rounded_avg(7, 5) => -1\n// rounded_avg(10, 20) => \"0b1111\"\n// rounded_avg(20,\
    \ 33) => \"0b11010\"\nfunction rounded_avg($n, $m) {\n    if ($n > $m) {\n   \
    \     return -1;\n    }\n    $sum = 0;\n    for ($i = $n; $i <= $m; $i++) {\n\
    \        $sum += $i;\n    }\n    $avg = round($sum / ($m - $n + 1));\n    return\
    \ \"0b\" . decbin($avg);\n}\n\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !==\
    \ \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560,\
    \ 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpslgq4xmz.php:30\n\
    Stack trace:\n#0 /tmp/tmpslgq4xmz.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpslgq4xmz.php\
    \ on line 30\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// rounded_avg(1, 5) => \"\
    0b11\"\n// rounded_avg(7, 5) => -1\n// rounded_avg(10, 20) => \"0b1111\"\n// rounded_avg(20,\
    \ 33) => \"0b11010\"\nfunction rounded_avg($n, $m) {\n    if ($n > $m) {\n   \
    \     return -1;\n    }\n    $sum = 0;\n    for ($i = $n; $i <= $m; $i++) {\n\
    \        $sum += $i;\n    }\n    $avg = round($sum / ($m - $n + 1));\n    return\
    \ decbin($avg);\n}\n\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !==\
    \ \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560,\
    \ 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpcd5kpv_5.php:28\n\
    Stack trace:\n#0 /tmp/tmpcd5kpv_5.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpcd5kpv_5.php\
    \ on line 28\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// rounded_avg(1, 5) => \"\
    0b11\"\n// rounded_avg(7, 5) => -1\n// rounded_avg(10, 20) => \"0b1111\"\n// rounded_avg(20,\
    \ 33) => \"0b11010\"\nfunction rounded_avg($n, $m) {\n  if ($n > $m) {\n    return\
    \ -1;\n  }\n  $sum = 0;\n  for ($i = $n; $i <= $m; $i++) {\n    $sum += $i;\n\
    \  }\n  $avg = round($sum / ($m - $n + 1));\n  return \"0b\" . decbin($avg);\n\
    }\n\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !== \"0b1111100100\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(560, 851) !==\
    \ \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(185,\
    \ 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpwvi0vi4z.php:30\n\
    Stack trace:\n#0 /tmp/tmpwvi0vi4z.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpwvi0vi4z.php\
    \ on line 30\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// rounded_avg(1, 5) => \"\
    0b11\"\n// rounded_avg(7, 5) => -1\n// rounded_avg(10, 20) => \"0b1111\"\n// rounded_avg(20,\
    \ 33) => \"0b11010\"\nfunction rounded_avg($n, $m) {\n    if ($n > $m) {\n   \
    \     return -1;\n    }\n    $sum = 0;\n    for ($i = $n; $i <= $m; $i++) {\n\
    \        $sum += $i;\n    }\n    $avg = round($sum / ($m - $n + 1));\n    return\
    \ \"0b\" . decbin($avg);\n}\n\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !==\
    \ \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560,\
    \ 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp474loyvx.php:30\n\
    Stack trace:\n#0 /tmp/tmp474loyvx.php(42): test()\n#1 {main}\n  thrown in /tmp/tmp474loyvx.php\
    \ on line 30\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// rounded_avg(1, 5) => \"\
    0b11\"\n// rounded_avg(7, 5) => -1\n// rounded_avg(10, 20) => \"0b1111\"\n// rounded_avg(20,\
    \ 33) => \"0b11010\"\nfunction rounded_avg($n, $m) {\n    if ($n > $m) {\n   \
    \     return -1;\n    }\n    $sum = 0;\n    for ($i = $n; $i <= $m; $i++) {\n\
    \        $sum += $i;\n    }\n    $avg = round($sum / ($m - $n + 1));\n    return\
    \ \"0b\" . decbin($avg);\n}\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !==\
    \ \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560,\
    \ 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmppkxx3gdt.php:29\n\
    Stack trace:\n#0 /tmp/tmppkxx3gdt.php(41): test()\n#1 {main}\n  thrown in /tmp/tmppkxx3gdt.php\
    \ on line 29\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// rounded_avg(1, 5) => \"\
    0b11\"\n// rounded_avg(7, 5) => -1\n// rounded_avg(10, 20) => \"0b1111\"\n// rounded_avg(20,\
    \ 33) => \"0b11010\"\nfunction rounded_avg($n, $m) {\n    if ($n > $m) {\n   \
    \     return -1;\n    }\n    $sum = 0;\n    for ($i = $n; $i <= $m; $i++) {\n\
    \        $sum += $i;\n    }\n    $avg = round($sum / ($m - $n + 1));\n    return\
    \ \"0b\" . decbin($avg);\n}\n\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !==\
    \ \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560,\
    \ 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpb6ywewob.php:30\n\
    Stack trace:\n#0 /tmp/tmpb6ywewob.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpb6ywewob.php\
    \ on line 30\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// rounded_avg(1, 5) => \"\
    0b11\"\n// rounded_avg(7, 5) => -1\n// rounded_avg(10, 20) => \"0b1111\"\n// rounded_avg(20,\
    \ 33) => \"0b11010\"\nfunction rounded_avg($n, $m) {\n    if ($n > $m) {\n   \
    \     return -1;\n    }\n    $sum = 0;\n    for ($i = $n; $i <= $m; $i++) {\n\
    \        $sum += $i;\n    }\n    $avg = round($sum / ($m - $n + 1));\n    return\
    \ \"0b\" . decbin($avg);\n}\n\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !==\
    \ \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560,\
    \ 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp3m3c9co6.php:30\n\
    Stack trace:\n#0 /tmp/tmp3m3c9co6.php(42): test()\n#1 {main}\n  thrown in /tmp/tmp3m3c9co6.php\
    \ on line 30\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// rounded_avg(1, 5) => \"\
    0b11\"\n// rounded_avg(7, 5) => -1\n// rounded_avg(10, 20) => \"0b1111\"\n// rounded_avg(20,\
    \ 33) => \"0b11010\"\nfunction rounded_avg($n, $m) {\n    if ($n > $m) {\n   \
    \     return -1;\n    }\n    $sum = 0;\n    for ($i = $n; $i <= $m; $i++) {\n\
    \        $sum += $i;\n    }\n    $avg = round($sum / ($m - $n + 1));\n    return\
    \ \"0b\" . decbin($avg);\n}\n\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !==\
    \ \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560,\
    \ 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpvr7sh84g.php:30\n\
    Stack trace:\n#0 /tmp/tmpvr7sh84g.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpvr7sh84g.php\
    \ on line 30\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// rounded_avg(1, 5) => \"\
    0b11\"\n// rounded_avg(7, 5) => -1\n// rounded_avg(10, 20) => \"0b1111\"\n// rounded_avg(20,\
    \ 33) => \"0b11010\"\nfunction rounded_avg($n, $m) {\n    if ($n > $m) {\n   \
    \     return -1;\n    }\n    $sum = 0;\n    for ($i = $n; $i <= $m; $i++) {\n\
    \        $sum += $i;\n    }\n    $avg = round($sum / ($m - $n + 1));\n    return\
    \ \"0b\" . decbin($avg);\n}\n\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !==\
    \ \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560,\
    \ 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp0pomhdws.php:30\n\
    Stack trace:\n#0 /tmp/tmp0pomhdws.php(42): test()\n#1 {main}\n  thrown in /tmp/tmp0pomhdws.php\
    \ on line 30\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// rounded_avg(1, 5) => \"\
    0b11\"\n// rounded_avg(7, 5) => -1\n// rounded_avg(10, 20) => \"0b1111\"\n// rounded_avg(20,\
    \ 33) => \"0b11010\"\nfunction rounded_avg($n, $m) {\n    if ($n > $m) {\n   \
    \     return -1;\n    }\n    $sum = 0;\n    for ($i = $n; $i <= $m; $i++) {\n\
    \        $sum += $i;\n    }\n    $avg = round($sum / ($m - $n + 1));\n    return\
    \ \"0b\" . decbin($avg);\n}\n\necho rounded_avg(1, 5) . \"\\n\";\necho rounded_avg(7,\
    \ 5) . \"\\n\";\necho rounded_avg(10, 20) . \"\\n\";\necho rounded_avg(20, 33)\
    \ . \"\\n\";\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !==\
    \ \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560,\
    \ 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "0b11\n-1\n0b1111\n0b11011\n"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmplu8kj6ro.php:34\n\
    Stack trace:\n#0 /tmp/tmplu8kj6ro.php(46): test()\n#1 {main}\n  thrown in /tmp/tmplu8kj6ro.php\
    \ on line 34\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// rounded_avg(1, 5) => \"\
    0b11\"\n// rounded_avg(7, 5) => -1\n// rounded_avg(10, 20) => \"0b1111\"\n// rounded_avg(20,\
    \ 33) => \"0b11010\"\nfunction rounded_avg($n, $m) {\n    if ($n > $m) {\n   \
    \     return -1;\n    }\n    $sum = 0;\n    for ($i = $n; $i <= $m; $i++) {\n\
    \        $sum += $i;\n    }\n    $avg = round($sum / ($m - $n + 1));\n    return\
    \ \"0b\" . decbin($avg);\n}\n\necho rounded_avg(1, 5) . \"\\n\";\necho rounded_avg(7,\
    \ 5) . \"\\n\";\necho rounded_avg(10, 20) . \"\\n\";\necho rounded_avg(20, 33)\
    \ . \"\\n\";\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !==\
    \ \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560,\
    \ 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "0b11\n-1\n0b1111\n0b11011\n"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp93z1g268.php:34\n\
    Stack trace:\n#0 /tmp/tmp93z1g268.php(46): test()\n#1 {main}\n  thrown in /tmp/tmp93z1g268.php\
    \ on line 34\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// rounded_avg(1, 5) => \"\
    0b11\"\n// rounded_avg(7, 5) => -1\n// rounded_avg(10, 20) => \"0b1111\"\n// rounded_avg(20,\
    \ 33) => \"0b11010\"\nfunction rounded_avg($n, $m) {\n    if ($n > $m) {\n   \
    \     return -1;\n    }\n    $sum = 0;\n    for ($i = $n; $i <= $m; $i++) {\n\
    \        $sum += $i;\n    }\n    $avg = round($sum / ($m - $n + 1));\n    return\
    \ \"0b\" . decbin($avg);\n}\n\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !==\
    \ \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560,\
    \ 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpu78ww320.php:30\n\
    Stack trace:\n#0 /tmp/tmpu78ww320.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpu78ww320.php\
    \ on line 30\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// rounded_avg(1, 5) => \"\
    0b11\"\n// rounded_avg(7, 5) => -1\n// rounded_avg(10, 20) => \"0b1111\"\n// rounded_avg(20,\
    \ 33) => \"0b11010\"\nfunction rounded_avg($n, $m) {\n    if ($n > $m) {\n   \
    \     return -1;\n    }\n    $sum = 0;\n    for ($i = $n; $i <= $m; $i++) {\n\
    \        $sum += $i;\n    }\n    $avg = $sum / ($m - $n + 1);\n    return decbin(round($avg));\n\
    }\n\necho rounded_avg(1, 5) . \"\\n\";\necho rounded_avg(7, 5) . \"\\n\";\necho\
    \ rounded_avg(10, 20) . \"\\n\";\necho rounded_avg(20, 33) . \"\\n\";\nfunction\
    \ candidate(...$args) {\n    return rounded_avg(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(1, 5) !== \"0b11\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(7, 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(964, 977) !== \"0b1111001010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(996, 997) !== \"0b1111100100\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(560, 851) !== \"0b1011000010\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(185, 546) !==\
    \ \"0b101101110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(362,\
    \ 496) !== \"0b110101101\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(350, 902) !== \"0b1001110010\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(197, 233) !== \"0b11010111\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 5) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5, 1) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5, 5) !== \"0b101\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "11\n-1\n1111\n11011\n"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpa_2y9efi.php:32\n\
    Stack trace:\n#0 /tmp/tmpa_2y9efi.php(46): test()\n#1 {main}\n  thrown in /tmp/tmpa_2y9efi.php\
    \ on line 32\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// rounded_avg(1, 5) => \"\
    0b11\"\n// rounded_avg(7, 5) => -1\n// rounded_avg(10, 20) => \"0b1111\"\n// rounded_avg(20,\
    \ 33) => \"0b11010\"\nfunction rounded_avg($n, $m) {\n    if ($n > $m) {\n   \
    \     return -1;\n    }\n    $sum = 0;\n    for ($i = $n; $i <= $m; $i++) {\n\
    \        $sum += $i;\n    }\n    $avg = round($sum / ($m - $n + 1));\n    return\
    \ \"0b\" . decbin($avg);\n}\n\necho rounded_avg(1, 5) . \"\\n\";\necho rounded_avg(7,\
    \ 5) . \"\\n\";\necho rounded_avg(10, 20) . \"\\n\";\necho rounded_avg(20, 33)\
    \ . \"\\n\";\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !==\
    \ \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560,\
    \ 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "0b11\n-1\n0b1111\n0b11011\n"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmprxyur03n.php:34\n\
    Stack trace:\n#0 /tmp/tmprxyur03n.php(46): test()\n#1 {main}\n  thrown in /tmp/tmprxyur03n.php\
    \ on line 34\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// rounded_avg(1, 5) => \"\
    0b11\"\n// rounded_avg(7, 5) => -1\n// rounded_avg(10, 20) => \"0b1111\"\n// rounded_avg(20,\
    \ 33) => \"0b11010\"\nfunction rounded_avg($n, $m) {\n    if ($n > $m) {\n   \
    \     return -1;\n    }\n    $sum = 0;\n    for ($i = $n; $i <= $m; $i++) {\n\
    \        $sum += $i;\n    }\n    $avg = round($sum / ($m - $n + 1));\n    return\
    \ \"0b\" . decbin($avg);\n}\n\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !==\
    \ \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560,\
    \ 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpkhxn8483.php:30\n\
    Stack trace:\n#0 /tmp/tmpkhxn8483.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpkhxn8483.php\
    \ on line 30\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// rounded_avg(1, 5) => \"\
    0b11\"\n// rounded_avg(7, 5) => -1\n// rounded_avg(10, 20) => \"0b1111\"\n// rounded_avg(20,\
    \ 33) => \"0b11010\"\nfunction rounded_avg($n, $m) {\n  if ($n > $m) {\n    return\
    \ -1;\n  }\n  $sum = 0;\n  for ($i = $n; $i <= $m; $i++) {\n    $sum += $i;\n\
    \  }\n  $avg = round($sum / ($m - $n + 1));\n  return \"0b\" . decbin($avg);\n\
    }\n\necho rounded_avg(1, 5) . \"\\n\";\necho rounded_avg(7, 5) . \"\\n\";\necho\
    \ rounded_avg(10, 20) . \"\\n\";\necho rounded_avg(20, 33) . \"\\n\";\nfunction\
    \ candidate(...$args) {\n    return rounded_avg(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(1, 5) !== \"0b11\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(7, 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(964, 977) !== \"0b1111001010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(996, 997) !== \"0b1111100100\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(560, 851) !== \"0b1011000010\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(185, 546) !==\
    \ \"0b101101110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(362,\
    \ 496) !== \"0b110101101\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(350, 902) !== \"0b1001110010\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(197, 233) !== \"0b11010111\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 5) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5, 1) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5, 5) !== \"0b101\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "0b11\n-1\n0b1111\n0b11011\n"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpvz32wmv6.php:34\n\
    Stack trace:\n#0 /tmp/tmpvz32wmv6.php(46): test()\n#1 {main}\n  thrown in /tmp/tmpvz32wmv6.php\
    \ on line 34\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// rounded_avg(1, 5) => \"\
    0b11\"\n// rounded_avg(7, 5) => -1\n// rounded_avg(10, 20) => \"0b1111\"\n// rounded_avg(20,\
    \ 33) => \"0b11010\"\nfunction rounded_avg($n, $m) {\n    if ($n > $m) {\n   \
    \     return -1;\n    }\n    $sum = 0;\n    for ($i = $n; $i <= $m; $i++) {\n\
    \        $sum += $i;\n    }\n    $avg = round($sum / ($m - $n + 1));\n    return\
    \ \"0b\" . decbin($avg);\n}\n\necho rounded_avg(1, 5) . \"\\n\";\necho rounded_avg(7,\
    \ 5) . \"\\n\";\necho rounded_avg(10, 20) . \"\\n\";\necho rounded_avg(20, 33)\
    \ . \"\\n\";\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !==\
    \ \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560,\
    \ 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "0b11\n-1\n0b1111\n0b11011\n"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp4wzsevg9.php:34\n\
    Stack trace:\n#0 /tmp/tmp4wzsevg9.php(46): test()\n#1 {main}\n  thrown in /tmp/tmp4wzsevg9.php\
    \ on line 34\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// rounded_avg(1, 5) => \"\
    0b11\"\n// rounded_avg(7, 5) => -1\n// rounded_avg(10, 20) => \"0b1111\"\n// rounded_avg(20,\
    \ 33) => \"0b11010\"\nfunction rounded_avg($n, $m) {\n    if ($n > $m) {\n   \
    \     return -1;\n    }\n    $sum = 0;\n    for ($i = $n; $i <= $m; $i++) {\n\
    \        $sum += $i;\n    }\n    $avg = round($sum / ($m - $n + 1));\n    return\
    \ \"0b\" . decbin($avg);\n}\n\necho rounded_avg(1, 5) . \"\\n\";\necho rounded_avg(7,\
    \ 5) . \"\\n\";\necho rounded_avg(10, 20) . \"\\n\";\necho rounded_avg(20, 33)\
    \ . \"\\n\";\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !==\
    \ \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560,\
    \ 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "0b11\n-1\n0b1111\n0b11011\n"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpgwn6r5h2.php:34\n\
    Stack trace:\n#0 /tmp/tmpgwn6r5h2.php(46): test()\n#1 {main}\n  thrown in /tmp/tmpgwn6r5h2.php\
    \ on line 34\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// rounded_avg(1, 5) => \"\
    0b11\"\n// rounded_avg(7, 5) => -1\n// rounded_avg(10, 20) => \"0b1111\"\n// rounded_avg(20,\
    \ 33) => \"0b11010\"\nfunction rounded_avg($n, $m) {\n    if ($n > $m) {\n   \
    \     return -1;\n    }\n    $sum = 0;\n    for ($i = $n; $i <= $m; $i++) {\n\
    \        $sum += $i;\n    }\n    $avg = round($sum / ($m - $n + 1));\n    return\
    \ '0b' . decbin($avg);\n}\n\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !==\
    \ \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560,\
    \ 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp0w5zj6nc.php:30\n\
    Stack trace:\n#0 /tmp/tmp0w5zj6nc.php(42): test()\n#1 {main}\n  thrown in /tmp/tmp0w5zj6nc.php\
    \ on line 30\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// rounded_avg(1, 5) => \"\
    0b11\"\n// rounded_avg(7, 5) => -1\n// rounded_avg(10, 20) => \"0b1111\"\n// rounded_avg(20,\
    \ 33) => \"0b11010\"\nfunction rounded_avg($n, $m) {\n  if ($n > $m) {\n    return\
    \ -1;\n  }\n  $sum = 0;\n  for ($i = $n; $i <= $m; $i++) {\n    $sum += $i;\n\
    \  }\n  $avg = round($sum / ($m - $n + 1));\n  return \"0b\" . decbin($avg);\n\
    }\n\necho rounded_avg(1, 5) . \"\\n\";\necho rounded_avg(7, 5) . \"\\n\";\necho\
    \ rounded_avg(10, 20) . \"\\n\";\necho rounded_avg(20, 33) . \"\\n\";\nfunction\
    \ candidate(...$args) {\n    return rounded_avg(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(1, 5) !== \"0b11\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(7, 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(964, 977) !== \"0b1111001010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(996, 997) !== \"0b1111100100\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(560, 851) !== \"0b1011000010\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(185, 546) !==\
    \ \"0b101101110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(362,\
    \ 496) !== \"0b110101101\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(350, 902) !== \"0b1001110010\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(197, 233) !== \"0b11010111\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 5) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5, 1) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5, 5) !== \"0b101\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "0b11\n-1\n0b1111\n0b11011\n"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpnsm0a7xk.php:34\n\
    Stack trace:\n#0 /tmp/tmpnsm0a7xk.php(46): test()\n#1 {main}\n  thrown in /tmp/tmpnsm0a7xk.php\
    \ on line 34\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// rounded_avg(1, 5) => \"\
    0b11\"\n// rounded_avg(7, 5) => -1\n// rounded_avg(10, 20) => \"0b1111\"\n// rounded_avg(20,\
    \ 33) => \"0b11010\"\nfunction rounded_avg($n, $m) {\n    if ($n > $m) {\n   \
    \     return -1;\n    }\n    $sum = 0;\n    for ($i = $n; $i <= $m; $i++) {\n\
    \        $sum += $i;\n    }\n    $avg = round($sum / ($m - $n + 1));\n    return\
    \ \"0b\" . decbin($avg);\n}\n\necho rounded_avg(1, 5) . \"\\n\";\necho rounded_avg(7,\
    \ 5) . \"\\n\";\necho rounded_avg(10, 20) . \"\\n\";\necho rounded_avg(20, 33)\
    \ . \"\\n\";\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !==\
    \ \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560,\
    \ 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "0b11\n-1\n0b1111\n0b11011\n"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpdknokztj.php:34\n\
    Stack trace:\n#0 /tmp/tmpdknokztj.php(46): test()\n#1 {main}\n  thrown in /tmp/tmpdknokztj.php\
    \ on line 34\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// rounded_avg(1, 5) => \"\
    0b11\"\n// rounded_avg(7, 5) => -1\n// rounded_avg(10, 20) => \"0b1111\"\n// rounded_avg(20,\
    \ 33) => \"0b11010\"\nfunction rounded_avg($n, $m) {\n  if ($n > $m) {\n    return\
    \ -1;\n  }\n  $sum = 0;\n  for ($i = $n; $i <= $m; $i++) {\n    $sum += $i;\n\
    \  }\n  $avg = round($sum / ($m - $n + 1));\n  return \"0b\" . decbin($avg);\n\
    }\n\necho rounded_avg(1, 5) . \"\\n\";\necho rounded_avg(7, 5) . \"\\n\";\necho\
    \ rounded_avg(10, 20) . \"\\n\";\necho rounded_avg(20, 33) . \"\\n\";\nfunction\
    \ candidate(...$args) {\n    return rounded_avg(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(1, 5) !== \"0b11\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(7, 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(964, 977) !== \"0b1111001010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(996, 997) !== \"0b1111100100\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(560, 851) !== \"0b1011000010\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(185, 546) !==\
    \ \"0b101101110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(362,\
    \ 496) !== \"0b110101101\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(350, 902) !== \"0b1001110010\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(197, 233) !== \"0b11010111\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 5) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5, 1) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5, 5) !== \"0b101\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "0b11\n-1\n0b1111\n0b11011\n"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp1gbcfhud.php:34\n\
    Stack trace:\n#0 /tmp/tmp1gbcfhud.php(46): test()\n#1 {main}\n  thrown in /tmp/tmp1gbcfhud.php\
    \ on line 34\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// rounded_avg(1, 5) => \"\
    0b11\"\n// rounded_avg(7, 5) => -1\n// rounded_avg(10, 20) => \"0b1111\"\n// rounded_avg(20,\
    \ 33) => \"0b11010\"\nfunction rounded_avg($n, $m) {\n  if ($n > $m) {\n    return\
    \ -1;\n  }\n  $sum = 0;\n  for ($i = $n; $i <= $m; $i++) {\n    $sum += $i;\n\
    \  }\n  $avg = round($sum / ($m - $n + 1));\n  return \"0b\" . decbin($avg);\n\
    }\n\necho rounded_avg(1, 5) . \"\\n\";\necho rounded_avg(7, 5) . \"\\n\";\necho\
    \ rounded_avg(10, 20) . \"\\n\";\necho rounded_avg(20, 33) . \"\\n\";\nfunction\
    \ candidate(...$args) {\n    return rounded_avg(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(1, 5) !== \"0b11\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(7, 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(964, 977) !== \"0b1111001010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(996, 997) !== \"0b1111100100\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(560, 851) !== \"0b1011000010\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(185, 546) !==\
    \ \"0b101101110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(362,\
    \ 496) !== \"0b110101101\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(350, 902) !== \"0b1001110010\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(197, 233) !== \"0b11010111\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 5) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5, 1) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5, 5) !== \"0b101\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "0b11\n-1\n0b1111\n0b11011\n"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpxxy5lvfy.php:34\n\
    Stack trace:\n#0 /tmp/tmpxxy5lvfy.php(46): test()\n#1 {main}\n  thrown in /tmp/tmpxxy5lvfy.php\
    \ on line 34\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// rounded_avg(1, 5) => \"\
    0b11\"\n// rounded_avg(7, 5) => -1\n// rounded_avg(10, 20) => \"0b1111\"\n// rounded_avg(20,\
    \ 33) => \"0b11010\"\nfunction rounded_avg($n, $m) {\n    if ($n > $m) {\n   \
    \     return -1;\n    }\n    $sum = 0;\n    for ($i = $n; $i <= $m; $i++) {\n\
    \        $sum += $i;\n    }\n    $avg = round($sum / ($m - $n + 1));\n    return\
    \ \"0b\" . decbin($avg);\n}\n\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !==\
    \ \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560,\
    \ 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpdx3e0t89.php:30\n\
    Stack trace:\n#0 /tmp/tmpdx3e0t89.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpdx3e0t89.php\
    \ on line 30\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// rounded_avg(1, 5) => \"\
    0b11\"\n// rounded_avg(7, 5) => -1\n// rounded_avg(10, 20) => \"0b1111\"\n// rounded_avg(20,\
    \ 33) => \"0b11010\"\nfunction rounded_avg($n, $m) {\n    if ($n > $m) {\n   \
    \     return -1;\n    }\n    $sum = 0;\n    for ($i = $n; $i <= $m; $i++) {\n\
    \        $sum += $i;\n    }\n    $avg = round($sum / ($m - $n + 1));\n    return\
    \ \"0b\" . decbin($avg);\n}\n\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !==\
    \ \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560,\
    \ 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmprhxfr0j5.php:30\n\
    Stack trace:\n#0 /tmp/tmprhxfr0j5.php(42): test()\n#1 {main}\n  thrown in /tmp/tmprhxfr0j5.php\
    \ on line 30\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// rounded_avg(1, 5) => \"\
    0b11\"\n// rounded_avg(7, 5) => -1\n// rounded_avg(10, 20) => \"0b1111\"\n// rounded_avg(20,\
    \ 33) => \"0b11010\"\nfunction rounded_avg($n, $m) {\n  if ($n > $m) {\n    return\
    \ -1;\n  }\n  $sum = 0;\n  for ($i = $n; $i <= $m; $i++) {\n    $sum += $i;\n\
    \  }\n  $avg = round($sum / ($m - $n + 1));\n  return \"0b\" . decbin($avg);\n\
    }\n\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !== \"0b1111100100\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(560, 851) !==\
    \ \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(185,\
    \ 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpyfkxkzjm.php:30\n\
    Stack trace:\n#0 /tmp/tmpyfkxkzjm.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpyfkxkzjm.php\
    \ on line 30\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// rounded_avg(1, 5) => \"\
    0b11\"\n// rounded_avg(7, 5) => -1\n// rounded_avg(10, 20) => \"0b1111\"\n// rounded_avg(20,\
    \ 33) => \"0b11010\"\nfunction rounded_avg($n, $m) {\n  if ($n > $m) {\n    return\
    \ -1;\n  }\n  $sum = 0;\n  for ($i = $n; $i <= $m; $i++) {\n    $sum += $i;\n\
    \  }\n  $avg = round($sum / ($m - $n + 1));\n  return \"0b\" . decbin($avg);\n\
    }\n\necho rounded_avg(1, 5) . \"\\n\";\necho rounded_avg(7, 5) . \"\\n\";\necho\
    \ rounded_avg(10, 20) . \"\\n\";\necho rounded_avg(20, 33) . \"\\n\";\nfunction\
    \ candidate(...$args) {\n    return rounded_avg(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(1, 5) !== \"0b11\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(7, 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(964, 977) !== \"0b1111001010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(996, 997) !== \"0b1111100100\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(560, 851) !== \"0b1011000010\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(185, 546) !==\
    \ \"0b101101110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(362,\
    \ 496) !== \"0b110101101\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(350, 902) !== \"0b1001110010\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(197, 233) !== \"0b11010111\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 5) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5, 1) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5, 5) !== \"0b101\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "0b11\n-1\n0b1111\n0b11011\n"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp94j2g98t.php:34\n\
    Stack trace:\n#0 /tmp/tmp94j2g98t.php(46): test()\n#1 {main}\n  thrown in /tmp/tmp94j2g98t.php\
    \ on line 34\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// rounded_avg(1, 5) => \"\
    0b11\"\n// rounded_avg(7, 5) => -1\n// rounded_avg(10, 20) => \"0b1111\"\n// rounded_avg(20,\
    \ 33) => \"0b11010\"\nfunction rounded_avg($n, $m) {\n  if ($n > $m) {\n    return\
    \ -1;\n  }\n  $sum = 0;\n  for ($i = $n; $i <= $m; $i++) {\n    $sum += $i;\n\
    \  }\n  $avg = round($sum / ($m - $n + 1));\n  return \"0b\" . decbin($avg);\n\
    }\n\necho rounded_avg(1, 5) . \"\\n\";\necho rounded_avg(7, 5) . \"\\n\";\necho\
    \ rounded_avg(10, 20) . \"\\n\";\necho rounded_avg(20, 33) . \"\\n\";\nfunction\
    \ candidate(...$args) {\n    return rounded_avg(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(1, 5) !== \"0b11\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(7, 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(964, 977) !== \"0b1111001010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(996, 997) !== \"0b1111100100\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(560, 851) !== \"0b1011000010\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(185, 546) !==\
    \ \"0b101101110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(362,\
    \ 496) !== \"0b110101101\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(350, 902) !== \"0b1001110010\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(197, 233) !== \"0b11010111\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 5) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5, 1) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5, 5) !== \"0b101\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "0b11\n-1\n0b1111\n0b11011\n"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpje2kw5en.php:34\n\
    Stack trace:\n#0 /tmp/tmpje2kw5en.php(46): test()\n#1 {main}\n  thrown in /tmp/tmpje2kw5en.php\
    \ on line 34\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// rounded_avg(1, 5) => \"\
    0b11\"\n// rounded_avg(7, 5) => -1\n// rounded_avg(10, 20) => \"0b1111\"\n// rounded_avg(20,\
    \ 33) => \"0b11010\"\nfunction rounded_avg($n, $m) {\n    if ($n > $m) {\n   \
    \     return -1;\n    }\n    $sum = 0;\n    for ($i = $n; $i <= $m; $i++) {\n\
    \        $sum += $i;\n    }\n    $avg = round($sum / ($m - $n + 1));\n    return\
    \ \"0b\" . decbin($avg);\n}\necho rounded_avg(1, 5) . \"\\n\";\necho rounded_avg(7,\
    \ 5) . \"\\n\";\necho rounded_avg(10, 20) . \"\\n\";\necho rounded_avg(20, 33)\
    \ . \"\\n\";\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !==\
    \ \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560,\
    \ 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "0b11\n-1\n0b1111\n0b11011\n"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpaplui10c.php:33\n\
    Stack trace:\n#0 /tmp/tmpaplui10c.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpaplui10c.php\
    \ on line 33\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// rounded_avg(1, 5) => \"\
    0b11\"\n// rounded_avg(7, 5) => -1\n// rounded_avg(10, 20) => \"0b1111\"\n// rounded_avg(20,\
    \ 33) => \"0b11010\"\nfunction rounded_avg($n, $m) {\n  if ($n > $m) {\n    return\
    \ -1;\n  }\n  $sum = 0;\n  for ($i = $n; $i <= $m; $i++) {\n    $sum += $i;\n\
    \  }\n  $avg = round($sum / ($m - $n + 1));\n  return \"0b\" . decbin($avg);\n\
    }\n\necho rounded_avg(1, 5) . \"\\n\";\necho rounded_avg(7, 5) . \"\\n\";\necho\
    \ rounded_avg(10, 20) . \"\\n\";\necho rounded_avg(20, 33) . \"\\n\";\nfunction\
    \ candidate(...$args) {\n    return rounded_avg(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(1, 5) !== \"0b11\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(7, 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(964, 977) !== \"0b1111001010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(996, 997) !== \"0b1111100100\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(560, 851) !== \"0b1011000010\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(185, 546) !==\
    \ \"0b101101110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(362,\
    \ 496) !== \"0b110101101\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(350, 902) !== \"0b1001110010\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(197, 233) !== \"0b11010111\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 5) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5, 1) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5, 5) !== \"0b101\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "0b11\n-1\n0b1111\n0b11011\n"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpgkuziajg.php:34\n\
    Stack trace:\n#0 /tmp/tmpgkuziajg.php(46): test()\n#1 {main}\n  thrown in /tmp/tmpgkuziajg.php\
    \ on line 34\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// rounded_avg(1, 5) => \"\
    0b11\"\n// rounded_avg(7, 5) => -1\n// rounded_avg(10, 20) => \"0b1111\"\n// rounded_avg(20,\
    \ 33) => \"0b11010\"\nfunction rounded_avg($n, $m) {\n  if ($n > $m) {\n    return\
    \ -1;\n  }\n  $sum = 0;\n  for ($i = $n; $i <= $m; $i++) {\n    $sum += $i;\n\
    \  }\n  $avg = round($sum / ($m - $n + 1));\n  return \"0b\" . decbin($avg);\n\
    }\n\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !== \"0b1111100100\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(560, 851) !==\
    \ \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(185,\
    \ 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmps3cb005t.php:30\n\
    Stack trace:\n#0 /tmp/tmps3cb005t.php(42): test()\n#1 {main}\n  thrown in /tmp/tmps3cb005t.php\
    \ on line 30\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// rounded_avg(1, 5) => \"\
    0b11\"\n// rounded_avg(7, 5) => -1\n// rounded_avg(10, 20) => \"0b1111\"\n// rounded_avg(20,\
    \ 33) => \"0b11010\"\nfunction rounded_avg($n, $m) {\n  if ($n > $m) return -1;\n\
    \  $sum = 0;\n  for ($i = $n; $i <= $m; $i++) {\n    $sum += $i;\n  }\n  $avg\
    \ = round($sum / ($m - $n + 1));\n  return \"0b\" . decbin($avg);\n}\necho rounded_avg(1,\
    \ 5) . \"\\n\";\necho rounded_avg(7, 5) . \"\\n\";\necho rounded_avg(10, 20) .\
    \ \"\\n\";\necho rounded_avg(20, 33) . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1,\
    \ 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964,\
    \ 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !==\
    \ \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197,\
    \ 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "0b11\n-1\n0b1111\n0b11011\n"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpl763t_9y.php:31\n\
    Stack trace:\n#0 /tmp/tmpl763t_9y.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpl763t_9y.php\
    \ on line 31\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// rounded_avg(1, 5) => \"\
    0b11\"\n// rounded_avg(7, 5) => -1\n// rounded_avg(10, 20) => \"0b1111\"\n// rounded_avg(20,\
    \ 33) => \"0b11010\"\nfunction rounded_avg($n, $m) {\n    if ($n > $m) {\n   \
    \     return -1;\n    }\n    $sum = 0;\n    for ($i = $n; $i <= $m; $i++) {\n\
    \        $sum += $i;\n    }\n    $avg = round($sum / ($m - $n + 1));\n    return\
    \ \"0b\" . decbin($avg);\n}\necho rounded_avg(1, 5) . \"\\n\";\necho rounded_avg(7,\
    \ 5) . \"\\n\";\necho rounded_avg(10, 20) . \"\\n\";\necho rounded_avg(20, 33)\
    \ . \"\\n\";\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !==\
    \ \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560,\
    \ 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "0b11\n-1\n0b1111\n0b11011\n"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpn7zrsisx.php:33\n\
    Stack trace:\n#0 /tmp/tmpn7zrsisx.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpn7zrsisx.php\
    \ on line 33\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// rounded_avg(1, 5) => \"\
    0b11\"\n// rounded_avg(7, 5) => -1\n// rounded_avg(10, 20) => \"0b1111\"\n// rounded_avg(20,\
    \ 33) => \"0b11010\"\nfunction rounded_avg($n, $m) {\n    if ($n > $m) {\n   \
    \     return -1;\n    }\n    $sum = 0;\n    for ($i = $n; $i <= $m; $i++) {\n\
    \        $sum += $i;\n    }\n    $avg = round($sum / ($m - $n + 1));\n    return\
    \ \"0b\" . decbin($avg);\n}\necho rounded_avg(1, 5) . \"\\n\";\necho rounded_avg(7,\
    \ 5) . \"\\n\";\necho rounded_avg(10, 20) . \"\\n\";\necho rounded_avg(20, 33)\
    \ . \"\\n\";\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !==\
    \ \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560,\
    \ 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "0b11\n-1\n0b1111\n0b11011\n"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpy8oi1s41.php:33\n\
    Stack trace:\n#0 /tmp/tmpy8oi1s41.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpy8oi1s41.php\
    \ on line 33\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// rounded_avg(1, 5) => \"\
    0b11\"\n// rounded_avg(7, 5) => -1\n// rounded_avg(10, 20) => \"0b1111\"\n// rounded_avg(20,\
    \ 33) => \"0b11010\"\nfunction rounded_avg($n, $m) {\n    if ($n > $m) {\n   \
    \     return -1;\n    }\n    $sum = 0;\n    for ($i = $n; $i <= $m; $i++) {\n\
    \        $sum += $i;\n    }\n    $avg = round($sum / ($m - $n + 1));\n    return\
    \ \"0b\" . decbin($avg);\n}\n\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !==\
    \ \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560,\
    \ 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmphjoip54y.php:30\n\
    Stack trace:\n#0 /tmp/tmphjoip54y.php(42): test()\n#1 {main}\n  thrown in /tmp/tmphjoip54y.php\
    \ on line 30\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// rounded_avg(1, 5) => \"\
    0b11\"\n// rounded_avg(7, 5) => -1\n// rounded_avg(10, 20) => \"0b1111\"\n// rounded_avg(20,\
    \ 33) => \"0b11010\"\nfunction rounded_avg($n, $m) {\n  if ($n > $m) {\n    return\
    \ -1;\n  }\n  $sum = 0;\n  for ($i = $n; $i <= $m; $i++) {\n    $sum += $i;\n\
    \  }\n  $avg = round($sum / ($m - $n + 1));\n  return \"0b\" . decbin($avg);\n\
    }\n\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !== \"0b1111100100\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(560, 851) !==\
    \ \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(185,\
    \ 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp2flq5vxt.php:30\n\
    Stack trace:\n#0 /tmp/tmp2flq5vxt.php(42): test()\n#1 {main}\n  thrown in /tmp/tmp2flq5vxt.php\
    \ on line 30\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// rounded_avg(1, 5) => \"\
    0b11\"\n// rounded_avg(7, 5) => -1\n// rounded_avg(10, 20) => \"0b1111\"\n// rounded_avg(20,\
    \ 33) => \"0b11010\"\nfunction rounded_avg($n, $m) {\n    if ($n > $m) {\n   \
    \     return -1;\n    }\n    $sum = 0;\n    for ($i = $n; $i <= $m; $i++) {\n\
    \        $sum += $i;\n    }\n    $avg = round($sum / ($m - $n + 1));\n    return\
    \ \"0b\" . decbin($avg);\n}\n\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !==\
    \ \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560,\
    \ 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp3cdure5a.php:30\n\
    Stack trace:\n#0 /tmp/tmp3cdure5a.php(42): test()\n#1 {main}\n  thrown in /tmp/tmp3cdure5a.php\
    \ on line 30\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// rounded_avg(1, 5) => \"\
    0b11\"\n// rounded_avg(7, 5) => -1\n// rounded_avg(10, 20) => \"0b1111\"\n// rounded_avg(20,\
    \ 33) => \"0b11010\"\nfunction rounded_avg($n, $m) {\n  if ($n > $m) {\n    return\
    \ -1;\n  }\n  $sum = 0;\n  for ($i = $n; $i <= $m; $i++) {\n    $sum += $i;\n\
    \  }\n  $avg = round($sum / ($m - $n + 1));\n  return \"0b\" . decbin($avg);\n\
    }\n\necho rounded_avg(1, 5) . \"\\n\";\necho rounded_avg(7, 5) . \"\\n\";\necho\
    \ rounded_avg(10, 20) . \"\\n\";\necho rounded_avg(20, 33) . \"\\n\";\nfunction\
    \ candidate(...$args) {\n    return rounded_avg(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(1, 5) !== \"0b11\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(7, 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(964, 977) !== \"0b1111001010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(996, 997) !== \"0b1111100100\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(560, 851) !== \"0b1011000010\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(185, 546) !==\
    \ \"0b101101110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(362,\
    \ 496) !== \"0b110101101\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(350, 902) !== \"0b1001110010\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(197, 233) !== \"0b11010111\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 5) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5, 1) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5, 5) !== \"0b101\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "0b11\n-1\n0b1111\n0b11011\n"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpxctdvkdp.php:34\n\
    Stack trace:\n#0 /tmp/tmpxctdvkdp.php(46): test()\n#1 {main}\n  thrown in /tmp/tmpxctdvkdp.php\
    \ on line 34\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// rounded_avg(1, 5) => \"\
    0b11\"\n// rounded_avg(7, 5) => -1\n// rounded_avg(10, 20) => \"0b1111\"\n// rounded_avg(20,\
    \ 33) => \"0b11010\"\nfunction rounded_avg($n, $m) {\n    if ($n > $m) {\n   \
    \     return -1;\n    }\n    $sum = 0;\n    for ($i = $n; $i <= $m; $i++) {\n\
    \        $sum += $i;\n    }\n    $avg = round($sum / ($m - $n + 1));\n    return\
    \ \"0b\" . decbin($avg);\n}\n\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !==\
    \ \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560,\
    \ 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpsldlv556.php:30\n\
    Stack trace:\n#0 /tmp/tmpsldlv556.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpsldlv556.php\
    \ on line 30\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// rounded_avg(1, 5) => \"\
    0b11\"\n// rounded_avg(7, 5) => -1\n// rounded_avg(10, 20) => \"0b1111\"\n// rounded_avg(20,\
    \ 33) => \"0b11010\"\nfunction rounded_avg($n, $m) {\n    if ($n > $m) {\n   \
    \     return -1;\n    }\n    $sum = 0;\n    for ($i = $n; $i <= $m; $i++) {\n\
    \        $sum += $i;\n    }\n    $avg = round($sum / ($m - $n + 1));\n    return\
    \ \"0b\" . decbin($avg);\n}\n\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !==\
    \ \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560,\
    \ 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpq1w333h1.php:30\n\
    Stack trace:\n#0 /tmp/tmpq1w333h1.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpq1w333h1.php\
    \ on line 30\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// rounded_avg(1, 5) => \"\
    0b11\"\n// rounded_avg(7, 5) => -1\n// rounded_avg(10, 20) => \"0b1111\"\n// rounded_avg(20,\
    \ 33) => \"0b11010\"\nfunction rounded_avg($n, $m) {\n  if ($n > $m) {\n    return\
    \ -1;\n  }\n  $sum = 0;\n  for ($i = $n; $i <= $m; $i++) {\n    $sum += $i;\n\
    \  }\n  $avg = round($sum / ($m - $n + 1));\n  return \"0b\" . decbin($avg);\n\
    }\n\necho rounded_avg(1, 5) . \"\\n\";\necho rounded_avg(7, 5) . \"\\n\";\necho\
    \ rounded_avg(10, 20) . \"\\n\";\necho rounded_avg(20, 33) . \"\\n\";\nfunction\
    \ candidate(...$args) {\n    return rounded_avg(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(1, 5) !== \"0b11\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(7, 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(964, 977) !== \"0b1111001010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(996, 997) !== \"0b1111100100\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(560, 851) !== \"0b1011000010\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(185, 546) !==\
    \ \"0b101101110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(362,\
    \ 496) !== \"0b110101101\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(350, 902) !== \"0b1001110010\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(197, 233) !== \"0b11010111\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 5) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5, 1) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5, 5) !== \"0b101\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "0b11\n-1\n0b1111\n0b11011\n"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp85myrf75.php:34\n\
    Stack trace:\n#0 /tmp/tmp85myrf75.php(46): test()\n#1 {main}\n  thrown in /tmp/tmp85myrf75.php\
    \ on line 34\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// rounded_avg(1, 5) => \"\
    0b11\"\n// rounded_avg(7, 5) => -1\n// rounded_avg(10, 20) => \"0b1111\"\n// rounded_avg(20,\
    \ 33) => \"0b11010\"\nfunction rounded_avg($n, $m) {\n    if ($n > $m) {\n   \
    \     return -1;\n    }\n    $sum = 0;\n    for ($i = $n; $i <= $m; $i++) {\n\
    \        $sum += $i;\n    }\n    $avg = round($sum / ($m - $n + 1));\n    return\
    \ decbin($avg);\n}\n\necho rounded_avg(1, 5) . \"\\n\";\necho rounded_avg(7, 5)\
    \ . \"\\n\";\necho rounded_avg(10, 20) . \"\\n\";\necho rounded_avg(20, 33) .\
    \ \"\\n\";\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !==\
    \ \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560,\
    \ 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "11\n-1\n1111\n11011\n"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpg6__e69w.php:32\n\
    Stack trace:\n#0 /tmp/tmpg6__e69w.php(46): test()\n#1 {main}\n  thrown in /tmp/tmpg6__e69w.php\
    \ on line 32\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// rounded_avg(1, 5) => \"\
    0b11\"\n// rounded_avg(7, 5) => -1\n// rounded_avg(10, 20) => \"0b1111\"\n// rounded_avg(20,\
    \ 33) => \"0b11010\"\nfunction rounded_avg($n, $m) {\n  if ($n > $m) {\n    return\
    \ -1;\n  }\n  $sum = 0;\n  for ($i = $n; $i <= $m; $i++) {\n    $sum += $i;\n\
    \  }\n  $avg = round($sum / ($m - $n + 1));\n  return \"0b\" . decbin($avg);\n\
    }\n\necho rounded_avg(1, 5) . \"\\n\";\necho rounded_avg(7, 5) . \"\\n\";\necho\
    \ rounded_avg(10, 20) . \"\\n\";\necho rounded_avg(20, 33) . \"\\n\";\nfunction\
    \ candidate(...$args) {\n    return rounded_avg(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(1, 5) !== \"0b11\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(7, 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(964, 977) !== \"0b1111001010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(996, 997) !== \"0b1111100100\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(560, 851) !== \"0b1011000010\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(185, 546) !==\
    \ \"0b101101110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(362,\
    \ 496) !== \"0b110101101\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(350, 902) !== \"0b1001110010\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(197, 233) !== \"0b11010111\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 5) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5, 1) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5, 5) !== \"0b101\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "0b11\n-1\n0b1111\n0b11011\n"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp206gc1h9.php:34\n\
    Stack trace:\n#0 /tmp/tmp206gc1h9.php(46): test()\n#1 {main}\n  thrown in /tmp/tmp206gc1h9.php\
    \ on line 34\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// rounded_avg(1, 5) => \"\
    0b11\"\n// rounded_avg(7, 5) => -1\n// rounded_avg(10, 20) => \"0b1111\"\n// rounded_avg(20,\
    \ 33) => \"0b11010\"\nfunction rounded_avg($n, $m) {\n    if ($n > $m) {\n   \
    \     return -1;\n    }\n    $sum = 0;\n    for ($i = $n; $i <= $m; $i++) {\n\
    \        $sum += $i;\n    }\n    $avg = round($sum / ($m - $n + 1));\n    return\
    \ \"0b\" . decbin($avg);\n}\n\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !==\
    \ \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560,\
    \ 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmphz7_gtw2.php:30\n\
    Stack trace:\n#0 /tmp/tmphz7_gtw2.php(42): test()\n#1 {main}\n  thrown in /tmp/tmphz7_gtw2.php\
    \ on line 30\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// rounded_avg(1, 5) => \"\
    0b11\"\n// rounded_avg(7, 5) => -1\n// rounded_avg(10, 20) => \"0b1111\"\n// rounded_avg(20,\
    \ 33) => \"0b11010\"\nfunction rounded_avg($n, $m) {\n    if ($n > $m) {\n   \
    \     return -1;\n    }\n    $sum = 0;\n    for ($i = $n; $i <= $m; $i++) {\n\
    \        $sum += $i;\n    }\n    $avg = round($sum / ($m - $n + 1));\n    return\
    \ \"0b\" . decbin($avg);\n}\n\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !==\
    \ \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560,\
    \ 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpjx8p650o.php:30\n\
    Stack trace:\n#0 /tmp/tmpjx8p650o.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpjx8p650o.php\
    \ on line 30\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// rounded_avg(1, 5) => \"\
    0b11\"\n// rounded_avg(7, 5) => -1\n// rounded_avg(10, 20) => \"0b1111\"\n// rounded_avg(20,\
    \ 33) => \"0b11010\"\nfunction rounded_avg($n, $m) {\n  if ($n > $m) {\n    return\
    \ -1;\n  }\n  $sum = 0;\n  for ($i = $n; $i <= $m; $i++) {\n    $sum += $i;\n\
    \  }\n  $avg = round($sum / ($m - $n + 1));\n  return \"0b\" . decbin($avg);\n\
    }\n\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !== \"0b1111100100\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(560, 851) !==\
    \ \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(185,\
    \ 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp4ayjxg8t.php:30\n\
    Stack trace:\n#0 /tmp/tmp4ayjxg8t.php(42): test()\n#1 {main}\n  thrown in /tmp/tmp4ayjxg8t.php\
    \ on line 30\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// rounded_avg(1, 5) => \"\
    0b11\"\n// rounded_avg(7, 5) => -1\n// rounded_avg(10, 20) => \"0b1111\"\n// rounded_avg(20,\
    \ 33) => \"0b11010\"\nfunction rounded_avg($n, $m) {\n  if ($n > $m) {\n    return\
    \ -1;\n  }\n  $sum = 0;\n  for ($i = $n; $i <= $m; $i++) {\n    $sum += $i;\n\
    \  }\n  $avg = round($sum / ($m - $n + 1));\n  return decbin($avg);\n}\n\necho\
    \ rounded_avg(1, 5) . \"\\n\";\necho rounded_avg(7, 5) . \"\\n\";\necho rounded_avg(10,\
    \ 20) . \"\\n\";\necho rounded_avg(20, 33) . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1,\
    \ 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964,\
    \ 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !==\
    \ \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197,\
    \ 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "11\n-1\n1111\n11011\n"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpdsn7y6jk.php:32\n\
    Stack trace:\n#0 /tmp/tmpdsn7y6jk.php(46): test()\n#1 {main}\n  thrown in /tmp/tmpdsn7y6jk.php\
    \ on line 32\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// rounded_avg(1, 5) => \"\
    0b11\"\n// rounded_avg(7, 5) => -1\n// rounded_avg(10, 20) => \"0b1111\"\n// rounded_avg(20,\
    \ 33) => \"0b11010\"\nfunction rounded_avg($n, $m) {\n  if ($n > $m) return -1;\n\
    \  $sum = 0;\n  for ($i = $n; $i <= $m; $i++) {\n    $sum += $i;\n  }\n  $avg\
    \ = round($sum / ($m - $n + 1));\n  return \"0b\" . decbin($avg);\n}\n\nfunction\
    \ candidate(...$args) {\n    return rounded_avg(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(1, 5) !== \"0b11\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(7, 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(964, 977) !== \"0b1111001010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(996, 997) !== \"0b1111100100\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(560, 851) !== \"0b1011000010\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(185, 546) !==\
    \ \"0b101101110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(362,\
    \ 496) !== \"0b110101101\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(350, 902) !== \"0b1001110010\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(197, 233) !== \"0b11010111\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 5) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5, 1) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5, 5) !== \"0b101\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpdwrsn74e.php:28\n\
    Stack trace:\n#0 /tmp/tmpdwrsn74e.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpdwrsn74e.php\
    \ on line 28\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// rounded_avg(1, 5) => \"\
    0b11\"\n// rounded_avg(7, 5) => -1\n// rounded_avg(10, 20) => \"0b1111\"\n// rounded_avg(20,\
    \ 33) => \"0b11010\"\nfunction rounded_avg($n, $m) {\n    if ($n > $m) {\n   \
    \     return -1;\n    }\n    $sum = 0;\n    for ($i = $n; $i <= $m; $i++) {\n\
    \        $sum += $i;\n    }\n    $avg = round($sum / ($m - $n + 1));\n    return\
    \ \"0b\" . decbin($avg);\n}\n\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !==\
    \ \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560,\
    \ 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpeac4l3ig.php:30\n\
    Stack trace:\n#0 /tmp/tmpeac4l3ig.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpeac4l3ig.php\
    \ on line 30\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// rounded_avg(1, 5) => \"\
    0b11\"\n// rounded_avg(7, 5) => -1\n// rounded_avg(10, 20) => \"0b1111\"\n// rounded_avg(20,\
    \ 33) => \"0b11010\"\nfunction rounded_avg($n, $m) {\n    $sum = 0;\n    if ($n\
    \ > $m) {\n        return -1;\n    }\n    for ($i = $n; $i <= $m; $i++) {\n  \
    \      $sum += $i;\n    }\n    $avg = round($sum / ($m - $n + 1));\n    return\
    \ decbin($avg);\n}\n\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !==\
    \ \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560,\
    \ 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp0glm6u3y.php:28\n\
    Stack trace:\n#0 /tmp/tmp0glm6u3y.php(42): test()\n#1 {main}\n  thrown in /tmp/tmp0glm6u3y.php\
    \ on line 28\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// rounded_avg(1, 5) => \"\
    0b11\"\n// rounded_avg(7, 5) => -1\n// rounded_avg(10, 20) => \"0b1111\"\n// rounded_avg(20,\
    \ 33) => \"0b11010\"\nfunction rounded_avg($n, $m) {\n    if ($n > $m) {\n   \
    \     return -1;\n    }\n    $sum = 0;\n    for ($i = $n; $i <= $m; $i++) {\n\
    \        $sum += $i;\n    }\n    $avg = round($sum / ($m - $n + 1));\n    return\
    \ \"0b\" . decbin($avg);\n}\n\necho rounded_avg(1, 5) . \"\\n\";\necho rounded_avg(7,\
    \ 5) . \"\\n\";\necho rounded_avg(10, 20) . \"\\n\";\necho rounded_avg(20, 33)\
    \ . \"\\n\";\n\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !==\
    \ \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560,\
    \ 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "0b11\n-1\n0b1111\n0b11011\n"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpprnjfscb.php:35\n\
    Stack trace:\n#0 /tmp/tmpprnjfscb.php(47): test()\n#1 {main}\n  thrown in /tmp/tmpprnjfscb.php\
    \ on line 35\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// rounded_avg(1, 5) => \"\
    0b11\"\n// rounded_avg(7, 5) => -1\n// rounded_avg(10, 20) => \"0b1111\"\n// rounded_avg(20,\
    \ 33) => \"0b11010\"\nfunction rounded_avg($n, $m) {\n    if ($n > $m) {\n   \
    \     return -1;\n    }\n    $sum = 0;\n    for ($i = $n; $i <= $m; $i++) {\n\
    \        $sum += $i;\n    }\n    $avg = round($sum / ($m - $n + 1));\n    return\
    \ \"0b\" . decbin($avg);\n}\n\necho rounded_avg(1, 5) . \"\\n\";\necho rounded_avg(7,\
    \ 5) . \"\\n\";\necho rounded_avg(10, 20) . \"\\n\";\necho rounded_avg(20, 33)\
    \ . \"\\n\";\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !==\
    \ \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560,\
    \ 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "0b11\n-1\n0b1111\n0b11011\n"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmprr89mok1.php:34\n\
    Stack trace:\n#0 /tmp/tmprr89mok1.php(46): test()\n#1 {main}\n  thrown in /tmp/tmprr89mok1.php\
    \ on line 34\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// rounded_avg(1, 5) => \"\
    0b11\"\n// rounded_avg(7, 5) => -1\n// rounded_avg(10, 20) => \"0b1111\"\n// rounded_avg(20,\
    \ 33) => \"0b11010\"\nfunction rounded_avg($n, $m) {\n    if ($n > $m) {\n   \
    \     return -1;\n    }\n    $sum = 0;\n    for ($i = $n; $i <= $m; $i++) {\n\
    \        $sum += $i;\n    }\n    $avg = round($sum / ($m - $n + 1));\n    return\
    \ \"0b\" . decbin($avg);\n}\n\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !==\
    \ \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560,\
    \ 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp1ibdvdsa.php:30\n\
    Stack trace:\n#0 /tmp/tmp1ibdvdsa.php(42): test()\n#1 {main}\n  thrown in /tmp/tmp1ibdvdsa.php\
    \ on line 30\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// rounded_avg(1, 5) => \"\
    0b11\"\n// rounded_avg(7, 5) => -1\n// rounded_avg(10, 20) => \"0b1111\"\n// rounded_avg(20,\
    \ 33) => \"0b11010\"\nfunction rounded_avg($n, $m) {\n    if ($n > $m) {\n   \
    \     return -1;\n    }\n    $sum = 0;\n    for ($i = $n; $i <= $m; $i++) {\n\
    \        $sum += $i;\n    }\n    $avg = round($sum / ($m - $n + 1));\n    return\
    \ \"0b\" . decbin($avg);\n}\n\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !==\
    \ \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560,\
    \ 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp4gx21cya.php:30\n\
    Stack trace:\n#0 /tmp/tmp4gx21cya.php(42): test()\n#1 {main}\n  thrown in /tmp/tmp4gx21cya.php\
    \ on line 30\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// rounded_avg(1, 5) => \"\
    0b11\"\n// rounded_avg(7, 5) => -1\n// rounded_avg(10, 20) => \"0b1111\"\n// rounded_avg(20,\
    \ 33) => \"0b11010\"\nfunction rounded_avg($n, $m) {\n    if ($n > $m) {\n   \
    \     return -1;\n    }\n    $sum = 0;\n    for ($i = $n; $i <= $m; $i++) {\n\
    \        $sum += $i;\n    }\n    $avg = round($sum / ($m - $n + 1));\n    return\
    \ \"0b\" . decbin($avg);\n}\n\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !==\
    \ \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560,\
    \ 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp94g9y7gc.php:30\n\
    Stack trace:\n#0 /tmp/tmp94g9y7gc.php(42): test()\n#1 {main}\n  thrown in /tmp/tmp94g9y7gc.php\
    \ on line 30\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// rounded_avg(1, 5) => \"\
    0b11\"\n// rounded_avg(7, 5) => -1\n// rounded_avg(10, 20) => \"0b1111\"\n// rounded_avg(20,\
    \ 33) => \"0b11010\"\nfunction rounded_avg($n, $m) {\n    if ($n > $m) {\n   \
    \     return -1;\n    }\n    $sum = 0;\n    for ($i = $n; $i <= $m; $i++) {\n\
    \        $sum += $i;\n    }\n    $avg = round($sum / ($m - $n + 1));\n    return\
    \ \"0b\" . decbin($avg);\n}\n\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !==\
    \ \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560,\
    \ 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmplejqbe96.php:30\n\
    Stack trace:\n#0 /tmp/tmplejqbe96.php(42): test()\n#1 {main}\n  thrown in /tmp/tmplejqbe96.php\
    \ on line 30\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// rounded_avg(1, 5) => \"\
    0b11\"\n// rounded_avg(7, 5) => -1\n// rounded_avg(10, 20) => \"0b1111\"\n// rounded_avg(20,\
    \ 33) => \"0b11010\"\nfunction rounded_avg($n, $m) {\n    if ($n > $m) {\n   \
    \     return -1;\n    }\n    $sum = 0;\n    for ($i = $n; $i <= $m; $i++) {\n\
    \        $sum += $i;\n    }\n    $avg = round($sum / ($m - $n + 1));\n    return\
    \ \"0b\" . decbin($avg);\n}\n\necho rounded_avg(1, 5) . \"\\n\";\necho rounded_avg(7,\
    \ 5) . \"\\n\";\necho rounded_avg(10, 20) . \"\\n\";\necho rounded_avg(20, 33)\
    \ . \"\\n\";\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !==\
    \ \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560,\
    \ 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "0b11\n-1\n0b1111\n0b11011\n"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpg5qyr35v.php:34\n\
    Stack trace:\n#0 /tmp/tmpg5qyr35v.php(46): test()\n#1 {main}\n  thrown in /tmp/tmpg5qyr35v.php\
    \ on line 34\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// rounded_avg(1, 5) => \"\
    0b11\"\n// rounded_avg(7, 5) => -1\n// rounded_avg(10, 20) => \"0b1111\"\n// rounded_avg(20,\
    \ 33) => \"0b11010\"\nfunction rounded_avg($n, $m) {\n    if ($n > $m) {\n   \
    \     return -1;\n    }\n    $sum = 0;\n    for ($i = $n; $i <= $m; $i++) {\n\
    \        $sum += $i;\n    }\n    $avg = round($sum / ($m - $n + 1));\n    return\
    \ \"0b\" . decbin($avg);\n}\necho rounded_avg(1, 5) . \"\\n\";\necho rounded_avg(7,\
    \ 5) . \"\\n\";\necho rounded_avg(10, 20) . \"\\n\";\necho rounded_avg(20, 33)\
    \ . \"\\n\";\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !==\
    \ \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560,\
    \ 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "0b11\n-1\n0b1111\n0b11011\n"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp8knibrpu.php:33\n\
    Stack trace:\n#0 /tmp/tmp8knibrpu.php(45): test()\n#1 {main}\n  thrown in /tmp/tmp8knibrpu.php\
    \ on line 33\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// rounded_avg(1, 5) => \"\
    0b11\"\n// rounded_avg(7, 5) => -1\n// rounded_avg(10, 20) => \"0b1111\"\n// rounded_avg(20,\
    \ 33) => \"0b11010\"\nfunction rounded_avg($n, $m) {\n  if ($n > $m) {\n    return\
    \ -1;\n  }\n  $sum = 0;\n  for ($i = $n; $i <= $m; $i++) {\n    $sum += $i;\n\
    \  }\n  $avg = round($sum / ($m - $n + 1));\n  return \"0b\" . decbin($avg);\n\
    }\n\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !== \"0b1111100100\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(560, 851) !==\
    \ \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(185,\
    \ 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpe29x40l3.php:30\n\
    Stack trace:\n#0 /tmp/tmpe29x40l3.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpe29x40l3.php\
    \ on line 30\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// rounded_avg(1, 5) => \"\
    0b11\"\n// rounded_avg(7, 5) => -1\n// rounded_avg(10, 20) => \"0b1111\"\n// rounded_avg(20,\
    \ 33) => \"0b11010\"\nfunction rounded_avg($n, $m) {\n    if ($n > $m) {\n   \
    \     return -1;\n    }\n    $sum = 0;\n    for ($i = $n; $i <= $m; $i++) {\n\
    \        $sum += $i;\n    }\n    $avg = round($sum / ($m - $n + 1));\n    return\
    \ \"0b\" . decbin($avg);\n}\n\necho rounded_avg(1, 5) . \"\\n\";\necho rounded_avg(7,\
    \ 5) . \"\\n\";\necho rounded_avg(10, 20) . \"\\n\";\necho rounded_avg(20, 33)\
    \ . \"\\n\";\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !==\
    \ \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560,\
    \ 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "0b11\n-1\n0b1111\n0b11011\n"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpmlfgbo09.php:34\n\
    Stack trace:\n#0 /tmp/tmpmlfgbo09.php(46): test()\n#1 {main}\n  thrown in /tmp/tmpmlfgbo09.php\
    \ on line 34\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// rounded_avg(1, 5) => \"\
    0b11\"\n// rounded_avg(7, 5) => -1\n// rounded_avg(10, 20) => \"0b1111\"\n// rounded_avg(20,\
    \ 33) => \"0b11010\"\nfunction rounded_avg($n, $m) {\n    if ($n > $m) return\
    \ -1;\n    $sum = 0;\n    for ($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n\
    \    }\n    $avg = round($sum / ($m - $n + 1));\n    return \"0b\" . decbin($avg);\n\
    }\n\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !== \"0b1111100100\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(560, 851) !==\
    \ \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(185,\
    \ 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp1a1kv1m8.php:28\n\
    Stack trace:\n#0 /tmp/tmp1a1kv1m8.php(40): test()\n#1 {main}\n  thrown in /tmp/tmp1a1kv1m8.php\
    \ on line 28\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// rounded_avg(1, 5) => \"\
    0b11\"\n// rounded_avg(7, 5) => -1\n// rounded_avg(10, 20) => \"0b1111\"\n// rounded_avg(20,\
    \ 33) => \"0b11010\"\nfunction rounded_avg($n, $m) {\n    if ($n > $m) {\n   \
    \     return -1;\n    }\n    $sum = 0;\n    for ($i = $n; $i <= $m; $i++) {\n\
    \        $sum += $i;\n    }\n    $avg = round($sum / ($m - $n + 1));\n    return\
    \ \"0b\" . decbin($avg);\n}\n\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !==\
    \ \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560,\
    \ 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpvj6g4g_h.php:30\n\
    Stack trace:\n#0 /tmp/tmpvj6g4g_h.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpvj6g4g_h.php\
    \ on line 30\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// rounded_avg(1, 5) => \"\
    0b11\"\n// rounded_avg(7, 5) => -1\n// rounded_avg(10, 20) => \"0b1111\"\n// rounded_avg(20,\
    \ 33) => \"0b11010\"\nfunction rounded_avg($n, $m) {\n    if ($n > $m) {\n   \
    \     return -1;\n    }\n    $sum = 0;\n    for ($i = $n; $i <= $m; $i++) {\n\
    \        $sum += $i;\n    }\n    $avg = round($sum / ($m - $n + 1));\n    return\
    \ \"0b\" . decbin($avg);\n}\n\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !==\
    \ \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560,\
    \ 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpu85kxoev.php:30\n\
    Stack trace:\n#0 /tmp/tmpu85kxoev.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpu85kxoev.php\
    \ on line 30\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// rounded_avg(1, 5) => \"\
    0b11\"\n// rounded_avg(7, 5) => -1\n// rounded_avg(10, 20) => \"0b1111\"\n// rounded_avg(20,\
    \ 33) => \"0b11010\"\nfunction rounded_avg($n, $m) {\n    if ($n > $m) return\
    \ -1;\n    $avg = round(($n + $m) / 2);\n    return \"0b\" . decbin($avg);\n}\n\
    \nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !== \"0b1111100100\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(560, 851) !==\
    \ \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(185,\
    \ 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpvsfaor3_.php:24\n\
    Stack trace:\n#0 /tmp/tmpvsfaor3_.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpvsfaor3_.php\
    \ on line 24\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// rounded_avg(1, 5) => \"\
    0b11\"\n// rounded_avg(7, 5) => -1\n// rounded_avg(10, 20) => \"0b1111\"\n// rounded_avg(20,\
    \ 33) => \"0b11010\"\nfunction rounded_avg($n, $m) {\n    if ($n > $m) {\n   \
    \     return -1;\n    }\n    $sum = 0;\n    for ($i = $n; $i <= $m; $i++) {\n\
    \        $sum += $i;\n    }\n    $avg = round($sum / ($m - $n + 1));\n    return\
    \ \"0b\" . decbin($avg);\n}\n\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !==\
    \ \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560,\
    \ 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpbk_f4lnd.php:30\n\
    Stack trace:\n#0 /tmp/tmpbk_f4lnd.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpbk_f4lnd.php\
    \ on line 30\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// rounded_avg(1, 5) => \"\
    0b11\"\n// rounded_avg(7, 5) => -1\n// rounded_avg(10, 20) => \"0b1111\"\n// rounded_avg(20,\
    \ 33) => \"0b11010\"\nfunction rounded_avg($n, $m) {\n    if ($n > $m) return\
    \ -1;\n    $sum = 0;\n    for ($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n\
    \    }\n    $avg = round($sum / ($m - $n + 1));\n    return \"0b\" . decbin($avg);\n\
    }\n\necho rounded_avg(1, 5) . \"\\n\";\necho rounded_avg(7, 5) . \"\\n\";\necho\
    \ rounded_avg(10, 20) . \"\\n\";\necho rounded_avg(20, 33) . \"\\n\";\nfunction\
    \ candidate(...$args) {\n    return rounded_avg(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(1, 5) !== \"0b11\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(7, 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(964, 977) !== \"0b1111001010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(996, 997) !== \"0b1111100100\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(560, 851) !== \"0b1011000010\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(185, 546) !==\
    \ \"0b101101110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(362,\
    \ 496) !== \"0b110101101\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(350, 902) !== \"0b1001110010\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(197, 233) !== \"0b11010111\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 5) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5, 1) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5, 5) !== \"0b101\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "0b11\n-1\n0b1111\n0b11011\n"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpgtkp4l4_.php:32\n\
    Stack trace:\n#0 /tmp/tmpgtkp4l4_.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpgtkp4l4_.php\
    \ on line 32\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// rounded_avg(1, 5) => \"\
    0b11\"\n// rounded_avg(7, 5) => -1\n// rounded_avg(10, 20) => \"0b1111\"\n// rounded_avg(20,\
    \ 33) => \"0b11010\"\nfunction rounded_avg($n, $m) {\n  if ($n > $m) {\n    return\
    \ -1;\n  }\n  $sum = 0;\n  for ($i = $n; $i <= $m; $i++) {\n    $sum += $i;\n\
    \  }\n  $avg = round($sum / ($m - $n + 1));\n  return \"0b\" . decbin($avg);\n\
    }\n\necho rounded_avg(1, 5) . \"\\n\";\necho rounded_avg(7, 5) . \"\\n\";\necho\
    \ rounded_avg(10, 20) . \"\\n\";\necho rounded_avg(20, 33) . \"\\n\";\nfunction\
    \ candidate(...$args) {\n    return rounded_avg(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(1, 5) !== \"0b11\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(7, 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(964, 977) !== \"0b1111001010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(996, 997) !== \"0b1111100100\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(560, 851) !== \"0b1011000010\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(185, 546) !==\
    \ \"0b101101110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(362,\
    \ 496) !== \"0b110101101\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(350, 902) !== \"0b1001110010\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(197, 233) !== \"0b11010111\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 5) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5, 1) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5, 5) !== \"0b101\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "0b11\n-1\n0b1111\n0b11011\n"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpbso4me4z.php:34\n\
    Stack trace:\n#0 /tmp/tmpbso4me4z.php(46): test()\n#1 {main}\n  thrown in /tmp/tmpbso4me4z.php\
    \ on line 34\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// rounded_avg(1, 5) => \"\
    0b11\"\n// rounded_avg(7, 5) => -1\n// rounded_avg(10, 20) => \"0b1111\"\n// rounded_avg(20,\
    \ 33) => \"0b11010\"\nfunction rounded_avg($n, $m) {\n    if ($n > $m) {\n   \
    \     return -1;\n    }\n    $sum = 0;\n    for ($i = $n; $i <= $m; $i++) {\n\
    \        $sum += $i;\n    }\n    $avg = round($sum / ($m - $n + 1));\n    return\
    \ \"0b\" . decbin($avg);\n}\n\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !==\
    \ \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560,\
    \ 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpzmj62wva.php:30\n\
    Stack trace:\n#0 /tmp/tmpzmj62wva.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpzmj62wva.php\
    \ on line 30\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// rounded_avg(1, 5) => \"\
    0b11\"\n// rounded_avg(7, 5) => -1\n// rounded_avg(10, 20) => \"0b1111\"\n// rounded_avg(20,\
    \ 33) => \"0b11010\"\nfunction rounded_avg($n, $m) {\n    if ($n > $m) {\n   \
    \     return -1;\n    }\n    $sum = 0;\n    for ($i = $n; $i <= $m; $i++) {\n\
    \        $sum += $i;\n    }\n    $avg = round($sum / ($m - $n + 1));\n    return\
    \ \"0b\" . decbin($avg);\n}\n\necho rounded_avg(1, 5) . \"\\n\";\necho rounded_avg(7,\
    \ 5) . \"\\n\";\necho rounded_avg(10, 20) . \"\\n\";\necho rounded_avg(20, 33)\
    \ . \"\\n\";\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !==\
    \ \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560,\
    \ 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "0b11\n-1\n0b1111\n0b11011\n"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmppc9rryb3.php:34\n\
    Stack trace:\n#0 /tmp/tmppc9rryb3.php(46): test()\n#1 {main}\n  thrown in /tmp/tmppc9rryb3.php\
    \ on line 34\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// rounded_avg(1, 5) => \"\
    0b11\"\n// rounded_avg(7, 5) => -1\n// rounded_avg(10, 20) => \"0b1111\"\n// rounded_avg(20,\
    \ 33) => \"0b11010\"\nfunction rounded_avg($n, $m) {\n    if ($n > $m) {\n   \
    \     return -1;\n    }\n    $sum = 0;\n    for ($i = $n; $i <= $m; $i++) {\n\
    \        $sum += $i;\n    }\n    $avg = round($sum / ($m - $n + 1));\n    return\
    \ decbin($avg);\n}\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !==\
    \ \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560,\
    \ 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpi6of3epg.php:27\n\
    Stack trace:\n#0 /tmp/tmpi6of3epg.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpi6of3epg.php\
    \ on line 27\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// rounded_avg(1, 5) => \"\
    0b11\"\n// rounded_avg(7, 5) => -1\n// rounded_avg(10, 20) => \"0b1111\"\n// rounded_avg(20,\
    \ 33) => \"0b11010\"\nfunction rounded_avg($n, $m) {\n  if ($n > $m) {\n    return\
    \ -1;\n  }\n  $sum = 0;\n  for ($i = $n; $i <= $m; $i++) {\n    $sum += $i;\n\
    \  }\n  $avg = round($sum / ($m - $n + 1));\n  return \"0b\" . decbin($avg);\n\
    }\n\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !== \"0b1111100100\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(560, 851) !==\
    \ \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(185,\
    \ 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmplhamtoy5.php:30\n\
    Stack trace:\n#0 /tmp/tmplhamtoy5.php(42): test()\n#1 {main}\n  thrown in /tmp/tmplhamtoy5.php\
    \ on line 30\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// rounded_avg(1, 5) => \"\
    0b11\"\n// rounded_avg(7, 5) => -1\n// rounded_avg(10, 20) => \"0b1111\"\n// rounded_avg(20,\
    \ 33) => \"0b11010\"\nfunction rounded_avg($n, $m) {\n  if ($n > $m) {\n    return\
    \ -1;\n  }\n  $sum = 0;\n  for ($i = $n; $i <= $m; $i++) {\n    $sum += $i;\n\
    \  }\n  $avg = round($sum / ($m - $n + 1));\n  return \"0b\" . decbin($avg);\n\
    }\n\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !== \"0b1111100100\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(560, 851) !==\
    \ \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(185,\
    \ 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpo7nm7ttn.php:30\n\
    Stack trace:\n#0 /tmp/tmpo7nm7ttn.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpo7nm7ttn.php\
    \ on line 30\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// rounded_avg(1, 5) => \"\
    0b11\"\n// rounded_avg(7, 5) => -1\n// rounded_avg(10, 20) => \"0b1111\"\n// rounded_avg(20,\
    \ 33) => \"0b11010\"\nfunction rounded_avg($n, $m) {\n    if ($n > $m) {\n   \
    \     return -1;\n    }\n    $sum = 0;\n    for ($i = $n; $i <= $m; $i++) {\n\
    \        $sum += $i;\n    }\n    $avg = round($sum / ($m - $n + 1));\n    return\
    \ \"0b\" . decbin($avg);\n}\n\necho rounded_avg(1, 5) . \"\\n\";\necho rounded_avg(7,\
    \ 5) . \"\\n\";\necho rounded_avg(10, 20) . \"\\n\";\necho rounded_avg(20, 33)\
    \ . \"\\n\";\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !==\
    \ \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560,\
    \ 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "0b11\n-1\n0b1111\n0b11011\n"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpzmnuja1s.php:34\n\
    Stack trace:\n#0 /tmp/tmpzmnuja1s.php(46): test()\n#1 {main}\n  thrown in /tmp/tmpzmnuja1s.php\
    \ on line 34\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// rounded_avg(1, 5) => \"\
    0b11\"\n// rounded_avg(7, 5) => -1\n// rounded_avg(10, 20) => \"0b1111\"\n// rounded_avg(20,\
    \ 33) => \"0b11010\"\nfunction rounded_avg($n, $m) {\n  if ($n > $m) {\n    return\
    \ -1;\n  }\n  $sum = 0;\n  for ($i = $n; $i <= $m; $i++) {\n    $sum += $i;\n\
    \  }\n  $avg = round($sum / ($m - $n + 1));\n  return \"0b\" . decbin($avg);\n\
    }\n\necho rounded_avg(1, 5) . \"\\n\";\necho rounded_avg(7, 5) . \"\\n\";\necho\
    \ rounded_avg(10, 20) . \"\\n\";\necho rounded_avg(20, 33) . \"\\n\";\nfunction\
    \ candidate(...$args) {\n    return rounded_avg(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(1, 5) !== \"0b11\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(7, 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(964, 977) !== \"0b1111001010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(996, 997) !== \"0b1111100100\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(560, 851) !== \"0b1011000010\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(185, 546) !==\
    \ \"0b101101110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(362,\
    \ 496) !== \"0b110101101\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(350, 902) !== \"0b1001110010\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(197, 233) !== \"0b11010111\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 5) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5, 1) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5, 5) !== \"0b101\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "0b11\n-1\n0b1111\n0b11011\n"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpbhzr6a0p.php:34\n\
    Stack trace:\n#0 /tmp/tmpbhzr6a0p.php(46): test()\n#1 {main}\n  thrown in /tmp/tmpbhzr6a0p.php\
    \ on line 34\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// rounded_avg(1, 5) => \"\
    0b11\"\n// rounded_avg(7, 5) => -1\n// rounded_avg(10, 20) => \"0b1111\"\n// rounded_avg(20,\
    \ 33) => \"0b11010\"\nfunction rounded_avg($n, $m) {\n    if ($n > $m) {\n   \
    \     return -1;\n    }\n    $sum = 0;\n    for ($i = $n; $i <= $m; $i++) {\n\
    \        $sum += $i;\n    }\n    $avg = round($sum / ($m - $n + 1));\n    return\
    \ \"0b\" . decbin($avg);\n}\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !==\
    \ \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560,\
    \ 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpdwe2972t.php:29\n\
    Stack trace:\n#0 /tmp/tmpdwe2972t.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpdwe2972t.php\
    \ on line 29\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// rounded_avg(1, 5) => \"\
    0b11\"\n// rounded_avg(7, 5) => -1\n// rounded_avg(10, 20) => \"0b1111\"\n// rounded_avg(20,\
    \ 33) => \"0b11010\"\nfunction rounded_avg($n, $m) {\n    if ($n > $m) {\n   \
    \     return -1;\n    }\n    $sum = 0;\n    for ($i = $n; $i <= $m; $i++) {\n\
    \        $sum += $i;\n    }\n    $avg = round($sum / ($m - $n + 1));\n    return\
    \ \"0b\" . decbin($avg);\n}\n\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !==\
    \ \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560,\
    \ 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpq3o7lle3.php:30\n\
    Stack trace:\n#0 /tmp/tmpq3o7lle3.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpq3o7lle3.php\
    \ on line 30\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// rounded_avg(1, 5) => \"\
    0b11\"\n// rounded_avg(7, 5) => -1\n// rounded_avg(10, 20) => \"0b1111\"\n// rounded_avg(20,\
    \ 33) => \"0b11010\"\nfunction rounded_avg($n, $m) {\n    if ($n > $m) {\n   \
    \     return -1;\n    }\n    $sum = 0;\n    for ($i = $n; $i <= $m; $i++) {\n\
    \        $sum += $i;\n    }\n    $avg = round($sum / ($m - $n + 1));\n    return\
    \ \"0b\" . decbin($avg);\n}\n\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !==\
    \ \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560,\
    \ 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpdc1v13gl.php:30\n\
    Stack trace:\n#0 /tmp/tmpdc1v13gl.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpdc1v13gl.php\
    \ on line 30\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// rounded_avg(1, 5) => \"\
    0b11\"\n// rounded_avg(7, 5) => -1\n// rounded_avg(10, 20) => \"0b1111\"\n// rounded_avg(20,\
    \ 33) => \"0b11010\"\nfunction rounded_avg($n, $m) {\n    if ($n > $m) {\n   \
    \     return -1;\n    }\n    $sum = 0;\n    for ($i = $n; $i <= $m; $i++) {\n\
    \        $sum += $i;\n    }\n    $avg = round($sum / ($m - $n + 1));\n    return\
    \ \"0b\" . decbin($avg);\n}\n\necho rounded_avg(1, 5) . \"\\n\";\necho rounded_avg(7,\
    \ 5) . \"\\n\";\necho rounded_avg(10, 20) . \"\\n\";\necho rounded_avg(20, 33)\
    \ . \"\\n\";\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !==\
    \ \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560,\
    \ 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "0b11\n-1\n0b1111\n0b11011\n"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp44202nnm.php:34\n\
    Stack trace:\n#0 /tmp/tmp44202nnm.php(46): test()\n#1 {main}\n  thrown in /tmp/tmp44202nnm.php\
    \ on line 34\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// rounded_avg(1, 5) => \"\
    0b11\"\n// rounded_avg(7, 5) => -1\n// rounded_avg(10, 20) => \"0b1111\"\n// rounded_avg(20,\
    \ 33) => \"0b11010\"\nfunction rounded_avg($n, $m) {\n    if ($n > $m) {\n   \
    \     return -1;\n    }\n    $sum = 0;\n    for ($i = $n; $i <= $m; $i++) {\n\
    \        $sum += $i;\n    }\n    $avg = round($sum / ($m - $n + 1));\n    return\
    \ \"0b\" . decbin($avg);\n}\necho rounded_avg(1, 5) . \"\\n\";\necho rounded_avg(7,\
    \ 5) . \"\\n\";\necho rounded_avg(10, 20) . \"\\n\";\necho rounded_avg(20, 33)\
    \ . \"\\n\";\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !==\
    \ \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560,\
    \ 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "0b11\n-1\n0b1111\n0b11011\n"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp30k_nqfx.php:33\n\
    Stack trace:\n#0 /tmp/tmp30k_nqfx.php(45): test()\n#1 {main}\n  thrown in /tmp/tmp30k_nqfx.php\
    \ on line 33\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// rounded_avg(1, 5) => \"\
    0b11\"\n// rounded_avg(7, 5) => -1\n// rounded_avg(10, 20) => \"0b1111\"\n// rounded_avg(20,\
    \ 33) => \"0b11010\"\nfunction rounded_avg($n, $m) {\n    if ($n > $m) {\n   \
    \     return -1;\n    }\n    $sum = 0;\n    for ($i = $n; $i <= $m; $i++) {\n\
    \        $sum += $i;\n    }\n    $avg = round($sum / ($m - $n + 1));\n    return\
    \ \"0b\" . decbin($avg);\n}\n\necho rounded_avg(1, 5) . \"\\n\";\necho rounded_avg(7,\
    \ 5) . \"\\n\";\necho rounded_avg(10, 20) . \"\\n\";\necho rounded_avg(20, 33)\
    \ . \"\\n\";\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !==\
    \ \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560,\
    \ 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "0b11\n-1\n0b1111\n0b11011\n"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmph903dn6t.php:34\n\
    Stack trace:\n#0 /tmp/tmph903dn6t.php(46): test()\n#1 {main}\n  thrown in /tmp/tmph903dn6t.php\
    \ on line 34\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// rounded_avg(1, 5) => \"\
    0b11\"\n// rounded_avg(7, 5) => -1\n// rounded_avg(10, 20) => \"0b1111\"\n// rounded_avg(20,\
    \ 33) => \"0b11010\"\nfunction rounded_avg($n, $m) {\n    if ($n > $m) {\n   \
    \     return -1;\n    }\n    $sum = 0;\n    for ($i = $n; $i <= $m; $i++) {\n\
    \        $sum += $i;\n    }\n    $avg = round($sum / ($m - $n + 1));\n    return\
    \ \"0b\" . decbin($avg);\n}\necho rounded_avg(1, 5) . \"\\n\";\necho rounded_avg(7,\
    \ 5) . \"\\n\";\necho rounded_avg(10, 20) . \"\\n\";\necho rounded_avg(20, 33)\
    \ . \"\\n\";\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !==\
    \ \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560,\
    \ 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "0b11\n-1\n0b1111\n0b11011\n"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmplvfptrab.php:33\n\
    Stack trace:\n#0 /tmp/tmplvfptrab.php(45): test()\n#1 {main}\n  thrown in /tmp/tmplvfptrab.php\
    \ on line 33\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// rounded_avg(1, 5) => \"\
    0b11\"\n// rounded_avg(7, 5) => -1\n// rounded_avg(10, 20) => \"0b1111\"\n// rounded_avg(20,\
    \ 33) => \"0b11010\"\nfunction rounded_avg($n, $m) {\n    if ($n > $m) {\n   \
    \     return -1;\n    }\n    $sum = 0;\n    for ($i = $n; $i <= $m; $i++) {\n\
    \        $sum += $i;\n    }\n    $avg = round($sum / ($m - $n + 1));\n    return\
    \ \"0b\" . decbin($avg);\n}\n\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !==\
    \ \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560,\
    \ 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpfifa8egk.php:30\n\
    Stack trace:\n#0 /tmp/tmpfifa8egk.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpfifa8egk.php\
    \ on line 30\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// rounded_avg(1, 5) => \"\
    0b11\"\n// rounded_avg(7, 5) => -1\n// rounded_avg(10, 20) => \"0b1111\"\n// rounded_avg(20,\
    \ 33) => \"0b11010\"\nfunction rounded_avg($n, $m) {\n  if ($n > $m) return -1;\n\
    \  $sum = 0;\n  for ($i = $n; $i <= $m; $i++) {\n    $sum += $i;\n  }\n  $avg\
    \ = round($sum / ($m - $n + 1));\n  return \"0b\" . decbin($avg);\n}\n\necho rounded_avg(1,\
    \ 5) . \"\\n\";\necho rounded_avg(7, 5) . \"\\n\";\necho rounded_avg(10, 20) .\
    \ \"\\n\";\necho rounded_avg(20, 33) . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1,\
    \ 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964,\
    \ 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !==\
    \ \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197,\
    \ 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "0b11\n-1\n0b1111\n0b11011\n"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpv262n3k8.php:32\n\
    Stack trace:\n#0 /tmp/tmpv262n3k8.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpv262n3k8.php\
    \ on line 32\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// rounded_avg(1, 5) => \"\
    0b11\"\n// rounded_avg(7, 5) => -1\n// rounded_avg(10, 20) => \"0b1111\"\n// rounded_avg(20,\
    \ 33) => \"0b11010\"\nfunction rounded_avg($n, $m) {\n  if ($n > $m) {\n    return\
    \ -1;\n  }\n  $sum = 0;\n  for ($i = $n; $i <= $m; $i++) {\n    $sum += $i;\n\
    \  }\n  $avg = round($sum / ($m - $n + 1));\n  return \"0b\" . decbin($avg);\n\
    }\n\necho rounded_avg(1, 5) . \"\\n\";\necho rounded_avg(7, 5) . \"\\n\";\necho\
    \ rounded_avg(10, 20) . \"\\n\";\necho rounded_avg(20, 33) . \"\\n\";\nfunction\
    \ candidate(...$args) {\n    return rounded_avg(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(1, 5) !== \"0b11\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(7, 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(964, 977) !== \"0b1111001010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(996, 997) !== \"0b1111100100\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(560, 851) !== \"0b1011000010\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(185, 546) !==\
    \ \"0b101101110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(362,\
    \ 496) !== \"0b110101101\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(350, 902) !== \"0b1001110010\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(197, 233) !== \"0b11010111\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 5) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5, 1) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5, 5) !== \"0b101\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "0b11\n-1\n0b1111\n0b11011\n"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpb81tre6t.php:34\n\
    Stack trace:\n#0 /tmp/tmpb81tre6t.php(46): test()\n#1 {main}\n  thrown in /tmp/tmpb81tre6t.php\
    \ on line 34\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// rounded_avg(1, 5) => \"\
    0b11\"\n// rounded_avg(7, 5) => -1\n// rounded_avg(10, 20) => \"0b1111\"\n// rounded_avg(20,\
    \ 33) => \"0b11010\"\nfunction rounded_avg($n, $m) {\n  if ($n > $m) {\n    return\
    \ -1;\n  }\n  $sum = 0;\n  for ($i = $n; $i <= $m; $i++) {\n    $sum += $i;\n\
    \  }\n  $avg = round($sum / ($m - $n + 1));\n  return \"0b\" . decbin($avg);\n\
    }\necho rounded_avg(1, 5) . \"\\n\";\necho rounded_avg(7, 5) . \"\\n\";\necho\
    \ rounded_avg(10, 20) . \"\\n\";\necho rounded_avg(20, 33) . \"\\n\";\nfunction\
    \ candidate(...$args) {\n    return rounded_avg(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(1, 5) !== \"0b11\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(7, 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(964, 977) !== \"0b1111001010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(996, 997) !== \"0b1111100100\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(560, 851) !== \"0b1011000010\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(185, 546) !==\
    \ \"0b101101110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(362,\
    \ 496) !== \"0b110101101\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(350, 902) !== \"0b1001110010\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(197, 233) !== \"0b11010111\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 5) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5, 1) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5, 5) !== \"0b101\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "0b11\n-1\n0b1111\n0b11011\n"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp5u600v9t.php:33\n\
    Stack trace:\n#0 /tmp/tmp5u600v9t.php(45): test()\n#1 {main}\n  thrown in /tmp/tmp5u600v9t.php\
    \ on line 33\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// rounded_avg(1, 5) => \"\
    0b11\"\n// rounded_avg(7, 5) => -1\n// rounded_avg(10, 20) => \"0b1111\"\n// rounded_avg(20,\
    \ 33) => \"0b11010\"\nfunction rounded_avg($n, $m) {\n    if ($n > $m) return\
    \ -1;\n    $sum = 0;\n    for ($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n\
    \    }\n    $avg = round($sum / ($m - $n + 1));\n    return \"0b\" . decbin($avg);\n\
    }\n\necho rounded_avg(1, 5) . \"\\n\";\necho rounded_avg(7, 5) . \"\\n\";\necho\
    \ rounded_avg(10, 20) . \"\\n\";\necho rounded_avg(20, 33) . \"\\n\";\nfunction\
    \ candidate(...$args) {\n    return rounded_avg(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(1, 5) !== \"0b11\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(7, 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(964, 977) !== \"0b1111001010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(996, 997) !== \"0b1111100100\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(560, 851) !== \"0b1011000010\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(185, 546) !==\
    \ \"0b101101110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(362,\
    \ 496) !== \"0b110101101\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(350, 902) !== \"0b1001110010\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(197, 233) !== \"0b11010111\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 5) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5, 1) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5, 5) !== \"0b101\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "0b11\n-1\n0b1111\n0b11011\n"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpifxbftf0.php:32\n\
    Stack trace:\n#0 /tmp/tmpifxbftf0.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpifxbftf0.php\
    \ on line 32\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// rounded_avg(1, 5) => \"\
    0b11\"\n// rounded_avg(7, 5) => -1\n// rounded_avg(10, 20) => \"0b1111\"\n// rounded_avg(20,\
    \ 33) => \"0b11010\"\nfunction rounded_avg($n, $m) {\n    if ($n > $m) {\n   \
    \     return -1;\n    }\n    $sum = 0;\n    for ($i = $n; $i <= $m; $i++) {\n\
    \        $sum += $i;\n    }\n    $avg = round($sum / ($m - $n + 1));\n    return\
    \ \"0b\" . decbin($avg);\n}\necho rounded_avg(1, 5) . \"\\n\";\necho rounded_avg(7,\
    \ 5) . \"\\n\";\necho rounded_avg(10, 20) . \"\\n\";\necho rounded_avg(20, 33)\
    \ . \"\\n\";\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !==\
    \ \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560,\
    \ 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "0b11\n-1\n0b1111\n0b11011\n"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpz336ee4w.php:33\n\
    Stack trace:\n#0 /tmp/tmpz336ee4w.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpz336ee4w.php\
    \ on line 33\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// rounded_avg(1, 5) => \"\
    0b11\"\n// rounded_avg(7, 5) => -1\n// rounded_avg(10, 20) => \"0b1111\"\n// rounded_avg(20,\
    \ 33) => \"0b11010\"\nfunction rounded_avg($n, $m) {\n    if ($n > $m) {\n   \
    \     return -1;\n    }\n    $sum = 0;\n    for ($i = $n; $i <= $m; $i++) {\n\
    \        $sum += $i;\n    }\n    $avg = round($sum / ($m - $n + 1));\n    return\
    \ \"0b\" . decbin($avg);\n}\n\necho rounded_avg(1, 5) . \"\\n\";\necho rounded_avg(7,\
    \ 5) . \"\\n\";\necho rounded_avg(10, 20) . \"\\n\";\necho rounded_avg(20, 33)\
    \ . \"\\n\";\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !==\
    \ \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560,\
    \ 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "0b11\n-1\n0b1111\n0b11011\n"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpysxz89zu.php:34\n\
    Stack trace:\n#0 /tmp/tmpysxz89zu.php(46): test()\n#1 {main}\n  thrown in /tmp/tmpysxz89zu.php\
    \ on line 34\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// rounded_avg(1, 5) => \"\
    0b11\"\n// rounded_avg(7, 5) => -1\n// rounded_avg(10, 20) => \"0b1111\"\n// rounded_avg(20,\
    \ 33) => \"0b11010\"\nfunction rounded_avg($n, $m) {\n  if ($n > $m) {\n    return\
    \ -1;\n  }\n  $sum = 0;\n  for ($i = $n; $i <= $m; $i++) {\n    $sum += $i;\n\
    \  }\n  $avg = round($sum / ($m - $n + 1));\n  return \"0b\" . decbin($avg);\n\
    }\n\necho rounded_avg(1, 5) . \"\\n\";\necho rounded_avg(7, 5) . \"\\n\";\necho\
    \ rounded_avg(10, 20) . \"\\n\";\necho rounded_avg(20, 33) . \"\\n\";\nfunction\
    \ candidate(...$args) {\n    return rounded_avg(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(1, 5) !== \"0b11\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(7, 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(964, 977) !== \"0b1111001010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(996, 997) !== \"0b1111100100\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(560, 851) !== \"0b1011000010\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(185, 546) !==\
    \ \"0b101101110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(362,\
    \ 496) !== \"0b110101101\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(350, 902) !== \"0b1001110010\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(197, 233) !== \"0b11010111\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 5) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5, 1) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5, 5) !== \"0b101\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "0b11\n-1\n0b1111\n0b11011\n"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpdzfqne_h.php:34\n\
    Stack trace:\n#0 /tmp/tmpdzfqne_h.php(46): test()\n#1 {main}\n  thrown in /tmp/tmpdzfqne_h.php\
    \ on line 34\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// rounded_avg(1, 5) => \"\
    0b11\"\n// rounded_avg(7, 5) => -1\n// rounded_avg(10, 20) => \"0b1111\"\n// rounded_avg(20,\
    \ 33) => \"0b11010\"\nfunction rounded_avg($n, $m) {\n    if ($n > $m) {\n   \
    \     return -1;\n    }\n    $sum = 0;\n    for ($i = $n; $i <= $m; $i++) {\n\
    \        $sum += $i;\n    }\n    $avg = round($sum / ($m - $n + 1));\n    return\
    \ \"0b\" . decbin($avg);\n}\n\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !==\
    \ \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560,\
    \ 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpml3zk5wy.php:30\n\
    Stack trace:\n#0 /tmp/tmpml3zk5wy.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpml3zk5wy.php\
    \ on line 30\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// rounded_avg(1, 5) => \"\
    0b11\"\n// rounded_avg(7, 5) => -1\n// rounded_avg(10, 20) => \"0b1111\"\n// rounded_avg(20,\
    \ 33) => \"0b11010\"\nfunction rounded_avg($n, $m) {\n    if ($n > $m) {\n   \
    \     return -1;\n    }\n    $avg = round(($n + $m) / 2);\n    return \"0b\" .\
    \ decbin($avg);\n}\n\necho rounded_avg(1, 5) . PHP_EOL;\necho rounded_avg(7, 5)\
    \ . PHP_EOL;\necho rounded_avg(10, 20) . PHP_EOL;\necho rounded_avg(20, 33) .\
    \ PHP_EOL;\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !==\
    \ \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560,\
    \ 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "0b11\n-1\n0b1111\n0b11011\n"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpypy875ol.php:30\n\
    Stack trace:\n#0 /tmp/tmpypy875ol.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpypy875ol.php\
    \ on line 30\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// rounded_avg(1, 5) => \"\
    0b11\"\n// rounded_avg(7, 5) => -1\n// rounded_avg(10, 20) => \"0b1111\"\n// rounded_avg(20,\
    \ 33) => \"0b11010\"\nfunction rounded_avg($n, $m) {\n  if ($n > $m) {\n    return\
    \ -1;\n  }\n  $sum = 0;\n  for ($i = $n; $i <= $m; $i++) {\n    $sum += $i;\n\
    \  }\n  $avg = round($sum / ($m - $n + 1));\n  return \"0b\" . decbin($avg);\n\
    }\n\necho rounded_avg(1, 5) . \"\\n\";\necho rounded_avg(7, 5) . \"\\n\";\necho\
    \ rounded_avg(10, 20) . \"\\n\";\necho rounded_avg(20, 33) . \"\\n\";\nfunction\
    \ candidate(...$args) {\n    return rounded_avg(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(1, 5) !== \"0b11\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(7, 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(964, 977) !== \"0b1111001010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(996, 997) !== \"0b1111100100\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(560, 851) !== \"0b1011000010\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(185, 546) !==\
    \ \"0b101101110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(362,\
    \ 496) !== \"0b110101101\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(350, 902) !== \"0b1001110010\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(197, 233) !== \"0b11010111\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 5) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5, 1) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5, 5) !== \"0b101\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "0b11\n-1\n0b1111\n0b11011\n"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpw1hn3h7m.php:34\n\
    Stack trace:\n#0 /tmp/tmpw1hn3h7m.php(46): test()\n#1 {main}\n  thrown in /tmp/tmpw1hn3h7m.php\
    \ on line 34\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// rounded_avg(1, 5) => \"\
    0b11\"\n// rounded_avg(7, 5) => -1\n// rounded_avg(10, 20) => \"0b1111\"\n// rounded_avg(20,\
    \ 33) => \"0b11010\"\nfunction rounded_avg($n, $m) {\n  if ($n > $m) {\n    return\
    \ -1;\n  }\n  $sum = 0;\n  for ($i = $n; $i <= $m; $i++) {\n    $sum += $i;\n\
    \  }\n  $avg = round($sum / ($m - $n + 1));\n  return \"0b\" . decbin($avg);\n\
    }\n\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !== \"0b1111100100\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(560, 851) !==\
    \ \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(185,\
    \ 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpozvhjyat.php:30\n\
    Stack trace:\n#0 /tmp/tmpozvhjyat.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpozvhjyat.php\
    \ on line 30\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// rounded_avg(1, 5) => \"\
    0b11\"\n// rounded_avg(7, 5) => -1\n// rounded_avg(10, 20) => \"0b1111\"\n// rounded_avg(20,\
    \ 33) => \"0b11010\"\nfunction rounded_avg($n, $m) {\n    if ($n > $m) {\n   \
    \     return -1;\n    }\n    $sum = 0;\n    for ($i = $n; $i <= $m; $i++) {\n\
    \        $sum += $i;\n    }\n    $avg = round($sum / ($m - $n + 1));\n    return\
    \ \"0b\" . decbin($avg);\n}\n\necho rounded_avg(1, 5) . PHP_EOL;\necho rounded_avg(7,\
    \ 5) . PHP_EOL;\necho rounded_avg(10, 20) . PHP_EOL;\necho rounded_avg(20, 33)\
    \ . PHP_EOL;\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !==\
    \ \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560,\
    \ 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "0b11\n-1\n0b1111\n0b11011\n"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp07uki923.php:34\n\
    Stack trace:\n#0 /tmp/tmp07uki923.php(46): test()\n#1 {main}\n  thrown in /tmp/tmp07uki923.php\
    \ on line 34\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// rounded_avg(1, 5) => \"\
    0b11\"\n// rounded_avg(7, 5) => -1\n// rounded_avg(10, 20) => \"0b1111\"\n// rounded_avg(20,\
    \ 33) => \"0b11010\"\nfunction rounded_avg($n, $m) {\n    if ($n > $m) {\n   \
    \     return -1;\n    }\n    $sum = 0;\n    for ($i = $n; $i <= $m; $i++) {\n\
    \        $sum += $i;\n    }\n    $avg = round($sum / ($m - $n + 1));\n    return\
    \ \"0b\" . decbin($avg);\n}\n\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !==\
    \ \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560,\
    \ 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp456alske.php:30\n\
    Stack trace:\n#0 /tmp/tmp456alske.php(42): test()\n#1 {main}\n  thrown in /tmp/tmp456alske.php\
    \ on line 30\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// rounded_avg(1, 5) => \"\
    0b11\"\n// rounded_avg(7, 5) => -1\n// rounded_avg(10, 20) => \"0b1111\"\n// rounded_avg(20,\
    \ 33) => \"0b11010\"\nfunction rounded_avg($n, $m) {\n    if ($n > $m) {\n   \
    \     return -1;\n    }\n    $sum = 0;\n    for ($i = $n; $i <= $m; $i++) {\n\
    \        $sum += $i;\n    }\n    $avg = round($sum / ($m - $n + 1));\n    return\
    \ \"0b\" . decbin($avg);\n}\n\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !==\
    \ \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560,\
    \ 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpjxvfp234.php:30\n\
    Stack trace:\n#0 /tmp/tmpjxvfp234.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpjxvfp234.php\
    \ on line 30\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// rounded_avg(1, 5) => \"\
    0b11\"\n// rounded_avg(7, 5) => -1\n// rounded_avg(10, 20) => \"0b1111\"\n// rounded_avg(20,\
    \ 33) => \"0b11010\"\nfunction rounded_avg($n, $m) {\n  if ($n > $m) {\n    return\
    \ -1;\n  }\n  $sum = 0;\n  for ($i = $n; $i <= $m; $i++) {\n    $sum += $i;\n\
    \  }\n  $avg = round($sum / ($m - $n + 1));\n  return \"0b\" . decbin($avg);\n\
    }\n\necho rounded_avg(1, 5) . \"\\n\";\necho rounded_avg(7, 5) . \"\\n\";\necho\
    \ rounded_avg(10, 20) . \"\\n\";\necho rounded_avg(20, 33) . \"\\n\";\nfunction\
    \ candidate(...$args) {\n    return rounded_avg(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(1, 5) !== \"0b11\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(7, 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(964, 977) !== \"0b1111001010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(996, 997) !== \"0b1111100100\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(560, 851) !== \"0b1011000010\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(185, 546) !==\
    \ \"0b101101110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(362,\
    \ 496) !== \"0b110101101\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(350, 902) !== \"0b1001110010\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(197, 233) !== \"0b11010111\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 5) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5, 1) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5, 5) !== \"0b101\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "0b11\n-1\n0b1111\n0b11011\n"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp73r_h14o.php:34\n\
    Stack trace:\n#0 /tmp/tmp73r_h14o.php(46): test()\n#1 {main}\n  thrown in /tmp/tmp73r_h14o.php\
    \ on line 34\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// rounded_avg(1, 5) => \"\
    0b11\"\n// rounded_avg(7, 5) => -1\n// rounded_avg(10, 20) => \"0b1111\"\n// rounded_avg(20,\
    \ 33) => \"0b11010\"\nfunction rounded_avg($n, $m) {\n    if ($n > $m) {\n   \
    \     return -1;\n    }\n    $sum = 0;\n    for ($i = $n; $i <= $m; $i++) {\n\
    \        $sum += $i;\n    }\n    $avg = round($sum / ($m - $n + 1));\n    return\
    \ \"0b\" . decbin($avg);\n}\n\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !==\
    \ \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560,\
    \ 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpbpzcslgc.php:30\n\
    Stack trace:\n#0 /tmp/tmpbpzcslgc.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpbpzcslgc.php\
    \ on line 30\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// rounded_avg(1, 5) => \"\
    0b11\"\n// rounded_avg(7, 5) => -1\n// rounded_avg(10, 20) => \"0b1111\"\n// rounded_avg(20,\
    \ 33) => \"0b11010\"\nfunction rounded_avg($n, $m) {\n    if ($n > $m) {\n   \
    \     return -1;\n    }\n    $sum = 0;\n    for ($i = $n; $i <= $m; $i++) {\n\
    \        $sum += $i;\n    }\n    $avg = round($sum / ($m - $n + 1));\n    return\
    \ \"0b\" . decbin($avg);\n}\n\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !==\
    \ \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560,\
    \ 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpmybu40ug.php:30\n\
    Stack trace:\n#0 /tmp/tmpmybu40ug.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpmybu40ug.php\
    \ on line 30\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// rounded_avg(1, 5) => \"\
    0b11\"\n// rounded_avg(7, 5) => -1\n// rounded_avg(10, 20) => \"0b1111\"\n// rounded_avg(20,\
    \ 33) => \"0b11010\"\nfunction rounded_avg($n, $m) {\n  if ($n > $m) {\n    return\
    \ -1;\n  }\n  $sum = 0;\n  for ($i = $n; $i <= $m; $i++) {\n    $sum += $i;\n\
    \  }\n  $avg = round($sum / ($m - $n + 1));\n  return \"0b\" . decbin($avg);\n\
    }\n\necho rounded_avg(1, 5) . \"\\n\";\necho rounded_avg(7, 5) . \"\\n\";\necho\
    \ rounded_avg(10, 20) . \"\\n\";\necho rounded_avg(20, 33) . \"\\n\";\nfunction\
    \ candidate(...$args) {\n    return rounded_avg(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(1, 5) !== \"0b11\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(7, 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(964, 977) !== \"0b1111001010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(996, 997) !== \"0b1111100100\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(560, 851) !== \"0b1011000010\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(185, 546) !==\
    \ \"0b101101110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(362,\
    \ 496) !== \"0b110101101\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(350, 902) !== \"0b1001110010\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(197, 233) !== \"0b11010111\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 5) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5, 1) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5, 5) !== \"0b101\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "0b11\n-1\n0b1111\n0b11011\n"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpfydxg4bi.php:34\n\
    Stack trace:\n#0 /tmp/tmpfydxg4bi.php(46): test()\n#1 {main}\n  thrown in /tmp/tmpfydxg4bi.php\
    \ on line 34\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// rounded_avg(1, 5) => \"\
    0b11\"\n// rounded_avg(7, 5) => -1\n// rounded_avg(10, 20) => \"0b1111\"\n// rounded_avg(20,\
    \ 33) => \"0b11010\"\nfunction rounded_avg($n, $m) {\n    if ($n > $m) {\n   \
    \     return -1;\n    }\n    $sum = 0;\n    for ($i = $n; $i <= $m; $i++) {\n\
    \        $sum += $i;\n    }\n    $avg = round($sum / ($m - $n + 1));\n    return\
    \ \"0b\" . decbin($avg);\n}\necho rounded_avg(1, 5) . \"\\n\";\necho rounded_avg(7,\
    \ 5) . \"\\n\";\necho rounded_avg(10, 20) . \"\\n\";\necho rounded_avg(20, 33)\
    \ . \"\\n\";\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !==\
    \ \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560,\
    \ 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "0b11\n-1\n0b1111\n0b11011\n"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmphc7i82av.php:33\n\
    Stack trace:\n#0 /tmp/tmphc7i82av.php(45): test()\n#1 {main}\n  thrown in /tmp/tmphc7i82av.php\
    \ on line 33\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// rounded_avg(1, 5) => \"\
    0b11\"\n// rounded_avg(7, 5) => -1\n// rounded_avg(10, 20) => \"0b1111\"\n// rounded_avg(20,\
    \ 33) => \"0b11010\"\nfunction rounded_avg($n, $m) {\n    if ($n > $m) {\n   \
    \     return -1;\n    }\n    $sum = 0;\n    for ($i = $n; $i <= $m; $i++) {\n\
    \        $sum += $i;\n    }\n    $avg = round($sum / ($m - $n + 1));\n    return\
    \ \"0b\" . decbin($avg);\n}\n\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !==\
    \ \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560,\
    \ 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpgjqfptes.php:30\n\
    Stack trace:\n#0 /tmp/tmpgjqfptes.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpgjqfptes.php\
    \ on line 30\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// rounded_avg(1, 5) => \"\
    0b11\"\n// rounded_avg(7, 5) => -1\n// rounded_avg(10, 20) => \"0b1111\"\n// rounded_avg(20,\
    \ 33) => \"0b11010\"\nfunction rounded_avg($n, $m) {\n  if ($n > $m) return -1;\n\
    \  $sum = 0;\n  for ($i = $n; $i <= $m; $i++) {\n    $sum += $i;\n  }\n  $avg\
    \ = round($sum / ($m - $n + 1));\n  return \"0b\" . decbin($avg);\n}\n\nfunction\
    \ candidate(...$args) {\n    return rounded_avg(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(1, 5) !== \"0b11\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(7, 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(964, 977) !== \"0b1111001010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(996, 997) !== \"0b1111100100\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(560, 851) !== \"0b1011000010\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(185, 546) !==\
    \ \"0b101101110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(362,\
    \ 496) !== \"0b110101101\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(350, 902) !== \"0b1001110010\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(197, 233) !== \"0b11010111\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 5) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5, 1) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5, 5) !== \"0b101\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpsipua1bi.php:28\n\
    Stack trace:\n#0 /tmp/tmpsipua1bi.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpsipua1bi.php\
    \ on line 28\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// rounded_avg(1, 5) => \"\
    0b11\"\n// rounded_avg(7, 5) => -1\n// rounded_avg(10, 20) => \"0b1111\"\n// rounded_avg(20,\
    \ 33) => \"0b11010\"\nfunction rounded_avg($n, $m) {\n    if ($n > $m) {\n   \
    \     return -1;\n    }\n    $avg = round(($n + $m) / 2);\n    return decbin($avg);\n\
    }\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !== \"0b1111100100\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(560, 851) !==\
    \ \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(185,\
    \ 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmplupss8ee.php:23\n\
    Stack trace:\n#0 /tmp/tmplupss8ee.php(37): test()\n#1 {main}\n  thrown in /tmp/tmplupss8ee.php\
    \ on line 23\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// rounded_avg(1, 5) => \"\
    0b11\"\n// rounded_avg(7, 5) => -1\n// rounded_avg(10, 20) => \"0b1111\"\n// rounded_avg(20,\
    \ 33) => \"0b11010\"\nfunction rounded_avg($n, $m) {\n  if ($n > $m) {\n    return\
    \ -1;\n  }\n  $sum = 0;\n  for ($i = $n; $i <= $m; $i++) {\n    $sum += $i;\n\
    \  }\n  $avg = round($sum / ($m - $n + 1));\n  return \"0b\" . decbin($avg);\n\
    }\n\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !== \"0b1111100100\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(560, 851) !==\
    \ \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(185,\
    \ 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpziazmtpy.php:30\n\
    Stack trace:\n#0 /tmp/tmpziazmtpy.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpziazmtpy.php\
    \ on line 30\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// rounded_avg(1, 5) => \"\
    0b11\"\n// rounded_avg(7, 5) => -1\n// rounded_avg(10, 20) => \"0b1111\"\n// rounded_avg(20,\
    \ 33) => \"0b11010\"\nfunction rounded_avg($n, $m) {\n    if ($n > $m) {\n   \
    \     return -1;\n    }\n    $sum = 0;\n    for ($i = $n; $i <= $m; $i++) {\n\
    \        $sum += $i;\n    }\n    $avg = round($sum / ($m - $n + 1));\n    return\
    \ \"0b\" . decbin($avg);\n}\necho rounded_avg(1, 5) . \"\\n\";\necho rounded_avg(7,\
    \ 5) . \"\\n\";\necho rounded_avg(10, 20) . \"\\n\";\necho rounded_avg(20, 33)\
    \ . \"\\n\";\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !==\
    \ \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560,\
    \ 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "0b11\n-1\n0b1111\n0b11011\n"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpfzusmjod.php:33\n\
    Stack trace:\n#0 /tmp/tmpfzusmjod.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpfzusmjod.php\
    \ on line 33\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// rounded_avg(1, 5) => \"\
    0b11\"\n// rounded_avg(7, 5) => -1\n// rounded_avg(10, 20) => \"0b1111\"\n// rounded_avg(20,\
    \ 33) => \"0b11010\"\nfunction rounded_avg($n, $m) {\n    if ($n > $m) return\
    \ -1;\n    $sum = 0;\n    for ($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n\
    \    }\n    $avg = round($sum / ($m - $n + 1));\n    return \"0b\" . decbin($avg);\n\
    }\n\necho rounded_avg(1, 5) . \"\\n\";\necho rounded_avg(7, 5) . \"\\n\";\necho\
    \ rounded_avg(10, 20) . \"\\n\";\necho rounded_avg(20, 33) . \"\\n\";\nfunction\
    \ candidate(...$args) {\n    return rounded_avg(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(1, 5) !== \"0b11\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(7, 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(964, 977) !== \"0b1111001010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(996, 997) !== \"0b1111100100\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(560, 851) !== \"0b1011000010\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(185, 546) !==\
    \ \"0b101101110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(362,\
    \ 496) !== \"0b110101101\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(350, 902) !== \"0b1001110010\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(197, 233) !== \"0b11010111\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 5) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5, 1) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5, 5) !== \"0b101\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "0b11\n-1\n0b1111\n0b11011\n"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpf93eyl10.php:32\n\
    Stack trace:\n#0 /tmp/tmpf93eyl10.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpf93eyl10.php\
    \ on line 32\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// rounded_avg(1, 5) => \"\
    0b11\"\n// rounded_avg(7, 5) => -1\n// rounded_avg(10, 20) => \"0b1111\"\n// rounded_avg(20,\
    \ 33) => \"0b11010\"\nfunction rounded_avg($n, $m) {\n    if ($n > $m) {\n   \
    \     return -1;\n    }\n    $sum = 0;\n    for ($i = $n; $i <= $m; $i++) {\n\
    \        $sum += $i;\n    }\n    $avg = round($sum / ($m - $n + 1));\n    return\
    \ \"0b\" . decbin($avg);\n}\necho rounded_avg(1, 5) . \"\\n\";\necho rounded_avg(7,\
    \ 5) . \"\\n\";\necho rounded_avg(10, 20) . \"\\n\";\necho rounded_avg(20, 33)\
    \ . \"\\n\";\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !==\
    \ \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560,\
    \ 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "0b11\n-1\n0b1111\n0b11011\n"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp_p52w0l_.php:33\n\
    Stack trace:\n#0 /tmp/tmp_p52w0l_.php(45): test()\n#1 {main}\n  thrown in /tmp/tmp_p52w0l_.php\
    \ on line 33\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// rounded_avg(1, 5) => \"\
    0b11\"\n// rounded_avg(7, 5) => -1\n// rounded_avg(10, 20) => \"0b1111\"\n// rounded_avg(20,\
    \ 33) => \"0b11010\"\nfunction rounded_avg($n, $m) {\n  if ($n > $m) {\n    return\
    \ -1;\n  }\n  $sum = 0;\n  for ($i = $n; $i <= $m; $i++) {\n    $sum += $i;\n\
    \  }\n  $avg = round($sum / ($m - $n + 1));\n  return \"0b\" . decbin($avg);\n\
    }\n\necho rounded_avg(1, 5) . \"\\n\";\necho rounded_avg(7, 5) . \"\\n\";\necho\
    \ rounded_avg(10, 20) . \"\\n\";\necho rounded_avg(20, 33) . \"\\n\";\nfunction\
    \ candidate(...$args) {\n    return rounded_avg(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(1, 5) !== \"0b11\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(7, 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(964, 977) !== \"0b1111001010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(996, 997) !== \"0b1111100100\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(560, 851) !== \"0b1011000010\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(185, 546) !==\
    \ \"0b101101110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(362,\
    \ 496) !== \"0b110101101\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(350, 902) !== \"0b1001110010\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(197, 233) !== \"0b11010111\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 5) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5, 1) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5, 5) !== \"0b101\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "0b11\n-1\n0b1111\n0b11011\n"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp3b6ty7zo.php:34\n\
    Stack trace:\n#0 /tmp/tmp3b6ty7zo.php(46): test()\n#1 {main}\n  thrown in /tmp/tmp3b6ty7zo.php\
    \ on line 34\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// rounded_avg(1, 5) => \"\
    0b11\"\n// rounded_avg(7, 5) => -1\n// rounded_avg(10, 20) => \"0b1111\"\n// rounded_avg(20,\
    \ 33) => \"0b11010\"\nfunction rounded_avg($n, $m) {\n    if ($n > $m) {\n   \
    \     return -1;\n    }\n    $sum = 0;\n    for ($i = $n; $i <= $m; $i++) {\n\
    \        $sum += $i;\n    }\n    $avg = round($sum / ($m - $n + 1));\n    return\
    \ \"0b\" . decbin($avg);\n}\n\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !==\
    \ \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560,\
    \ 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpvdoh3ebt.php:30\n\
    Stack trace:\n#0 /tmp/tmpvdoh3ebt.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpvdoh3ebt.php\
    \ on line 30\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// rounded_avg(1, 5) => \"\
    0b11\"\n// rounded_avg(7, 5) => -1\n// rounded_avg(10, 20) => \"0b1111\"\n// rounded_avg(20,\
    \ 33) => \"0b11010\"\nfunction rounded_avg($n, $m) {\n    if ($n > $m) {\n   \
    \     return -1;\n    }\n    $sum = 0;\n    for ($i = $n; $i <= $m; $i++) {\n\
    \        $sum += $i;\n    }\n    $avg = round($sum / ($m - $n + 1));\n    return\
    \ \"0b\" . decbin($avg);\n}\n\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !==\
    \ \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560,\
    \ 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp2uowj30y.php:30\n\
    Stack trace:\n#0 /tmp/tmp2uowj30y.php(42): test()\n#1 {main}\n  thrown in /tmp/tmp2uowj30y.php\
    \ on line 30\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// rounded_avg(1, 5) => \"\
    0b11\"\n// rounded_avg(7, 5) => -1\n// rounded_avg(10, 20) => \"0b1111\"\n// rounded_avg(20,\
    \ 33) => \"0b11010\"\nfunction rounded_avg($n, $m) {\n  $sum = 0;\n  if ($n >\
    \ $m) {\n    return -1;\n  } else {\n    for ($i = $n; $i <= $m; $i++) {\n   \
    \   $sum += $i;\n    }\n    $avg = round($sum / ($m - $n + 1));\n    return \"\
    0b\" . decbin($avg);\n  }\n}\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !==\
    \ \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560,\
    \ 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp5b8i9dwv.php:30\n\
    Stack trace:\n#0 /tmp/tmp5b8i9dwv.php(42): test()\n#1 {main}\n  thrown in /tmp/tmp5b8i9dwv.php\
    \ on line 30\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// rounded_avg(1, 5) => \"\
    0b11\"\n// rounded_avg(7, 5) => -1\n// rounded_avg(10, 20) => \"0b1111\"\n// rounded_avg(20,\
    \ 33) => \"0b11010\"\nfunction rounded_avg($n, $m) {\n    if ($n > $m) {\n   \
    \     return -1;\n    }\n    $sum = 0;\n    for ($i = $n; $i <= $m; $i++) {\n\
    \        $sum += $i;\n    }\n    $avg = round($sum / ($m - $n + 1));\n    return\
    \ \"0b\" . decbin($avg);\n}\necho rounded_avg(1, 5) . \"\\n\";\necho rounded_avg(7,\
    \ 5) . \"\\n\";\necho rounded_avg(10, 20) . \"\\n\";\necho rounded_avg(20, 33)\
    \ . \"\\n\";\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !==\
    \ \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560,\
    \ 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "0b11\n-1\n0b1111\n0b11011\n"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp_j9tbrj8.php:33\n\
    Stack trace:\n#0 /tmp/tmp_j9tbrj8.php(45): test()\n#1 {main}\n  thrown in /tmp/tmp_j9tbrj8.php\
    \ on line 33\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// rounded_avg(1, 5) => \"\
    0b11\"\n// rounded_avg(7, 5) => -1\n// rounded_avg(10, 20) => \"0b1111\"\n// rounded_avg(20,\
    \ 33) => \"0b11010\"\nfunction rounded_avg($n, $m) {\n    if ($n > $m) {\n   \
    \     return -1;\n    }\n    $sum = 0;\n    for ($i = $n; $i <= $m; $i++) {\n\
    \        $sum += $i;\n    }\n    $avg = round($sum / ($m - $n + 1));\n    return\
    \ \"0b\" . decbin($avg);\n}\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !==\
    \ \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560,\
    \ 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp53etey0u.php:29\n\
    Stack trace:\n#0 /tmp/tmp53etey0u.php(41): test()\n#1 {main}\n  thrown in /tmp/tmp53etey0u.php\
    \ on line 29\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// rounded_avg(1, 5) => \"\
    0b11\"\n// rounded_avg(7, 5) => -1\n// rounded_avg(10, 20) => \"0b1111\"\n// rounded_avg(20,\
    \ 33) => \"0b11010\"\nfunction rounded_avg($n, $m) {\n  if ($n > $m) {\n    return\
    \ -1;\n  }\n  $sum = 0;\n  for ($i = $n; $i <= $m; $i++) {\n    $sum += $i;\n\
    \  }\n  $avg = round($sum / ($m - $n + 1));\n  return \"0b\" . decbin($avg);\n\
    }\n\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !== \"0b1111100100\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(560, 851) !==\
    \ \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(185,\
    \ 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpss72xd2v.php:30\n\
    Stack trace:\n#0 /tmp/tmpss72xd2v.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpss72xd2v.php\
    \ on line 30\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// rounded_avg(1, 5) => \"\
    0b11\"\n// rounded_avg(7, 5) => -1\n// rounded_avg(10, 20) => \"0b1111\"\n// rounded_avg(20,\
    \ 33) => \"0b11010\"\nfunction rounded_avg($n, $m) {\n  if ($n > $m) {\n    return\
    \ -1;\n  }\n  $sum = 0;\n  for ($i = $n; $i <= $m; $i++) {\n    $sum += $i;\n\
    \  }\n  $avg = round($sum / ($m - $n + 1));\n  return \"0b\" . decbin($avg);\n\
    }\n\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !== \"0b1111100100\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(560, 851) !==\
    \ \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(185,\
    \ 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpx11f0mf8.php:30\n\
    Stack trace:\n#0 /tmp/tmpx11f0mf8.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpx11f0mf8.php\
    \ on line 30\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// rounded_avg(1, 5) => \"\
    0b11\"\n// rounded_avg(7, 5) => -1\n// rounded_avg(10, 20) => \"0b1111\"\n// rounded_avg(20,\
    \ 33) => \"0b11010\"\nfunction rounded_avg($n, $m) {\n  if ($n > $m) {\n    return\
    \ -1;\n  }\n  $sum = 0;\n  for ($i = $n; $i <= $m; $i++) {\n    $sum += $i;\n\
    \  }\n  $avg = round($sum / ($m - $n + 1));\n  return \"0b\" . decbin($avg);\n\
    }\n\necho rounded_avg(1, 5) . \"\\n\";\necho rounded_avg(7, 5) . \"\\n\";\necho\
    \ rounded_avg(10, 20) . \"\\n\";\necho rounded_avg(20, 33) . \"\\n\";\nfunction\
    \ candidate(...$args) {\n    return rounded_avg(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(1, 5) !== \"0b11\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(7, 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(964, 977) !== \"0b1111001010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(996, 997) !== \"0b1111100100\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(560, 851) !== \"0b1011000010\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(185, 546) !==\
    \ \"0b101101110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(362,\
    \ 496) !== \"0b110101101\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(350, 902) !== \"0b1001110010\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(197, 233) !== \"0b11010111\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 5) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5, 1) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5, 5) !== \"0b101\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "0b11\n-1\n0b1111\n0b11011\n"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp9ph8fx74.php:34\n\
    Stack trace:\n#0 /tmp/tmp9ph8fx74.php(46): test()\n#1 {main}\n  thrown in /tmp/tmp9ph8fx74.php\
    \ on line 34\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// rounded_avg(1, 5) => \"\
    0b11\"\n// rounded_avg(7, 5) => -1\n// rounded_avg(10, 20) => \"0b1111\"\n// rounded_avg(20,\
    \ 33) => \"0b11010\"\nfunction rounded_avg($n, $m) {\n    if ($n > $m) {\n   \
    \     return -1;\n    }\n    $sum = 0;\n    for ($i = $n; $i <= $m; $i++) {\n\
    \        $sum += $i;\n    }\n    $avg = round($sum / ($m - $n + 1));\n    return\
    \ \"0b\" . decbin($avg);\n}\n\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !==\
    \ \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560,\
    \ 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpncomcjzt.php:30\n\
    Stack trace:\n#0 /tmp/tmpncomcjzt.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpncomcjzt.php\
    \ on line 30\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// rounded_avg(1, 5) => \"\
    0b11\"\n// rounded_avg(7, 5) => -1\n// rounded_avg(10, 20) => \"0b1111\"\n// rounded_avg(20,\
    \ 33) => \"0b11010\"\nfunction rounded_avg($n, $m) {\n    if ($n > $m) {\n   \
    \     return -1;\n    }\n    $sum = 0;\n    for ($i = $n; $i <= $m; $i++) {\n\
    \        $sum += $i;\n    }\n    $avg = $sum / ($m - $n + 1);\n    $rounded =\
    \ round($avg);\n    return \"0b\" . decbin($rounded);\n}\n\nfunction candidate(...$args)\
    \ {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1,\
    \ 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964,\
    \ 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !==\
    \ \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197,\
    \ 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpx_t536sy.php:31\n\
    Stack trace:\n#0 /tmp/tmpx_t536sy.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpx_t536sy.php\
    \ on line 31\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// rounded_avg(1, 5) => \"\
    0b11\"\n// rounded_avg(7, 5) => -1\n// rounded_avg(10, 20) => \"0b1111\"\n// rounded_avg(20,\
    \ 33) => \"0b11010\"\nfunction rounded_avg($n, $m) {\n  if ($n > $m) {\n    return\
    \ -1;\n  }\n  $sum = 0;\n  for ($i = $n; $i <= $m; $i++) {\n    $sum += $i;\n\
    \  }\n  $avg = round($sum / ($m - $n + 1));\n  return \"0b\" . decbin($avg);\n\
    }\n\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !== \"0b1111100100\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(560, 851) !==\
    \ \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(185,\
    \ 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpfpcwzk4_.php:30\n\
    Stack trace:\n#0 /tmp/tmpfpcwzk4_.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpfpcwzk4_.php\
    \ on line 30\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// rounded_avg(1, 5) => \"\
    0b11\"\n// rounded_avg(7, 5) => -1\n// rounded_avg(10, 20) => \"0b1111\"\n// rounded_avg(20,\
    \ 33) => \"0b11010\"\nfunction rounded_avg($n, $m) {\n  if ($n > $m) return -1;\n\
    \  $sum = 0;\n  for ($i = $n; $i <= $m; $i++) {\n    $sum += $i;\n  }\n  $avg\
    \ = round($sum / ($m - $n + 1));\n  return \"0b\" . decbin($avg);\n}\n\nfunction\
    \ candidate(...$args) {\n    return rounded_avg(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(1, 5) !== \"0b11\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(7, 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(964, 977) !== \"0b1111001010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(996, 997) !== \"0b1111100100\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(560, 851) !== \"0b1011000010\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(185, 546) !==\
    \ \"0b101101110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(362,\
    \ 496) !== \"0b110101101\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(350, 902) !== \"0b1001110010\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(197, 233) !== \"0b11010111\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 5) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5, 1) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5, 5) !== \"0b101\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpui0y98zx.php:28\n\
    Stack trace:\n#0 /tmp/tmpui0y98zx.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpui0y98zx.php\
    \ on line 28\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// rounded_avg(1, 5) => \"\
    0b11\"\n// rounded_avg(7, 5) => -1\n// rounded_avg(10, 20) => \"0b1111\"\n// rounded_avg(20,\
    \ 33) => \"0b11010\"\nfunction rounded_avg($n, $m) {\n    if ($n > $m) {\n   \
    \     return -1;\n    }\n    $sum = 0;\n    for ($i = $n; $i <= $m; $i++) {\n\
    \        $sum += $i;\n    }\n    $avg = round($sum / ($m - $n + 1));\n    return\
    \ \"0b\" . decbin($avg);\n}\n\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !==\
    \ \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560,\
    \ 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpz3f26oo1.php:30\n\
    Stack trace:\n#0 /tmp/tmpz3f26oo1.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpz3f26oo1.php\
    \ on line 30\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// rounded_avg(1, 5) => \"\
    0b11\"\n// rounded_avg(7, 5) => -1\n// rounded_avg(10, 20) => \"0b1111\"\n// rounded_avg(20,\
    \ 33) => \"0b11010\"\nfunction rounded_avg($n, $m) {\n    if ($n > $m) {\n   \
    \     return -1;\n    }\n    $sum = 0;\n    for ($i = $n; $i <= $m; $i++) {\n\
    \        $sum += $i;\n    }\n    $avg = round($sum / ($m - $n + 1));\n    return\
    \ \"0b\" . decbin($avg);\n}\n\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !==\
    \ \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560,\
    \ 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpsxgf8tar.php:30\n\
    Stack trace:\n#0 /tmp/tmpsxgf8tar.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpsxgf8tar.php\
    \ on line 30\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// rounded_avg(1, 5) => \"\
    0b11\"\n// rounded_avg(7, 5) => -1\n// rounded_avg(10, 20) => \"0b1111\"\n// rounded_avg(20,\
    \ 33) => \"0b11010\"\nfunction rounded_avg($n, $m) {\n    if ($n > $m) {\n   \
    \     return -1;\n    }\n    $sum = 0;\n    for ($i = $n; $i <= $m; $i++) {\n\
    \        $sum += $i;\n    }\n    $avg = round($sum / ($m - $n + 1));\n    return\
    \ \"0b\" . decbin($avg);\n}\n\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !==\
    \ \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560,\
    \ 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpm68u2w0_.php:30\n\
    Stack trace:\n#0 /tmp/tmpm68u2w0_.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpm68u2w0_.php\
    \ on line 30\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// rounded_avg(1, 5) => \"\
    0b11\"\n// rounded_avg(7, 5) => -1\n// rounded_avg(10, 20) => \"0b1111\"\n// rounded_avg(20,\
    \ 33) => \"0b11010\"\nfunction rounded_avg($n, $m) {\n  if ($n > $m) {\n    return\
    \ -1;\n  }\n  $sum = 0;\n  for ($i = $n; $i <= $m; $i++) {\n    $sum += $i;\n\
    \  }\n  $avg = round($sum / ($m - $n + 1));\n  return \"0b\" . decbin($avg);\n\
    }\n\necho rounded_avg(1, 5) . \"\\n\";\necho rounded_avg(7, 5) . \"\\n\";\necho\
    \ rounded_avg(10, 20) . \"\\n\";\necho rounded_avg(20, 33) . \"\\n\";\nfunction\
    \ candidate(...$args) {\n    return rounded_avg(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(1, 5) !== \"0b11\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(7, 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(964, 977) !== \"0b1111001010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(996, 997) !== \"0b1111100100\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(560, 851) !== \"0b1011000010\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(185, 546) !==\
    \ \"0b101101110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(362,\
    \ 496) !== \"0b110101101\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(350, 902) !== \"0b1001110010\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(197, 233) !== \"0b11010111\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 5) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5, 1) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5, 5) !== \"0b101\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "0b11\n-1\n0b1111\n0b11011\n"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpq4cbatt2.php:34\n\
    Stack trace:\n#0 /tmp/tmpq4cbatt2.php(46): test()\n#1 {main}\n  thrown in /tmp/tmpq4cbatt2.php\
    \ on line 34\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// rounded_avg(1, 5) => \"\
    0b11\"\n// rounded_avg(7, 5) => -1\n// rounded_avg(10, 20) => \"0b1111\"\n// rounded_avg(20,\
    \ 33) => \"0b11010\"\nfunction rounded_avg($n, $m) {\n    if ($n > $m) {\n   \
    \     return -1;\n    }\n    $sum = 0;\n    for ($i = $n; $i <= $m; $i++) {\n\
    \        $sum += $i;\n    }\n    $avg = round($sum / ($m - $n + 1));\n    return\
    \ \"0b\" . decbin($avg);\n}\n\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !==\
    \ \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560,\
    \ 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp662orww4.php:30\n\
    Stack trace:\n#0 /tmp/tmp662orww4.php(42): test()\n#1 {main}\n  thrown in /tmp/tmp662orww4.php\
    \ on line 30\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// rounded_avg(1, 5) => \"\
    0b11\"\n// rounded_avg(7, 5) => -1\n// rounded_avg(10, 20) => \"0b1111\"\n// rounded_avg(20,\
    \ 33) => \"0b11010\"\nfunction rounded_avg($n, $m) {\n    if ($n > $m) {\n   \
    \     return -1;\n    }\n    $sum = 0;\n    for ($i = $n; $i <= $m; $i++) {\n\
    \        $sum += $i;\n    }\n    $avg = round($sum / ($m - $n + 1));\n    return\
    \ \"0b\" . decbin($avg);\n}\necho rounded_avg(1, 5) . \"\\n\";\necho rounded_avg(7,\
    \ 5) . \"\\n\";\necho rounded_avg(10, 20) . \"\\n\";\necho rounded_avg(20, 33)\
    \ . \"\\n\";\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !==\
    \ \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560,\
    \ 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "0b11\n-1\n0b1111\n0b11011\n"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp3vgifc01.php:33\n\
    Stack trace:\n#0 /tmp/tmp3vgifc01.php(45): test()\n#1 {main}\n  thrown in /tmp/tmp3vgifc01.php\
    \ on line 33\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// rounded_avg(1, 5) => \"\
    0b11\"\n// rounded_avg(7, 5) => -1\n// rounded_avg(10, 20) => \"0b1111\"\n// rounded_avg(20,\
    \ 33) => \"0b11010\"\nfunction rounded_avg($n, $m) {\n    if ($n > $m) {\n   \
    \     return -1;\n    }\n    $sum = 0;\n    for ($i = $n; $i <= $m; $i++) {\n\
    \        $sum += $i;\n    }\n    $avg = round($sum / ($m - $n + 1));\n    return\
    \ \"0b\" . decbin($avg);\n}\n\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !==\
    \ \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560,\
    \ 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp919u7iyc.php:30\n\
    Stack trace:\n#0 /tmp/tmp919u7iyc.php(42): test()\n#1 {main}\n  thrown in /tmp/tmp919u7iyc.php\
    \ on line 30\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// rounded_avg(1, 5) => \"\
    0b11\"\n// rounded_avg(7, 5) => -1\n// rounded_avg(10, 20) => \"0b1111\"\n// rounded_avg(20,\
    \ 33) => \"0b11010\"\nfunction rounded_avg($n, $m) {\n    if ($n > $m) {\n   \
    \     return -1;\n    }\n    $sum = 0;\n    for ($i = $n; $i <= $m; $i++) {\n\
    \        $sum += $i;\n    }\n    $avg = round($sum / ($m - $n + 1));\n    return\
    \ \"0b\" . decbin($avg);\n}\n\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !==\
    \ \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560,\
    \ 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp84hs5duw.php:30\n\
    Stack trace:\n#0 /tmp/tmp84hs5duw.php(42): test()\n#1 {main}\n  thrown in /tmp/tmp84hs5duw.php\
    \ on line 30\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// rounded_avg(1, 5) => \"\
    0b11\"\n// rounded_avg(7, 5) => -1\n// rounded_avg(10, 20) => \"0b1111\"\n// rounded_avg(20,\
    \ 33) => \"0b11010\"\nfunction rounded_avg($n, $m) {\n    if ($n > $m) {\n   \
    \     return -1;\n    }\n    $sum = 0;\n    for ($i = $n; $i <= $m; $i++) {\n\
    \        $sum += $i;\n    }\n    $avg = round($sum / ($m - $n + 1));\n    return\
    \ \"0b\" . decbin($avg);\n}\n\necho rounded_avg(1, 5) . \"\\n\";\necho rounded_avg(7,\
    \ 5) . \"\\n\";\necho rounded_avg(10, 20) . \"\\n\";\necho rounded_avg(20, 33)\
    \ . \"\\n\";\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !==\
    \ \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560,\
    \ 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "0b11\n-1\n0b1111\n0b11011\n"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpftw_9f12.php:34\n\
    Stack trace:\n#0 /tmp/tmpftw_9f12.php(46): test()\n#1 {main}\n  thrown in /tmp/tmpftw_9f12.php\
    \ on line 34\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// rounded_avg(1, 5) => \"\
    0b11\"\n// rounded_avg(7, 5) => -1\n// rounded_avg(10, 20) => \"0b1111\"\n// rounded_avg(20,\
    \ 33) => \"0b11010\"\nfunction rounded_avg($n, $m) {\n\tif ($n > $m) return -1;\n\
    \t$sum = 0;\n\tfor ($i = $n; $i <= $m; $i++) {\n\t\t$sum += $i;\n\t}\n\t$avg =\
    \ round($sum / ($m - $n + 1));\n\treturn decbin($avg);\n}\n\necho rounded_avg(1,\
    \ 5) . \"\\n\";\necho rounded_avg(7, 5) . \"\\n\";\necho rounded_avg(10, 20) .\
    \ \"\\n\";\necho rounded_avg(20, 33) . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1,\
    \ 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964,\
    \ 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !==\
    \ \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197,\
    \ 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "11\n-1\n1111\n11011\n"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpuc56i0ow.php:30\n\
    Stack trace:\n#0 /tmp/tmpuc56i0ow.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpuc56i0ow.php\
    \ on line 30\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// rounded_avg(1, 5) => \"\
    0b11\"\n// rounded_avg(7, 5) => -1\n// rounded_avg(10, 20) => \"0b1111\"\n// rounded_avg(20,\
    \ 33) => \"0b11010\"\nfunction rounded_avg($n, $m) {\n    if ($n > $m) {\n   \
    \     return -1;\n    }\n    $sum = 0;\n    for ($i = $n; $i <= $m; $i++) {\n\
    \        $sum += $i;\n    }\n    $avg = round($sum / ($m - $n + 1));\n    return\
    \ \"0b\" . decbin($avg);\n}\n\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !==\
    \ \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560,\
    \ 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpc0gjwnpd.php:30\n\
    Stack trace:\n#0 /tmp/tmpc0gjwnpd.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpc0gjwnpd.php\
    \ on line 30\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// rounded_avg(1, 5) => \"\
    0b11\"\n// rounded_avg(7, 5) => -1\n// rounded_avg(10, 20) => \"0b1111\"\n// rounded_avg(20,\
    \ 33) => \"0b11010\"\nfunction rounded_avg($n, $m) {\n    if ($n > $m) {\n   \
    \     return -1;\n    }\n    $sum = 0;\n    for ($i = $n; $i <= $m; $i++) {\n\
    \        $sum += $i;\n    }\n    $avg = round($sum / ($m - $n + 1));\n    return\
    \ \"0b\" . decbin($avg);\n}\n\necho rounded_avg(1, 5) . \"\\n\";\necho rounded_avg(7,\
    \ 5) . \"\\n\";\necho rounded_avg(10, 20) . \"\\n\";\necho rounded_avg(20, 33)\
    \ . \"\\n\";\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !==\
    \ \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560,\
    \ 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "0b11\n-1\n0b1111\n0b11011\n"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpxrmhtzc_.php:34\n\
    Stack trace:\n#0 /tmp/tmpxrmhtzc_.php(46): test()\n#1 {main}\n  thrown in /tmp/tmpxrmhtzc_.php\
    \ on line 34\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// rounded_avg(1, 5) => \"\
    0b11\"\n// rounded_avg(7, 5) => -1\n// rounded_avg(10, 20) => \"0b1111\"\n// rounded_avg(20,\
    \ 33) => \"0b11010\"\nfunction rounded_avg($n, $m) {\n    if ($n > $m) {\n   \
    \     return -1;\n    }\n    $sum = 0;\n    for ($i = $n; $i <= $m; $i++) {\n\
    \        $sum += $i;\n    }\n    $avg = round($sum / ($m - $n + 1));\n    return\
    \ \"0b\" . decbin($avg);\n}\n\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !==\
    \ \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560,\
    \ 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpfa1feumi.php:30\n\
    Stack trace:\n#0 /tmp/tmpfa1feumi.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpfa1feumi.php\
    \ on line 30\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// rounded_avg(1, 5) => \"\
    0b11\"\n// rounded_avg(7, 5) => -1\n// rounded_avg(10, 20) => \"0b1111\"\n// rounded_avg(20,\
    \ 33) => \"0b11010\"\nfunction rounded_avg($n, $m) {\n    if ($n > $m) {\n   \
    \     return -1;\n    }\n    $sum = 0;\n    for ($i = $n; $i <= $m; $i++) {\n\
    \        $sum += $i;\n    }\n    $avg = round($sum / ($m - $n + 1));\n    return\
    \ \"0b\" . decbin($avg);\n}\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !==\
    \ \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560,\
    \ 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpc3tat6_a.php:29\n\
    Stack trace:\n#0 /tmp/tmpc3tat6_a.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpc3tat6_a.php\
    \ on line 29\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// rounded_avg(1, 5) => \"\
    0b11\"\n// rounded_avg(7, 5) => -1\n// rounded_avg(10, 20) => \"0b1111\"\n// rounded_avg(20,\
    \ 33) => \"0b11010\"\nfunction rounded_avg($n, $m) {\n    if ($n > $m) {\n   \
    \     return -1;\n    }\n    $sum = 0;\n    for ($i = $n; $i <= $m; $i++) {\n\
    \        $sum += $i;\n    }\n    $avg = round($sum / ($m - $n + 1));\n    return\
    \ \"0b\" . decbin($avg);\n}\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !==\
    \ \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560,\
    \ 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmppya6ia_x.php:29\n\
    Stack trace:\n#0 /tmp/tmppya6ia_x.php(41): test()\n#1 {main}\n  thrown in /tmp/tmppya6ia_x.php\
    \ on line 29\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// rounded_avg(1, 5) => \"\
    0b11\"\n// rounded_avg(7, 5) => -1\n// rounded_avg(10, 20) => \"0b1111\"\n// rounded_avg(20,\
    \ 33) => \"0b11010\"\nfunction rounded_avg($n, $m) {\n    if ($n > $m) {\n   \
    \     return -1;\n    }\n    $avg = round(($n + $m) / 2);\n    return decbin($avg);\n\
    }\n\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !== \"0b1111100100\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(560, 851) !==\
    \ \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(185,\
    \ 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp6bi0p59w.php:24\n\
    Stack trace:\n#0 /tmp/tmp6bi0p59w.php(38): test()\n#1 {main}\n  thrown in /tmp/tmp6bi0p59w.php\
    \ on line 24\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// rounded_avg(1, 5) => \"\
    0b11\"\n// rounded_avg(7, 5) => -1\n// rounded_avg(10, 20) => \"0b1111\"\n// rounded_avg(20,\
    \ 33) => \"0b11010\"\nfunction rounded_avg($n, $m) {\n    if ($n > $m) {\n   \
    \     return -1;\n    }\n    $sum = 0;\n    for ($i = $n; $i <= $m; $i++) {\n\
    \        $sum += $i;\n    }\n    $avg = round($sum / ($m - $n + 1));\n    return\
    \ \"0b\" . decbin($avg);\n}\n\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !==\
    \ \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560,\
    \ 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp7kh4x3zz.php:30\n\
    Stack trace:\n#0 /tmp/tmp7kh4x3zz.php(42): test()\n#1 {main}\n  thrown in /tmp/tmp7kh4x3zz.php\
    \ on line 30\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// rounded_avg(1, 5) => \"\
    0b11\"\n// rounded_avg(7, 5) => -1\n// rounded_avg(10, 20) => \"0b1111\"\n// rounded_avg(20,\
    \ 33) => \"0b11010\"\nfunction rounded_avg($n, $m) {\n    if ($n > $m) {\n   \
    \     return -1;\n    }\n    $avg = round(($n + $m) / 2);\n    return decbin($avg);\n\
    }\n\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !== \"0b1111100100\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(560, 851) !==\
    \ \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(185,\
    \ 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp_gwmmgw2.php:24\n\
    Stack trace:\n#0 /tmp/tmp_gwmmgw2.php(38): test()\n#1 {main}\n  thrown in /tmp/tmp_gwmmgw2.php\
    \ on line 24\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// rounded_avg(1, 5) => \"\
    0b11\"\n// rounded_avg(7, 5) => -1\n// rounded_avg(10, 20) => \"0b1111\"\n// rounded_avg(20,\
    \ 33) => \"0b11010\"\nfunction rounded_avg($n, $m) {\n    if ($n > $m) {\n   \
    \     return -1;\n    }\n    $avg = round(($n + $m) / 2);\n    return decbin($avg);\n\
    }\n\necho rounded_avg(1, 5) . \"\\n\";\necho rounded_avg(7, 5) . \"\\n\";\necho\
    \ rounded_avg(10, 20) . \"\\n\";\necho rounded_avg(20, 33) . \"\\n\";\nfunction\
    \ candidate(...$args) {\n    return rounded_avg(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(1, 5) !== \"0b11\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(7, 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(964, 977) !== \"0b1111001010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(996, 997) !== \"0b1111100100\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(560, 851) !== \"0b1011000010\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(185, 546) !==\
    \ \"0b101101110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(362,\
    \ 496) !== \"0b110101101\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(350, 902) !== \"0b1001110010\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(197, 233) !== \"0b11010111\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 5) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5, 1) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5, 5) !== \"0b101\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "11\n-1\n1111\n11011\n"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpv_6gbu3s.php:28\n\
    Stack trace:\n#0 /tmp/tmpv_6gbu3s.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpv_6gbu3s.php\
    \ on line 28\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// rounded_avg(1, 5) => \"\
    0b11\"\n// rounded_avg(7, 5) => -1\n// rounded_avg(10, 20) => \"0b1111\"\n// rounded_avg(20,\
    \ 33) => \"0b11010\"\nfunction rounded_avg($n, $m) {\n    if ($n > $m) {\n   \
    \     return -1;\n    }\n    $sum = 0;\n    for ($i = $n; $i <= $m; $i++) {\n\
    \        $sum += $i;\n    }\n    $avg = round($sum / ($m - $n + 1));\n    return\
    \ \"0b\" . decbin($avg);\n}\n\necho rounded_avg(1, 5) . \"\\n\";\necho rounded_avg(7,\
    \ 5) . \"\\n\";\necho rounded_avg(10, 20) . \"\\n\";\necho rounded_avg(20, 33)\
    \ . \"\\n\";\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !==\
    \ \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560,\
    \ 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "0b11\n-1\n0b1111\n0b11011\n"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpnvan3x0b.php:34\n\
    Stack trace:\n#0 /tmp/tmpnvan3x0b.php(46): test()\n#1 {main}\n  thrown in /tmp/tmpnvan3x0b.php\
    \ on line 34\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// rounded_avg(1, 5) => \"\
    0b11\"\n// rounded_avg(7, 5) => -1\n// rounded_avg(10, 20) => \"0b1111\"\n// rounded_avg(20,\
    \ 33) => \"0b11010\"\nfunction rounded_avg($n, $m) {\n    if ($n > $m) {\n   \
    \     return -1;\n    }\n    $sum = 0;\n    for ($i = $n; $i <= $m; $i++) {\n\
    \        $sum += $i;\n    }\n    $avg = round($sum / ($m - $n + 1));\n    return\
    \ \"0b\" . decbin($avg);\n}\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !==\
    \ \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560,\
    \ 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp9_7qtgyd.php:29\n\
    Stack trace:\n#0 /tmp/tmp9_7qtgyd.php(41): test()\n#1 {main}\n  thrown in /tmp/tmp9_7qtgyd.php\
    \ on line 29\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// rounded_avg(1, 5) => \"\
    0b11\"\n// rounded_avg(7, 5) => -1\n// rounded_avg(10, 20) => \"0b1111\"\n// rounded_avg(20,\
    \ 33) => \"0b11010\"\nfunction rounded_avg($n, $m) {\n    if ($n > $m) {\n   \
    \     return -1;\n    }\n    $sum = 0;\n    for ($i = $n; $i <= $m; $i++) {\n\
    \        $sum += $i;\n    }\n    $avg = round($sum / ($m - $n + 1));\n    return\
    \ \"0b\" . decbin($avg);\n}\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !==\
    \ \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560,\
    \ 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpf5gke0jm.php:29\n\
    Stack trace:\n#0 /tmp/tmpf5gke0jm.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpf5gke0jm.php\
    \ on line 29\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// rounded_avg(1, 5) => \"\
    0b11\"\n// rounded_avg(7, 5) => -1\n// rounded_avg(10, 20) => \"0b1111\"\n// rounded_avg(20,\
    \ 33) => \"0b11010\"\nfunction rounded_avg($n, $m) {\n  if ($n > $m) {\n    return\
    \ -1;\n  }\n  $sum = 0;\n  for ($i = $n; $i <= $m; $i++) {\n    $sum += $i;\n\
    \  }\n  $avg = round($sum / ($m - $n + 1));\n  return \"0b\" . decbin($avg);\n\
    }\n\necho rounded_avg(1, 5) . \"\\n\";\necho rounded_avg(7, 5) . \"\\n\";\necho\
    \ rounded_avg(10, 20) . \"\\n\";\necho rounded_avg(20, 33) . \"\\n\";\nfunction\
    \ candidate(...$args) {\n    return rounded_avg(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(1, 5) !== \"0b11\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(7, 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(964, 977) !== \"0b1111001010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(996, 997) !== \"0b1111100100\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(560, 851) !== \"0b1011000010\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(185, 546) !==\
    \ \"0b101101110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(362,\
    \ 496) !== \"0b110101101\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(350, 902) !== \"0b1001110010\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(197, 233) !== \"0b11010111\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 5) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5, 1) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5, 5) !== \"0b101\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "0b11\n-1\n0b1111\n0b11011\n"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpguci1fps.php:34\n\
    Stack trace:\n#0 /tmp/tmpguci1fps.php(46): test()\n#1 {main}\n  thrown in /tmp/tmpguci1fps.php\
    \ on line 34\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// rounded_avg(1, 5) => \"\
    0b11\"\n// rounded_avg(7, 5) => -1\n// rounded_avg(10, 20) => \"0b1111\"\n// rounded_avg(20,\
    \ 33) => \"0b11010\"\nfunction rounded_avg($n, $m) {\n    if ($n > $m) {\n   \
    \     return -1;\n    }\n    $sum = 0;\n    for ($i = $n; $i <= $m; $i++) {\n\
    \        $sum += $i;\n    }\n    $avg = round($sum / ($m - $n + 1));\n    return\
    \ \"0b\" . decbin($avg);\n}\n\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !==\
    \ \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560,\
    \ 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpn1ee5d0_.php:30\n\
    Stack trace:\n#0 /tmp/tmpn1ee5d0_.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpn1ee5d0_.php\
    \ on line 30\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// rounded_avg(1, 5) => \"\
    0b11\"\n// rounded_avg(7, 5) => -1\n// rounded_avg(10, 20) => \"0b1111\"\n// rounded_avg(20,\
    \ 33) => \"0b11010\"\nfunction rounded_avg($n, $m) {\n  if ($n > $m) return -1;\n\
    \  $sum = 0;\n  for ($i = $n; $i <= $m; $i++) {\n    $sum += $i;\n  }\n  $avg\
    \ = round($sum / ($m - $n + 1));\n  return \"0b\" . decbin($avg);\n}\n\nfunction\
    \ candidate(...$args) {\n    return rounded_avg(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(1, 5) !== \"0b11\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(7, 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(964, 977) !== \"0b1111001010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(996, 997) !== \"0b1111100100\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(560, 851) !== \"0b1011000010\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(185, 546) !==\
    \ \"0b101101110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(362,\
    \ 496) !== \"0b110101101\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(350, 902) !== \"0b1001110010\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(197, 233) !== \"0b11010111\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 5) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5, 1) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5, 5) !== \"0b101\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp_a9ebe7s.php:28\n\
    Stack trace:\n#0 /tmp/tmp_a9ebe7s.php(40): test()\n#1 {main}\n  thrown in /tmp/tmp_a9ebe7s.php\
    \ on line 28\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// rounded_avg(1, 5) => \"\
    0b11\"\n// rounded_avg(7, 5) => -1\n// rounded_avg(10, 20) => \"0b1111\"\n// rounded_avg(20,\
    \ 33) => \"0b11010\"\nfunction rounded_avg($n, $m) {\n  if ($n > $m) {\n    return\
    \ -1;\n  }\n  $sum = 0;\n  for ($i = $n; $i <= $m; $i++) {\n    $sum += $i;\n\
    \  }\n  $avg = round($sum / ($m - $n + 1));\n  return \"0b\" . decbin($avg);\n\
    }\n\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !== \"0b1111100100\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(560, 851) !==\
    \ \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(185,\
    \ 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpzzn_oakq.php:30\n\
    Stack trace:\n#0 /tmp/tmpzzn_oakq.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpzzn_oakq.php\
    \ on line 30\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// rounded_avg(1, 5) => \"\
    0b11\"\n// rounded_avg(7, 5) => -1\n// rounded_avg(10, 20) => \"0b1111\"\n// rounded_avg(20,\
    \ 33) => \"0b11010\"\nfunction rounded_avg($n, $m) {\n    if ($n > $m) {\n   \
    \     return -1;\n    }\n    $sum = 0;\n    for ($i = $n; $i <= $m; $i++) {\n\
    \        $sum += $i;\n    }\n    $avg = round($sum / ($m - $n + 1));\n    return\
    \ \"0b\" . decbin($avg);\n}\necho rounded_avg(1, 5) . \"\\n\";\necho rounded_avg(7,\
    \ 5) . \"\\n\";\necho rounded_avg(10, 20) . \"\\n\";\necho rounded_avg(20, 33)\
    \ . \"\\n\";\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !==\
    \ \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560,\
    \ 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "0b11\n-1\n0b1111\n0b11011\n"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp08fug1ep.php:33\n\
    Stack trace:\n#0 /tmp/tmp08fug1ep.php(45): test()\n#1 {main}\n  thrown in /tmp/tmp08fug1ep.php\
    \ on line 33\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// rounded_avg(1, 5) => \"\
    0b11\"\n// rounded_avg(7, 5) => -1\n// rounded_avg(10, 20) => \"0b1111\"\n// rounded_avg(20,\
    \ 33) => \"0b11010\"\nfunction rounded_avg($n, $m) {\n    if ($n > $m) {\n   \
    \     return -1;\n    }\n    $sum = 0;\n    for ($i = $n; $i <= $m; $i++) {\n\
    \        $sum += $i;\n    }\n    $avg = round($sum / ($m - $n + 1));\n    return\
    \ \"0b\" . decbin($avg);\n}\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !==\
    \ \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560,\
    \ 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp142x0x69.php:29\n\
    Stack trace:\n#0 /tmp/tmp142x0x69.php(41): test()\n#1 {main}\n  thrown in /tmp/tmp142x0x69.php\
    \ on line 29\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// rounded_avg(1, 5) => \"\
    0b11\"\n// rounded_avg(7, 5) => -1\n// rounded_avg(10, 20) => \"0b1111\"\n// rounded_avg(20,\
    \ 33) => \"0b11010\"\nfunction rounded_avg($n, $m) {\n    if ($n > $m) {\n   \
    \     return -1;\n    }\n    $sum = 0;\n    for ($i = $n; $i <= $m; $i++) {\n\
    \        $sum += $i;\n    }\n    $avg = round($sum / ($m - $n + 1));\n    return\
    \ \"0b\" . decbin($avg);\n}\n\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !==\
    \ \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560,\
    \ 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp8sosm5cj.php:30\n\
    Stack trace:\n#0 /tmp/tmp8sosm5cj.php(42): test()\n#1 {main}\n  thrown in /tmp/tmp8sosm5cj.php\
    \ on line 30\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// rounded_avg(1, 5) => \"\
    0b11\"\n// rounded_avg(7, 5) => -1\n// rounded_avg(10, 20) => \"0b1111\"\n// rounded_avg(20,\
    \ 33) => \"0b11010\"\nfunction rounded_avg($n, $m) {\n    if ($n > $m) {\n   \
    \     return -1;\n    }\n    $sum = 0;\n    for ($i = $n; $i <= $m; $i++) {\n\
    \        $sum += $i;\n    }\n    $avg = round($sum / ($m - $n + 1));\n    return\
    \ \"0b\" . decbin($avg);\n}\n\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !==\
    \ \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560,\
    \ 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp2bxxl_y2.php:30\n\
    Stack trace:\n#0 /tmp/tmp2bxxl_y2.php(42): test()\n#1 {main}\n  thrown in /tmp/tmp2bxxl_y2.php\
    \ on line 30\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// rounded_avg(1, 5) => \"\
    0b11\"\n// rounded_avg(7, 5) => -1\n// rounded_avg(10, 20) => \"0b1111\"\n// rounded_avg(20,\
    \ 33) => \"0b11010\"\nfunction rounded_avg($n, $m) {\n    if ($n > $m) {\n   \
    \     return -1;\n    }\n    $sum = 0;\n    for ($i = $n; $i <= $m; $i++) {\n\
    \        $sum += $i;\n    }\n    $avg = round($sum / ($m - $n + 1));\n    return\
    \ \"0b\" . decbin($avg);\n}\n\necho rounded_avg(1, 5) . \"\\n\";\necho rounded_avg(7,\
    \ 5) . \"\\n\";\necho rounded_avg(10, 20) . \"\\n\";\necho rounded_avg(20, 33)\
    \ . \"\\n\";\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !==\
    \ \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560,\
    \ 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "0b11\n-1\n0b1111\n0b11011\n"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpz33g3eb7.php:34\n\
    Stack trace:\n#0 /tmp/tmpz33g3eb7.php(46): test()\n#1 {main}\n  thrown in /tmp/tmpz33g3eb7.php\
    \ on line 34\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// rounded_avg(1, 5) => \"\
    0b11\"\n// rounded_avg(7, 5) => -1\n// rounded_avg(10, 20) => \"0b1111\"\n// rounded_avg(20,\
    \ 33) => \"0b11010\"\nfunction rounded_avg($n, $m) {\n  if ($n > $m) {\n    return\
    \ -1;\n  }\n  $sum = 0;\n  for ($i = $n; $i <= $m; $i++) {\n    $sum += $i;\n\
    \  }\n  $avg = round($sum / ($m - $n + 1));\n  return \"0b\" . decbin($avg);\n\
    }\n\necho rounded_avg(1, 5) . \"\\n\";\necho rounded_avg(7, 5) . \"\\n\";\necho\
    \ rounded_avg(10, 20) . \"\\n\";\necho rounded_avg(20, 33) . \"\\n\";\nfunction\
    \ candidate(...$args) {\n    return rounded_avg(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(1, 5) !== \"0b11\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(7, 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(964, 977) !== \"0b1111001010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(996, 997) !== \"0b1111100100\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(560, 851) !== \"0b1011000010\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(185, 546) !==\
    \ \"0b101101110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(362,\
    \ 496) !== \"0b110101101\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(350, 902) !== \"0b1001110010\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(197, 233) !== \"0b11010111\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 5) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5, 1) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5, 5) !== \"0b101\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "0b11\n-1\n0b1111\n0b11011\n"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpnqqd9mw1.php:34\n\
    Stack trace:\n#0 /tmp/tmpnqqd9mw1.php(46): test()\n#1 {main}\n  thrown in /tmp/tmpnqqd9mw1.php\
    \ on line 34\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// rounded_avg(1, 5) => \"\
    0b11\"\n// rounded_avg(7, 5) => -1\n// rounded_avg(10, 20) => \"0b1111\"\n// rounded_avg(20,\
    \ 33) => \"0b11010\"\nfunction rounded_avg($n, $m) {\n    if ($n > $m) {\n   \
    \     return -1;\n    }\n    $sum = 0;\n    for ($i = $n; $i <= $m; $i++) {\n\
    \        $sum += $i;\n    }\n    $avg = round($sum / ($m - $n + 1));\n    return\
    \ \"0b\" . decbin($avg);\n}\n\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !==\
    \ \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560,\
    \ 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpo35ubwv2.php:30\n\
    Stack trace:\n#0 /tmp/tmpo35ubwv2.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpo35ubwv2.php\
    \ on line 30\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// rounded_avg(1, 5) => \"\
    0b11\"\n// rounded_avg(7, 5) => -1\n// rounded_avg(10, 20) => \"0b1111\"\n// rounded_avg(20,\
    \ 33) => \"0b11010\"\nfunction rounded_avg($n, $m) {\n    if ($n > $m) {\n   \
    \     return -1;\n    }\n    $sum = 0;\n    for ($i = $n; $i <= $m; $i++) {\n\
    \        $sum += $i;\n    }\n    $avg = round($sum / ($m - $n + 1));\n    return\
    \ \"0b\" . decbin($avg);\n}\n\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !==\
    \ \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560,\
    \ 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp3_g03p1f.php:30\n\
    Stack trace:\n#0 /tmp/tmp3_g03p1f.php(42): test()\n#1 {main}\n  thrown in /tmp/tmp3_g03p1f.php\
    \ on line 30\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// rounded_avg(1, 5) => \"\
    0b11\"\n// rounded_avg(7, 5) => -1\n// rounded_avg(10, 20) => \"0b1111\"\n// rounded_avg(20,\
    \ 33) => \"0b11010\"\nfunction rounded_avg($n, $m) {\n    if ($n > $m) {\n   \
    \     return -1;\n    }\n    $sum = 0;\n    for ($i = $n; $i <= $m; $i++) {\n\
    \        $sum += $i;\n    }\n    $avg = round($sum / ($m - $n + 1));\n    return\
    \ \"0b\" . decbin($avg);\n}\n\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !==\
    \ \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560,\
    \ 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp9k7a0tl1.php:30\n\
    Stack trace:\n#0 /tmp/tmp9k7a0tl1.php(42): test()\n#1 {main}\n  thrown in /tmp/tmp9k7a0tl1.php\
    \ on line 30\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// rounded_avg(1, 5) => \"\
    0b11\"\n// rounded_avg(7, 5) => -1\n// rounded_avg(10, 20) => \"0b1111\"\n// rounded_avg(20,\
    \ 33) => \"0b11010\"\nfunction rounded_avg($n, $m) {\n  if ($n > $m) {\n    return\
    \ -1;\n  }\n  $sum = 0;\n  for ($i = $n; $i <= $m; $i++) {\n    $sum += $i;\n\
    \  }\n  $avg = round($sum / ($m - $n + 1));\n  return \"0b\" . decbin($avg);\n\
    }\n\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !== \"0b1111100100\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(560, 851) !==\
    \ \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(185,\
    \ 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpfn_cgsdf.php:30\n\
    Stack trace:\n#0 /tmp/tmpfn_cgsdf.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpfn_cgsdf.php\
    \ on line 30\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// rounded_avg(1, 5) => \"\
    0b11\"\n// rounded_avg(7, 5) => -1\n// rounded_avg(10, 20) => \"0b1111\"\n// rounded_avg(20,\
    \ 33) => \"0b11010\"\nfunction rounded_avg($n, $m) {\n    if ($n > $m) {\n   \
    \     return -1;\n    }\n    $sum = 0;\n    for ($i = $n; $i <= $m; $i++) {\n\
    \        $sum += $i;\n    }\n    $avg = round($sum / ($m - $n + 1));\n    return\
    \ \"0b\" . decbin($avg);\n}\n\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !==\
    \ \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560,\
    \ 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpx5xisraz.php:30\n\
    Stack trace:\n#0 /tmp/tmpx5xisraz.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpx5xisraz.php\
    \ on line 30\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// rounded_avg(1, 5) => \"\
    0b11\"\n// rounded_avg(7, 5) => -1\n// rounded_avg(10, 20) => \"0b1111\"\n// rounded_avg(20,\
    \ 33) => \"0b11010\"\nfunction rounded_avg($n, $m) {\n    if ($n > $m) {\n   \
    \     return -1;\n    }\n    $sum = 0;\n    for ($i = $n; $i <= $m; $i++) {\n\
    \        $sum += $i;\n    }\n    $avg = round($sum / ($m - $n + 1));\n    return\
    \ \"0b\" . decbin($avg);\n}\n\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !==\
    \ \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560,\
    \ 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp5etb4d6b.php:30\n\
    Stack trace:\n#0 /tmp/tmp5etb4d6b.php(42): test()\n#1 {main}\n  thrown in /tmp/tmp5etb4d6b.php\
    \ on line 30\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// rounded_avg(1, 5) => \"\
    0b11\"\n// rounded_avg(7, 5) => -1\n// rounded_avg(10, 20) => \"0b1111\"\n// rounded_avg(20,\
    \ 33) => \"0b11010\"\nfunction rounded_avg($n, $m) {\n    if ($n > $m) {\n   \
    \     return -1;\n    }\n    $avg = round(($n + $m) / 2);\n    return \"0b\" .\
    \ decbin($avg);\n}\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !==\
    \ \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560,\
    \ 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmprubv1bpf.php:25\n\
    Stack trace:\n#0 /tmp/tmprubv1bpf.php(37): test()\n#1 {main}\n  thrown in /tmp/tmprubv1bpf.php\
    \ on line 25\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// rounded_avg(1, 5) => \"\
    0b11\"\n// rounded_avg(7, 5) => -1\n// rounded_avg(10, 20) => \"0b1111\"\n// rounded_avg(20,\
    \ 33) => \"0b11010\"\nfunction rounded_avg($n, $m) {\n    if ($n > $m) {\n   \
    \     return -1;\n    }\n    $sum = 0;\n    for ($i = $n; $i <= $m; $i++) {\n\
    \        $sum += $i;\n    }\n    $avg = round($sum / ($m - $n + 1));\n    return\
    \ \"0b\" . decbin($avg);\n}\n\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !==\
    \ \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560,\
    \ 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp8w0i55r7.php:30\n\
    Stack trace:\n#0 /tmp/tmp8w0i55r7.php(42): test()\n#1 {main}\n  thrown in /tmp/tmp8w0i55r7.php\
    \ on line 30\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// rounded_avg(1, 5) => \"\
    0b11\"\n// rounded_avg(7, 5) => -1\n// rounded_avg(10, 20) => \"0b1111\"\n// rounded_avg(20,\
    \ 33) => \"0b11010\"\nfunction rounded_avg($n, $m) {\n  if ($n > $m) {\n    return\
    \ -1;\n  }\n  $sum = 0;\n  for ($i = $n; $i <= $m; $i++) {\n    $sum += $i;\n\
    \  }\n  $avg = round($sum / ($m - $n + 1));\n  return \"0b\" . decbin($avg);\n\
    }\necho rounded_avg(1, 5) . \"\\n\";\necho rounded_avg(7, 5) . \"\\n\";\necho\
    \ rounded_avg(10, 20) . \"\\n\";\necho rounded_avg(20, 33) . \"\\n\";\nfunction\
    \ candidate(...$args) {\n    return rounded_avg(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(1, 5) !== \"0b11\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(7, 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(964, 977) !== \"0b1111001010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(996, 997) !== \"0b1111100100\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(560, 851) !== \"0b1011000010\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(185, 546) !==\
    \ \"0b101101110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(362,\
    \ 496) !== \"0b110101101\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(350, 902) !== \"0b1001110010\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(197, 233) !== \"0b11010111\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 5) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5, 1) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5, 5) !== \"0b101\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "0b11\n-1\n0b1111\n0b11011\n"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpmmjdkl8l.php:33\n\
    Stack trace:\n#0 /tmp/tmpmmjdkl8l.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpmmjdkl8l.php\
    \ on line 33\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// rounded_avg(1, 5) => \"\
    0b11\"\n// rounded_avg(7, 5) => -1\n// rounded_avg(10, 20) => \"0b1111\"\n// rounded_avg(20,\
    \ 33) => \"0b11010\"\nfunction rounded_avg($n, $m) {\n    if ($n > $m) {\n   \
    \     return -1;\n    }\n    $sum = 0;\n    for ($i = $n; $i <= $m; $i++) {\n\
    \        $sum += $i;\n    }\n    $avg = round($sum / ($m - $n + 1));\n    return\
    \ \"0b\" . decbin($avg);\n}\necho rounded_avg(1, 5) . \"\\n\";\necho rounded_avg(7,\
    \ 5) . \"\\n\";\necho rounded_avg(10, 20) . \"\\n\";\necho rounded_avg(20, 33)\
    \ . \"\\n\";\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !==\
    \ \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560,\
    \ 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "0b11\n-1\n0b1111\n0b11011\n"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp96swho31.php:33\n\
    Stack trace:\n#0 /tmp/tmp96swho31.php(45): test()\n#1 {main}\n  thrown in /tmp/tmp96swho31.php\
    \ on line 33\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// rounded_avg(1, 5) => \"\
    0b11\"\n// rounded_avg(7, 5) => -1\n// rounded_avg(10, 20) => \"0b1111\"\n// rounded_avg(20,\
    \ 33) => \"0b11010\"\nfunction rounded_avg($n, $m) {\n  if ($n > $m) {\n    return\
    \ -1;\n  }\n  $sum = 0;\n  for ($i = $n; $i <= $m; $i++) {\n    $sum += $i;\n\
    \  }\n  $avg = round($sum / ($m - $n + 1));\n  return \"0b\" . decbin($avg);\n\
    }\n\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !== \"0b1111100100\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(560, 851) !==\
    \ \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(185,\
    \ 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpa8hn23uw.php:30\n\
    Stack trace:\n#0 /tmp/tmpa8hn23uw.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpa8hn23uw.php\
    \ on line 30\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// rounded_avg(1, 5) => \"\
    0b11\"\n// rounded_avg(7, 5) => -1\n// rounded_avg(10, 20) => \"0b1111\"\n// rounded_avg(20,\
    \ 33) => \"0b11010\"\nfunction rounded_avg($n, $m) {\n    if ($n > $m) {\n   \
    \     return -1;\n    }\n    $sum = 0;\n    for ($i = $n; $i <= $m; $i++) {\n\
    \        $sum += $i;\n    }\n    $avg = round($sum / ($m - $n + 1));\n    return\
    \ \"0b\" . decbin($avg);\n}\n\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !==\
    \ \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560,\
    \ 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmppcw8emg0.php:30\n\
    Stack trace:\n#0 /tmp/tmppcw8emg0.php(42): test()\n#1 {main}\n  thrown in /tmp/tmppcw8emg0.php\
    \ on line 30\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// rounded_avg(1, 5) => \"\
    0b11\"\n// rounded_avg(7, 5) => -1\n// rounded_avg(10, 20) => \"0b1111\"\n// rounded_avg(20,\
    \ 33) => \"0b11010\"\nfunction rounded_avg($n, $m) {\n    $sum = 0;\n    $count\
    \ = 0;\n    for ($i = $n; $i <= $m; $i++) {\n        $sum += $i;\n        $count++;\n\
    \    }\n    if ($n > $m) {\n        return -1;\n    }\n    $avg = round($sum /\
    \ $count);\n    return decbin($avg);\n}\n\nfunction candidate(...$args) {\n  \
    \  return rounded_avg(...$args);\n}\n\nfunction test(): void {\n    if (candidate(1,\
    \ 5) !== \"0b11\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(7,\
    \ 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(964,\
    \ 977) !== \"0b1111001010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(996, 997) !== \"0b1111100100\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(560, 851) !== \"0b1011000010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(185, 546) !== \"0b101101110\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(362, 496) !== \"0b110101101\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(350, 902) !==\
    \ \"0b1001110010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(197,\
    \ 233) !== \"0b11010111\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(7, 5) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 1) !== -1) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5, 5) !== \"0b101\") { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpc_wdbr1u.php:30\n\
    Stack trace:\n#0 /tmp/tmpc_wdbr1u.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpc_wdbr1u.php\
    \ on line 30\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// rounded_avg(1, 5) => \"\
    0b11\"\n// rounded_avg(7, 5) => -1\n// rounded_avg(10, 20) => \"0b1111\"\n// rounded_avg(20,\
    \ 33) => \"0b11010\"\nfunction rounded_avg($n, $m) {\n    if ($n > $m) {\n   \
    \     return -1;\n    }\n    $sum = 0;\n    for ($i = $n; $i <= $m; $i++) {\n\
    \        $sum += $i;\n    }\n    $avg = round($sum / ($m - $n + 1));\n    return\
    \ \"0b\" . decbin($avg);\n}\n\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !==\
    \ \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560,\
    \ 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpx14pz_o8.php:30\n\
    Stack trace:\n#0 /tmp/tmpx14pz_o8.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpx14pz_o8.php\
    \ on line 30\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// rounded_avg(1, 5) => \"\
    0b11\"\n// rounded_avg(7, 5) => -1\n// rounded_avg(10, 20) => \"0b1111\"\n// rounded_avg(20,\
    \ 33) => \"0b11010\"\nfunction rounded_avg($n, $m) {\n    if ($n > $m) {\n   \
    \     return -1;\n    }\n    $sum = 0;\n    for ($i = $n; $i <= $m; $i++) {\n\
    \        $sum += $i;\n    }\n    $avg = round($sum / ($m - $n + 1));\n    return\
    \ \"0b\" . decbin($avg);\n}\n\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !==\
    \ \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560,\
    \ 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpaqala4kd.php:30\n\
    Stack trace:\n#0 /tmp/tmpaqala4kd.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpaqala4kd.php\
    \ on line 30\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// rounded_avg(1, 5) => \"\
    0b11\"\n// rounded_avg(7, 5) => -1\n// rounded_avg(10, 20) => \"0b1111\"\n// rounded_avg(20,\
    \ 33) => \"0b11010\"\nfunction rounded_avg($n, $m) {\n    if ($n > $m) {\n   \
    \     return -1;\n    }\n    $sum = 0;\n    for ($i = $n; $i <= $m; $i++) {\n\
    \        $sum += $i;\n    }\n    $avg = round($sum / ($m - $n + 1));\n    return\
    \ \"0b\" . decbin($avg);\n}\n\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !==\
    \ \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560,\
    \ 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpwgyvczqg.php:30\n\
    Stack trace:\n#0 /tmp/tmpwgyvczqg.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpwgyvczqg.php\
    \ on line 30\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// rounded_avg(1, 5) => \"\
    0b11\"\n// rounded_avg(7, 5) => -1\n// rounded_avg(10, 20) => \"0b1111\"\n// rounded_avg(20,\
    \ 33) => \"0b11010\"\nfunction rounded_avg($n, $m) {\n    if ($n > $m) return\
    \ -1;\n    $avg = round(($n + $m) / 2);\n    return decbin($avg);\n}\n\nfunction\
    \ candidate(...$args) {\n    return rounded_avg(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(1, 5) !== \"0b11\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(7, 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(964, 977) !== \"0b1111001010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(996, 997) !== \"0b1111100100\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(560, 851) !== \"0b1011000010\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(185, 546) !==\
    \ \"0b101101110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(362,\
    \ 496) !== \"0b110101101\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(350, 902) !== \"0b1001110010\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(197, 233) !== \"0b11010111\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 5) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5, 1) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5, 5) !== \"0b101\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpqt3mp8s3.php:22\n\
    Stack trace:\n#0 /tmp/tmpqt3mp8s3.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpqt3mp8s3.php\
    \ on line 22\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// rounded_avg(1, 5) => \"\
    0b11\"\n// rounded_avg(7, 5) => -1\n// rounded_avg(10, 20) => \"0b1111\"\n// rounded_avg(20,\
    \ 33) => \"0b11010\"\nfunction rounded_avg($n, $m) {\n    if ($n > $m) {\n   \
    \     return -1;\n    }\n    $sum = 0;\n    for ($i = $n; $i <= $m; $i++) {\n\
    \        $sum += $i;\n    }\n    $avg = round($sum / ($m - $n + 1));\n    return\
    \ \"0b\" . decbin($avg);\n}\n\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !==\
    \ \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560,\
    \ 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpdtd8xzjw.php:30\n\
    Stack trace:\n#0 /tmp/tmpdtd8xzjw.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpdtd8xzjw.php\
    \ on line 30\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// rounded_avg(1, 5) => \"\
    0b11\"\n// rounded_avg(7, 5) => -1\n// rounded_avg(10, 20) => \"0b1111\"\n// rounded_avg(20,\
    \ 33) => \"0b11010\"\nfunction rounded_avg($n, $m) {\n    if ($n > $m) {\n   \
    \     return -1;\n    }\n    $sum = 0;\n    for ($i = $n; $i <= $m; $i++) {\n\
    \        $sum += $i;\n    }\n    $avg = round($sum / ($m - $n + 1));\n    return\
    \ \"0b\" . decbin($avg);\n}\n\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !==\
    \ \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560,\
    \ 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmph02wq8l8.php:30\n\
    Stack trace:\n#0 /tmp/tmph02wq8l8.php(42): test()\n#1 {main}\n  thrown in /tmp/tmph02wq8l8.php\
    \ on line 30\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// rounded_avg(1, 5) => \"\
    0b11\"\n// rounded_avg(7, 5) => -1\n// rounded_avg(10, 20) => \"0b1111\"\n// rounded_avg(20,\
    \ 33) => \"0b11010\"\nfunction rounded_avg($n, $m) {\n  if ($n > $m) {\n    return\
    \ -1;\n  }\n  $sum = 0;\n  for ($i = $n; $i <= $m; $i++) {\n    $sum += $i;\n\
    \  }\n  $avg = round($sum / ($m - $n + 1));\n  return \"0b\" . decbin($avg);\n\
    }\n\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !== \"0b1111100100\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(560, 851) !==\
    \ \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(185,\
    \ 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\") { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpxjs6b82x.php:30\n\
    Stack trace:\n#0 /tmp/tmpxjs6b82x.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpxjs6b82x.php\
    \ on line 30\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// rounded_avg(1, 5) => \"\
    0b11\"\n// rounded_avg(7, 5) => -1\n// rounded_avg(10, 20) => \"0b1111\"\n// rounded_avg(20,\
    \ 33) => \"0b11010\"\nfunction rounded_avg($n, $m) {\n  if ($n > $m) {\n    return\
    \ -1;\n  }\n  $sum = 0;\n  for ($i = $n; $i <= $m; $i++) {\n    $sum += $i;\n\
    \  }\n  $avg = round($sum / ($m - $n + 1));\n  return \"0b\" . decbin($avg);\n\
    }\n\necho rounded_avg(1, 5) . \"\\n\";\necho rounded_avg(7, 5) . \"\\n\";\necho\
    \ rounded_avg(10, 20) . \"\\n\";\necho rounded_avg(20, 33) . \"\\n\";\nfunction\
    \ candidate(...$args) {\n    return rounded_avg(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(1, 5) !== \"0b11\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(7, 13) !== \"0b1010\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(964, 977) !== \"0b1111001010\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(996, 997) !== \"0b1111100100\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(560, 851) !== \"0b1011000010\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(185, 546) !==\
    \ \"0b101101110\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(362,\
    \ 496) !== \"0b110101101\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(350, 902) !== \"0b1001110010\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(197, 233) !== \"0b11010111\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7, 5) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5, 1) !== -1) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(5, 5) !== \"0b101\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "0b11\n-1\n0b1111\n0b11011\n"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp2r30fil7.php:34\n\
    Stack trace:\n#0 /tmp/tmp2r30fil7.php(46): test()\n#1 {main}\n  thrown in /tmp/tmp2r30fil7.php\
    \ on line 34\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// rounded_avg(1, 5) => \"\
    0b11\"\n// rounded_avg(7, 5) => -1\n// rounded_avg(10, 20) => \"0b1111\"\n// rounded_avg(20,\
    \ 33) => \"0b11010\"\nfunction rounded_avg($n, $m) {\n    if ($n > $m) {\n   \
    \     return -1;\n    }\n    $sum = 0;\n    for ($i = $n; $i <= $m; $i++) {\n\
    \        $sum += $i;\n    }\n    $avg = round($sum / ($m - $n + 1));\n    return\
    \ \"0b\" . decbin($avg);\n}\n\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !==\
    \ \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560,\
    \ 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpye0omfvl.php:30\n\
    Stack trace:\n#0 /tmp/tmpye0omfvl.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpye0omfvl.php\
    \ on line 30\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given two positive integers n and m, and your task is\
    \ to compute the\n// average of the integers from n through m (including n and\
    \ m). \n// Round the answer to the nearest integer and convert that to binary.\n\
    // If n is greater than m, return -1.\n// Example:\n// rounded_avg(1, 5) => \"\
    0b11\"\n// rounded_avg(7, 5) => -1\n// rounded_avg(10, 20) => \"0b1111\"\n// rounded_avg(20,\
    \ 33) => \"0b11010\"\nfunction rounded_avg($n, $m) {\n    if ($n > $m) {\n   \
    \     return -1;\n    }\n    $sum = 0;\n    for ($i = $n; $i <= $m; $i++) {\n\
    \        $sum += $i;\n    }\n    $avg = round($sum / ($m - $n + 1));\n    return\
    \ \"0b\" . decbin($avg);\n}\n\nfunction candidate(...$args) {\n    return rounded_avg(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(1, 5) !== \"0b11\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(7, 13) !== \"0b1010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(964, 977) !== \"0b1111001010\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(996, 997) !==\
    \ \"0b1111100100\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(560,\
    \ 851) !== \"0b1011000010\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(185, 546) !== \"0b101101110\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(362, 496) !== \"0b110101101\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(350, 902) !== \"0b1001110010\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(197, 233) !== \"0b11010111\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7, 5) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 1) !== -1)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5, 5) !== \"0b101\"\
    ) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpwyyhqek6.php:30\n\
    Stack trace:\n#0 /tmp/tmpwyyhqek6.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpwyyhqek6.php\
    \ on line 30\n"
  exit_code: 255
  status: Exception

name: HumanEval_92_any_int
language: php
results:
- program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// any_int(5,\
    \ 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E\
    \ True\n// any_int(3.6, -2.2, 2) \u279E False\nfunction any_int($x, $y, $z) {\n\
    \treturn (is_int($x) && is_int($y) && is_int($z)) && ($x + $y == $z || $x + $z\
    \ == $y || $y + $z == $x);\n}\necho any_int(5, 2, 7);\necho any_int(3, 2, 2);\n\
    echo any_int(3, -2, 1);\necho any_int(3.6, -2.2, 2);\nfunction candidate(...$args)\
    \ {\n    return any_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2,\
    \ 3, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.5,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1.5,\
    \ 5, 3.5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 6, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2,\
    \ 2.2, 2.2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: '11'
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// any_int(5,\
    \ 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E\
    \ True\n// any_int(3.6, -2.2, 2) \u279E False\nfunction any_int($x, $y, $z) {\n\
    \tif (is_int($x) && is_int($y) && is_int($z)) {\n\t\tif ($x + $y == $z || $x +\
    \ $z == $y || $y + $z == $x) {\n\t\t\treturn true;\n\t\t} else {\n\t\t\treturn\
    \ false;\n\t\t}\n\t} else {\n\t\treturn false;\n\t}\n}\necho any_int(5, 2, 7)\
    \ . \"\\n\";\necho any_int(3, 2, 2) . \"\\n\";\necho any_int(3, -2, 1) . \"\\\
    n\";\necho any_int(3.6, -2.2, 2) . \"\\n\";\nfunction candidate(...$args) {\n\
    \    return any_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2,\
    \ 3, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.5,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1.5,\
    \ 5, 3.5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 6, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2,\
    \ 2.2, 2.2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "1\n\n1\n\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// any_int(5,\
    \ 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E\
    \ True\n// any_int(3.6, -2.2, 2) \u279E False\nfunction any_int($x, $y, $z) {\n\
    \tif (is_int($x) && is_int($y) && is_int($z)) {\n\t\tif ($x + $y == $z || $x +\
    \ $z == $y || $y + $z == $x) {\n\t\t\treturn true;\n\t\t} else {\n\t\t\treturn\
    \ false;\n\t\t}\n\t} else {\n\t\treturn false;\n\t}\n}\necho any_int(5, 2, 7);\n\
    echo \"<br>\";\necho any_int(3, 2, 2);\necho \"<br>\";\necho any_int(3, -2, 1);\n\
    echo \"<br>\";\necho any_int(3.6, -2.2, 2);\nfunction candidate(...$args) {\n\
    \    return any_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2,\
    \ 3, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.5,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1.5,\
    \ 5, 3.5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 6, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2,\
    \ 2.2, 2.2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: 1<br><br>1<br>
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// any_int(5,\
    \ 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E\
    \ True\n// any_int(3.6, -2.2, 2) \u279E False\nfunction any_int($x, $y, $z) {\n\
    \    if (is_int($x) && is_int($y) && is_int($z)) {\n        if ($x + $y == $z\
    \ || $x + $z == $y || $y + $z == $x) {\n            return true;\n        } else\
    \ {\n            return false;\n        }\n    } else {\n        return false;\n\
    \    }\n}\necho any_int(5, 2, 7);\necho any_int(3, 2, 2);\necho any_int(3, -2,\
    \ 1);\necho any_int(3.6, -2.2, 2);\nfunction candidate(...$args) {\n    return\
    \ any_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 3, 1)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.5,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1.5,\
    \ 5, 3.5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 6, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2,\
    \ 2.2, 2.2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: '11'
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// any_int(5,\
    \ 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E\
    \ True\n// any_int(3.6, -2.2, 2) \u279E False\nfunction any_int($x, $y, $z) {\n\
    \tif ($x == $y + $z || $y == $x + $z || $z == $x + $y) {\n\t\treturn true;\n\t\
    } else {\n\t\treturn false;\n\t}\n}\necho any_int(3, -2, 1);\nfunction candidate(...$args)\
    \ {\n    return any_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2,\
    \ 3, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.5,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1.5,\
    \ 5, 3.5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 6, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2,\
    \ 2.2, 2.2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: '1'
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpx3956m8b.php:25\n\
    Stack trace:\n#0 /tmp/tmpx3956m8b.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpx3956m8b.php\
    \ on line 25\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// any_int(5,\
    \ 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E\
    \ True\n// any_int(3.6, -2.2, 2) \u279E False\nfunction any_int($x, $y, $z) {\n\
    \tif (is_int($x) && is_int($y) && is_int($z)) {\n\t\tif ($x + $y == $z || $x +\
    \ $z == $y || $y + $z == $x) {\n\t\t\treturn true;\n\t\t} else {\n\t\t\treturn\
    \ false;\n\t\t}\n\t} else {\n\t\treturn false;\n\t}\n}\necho any_int(3, -2, 1);\n\
    function candidate(...$args) {\n    return any_int(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(2, 3, 1) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2.5, 2, 3) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1.5, 5, 3.5) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 6, 2) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4, 2, 2) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2.2, 2.2, 2.2) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-4, 6, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3, 4, 7) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3.0, 4, 7) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: '1'
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// any_int(5,\
    \ 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E\
    \ True\n// any_int(3.6, -2.2, 2) \u279E False\nfunction any_int($x, $y, $z) {\n\
    \tif ($x == $y + $z || $y == $x + $z || $z == $x + $y) {\n\t\treturn true;\n\t\
    } else {\n\t\treturn false;\n\t}\n}\necho any_int(5, 2, 7) . \"\\n\";\necho any_int(3,\
    \ 2, 2) . \"\\n\";\necho any_int(3, -2, 1) . \"\\n\";\necho any_int(3.6, -2.2,\
    \ 2) . \"\\n\";\nfunction candidate(...$args) {\n    return any_int(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2, 3, 1) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2.5, 2, 3) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(1.5, 5, 3.5) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 6, 2) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 2, 2) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2, 2.2, 2.2)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "1\n\n1\n\n"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp8t2fyc4v.php:28\n\
    Stack trace:\n#0 /tmp/tmp8t2fyc4v.php(38): test()\n#1 {main}\n  thrown in /tmp/tmp8t2fyc4v.php\
    \ on line 28\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// any_int(5,\
    \ 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E\
    \ True\n// any_int(3.6, -2.2, 2) \u279E False\nfunction any_int($x, $y, $z) {\n\
    \tif (is_int($x) && is_int($y) && is_int($z)) {\n\t\tif ($x + $y == $z || $x +\
    \ $z == $y || $y + $z == $x) {\n\t\t\treturn true;\n\t\t} else {\n\t\t\treturn\
    \ false;\n\t\t}\n\t} else {\n\t\treturn false;\n\t}\n}\necho any_int(5, 2, 7)\
    \ . \"<br>\";\necho any_int(3, 2, 2) . \"<br>\";\necho any_int(3, -2, 1) . \"\
    <br>\";\necho any_int(3.6, -2.2, 2) . \"<br>\";\nfunction candidate(...$args)\
    \ {\n    return any_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2,\
    \ 3, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.5,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1.5,\
    \ 5, 3.5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 6, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2,\
    \ 2.2, 2.2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: 1<br><br>1<br><br>
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// any_int(5,\
    \ 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E\
    \ True\n// any_int(3.6, -2.2, 2) \u279E False\nfunction any_int($x, $y, $z) {\n\
    \tif (is_int($x) && is_int($y) && is_int($z)) {\n\t\tif ($x + $y == $z || $x +\
    \ $z == $y || $y + $z == $x) {\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n\
    }\necho any_int(5, 2, 7);\necho any_int(3, 2, 2);\necho any_int(3, -2, 1);\necho\
    \ any_int(3.6, -2.2, 2);\nfunction candidate(...$args) {\n    return any_int(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2, 3, 1) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2.5, 2, 3) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(1.5, 5, 3.5) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 6, 2) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 2, 2) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2, 2.2, 2.2)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: '11'
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// any_int(5,\
    \ 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E\
    \ True\n// any_int(3.6, -2.2, 2) \u279E False\nfunction any_int($x, $y, $z) {\n\
    \tif (($x + $y == $z) || ($x + $z == $y) || ($y + $z == $x)) {\n\t\treturn true;\n\
    \t} else {\n\t\treturn false;\n\t}\n}\necho any_int(3, -2, 1);\nfunction candidate(...$args)\
    \ {\n    return any_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2,\
    \ 3, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.5,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1.5,\
    \ 5, 3.5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 6, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2,\
    \ 2.2, 2.2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: '1'
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp9o8qfgsj.php:25\n\
    Stack trace:\n#0 /tmp/tmp9o8qfgsj.php(35): test()\n#1 {main}\n  thrown in /tmp/tmp9o8qfgsj.php\
    \ on line 25\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// any_int(5,\
    \ 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E\
    \ True\n// any_int(3.6, -2.2, 2) \u279E False\nfunction any_int($x, $y, $z) {\n\
    \tif (is_int($x) && is_int($y) && is_int($z)) {\n\t\tif ($x == $y + $z || $y ==\
    \ $x + $z || $z == $x + $y) {\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n\
    }\necho any_int(5, 2, 7);\necho any_int(3, 2, 2);\necho any_int(3, -2, 1);\necho\
    \ any_int(3.6, -2.2, 2);\nfunction candidate(...$args) {\n    return any_int(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2, 3, 1) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2.5, 2, 3) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(1.5, 5, 3.5) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 6, 2) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 2, 2) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2, 2.2, 2.2)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: '11'
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// any_int(5,\
    \ 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E\
    \ True\n// any_int(3.6, -2.2, 2) \u279E False\nfunction any_int($x, $y, $z) {\n\
    \treturn is_int($x) && is_int($y) && is_int($z) && ($x + $y == $z || $x + $z ==\
    \ $y || $y + $z == $x);\n}\nfunction candidate(...$args) {\n    return any_int(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2, 3, 1) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2.5, 2, 3) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(1.5, 5, 3.5) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 6, 2) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 2, 2) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2, 2.2, 2.2)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// any_int(5,\
    \ 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E\
    \ True\n// any_int(3.6, -2.2, 2) \u279E False\nfunction any_int($x, $y, $z) {\n\
    \tif (($x + $y == $z) || ($x + $z == $y) || ($y + $z == $x)) {\n\t\treturn true;\n\
    \t} else {\n\t\treturn false;\n\t}\n}\necho any_int(5, 2, 7) . \"\\n\";\necho\
    \ any_int(3, 2, 2) . \"\\n\";\necho any_int(3, -2, 1) . \"\\n\";\necho any_int(3.6,\
    \ -2.2, 2) . \"\\n\";\nfunction candidate(...$args) {\n    return any_int(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2, 3, 1) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2.5, 2, 3) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(1.5, 5, 3.5) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 6, 2) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 2, 2) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2, 2.2, 2.2)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "1\n\n1\n\n"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpf_2udmye.php:28\n\
    Stack trace:\n#0 /tmp/tmpf_2udmye.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpf_2udmye.php\
    \ on line 28\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// any_int(5,\
    \ 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E\
    \ True\n// any_int(3.6, -2.2, 2) \u279E False\nfunction any_int($x, $y, $z) {\n\
    \tif (is_int($x) && is_int($y) && is_int($z)) {\n\t\tif ($x == $y + $z || $y ==\
    \ $x + $z || $z == $x + $y) {\n\t\t\treturn true;\n\t\t} else {\n\t\t\treturn\
    \ false;\n\t\t}\n\t} else {\n\t\treturn false;\n\t}\n}\necho any_int(3, -2, 1);\n\
    function candidate(...$args) {\n    return any_int(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(2, 3, 1) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2.5, 2, 3) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1.5, 5, 3.5) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 6, 2) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4, 2, 2) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2.2, 2.2, 2.2) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-4, 6, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3, 4, 7) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3.0, 4, 7) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: '1'
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// any_int(5,\
    \ 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E\
    \ True\n// any_int(3.6, -2.2, 2) \u279E False\nfunction any_int($x, $y, $z) {\n\
    \tif(is_int($x) && is_int($y) && is_int($z)) {\n\t\tif($x == $y + $z || $y ==\
    \ $x + $z || $z == $x + $y) {\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n\
    }\necho any_int(5, 2, 7);\necho \"<br>\";\necho any_int(3, 2, 2);\necho \"<br>\"\
    ;\necho any_int(3, -2, 1);\necho \"<br>\";\necho any_int(3.6, -2.2, 2);\nfunction\
    \ candidate(...$args) {\n    return any_int(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(2, 3, 1) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2.5, 2, 3) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1.5, 5, 3.5) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 6, 2) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4, 2, 2) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2.2, 2.2, 2.2) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-4, 6, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3, 4, 7) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3.0, 4, 7) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: 1<br><br>1<br>
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// any_int(5,\
    \ 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E\
    \ True\n// any_int(3.6, -2.2, 2) \u279E False\nfunction any_int($x, $y, $z) {\n\
    \tif (is_int($x) && is_int($y) && is_int($z)) {\n\t\tif ($x + $y == $z || $x +\
    \ $z == $y || $y + $z == $x) {\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n\
    }\necho any_int(5, 2, 7);\necho any_int(3, 2, 2);\necho any_int(3, -2, 1);\necho\
    \ any_int(3.6, -2.2, 2);\nfunction candidate(...$args) {\n    return any_int(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2, 3, 1) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2.5, 2, 3) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(1.5, 5, 3.5) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 6, 2) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 2, 2) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2, 2.2, 2.2)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: '11'
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// any_int(5,\
    \ 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E\
    \ True\n// any_int(3.6, -2.2, 2) \u279E False\nfunction any_int($x, $y, $z) {\n\
    \tif (is_int($x) && is_int($y) && is_int($z)) {\n\t\tif ($x + $y == $z || $x +\
    \ $z == $y || $y + $z == $x) {\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n\
    }\necho any_int(5, 2, 7) . PHP_EOL;\necho any_int(3, 2, 2) . PHP_EOL;\necho any_int(3,\
    \ -2, 1) . PHP_EOL;\necho any_int(3.6, -2.2, 2) . PHP_EOL;\nfunction candidate(...$args)\
    \ {\n    return any_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2,\
    \ 3, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.5,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1.5,\
    \ 5, 3.5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 6, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2,\
    \ 2.2, 2.2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "1\n\n1\n\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// any_int(5,\
    \ 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E\
    \ True\n// any_int(3.6, -2.2, 2) \u279E False\nfunction any_int($x, $y, $z) {\n\
    \tif (is_int($x) && is_int($y) && is_int($z)) {\n\t\tif ($x == $y + $z || $y ==\
    \ $x + $z || $z == $x + $y) {\n\t\t\treturn true;\n\t\t} else {\n\t\t\treturn\
    \ false;\n\t\t}\n\t} else {\n\t\treturn false;\n\t}\n}\necho any_int(5, 2, 7);\n\
    echo any_int(3, 2, 2);\necho any_int(3, -2, 1);\necho any_int(3.6, -2.2, 2);\n\
    function candidate(...$args) {\n    return any_int(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(2, 3, 1) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2.5, 2, 3) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1.5, 5, 3.5) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 6, 2) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4, 2, 2) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2.2, 2.2, 2.2) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-4, 6, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3, 4, 7) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3.0, 4, 7) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: '11'
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// any_int(5,\
    \ 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E\
    \ True\n// any_int(3.6, -2.2, 2) \u279E False\nfunction any_int($x, $y, $z) {\n\
    \    return (is_int($x) && is_int($y) && is_int($z)) && ($x + $y == $z || $x +\
    \ $z == $y || $y + $z == $x);\n}\nfunction candidate(...$args) {\n    return any_int(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2, 3, 1) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2.5, 2, 3) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(1.5, 5, 3.5) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 6, 2) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 2, 2) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2, 2.2, 2.2)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// any_int(5,\
    \ 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E\
    \ True\n// any_int(3.6, -2.2, 2) \u279E False\nfunction any_int($x, $y, $z) {\n\
    \tif (is_int($x) && is_int($y) && is_int($z)) {\n\t\tif ($x == $y + $z || $y ==\
    \ $x + $z || $z == $x + $y) {\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n\
    }\necho any_int(5, 2, 7);\necho any_int(3, 2, 2);\necho any_int(3, -2, 1);\necho\
    \ any_int(3.6, -2.2, 2);\nfunction candidate(...$args) {\n    return any_int(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2, 3, 1) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2.5, 2, 3) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(1.5, 5, 3.5) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 6, 2) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 2, 2) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2, 2.2, 2.2)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: '11'
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// any_int(5,\
    \ 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E\
    \ True\n// any_int(3.6, -2.2, 2) \u279E False\nfunction any_int($x, $y, $z) {\n\
    \tif (is_int($x) && is_int($y) && is_int($z)) {\n\t\tif ($x + $y == $z || $x +\
    \ $z == $y || $y + $z == $x) {\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n\
    }\necho any_int(5, 2, 7) . \"\\n\";\necho any_int(3, 2, 2) . \"\\n\";\necho any_int(3,\
    \ -2, 1) . \"\\n\";\necho any_int(3.6, -2.2, 2) . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return any_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2,\
    \ 3, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.5,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1.5,\
    \ 5, 3.5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 6, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2,\
    \ 2.2, 2.2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "1\n\n1\n\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// any_int(5,\
    \ 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E\
    \ True\n// any_int(3.6, -2.2, 2) \u279E False\nfunction any_int($x, $y, $z) {\n\
    \tif (is_int($x) && is_int($y) && is_int($z)) {\n\t\tif ($x == $y + $z || $y ==\
    \ $x + $z || $z == $x + $y) {\n\t\t\treturn true;\n\t\t} else {\n\t\t\treturn\
    \ false;\n\t\t}\n\t} else {\n\t\treturn false;\n\t}\n}\necho any_int(3, -2, 1);\n\
    function candidate(...$args) {\n    return any_int(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(2, 3, 1) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2.5, 2, 3) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1.5, 5, 3.5) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 6, 2) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4, 2, 2) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2.2, 2.2, 2.2) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-4, 6, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3, 4, 7) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3.0, 4, 7) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: '1'
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// any_int(5,\
    \ 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E\
    \ True\n// any_int(3.6, -2.2, 2) \u279E False\nfunction any_int($x, $y, $z) {\n\
    \    if (is_int($x) && is_int($y) && is_int($z)) {\n        if ($x + $y == $z\
    \ || $x + $z == $y || $y + $z == $x) {\n            return true;\n        } else\
    \ {\n            return false;\n        }\n    } else {\n        return false;\n\
    \    }\n}\necho any_int(5, 2, 7);\necho \"<br>\";\necho any_int(3, 2, 2);\necho\
    \ \"<br>\";\necho any_int(3, -2, 1);\necho \"<br>\";\necho any_int(3.6, -2.2,\
    \ 2);\nfunction candidate(...$args) {\n    return any_int(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(2, 3, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2.5, 2, 3) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1.5, 5, 3.5) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 6, 2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4, 2, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2.2, 2.2, 2.2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-4, 6, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3, 4, 7) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3.0, 4, 7) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: 1<br><br>1<br>
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// any_int(5,\
    \ 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E\
    \ True\n// any_int(3.6, -2.2, 2) \u279E False\nfunction any_int($x, $y, $z) {\n\
    \    if (is_int($x) && is_int($y) && is_int($z)) {\n        if ($x + $y == $z\
    \ || $x + $z == $y || $y + $z == $x) {\n            return true;\n        } else\
    \ {\n            return false;\n        }\n    } else {\n        return false;\n\
    \    }\n}\necho any_int(5, 2, 7) . \"<br>\";\necho any_int(3, 2, 2) . \"<br>\"\
    ;\necho any_int(3, -2, 1) . \"<br>\";\necho any_int(3.6, -2.2, 2) . \"<br>\";\n\
    function candidate(...$args) {\n    return any_int(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(2, 3, 1) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2.5, 2, 3) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1.5, 5, 3.5) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 6, 2) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4, 2, 2) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2.2, 2.2, 2.2) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-4, 6, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3, 4, 7) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3.0, 4, 7) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: 1<br><br>1<br><br>
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// any_int(5,\
    \ 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E\
    \ True\n// any_int(3.6, -2.2, 2) \u279E False\nfunction any_int($x, $y, $z) {\n\
    \tif (is_int($x) && is_int($y) && is_int($z)) {\n\t\tif ($x + $y == $z || $x +\
    \ $z == $y || $y + $z == $x) {\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n\
    }\necho any_int(5, 2, 7);\necho any_int(3, 2, 2);\necho any_int(3, -2, 1);\necho\
    \ any_int(3.6, -2.2, 2);\nfunction candidate(...$args) {\n    return any_int(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2, 3, 1) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2.5, 2, 3) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(1.5, 5, 3.5) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 6, 2) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 2, 2) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2, 2.2, 2.2)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: '11'
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// any_int(5,\
    \ 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E\
    \ True\n// any_int(3.6, -2.2, 2) \u279E False\nfunction any_int($x, $y, $z) {\n\
    \tif (is_int($x) && is_int($y) && is_int($z)) {\n\t\tif ($x == $y + $z || $y ==\
    \ $x + $z || $z == $x + $y) {\n\t\t\treturn true;\n\t\t} else {\n\t\t\treturn\
    \ false;\n\t\t}\n\t} else {\n\t\treturn false;\n\t}\n}\necho any_int(5, 2, 7)\
    \ . \"\\n\";\necho any_int(3, 2, 2) . \"\\n\";\necho any_int(3, -2, 1) . \"\\\
    n\";\necho any_int(3.6, -2.2, 2) . \"\\n\";\nfunction candidate(...$args) {\n\
    \    return any_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2,\
    \ 3, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.5,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1.5,\
    \ 5, 3.5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 6, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2,\
    \ 2.2, 2.2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "1\n\n1\n\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// any_int(5,\
    \ 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E\
    \ True\n// any_int(3.6, -2.2, 2) \u279E False\nfunction any_int($x, $y, $z) {\n\
    \tif(is_int($x) && is_int($y) && is_int($z)) {\n\t\tif($x + $y == $z || $x + $z\
    \ == $y || $y + $z == $x) {\n\t\t\treturn true;\n\t\t} else {\n\t\t\treturn false;\n\
    \t\t}\n\t} else {\n\t\treturn false;\n\t}\n}\necho any_int(5, 2, 7);\necho any_int(3,\
    \ 2, 2);\necho any_int(3, -2, 1);\necho any_int(3.6, -2.2, 2);\nfunction candidate(...$args)\
    \ {\n    return any_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2,\
    \ 3, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.5,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1.5,\
    \ 5, 3.5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 6, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2,\
    \ 2.2, 2.2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: '11'
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// any_int(5,\
    \ 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E\
    \ True\n// any_int(3.6, -2.2, 2) \u279E False\nfunction any_int($x, $y, $z) {\n\
    \tif (is_int($x) && is_int($y) && is_int($z)) {\n\t\tif ($x + $y == $z || $x +\
    \ $z == $y || $y + $z == $x) {\n\t\t\treturn true;\n\t\t} else {\n\t\t\treturn\
    \ false;\n\t\t}\n\t} else {\n\t\treturn false;\n\t}\n}\necho any_int(5, 2, 7)\
    \ . \"<br>\";\necho any_int(3, 2, 2) . \"<br>\";\necho any_int(3, -2, 1) . \"\
    <br>\";\necho any_int(3.6, -2.2, 2) . \"<br>\";\nfunction candidate(...$args)\
    \ {\n    return any_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2,\
    \ 3, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.5,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1.5,\
    \ 5, 3.5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 6, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2,\
    \ 2.2, 2.2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: 1<br><br>1<br><br>
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// any_int(5,\
    \ 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E\
    \ True\n// any_int(3.6, -2.2, 2) \u279E False\nfunction any_int($x, $y, $z) {\n\
    \tif ($x == $y + $z || $y == $x + $z || $z == $x + $y) {\n\t\treturn true;\n\t\
    } else {\n\t\treturn false;\n\t}\n}\necho any_int(5, 2, 7);\necho \"<br>\";\n\
    echo any_int(3, 2, 2);\necho \"<br>\";\necho any_int(3, -2, 1);\necho \"<br>\"\
    ;\necho any_int(3.6, -2.2, 2);\nfunction candidate(...$args) {\n    return any_int(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2, 3, 1) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2.5, 2, 3) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(1.5, 5, 3.5) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 6, 2) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 2, 2) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2, 2.2, 2.2)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: 1<br><br>1<br>
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpo5enilc5.php:31\n\
    Stack trace:\n#0 /tmp/tmpo5enilc5.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpo5enilc5.php\
    \ on line 31\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// any_int(5,\
    \ 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E\
    \ True\n// any_int(3.6, -2.2, 2) \u279E False\nfunction any_int($x, $y, $z) {\n\
    \    if (is_int($x) && is_int($y) && is_int($z)) {\n        if ($x + $y == $z\
    \ || $x + $z == $y || $y + $z == $x) {\n            return true;\n        } else\
    \ {\n            return false;\n        }\n    } else {\n        return false;\n\
    \    }\n}\necho any_int(5, 2, 7) . \"<br>\";\necho any_int(3, 2, 2) . \"<br>\"\
    ;\necho any_int(3, -2, 1) . \"<br>\";\necho any_int(3.6, -2.2, 2) . \"<br>\";\n\
    function candidate(...$args) {\n    return any_int(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(2, 3, 1) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2.5, 2, 3) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1.5, 5, 3.5) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 6, 2) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4, 2, 2) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2.2, 2.2, 2.2) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-4, 6, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3, 4, 7) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3.0, 4, 7) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: 1<br><br>1<br><br>
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// any_int(5,\
    \ 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E\
    \ True\n// any_int(3.6, -2.2, 2) \u279E False\nfunction any_int($x, $y, $z) {\n\
    \tif (is_int($x) && is_int($y) && is_int($z)) {\n\t\tif ($x + $y == $z || $x +\
    \ $z == $y || $y + $z == $x) {\n\t\t\treturn true;\n\t\t} else {\n\t\t\treturn\
    \ false;\n\t\t}\n\t} else {\n\t\treturn false;\n\t}\n}\necho any_int(5, 2, 7);\n\
    echo any_int(3, 2, 2);\necho any_int(3, -2, 1);\necho any_int(3.6, -2.2, 2);\n\
    function candidate(...$args) {\n    return any_int(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(2, 3, 1) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2.5, 2, 3) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1.5, 5, 3.5) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 6, 2) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4, 2, 2) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2.2, 2.2, 2.2) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-4, 6, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3, 4, 7) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3.0, 4, 7) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: '11'
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// any_int(5,\
    \ 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E\
    \ True\n// any_int(3.6, -2.2, 2) \u279E False\nfunction any_int($x, $y, $z) {\n\
    \tif (is_int($x) && is_int($y) && is_int($z)) {\n\t\tif ($x == $y + $z || $y ==\
    \ $x + $z || $z == $x + $y) {\n\t\t\treturn true;\n\t\t} else {\n\t\t\treturn\
    \ false;\n\t\t}\n\t} else {\n\t\treturn false;\n\t}\n}\necho any_int(5, 2, 7)\
    \ . \"<br>\";\necho any_int(3, 2, 2) . \"<br>\";\necho any_int(3, -2, 1) . \"\
    <br>\";\necho any_int(3.6, -2.2, 2) . \"<br>\";\nfunction candidate(...$args)\
    \ {\n    return any_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2,\
    \ 3, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.5,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1.5,\
    \ 5, 3.5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 6, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2,\
    \ 2.2, 2.2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: 1<br><br>1<br><br>
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// any_int(5,\
    \ 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E\
    \ True\n// any_int(3.6, -2.2, 2) \u279E False\nfunction any_int($x, $y, $z) {\n\
    \tif (is_int($x) && is_int($y) && is_int($z)) {\n\t\tif ($x + $y == $z || $x +\
    \ $z == $y || $y + $z == $x) {\n\t\t\treturn true;\n\t\t} else {\n\t\t\treturn\
    \ false;\n\t\t}\n\t} else {\n\t\treturn false;\n\t}\n}\necho any_int(5, 2, 7);\n\
    echo \"<br>\";\necho any_int(3, 2, 2);\necho \"<br>\";\necho any_int(3, -2, 1);\n\
    echo \"<br>\";\necho any_int(3.6, -2.2, 2);\nfunction candidate(...$args) {\n\
    \    return any_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2,\
    \ 3, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.5,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1.5,\
    \ 5, 3.5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 6, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2,\
    \ 2.2, 2.2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: 1<br><br>1<br>
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// any_int(5,\
    \ 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E\
    \ True\n// any_int(3.6, -2.2, 2) \u279E False\nfunction any_int($x, $y, $z) {\n\
    \tif (is_int($x) && is_int($y) && is_int($z)) {\n\t\tif ($x + $y == $z || $x +\
    \ $z == $y || $y + $z == $x) {\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n\
    }\necho any_int(5, 2, 7);\necho any_int(3, 2, 2);\necho any_int(3, -2, 1);\necho\
    \ any_int(3.6, -2.2, 2);\nfunction candidate(...$args) {\n    return any_int(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2, 3, 1) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2.5, 2, 3) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(1.5, 5, 3.5) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 6, 2) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 2, 2) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2, 2.2, 2.2)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: '11'
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// any_int(5,\
    \ 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E\
    \ True\n// any_int(3.6, -2.2, 2) \u279E False\nfunction any_int($x, $y, $z) {\n\
    \tif (is_int($x) && is_int($y) && is_int($z)) {\n\t\tif ($x == $y + $z || $y ==\
    \ $x + $z || $z == $x + $y) {\n\t\t\treturn true;\n\t\t} else {\n\t\t\treturn\
    \ false;\n\t\t}\n\t} else {\n\t\treturn false;\n\t}\n}\necho any_int(5, 2, 7);\n\
    echo \"<br>\";\necho any_int(3, 2, 2);\necho \"<br>\";\necho any_int(3, -2, 1);\n\
    echo \"<br>\";\necho any_int(3.6, -2.2, 2);\necho \"<br>\";\necho any_int(3.6,\
    \ -2.2, 2.1);\necho \"<br>\";\necho any_int(3.6, -2.2, 2.2);\necho \"<br>\";\n\
    echo any_int(3.6, -2.2, 2.3);\necho \"<br>\";\necho any_int(3.6, -2.2, 2.4);\n\
    echo \"<br>\";\necho any_int(3.6, -2.2, 2.5);\necho \"<br>\";\necho any_int(3.6,\
    \ -2.2, 2.6);\necho \"<br>\";\necho any_int(3.6, -2.2, 2.7);\necho \"<br>\";\n\
    echo any_int(3.6, -2.2, 2.8);\necho \"<br>\";\necho any_int(3.6, -2.2, 2.9);\n\
    echo \"<br>\";\necho any_int(3.6, -2.2, 3);\necho \"<br>\";\necho any_int(3.6,\
    \ -2.2, 3.1);\necho \"<br>\";\necho any_int(3.6, -2.2, 3.2);\necho \"<br>\";\n\
    echo any_int(3.6, -2.2, 3.3);\necho \"<br>\";\necho any_int(3.6, -2.2\nfunction\
    \ candidate(...$args) {\n    return any_int(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(2, 3, 1) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2.5, 2, 3) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1.5, 5, 3.5) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 6, 2) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4, 2, 2) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2.2, 2.2, 2.2) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-4, 6, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3, 4, 7) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3.0, 4, 7) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Parse error:  syntax error, unexpected token \"function\", expecting\
    \ \")\" in /tmp/tmpjh9vpkhl.php on line 56\n"
  exit_code: 255
  status: SyntaxError
- program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// any_int(5,\
    \ 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E\
    \ True\n// any_int(3.6, -2.2, 2) \u279E False\nfunction any_int($x, $y, $z) {\n\
    \tif (($x == $y + $z || $y == $x + $z || $z == $x + $y) && is_int($x) && is_int($y)\
    \ && is_int($z)) {\n\t\treturn true;\n\t} else {\n\t\treturn false;\n\t}\n}\n\
    echo any_int(5, 2, 7);\necho any_int(3, 2, 2);\necho any_int(3, -2, 1);\necho\
    \ any_int(3.6, -2.2, 2);\nfunction candidate(...$args) {\n    return any_int(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2, 3, 1) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2.5, 2, 3) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(1.5, 5, 3.5) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 6, 2) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 2, 2) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2, 2.2, 2.2)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: '11'
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// any_int(5,\
    \ 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E\
    \ True\n// any_int(3.6, -2.2, 2) \u279E False\nfunction any_int($x, $y, $z) {\n\
    \tif (is_int($x) && is_int($y) && is_int($z)) {\n\t\tif ($x + $y == $z || $x +\
    \ $z == $y || $y + $z == $x) {\n\t\t\treturn true;\n\t\t} else {\n\t\t\treturn\
    \ false;\n\t\t}\n\t} else {\n\t\treturn false;\n\t}\n}\necho any_int(3, -2, 1);\n\
    function candidate(...$args) {\n    return any_int(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(2, 3, 1) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2.5, 2, 3) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1.5, 5, 3.5) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 6, 2) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4, 2, 2) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2.2, 2.2, 2.2) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-4, 6, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3, 4, 7) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3.0, 4, 7) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: '1'
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// any_int(5,\
    \ 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E\
    \ True\n// any_int(3.6, -2.2, 2) \u279E False\nfunction any_int($x, $y, $z) {\n\
    \tif (is_int($x) && is_int($y) && is_int($z)) {\n\t\tif ($x == $y + $z || $y ==\
    \ $x + $z || $z == $x + $y) {\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n\
    }\necho any_int(5, 2, 7);\necho \"<br>\";\necho any_int(3, 2, 2);\necho \"<br>\"\
    ;\necho any_int(3, -2, 1);\necho \"<br>\";\necho any_int(3.6, -2.2, 2);\nfunction\
    \ candidate(...$args) {\n    return any_int(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(2, 3, 1) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2.5, 2, 3) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1.5, 5, 3.5) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 6, 2) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4, 2, 2) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2.2, 2.2, 2.2) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-4, 6, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3, 4, 7) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3.0, 4, 7) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: 1<br><br>1<br>
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// any_int(5,\
    \ 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E\
    \ True\n// any_int(3.6, -2.2, 2) \u279E False\nfunction any_int($x, $y, $z) {\n\
    \tif (is_int($x) && is_int($y) && is_int($z)) {\n\t\tif ($x == $y + $z || $y ==\
    \ $x + $z || $z == $x + $y) {\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n\
    }\necho any_int(5, 2, 7);\necho any_int(3, 2, 2);\necho any_int(3, -2, 1);\necho\
    \ any_int(3.6, -2.2, 2);\nfunction candidate(...$args) {\n    return any_int(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2, 3, 1) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2.5, 2, 3) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(1.5, 5, 3.5) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 6, 2) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 2, 2) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2, 2.2, 2.2)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: '11'
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// any_int(5,\
    \ 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E\
    \ True\n// any_int(3.6, -2.2, 2) \u279E False\nfunction any_int($x, $y, $z) {\n\
    \treturn (is_int($x) && is_int($y) && is_int($z)) && ($x + $y == $z || $x + $z\
    \ == $y || $y + $z == $x);\n}\nfunction candidate(...$args) {\n    return any_int(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2, 3, 1) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2.5, 2, 3) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(1.5, 5, 3.5) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 6, 2) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 2, 2) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2, 2.2, 2.2)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// any_int(5,\
    \ 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E\
    \ True\n// any_int(3.6, -2.2, 2) \u279E False\nfunction any_int($x, $y, $z) {\n\
    \tif (is_int($x) && is_int($y) && is_int($z)) {\n\t\tif ($x + $y == $z || $x +\
    \ $z == $y || $y + $z == $x) {\n\t\t\treturn true;\n\t\t} else {\n\t\t\treturn\
    \ false;\n\t\t}\n\t} else {\n\t\treturn false;\n\t}\n}\necho any_int(5, 2, 7)\
    \ . \"<br>\";\necho any_int(3, 2, 2) . \"<br>\";\necho any_int(3, -2, 1) . \"\
    <br>\";\necho any_int(3.6, -2.2, 2) . \"<br>\";\nfunction candidate(...$args)\
    \ {\n    return any_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2,\
    \ 3, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.5,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1.5,\
    \ 5, 3.5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 6, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2,\
    \ 2.2, 2.2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: 1<br><br>1<br><br>
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// any_int(5,\
    \ 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E\
    \ True\n// any_int(3.6, -2.2, 2) \u279E False\nfunction any_int($x, $y, $z) {\n\
    \tif (is_int($x) && is_int($y) && is_int($z)) {\n\t\tif ($x + $y == $z || $x +\
    \ $z == $y || $y + $z == $x) {\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n\
    }\necho any_int(5, 2, 7);\necho any_int(3, 2, 2);\necho any_int(3, -2, 1);\necho\
    \ any_int(3.6, -2.2, 2);\nfunction candidate(...$args) {\n    return any_int(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2, 3, 1) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2.5, 2, 3) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(1.5, 5, 3.5) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 6, 2) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 2, 2) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2, 2.2, 2.2)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: '11'
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// any_int(5,\
    \ 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E\
    \ True\n// any_int(3.6, -2.2, 2) \u279E False\nfunction any_int($x, $y, $z) {\n\
    \tif (is_int($x) && is_int($y) && is_int($z)) {\n\t\tif ($x + $y == $z || $x +\
    \ $z == $y || $y + $z == $x) {\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n\
    }\necho any_int(5, 2, 7);\necho any_int(3, 2, 2);\necho any_int(3, -2, 1);\necho\
    \ any_int(3.6, -2.2, 2);\nfunction candidate(...$args) {\n    return any_int(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2, 3, 1) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2.5, 2, 3) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(1.5, 5, 3.5) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 6, 2) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 2, 2) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2, 2.2, 2.2)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: '11'
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// any_int(5,\
    \ 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E\
    \ True\n// any_int(3.6, -2.2, 2) \u279E False\nfunction any_int($x, $y, $z) {\n\
    \tif (is_int($x) && is_int($y) && is_int($z)) {\n\t\tif ($x + $y == $z || $x +\
    \ $z == $y || $y + $z == $x) {\n\t\t\treturn true;\n\t\t} else {\n\t\t\treturn\
    \ false;\n\t\t}\n\t} else {\n\t\treturn false;\n\t}\n}\necho any_int(5, 2, 7);\n\
    echo any_int(3, 2, 2);\necho any_int(3, -2, 1);\necho any_int(3.6, -2.2, 2);\n\
    function candidate(...$args) {\n    return any_int(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(2, 3, 1) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2.5, 2, 3) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1.5, 5, 3.5) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 6, 2) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4, 2, 2) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2.2, 2.2, 2.2) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-4, 6, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3, 4, 7) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3.0, 4, 7) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: '11'
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// any_int(5,\
    \ 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E\
    \ True\n// any_int(3.6, -2.2, 2) \u279E False\nfunction any_int($x, $y, $z) {\n\
    \treturn is_int($x) && is_int($y) && is_int($z) && ($x + $y == $z || $x + $z ==\
    \ $y || $y + $z == $x);\n}\nfunction candidate(...$args) {\n    return any_int(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2, 3, 1) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2.5, 2, 3) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(1.5, 5, 3.5) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 6, 2) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 2, 2) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2, 2.2, 2.2)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// any_int(5,\
    \ 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E\
    \ True\n// any_int(3.6, -2.2, 2) \u279E False\nfunction any_int($x, $y, $z) {\n\
    \tif (is_int($x) && is_int($y) && is_int($z)) {\n\t\tif ($x + $y == $z || $x +\
    \ $z == $y || $y + $z == $x) {\n\t\t\treturn true;\n\t\t} else {\n\t\t\treturn\
    \ false;\n\t\t}\n\t} else {\n\t\treturn false;\n\t}\n}\necho any_int(5, 2, 7);\n\
    echo \"<br>\";\necho any_int(3, 2, 2);\necho \"<br>\";\necho any_int(3, -2, 1);\n\
    echo \"<br>\";\necho any_int(3.6, -2.2, 2);\nfunction candidate(...$args) {\n\
    \    return any_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2,\
    \ 3, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.5,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1.5,\
    \ 5, 3.5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 6, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2,\
    \ 2.2, 2.2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: 1<br><br>1<br>
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// any_int(5,\
    \ 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E\
    \ True\n// any_int(3.6, -2.2, 2) \u279E False\nfunction any_int($x, $y, $z) {\n\
    \tif ($x + $y == $z) {\n\t\treturn true;\n\t} elseif ($x + $z == $y) {\n\t\treturn\
    \ true;\n\t} elseif ($y + $z == $x) {\n\t\treturn true;\n\t} else {\n\t\treturn\
    \ false;\n\t}\n}\necho any_int(3, -2, 1);\nfunction candidate(...$args) {\n  \
    \  return any_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2,\
    \ 3, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.5,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1.5,\
    \ 5, 3.5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 6, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2,\
    \ 2.2, 2.2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: '1'
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp1o15ls5i.php:29\n\
    Stack trace:\n#0 /tmp/tmp1o15ls5i.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp1o15ls5i.php\
    \ on line 29\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// any_int(5,\
    \ 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E\
    \ True\n// any_int(3.6, -2.2, 2) \u279E False\nfunction any_int($x, $y, $z) {\n\
    \tif (is_int($x) && is_int($y) && is_int($z)) {\n\t\tif ($x == $y + $z || $y ==\
    \ $x + $z || $z == $x + $y) {\n\t\t\treturn true;\n\t\t} else {\n\t\t\treturn\
    \ false;\n\t\t}\n\t} else {\n\t\treturn false;\n\t}\n}\necho any_int(5, 2, 7);\n\
    echo any_int(3, 2, 2);\necho any_int(3, -2, 1);\necho any_int(3.6, -2.2, 2);\n\
    function candidate(...$args) {\n    return any_int(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(2, 3, 1) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2.5, 2, 3) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1.5, 5, 3.5) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 6, 2) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4, 2, 2) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2.2, 2.2, 2.2) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-4, 6, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3, 4, 7) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3.0, 4, 7) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: '11'
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// any_int(5,\
    \ 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E\
    \ True\n// any_int(3.6, -2.2, 2) \u279E False\nfunction any_int($x, $y, $z) {\n\
    \    if (is_int($x) && is_int($y) && is_int($z)) {\n        if ($x + $y == $z\
    \ || $x + $z == $y || $y + $z == $x) {\n            return true;\n        } else\
    \ {\n            return false;\n        }\n    } else {\n        return false;\n\
    \    }\n}\necho any_int(5, 2, 7) . PHP_EOL;\necho any_int(3, 2, 2) . PHP_EOL;\n\
    echo any_int(3, -2, 1) . PHP_EOL;\necho any_int(3.6, -2.2, 2) . PHP_EOL;\nfunction\
    \ candidate(...$args) {\n    return any_int(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(2, 3, 1) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2.5, 2, 3) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1.5, 5, 3.5) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 6, 2) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4, 2, 2) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2.2, 2.2, 2.2) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-4, 6, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3, 4, 7) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3.0, 4, 7) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "1\n\n1\n\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// any_int(5,\
    \ 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E\
    \ True\n// any_int(3.6, -2.2, 2) \u279E False\nfunction any_int($x, $y, $z) {\n\
    \tif(is_int($x) && is_int($y) && is_int($z)) {\n\t\tif($x == $y + $z || $y ==\
    \ $x + $z || $z == $x + $y) {\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n\
    }\necho any_int(5, 2, 7);\necho any_int(3, 2, 2);\necho any_int(3, -2, 1);\necho\
    \ any_int(3.6, -2.2, 2);\nfunction candidate(...$args) {\n    return any_int(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2, 3, 1) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2.5, 2, 3) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(1.5, 5, 3.5) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 6, 2) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 2, 2) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2, 2.2, 2.2)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: '11'
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// any_int(5,\
    \ 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E\
    \ True\n// any_int(3.6, -2.2, 2) \u279E False\nfunction any_int($x, $y, $z) {\n\
    \tif (is_int($x) && is_int($y) && is_int($z)) {\n\t\tif ($x + $y == $z || $x +\
    \ $z == $y || $y + $z == $x) {\n\t\t\treturn true;\n\t\t} else {\n\t\t\treturn\
    \ false;\n\t\t}\n\t} else {\n\t\treturn false;\n\t}\n}\necho any_int(5, 2, 7)\
    \ . PHP_EOL;\necho any_int(3, 2, 2) . PHP_EOL;\necho any_int(3, -2, 1) . PHP_EOL;\n\
    echo any_int(3.6, -2.2, 2) . PHP_EOL;\nfunction candidate(...$args) {\n    return\
    \ any_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 3, 1)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.5,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1.5,\
    \ 5, 3.5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 6, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2,\
    \ 2.2, 2.2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "1\n\n1\n\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// any_int(5,\
    \ 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E\
    \ True\n// any_int(3.6, -2.2, 2) \u279E False\nfunction any_int($x, $y, $z) {\n\
    \tif(is_int($x) && is_int($y) && is_int($z)){\n\t\tif($x == $y + $z || $y == $x\
    \ + $z || $z == $x + $y){\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n}\n\
    echo any_int(5, 2, 7);\necho any_int(3, 2, 2);\necho any_int(3, -2, 1);\necho\
    \ any_int(3.6, -2.2, 2);\nfunction candidate(...$args) {\n    return any_int(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2, 3, 1) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2.5, 2, 3) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(1.5, 5, 3.5) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 6, 2) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 2, 2) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2, 2.2, 2.2)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: '11'
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// any_int(5,\
    \ 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E\
    \ True\n// any_int(3.6, -2.2, 2) \u279E False\nfunction any_int($x, $y, $z) {\n\
    \tif (is_int($x) && is_int($y) && is_int($z)) {\n\t\tif ($x == $y + $z || $y ==\
    \ $x + $z || $z == $x + $y) {\n\t\t\treturn true;\n\t\t} else {\n\t\t\treturn\
    \ false;\n\t\t}\n\t} else {\n\t\treturn false;\n\t}\n}\necho any_int(3, 2, 2);\n\
    echo \"<br>\";\necho any_int(3, -2, 1);\necho \"<br>\";\necho any_int(3.6, -2.2,\
    \ 2);\necho \"<br>\";\necho any_int(5, 2, 7);\necho \"<br>\";\necho any_int(3.6,\
    \ -2.2, 2);\necho \"<br>\";\necho any_int(3.6, -2.2, 2);\necho \"<br>\";\necho\
    \ any_int(3.6, -2.2, 2);\necho \"<br>\";\necho any_int(3.6, -2.2, 2);\necho \"\
    <br>\";\necho any_int(3.6, -2.2, 2);\necho \"<br>\";\necho any_int(3.6, -2.2,\
    \ 2);\necho \"<br>\";\necho any_int(3.6, -2.2, 2);\necho \"<br>\";\necho any_int(3.6,\
    \ -2.2, 2);\necho \"<br>\";\necho any_int(3.6, -2.2, 2);\necho \"<br>\";\necho\
    \ any_int(3.6, -2.2, 2);\necho \"<br>\";\necho any_int(3.6, -2.2, 2);\necho \"\
    <br>\";\necho any_int(3.6, -2.2, 2);\necho \"<br>\";\necho any_int(3.6, -2.2,\
    \ 2);\necho \"<br>\";\necho any_int(3.6, -2.2, 2);\necho \"<br>\";\necho any_int(3.6,\
    \ -2.2,\nfunction candidate(...$args) {\n    return any_int(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(2, 3, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2.5, 2, 3) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1.5, 5, 3.5) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 6, 2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4, 2, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2.2, 2.2, 2.2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-4, 6, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3, 4, 7) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3.0, 4, 7) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Parse error:  syntax error, unexpected identifier \"candidate\", expecting\
    \ \"(\" in /tmp/tmp97q5ujnv.php on line 58\n"
  exit_code: 255
  status: SyntaxError
- program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// any_int(5,\
    \ 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E\
    \ True\n// any_int(3.6, -2.2, 2) \u279E False\nfunction any_int($x, $y, $z) {\n\
    \tif (is_int($x) && is_int($y) && is_int($z)) {\n\t\tif ($x + $y == $z || $x +\
    \ $z == $y || $y + $z == $x) {\n\t\t\treturn true;\n\t\t} else {\n\t\t\treturn\
    \ false;\n\t\t}\n\t} else {\n\t\treturn false;\n\t}\n}\necho any_int(5, 2, 7);\n\
    echo any_int(3, 2, 2);\necho any_int(3, -2, 1);\necho any_int(3.6, -2.2, 2);\n\
    function candidate(...$args) {\n    return any_int(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(2, 3, 1) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2.5, 2, 3) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1.5, 5, 3.5) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 6, 2) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4, 2, 2) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2.2, 2.2, 2.2) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-4, 6, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3, 4, 7) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3.0, 4, 7) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: '11'
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// any_int(5,\
    \ 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E\
    \ True\n// any_int(3.6, -2.2, 2) \u279E False\nfunction any_int($x, $y, $z) {\n\
    \tif(is_int($x) && is_int($y) && is_int($z)){\n\t\tif($x == $y + $z || $y == $x\
    \ + $z || $z == $x + $y){\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n}\n\
    echo any_int(3, 2, 2);\nfunction candidate(...$args) {\n    return any_int(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2, 3, 1) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2.5, 2, 3) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(1.5, 5, 3.5) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 6, 2) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 2, 2) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2, 2.2, 2.2)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// any_int(5,\
    \ 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E\
    \ True\n// any_int(3.6, -2.2, 2) \u279E False\nfunction any_int($x, $y, $z) {\n\
    \tif (is_int($x) && is_int($y) && is_int($z)) {\n\t\tif ($x + $y == $z || $x +\
    \ $z == $y || $y + $z == $x) {\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n\
    }\necho any_int(5, 2, 7);\necho any_int(3, 2, 2);\necho any_int(3, -2, 1);\necho\
    \ any_int(3.6, -2.2, 2);\nfunction candidate(...$args) {\n    return any_int(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2, 3, 1) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2.5, 2, 3) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(1.5, 5, 3.5) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 6, 2) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 2, 2) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2, 2.2, 2.2)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: '11'
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// any_int(5,\
    \ 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E\
    \ True\n// any_int(3.6, -2.2, 2) \u279E False\nfunction any_int($x, $y, $z) {\n\
    \tif(is_int($x) && is_int($y) && is_int($z)) {\n\t\tif($x + $y == $z || $x + $z\
    \ == $y || $y + $z == $x) {\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n\
    }\necho any_int(5, 2, 7);\necho any_int(3, 2, 2);\necho any_int(3, -2, 1);\necho\
    \ any_int(3.6, -2.2, 2);\nfunction candidate(...$args) {\n    return any_int(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2, 3, 1) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2.5, 2, 3) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(1.5, 5, 3.5) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 6, 2) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 2, 2) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2, 2.2, 2.2)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: '11'
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// any_int(5,\
    \ 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E\
    \ True\n// any_int(3.6, -2.2, 2) \u279E False\nfunction any_int($x, $y, $z) {\n\
    \tif (is_int($x) && is_int($y) && is_int($z)) {\n\t\tif ($x + $y == $z || $x +\
    \ $z == $y || $y + $z == $x) {\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n\
    }\necho any_int(5, 2, 7);\necho any_int(3, 2, 2);\necho any_int(3, -2, 1);\necho\
    \ any_int(3.6, -2.2, 2);\nfunction candidate(...$args) {\n    return any_int(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2, 3, 1) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2.5, 2, 3) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(1.5, 5, 3.5) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 6, 2) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 2, 2) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2, 2.2, 2.2)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: '11'
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// any_int(5,\
    \ 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E\
    \ True\n// any_int(3.6, -2.2, 2) \u279E False\nfunction any_int($x, $y, $z) {\n\
    \tif (is_int($x) && is_int($y) && is_int($z)) {\n\t\tif ($x == $y + $z || $y ==\
    \ $x + $z || $z == $x + $y) {\n\t\t\treturn true;\n\t\t} else {\n\t\t\treturn\
    \ false;\n\t\t}\n\t} else {\n\t\treturn false;\n\t}\n}\necho any_int(5, 2, 7);\n\
    echo \"<br>\";\necho any_int(3, 2, 2);\necho \"<br>\";\necho any_int(3, -2, 1);\n\
    echo \"<br>\";\necho any_int(3.6, -2.2, 2);\necho \"<br>\";\necho any_int(3.6,\
    \ -2.2, 2.2);\necho \"<br>\";\necho any_int(3.6, -2.2, 2.2);\nfunction candidate(...$args)\
    \ {\n    return any_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2,\
    \ 3, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.5,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1.5,\
    \ 5, 3.5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 6, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2,\
    \ 2.2, 2.2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: 1<br><br>1<br><br><br>
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// any_int(5,\
    \ 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E\
    \ True\n// any_int(3.6, -2.2, 2) \u279E False\nfunction any_int($x, $y, $z) {\n\
    \tif ($x + $y == $z || $x + $z == $y || $y + $z == $x) {\n\t\treturn true;\n\t\
    } else {\n\t\treturn false;\n\t}\n}\necho any_int(5, 2, 7);\necho \"<br>\";\n\
    echo any_int(3, 2, 2);\necho \"<br>\";\necho any_int(3, -2, 1);\necho \"<br>\"\
    ;\necho any_int(3.6, -2.2, 2);\nfunction candidate(...$args) {\n    return any_int(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2, 3, 1) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2.5, 2, 3) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(1.5, 5, 3.5) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 6, 2) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 2, 2) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2, 2.2, 2.2)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: 1<br><br>1<br>
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpc_udsedw.php:31\n\
    Stack trace:\n#0 /tmp/tmpc_udsedw.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpc_udsedw.php\
    \ on line 31\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// any_int(5,\
    \ 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E\
    \ True\n// any_int(3.6, -2.2, 2) \u279E False\nfunction any_int($x, $y, $z) {\n\
    \tif ($x == $y + $z || $y == $x + $z || $z == $x + $y) {\n\t\treturn true;\n\t\
    } else {\n\t\treturn false;\n\t}\n}\necho any_int(5, 2, 7) . PHP_EOL;\necho any_int(3,\
    \ 2, 2) . PHP_EOL;\necho any_int(3, -2, 1) . PHP_EOL;\necho any_int(3.6, -2.2,\
    \ 2) . PHP_EOL;\nfunction candidate(...$args) {\n    return any_int(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2, 3, 1) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2.5, 2, 3) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(1.5, 5, 3.5) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 6, 2) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 2, 2) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2, 2.2, 2.2)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "1\n\n1\n\n"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp7v3jklzh.php:28\n\
    Stack trace:\n#0 /tmp/tmp7v3jklzh.php(38): test()\n#1 {main}\n  thrown in /tmp/tmp7v3jklzh.php\
    \ on line 28\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// any_int(5,\
    \ 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E\
    \ True\n// any_int(3.6, -2.2, 2) \u279E False\nfunction any_int($x, $y, $z) {\n\
    \tif (is_int($x) && is_int($y) && is_int($z)) {\n\t\tif ($x == $y + $z || $y ==\
    \ $x + $z || $z == $x + $y) {\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n\
    }\necho any_int(3, -2, 1);\nfunction candidate(...$args) {\n    return any_int(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2, 3, 1) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2.5, 2, 3) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(1.5, 5, 3.5) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 6, 2) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 2, 2) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2, 2.2, 2.2)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: '1'
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// any_int(5,\
    \ 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E\
    \ True\n// any_int(3.6, -2.2, 2) \u279E False\nfunction any_int($x, $y, $z) {\n\
    \tif (is_int($x) && is_int($y) && is_int($z)) {\n\t\tif ($x + $y == $z || $x +\
    \ $z == $y || $y + $z == $x) {\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n\
    }\necho any_int(5, 2, 7);\necho \"<br>\";\necho any_int(3, 2, 2);\necho \"<br>\"\
    ;\necho any_int(3, -2, 1);\necho \"<br>\";\necho any_int(3.6, -2.2, 2);\nfunction\
    \ candidate(...$args) {\n    return any_int(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(2, 3, 1) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2.5, 2, 3) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1.5, 5, 3.5) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 6, 2) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4, 2, 2) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2.2, 2.2, 2.2) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-4, 6, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3, 4, 7) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3.0, 4, 7) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: 1<br><br>1<br>
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// any_int(5,\
    \ 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E\
    \ True\n// any_int(3.6, -2.2, 2) \u279E False\nfunction any_int($x, $y, $z) {\n\
    \tif (is_int($x) && is_int($y) && is_int($z)) {\n\t\tif ($x == $y + $z || $y ==\
    \ $x + $z || $z == $x + $y) {\n\t\t\treturn true;\n\t\t} else {\n\t\t\treturn\
    \ false;\n\t\t}\n\t} else {\n\t\treturn false;\n\t}\n}\nfunction candidate(...$args)\
    \ {\n    return any_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2,\
    \ 3, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.5,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1.5,\
    \ 5, 3.5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 6, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2,\
    \ 2.2, 2.2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// any_int(5,\
    \ 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E\
    \ True\n// any_int(3.6, -2.2, 2) \u279E False\nfunction any_int($x, $y, $z) {\n\
    \tif (is_int($x) && is_int($y) && is_int($z)) {\n\t\tif ($x == $y + $z || $y ==\
    \ $x + $z || $z == $x + $y) {\n\t\t\treturn true;\n\t\t} else {\n\t\t\treturn\
    \ false;\n\t\t}\n\t} else {\n\t\treturn false;\n\t}\n}\necho any_int(5, 2, 7)\
    \ . \"<br>\";\necho any_int(3, 2, 2) . \"<br>\";\necho any_int(3, -2, 1) . \"\
    <br>\";\necho any_int(3.6, -2.2, 2) . \"<br>\";\nfunction candidate(...$args)\
    \ {\n    return any_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2,\
    \ 3, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.5,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1.5,\
    \ 5, 3.5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 6, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2,\
    \ 2.2, 2.2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: 1<br><br>1<br><br>
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// any_int(5,\
    \ 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E\
    \ True\n// any_int(3.6, -2.2, 2) \u279E False\nfunction any_int($x, $y, $z) {\n\
    \tif (is_int($x) && is_int($y) && is_int($z)) {\n\t\tif ($x + $y == $z || $x +\
    \ $z == $y || $y + $z == $x) {\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n\
    }\necho any_int(5, 2, 7) . \"\\n\";\necho any_int(3, 2, 2) . \"\\n\";\necho any_int(3,\
    \ -2, 1) . \"\\n\";\necho any_int(3.6, -2.2, 2) . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return any_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2,\
    \ 3, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.5,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1.5,\
    \ 5, 3.5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 6, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2,\
    \ 2.2, 2.2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "1\n\n1\n\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// any_int(5,\
    \ 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E\
    \ True\n// any_int(3.6, -2.2, 2) \u279E False\nfunction any_int($x, $y, $z) {\n\
    \tif (is_int($x) && is_int($y) && is_int($z)) {\n\t\tif ($x + $y == $z || $x +\
    \ $z == $y || $y + $z == $x) {\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n\
    }\necho any_int(5, 2, 7) . \"\\n\";\necho any_int(3, 2, 2) . \"\\n\";\necho any_int(3,\
    \ -2, 1) . \"\\n\";\necho any_int(3.6, -2.2, 2) . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return any_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2,\
    \ 3, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.5,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1.5,\
    \ 5, 3.5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 6, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2,\
    \ 2.2, 2.2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "1\n\n1\n\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// any_int(5,\
    \ 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E\
    \ True\n// any_int(3.6, -2.2, 2) \u279E False\nfunction any_int($x, $y, $z) {\n\
    \tif ($x == $y + $z || $y == $x + $z || $z == $x + $y) {\n\t\treturn true;\n\t\
    } else {\n\t\treturn false;\n\t}\n}\necho any_int(5, 2, 7);\necho any_int(3, 2,\
    \ 2);\necho any_int(3, -2, 1);\necho any_int(3.6, -2.2, 2);\nfunction candidate(...$args)\
    \ {\n    return any_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2,\
    \ 3, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.5,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1.5,\
    \ 5, 3.5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 6, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2,\
    \ 2.2, 2.2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: '11'
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpdc7s7m2q.php:28\n\
    Stack trace:\n#0 /tmp/tmpdc7s7m2q.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpdc7s7m2q.php\
    \ on line 28\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// any_int(5,\
    \ 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E\
    \ True\n// any_int(3.6, -2.2, 2) \u279E False\nfunction any_int($x, $y, $z) {\n\
    \tif(is_int($x) && is_int($y) && is_int($z)){\n\t\tif($x == $y + $z || $y == $x\
    \ + $z || $z == $x + $y){\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n}\n\
    echo any_int(5, 2, 7);\necho \"<br>\";\necho any_int(3, 2, 2);\necho \"<br>\"\
    ;\necho any_int(3, -2, 1);\necho \"<br>\";\necho any_int(3.6, -2.2, 2);\nfunction\
    \ candidate(...$args) {\n    return any_int(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(2, 3, 1) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2.5, 2, 3) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1.5, 5, 3.5) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 6, 2) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4, 2, 2) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2.2, 2.2, 2.2) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-4, 6, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3, 4, 7) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3.0, 4, 7) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: 1<br><br>1<br>
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// any_int(5,\
    \ 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E\
    \ True\n// any_int(3.6, -2.2, 2) \u279E False\nfunction any_int($x, $y, $z) {\n\
    \tif(is_int($x) && is_int($y) && is_int($z)){\n\t\tif($x == $y + $z || $y == $x\
    \ + $z || $z == $x + $y){\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n}\n\
    echo any_int(5, 2, 7);\necho \"<br>\";\necho any_int(3, 2, 2);\necho \"<br>\"\
    ;\necho any_int(3, -2, 1);\necho \"<br>\";\necho any_int(3.6, -2.2, 2);\nfunction\
    \ candidate(...$args) {\n    return any_int(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(2, 3, 1) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2.5, 2, 3) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1.5, 5, 3.5) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 6, 2) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4, 2, 2) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2.2, 2.2, 2.2) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-4, 6, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3, 4, 7) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3.0, 4, 7) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: 1<br><br>1<br>
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// any_int(5,\
    \ 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E\
    \ True\n// any_int(3.6, -2.2, 2) \u279E False\nfunction any_int($x, $y, $z) {\n\
    \treturn is_int($x) && is_int($y) && is_int($z) && ($x + $y == $z || $x + $z ==\
    \ $y || $y + $z == $x);\n}\necho any_int(5, 2, 7);\nfunction candidate(...$args)\
    \ {\n    return any_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2,\
    \ 3, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.5,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1.5,\
    \ 5, 3.5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 6, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2,\
    \ 2.2, 2.2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: '1'
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// any_int(5,\
    \ 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E\
    \ True\n// any_int(3.6, -2.2, 2) \u279E False\nfunction any_int($x, $y, $z) {\n\
    \tif(is_int($x) && is_int($y) && is_int($z)) {\n\t\tif($x == $y + $z || $y ==\
    \ $x + $z || $z == $x + $y) {\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n\
    }\necho any_int(5, 2, 7);\necho any_int(3, 2, 2);\necho any_int(3, -2, 1);\necho\
    \ any_int(3.6, -2.2, 2);\nfunction candidate(...$args) {\n    return any_int(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2, 3, 1) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2.5, 2, 3) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(1.5, 5, 3.5) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 6, 2) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 2, 2) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2, 2.2, 2.2)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: '11'
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// any_int(5,\
    \ 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E\
    \ True\n// any_int(3.6, -2.2, 2) \u279E False\nfunction any_int($x, $y, $z) {\n\
    \tif (is_int($x) && is_int($y) && is_int($z)) {\n\t\tif ($x + $y == $z || $x +\
    \ $z == $y || $y + $z == $x) {\n\t\t\treturn true;\n\t\t} else {\n\t\t\treturn\
    \ false;\n\t\t}\n\t} else {\n\t\treturn false;\n\t}\n}\necho any_int(5, 2, 7);\n\
    echo \"<br>\";\necho any_int(3, 2, 2);\necho \"<br>\";\necho any_int(3, -2, 1);\n\
    echo \"<br>\";\necho any_int(3.6, -2.2, 2);\nfunction candidate(...$args) {\n\
    \    return any_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2,\
    \ 3, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.5,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1.5,\
    \ 5, 3.5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 6, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2,\
    \ 2.2, 2.2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: 1<br><br>1<br>
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// any_int(5,\
    \ 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E\
    \ True\n// any_int(3.6, -2.2, 2) \u279E False\nfunction any_int($x, $y, $z) {\n\
    \tif (is_int($x) && is_int($y) && is_int($z)) {\n\t\tif ($x == $y + $z || $y ==\
    \ $x + $z || $z == $x + $y) {\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n\
    }\necho any_int(5, 2, 7) . \"\\n\";\necho any_int(3, 2, 2) . \"\\n\";\necho any_int(3,\
    \ -2, 1) . \"\\n\";\necho any_int(3.6, -2.2, 2) . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return any_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2,\
    \ 3, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.5,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1.5,\
    \ 5, 3.5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 6, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2,\
    \ 2.2, 2.2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "1\n\n1\n\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// any_int(5,\
    \ 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E\
    \ True\n// any_int(3.6, -2.2, 2) \u279E False\nfunction any_int($x, $y, $z) {\n\
    \tif (($x + $y == $z) || ($x + $z == $y) || ($y + $z == $x)) {\n\t\treturn true;\n\
    \t} else {\n\t\treturn false;\n\t}\n}\necho any_int(5, 2, 7);\necho \"<br>\";\n\
    echo any_int(3, 2, 2);\necho \"<br>\";\necho any_int(3, -2, 1);\necho \"<br>\"\
    ;\necho any_int(3.6, -2.2, 2);\nfunction candidate(...$args) {\n    return any_int(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2, 3, 1) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2.5, 2, 3) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(1.5, 5, 3.5) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 6, 2) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 2, 2) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2, 2.2, 2.2)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: 1<br><br>1<br>
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmptivqmr3w.php:31\n\
    Stack trace:\n#0 /tmp/tmptivqmr3w.php(41): test()\n#1 {main}\n  thrown in /tmp/tmptivqmr3w.php\
    \ on line 31\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// any_int(5,\
    \ 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E\
    \ True\n// any_int(3.6, -2.2, 2) \u279E False\nfunction any_int($x, $y, $z) {\n\
    \tif (is_int($x) && is_int($y) && is_int($z)) {\n\t\tif ($x == $y + $z || $y ==\
    \ $x + $z || $z == $x + $y) {\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n\
    }\necho any_int(5, 2, 7);\necho \"<br>\";\necho any_int(3, 2, 2);\necho \"<br>\"\
    ;\necho any_int(3, -2, 1);\necho \"<br>\";\necho any_int(3.6, -2.2, 2);\necho\
    \ \"<br>\";\nfunction candidate(...$args) {\n    return any_int(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(2, 3, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2.5, 2, 3) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1.5, 5, 3.5) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 6, 2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4, 2, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2.2, 2.2, 2.2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-4, 6, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3, 4, 7) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3.0, 4, 7) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: 1<br><br>1<br><br>
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// any_int(5,\
    \ 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E\
    \ True\n// any_int(3.6, -2.2, 2) \u279E False\nfunction any_int($x, $y, $z) {\n\
    \tif (is_int($x) && is_int($y) && is_int($z)) {\n\t\tif ($x == $y + $z || $y ==\
    \ $x + $z || $z == $x + $y) {\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n\
    }\necho any_int(5, 2, 7);\necho \"<br>\";\necho any_int(3, 2, 2);\necho \"<br>\"\
    ;\necho any_int(3, -2, 1);\necho \"<br>\";\necho any_int(3.6, -2.2, 2);\nfunction\
    \ candidate(...$args) {\n    return any_int(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(2, 3, 1) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2.5, 2, 3) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1.5, 5, 3.5) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 6, 2) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4, 2, 2) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2.2, 2.2, 2.2) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-4, 6, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3, 4, 7) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3.0, 4, 7) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: 1<br><br>1<br>
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// any_int(5,\
    \ 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E\
    \ True\n// any_int(3.6, -2.2, 2) \u279E False\nfunction any_int($x, $y, $z) {\n\
    \tif (is_int($x) && is_int($y) && is_int($z)) {\n\t\tif ($x + $y == $z || $x +\
    \ $z == $y || $y + $z == $x) {\n\t\t\treturn true;\n\t\t} else {\n\t\t\treturn\
    \ false;\n\t\t}\n\t} else {\n\t\treturn false;\n\t}\n}\necho any_int(5, 2, 7);\n\
    echo \"<br>\";\necho any_int(3, 2, 2);\necho \"<br>\";\necho any_int(3, -2, 1);\n\
    echo \"<br>\";\necho any_int(3.6, -2.2, 2);\nfunction candidate(...$args) {\n\
    \    return any_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2,\
    \ 3, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.5,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1.5,\
    \ 5, 3.5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 6, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2,\
    \ 2.2, 2.2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: 1<br><br>1<br>
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// any_int(5,\
    \ 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E\
    \ True\n// any_int(3.6, -2.2, 2) \u279E False\nfunction any_int($x, $y, $z) {\n\
    \tif ($x == $y + $z || $y == $x + $z || $z == $x + $y) {\n\t\treturn true;\n\t\
    } else {\n\t\treturn false;\n\t}\n}\necho any_int(5, 2, 7);\necho any_int(3, 2,\
    \ 2);\necho any_int(3, -2, 1);\necho any_int(3.6, -2.2, 2);\nfunction candidate(...$args)\
    \ {\n    return any_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2,\
    \ 3, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.5,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1.5,\
    \ 5, 3.5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 6, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2,\
    \ 2.2, 2.2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: '11'
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpn9qhn_a3.php:28\n\
    Stack trace:\n#0 /tmp/tmpn9qhn_a3.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpn9qhn_a3.php\
    \ on line 28\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// any_int(5,\
    \ 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E\
    \ True\n// any_int(3.6, -2.2, 2) \u279E False\nfunction any_int($x, $y, $z) {\n\
    \tif ($x == $y + $z || $y == $x + $z || $z == $x + $y) {\n\t\tif (is_int($x) &&\
    \ is_int($y) && is_int($z)) {\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n\
    }\necho any_int(5, 2, 7);\necho any_int(3, 2, 2);\necho any_int(3, -2, 1);\necho\
    \ any_int(3.6, -2.2, 2);\nfunction candidate(...$args) {\n    return any_int(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2, 3, 1) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2.5, 2, 3) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(1.5, 5, 3.5) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 6, 2) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 2, 2) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2, 2.2, 2.2)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: '11'
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// any_int(5,\
    \ 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E\
    \ True\n// any_int(3.6, -2.2, 2) \u279E False\nfunction any_int($x, $y, $z) {\n\
    \tif (is_int($x) && is_int($y) && is_int($z)) {\n\t\tif ($x + $y == $z || $x +\
    \ $z == $y || $y + $z == $x) {\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n\
    }\necho any_int(5, 2, 7) . PHP_EOL;\necho any_int(3, 2, 2) . PHP_EOL;\necho any_int(3,\
    \ -2, 1) . PHP_EOL;\necho any_int(3.6, -2.2, 2) . PHP_EOL;\nfunction candidate(...$args)\
    \ {\n    return any_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2,\
    \ 3, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.5,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1.5,\
    \ 5, 3.5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 6, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2,\
    \ 2.2, 2.2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "1\n\n1\n\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// any_int(5,\
    \ 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E\
    \ True\n// any_int(3.6, -2.2, 2) \u279E False\nfunction any_int($x, $y, $z) {\n\
    \treturn $x + $y == $z || $x + $z == $y || $y + $z == $x;\n}\necho any_int(5,\
    \ 2, 7);\necho any_int(3, 2, 2);\necho any_int(3, -2, 1);\necho any_int(3.6, -2.2,\
    \ 2);\nfunction candidate(...$args) {\n    return any_int(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(2, 3, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2.5, 2, 3) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1.5, 5, 3.5) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 6, 2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4, 2, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2.2, 2.2, 2.2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-4, 6, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3, 4, 7) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3.0, 4, 7) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: '11'
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp_jn6aec1.php:24\n\
    Stack trace:\n#0 /tmp/tmp_jn6aec1.php(34): test()\n#1 {main}\n  thrown in /tmp/tmp_jn6aec1.php\
    \ on line 24\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// any_int(5,\
    \ 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E\
    \ True\n// any_int(3.6, -2.2, 2) \u279E False\nfunction any_int($x, $y, $z) {\n\
    \tif (is_int($x) && is_int($y) && is_int($z)) {\n\t\tif ($x == $y + $z || $y ==\
    \ $x + $z || $z == $x + $y) {\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n\
    }\necho any_int(5, 2, 7) . PHP_EOL;\necho any_int(3, 2, 2) . PHP_EOL;\necho any_int(3,\
    \ -2, 1) . PHP_EOL;\necho any_int(3.6, -2.2, 2) . PHP_EOL;\nfunction candidate(...$args)\
    \ {\n    return any_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2,\
    \ 3, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.5,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1.5,\
    \ 5, 3.5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 6, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2,\
    \ 2.2, 2.2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "1\n\n1\n\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// any_int(5,\
    \ 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E\
    \ True\n// any_int(3.6, -2.2, 2) \u279E False\nfunction any_int($x, $y, $z) {\n\
    \tif (is_int($x) && is_int($y) && is_int($z)) {\n\t\tif ($x + $y == $z || $x +\
    \ $z == $y || $y + $z == $x) {\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n\
    }\necho any_int(3, -2, 1);\nfunction candidate(...$args) {\n    return any_int(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2, 3, 1) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2.5, 2, 3) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(1.5, 5, 3.5) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 6, 2) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 2, 2) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2, 2.2, 2.2)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: '1'
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// any_int(5,\
    \ 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E\
    \ True\n// any_int(3.6, -2.2, 2) \u279E False\nfunction any_int($x, $y, $z) {\n\
    \tif (is_int($x) && is_int($y) && is_int($z)) {\n\t\tif ($x == $y + $z || $y ==\
    \ $x + $z || $z == $x + $y) {\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n\
    }\necho any_int(5, 2, 7);\necho \"<br>\";\necho any_int(3, 2, 2);\necho \"<br>\"\
    ;\necho any_int(3, -2, 1);\necho \"<br>\";\necho any_int(3.6, -2.2, 2);\nfunction\
    \ candidate(...$args) {\n    return any_int(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(2, 3, 1) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2.5, 2, 3) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1.5, 5, 3.5) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 6, 2) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4, 2, 2) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2.2, 2.2, 2.2) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-4, 6, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3, 4, 7) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3.0, 4, 7) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: 1<br><br>1<br>
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// any_int(5,\
    \ 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E\
    \ True\n// any_int(3.6, -2.2, 2) \u279E False\nfunction any_int($x, $y, $z) {\n\
    \tif(is_int($x) && is_int($y) && is_int($z)){\n\t\tif($x == $y + $z || $y == $x\
    \ + $z || $z == $x + $y){\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n}\n\
    echo any_int(5, 2, 7);\necho \"<br>\";\necho any_int(3, 2, 2);\necho \"<br>\"\
    ;\necho any_int(3, -2, 1);\necho \"<br>\";\necho any_int(3.6, -2.2, 2);\nfunction\
    \ candidate(...$args) {\n    return any_int(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(2, 3, 1) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2.5, 2, 3) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1.5, 5, 3.5) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 6, 2) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4, 2, 2) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2.2, 2.2, 2.2) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-4, 6, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3, 4, 7) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3.0, 4, 7) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: 1<br><br>1<br>
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// any_int(5,\
    \ 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E\
    \ True\n// any_int(3.6, -2.2, 2) \u279E False\nfunction any_int($x, $y, $z) {\n\
    \tif(is_int($x) && is_int($y) && is_int($z)) {\n\t\tif($x == $y + $z || $y ==\
    \ $x + $z || $z == $x + $y) {\n\t\t\treturn true;\n\t\t} else {\n\t\t\treturn\
    \ false;\n\t\t}\n\t} else {\n\t\treturn false;\n\t}\n}\necho any_int(5, 2, 7);\n\
    echo any_int(3, 2, 2);\necho any_int(3, -2, 1);\necho any_int(3.6, -2.2, 2);\n\
    function candidate(...$args) {\n    return any_int(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(2, 3, 1) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2.5, 2, 3) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1.5, 5, 3.5) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 6, 2) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4, 2, 2) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2.2, 2.2, 2.2) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-4, 6, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3, 4, 7) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3.0, 4, 7) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: '11'
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// any_int(5,\
    \ 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E\
    \ True\n// any_int(3.6, -2.2, 2) \u279E False\nfunction any_int($x, $y, $z) {\n\
    \tif (is_int($x) && is_int($y) && is_int($z)) {\n\t\tif ($x + $y == $z || $x +\
    \ $z == $y || $y + $z == $x) {\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n\
    }\necho any_int(5, 2, 7);\necho \"<br>\";\necho any_int(3, 2, 2);\necho \"<br>\"\
    ;\necho any_int(3, -2, 1);\necho \"<br>\";\necho any_int(3.6, -2.2, 2);\nfunction\
    \ candidate(...$args) {\n    return any_int(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(2, 3, 1) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2.5, 2, 3) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1.5, 5, 3.5) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 6, 2) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4, 2, 2) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2.2, 2.2, 2.2) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-4, 6, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3, 4, 7) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3.0, 4, 7) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: 1<br><br>1<br>
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// any_int(5,\
    \ 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E\
    \ True\n// any_int(3.6, -2.2, 2) \u279E False\nfunction any_int($x, $y, $z) {\n\
    \tif (is_int($x) && is_int($y) && is_int($z)) {\n\t\tif ($x + $y == $z || $x +\
    \ $z == $y || $y + $z == $x) {\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n\
    }\necho any_int(5, 2, 7) . \"\\n\";\necho any_int(3, 2, 2) . \"\\n\";\necho any_int(3,\
    \ -2, 1) . \"\\n\";\necho any_int(3.6, -2.2, 2) . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return any_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2,\
    \ 3, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.5,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1.5,\
    \ 5, 3.5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 6, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2,\
    \ 2.2, 2.2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "1\n\n1\n\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// any_int(5,\
    \ 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E\
    \ True\n// any_int(3.6, -2.2, 2) \u279E False\nfunction any_int($x, $y, $z) {\n\
    \tif (is_int($x) && is_int($y) && is_int($z)) {\n\t\tif ($x + $y == $z || $x +\
    \ $z == $y || $y + $z == $x) {\n\t\t\treturn true;\n\t\t} else {\n\t\t\treturn\
    \ false;\n\t\t}\n\t} else {\n\t\treturn false;\n\t}\n}\necho any_int(5, 2, 7)\
    \ . \"\\n\";\necho any_int(3, 2, 2) . \"\\n\";\necho any_int(3, -2, 1) . \"\\\
    n\";\necho any_int(3.6, -2.2, 2) . \"\\n\";\nfunction candidate(...$args) {\n\
    \    return any_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2,\
    \ 3, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.5,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1.5,\
    \ 5, 3.5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 6, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2,\
    \ 2.2, 2.2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "1\n\n1\n\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// any_int(5,\
    \ 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E\
    \ True\n// any_int(3.6, -2.2, 2) \u279E False\nfunction any_int($x, $y, $z) {\n\
    \tif (is_int($x) && is_int($y) && is_int($z)) {\n\t\tif ($x == $y + $z || $y ==\
    \ $x + $z || $z == $x + $y) {\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n\
    }\necho any_int(5, 2, 7) . \"\\n\";\necho any_int(3, 2, 2) . \"\\n\";\necho any_int(3,\
    \ -2, 1) . \"\\n\";\necho any_int(3.6, -2.2, 2) . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return any_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2,\
    \ 3, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.5,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1.5,\
    \ 5, 3.5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 6, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2,\
    \ 2.2, 2.2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "1\n\n1\n\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// any_int(5,\
    \ 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E\
    \ True\n// any_int(3.6, -2.2, 2) \u279E False\nfunction any_int($x, $y, $z) {\n\
    \tif (is_int($x) && is_int($y) && is_int($z)) {\n\t\tif ($x + $y == $z || $x +\
    \ $z == $y || $y + $z == $x) {\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n\
    }\necho any_int(3, -2, 1);\nfunction candidate(...$args) {\n    return any_int(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2, 3, 1) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2.5, 2, 3) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(1.5, 5, 3.5) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 6, 2) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 2, 2) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2, 2.2, 2.2)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: '1'
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// any_int(5,\
    \ 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E\
    \ True\n// any_int(3.6, -2.2, 2) \u279E False\nfunction any_int($x, $y, $z) {\n\
    \tif ($x + $y == $z) {\n\t\treturn true;\n\t} elseif ($x + $z == $y) {\n\t\treturn\
    \ true;\n\t} elseif ($y + $z == $x) {\n\t\treturn true;\n\t} else {\n\t\treturn\
    \ false;\n\t}\n}\necho any_int(5, 2, 7) . PHP_EOL;\necho any_int(3, 2, 2) . PHP_EOL;\n\
    echo any_int(3, -2, 1) . PHP_EOL;\necho any_int(3.6, -2.2, 2) . PHP_EOL;\nfunction\
    \ candidate(...$args) {\n    return any_int(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(2, 3, 1) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2.5, 2, 3) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1.5, 5, 3.5) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 6, 2) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4, 2, 2) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2.2, 2.2, 2.2) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-4, 6, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3, 4, 7) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3.0, 4, 7) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "1\n\n1\n\n"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpz8ltez8q.php:32\n\
    Stack trace:\n#0 /tmp/tmpz8ltez8q.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpz8ltez8q.php\
    \ on line 32\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// any_int(5,\
    \ 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E\
    \ True\n// any_int(3.6, -2.2, 2) \u279E False\nfunction any_int($x, $y, $z) {\n\
    \tif (is_int($x) && is_int($y) && is_int($z)) {\n\t\tif ($x + $y == $z || $x +\
    \ $z == $y || $y + $z == $x) {\n\t\t\treturn true;\n\t\t} else {\n\t\t\treturn\
    \ false;\n\t\t}\n\t} else {\n\t\treturn false;\n\t}\n}\necho any_int(5, 2, 7)\
    \ . PHP_EOL;\necho any_int(3, 2, 2) . PHP_EOL;\necho any_int(3, -2, 1) . PHP_EOL;\n\
    echo any_int(3.6, -2.2, 2) . PHP_EOL;\nfunction candidate(...$args) {\n    return\
    \ any_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 3, 1)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.5,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1.5,\
    \ 5, 3.5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 6, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2,\
    \ 2.2, 2.2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "1\n\n1\n\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// any_int(5,\
    \ 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E\
    \ True\n// any_int(3.6, -2.2, 2) \u279E False\nfunction any_int($x, $y, $z) {\n\
    \    if (is_int($x) && is_int($y) && is_int($z)) {\n        if ($x + $y == $z\
    \ || $x + $z == $y || $y + $z == $x) {\n            return true;\n        } else\
    \ {\n            return false;\n        }\n    } else {\n        return false;\n\
    \    }\n}\necho any_int(5, 2, 7);\necho any_int(3, 2, 2);\necho any_int(3, -2,\
    \ 1);\necho any_int(3.6, -2.2, 2);\nfunction candidate(...$args) {\n    return\
    \ any_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 3, 1)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.5,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1.5,\
    \ 5, 3.5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 6, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2,\
    \ 2.2, 2.2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: '11'
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// any_int(5,\
    \ 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E\
    \ True\n// any_int(3.6, -2.2, 2) \u279E False\nfunction any_int($x, $y, $z) {\n\
    \tif(is_int($x) && is_int($y) && is_int($z)) {\n\t\tif($x + $y == $z || $x + $z\
    \ == $y || $y + $z == $x) {\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n\
    }\necho any_int(5, 2, 7);\necho any_int(3, 2, 2);\necho any_int(3, -2, 1);\necho\
    \ any_int(3.6, -2.2, 2);\nfunction candidate(...$args) {\n    return any_int(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2, 3, 1) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2.5, 2, 3) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(1.5, 5, 3.5) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 6, 2) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 2, 2) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2, 2.2, 2.2)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: '11'
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// any_int(5,\
    \ 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E\
    \ True\n// any_int(3.6, -2.2, 2) \u279E False\nfunction any_int($x, $y, $z) {\n\
    \    if (is_int($x) && is_int($y) && is_int($z)) {\n        if ($x + $y == $z\
    \ || $x + $z == $y || $y + $z == $x) {\n            return true;\n        } else\
    \ {\n            return false;\n        }\n    } else {\n        return false;\n\
    \    }\n}\necho any_int(3, -2, 1);\nfunction candidate(...$args) {\n    return\
    \ any_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 3, 1)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.5,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1.5,\
    \ 5, 3.5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 6, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2,\
    \ 2.2, 2.2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: '1'
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// any_int(5,\
    \ 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E\
    \ True\n// any_int(3.6, -2.2, 2) \u279E False\nfunction any_int($x, $y, $z) {\n\
    \tif (is_int($x) && is_int($y) && is_int($z)) {\n\t\tif ($x == $y + $z || $y ==\
    \ $x + $z || $z == $x + $y) {\n\t\t\treturn true;\n\t\t} else {\n\t\t\treturn\
    \ false;\n\t\t}\n\t} else {\n\t\treturn false;\n\t}\n}\necho any_int(5, 2, 7);\n\
    echo \"<br>\";\necho any_int(3, 2, 2);\necho \"<br>\";\necho any_int(3, -2, 1);\n\
    echo \"<br>\";\necho any_int(3.6, -2.2, 2);\necho \"<br>\";\necho any_int(3.6,\
    \ -2.2, 2.2);\necho \"<br>\";\necho any_int(3.6, -2.2, 2.2);\necho \"<br>\";\n\
    echo any_int(3.6, -2.2, 2.2);\necho \"<br>\";\necho any_int(3.6, -2.2, 2.2);\n\
    echo \"<br>\";\necho any_int(3.6, -2.2, 2.2);\necho \"<br>\";\necho any_int(3.6,\
    \ -2.2, 2.2);\necho \"<br>\";\necho any_int(3.6, -2.2, 2.2);\necho \"<br>\";\n\
    echo any_int(3.6, -2.2, 2.2);\necho \"<br>\";\necho any_int(3.6, -2.2, 2.2);\n\
    echo \"<br>\";\necho any_int(3.6, -2.2, 2.2);\necho \"<br>\";\necho any_int(3.6,\
    \ -2.2, 2.2);\necho \"<br>\";\necho any_int(3.6, -2.2, 2.2);\necho \"<br>\";\n\
    echo any_int(3.6, -2.2, 2.2);\necho \"<br>\";\necho any_int(3.6, -2\nfunction\
    \ candidate(...$args) {\n    return any_int(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(2, 3, 1) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2.5, 2, 3) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1.5, 5, 3.5) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 6, 2) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4, 2, 2) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2.2, 2.2, 2.2) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-4, 6, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3, 4, 7) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3.0, 4, 7) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Parse error:  syntax error, unexpected token \"function\", expecting\
    \ \")\" in /tmp/tmpt3n8qzit.php on line 56\n"
  exit_code: 255
  status: SyntaxError
- program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// any_int(5,\
    \ 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E\
    \ True\n// any_int(3.6, -2.2, 2) \u279E False\nfunction any_int($x, $y, $z) {\n\
    \tif (is_int($x) && is_int($y) && is_int($z)) {\n\t\tif ($x + $y == $z || $x +\
    \ $z == $y || $y + $z == $x) {\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n\
    }\necho any_int(5, 2, 7);\necho any_int(3, 2, 2);\necho any_int(3, -2, 1);\necho\
    \ any_int(3.6, -2.2, 2);\nfunction candidate(...$args) {\n    return any_int(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2, 3, 1) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2.5, 2, 3) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(1.5, 5, 3.5) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 6, 2) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 2, 2) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2, 2.2, 2.2)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: '11'
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// any_int(5,\
    \ 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E\
    \ True\n// any_int(3.6, -2.2, 2) \u279E False\nfunction any_int($x, $y, $z) {\n\
    \tif (is_int($x) && is_int($y) && is_int($z)) {\n\t\tif ($x + $y == $z || $x +\
    \ $z == $y || $y + $z == $x) {\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n\
    }\necho any_int(5, 2, 7);\necho any_int(3, 2, 2);\necho any_int(3, -2, 1);\necho\
    \ any_int(3.6, -2.2, 2);\nfunction candidate(...$args) {\n    return any_int(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2, 3, 1) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2.5, 2, 3) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(1.5, 5, 3.5) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 6, 2) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 2, 2) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2, 2.2, 2.2)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: '11'
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// any_int(5,\
    \ 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E\
    \ True\n// any_int(3.6, -2.2, 2) \u279E False\nfunction any_int($x, $y, $z) {\n\
    \tif (is_int($x) && is_int($y) && is_int($z)) {\n\t\tif ($x + $y == $z || $x +\
    \ $z == $y || $y + $z == $x) {\n\t\t\treturn true;\n\t\t} else {\n\t\t\treturn\
    \ false;\n\t\t}\n\t} else {\n\t\treturn false;\n\t}\n}\necho any_int(3, -2, 1);\n\
    function candidate(...$args) {\n    return any_int(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(2, 3, 1) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2.5, 2, 3) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1.5, 5, 3.5) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 6, 2) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4, 2, 2) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2.2, 2.2, 2.2) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-4, 6, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3, 4, 7) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3.0, 4, 7) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: '1'
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// any_int(5,\
    \ 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E\
    \ True\n// any_int(3.6, -2.2, 2) \u279E False\nfunction any_int($x, $y, $z) {\n\
    \tif ($x == $y + $z || $y == $x + $z || $z == $x + $y) {\n\t\treturn true;\n\t\
    }\n\telse {\n\t\treturn false;\n\t}\n}\necho any_int(5, 2, 7);\nfunction candidate(...$args)\
    \ {\n    return any_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2,\
    \ 3, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.5,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1.5,\
    \ 5, 3.5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 6, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2,\
    \ 2.2, 2.2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: '1'
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp8r5x94pc.php:26\n\
    Stack trace:\n#0 /tmp/tmp8r5x94pc.php(36): test()\n#1 {main}\n  thrown in /tmp/tmp8r5x94pc.php\
    \ on line 26\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// any_int(5,\
    \ 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E\
    \ True\n// any_int(3.6, -2.2, 2) \u279E False\nfunction any_int($x, $y, $z) {\n\
    \tif(is_int($x) && is_int($y) && is_int($z)){\n\t\tif($x == $y + $z || $y == $x\
    \ + $z || $z == $x + $y){\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n}\n\
    echo any_int(3, 2, 2);\nfunction candidate(...$args) {\n    return any_int(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2, 3, 1) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2.5, 2, 3) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(1.5, 5, 3.5) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 6, 2) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 2, 2) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2, 2.2, 2.2)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// any_int(5,\
    \ 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E\
    \ True\n// any_int(3.6, -2.2, 2) \u279E False\nfunction any_int($x, $y, $z) {\n\
    \tif(is_int($x) && is_int($y) && is_int($z)) {\n\t\tif($x + $y == $z || $x + $z\
    \ == $y || $y + $z == $x) {\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n\
    }\necho any_int(5, 2, 7);\necho any_int(3, 2, 2);\necho any_int(3, -2, 1);\necho\
    \ any_int(3.6, -2.2, 2);\nfunction candidate(...$args) {\n    return any_int(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2, 3, 1) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2.5, 2, 3) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(1.5, 5, 3.5) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 6, 2) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 2, 2) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2, 2.2, 2.2)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: '11'
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// any_int(5,\
    \ 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E\
    \ True\n// any_int(3.6, -2.2, 2) \u279E False\nfunction any_int($x, $y, $z) {\n\
    \tif(is_int($x) && is_int($y) && is_int($z)){\n\t\tif($x + $y == $z || $x + $z\
    \ == $y || $y + $z == $x){\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n\
    }\necho any_int(5, 2, 7);\necho any_int(3, 2, 2);\necho any_int(3, -2, 1);\necho\
    \ any_int(3.6, -2.2, 2);\nfunction candidate(...$args) {\n    return any_int(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2, 3, 1) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2.5, 2, 3) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(1.5, 5, 3.5) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 6, 2) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 2, 2) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2, 2.2, 2.2)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: '11'
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// any_int(5,\
    \ 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E\
    \ True\n// any_int(3.6, -2.2, 2) \u279E False\nfunction any_int($x, $y, $z) {\n\
    \treturn (is_int($x) && is_int($y) && is_int($z)) && ($x + $y == $z || $x + $z\
    \ == $y || $y + $z == $x);\n}\nfunction candidate(...$args) {\n    return any_int(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2, 3, 1) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2.5, 2, 3) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(1.5, 5, 3.5) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 6, 2) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 2, 2) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2, 2.2, 2.2)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// any_int(5,\
    \ 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E\
    \ True\n// any_int(3.6, -2.2, 2) \u279E False\nfunction any_int($x, $y, $z) {\n\
    \    if (is_int($x) && is_int($y) && is_int($z)) {\n        if ($x + $y == $z\
    \ || $x + $z == $y || $y + $z == $x) {\n            return true;\n        } else\
    \ {\n            return false;\n        }\n    } else {\n        return false;\n\
    \    }\n}\necho any_int(5, 2, 7) . PHP_EOL;\necho any_int(3, 2, 2) . PHP_EOL;\n\
    echo any_int(3, -2, 1) . PHP_EOL;\necho any_int(3.6, -2.2, 2) . PHP_EOL;\nfunction\
    \ candidate(...$args) {\n    return any_int(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(2, 3, 1) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2.5, 2, 3) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1.5, 5, 3.5) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 6, 2) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4, 2, 2) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2.2, 2.2, 2.2) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-4, 6, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3, 4, 7) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3.0, 4, 7) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "1\n\n1\n\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// any_int(5,\
    \ 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E\
    \ True\n// any_int(3.6, -2.2, 2) \u279E False\nfunction any_int($x, $y, $z) {\n\
    \tif (is_int($x) && is_int($y) && is_int($z)) {\n\t\tif ($x == $y + $z || $y ==\
    \ $x + $z || $z == $x + $y) {\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n\
    }\necho any_int(5, 2, 7) . PHP_EOL;\necho any_int(3, 2, 2) . PHP_EOL;\necho any_int(3,\
    \ -2, 1) . PHP_EOL;\necho any_int(3.6, -2.2, 2) . PHP_EOL;\nfunction candidate(...$args)\
    \ {\n    return any_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2,\
    \ 3, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.5,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1.5,\
    \ 5, 3.5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 6, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2,\
    \ 2.2, 2.2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "1\n\n1\n\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// any_int(5,\
    \ 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E\
    \ True\n// any_int(3.6, -2.2, 2) \u279E False\nfunction any_int($x, $y, $z) {\n\
    \tif(is_int($x) && is_int($y) && is_int($z)) {\n\t\tif($x == $y + $z || $y ==\
    \ $x + $z || $z == $x + $y) {\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n\
    }\necho any_int(5, 2, 7);\necho \"<br>\";\necho any_int(3, 2, 2);\necho \"<br>\"\
    ;\necho any_int(3, -2, 1);\necho \"<br>\";\necho any_int(3.6, -2.2, 2);\nfunction\
    \ candidate(...$args) {\n    return any_int(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(2, 3, 1) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2.5, 2, 3) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1.5, 5, 3.5) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 6, 2) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4, 2, 2) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2.2, 2.2, 2.2) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-4, 6, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3, 4, 7) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3.0, 4, 7) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: 1<br><br>1<br>
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// any_int(5,\
    \ 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E\
    \ True\n// any_int(3.6, -2.2, 2) \u279E False\nfunction any_int($x, $y, $z) {\n\
    \    if (is_int($x) && is_int($y) && is_int($z)) {\n        if ($x + $y == $z\
    \ || $x + $z == $y || $y + $z == $x) {\n            return true;\n        } else\
    \ {\n            return false;\n        }\n    } else {\n        return false;\n\
    \    }\n}\necho any_int(3, 2, 2);\nfunction candidate(...$args) {\n    return\
    \ any_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 3, 1)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.5,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1.5,\
    \ 5, 3.5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 6, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2,\
    \ 2.2, 2.2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// any_int(5,\
    \ 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E\
    \ True\n// any_int(3.6, -2.2, 2) \u279E False\nfunction any_int($x, $y, $z) {\n\
    \tif (is_int($x) && is_int($y) && is_int($z)) {\n\t\tif ($x + $y == $z || $x +\
    \ $z == $y || $y + $z == $x) {\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n\
    }\necho any_int(5, 2, 7);\necho any_int(3, 2, 2);\necho any_int(3, -2, 1);\necho\
    \ any_int(3.6, -2.2, 2);\nfunction candidate(...$args) {\n    return any_int(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2, 3, 1) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2.5, 2, 3) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(1.5, 5, 3.5) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 6, 2) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 2, 2) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2, 2.2, 2.2)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: '11'
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// any_int(5,\
    \ 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E\
    \ True\n// any_int(3.6, -2.2, 2) \u279E False\nfunction any_int($x, $y, $z) {\n\
    \tif (is_int($x) && is_int($y) && is_int($z)) {\n\t\tif ($x + $y == $z || $x +\
    \ $z == $y || $y + $z == $x) {\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n\
    }\necho any_int(5, 2, 7) . PHP_EOL;\necho any_int(3, 2, 2) . PHP_EOL;\necho any_int(3,\
    \ -2, 1) . PHP_EOL;\necho any_int(3.6, -2.2, 2) . PHP_EOL;\nfunction candidate(...$args)\
    \ {\n    return any_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2,\
    \ 3, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.5,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1.5,\
    \ 5, 3.5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 6, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2,\
    \ 2.2, 2.2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "1\n\n1\n\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// any_int(5,\
    \ 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E\
    \ True\n// any_int(3.6, -2.2, 2) \u279E False\nfunction any_int($x, $y, $z) {\n\
    \tif (is_int($x) && is_int($y) && is_int($z)) {\n\t\tif ($x + $y == $z || $x +\
    \ $z == $y || $y + $z == $x) {\n\t\t\treturn true;\n\t\t} else {\n\t\t\treturn\
    \ false;\n\t\t}\n\t} else {\n\t\treturn false;\n\t}\n}\necho any_int(5, 2, 7);\n\
    echo any_int(3, 2, 2);\necho any_int(3, -2, 1);\necho any_int(3.6, -2.2, 2);\n\
    function candidate(...$args) {\n    return any_int(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(2, 3, 1) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2.5, 2, 3) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1.5, 5, 3.5) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 6, 2) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4, 2, 2) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2.2, 2.2, 2.2) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-4, 6, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3, 4, 7) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3.0, 4, 7) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: '11'
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// any_int(5,\
    \ 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E\
    \ True\n// any_int(3.6, -2.2, 2) \u279E False\nfunction any_int($x, $y, $z) {\n\
    \tif (is_int($x) && is_int($y) && is_int($z)) {\n\t\tif ($x + $y == $z || $x +\
    \ $z == $y || $y + $z == $x) {\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n\
    }\nfunction candidate(...$args) {\n    return any_int(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(2, 3, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2.5, 2, 3) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1.5, 5, 3.5) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 6, 2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4, 2, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2.2, 2.2, 2.2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-4, 6, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3, 4, 7) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3.0, 4, 7) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// any_int(5,\
    \ 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E\
    \ True\n// any_int(3.6, -2.2, 2) \u279E False\nfunction any_int($x, $y, $z) {\n\
    \    return ($x == $y + $z || $y == $x + $z || $z == $x + $y) && is_int($x) &&\
    \ is_int($y) && is_int($z);\n}\necho any_int(5, 2, 7);\necho \"<br>\";\necho any_int(3,\
    \ 2, 2);\necho \"<br>\";\necho any_int(3, -2, 1);\necho \"<br>\";\necho any_int(3.6,\
    \ -2.2, 2);\nfunction candidate(...$args) {\n    return any_int(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(2, 3, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2.5, 2, 3) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1.5, 5, 3.5) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 6, 2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4, 2, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2.2, 2.2, 2.2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-4, 6, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3, 4, 7) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3.0, 4, 7) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: 1<br><br>1<br>
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// any_int(5,\
    \ 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E\
    \ True\n// any_int(3.6, -2.2, 2) \u279E False\nfunction any_int($x, $y, $z) {\n\
    \tif (is_int($x) && is_int($y) && is_int($z)) {\n\t\tif ($x + $y == $z || $x +\
    \ $z == $y || $y + $z == $x) {\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n\
    }\necho any_int(3, -2, 1);\nfunction candidate(...$args) {\n    return any_int(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2, 3, 1) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2.5, 2, 3) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(1.5, 5, 3.5) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 6, 2) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 2, 2) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2, 2.2, 2.2)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: '1'
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// any_int(5,\
    \ 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E\
    \ True\n// any_int(3.6, -2.2, 2) \u279E False\nfunction any_int($x, $y, $z) {\n\
    \tif (is_int($x) && is_int($y) && is_int($z)) {\n\t\tif ($x + $y == $z || $x +\
    \ $z == $y || $y + $z == $x) {\n\t\t\treturn true;\n\t\t} else {\n\t\t\treturn\
    \ false;\n\t\t}\n\t} else {\n\t\treturn false;\n\t}\n}\necho any_int(5, 2, 7);\n\
    echo \"<br>\";\necho any_int(3, 2, 2);\necho \"<br>\";\necho any_int(3, -2, 1);\n\
    echo \"<br>\";\necho any_int(3.6, -2.2, 2);\nfunction candidate(...$args) {\n\
    \    return any_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2,\
    \ 3, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.5,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1.5,\
    \ 5, 3.5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 6, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2,\
    \ 2.2, 2.2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: 1<br><br>1<br>
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// any_int(5,\
    \ 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E\
    \ True\n// any_int(3.6, -2.2, 2) \u279E False\nfunction any_int($x, $y, $z) {\n\
    \tif (is_int($x) && is_int($y) && is_int($z)) {\n\t\tif ($x + $y == $z || $x +\
    \ $z == $y || $y + $z == $x) {\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n\
    }\necho any_int(5, 2, 7) . \"\\n\";\necho any_int(3, 2, 2) . \"\\n\";\necho any_int(3,\
    \ -2, 1) . \"\\n\";\necho any_int(3.6, -2.2, 2) . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return any_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2,\
    \ 3, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.5,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1.5,\
    \ 5, 3.5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 6, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2,\
    \ 2.2, 2.2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "1\n\n1\n\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// any_int(5,\
    \ 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E\
    \ True\n// any_int(3.6, -2.2, 2) \u279E False\nfunction any_int($x, $y, $z) {\n\
    \    return (is_int($x) && is_int($y) && is_int($z)) && ($x + $y == $z || $x +\
    \ $z == $y || $y + $z == $x);\n}\necho any_int(5, 2, 7) . \"\\n\";\necho any_int(3,\
    \ 2, 2) . \"\\n\";\necho any_int(3, -2, 1) . \"\\n\";\necho any_int(3.6, -2.2,\
    \ 2) . \"\\n\";\nfunction candidate(...$args) {\n    return any_int(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2, 3, 1) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2.5, 2, 3) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(1.5, 5, 3.5) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 6, 2) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 2, 2) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2, 2.2, 2.2)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "1\n\n1\n\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// any_int(5,\
    \ 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E\
    \ True\n// any_int(3.6, -2.2, 2) \u279E False\nfunction any_int($x, $y, $z) {\n\
    \tif(is_int($x) && is_int($y) && is_int($z)){\n\t\tif($x == $y + $z || $y == $x\
    \ + $z || $z == $x + $y){\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n}\n\
    echo any_int(5, 2, 7);\necho any_int(3, 2, 2);\necho any_int(3, -2, 1);\necho\
    \ any_int(3.6, -2.2, 2);\nfunction candidate(...$args) {\n    return any_int(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2, 3, 1) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2.5, 2, 3) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(1.5, 5, 3.5) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 6, 2) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 2, 2) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2, 2.2, 2.2)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: '11'
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// any_int(5,\
    \ 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E\
    \ True\n// any_int(3.6, -2.2, 2) \u279E False\nfunction any_int($x, $y, $z) {\n\
    \tif(is_int($x) && is_int($y) && is_int($z)) {\n\t\tif($x + $y == $z || $x + $z\
    \ == $y || $y + $z == $x) {\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n\
    }\necho any_int(5, 2, 7);\necho any_int(3, 2, 2);\necho any_int(3, -2, 1);\necho\
    \ any_int(3.6, -2.2, 2);\nfunction candidate(...$args) {\n    return any_int(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2, 3, 1) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2.5, 2, 3) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(1.5, 5, 3.5) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 6, 2) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 2, 2) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2, 2.2, 2.2)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: '11'
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// any_int(5,\
    \ 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E\
    \ True\n// any_int(3.6, -2.2, 2) \u279E False\nfunction any_int($x, $y, $z) {\n\
    \tif (is_int($x) && is_int($y) && is_int($z)) {\n\t\tif ($x + $y == $z || $x +\
    \ $z == $y || $y + $z == $x) {\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n\
    }\necho any_int(5, 2, 7) . \"\\n\";\necho any_int(3, 2, 2) . \"\\n\";\necho any_int(3,\
    \ -2, 1) . \"\\n\";\necho any_int(3.6, -2.2, 2) . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return any_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2,\
    \ 3, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.5,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1.5,\
    \ 5, 3.5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 6, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2,\
    \ 2.2, 2.2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "1\n\n1\n\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// any_int(5,\
    \ 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E\
    \ True\n// any_int(3.6, -2.2, 2) \u279E False\nfunction any_int($x, $y, $z) {\n\
    \tif (is_int($x) && is_int($y) && is_int($z)) {\n\t\tif ($x == $y + $z || $y ==\
    \ $x + $z || $z == $x + $y) {\n\t\t\treturn true;\n\t\t} else {\n\t\t\treturn\
    \ false;\n\t\t}\n\t} else {\n\t\treturn false;\n\t}\n}\necho any_int(3, -2, 1);\n\
    function candidate(...$args) {\n    return any_int(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(2, 3, 1) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2.5, 2, 3) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1.5, 5, 3.5) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 6, 2) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4, 2, 2) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2.2, 2.2, 2.2) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-4, 6, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3, 4, 7) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3.0, 4, 7) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: '1'
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// any_int(5,\
    \ 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E\
    \ True\n// any_int(3.6, -2.2, 2) \u279E False\nfunction any_int($x, $y, $z) {\n\
    \tif (is_int($x) && is_int($y) && is_int($z)) {\n\t\tif ($x + $y == $z || $x +\
    \ $z == $y || $y + $z == $x) {\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n\
    }\necho any_int(5, 2, 7);\necho any_int(3, 2, 2);\necho any_int(3, -2, 1);\necho\
    \ any_int(3.6, -2.2, 2);\nfunction candidate(...$args) {\n    return any_int(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2, 3, 1) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2.5, 2, 3) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(1.5, 5, 3.5) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 6, 2) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 2, 2) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2, 2.2, 2.2)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: '11'
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// any_int(5,\
    \ 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E\
    \ True\n// any_int(3.6, -2.2, 2) \u279E False\nfunction any_int($x, $y, $z) {\n\
    \tif(is_int($x) && is_int($y) && is_int($z)) {\n\t\tif($x + $y == $z || $x + $z\
    \ == $y || $y + $z == $x) {\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n\
    }\necho any_int(5, 2, 7);\necho any_int(3, 2, 2);\necho any_int(3, -2, 1);\necho\
    \ any_int(3.6, -2.2, 2);\nfunction candidate(...$args) {\n    return any_int(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2, 3, 1) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2.5, 2, 3) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(1.5, 5, 3.5) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 6, 2) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 2, 2) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2, 2.2, 2.2)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: '11'
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// any_int(5,\
    \ 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E\
    \ True\n// any_int(3.6, -2.2, 2) \u279E False\nfunction any_int($x, $y, $z) {\n\
    \tif (is_int($x) && is_int($y) && is_int($z)) {\n\t\tif ($x + $y == $z || $x +\
    \ $z == $y || $y + $z == $x) {\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n\
    }\necho any_int(5, 2, 7);\necho any_int(3, 2, 2);\necho any_int(3, -2, 1);\necho\
    \ any_int(3.6, -2.2, 2);\nfunction candidate(...$args) {\n    return any_int(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2, 3, 1) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2.5, 2, 3) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(1.5, 5, 3.5) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 6, 2) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 2, 2) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2, 2.2, 2.2)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: '11'
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// any_int(5,\
    \ 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E\
    \ True\n// any_int(3.6, -2.2, 2) \u279E False\nfunction any_int($x, $y, $z) {\n\
    \    if (is_int($x) && is_int($y) && is_int($z)) {\n        if ($x == $y + $z\
    \ || $y == $x + $z || $z == $x + $y) {\n            return true;\n        } else\
    \ {\n            return false;\n        }\n    } else {\n        return false;\n\
    \    }\n}\necho any_int(3, -2, 1);\nfunction candidate(...$args) {\n    return\
    \ any_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 3, 1)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.5,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1.5,\
    \ 5, 3.5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 6, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2,\
    \ 2.2, 2.2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: '1'
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// any_int(5,\
    \ 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E\
    \ True\n// any_int(3.6, -2.2, 2) \u279E False\nfunction any_int($x, $y, $z) {\n\
    \tif (is_int($x) && is_int($y) && is_int($z)) {\n\t\tif ($x == $y + $z || $y ==\
    \ $x + $z || $z == $x + $y) {\n\t\t\treturn true;\n\t\t} else {\n\t\t\treturn\
    \ false;\n\t\t}\n\t} else {\n\t\treturn false;\n\t}\n}\necho any_int(5, 2, 7);\n\
    echo any_int(3, 2, 2);\necho any_int(3, -2, 1);\necho any_int(3.6, -2.2, 2);\n\
    function candidate(...$args) {\n    return any_int(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(2, 3, 1) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2.5, 2, 3) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1.5, 5, 3.5) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 6, 2) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4, 2, 2) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2.2, 2.2, 2.2) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-4, 6, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3, 4, 7) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3.0, 4, 7) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: '11'
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// any_int(5,\
    \ 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E\
    \ True\n// any_int(3.6, -2.2, 2) \u279E False\nfunction any_int($x, $y, $z) {\n\
    \tif (is_int($x) && is_int($y) && is_int($z)) {\n\t\tif ($x == $y + $z || $y ==\
    \ $x + $z || $z == $x + $y) {\n\t\t\treturn true;\n\t\t} else {\n\t\t\treturn\
    \ false;\n\t\t}\n\t} else {\n\t\treturn false;\n\t}\n}\n\necho any_int(5, 2, 7)\
    \ . \"\\n\";\necho any_int(3, 2, 2) . \"\\n\";\necho any_int(3, -2, 1) . \"\\\
    n\";\necho any_int(3.6, -2.2, 2) . \"\\n\";\nfunction candidate(...$args) {\n\
    \    return any_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2,\
    \ 3, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.5,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1.5,\
    \ 5, 3.5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 6, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2,\
    \ 2.2, 2.2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "1\n\n1\n\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// any_int(5,\
    \ 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E\
    \ True\n// any_int(3.6, -2.2, 2) \u279E False\nfunction any_int($x, $y, $z) {\n\
    \tif (($x + $y == $z) || ($x + $z == $y) || ($y + $z == $x)) {\n\t\treturn true;\n\
    \t} else {\n\t\treturn false;\n\t}\n}\necho any_int(5, 2, 7);\necho any_int(3,\
    \ 2, 2);\necho any_int(3, -2, 1);\necho any_int(3.6, -2.2, 2);\nfunction candidate(...$args)\
    \ {\n    return any_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2,\
    \ 3, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.5,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1.5,\
    \ 5, 3.5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 6, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2,\
    \ 2.2, 2.2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: '11'
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpjfqudvzy.php:28\n\
    Stack trace:\n#0 /tmp/tmpjfqudvzy.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpjfqudvzy.php\
    \ on line 28\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// any_int(5,\
    \ 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E\
    \ True\n// any_int(3.6, -2.2, 2) \u279E False\nfunction any_int($x, $y, $z) {\n\
    \tif ($x + $y == $z || $x + $z == $y || $y + $z == $x) {\n\t\treturn true;\n\t\
    } else {\n\t\treturn false;\n\t}\n}\necho any_int(5, 2, 7);\necho \"<br>\";\n\
    echo any_int(3, 2, 2);\necho \"<br>\";\necho any_int(3, -2, 1);\necho \"<br>\"\
    ;\necho any_int(3.6, -2.2, 2);\nfunction candidate(...$args) {\n    return any_int(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2, 3, 1) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2.5, 2, 3) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(1.5, 5, 3.5) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 6, 2) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 2, 2) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2, 2.2, 2.2)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: 1<br><br>1<br>
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp_hcq43yq.php:31\n\
    Stack trace:\n#0 /tmp/tmp_hcq43yq.php(41): test()\n#1 {main}\n  thrown in /tmp/tmp_hcq43yq.php\
    \ on line 31\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// any_int(5,\
    \ 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E\
    \ True\n// any_int(3.6, -2.2, 2) \u279E False\nfunction any_int($x, $y, $z) {\n\
    \tif ($x == $y + $z || $y == $x + $z || $z == $x + $y) {\n\t\treturn true;\n\t\
    } else {\n\t\treturn false;\n\t}\n}\necho any_int(3, -2, 1);\nfunction candidate(...$args)\
    \ {\n    return any_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2,\
    \ 3, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.5,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1.5,\
    \ 5, 3.5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 6, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2,\
    \ 2.2, 2.2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: '1'
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp8y0n3oap.php:25\n\
    Stack trace:\n#0 /tmp/tmp8y0n3oap.php(35): test()\n#1 {main}\n  thrown in /tmp/tmp8y0n3oap.php\
    \ on line 25\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// any_int(5,\
    \ 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E\
    \ True\n// any_int(3.6, -2.2, 2) \u279E False\nfunction any_int($x, $y, $z) {\n\
    \tif (is_int($x) && is_int($y) && is_int($z)) {\n\t\tif ($x + $y == $z || $x +\
    \ $z == $y || $y + $z == $x) {\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n\
    }\necho any_int(5, 2, 7) . \"\\n\";\necho any_int(3, 2, 2) . \"\\n\";\necho any_int(3,\
    \ -2, 1) . \"\\n\";\necho any_int(3.6, -2.2, 2) . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return any_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2,\
    \ 3, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.5,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1.5,\
    \ 5, 3.5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 6, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2,\
    \ 2.2, 2.2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "1\n\n1\n\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// any_int(5,\
    \ 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E\
    \ True\n// any_int(3.6, -2.2, 2) \u279E False\nfunction any_int($x, $y, $z) {\n\
    \tif (is_int($x) && is_int($y) && is_int($z)) {\n\t\tif ($x + $y == $z || $x +\
    \ $z == $y || $y + $z == $x) {\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n\
    }\necho any_int(5, 2, 7);\necho any_int(3, 2, 2);\necho any_int(3, -2, 1);\necho\
    \ any_int(3.6, -2.2, 2);\nfunction candidate(...$args) {\n    return any_int(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2, 3, 1) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2.5, 2, 3) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(1.5, 5, 3.5) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 6, 2) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 2, 2) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2, 2.2, 2.2)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: '11'
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// any_int(5,\
    \ 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E\
    \ True\n// any_int(3.6, -2.2, 2) \u279E False\nfunction any_int($x, $y, $z) {\n\
    \tif (is_int($x) && is_int($y) && is_int($z)) {\n\t\tif ($x == $y + $z || $y ==\
    \ $x + $z || $z == $x + $y) {\n\t\t\treturn true;\n\t\t} else {\n\t\t\treturn\
    \ false;\n\t\t}\n\t} else {\n\t\treturn false;\n\t}\n}\necho any_int(5, 2, 7)\
    \ . \"\\n\";\necho any_int(3, 2, 2) . \"\\n\";\necho any_int(3, -2, 1) . \"\\\
    n\";\necho any_int(3.6, -2.2, 2) . \"\\n\";\nfunction candidate(...$args) {\n\
    \    return any_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2,\
    \ 3, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.5,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1.5,\
    \ 5, 3.5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 6, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2,\
    \ 2.2, 2.2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "1\n\n1\n\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// any_int(5,\
    \ 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E\
    \ True\n// any_int(3.6, -2.2, 2) \u279E False\nfunction any_int($x, $y, $z) {\n\
    \tif(is_int($x) && is_int($y) && is_int($z)){\n\t\tif($x == $y + $z || $y == $x\
    \ + $z || $z == $x + $y){\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n}\n\
    echo any_int(5, 2, 7);\necho \"<br>\";\necho any_int(3, 2, 2);\necho \"<br>\"\
    ;\necho any_int(3, -2, 1);\necho \"<br>\";\necho any_int(3.6, -2.2, 2);\nfunction\
    \ candidate(...$args) {\n    return any_int(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(2, 3, 1) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2.5, 2, 3) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1.5, 5, 3.5) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 6, 2) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4, 2, 2) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2.2, 2.2, 2.2) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-4, 6, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3, 4, 7) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3.0, 4, 7) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: 1<br><br>1<br>
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// any_int(5,\
    \ 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E\
    \ True\n// any_int(3.6, -2.2, 2) \u279E False\nfunction any_int($x, $y, $z) {\n\
    \tif (is_int($x) && is_int($y) && is_int($z)) {\n\t\tif ($x == $y + $z || $y ==\
    \ $x + $z || $z == $x + $y) {\n\t\t\treturn true;\n\t\t} else {\n\t\t\treturn\
    \ false;\n\t\t}\n\t} else {\n\t\treturn false;\n\t}\n}\necho any_int(5, 2, 7);\n\
    echo any_int(3, 2, 2);\necho any_int(3, -2, 1);\necho any_int(3.6, -2.2, 2);\n\
    function candidate(...$args) {\n    return any_int(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(2, 3, 1) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2.5, 2, 3) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1.5, 5, 3.5) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 6, 2) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4, 2, 2) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2.2, 2.2, 2.2) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-4, 6, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3, 4, 7) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3.0, 4, 7) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: '11'
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// any_int(5,\
    \ 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E\
    \ True\n// any_int(3.6, -2.2, 2) \u279E False\nfunction any_int($x, $y, $z) {\n\
    \tif (is_int($x) && is_int($y) && is_int($z)) {\n\t\tif ($x == $y + $z || $y ==\
    \ $x + $z || $z == $x + $y) {\n\t\t\treturn true;\n\t\t} else {\n\t\t\treturn\
    \ false;\n\t\t}\n\t} else {\n\t\treturn false;\n\t}\n}\necho any_int(5, 2, 7)\
    \ . \"\\n\";\necho any_int(3, 2, 2) . \"\\n\";\necho any_int(3, -2, 1) . \"\\\
    n\";\necho any_int(3.6, -2.2, 2) . \"\\n\";\nfunction candidate(...$args) {\n\
    \    return any_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2,\
    \ 3, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.5,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1.5,\
    \ 5, 3.5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 6, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2,\
    \ 2.2, 2.2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "1\n\n1\n\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// any_int(5,\
    \ 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E\
    \ True\n// any_int(3.6, -2.2, 2) \u279E False\nfunction any_int($x, $y, $z) {\n\
    \tif(is_int($x) && is_int($y) && is_int($z)) {\n\t\tif($x + $y == $z || $x + $z\
    \ == $y || $y + $z == $x) {\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n\
    }\necho any_int(3, -2, 1);\nfunction candidate(...$args) {\n    return any_int(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2, 3, 1) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2.5, 2, 3) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(1.5, 5, 3.5) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 6, 2) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 2, 2) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2, 2.2, 2.2)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: '1'
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// any_int(5,\
    \ 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E\
    \ True\n// any_int(3.6, -2.2, 2) \u279E False\nfunction any_int($x, $y, $z) {\n\
    \tif (is_int($x) && is_int($y) && is_int($z)) {\n\t\tif ($x == $y + $z || $y ==\
    \ $x + $z || $z == $x + $y) {\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n\
    }\necho any_int(5, 2, 7);\necho \"<br>\";\necho any_int(3, 2, 2);\necho \"<br>\"\
    ;\necho any_int(3, -2, 1);\necho \"<br>\";\necho any_int(3.6, -2.2, 2);\necho\
    \ \"<br>\";\necho any_int(3.6, -2.2, 2.2);\necho \"<br>\";\necho any_int(3.6,\
    \ -2.2, 2.2);\necho \"<br>\";\necho any_int(3.6, -2.2, 2.2);\necho \"<br>\";\n\
    echo any_int(3.6, -2.2, 2.2);\necho \"<br>\";\necho any_int(3.6, -2.2, 2.2);\n\
    echo \"<br>\";\necho any_int(3.6, -2.2, 2.2);\necho \"<br>\";\necho any_int(3.6,\
    \ -2.2, 2.2);\necho \"<br>\";\necho any_int(3.6, -2.2, 2.2);\necho \"<br>\";\n\
    echo any_int(3.6, -2.2, 2.2);\necho \"<br>\";\necho any_int(3.6, -2.2, 2.2);\n\
    echo \"<br>\";\necho any_int(3.6, -2.2, 2.2);\necho \"<br>\";\necho any_int(3.6,\
    \ -2.2, 2.2);\necho \"<br>\";\necho any_int(3.6, -2.2, 2.2);\necho \"<br>\";\n\
    echo any_int(3.6, -2.2, 2.2);\necho \"<br>\";\necho any_int(\nfunction candidate(...$args)\
    \ {\n    return any_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2,\
    \ 3, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.5,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1.5,\
    \ 5, 3.5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 6, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2,\
    \ 2.2, 2.2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Parse error:  syntax error, unexpected identifier \"candidate\", expecting\
    \ \"(\" in /tmp/tmpfevppkql.php on line 55\n"
  exit_code: 255
  status: SyntaxError
- program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// any_int(5,\
    \ 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E\
    \ True\n// any_int(3.6, -2.2, 2) \u279E False\nfunction any_int($x, $y, $z) {\n\
    \tif (($x == $y + $z) || ($y == $x + $z) || ($z == $x + $y)) {\n\t\treturn true;\n\
    \t} else {\n\t\treturn false;\n\t}\n}\necho any_int(5, 2, 7);\necho any_int(3,\
    \ 2, 2);\necho any_int(3, -2, 1);\necho any_int(3.6, -2.2, 2);\nfunction candidate(...$args)\
    \ {\n    return any_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2,\
    \ 3, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.5,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1.5,\
    \ 5, 3.5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 6, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2,\
    \ 2.2, 2.2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: '11'
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpnoqhcl9g.php:28\n\
    Stack trace:\n#0 /tmp/tmpnoqhcl9g.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpnoqhcl9g.php\
    \ on line 28\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// any_int(5,\
    \ 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E\
    \ True\n// any_int(3.6, -2.2, 2) \u279E False\nfunction any_int($x, $y, $z) {\n\
    \tif(is_int($x) && is_int($y) && is_int($z)){\n\t\tif($x + $y == $z || $x + $z\
    \ == $y || $y + $z == $x){\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n\
    }\necho any_int(5, 2, 7);\necho any_int(3, 2, 2);\necho any_int(3, -2, 1);\necho\
    \ any_int(3.6, -2.2, 2);\nfunction candidate(...$args) {\n    return any_int(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2, 3, 1) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2.5, 2, 3) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(1.5, 5, 3.5) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 6, 2) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 2, 2) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2, 2.2, 2.2)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: '11'
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// any_int(5,\
    \ 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E\
    \ True\n// any_int(3.6, -2.2, 2) \u279E False\nfunction any_int($x, $y, $z) {\n\
    \    if (is_int($x) && is_int($y) && is_int($z)) {\n        if ($x + $y == $z\
    \ || $x + $z == $y || $y + $z == $x) {\n            return true;\n        } else\
    \ {\n            return false;\n        }\n    } else {\n        return false;\n\
    \    }\n}\necho any_int(3, -2, 1);\nfunction candidate(...$args) {\n    return\
    \ any_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 3, 1)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.5,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1.5,\
    \ 5, 3.5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 6, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2,\
    \ 2.2, 2.2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: '1'
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// any_int(5,\
    \ 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E\
    \ True\n// any_int(3.6, -2.2, 2) \u279E False\nfunction any_int($x, $y, $z) {\n\
    \tif ($x == $y + $z || $y == $x + $z || $z == $x + $y) {\n\t\treturn true;\n\t\
    } else {\n\t\treturn false;\n\t}\n}\necho any_int(5, 2, 7);\necho any_int(3, 2,\
    \ 2);\necho any_int(3, -2, 1);\necho any_int(3.6, -2.2, 2);\nfunction candidate(...$args)\
    \ {\n    return any_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2,\
    \ 3, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.5,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1.5,\
    \ 5, 3.5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 6, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2,\
    \ 2.2, 2.2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: '11'
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpeprvqah9.php:28\n\
    Stack trace:\n#0 /tmp/tmpeprvqah9.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpeprvqah9.php\
    \ on line 28\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// any_int(5,\
    \ 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E\
    \ True\n// any_int(3.6, -2.2, 2) \u279E False\nfunction any_int($x, $y, $z) {\n\
    \treturn (is_int($x) && is_int($y) && is_int($z)) && ($x + $y == $z || $x + $z\
    \ == $y || $y + $z == $x);\n}\necho any_int(5, 2, 7);\necho \"<br>\";\necho any_int(3,\
    \ 2, 2);\necho \"<br>\";\necho any_int(3, -2, 1);\necho \"<br>\";\necho any_int(3.6,\
    \ -2.2, 2);\nfunction candidate(...$args) {\n    return any_int(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(2, 3, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2.5, 2, 3) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1.5, 5, 3.5) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 6, 2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4, 2, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2.2, 2.2, 2.2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-4, 6, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3, 4, 7) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3.0, 4, 7) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: 1<br><br>1<br>
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// any_int(5,\
    \ 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E\
    \ True\n// any_int(3.6, -2.2, 2) \u279E False\nfunction any_int($x, $y, $z) {\n\
    \tif (is_int($x) && is_int($y) && is_int($z)) {\n\t\tif ($x + $y == $z || $x +\
    \ $z == $y || $y + $z == $x) {\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n\
    }\necho any_int(5, 2, 7);\necho any_int(3, 2, 2);\necho any_int(3, -2, 1);\necho\
    \ any_int(3.6, -2.2, 2);\nfunction candidate(...$args) {\n    return any_int(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2, 3, 1) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2.5, 2, 3) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(1.5, 5, 3.5) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 6, 2) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 2, 2) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2, 2.2, 2.2)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: '11'
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// any_int(5,\
    \ 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E\
    \ True\n// any_int(3.6, -2.2, 2) \u279E False\nfunction any_int($x, $y, $z) {\n\
    \tif ($x == $y + $z || $y == $x + $z || $z == $x + $y) {\n\t\treturn true;\n\t\
    } else {\n\t\treturn false;\n\t}\n}\necho any_int(5, 2, 7);\necho any_int(3, 2,\
    \ 2);\necho any_int(3, -2, 1);\necho any_int(3.6, -2.2, 2);\nfunction candidate(...$args)\
    \ {\n    return any_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2,\
    \ 3, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.5,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1.5,\
    \ 5, 3.5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 6, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2,\
    \ 2.2, 2.2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: '11'
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpz4apl0wn.php:28\n\
    Stack trace:\n#0 /tmp/tmpz4apl0wn.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpz4apl0wn.php\
    \ on line 28\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// any_int(5,\
    \ 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E\
    \ True\n// any_int(3.6, -2.2, 2) \u279E False\nfunction any_int($x, $y, $z) {\n\
    \tif (is_int($x) && is_int($y) && is_int($z)) {\n\t\tif ($x == $y + $z || $y ==\
    \ $x + $z || $z == $x + $y) {\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n\
    }\necho any_int(5, 2, 7);\necho \"<br>\";\necho any_int(3, 2, 2);\necho \"<br>\"\
    ;\necho any_int(3, -2, 1);\necho \"<br>\";\necho any_int(3.6, -2.2, 2);\nfunction\
    \ candidate(...$args) {\n    return any_int(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(2, 3, 1) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2.5, 2, 3) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1.5, 5, 3.5) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 6, 2) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4, 2, 2) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2.2, 2.2, 2.2) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-4, 6, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3, 4, 7) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3.0, 4, 7) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: 1<br><br>1<br>
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// any_int(5,\
    \ 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E\
    \ True\n// any_int(3.6, -2.2, 2) \u279E False\nfunction any_int($x, $y, $z) {\n\
    \tif (is_int($x) && is_int($y) && is_int($z)) {\n\t\tif ($x + $y == $z || $x +\
    \ $z == $y || $y + $z == $x) {\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n\
    }\necho any_int(5, 2, 7) . PHP_EOL;\necho any_int(3, 2, 2) . PHP_EOL;\necho any_int(3,\
    \ -2, 1) . PHP_EOL;\necho any_int(3.6, -2.2, 2) . PHP_EOL;\nfunction candidate(...$args)\
    \ {\n    return any_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2,\
    \ 3, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.5,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1.5,\
    \ 5, 3.5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 6, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2,\
    \ 2.2, 2.2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "1\n\n1\n\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// any_int(5,\
    \ 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E\
    \ True\n// any_int(3.6, -2.2, 2) \u279E False\nfunction any_int($x, $y, $z) {\n\
    \    return (is_int($x) && is_int($y) && is_int($z)) && ($x + $y == $z || $x +\
    \ $z == $y || $y + $z == $x);\n}\necho any_int(5, 2, 7) . \"\\n\";\necho any_int(3,\
    \ 2, 2) . \"\\n\";\necho any_int(3, -2, 1) . \"\\n\";\necho any_int(3.6, -2.2,\
    \ 2) . \"\\n\";\nfunction candidate(...$args) {\n    return any_int(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2, 3, 1) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2.5, 2, 3) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(1.5, 5, 3.5) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 6, 2) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 2, 2) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2, 2.2, 2.2)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "1\n\n1\n\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// any_int(5,\
    \ 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E\
    \ True\n// any_int(3.6, -2.2, 2) \u279E False\nfunction any_int($x, $y, $z) {\n\
    \tif ($x + $y == $z || $x + $z == $y || $y + $z == $x) {\n\t\treturn true;\n\t\
    } else {\n\t\treturn false;\n\t}\n}\necho any_int(5, 2, 7) . \"\\n\";\necho any_int(3,\
    \ 2, 2) . \"\\n\";\necho any_int(3, -2, 1) . \"\\n\";\necho any_int(3.6, -2.2,\
    \ 2) . \"\\n\";\nfunction candidate(...$args) {\n    return any_int(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2, 3, 1) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2.5, 2, 3) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(1.5, 5, 3.5) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 6, 2) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 2, 2) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2, 2.2, 2.2)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "1\n\n1\n\n"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp1li98phs.php:28\n\
    Stack trace:\n#0 /tmp/tmp1li98phs.php(38): test()\n#1 {main}\n  thrown in /tmp/tmp1li98phs.php\
    \ on line 28\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// any_int(5,\
    \ 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E\
    \ True\n// any_int(3.6, -2.2, 2) \u279E False\nfunction any_int($x, $y, $z) {\n\
    \tif(is_int($x) && is_int($y) && is_int($z)) {\n\t\tif($x == $y + $z || $y ==\
    \ $x + $z || $z == $x + $y) {\n\t\t\treturn true;\n\t\t} else {\n\t\t\treturn\
    \ false;\n\t\t}\n\t} else {\n\t\treturn false;\n\t}\n}\necho any_int(5, 2, 7)\
    \ . \"\\n\";\necho any_int(3, 2, 2) . \"\\n\";\necho any_int(3, -2, 1) . \"\\\
    n\";\necho any_int(3.6, -2.2, 2) . \"\\n\";\nfunction candidate(...$args) {\n\
    \    return any_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2,\
    \ 3, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.5,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1.5,\
    \ 5, 3.5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 6, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2,\
    \ 2.2, 2.2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "1\n\n1\n\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// any_int(5,\
    \ 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E\
    \ True\n// any_int(3.6, -2.2, 2) \u279E False\nfunction any_int($x, $y, $z) {\n\
    \treturn (is_int($x) && is_int($y) && is_int($z)) && ($x + $y == $z || $x + $z\
    \ == $y || $y + $z == $x);\n}\nfunction candidate(...$args) {\n    return any_int(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2, 3, 1) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2.5, 2, 3) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(1.5, 5, 3.5) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 6, 2) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 2, 2) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2, 2.2, 2.2)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// any_int(5,\
    \ 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E\
    \ True\n// any_int(3.6, -2.2, 2) \u279E False\nfunction any_int($x, $y, $z) {\n\
    \    if ($x == $y + $z || $y == $x + $z || $z == $x + $y) {\n        return true;\n\
    \    } else {\n        return false;\n    }\n}\necho any_int(5, 2, 7) . \"<br>\"\
    ;\necho any_int(3, 2, 2) . \"<br>\";\necho any_int(3, -2, 1) . \"<br>\";\necho\
    \ any_int(3.6, -2.2, 2) . \"<br>\";\nfunction candidate(...$args) {\n    return\
    \ any_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 3, 1)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.5,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1.5,\
    \ 5, 3.5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 6, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2,\
    \ 2.2, 2.2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: 1<br><br>1<br><br>
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpzjhziv4a.php:28\n\
    Stack trace:\n#0 /tmp/tmpzjhziv4a.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpzjhziv4a.php\
    \ on line 28\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// any_int(5,\
    \ 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E\
    \ True\n// any_int(3.6, -2.2, 2) \u279E False\nfunction any_int($x, $y, $z) {\n\
    \tif (is_int($x) && is_int($y) && is_int($z)) {\n\t\tif ($x + $y == $z || $x +\
    \ $z == $y || $y + $z == $x) {\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n\
    }\necho any_int(5, 2, 7);\necho any_int(3, 2, 2);\necho any_int(3, -2, 1);\necho\
    \ any_int(3.6, -2.2, 2);\nfunction candidate(...$args) {\n    return any_int(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2, 3, 1) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2.5, 2, 3) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(1.5, 5, 3.5) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 6, 2) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 2, 2) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2, 2.2, 2.2)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: '11'
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// any_int(5,\
    \ 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E\
    \ True\n// any_int(3.6, -2.2, 2) \u279E False\nfunction any_int($x, $y, $z) {\n\
    \tif (is_int($x) && is_int($y) && is_int($z)) {\n\t\tif ($x + $y == $z || $x +\
    \ $z == $y || $y + $z == $x) {\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n\
    }\necho any_int(5, 2, 7) . \"\\n\";\necho any_int(3, 2, 2) . \"\\n\";\necho any_int(3,\
    \ -2, 1) . \"\\n\";\necho any_int(3.6, -2.2, 2) . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return any_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2,\
    \ 3, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.5,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1.5,\
    \ 5, 3.5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 6, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2,\
    \ 2.2, 2.2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "1\n\n1\n\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// any_int(5,\
    \ 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E\
    \ True\n// any_int(3.6, -2.2, 2) \u279E False\nfunction any_int($x, $y, $z) {\n\
    \tif ($x + $y == $z || $x + $z == $y || $y + $z == $x) {\n\t\treturn true;\n\t\
    } else {\n\t\treturn false;\n\t}\n}\necho any_int(5, 2, 7);\necho \"<br>\";\n\
    echo any_int(3, 2, 2);\necho \"<br>\";\necho any_int(3, -2, 1);\necho \"<br>\"\
    ;\necho any_int(3.6, -2.2, 2);\nfunction candidate(...$args) {\n    return any_int(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2, 3, 1) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2.5, 2, 3) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(1.5, 5, 3.5) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 6, 2) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 2, 2) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2, 2.2, 2.2)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: 1<br><br>1<br>
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp5oc98fo2.php:31\n\
    Stack trace:\n#0 /tmp/tmp5oc98fo2.php(41): test()\n#1 {main}\n  thrown in /tmp/tmp5oc98fo2.php\
    \ on line 31\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// any_int(5,\
    \ 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E\
    \ True\n// any_int(3.6, -2.2, 2) \u279E False\nfunction any_int($x, $y, $z) {\n\
    \tif(is_int($x) && is_int($y) && is_int($z)) {\n\t\tif($x + $y == $z || $x + $z\
    \ == $y || $y + $z == $x) {\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n\
    }\necho any_int(5, 2, 7) . \"\\n\";\necho any_int(3, 2, 2) . \"\\n\";\necho any_int(3,\
    \ -2, 1) . \"\\n\";\necho any_int(3.6, -2.2, 2) . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return any_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2,\
    \ 3, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.5,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1.5,\
    \ 5, 3.5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 6, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2,\
    \ 2.2, 2.2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "1\n\n1\n\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// any_int(5,\
    \ 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E\
    \ True\n// any_int(3.6, -2.2, 2) \u279E False\nfunction any_int($x, $y, $z) {\n\
    \tif ($x == $y + $z || $y == $x + $z || $z == $x + $y) {\n\t\treturn true;\n\t\
    } else {\n\t\treturn false;\n\t}\n}\necho any_int(5, 2, 7);\necho \"<br>\";\n\
    echo any_int(3, 2, 2);\necho \"<br>\";\necho any_int(3, -2, 1);\necho \"<br>\"\
    ;\necho any_int(3.6, -2.2, 2);\nfunction candidate(...$args) {\n    return any_int(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2, 3, 1) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2.5, 2, 3) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(1.5, 5, 3.5) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 6, 2) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 2, 2) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2, 2.2, 2.2)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: 1<br><br>1<br>
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp6x5y4e59.php:31\n\
    Stack trace:\n#0 /tmp/tmp6x5y4e59.php(41): test()\n#1 {main}\n  thrown in /tmp/tmp6x5y4e59.php\
    \ on line 31\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// any_int(5,\
    \ 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E\
    \ True\n// any_int(3.6, -2.2, 2) \u279E False\nfunction any_int($x, $y, $z) {\n\
    \tif(is_int($x) && is_int($y) && is_int($z)) {\n\t\tif($x == $y + $z || $y ==\
    \ $x + $z || $z == $x + $y) {\n\t\t\treturn true;\n\t\t} else {\n\t\t\treturn\
    \ false;\n\t\t}\n\t} else {\n\t\treturn false;\n\t}\n}\necho any_int(5, 2, 7);\n\
    echo \"<br>\";\necho any_int(3, 2, 2);\necho \"<br>\";\necho any_int(3, -2, 1);\n\
    echo \"<br>\";\necho any_int(3.6, -2.2, 2);\nfunction candidate(...$args) {\n\
    \    return any_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2,\
    \ 3, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.5,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1.5,\
    \ 5, 3.5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 6, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2,\
    \ 2.2, 2.2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: 1<br><br>1<br>
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// any_int(5,\
    \ 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E\
    \ True\n// any_int(3.6, -2.2, 2) \u279E False\nfunction any_int($x, $y, $z) {\n\
    \tif (($x + $y == $z) || ($x + $z == $y) || ($y + $z == $x)) {\n\t\treturn true;\n\
    \t} else {\n\t\treturn false;\n\t}\n}\necho any_int(5, 2, 7);\necho \"<br>\";\n\
    echo any_int(3, 2, 2);\necho \"<br>\";\necho any_int(3, -2, 1);\necho \"<br>\"\
    ;\necho any_int(3.6, -2.2, 2);\necho \"<br>\";\nfunction candidate(...$args) {\n\
    \    return any_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2,\
    \ 3, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.5,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1.5,\
    \ 5, 3.5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 6, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2,\
    \ 2.2, 2.2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: 1<br><br>1<br><br>
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpkeicxcpa.php:32\n\
    Stack trace:\n#0 /tmp/tmpkeicxcpa.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpkeicxcpa.php\
    \ on line 32\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// any_int(5,\
    \ 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E\
    \ True\n// any_int(3.6, -2.2, 2) \u279E False\nfunction any_int($x, $y, $z) {\n\
    \tif (is_int($x) && is_int($y) && is_int($z)) {\n\t\tif ($x + $y == $z || $x +\
    \ $z == $y || $y + $z == $x) {\n\t\t\treturn true;\n\t\t} else {\n\t\t\treturn\
    \ false;\n\t\t}\n\t} else {\n\t\treturn false;\n\t}\n}\necho any_int(5, 2, 7)\
    \ . \"\\n\";\necho any_int(3, 2, 2) . \"\\n\";\necho any_int(3, -2, 1) . \"\\\
    n\";\necho any_int(3.6, -2.2, 2) . \"\\n\";\nfunction candidate(...$args) {\n\
    \    return any_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2,\
    \ 3, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.5,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1.5,\
    \ 5, 3.5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 6, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2,\
    \ 2.2, 2.2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "1\n\n1\n\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// any_int(5,\
    \ 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E\
    \ True\n// any_int(3.6, -2.2, 2) \u279E False\nfunction any_int($x, $y, $z) {\n\
    \tif (is_int($x) && is_int($y) && is_int($z)) {\n\t\tif ($x + $y == $z || $x +\
    \ $z == $y || $y + $z == $x) {\n\t\t\treturn true;\n\t\t} else {\n\t\t\treturn\
    \ false;\n\t\t}\n\t} else {\n\t\treturn false;\n\t}\n}\necho any_int(5, 2, 7);\n\
    echo \"<br>\";\necho any_int(3, 2, 2);\necho \"<br>\";\necho any_int(3, -2, 1);\n\
    echo \"<br>\";\necho any_int(3.6, -2.2, 2);\nfunction candidate(...$args) {\n\
    \    return any_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2,\
    \ 3, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.5,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1.5,\
    \ 5, 3.5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 6, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2,\
    \ 2.2, 2.2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: 1<br><br>1<br>
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// any_int(5,\
    \ 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E\
    \ True\n// any_int(3.6, -2.2, 2) \u279E False\nfunction any_int($x, $y, $z) {\n\
    \tif ($x == $y + $z || $y == $x + $z || $z == $x + $y) {\n\t\treturn true;\n\t\
    } else {\n\t\treturn false;\n\t}\n}\necho any_int(5, 2, 7);\necho any_int(3, 2,\
    \ 2);\necho any_int(3, -2, 1);\necho any_int(3.6, -2.2, 2);\nfunction candidate(...$args)\
    \ {\n    return any_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2,\
    \ 3, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.5,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1.5,\
    \ 5, 3.5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 6, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2,\
    \ 2.2, 2.2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: '11'
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpw3upo6yh.php:28\n\
    Stack trace:\n#0 /tmp/tmpw3upo6yh.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpw3upo6yh.php\
    \ on line 28\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// any_int(5,\
    \ 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E\
    \ True\n// any_int(3.6, -2.2, 2) \u279E False\nfunction any_int($x, $y, $z) {\n\
    \tif ($x == $y + $z || $y == $x + $z || $z == $x + $y) {\n\t\treturn true;\n\t\
    } else {\n\t\treturn false;\n\t}\n}\necho any_int(5, 2, 7);\necho \"<br>\";\n\
    echo any_int(3, 2, 2);\necho \"<br>\";\necho any_int(3, -2, 1);\necho \"<br>\"\
    ;\necho any_int(3.6, -2.2, 2);\nfunction candidate(...$args) {\n    return any_int(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2, 3, 1) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2.5, 2, 3) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(1.5, 5, 3.5) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 6, 2) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 2, 2) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2, 2.2, 2.2)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: 1<br><br>1<br>
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp74y08y0s.php:31\n\
    Stack trace:\n#0 /tmp/tmp74y08y0s.php(41): test()\n#1 {main}\n  thrown in /tmp/tmp74y08y0s.php\
    \ on line 31\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// any_int(5,\
    \ 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E\
    \ True\n// any_int(3.6, -2.2, 2) \u279E False\nfunction any_int($x, $y, $z) {\n\
    \treturn (is_int($x) && is_int($y) && is_int($z)) ? (($x + $y == $z) || ($x +\
    \ $z == $y) || ($y + $z == $x)) : false;\n}\necho any_int(5, 2, 7);\necho any_int(3,\
    \ 2, 2);\necho any_int(3, -2, 1);\necho any_int(3.6, -2.2, 2);\nfunction candidate(...$args)\
    \ {\n    return any_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2,\
    \ 3, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.5,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1.5,\
    \ 5, 3.5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 6, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2,\
    \ 2.2, 2.2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: '11'
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// any_int(5,\
    \ 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E\
    \ True\n// any_int(3.6, -2.2, 2) \u279E False\nfunction any_int($x, $y, $z) {\n\
    \tif (is_int($x) && is_int($y) && is_int($z)) {\n\t\tif ($x + $y == $z || $x +\
    \ $z == $y || $y + $z == $x) {\n\t\t\treturn true;\n\t\t} else {\n\t\t\treturn\
    \ false;\n\t\t}\n\t} else {\n\t\treturn false;\n\t}\n}\necho any_int(5, 2, 7);\n\
    echo any_int(3, 2, 2);\necho any_int(3, -2, 1);\necho any_int(3.6, -2.2, 2);\n\
    function candidate(...$args) {\n    return any_int(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(2, 3, 1) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2.5, 2, 3) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1.5, 5, 3.5) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 6, 2) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4, 2, 2) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2.2, 2.2, 2.2) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-4, 6, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3, 4, 7) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3.0, 4, 7) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: '11'
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// any_int(5,\
    \ 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E\
    \ True\n// any_int(3.6, -2.2, 2) \u279E False\nfunction any_int($x, $y, $z) {\n\
    \tif (is_int($x) && is_int($y) && is_int($z)) {\n\t\tif ($x + $y == $z || $x +\
    \ $z == $y || $y + $z == $x) {\n\t\t\treturn true;\n\t\t} else {\n\t\t\treturn\
    \ false;\n\t\t}\n\t} else {\n\t\treturn false;\n\t}\n}\necho any_int(5, 2, 7)\
    \ . \"<br>\";\necho any_int(3, 2, 2) . \"<br>\";\necho any_int(3, -2, 1) . \"\
    <br>\";\necho any_int(3.6, -2.2, 2) . \"<br>\";\nfunction candidate(...$args)\
    \ {\n    return any_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2,\
    \ 3, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.5,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1.5,\
    \ 5, 3.5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 6, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2,\
    \ 2.2, 2.2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: 1<br><br>1<br><br>
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// any_int(5,\
    \ 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E\
    \ True\n// any_int(3.6, -2.2, 2) \u279E False\nfunction any_int($x, $y, $z) {\n\
    \    if ($x == $y + $z || $y == $x + $z || $z == $x + $y) {\n        return true;\n\
    \    } else {\n        return false;\n    }\n}\necho any_int(5, 2, 7);\necho any_int(3,\
    \ 2, 2);\necho any_int(3, -2, 1);\necho any_int(3.6, -2.2, 2);\nfunction candidate(...$args)\
    \ {\n    return any_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2,\
    \ 3, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.5,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1.5,\
    \ 5, 3.5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 6, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2,\
    \ 2.2, 2.2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: '11'
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp25jc94y3.php:28\n\
    Stack trace:\n#0 /tmp/tmp25jc94y3.php(38): test()\n#1 {main}\n  thrown in /tmp/tmp25jc94y3.php\
    \ on line 28\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// any_int(5,\
    \ 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E\
    \ True\n// any_int(3.6, -2.2, 2) \u279E False\nfunction any_int($x, $y, $z) {\n\
    \tif (is_int($x) && is_int($y) && is_int($z)) {\n\t\tif ($x == $y + $z || $y ==\
    \ $x + $z || $z == $x + $y) {\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n\
    }\necho any_int(3, -2, 1);\nfunction candidate(...$args) {\n    return any_int(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2, 3, 1) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2.5, 2, 3) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(1.5, 5, 3.5) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 6, 2) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 2, 2) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2, 2.2, 2.2)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: '1'
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// any_int(5,\
    \ 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E\
    \ True\n// any_int(3.6, -2.2, 2) \u279E False\nfunction any_int($x, $y, $z) {\n\
    \tif (is_int($x) && is_int($y) && is_int($z)) {\n\t\tif ($x + $y == $z || $x +\
    \ $z == $y || $y + $z == $x) {\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n\
    }\necho any_int(5, 2, 7);\necho \"<br>\";\necho any_int(3, 2, 2);\necho \"<br>\"\
    ;\necho any_int(3, -2, 1);\necho \"<br>\";\necho any_int(3.6, -2.2, 2);\nfunction\
    \ candidate(...$args) {\n    return any_int(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(2, 3, 1) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2.5, 2, 3) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1.5, 5, 3.5) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 6, 2) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4, 2, 2) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2.2, 2.2, 2.2) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-4, 6, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3, 4, 7) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3.0, 4, 7) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: 1<br><br>1<br>
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// any_int(5,\
    \ 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E\
    \ True\n// any_int(3.6, -2.2, 2) \u279E False\nfunction any_int($x, $y, $z) {\n\
    \tif (is_int($x) && is_int($y) && is_int($z)) {\n\t\tif ($x + $y == $z || $x +\
    \ $z == $y || $y + $z == $x) {\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n\
    }\necho any_int(5, 2, 7);\necho any_int(3, 2, 2);\necho any_int(3, -2, 1);\necho\
    \ any_int(3.6, -2.2, 2);\nfunction candidate(...$args) {\n    return any_int(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2, 3, 1) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2.5, 2, 3) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(1.5, 5, 3.5) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 6, 2) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 2, 2) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2, 2.2, 2.2)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: '11'
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// any_int(5,\
    \ 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E\
    \ True\n// any_int(3.6, -2.2, 2) \u279E False\nfunction any_int($x, $y, $z) {\n\
    \tif(is_int($x) && is_int($y) && is_int($z)){\n\t\tif($x == $y + $z || $y == $x\
    \ + $z || $z == $x + $y){\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n}\n\
    echo any_int(3, -2, 1);\nfunction candidate(...$args) {\n    return any_int(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2, 3, 1) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2.5, 2, 3) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(1.5, 5, 3.5) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 6, 2) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 2, 2) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2, 2.2, 2.2)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: '1'
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// any_int(5,\
    \ 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E\
    \ True\n// any_int(3.6, -2.2, 2) \u279E False\nfunction any_int($x, $y, $z) {\n\
    \tif (is_int($x) && is_int($y) && is_int($z)) {\n\t\tif ($x + $y == $z || $x +\
    \ $z == $y || $y + $z == $x) {\n\t\t\treturn true;\n\t\t} else {\n\t\t\treturn\
    \ false;\n\t\t}\n\t} else {\n\t\treturn false;\n\t}\n}\necho any_int(5, 2, 7);\n\
    echo \"<br>\";\necho any_int(3, 2, 2);\necho \"<br>\";\necho any_int(3, -2, 1);\n\
    echo \"<br>\";\necho any_int(3.6, -2.2, 2);\nfunction candidate(...$args) {\n\
    \    return any_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2,\
    \ 3, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.5,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1.5,\
    \ 5, 3.5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 6, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2,\
    \ 2.2, 2.2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: 1<br><br>1<br>
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// any_int(5,\
    \ 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E\
    \ True\n// any_int(3.6, -2.2, 2) \u279E False\nfunction any_int($x, $y, $z) {\n\
    \tif (is_int($x) && is_int($y) && is_int($z)) {\n\t\tif ($x + $y == $z || $x +\
    \ $z == $y || $y + $z == $x) {\n\t\t\treturn true;\n\t\t} else {\n\t\t\treturn\
    \ false;\n\t\t}\n\t} else {\n\t\treturn false;\n\t}\n}\necho any_int(3, -2, 1);\n\
    function candidate(...$args) {\n    return any_int(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(2, 3, 1) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2.5, 2, 3) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1.5, 5, 3.5) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 6, 2) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4, 2, 2) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2.2, 2.2, 2.2) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-4, 6, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3, 4, 7) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3.0, 4, 7) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: '1'
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// any_int(5,\
    \ 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E\
    \ True\n// any_int(3.6, -2.2, 2) \u279E False\nfunction any_int($x, $y, $z) {\n\
    \tif (is_int($x) && is_int($y) && is_int($z)) {\n\t\tif ($x == $y + $z || $y ==\
    \ $x + $z || $z == $x + $y) {\n\t\t\treturn true;\n\t\t} else {\n\t\t\treturn\
    \ false;\n\t\t}\n\t} else {\n\t\treturn false;\n\t}\n}\necho any_int(5, 2, 7)\
    \ . \"\\n\";\necho any_int(3, 2, 2) . \"\\n\";\necho any_int(3, -2, 1) . \"\\\
    n\";\necho any_int(3.6, -2.2, 2) . \"\\n\";\nfunction candidate(...$args) {\n\
    \    return any_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2,\
    \ 3, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.5,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1.5,\
    \ 5, 3.5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 6, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2,\
    \ 2.2, 2.2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "1\n\n1\n\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// any_int(5,\
    \ 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E\
    \ True\n// any_int(3.6, -2.2, 2) \u279E False\nfunction any_int($x, $y, $z) {\n\
    \tif (is_int($x) && is_int($y) && is_int($z)) {\n\t\tif ($x + $y == $z || $x +\
    \ $z == $y || $y + $z == $x) {\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n\
    }\nfunction candidate(...$args) {\n    return any_int(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(2, 3, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2.5, 2, 3) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1.5, 5, 3.5) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 6, 2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4, 2, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2.2, 2.2, 2.2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-4, 6, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3, 4, 7) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3.0, 4, 7) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// any_int(5,\
    \ 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E\
    \ True\n// any_int(3.6, -2.2, 2) \u279E False\nfunction any_int($x, $y, $z) {\n\
    \tif (is_int($x) && is_int($y) && is_int($z)) {\n\t\tif ($x + $y == $z || $x +\
    \ $z == $y || $y + $z == $x) {\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n\
    }\necho any_int(5, 2, 7) . \"\\n\";\necho any_int(3, 2, 2) . \"\\n\";\necho any_int(3,\
    \ -2, 1) . \"\\n\";\necho any_int(3.6, -2.2, 2) . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return any_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2,\
    \ 3, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.5,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1.5,\
    \ 5, 3.5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 6, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2,\
    \ 2.2, 2.2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "1\n\n1\n\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// any_int(5,\
    \ 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E\
    \ True\n// any_int(3.6, -2.2, 2) \u279E False\nfunction any_int($x, $y, $z) {\n\
    \tif (is_int($x) && is_int($y) && is_int($z)) {\n\t\tif ($x + $y == $z || $x +\
    \ $z == $y || $y + $z == $x) {\n\t\t\treturn true;\n\t\t} else {\n\t\t\treturn\
    \ false;\n\t\t}\n\t} else {\n\t\treturn false;\n\t}\n}\necho any_int(5, 2, 7)\
    \ . \"\\n\";\necho any_int(3, 2, 2) . \"\\n\";\necho any_int(3, -2, 1) . \"\\\
    n\";\necho any_int(3.6, -2.2, 2) . \"\\n\";\nfunction candidate(...$args) {\n\
    \    return any_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2,\
    \ 3, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.5,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1.5,\
    \ 5, 3.5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 6, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2,\
    \ 2.2, 2.2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "1\n\n1\n\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// any_int(5,\
    \ 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E\
    \ True\n// any_int(3.6, -2.2, 2) \u279E False\nfunction any_int($x, $y, $z) {\n\
    \tif (is_int($x) && is_int($y) && is_int($z)) {\n\t\tif ($x + $y == $z || $x +\
    \ $z == $y || $y + $z == $x) {\n\t\t\treturn true;\n\t\t} else {\n\t\t\treturn\
    \ false;\n\t\t}\n\t} else {\n\t\treturn false;\n\t}\n}\necho any_int(5, 2, 7);\n\
    echo \"<br>\";\necho any_int(3, 2, 2);\necho \"<br>\";\necho any_int(3, -2, 1);\n\
    echo \"<br>\";\necho any_int(3.6, -2.2, 2);\nfunction candidate(...$args) {\n\
    \    return any_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2,\
    \ 3, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.5,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1.5,\
    \ 5, 3.5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 6, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2,\
    \ 2.2, 2.2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: 1<br><br>1<br>
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// any_int(5,\
    \ 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E\
    \ True\n// any_int(3.6, -2.2, 2) \u279E False\nfunction any_int($x, $y, $z) {\n\
    \tif (is_int($x) && is_int($y) && is_int($z)) {\n\t\tif ($x + $y == $z || $x +\
    \ $z == $y || $y + $z == $x) {\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n\
    }\necho any_int(5, 2, 7);\necho any_int(3, 2, 2);\necho any_int(3, -2, 1);\necho\
    \ any_int(3.6, -2.2, 2);\nfunction candidate(...$args) {\n    return any_int(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2, 3, 1) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2.5, 2, 3) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(1.5, 5, 3.5) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 6, 2) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 2, 2) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2, 2.2, 2.2)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: '11'
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// any_int(5,\
    \ 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E\
    \ True\n// any_int(3.6, -2.2, 2) \u279E False\nfunction any_int($x, $y, $z) {\n\
    \tif (is_int($x) && is_int($y) && is_int($z)) {\n\t\tif ($x == $y + $z || $y ==\
    \ $x + $z || $z == $x + $y) {\n\t\t\treturn true;\n\t\t} else {\n\t\t\treturn\
    \ false;\n\t\t}\n\t} else {\n\t\treturn false;\n\t}\n}\necho any_int(5, 2, 7)\
    \ . \"<br>\";\necho any_int(3, 2, 2) . \"<br>\";\necho any_int(3, -2, 1) . \"\
    <br>\";\necho any_int(3.6, -2.2, 2) . \"<br>\";\nfunction candidate(...$args)\
    \ {\n    return any_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2,\
    \ 3, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.5,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1.5,\
    \ 5, 3.5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 6, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2,\
    \ 2.2, 2.2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: 1<br><br>1<br><br>
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// any_int(5,\
    \ 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E\
    \ True\n// any_int(3.6, -2.2, 2) \u279E False\nfunction any_int($x, $y, $z) {\n\
    \    return (is_int($x) && is_int($y) && is_int($z)) && ($x + $y == $z || $x +\
    \ $z == $y || $y + $z == $x);\n}\necho any_int(5, 2, 7);\necho \"<br>\";\necho\
    \ any_int(3, 2, 2);\necho \"<br>\";\necho any_int(3, -2, 1);\necho \"<br>\";\n\
    echo any_int(3.6, -2.2, 2);\nfunction candidate(...$args) {\n    return any_int(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2, 3, 1) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2.5, 2, 3) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(1.5, 5, 3.5) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 6, 2) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 2, 2) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2, 2.2, 2.2)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: 1<br><br>1<br>
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// any_int(5,\
    \ 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E\
    \ True\n// any_int(3.6, -2.2, 2) \u279E False\nfunction any_int($x, $y, $z) {\n\
    \tif (is_int($x) && is_int($y) && is_int($z)) {\n\t\tif ($x + $y == $z || $x +\
    \ $z == $y || $y + $z == $x) {\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n\
    }\necho any_int(5, 2, 7);\necho any_int(3, 2, 2);\necho any_int(3, -2, 1);\necho\
    \ any_int(3.6, -2.2, 2);\nfunction candidate(...$args) {\n    return any_int(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2, 3, 1) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2.5, 2, 3) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(1.5, 5, 3.5) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 6, 2) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 2, 2) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2, 2.2, 2.2)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: '11'
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// any_int(5,\
    \ 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E\
    \ True\n// any_int(3.6, -2.2, 2) \u279E False\nfunction any_int($x, $y, $z) {\n\
    \tif ($x + $y == $z || $x + $z == $y || $y + $z == $x) {\n\t\treturn true;\n\t\
    } else {\n\t\treturn false;\n\t}\n}\necho any_int(5, 2, 7);\necho \"<br>\";\n\
    echo any_int(3, 2, 2);\necho \"<br>\";\necho any_int(3, -2, 1);\necho \"<br>\"\
    ;\necho any_int(3.6, -2.2, 2);\necho \"<br>\";\nfunction candidate(...$args) {\n\
    \    return any_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2,\
    \ 3, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.5,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1.5,\
    \ 5, 3.5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 6, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2,\
    \ 2.2, 2.2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: 1<br><br>1<br><br>
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpkts8lz1h.php:32\n\
    Stack trace:\n#0 /tmp/tmpkts8lz1h.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpkts8lz1h.php\
    \ on line 32\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// any_int(5,\
    \ 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E\
    \ True\n// any_int(3.6, -2.2, 2) \u279E False\nfunction any_int($x, $y, $z) {\n\
    \tif (is_int($x) && is_int($y) && is_int($z)) {\n\t\tif ($x == $y + $z || $y ==\
    \ $x + $z || $z == $x + $y) {\n\t\t\treturn true;\n\t\t} else {\n\t\t\treturn\
    \ false;\n\t\t}\n\t} else {\n\t\treturn false;\n\t}\n}\necho any_int(5, 2, 7);\n\
    echo \"<br>\";\necho any_int(3, 2, 2);\necho \"<br>\";\necho any_int(3, -2, 1);\n\
    echo \"<br>\";\necho any_int(3.6, -2.2, 2);\nfunction candidate(...$args) {\n\
    \    return any_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2,\
    \ 3, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.5,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1.5,\
    \ 5, 3.5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 6, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2,\
    \ 2.2, 2.2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: 1<br><br>1<br>
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// any_int(5,\
    \ 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E\
    \ True\n// any_int(3.6, -2.2, 2) \u279E False\nfunction any_int($x, $y, $z) {\n\
    \tif (($x + $y == $z) || ($x + $z == $y) || ($y + $z == $x)) {\n\t\treturn true;\n\
    \t} else {\n\t\treturn false;\n\t}\n}\necho any_int(5, 2, 7);\necho \"<br>\";\n\
    echo any_int(3, 2, 2);\necho \"<br>\";\necho any_int(3, -2, 1);\necho \"<br>\"\
    ;\necho any_int(3.6, -2.2, 2);\nfunction candidate(...$args) {\n    return any_int(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2, 3, 1) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2.5, 2, 3) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(1.5, 5, 3.5) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 6, 2) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 2, 2) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2, 2.2, 2.2)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: 1<br><br>1<br>
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp82h9iq8f.php:31\n\
    Stack trace:\n#0 /tmp/tmp82h9iq8f.php(41): test()\n#1 {main}\n  thrown in /tmp/tmp82h9iq8f.php\
    \ on line 31\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// any_int(5,\
    \ 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E\
    \ True\n// any_int(3.6, -2.2, 2) \u279E False\nfunction any_int($x, $y, $z) {\n\
    \tif (is_int($x) && is_int($y) && is_int($z)) {\n\t\tif ($x + $y == $z || $x +\
    \ $z == $y || $y + $z == $x) {\n\t\t\treturn true;\n\t\t} else {\n\t\t\treturn\
    \ false;\n\t\t}\n\t} else {\n\t\treturn false;\n\t}\n}\necho any_int(3, -2, 1);\n\
    function candidate(...$args) {\n    return any_int(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(2, 3, 1) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2.5, 2, 3) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1.5, 5, 3.5) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 6, 2) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4, 2, 2) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2.2, 2.2, 2.2) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-4, 6, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3, 4, 7) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3.0, 4, 7) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: '1'
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// any_int(5,\
    \ 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E\
    \ True\n// any_int(3.6, -2.2, 2) \u279E False\nfunction any_int($x, $y, $z) {\n\
    \tif (is_int($x) && is_int($y) && is_int($z)) {\n\t\tif ($x == $y + $z || $y ==\
    \ $x + $z || $z == $x + $y) {\n\t\t\treturn true;\n\t\t} else {\n\t\t\treturn\
    \ false;\n\t\t}\n\t} else {\n\t\treturn false;\n\t}\n}\necho any_int(5, 2, 7)\
    \ . PHP_EOL;\necho any_int(3, 2, 2) . PHP_EOL;\necho any_int(3, -2, 1) . PHP_EOL;\n\
    echo any_int(3.6, -2.2, 2) . PHP_EOL;\nfunction candidate(...$args) {\n    return\
    \ any_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2, 3, 1)\
    \ !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.5,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1.5,\
    \ 5, 3.5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 6, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2,\
    \ 2.2, 2.2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "1\n\n1\n\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// any_int(5,\
    \ 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E\
    \ True\n// any_int(3.6, -2.2, 2) \u279E False\nfunction any_int($x, $y, $z) {\n\
    \tif (is_int($x) && is_int($y) && is_int($z)) {\n\t\tif ($x + $y == $z || $x +\
    \ $z == $y || $y + $z == $x) {\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n\
    }\necho any_int(5, 2, 7);\necho any_int(3, 2, 2);\necho any_int(3, -2, 1);\necho\
    \ any_int(3.6, -2.2, 2);\nfunction candidate(...$args) {\n    return any_int(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2, 3, 1) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2.5, 2, 3) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(1.5, 5, 3.5) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 6, 2) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 2, 2) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2, 2.2, 2.2)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: '11'
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// any_int(5,\
    \ 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E\
    \ True\n// any_int(3.6, -2.2, 2) \u279E False\nfunction any_int($x, $y, $z) {\n\
    \tif (is_int($x) && is_int($y) && is_int($z)) {\n\t\tif ($x + $y == $z || $x +\
    \ $z == $y || $y + $z == $x) {\n\t\t\treturn true;\n\t\t} else {\n\t\t\treturn\
    \ false;\n\t\t}\n\t} else {\n\t\treturn false;\n\t}\n}\necho any_int(5, 2, 7);\n\
    echo \"<br>\";\necho any_int(3, 2, 2);\necho \"<br>\";\necho any_int(3, -2, 1);\n\
    echo \"<br>\";\necho any_int(3.6, -2.2, 2);\nfunction candidate(...$args) {\n\
    \    return any_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2,\
    \ 3, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.5,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1.5,\
    \ 5, 3.5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 6, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2,\
    \ 2.2, 2.2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: 1<br><br>1<br>
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// any_int(5,\
    \ 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E\
    \ True\n// any_int(3.6, -2.2, 2) \u279E False\nfunction any_int($x, $y, $z) {\n\
    \tif (is_int($x) && is_int($y) && is_int($z)) {\n\t\tif ($x + $y == $z || $x +\
    \ $z == $y || $y + $z == $x) {\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n\
    }\necho any_int(3, -2, 1);\nfunction candidate(...$args) {\n    return any_int(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2, 3, 1) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2.5, 2, 3) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(1.5, 5, 3.5) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 6, 2) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 2, 2) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2, 2.2, 2.2)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: '1'
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// any_int(5,\
    \ 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E\
    \ True\n// any_int(3.6, -2.2, 2) \u279E False\nfunction any_int($x, $y, $z) {\n\
    \tif (is_int($x) && is_int($y) && is_int($z)) {\n\t\tif ($x == $y + $z || $y ==\
    \ $x + $z || $z == $x + $y) {\n\t\t\treturn true;\n\t\t} else {\n\t\t\treturn\
    \ false;\n\t\t}\n\t} else {\n\t\treturn false;\n\t}\n}\necho any_int(5, 2, 7);\n\
    echo any_int(3, 2, 2);\necho any_int(3, -2, 1);\necho any_int(3.6, -2.2, 2);\n\
    function candidate(...$args) {\n    return any_int(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(2, 3, 1) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2.5, 2, 3) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1.5, 5, 3.5) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2, 6, 2) !== false) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4, 2, 2) !== true) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2.2, 2.2, 2.2) !== false) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(-4, 6, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3, 4, 7) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3.0, 4, 7) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: '11'
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// any_int(5,\
    \ 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E\
    \ True\n// any_int(3.6, -2.2, 2) \u279E False\nfunction any_int($x, $y, $z) {\n\
    \tif(is_int($x) && is_int($y) && is_int($z)) {\n\t\tif($x + $y == $z || $x + $z\
    \ == $y || $y + $z == $x) {\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n\
    }\necho any_int(5, 2, 7);\necho \"\\n\";\necho any_int(3, 2, 2);\necho \"\\n\"\
    ;\necho any_int(3, -2, 1);\necho \"\\n\";\necho any_int(3.6, -2.2, 2);\necho \"\
    \\n\";\nfunction candidate(...$args) {\n    return any_int(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(2, 3, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2.5, 2, 3) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1.5, 5, 3.5) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 6, 2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4, 2, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2.2, 2.2, 2.2) !== false) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(-4, 6, 2) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 1, 1) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3, 4, 7) !== true) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3.0, 4, 7) !== false) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "1\n\n1\n\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// any_int(5,\
    \ 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E\
    \ True\n// any_int(3.6, -2.2, 2) \u279E False\nfunction any_int($x, $y, $z) {\n\
    \tif (($x + $y == $z) || ($x + $z == $y) || ($y + $z == $x)) {\n\t\treturn true;\n\
    \t} else {\n\t\treturn false;\n\t}\n}\necho any_int(5, 2, 7);\necho any_int(3,\
    \ 2, 2);\necho any_int(3, -2, 1);\necho any_int(3.6, -2.2, 2);\nfunction candidate(...$args)\
    \ {\n    return any_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2,\
    \ 3, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.5,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1.5,\
    \ 5, 3.5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 6, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2,\
    \ 2.2, 2.2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: '11'
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpwdioz37p.php:28\n\
    Stack trace:\n#0 /tmp/tmpwdioz37p.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpwdioz37p.php\
    \ on line 28\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// any_int(5,\
    \ 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E\
    \ True\n// any_int(3.6, -2.2, 2) \u279E False\nfunction any_int($x, $y, $z) {\n\
    \tif (is_int($x) && is_int($y) && is_int($z)) {\n\t\tif ($x + $y == $z || $x +\
    \ $z == $y || $y + $z == $x) {\n\t\t\treturn true;\n\t\t} else {\n\t\t\treturn\
    \ false;\n\t\t}\n\t} else {\n\t\treturn false;\n\t}\n}\necho any_int(5, 2, 7);\n\
    echo \"<br>\";\necho any_int(3, 2, 2);\necho \"<br>\";\necho any_int(3, -2, 1);\n\
    echo \"<br>\";\necho any_int(3.6, -2.2, 2);\nfunction candidate(...$args) {\n\
    \    return any_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2,\
    \ 3, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.5,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1.5,\
    \ 5, 3.5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 6, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2,\
    \ 2.2, 2.2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: 1<br><br>1<br>
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// any_int(5,\
    \ 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E\
    \ True\n// any_int(3.6, -2.2, 2) \u279E False\nfunction any_int($x, $y, $z) {\n\
    \tif(is_int($x) && is_int($y) && is_int($z)){\n\t\tif($x + $y == $z || $x + $z\
    \ == $y || $y + $z == $x){\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n\
    }\necho any_int(5, 2, 7);\necho any_int(3, 2, 2);\necho any_int(3, -2, 1);\necho\
    \ any_int(3.6, -2.2, 2);\nfunction candidate(...$args) {\n    return any_int(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2, 3, 1) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2.5, 2, 3) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(1.5, 5, 3.5) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 6, 2) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 2, 2) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2, 2.2, 2.2)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: '11'
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// any_int(5,\
    \ 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E\
    \ True\n// any_int(3.6, -2.2, 2) \u279E False\nfunction any_int($x, $y, $z) {\n\
    \tif ($x == $y + $z || $y == $x + $z || $z == $x + $y) {\n\t\tif (is_int($x) &&\
    \ is_int($y) && is_int($z)) {\n\t\t\treturn true;\n\t\t} else {\n\t\t\treturn\
    \ false;\n\t\t}\n\t} else {\n\t\treturn false;\n\t}\n}\necho any_int(5, 2, 7)\
    \ . \"\\n\";\necho any_int(3, 2, 2) . \"\\n\";\necho any_int(3, -2, 1) . \"\\\
    n\";\necho any_int(3.6, -2.2, 2) . \"\\n\";\nfunction candidate(...$args) {\n\
    \    return any_int(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2,\
    \ 3, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.5,\
    \ 2, 3) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1.5,\
    \ 5, 3.5) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 6, 2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4,\
    \ 2, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2,\
    \ 2.2, 2.2) !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "1\n\n1\n\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// any_int(5,\
    \ 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E\
    \ True\n// any_int(3.6, -2.2, 2) \u279E False\nfunction any_int($x, $y, $z) {\n\
    \tif (is_int($x) && is_int($y) && is_int($z)) {\n\t\tif ($x + $y == $z || $x +\
    \ $z == $y || $y + $z == $x) {\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n\
    }\necho any_int(5, 2, 7);\necho any_int(3, 2, 2);\necho any_int(3, -2, 1);\necho\
    \ any_int(3.6, -2.2, 2);\nfunction candidate(...$args) {\n    return any_int(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2, 3, 1) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2.5, 2, 3) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(1.5, 5, 3.5) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 6, 2) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 2, 2) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2, 2.2, 2.2)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: '11'
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Create a function that takes 3 numbers.\n// Returns true if\
    \ one of the numbers is equal to the sum of the other two, and all numbers are\
    \ integers.\n// Returns false in any other cases.\n// Examples\n// any_int(5,\
    \ 2, 7) \u279E True\n// any_int(3, 2, 2) \u279E False\n// any_int(3, -2, 1) \u279E\
    \ True\n// any_int(3.6, -2.2, 2) \u279E False\nfunction any_int($x, $y, $z) {\n\
    \tif (is_int($x) && is_int($y) && is_int($z)) {\n\t\tif ($x + $y == $z || $x +\
    \ $z == $y || $y + $z == $x) {\n\t\t\treturn true;\n\t\t}\n\t}\n\treturn false;\n\
    }\necho any_int(3, -2, 1);\nfunction candidate(...$args) {\n    return any_int(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2, 3, 1) !== true) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2.5, 2, 3) !== false) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(1.5, 5, 3.5) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2, 6, 2) !== false)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(4, 2, 2) !== true)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(2.2, 2.2, 2.2)\
    \ !== false) { throw new Exception(\"Test failed!\"); }\n    if (candidate(-4,\
    \ 6, 2) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 1, 1) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 4, 7) !== true) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3.0,\
    \ 4, 7) !== false) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: '1'
  stderr: ''
  exit_code: 0
  status: OK

name: HumanEval_141_file_name_check
language: php
results:
- program: "<?php\n// Create a function which takes a string representing a file's\
    \ name, and returns\n// 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n// A file's name is considered to be valid if and only if all the\
    \ following conditions \n// are met:\n// - There should not be more than three\
    \ digits ('0'-'9') in the file's name.\n// - The file's name contains exactly\
    \ one dot '.'\n// - The substring before the dot should not be empty, and it starts\
    \ with a letter from \n// the latin alphapet ('a'-'z' and 'A'-'Z').\n// - The\
    \ substring after the dot should be one of these: ['txt', 'exe', 'dll']\n// Examples:\n\
    // file_name_check(\"example.txt\") # => 'Yes'\n// file_name_check(\"1example.dll\"\
    ) # => 'No' (the name should start with a latin alphapet letter)\nfunction file_name_check($file_name)\
    \ {\n    $file_name_arr = explode('.', $file_name);\n    $file_name_arr_count\
    \ = count($file_name_arr);\n    if ($file_name_arr_count != 2) {\n        return\
    \ 'No';\n    }\n    $file_name_arr_first = $file_name_arr[0];\n    $file_name_arr_second\
    \ = $file_name_arr[1];\n    if (strlen($file_name_arr_first) == 0) {\n       \
    \ return 'No';\n    }\n    if (!preg_match('/^[a-zA-Z]/', $file_name_arr_first))\
    \ {\n        return 'No';\n    }\n    if (preg_match('/[0-9]{4,}/', $file_name_arr_first))\
    \ {\n        return 'No';\n    }\n    if (!in_array($file_name_arr_second, ['txt',\
    \ 'exe', 'dll'])) {\n        return 'No';\n    }\n    return 'Yes';\n}\n\nfunction\
    \ candidate(...$args) {\n    return file_name_check(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"example.txt\") !== \"Yes\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"1example.dll\") !== \"No\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"s1sdf3.asd\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    K.dll\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    MY16FILE3.exe\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"His12FILE94.exe\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"_Y.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"?aREYA.exe\") !== \"No\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"/this_is_valid.dll\") !==\
    \ \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"this_is_valid.wow\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_valid.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"this_is_valid.txtexe\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#this2_i4s_5valid.ten\") !== \"No\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"@this1_is6_valid.exe\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_12valid.6exe4.txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"all.exe.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"I563_No.exe\") !== \"Yes\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Is3youfault.txt\") !== \"\
    Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"no_one#knows.dll\"\
    ) !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1I563_Yes3.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"I563_Yes3.txtt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"final..txt\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"final132\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"_f4indsartal132.\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\".txt\") !== \"No\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"s.\") !== \"\
    No\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpha5gjrrv.php:47\n\
    Stack trace:\n#0 /tmp/tmpha5gjrrv.php(70): test()\n#1 {main}\n  thrown in /tmp/tmpha5gjrrv.php\
    \ on line 47\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function which takes a string representing a file's\
    \ name, and returns\n// 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n// A file's name is considered to be valid if and only if all the\
    \ following conditions \n// are met:\n// - There should not be more than three\
    \ digits ('0'-'9') in the file's name.\n// - The file's name contains exactly\
    \ one dot '.'\n// - The substring before the dot should not be empty, and it starts\
    \ with a letter from \n// the latin alphapet ('a'-'z' and 'A'-'Z').\n// - The\
    \ substring after the dot should be one of these: ['txt', 'exe', 'dll']\n// Examples:\n\
    // file_name_check(\"example.txt\") # => 'Yes'\n// file_name_check(\"1example.dll\"\
    ) # => 'No' (the name should start with a latin alphapet letter)\nfunction file_name_check($file_name)\
    \ {\n    $file_name_array = explode('.', $file_name);\n    $file_name_array_count\
    \ = count($file_name_array);\n    $file_name_array_first = $file_name_array[0];\n\
    \    $file_name_array_last = $file_name_array[$file_name_array_count - 1];\n \
    \   $file_name_array_first_count = strlen($file_name_array_first);\n    $file_name_array_last_count\
    \ = strlen($file_name_array_last);\n    $file_name_array_first_first_char = $file_name_array_first[0];\n\
    \    $file_name_array_first_first_char_ascii = ord($file_name_array_first_first_char);\n\
    \    $file_name_array_first_first_char_ascii_is_valid = ($file_name_array_first_first_char_ascii\
    \ >= 65 && $file_name_array_first_first_char_ascii <= 90) || ($file_name_array_first_first_char_ascii\
    \ >= 97 && $file_name_array_first_first_char_ascii <= 122);\n    $file_name_array_last_is_valid\
    \ = $file_name_array_last == 'txt' || $file_name_array_last == 'exe' || $file_name_array_last\
    \ == 'dll';\n    $file_name_array_first_is_valid = $file_name_array_first_first_char_ascii_is_valid\
    \ && $file_name_array_first_count <= 3;\n    $file_name_array_is_valid = $file_name_array_count\
    \ == 2 && $file_name_array_last_is_valid && $file_name_array_first_is_valid;\n\
    \    return $file_name_array_is_valid ? 'Yes' : 'No';\n}\n\nfunction candidate(...$args)\
    \ {\n    return file_name_check(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(\"example.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"1example.dll\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"s1sdf3.asd\") !== \"No\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"K.dll\") !== \"Yes\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"MY16FILE3.exe\"\
    ) !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    His12FILE94.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(\"_Y.txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"?aREYA.exe\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"/this_is_valid.dll\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"this_is_valid.wow\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_valid.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"this_is_valid.txtexe\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#this2_i4s_5valid.ten\") !== \"No\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"@this1_is6_valid.exe\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_12valid.6exe4.txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"all.exe.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"I563_No.exe\") !== \"Yes\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Is3youfault.txt\") !== \"\
    Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"no_one#knows.dll\"\
    ) !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1I563_Yes3.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"I563_Yes3.txtt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"final..txt\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"final132\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"_f4indsartal132.\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\".txt\") !== \"No\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"s.\") !== \"\
    No\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmppvtjoc3o.php:35\n\
    Stack trace:\n#0 /tmp/tmppvtjoc3o.php(63): test()\n#1 {main}\n  thrown in /tmp/tmppvtjoc3o.php\
    \ on line 35\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function which takes a string representing a file's\
    \ name, and returns\n// 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n// A file's name is considered to be valid if and only if all the\
    \ following conditions \n// are met:\n// - There should not be more than three\
    \ digits ('0'-'9') in the file's name.\n// - The file's name contains exactly\
    \ one dot '.'\n// - The substring before the dot should not be empty, and it starts\
    \ with a letter from \n// the latin alphapet ('a'-'z' and 'A'-'Z').\n// - The\
    \ substring after the dot should be one of these: ['txt', 'exe', 'dll']\n// Examples:\n\
    // file_name_check(\"example.txt\") # => 'Yes'\n// file_name_check(\"1example.dll\"\
    ) # => 'No' (the name should start with a latin alphapet letter)\nfunction file_name_check($file_name)\
    \ {\n    $file_name_parts = explode('.', $file_name);\n    $file_name_parts_count\
    \ = count($file_name_parts);\n    if ($file_name_parts_count != 2) {\n       \
    \ return 'No';\n    }\n    $file_name_parts_count = count($file_name_parts);\n\
    \    if ($file_name_parts_count != 2) {\n        return 'No';\n    }\n    $file_name_parts_count\
    \ = count($file_name_parts);\n    if ($file_name_parts_count != 2) {\n       \
    \ return 'No';\n    }\n    $file_name_parts_count = count($file_name_parts);\n\
    \    if ($file_name_parts_count != 2) {\n        return 'No';\n    }\n    $file_name_parts_count\
    \ = count($file_name_parts);\n    if ($file_name_parts_count != 2) {\n       \
    \ return 'No';\n    }\n    $file_name_parts_count = count($file_name_parts);\n\
    \    if ($file_name_parts_count != 2) {\n        return 'No';\n    }\n    $file_name_parts_count\
    \ = count($file_name_parts);\n    if ($file_name_parts_count != 2) {\n       \
    \ return 'No';\n    }\n    $file_name_parts_count = count($file_name_parts);\n\
    \    if ($file_name_parts_count != 2) {\n        return 'No';\n    }\n    $file_name_parts_count\
    \ = count($file_name_parts);\n    if ($file_name_parts_count != 2) {\n       \
    \ return 'No';\n    }\n    $file_name_parts_count = count($file_name_parts);\n\
    \    if ($file_name_parts_count != 2) {\n        return 'No';\n    }\n    $file_name_parts_count\
    \ = count($file_name_parts);\n    if ($file_name_parts_count != 2) {\n       \
    \ return 'No';\n    }\n    $file_name_parts_count = count($file_name_parts);\n\
    \   \nfunction candidate(...$args) {\n    return file_name_check(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"example.txt\") !== \"Yes\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"1example.dll\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    s1sdf3.asd\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    K.dll\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    MY16FILE3.exe\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"His12FILE94.exe\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"_Y.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"?aREYA.exe\") !== \"No\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"/this_is_valid.dll\") !==\
    \ \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"this_is_valid.wow\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_valid.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"this_is_valid.txtexe\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#this2_i4s_5valid.ten\") !== \"No\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"@this1_is6_valid.exe\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_12valid.6exe4.txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"all.exe.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"I563_No.exe\") !== \"Yes\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Is3youfault.txt\") !== \"\
    Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"no_one#knows.dll\"\
    ) !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1I563_Yes3.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"I563_Yes3.txtt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"final..txt\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"final132\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"_f4indsartal132.\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\".txt\") !== \"No\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"s.\") !== \"\
    No\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Parse error:  Unclosed '{' on line 14 in /tmp/tmpdeunpj1m.php on line\
    \ 95\n"
  exit_code: 255
  status: SyntaxError
- program: "<?php\n// Create a function which takes a string representing a file's\
    \ name, and returns\n// 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n// A file's name is considered to be valid if and only if all the\
    \ following conditions \n// are met:\n// - There should not be more than three\
    \ digits ('0'-'9') in the file's name.\n// - The file's name contains exactly\
    \ one dot '.'\n// - The substring before the dot should not be empty, and it starts\
    \ with a letter from \n// the latin alphapet ('a'-'z' and 'A'-'Z').\n// - The\
    \ substring after the dot should be one of these: ['txt', 'exe', 'dll']\n// Examples:\n\
    // file_name_check(\"example.txt\") # => 'Yes'\n// file_name_check(\"1example.dll\"\
    ) # => 'No' (the name should start with a latin alphapet letter)\nfunction file_name_check($file_name)\
    \ {\n    $file_name_arr = explode('.', $file_name);\n    $file_name_arr_count\
    \ = count($file_name_arr);\n    if ($file_name_arr_count != 2) {\n        return\
    \ 'No';\n    }\n    $file_name_arr_first = $file_name_arr[0];\n    $file_name_arr_second\
    \ = $file_name_arr[1];\n    $file_name_arr_first_count = strlen($file_name_arr_first);\n\
    \    $file_name_arr_second_count = strlen($file_name_arr_second);\n    if ($file_name_arr_first_count\
    \ == 0 || $file_name_arr_second_count == 0) {\n        return 'No';\n    }\n \
    \   $file_name_arr_first_first_char = $file_name_arr_first[0];\n    if (!preg_match('/^[a-zA-Z]$/',\
    \ $file_name_arr_first_first_char)) {\n        return 'No';\n    }\n    $file_name_arr_first_digit_count\
    \ = 0;\n    for ($i = 0; $i < $file_name_arr_first_count; $i++) {\n        $file_name_arr_first_char\
    \ = $file_name_arr_first[$i];\n        if (preg_match('/^[0-9]$/', $file_name_arr_first_char))\
    \ {\n            $file_name_arr_first_digit_count++;\n        }\n    }\n    if\
    \ ($file_name_arr_first_digit_count > 3) {\n        return 'No';\n    }\n    if\
    \ (!in_array($file_name_arr_second, ['txt', 'exe', 'dll'])) {\n        return\
    \ 'No';\n    }\n    return 'Yes';\n}\n\nfunction candidate(...$args) {\n    return\
    \ file_name_check(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    example.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"1example.dll\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"s1sdf3.asd\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"K.dll\") !== \"Yes\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"MY16FILE3.exe\") !== \"Yes\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"His12FILE94.exe\") !==\
    \ \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"_Y.txt\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ?aREYA.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    /this_is_valid.dll\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"this_is_valid.wow\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"this_is_valid.txt\") !== \"Yes\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"this_is_valid.txtexe\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #this2_i4s_5valid.ten\") !== \"No\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"@this1_is6_valid.exe\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"this_is_12valid.6exe4.txt\") !== \"No\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"all.exe.txt\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    I563_No.exe\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"Is3youfault.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"no_one#knows.dll\") !== \"Yes\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"1I563_Yes3.exe\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"I563_Yes3.txtt\") !==\
    \ \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"final..txt\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    final132\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    _f4indsartal132.\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\".txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"s.\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Create a function which takes a string representing a file's\
    \ name, and returns\n// 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n// A file's name is considered to be valid if and only if all the\
    \ following conditions \n// are met:\n// - There should not be more than three\
    \ digits ('0'-'9') in the file's name.\n// - The file's name contains exactly\
    \ one dot '.'\n// - The substring before the dot should not be empty, and it starts\
    \ with a letter from \n// the latin alphapet ('a'-'z' and 'A'-'Z').\n// - The\
    \ substring after the dot should be one of these: ['txt', 'exe', 'dll']\n// Examples:\n\
    // file_name_check(\"example.txt\") # => 'Yes'\n// file_name_check(\"1example.dll\"\
    ) # => 'No' (the name should start with a latin alphapet letter)\nfunction file_name_check($file_name)\
    \ {\n    $file_name_arr = explode('.', $file_name);\n    $file_name_arr[0] = str_split($file_name_arr[0]);\n\
    \    $file_name_arr[1] = str_split($file_name_arr[1]);\n    $file_name_arr[0]\
    \ = array_filter($file_name_arr[0], function($v) {\n        return is_numeric($v);\n\
    \    });\n    $file_name_arr[0] = count($file_name_arr[0]);\n    $file_name_arr[1]\
    \ = implode($file_name_arr[1]);\n    if ($file_name_arr[0] > 3 || count($file_name_arr)\
    \ != 2 || !ctype_alpha($file_name_arr[0][0]) || !in_array($file_name_arr[1], ['txt',\
    \ 'exe', 'dll'])) {\n        return 'No';\n    }\n    return 'Yes';\n}\n\nfunction\
    \ candidate(...$args) {\n    return file_name_check(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"example.txt\") !== \"Yes\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"1example.dll\") !== \"No\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"s1sdf3.asd\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    K.dll\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    MY16FILE3.exe\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"His12FILE94.exe\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"_Y.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"?aREYA.exe\") !== \"No\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"/this_is_valid.dll\") !==\
    \ \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"this_is_valid.wow\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_valid.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"this_is_valid.txtexe\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#this2_i4s_5valid.ten\") !== \"No\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"@this1_is6_valid.exe\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_12valid.6exe4.txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"all.exe.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"I563_No.exe\") !== \"Yes\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Is3youfault.txt\") !== \"\
    Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"no_one#knows.dll\"\
    ) !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1I563_Yes3.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"I563_Yes3.txtt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"final..txt\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"final132\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"_f4indsartal132.\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\".txt\") !== \"No\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"s.\") !== \"\
    No\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Warning:  Trying to access array offset on value of type int in /tmp/tmpzh5vk1v_.php\
    \ on line 23\nPHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpzh5vk1v_.php:34\n\
    Stack trace:\n#0 /tmp/tmpzh5vk1v_.php(62): test()\n#1 {main}\n  thrown in /tmp/tmpzh5vk1v_.php\
    \ on line 34\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function which takes a string representing a file's\
    \ name, and returns\n// 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n// A file's name is considered to be valid if and only if all the\
    \ following conditions \n// are met:\n// - There should not be more than three\
    \ digits ('0'-'9') in the file's name.\n// - The file's name contains exactly\
    \ one dot '.'\n// - The substring before the dot should not be empty, and it starts\
    \ with a letter from \n// the latin alphapet ('a'-'z' and 'A'-'Z').\n// - The\
    \ substring after the dot should be one of these: ['txt', 'exe', 'dll']\n// Examples:\n\
    // file_name_check(\"example.txt\") # => 'Yes'\n// file_name_check(\"1example.dll\"\
    ) # => 'No' (the name should start with a latin alphapet letter)\nfunction file_name_check($file_name)\
    \ {\n    $file_name_arr = explode('.', $file_name);\n    $file_name_arr_len =\
    \ count($file_name_arr);\n    if ($file_name_arr_len != 2) {\n        return 'No';\n\
    \    }\n    $file_name_arr_first = $file_name_arr[0];\n    $file_name_arr_last\
    \ = $file_name_arr[1];\n    if (empty($file_name_arr_first) || !preg_match('/^[a-zA-Z]+$/',\
    \ $file_name_arr_first[0])) {\n        return 'No';\n    }\n    if (!preg_match('/^[a-zA-Z]+$/',\
    \ $file_name_arr_last)) {\n        return 'No';\n    }\n    if (preg_match('/\\\
    d/', $file_name_arr_first) && preg_match_all('/\\d/', $file_name_arr_first) >\
    \ 3) {\n        return 'No';\n    }\n    if (!in_array($file_name_arr_last, ['txt',\
    \ 'exe', 'dll'])) {\n        return 'No';\n    }\n    return 'Yes';\n}\n\nfunction\
    \ candidate(...$args) {\n    return file_name_check(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"example.txt\") !== \"Yes\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"1example.dll\") !== \"No\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"s1sdf3.asd\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    K.dll\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    MY16FILE3.exe\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"His12FILE94.exe\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"_Y.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"?aREYA.exe\") !== \"No\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"/this_is_valid.dll\") !==\
    \ \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"this_is_valid.wow\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_valid.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"this_is_valid.txtexe\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#this2_i4s_5valid.ten\") !== \"No\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"@this1_is6_valid.exe\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_12valid.6exe4.txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"all.exe.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"I563_No.exe\") !== \"Yes\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Is3youfault.txt\") !== \"\
    Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"no_one#knows.dll\"\
    ) !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1I563_Yes3.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"I563_Yes3.txtt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"final..txt\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"final132\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"_f4indsartal132.\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\".txt\") !== \"No\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"s.\") !== \"\
    No\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Create a function which takes a string representing a file's\
    \ name, and returns\n// 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n// A file's name is considered to be valid if and only if all the\
    \ following conditions \n// are met:\n// - There should not be more than three\
    \ digits ('0'-'9') in the file's name.\n// - The file's name contains exactly\
    \ one dot '.'\n// - The substring before the dot should not be empty, and it starts\
    \ with a letter from \n// the latin alphapet ('a'-'z' and 'A'-'Z').\n// - The\
    \ substring after the dot should be one of these: ['txt', 'exe', 'dll']\n// Examples:\n\
    // file_name_check(\"example.txt\") # => 'Yes'\n// file_name_check(\"1example.dll\"\
    ) # => 'No' (the name should start with a latin alphapet letter)\nfunction file_name_check($file_name)\
    \ {\n    $file_name_arr = explode('.', $file_name);\n    $substring_before_dot\
    \ = $file_name_arr[0];\n    $substring_after_dot = $file_name_arr[1];\n    $substring_before_dot_arr\
    \ = str_split($substring_before_dot);\n    $substring_after_dot_arr = str_split($substring_after_dot);\n\
    \    $substring_before_dot_arr_length = count($substring_before_dot_arr);\n  \
    \  $substring_after_dot_arr_length = count($substring_after_dot_arr);\n    $substring_before_dot_arr_counter\
    \ = 0;\n    $substring_after_dot_arr_counter = 0;\n    $substring_before_dot_arr_counter_2\
    \ = 0;\n    $substring_after_dot_arr_counter_2 = 0;\n    $substring_before_dot_arr_counter_3\
    \ = 0;\n    $substring_after_dot_arr_counter_3 = 0;\n    $substring_before_dot_arr_counter_4\
    \ = 0;\n    $substring_after_dot_arr_counter_4 = 0;\n    $substring_before_dot_arr_counter_5\
    \ = 0;\n    $substring_after_dot_arr_counter_5 = 0;\n    $substring_before_dot_arr_counter_6\
    \ = 0;\n    $substring_after_dot_arr_counter_6 = 0;\n    $substring_before_dot_arr_counter_7\
    \ = 0;\n    $substring_after_dot_arr_counter_7 = 0;\n    $substring_before_dot_arr_counter_8\
    \ = 0;\n    $substring_after_dot_arr_counter_8 = 0;\n    $substring_before_dot_arr_counter_9\
    \ = 0;\n    $substring_after_dot_arr_counter_9 = 0;\n    $substring_before_dot_arr_counter_10\
    \ = 0;\n    $substring_after_dot_arr_counter_10 = 0;\n    $sub\nfunction candidate(...$args)\
    \ {\n    return file_name_check(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(\"example.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"1example.dll\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"s1sdf3.asd\") !== \"No\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"K.dll\") !== \"Yes\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"MY16FILE3.exe\"\
    ) !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    His12FILE94.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(\"_Y.txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"?aREYA.exe\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"/this_is_valid.dll\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"this_is_valid.wow\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_valid.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"this_is_valid.txtexe\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#this2_i4s_5valid.ten\") !== \"No\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"@this1_is6_valid.exe\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_12valid.6exe4.txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"all.exe.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"I563_No.exe\") !== \"Yes\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Is3youfault.txt\") !== \"\
    Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"no_one#knows.dll\"\
    ) !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1I563_Yes3.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"I563_Yes3.txtt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"final..txt\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"final132\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"_f4indsartal132.\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\".txt\") !== \"No\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"s.\") !== \"\
    No\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Parse error:  syntax error, unexpected token \"function\" in /tmp/tmpaookcp1h.php\
    \ on line 43\n"
  exit_code: 255
  status: SyntaxError
- program: "<?php\n// Create a function which takes a string representing a file's\
    \ name, and returns\n// 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n// A file's name is considered to be valid if and only if all the\
    \ following conditions \n// are met:\n// - There should not be more than three\
    \ digits ('0'-'9') in the file's name.\n// - The file's name contains exactly\
    \ one dot '.'\n// - The substring before the dot should not be empty, and it starts\
    \ with a letter from \n// the latin alphapet ('a'-'z' and 'A'-'Z').\n// - The\
    \ substring after the dot should be one of these: ['txt', 'exe', 'dll']\n// Examples:\n\
    // file_name_check(\"example.txt\") # => 'Yes'\n// file_name_check(\"1example.dll\"\
    ) # => 'No' (the name should start with a latin alphapet letter)\nfunction file_name_check($file_name)\
    \ {\n    $file_name_array = explode('.', $file_name);\n    $file_name_array_count\
    \ = count($file_name_array);\n    $file_name_array_count_last = $file_name_array_count\
    \ - 1;\n    $file_name_array_count_last_value = $file_name_array[$file_name_array_count_last];\n\
    \    $file_name_array_count_first = $file_name_array_count - 2;\n    $file_name_array_count_first_value\
    \ = $file_name_array[$file_name_array_count_first];\n    $file_name_array_count_first_value_length\
    \ = strlen($file_name_array_count_first_value);\n    $file_name_array_count_first_value_length_last\
    \ = $file_name_array_count_first_value_length - 1;\n    $file_name_array_count_first_value_length_last_value\
    \ = $file_name_array_count_first_value[$file_name_array_count_first_value_length_last];\n\
    \    $file_name_array_count_first_value_length_first = $file_name_array_count_first_value_length\
    \ - 2;\n    $file_name_array_count_first_value_length_first_value = $file_name_array_count_first_value[$file_name_array_count_first_value_length_first];\n\
    \    $file_name_array_count_first_value_length_first_value_first = $file_name_array_count_first_value_length_first_value[0];\n\
    \    $file_name_array_count_first_value_length_first_value_first_value = $file_name_array_count_first_value_length_first_value_first[0];\n\
    \    $file_name_array_count_first_value_length_first_value_first_value_first =\
    \ $file_name_array_count_first_value_length_first_value_first_value[0];\n    $file_name_array_count_\n\
    function candidate(...$args) {\n    return file_name_check(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"example.txt\") !== \"Yes\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"1example.dll\") !== \"No\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"s1sdf3.asd\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    K.dll\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    MY16FILE3.exe\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"His12FILE94.exe\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"_Y.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"?aREYA.exe\") !== \"No\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"/this_is_valid.dll\") !==\
    \ \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"this_is_valid.wow\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_valid.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"this_is_valid.txtexe\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#this2_i4s_5valid.ten\") !== \"No\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"@this1_is6_valid.exe\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_12valid.6exe4.txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"all.exe.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"I563_No.exe\") !== \"Yes\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Is3youfault.txt\") !== \"\
    Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"no_one#knows.dll\"\
    ) !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1I563_Yes3.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"I563_Yes3.txtt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"final..txt\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"final132\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"_f4indsartal132.\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\".txt\") !== \"No\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"s.\") !== \"\
    No\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Parse error:  syntax error, unexpected token \"function\" in /tmp/tmpmvbbg0y_.php\
    \ on line 30\n"
  exit_code: 255
  status: SyntaxError
- program: "<?php\n// Create a function which takes a string representing a file's\
    \ name, and returns\n// 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n// A file's name is considered to be valid if and only if all the\
    \ following conditions \n// are met:\n// - There should not be more than three\
    \ digits ('0'-'9') in the file's name.\n// - The file's name contains exactly\
    \ one dot '.'\n// - The substring before the dot should not be empty, and it starts\
    \ with a letter from \n// the latin alphapet ('a'-'z' and 'A'-'Z').\n// - The\
    \ substring after the dot should be one of these: ['txt', 'exe', 'dll']\n// Examples:\n\
    // file_name_check(\"example.txt\") # => 'Yes'\n// file_name_check(\"1example.dll\"\
    ) # => 'No' (the name should start with a latin alphapet letter)\nfunction file_name_check($file_name)\
    \ {\n    $file_name_array = explode('.', $file_name);\n    $file_name_array_length\
    \ = count($file_name_array);\n    if ($file_name_array_length != 2) {\n      \
    \  return 'No';\n    }\n    $file_name_array_first = $file_name_array[0];\n  \
    \  $file_name_array_second = $file_name_array[1];\n    if (preg_match('/[^a-zA-Z]/',\
    \ $file_name_array_first)) {\n        return 'No';\n    }\n    if (preg_match('/[0-9]/',\
    \ $file_name_array_first)) {\n        return 'No';\n    }\n    if (preg_match('/[0-9]{4}/',\
    \ $file_name_array_first)) {\n        return 'No';\n    }\n    if ($file_name_array_second\
    \ != 'txt' && $file_name_array_second != 'exe' && $file_name_array_second != 'dll')\
    \ {\n        return 'No';\n    }\n    return 'Yes';\n}\n\nfunction candidate(...$args)\
    \ {\n    return file_name_check(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(\"example.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"1example.dll\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"s1sdf3.asd\") !== \"No\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"K.dll\") !== \"Yes\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"MY16FILE3.exe\"\
    ) !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    His12FILE94.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(\"_Y.txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"?aREYA.exe\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"/this_is_valid.dll\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"this_is_valid.wow\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_valid.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"this_is_valid.txtexe\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#this2_i4s_5valid.ten\") !== \"No\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"@this1_is6_valid.exe\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_12valid.6exe4.txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"all.exe.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"I563_No.exe\") !== \"Yes\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Is3youfault.txt\") !== \"\
    Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"no_one#knows.dll\"\
    ) !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1I563_Yes3.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"I563_Yes3.txtt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"final..txt\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"final132\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"_f4indsartal132.\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\".txt\") !== \"No\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"s.\") !== \"\
    No\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp6xc4a8r0.php:46\n\
    Stack trace:\n#0 /tmp/tmp6xc4a8r0.php(70): test()\n#1 {main}\n  thrown in /tmp/tmp6xc4a8r0.php\
    \ on line 46\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function which takes a string representing a file's\
    \ name, and returns\n// 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n// A file's name is considered to be valid if and only if all the\
    \ following conditions \n// are met:\n// - There should not be more than three\
    \ digits ('0'-'9') in the file's name.\n// - The file's name contains exactly\
    \ one dot '.'\n// - The substring before the dot should not be empty, and it starts\
    \ with a letter from \n// the latin alphapet ('a'-'z' and 'A'-'Z').\n// - The\
    \ substring after the dot should be one of these: ['txt', 'exe', 'dll']\n// Examples:\n\
    // file_name_check(\"example.txt\") # => 'Yes'\n// file_name_check(\"1example.dll\"\
    ) # => 'No' (the name should start with a latin alphapet letter)\nfunction file_name_check($file_name)\
    \ {\n    $file_name_array = explode('.', $file_name);\n    $file_name_array_length\
    \ = count($file_name_array);\n    if ($file_name_array_length > 2) {\n       \
    \ return 'No';\n    }\n    if ($file_name_array_length == 1) {\n        return\
    \ 'No';\n    }\n    $file_name_array_first_part = $file_name_array[0];\n    $file_name_array_second_part\
    \ = $file_name_array[1];\n    if (preg_match('/^[a-zA-Z]/', $file_name_array_first_part)\
    \ == 0) {\n        return 'No';\n    }\n    if (preg_match('/[0-9]{4,}/', $file_name_array_first_part)\
    \ != 0) {\n        return 'No';\n    }\n    if (preg_match('/[0-9]{4,}/', $file_name_array_second_part)\
    \ != 0) {\n        return 'No';\n    }\n    if (preg_match('/^[a-zA-Z]/', $file_name_array_second_part)\
    \ != 0) {\n        return 'No';\n    }\n    if ($file_name_array_second_part !=\
    \ 'txt' && $file_name_array_second_part != 'exe' && $file_name_array_second_part\
    \ != 'dll') {\n        return 'No';\n    }\n    return 'Yes';\n}\n\nfunction candidate(...$args)\
    \ {\n    return file_name_check(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(\"example.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"1example.dll\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"s1sdf3.asd\") !== \"No\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"K.dll\") !== \"Yes\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"MY16FILE3.exe\"\
    ) !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    His12FILE94.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(\"_Y.txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"?aREYA.exe\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"/this_is_valid.dll\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"this_is_valid.wow\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_valid.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"this_is_valid.txtexe\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#this2_i4s_5valid.ten\") !== \"No\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"@this1_is6_valid.exe\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_12valid.6exe4.txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"all.exe.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"I563_No.exe\") !== \"Yes\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Is3youfault.txt\") !== \"\
    Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"no_one#knows.dll\"\
    ) !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1I563_Yes3.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"I563_Yes3.txtt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"final..txt\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"final132\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"_f4indsartal132.\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\".txt\") !== \"No\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"s.\") !== \"\
    No\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp7p30_sjx.php:48\n\
    Stack trace:\n#0 /tmp/tmp7p30_sjx.php(76): test()\n#1 {main}\n  thrown in /tmp/tmp7p30_sjx.php\
    \ on line 48\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function which takes a string representing a file's\
    \ name, and returns\n// 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n// A file's name is considered to be valid if and only if all the\
    \ following conditions \n// are met:\n// - There should not be more than three\
    \ digits ('0'-'9') in the file's name.\n// - The file's name contains exactly\
    \ one dot '.'\n// - The substring before the dot should not be empty, and it starts\
    \ with a letter from \n// the latin alphapet ('a'-'z' and 'A'-'Z').\n// - The\
    \ substring after the dot should be one of these: ['txt', 'exe', 'dll']\n// Examples:\n\
    // file_name_check(\"example.txt\") # => 'Yes'\n// file_name_check(\"1example.dll\"\
    ) # => 'No' (the name should start with a latin alphapet letter)\nfunction file_name_check($file_name)\
    \ {\n    $file_name_arr = explode('.', $file_name);\n    $file_name_arr_count\
    \ = count($file_name_arr);\n    if ($file_name_arr_count != 2) {\n        return\
    \ 'No';\n    }\n    $file_name_arr_first = $file_name_arr[0];\n    $file_name_arr_second\
    \ = $file_name_arr[1];\n    if (preg_match('/^[a-zA-Z]+$/', $file_name_arr_first)\
    \ == 0) {\n        return 'No';\n    }\n    if (preg_match('/^[0-9]{3,}$/', $file_name_arr_first)\
    \ == 1) {\n        return 'No';\n    }\n    if (preg_match('/^[0-9]{3,}$/', $file_name_arr_second)\
    \ == 1) {\n        return 'No';\n    }\n    if (preg_match('/^(txt|exe|dll)$/',\
    \ $file_name_arr_second) == 0) {\n        return 'No';\n    }\n    return 'Yes';\n\
    }\n\nfunction candidate(...$args) {\n    return file_name_check(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(\"example.txt\") !== \"Yes\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"1example.dll\") !==\
    \ \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"s1sdf3.asd\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    K.dll\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    MY16FILE3.exe\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"His12FILE94.exe\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"_Y.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"?aREYA.exe\") !== \"No\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"/this_is_valid.dll\") !==\
    \ \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"this_is_valid.wow\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_valid.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"this_is_valid.txtexe\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#this2_i4s_5valid.ten\") !== \"No\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"@this1_is6_valid.exe\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_12valid.6exe4.txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"all.exe.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"I563_No.exe\") !== \"Yes\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Is3youfault.txt\") !== \"\
    Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"no_one#knows.dll\"\
    ) !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1I563_Yes3.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"I563_Yes3.txtt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"final..txt\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"final132\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"_f4indsartal132.\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\".txt\") !== \"No\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"s.\") !== \"\
    No\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpdw3nt2xj.php:46\n\
    Stack trace:\n#0 /tmp/tmpdw3nt2xj.php(70): test()\n#1 {main}\n  thrown in /tmp/tmpdw3nt2xj.php\
    \ on line 46\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function which takes a string representing a file's\
    \ name, and returns\n// 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n// A file's name is considered to be valid if and only if all the\
    \ following conditions \n// are met:\n// - There should not be more than three\
    \ digits ('0'-'9') in the file's name.\n// - The file's name contains exactly\
    \ one dot '.'\n// - The substring before the dot should not be empty, and it starts\
    \ with a letter from \n// the latin alphapet ('a'-'z' and 'A'-'Z').\n// - The\
    \ substring after the dot should be one of these: ['txt', 'exe', 'dll']\n// Examples:\n\
    // file_name_check(\"example.txt\") # => 'Yes'\n// file_name_check(\"1example.dll\"\
    ) # => 'No' (the name should start with a latin alphapet letter)\nfunction file_name_check($file_name)\
    \ {\n    $file_name_arr = explode('.', $file_name);\n    $file_name_arr[0] = str_split($file_name_arr[0]);\n\
    \    $file_name_arr[1] = str_split($file_name_arr[1]);\n    $count = 0;\n    foreach\
    \ ($file_name_arr[0] as $key => $value) {\n        if (is_numeric($value)) {\n\
    \            $count++;\n        }\n    }\n    if ($count > 3) {\n        return\
    \ 'No';\n    }\n    if (count($file_name_arr) != 2) {\n        return 'No';\n\
    \    }\n    if (!ctype_alpha($file_name_arr[0][0])) {\n        return 'No';\n\
    \    }\n    if ($file_name_arr[1][0] != 't' || $file_name_arr[1][1] != 'x' ||\
    \ $file_name_arr[1][2] != 't') {\n        if ($file_name_arr[1][0] != 'e' || $file_name_arr[1][1]\
    \ != 'x' || $file_name_arr[1][2] != 'e') {\n            if ($file_name_arr[1][0]\
    \ != 'd' || $file_name_arr[1][1] != 'l' || $file_name_arr[1][2] != 'l') {\n  \
    \              return 'No';\n            }\n        }\n    }\n    return 'Yes';\n\
    }\n\nfunction candidate(...$args) {\n    return file_name_check(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(\"example.txt\") !== \"Yes\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"1example.dll\") !==\
    \ \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"s1sdf3.asd\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    K.dll\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    MY16FILE3.exe\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"His12FILE94.exe\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"_Y.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"?aREYA.exe\") !== \"No\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"/this_is_valid.dll\") !==\
    \ \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"this_is_valid.wow\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_valid.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"this_is_valid.txtexe\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#this2_i4s_5valid.ten\") !== \"No\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"@this1_is6_valid.exe\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_12valid.6exe4.txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"all.exe.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"I563_No.exe\") !== \"Yes\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Is3youfault.txt\") !== \"\
    Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"no_one#knows.dll\"\
    ) !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1I563_Yes3.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"I563_Yes3.txtt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"final..txt\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"final132\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"_f4indsartal132.\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\".txt\") !== \"No\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"s.\") !== \"\
    No\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp3fvl_3m_.php:59\n\
    Stack trace:\n#0 /tmp/tmp3fvl_3m_.php(76): test()\n#1 {main}\n  thrown in /tmp/tmp3fvl_3m_.php\
    \ on line 59\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function which takes a string representing a file's\
    \ name, and returns\n// 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n// A file's name is considered to be valid if and only if all the\
    \ following conditions \n// are met:\n// - There should not be more than three\
    \ digits ('0'-'9') in the file's name.\n// - The file's name contains exactly\
    \ one dot '.'\n// - The substring before the dot should not be empty, and it starts\
    \ with a letter from \n// the latin alphapet ('a'-'z' and 'A'-'Z').\n// - The\
    \ substring after the dot should be one of these: ['txt', 'exe', 'dll']\n// Examples:\n\
    // file_name_check(\"example.txt\") # => 'Yes'\n// file_name_check(\"1example.dll\"\
    ) # => 'No' (the name should start with a latin alphapet letter)\nfunction file_name_check($file_name)\
    \ {\n    $file_name_array = explode('.', $file_name);\n    $file_name_first_part\
    \ = $file_name_array[0];\n    $file_name_second_part = $file_name_array[1];\n\
    \    $file_name_first_part_array = str_split($file_name_first_part);\n    $file_name_second_part_array\
    \ = str_split($file_name_second_part);\n    $file_name_first_part_array_length\
    \ = count($file_name_first_part_array);\n    $file_name_second_part_array_length\
    \ = count($file_name_second_part_array);\n    $file_name_first_part_array_first_element\
    \ = $file_name_first_part_array[0];\n    $file_name_second_part_array_first_element\
    \ = $file_name_second_part_array[0];\n    $file_name_first_part_array_last_element\
    \ = $file_name_first_part_array[$file_name_first_part_array_length - 1];\n   \
    \ $file_name_second_part_array_last_element = $file_name_second_part_array[$file_name_second_part_array_length\
    \ - 1];\n    $file_name_first_part_array_first_element_ascii = ord($file_name_first_part_array_first_element);\n\
    \    $file_name_second_part_array_first_element_ascii = ord($file_name_second_part_array_first_element);\n\
    \    $file_name_first_part_array_last_element_ascii = ord($file_name_first_part_array_last_element);\n\
    \    $file_name_second_part_array_last_element_ascii = ord($file_name_second_part_array_last_element);\n\
    \    $file_name_first_part_array_first_element_ascii_is_letter = ($file_name_first_part_array_first_element_ascii\
    \ >= 65 && $file_name_first_part_array\nfunction candidate(...$args) {\n    return\
    \ file_name_check(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    example.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"1example.dll\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"s1sdf3.asd\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"K.dll\") !== \"Yes\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"MY16FILE3.exe\") !== \"Yes\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"His12FILE94.exe\") !==\
    \ \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"_Y.txt\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ?aREYA.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    /this_is_valid.dll\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"this_is_valid.wow\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"this_is_valid.txt\") !== \"Yes\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"this_is_valid.txtexe\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #this2_i4s_5valid.ten\") !== \"No\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"@this1_is6_valid.exe\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"this_is_12valid.6exe4.txt\") !== \"No\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"all.exe.txt\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    I563_No.exe\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"Is3youfault.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"no_one#knows.dll\") !== \"Yes\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"1I563_Yes3.exe\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"I563_Yes3.txtt\") !==\
    \ \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"final..txt\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    final132\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    _f4indsartal132.\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\".txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"s.\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Parse error:  syntax error, unexpected token \"function\" in /tmp/tmpzm1vwvsz.php\
    \ on line 31\n"
  exit_code: 255
  status: SyntaxError
- program: "<?php\n// Create a function which takes a string representing a file's\
    \ name, and returns\n// 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n// A file's name is considered to be valid if and only if all the\
    \ following conditions \n// are met:\n// - There should not be more than three\
    \ digits ('0'-'9') in the file's name.\n// - The file's name contains exactly\
    \ one dot '.'\n// - The substring before the dot should not be empty, and it starts\
    \ with a letter from \n// the latin alphapet ('a'-'z' and 'A'-'Z').\n// - The\
    \ substring after the dot should be one of these: ['txt', 'exe', 'dll']\n// Examples:\n\
    // file_name_check(\"example.txt\") # => 'Yes'\n// file_name_check(\"1example.dll\"\
    ) # => 'No' (the name should start with a latin alphapet letter)\nfunction file_name_check($file_name)\
    \ {\n    $file_name_array = explode('.', $file_name);\n    $file_name_array_count\
    \ = count($file_name_array);\n    if ($file_name_array_count != 2) {\n       \
    \ return 'No';\n    }\n    $file_name_array_first = $file_name_array[0];\n   \
    \ $file_name_array_second = $file_name_array[1];\n    if (preg_match('/[^a-zA-Z]/',\
    \ $file_name_array_first)) {\n        return 'No';\n    }\n    if (preg_match('/[0-9]{4,}/',\
    \ $file_name_array_first)) {\n        return 'No';\n    }\n    if (!in_array($file_name_array_second,\
    \ ['txt', 'exe', 'dll'])) {\n        return 'No';\n    }\n    return 'Yes';\n\
    }\n\nfunction candidate(...$args) {\n    return file_name_check(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(\"example.txt\") !== \"Yes\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"1example.dll\") !==\
    \ \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"s1sdf3.asd\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    K.dll\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    MY16FILE3.exe\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"His12FILE94.exe\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"_Y.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"?aREYA.exe\") !== \"No\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"/this_is_valid.dll\") !==\
    \ \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"this_is_valid.wow\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_valid.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"this_is_valid.txtexe\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#this2_i4s_5valid.ten\") !== \"No\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"@this1_is6_valid.exe\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_12valid.6exe4.txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"all.exe.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"I563_No.exe\") !== \"Yes\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Is3youfault.txt\") !== \"\
    Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"no_one#knows.dll\"\
    ) !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1I563_Yes3.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"I563_Yes3.txtt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"final..txt\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"final132\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"_f4indsartal132.\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\".txt\") !== \"No\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"s.\") !== \"\
    No\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp5gg_egb5.php:43\n\
    Stack trace:\n#0 /tmp/tmp5gg_egb5.php(67): test()\n#1 {main}\n  thrown in /tmp/tmp5gg_egb5.php\
    \ on line 43\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function which takes a string representing a file's\
    \ name, and returns\n// 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n// A file's name is considered to be valid if and only if all the\
    \ following conditions \n// are met:\n// - There should not be more than three\
    \ digits ('0'-'9') in the file's name.\n// - The file's name contains exactly\
    \ one dot '.'\n// - The substring before the dot should not be empty, and it starts\
    \ with a letter from \n// the latin alphapet ('a'-'z' and 'A'-'Z').\n// - The\
    \ substring after the dot should be one of these: ['txt', 'exe', 'dll']\n// Examples:\n\
    // file_name_check(\"example.txt\") # => 'Yes'\n// file_name_check(\"1example.dll\"\
    ) # => 'No' (the name should start with a latin alphapet letter)\nfunction file_name_check($file_name)\
    \ {\n    $file_name_array = explode('.', $file_name);\n    $file_name_array_length\
    \ = count($file_name_array);\n    if ($file_name_array_length != 2) {\n      \
    \  return 'No';\n    }\n    $file_name_array_first = $file_name_array[0];\n  \
    \  $file_name_array_second = $file_name_array[1];\n    if (preg_match('/[^a-zA-Z]/',\
    \ $file_name_array_first[0])) {\n        return 'No';\n    }\n    if (preg_match('/[0-9]/',\
    \ $file_name_array_first)) {\n        $file_name_array_first_array = str_split($file_name_array_first);\n\
    \        $file_name_array_first_array_length = count($file_name_array_first_array);\n\
    \        $count = 0;\n        for ($i = 0; $i < $file_name_array_first_array_length;\
    \ $i++) {\n            if (preg_match('/[0-9]/', $file_name_array_first_array[$i]))\
    \ {\n                $count++;\n            }\n        }\n        if ($count >\
    \ 3) {\n            return 'No';\n        }\n    }\n    if (!in_array($file_name_array_second,\
    \ ['txt', 'exe', 'dll'])) {\n        return 'No';\n    }\n    return 'Yes';\n\
    }\n\nfunction candidate(...$args) {\n    return file_name_check(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(\"example.txt\") !== \"Yes\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"1example.dll\") !==\
    \ \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"s1sdf3.asd\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    K.dll\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    MY16FILE3.exe\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"His12FILE94.exe\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"_Y.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"?aREYA.exe\") !== \"No\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"/this_is_valid.dll\") !==\
    \ \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"this_is_valid.wow\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_valid.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"this_is_valid.txtexe\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#this2_i4s_5valid.ten\") !== \"No\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"@this1_is6_valid.exe\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_12valid.6exe4.txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"all.exe.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"I563_No.exe\") !== \"Yes\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Is3youfault.txt\") !== \"\
    Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"no_one#knows.dll\"\
    ) !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1I563_Yes3.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"I563_Yes3.txtt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"final..txt\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"final132\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"_f4indsartal132.\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\".txt\") !== \"No\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"s.\") !== \"\
    No\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Warning:  Uninitialized string offset 0 in /tmp/tmptwf2klih.php on\
    \ line 22\nPHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmptwf2klih.php:73\n\
    Stack trace:\n#0 /tmp/tmptwf2klih.php(77): test()\n#1 {main}\n  thrown in /tmp/tmptwf2klih.php\
    \ on line 73\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function which takes a string representing a file's\
    \ name, and returns\n// 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n// A file's name is considered to be valid if and only if all the\
    \ following conditions \n// are met:\n// - There should not be more than three\
    \ digits ('0'-'9') in the file's name.\n// - The file's name contains exactly\
    \ one dot '.'\n// - The substring before the dot should not be empty, and it starts\
    \ with a letter from \n// the latin alphapet ('a'-'z' and 'A'-'Z').\n// - The\
    \ substring after the dot should be one of these: ['txt', 'exe', 'dll']\n// Examples:\n\
    // file_name_check(\"example.txt\") # => 'Yes'\n// file_name_check(\"1example.dll\"\
    ) # => 'No' (the name should start with a latin alphapet letter)\nfunction file_name_check($file_name)\
    \ {\n    $file_name_array = explode('.', $file_name);\n    $file_name_array_length\
    \ = count($file_name_array);\n    $file_name_array_first_element = $file_name_array[0];\n\
    \    $file_name_array_last_element = $file_name_array[$file_name_array_length\
    \ - 1];\n    $file_name_array_first_element_length = strlen($file_name_array_first_element);\n\
    \    $file_name_array_last_element_length = strlen($file_name_array_last_element);\n\
    \    $file_name_array_first_element_first_letter = $file_name_array_first_element[0];\n\
    \    $file_name_array_first_element_first_letter_ascii_code = ord($file_name_array_first_element_first_letter);\n\
    \    $file_name_array_first_element_first_letter_ascii_code_is_valid = $file_name_array_first_element_first_letter_ascii_code\
    \ >= 65 && $file_name_array_first_element_first_letter_ascii_code <= 90 || $file_name_array_first_element_first_letter_ascii_code\
    \ >= 97 && $file_name_array_first_element_first_letter_ascii_code <= 122;\n  \
    \  $file_name_array_last_element_is_valid = $file_name_array_last_element ===\
    \ 'txt' || $file_name_array_last_element === 'exe' || $file_name_array_last_element\
    \ === 'dll';\n    $file_name_array_first_element_contains_only_digits = preg_match('/^[0-9]+$/',\
    \ $file_name_array_first_element);\n    $file_name_array_first_element_contains_only_digits_length\
    \ = strlen($file_name_array_first_element_contains_only_digits);\n    $file_name_array_first_element_contains_only_digits_length_is_valid\n\
    function candidate(...$args) {\n    return file_name_check(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"example.txt\") !== \"Yes\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"1example.dll\") !== \"No\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"s1sdf3.asd\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    K.dll\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    MY16FILE3.exe\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"His12FILE94.exe\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"_Y.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"?aREYA.exe\") !== \"No\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"/this_is_valid.dll\") !==\
    \ \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"this_is_valid.wow\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_valid.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"this_is_valid.txtexe\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#this2_i4s_5valid.ten\") !== \"No\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"@this1_is6_valid.exe\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_12valid.6exe4.txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"all.exe.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"I563_No.exe\") !== \"Yes\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Is3youfault.txt\") !== \"\
    Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"no_one#knows.dll\"\
    ) !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1I563_Yes3.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"I563_Yes3.txtt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"final..txt\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"final132\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"_f4indsartal132.\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\".txt\") !== \"No\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"s.\") !== \"\
    No\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Parse error:  syntax error, unexpected token \"function\" in /tmp/tmp09j5bsbm.php\
    \ on line 28\n"
  exit_code: 255
  status: SyntaxError
- program: "<?php\n// Create a function which takes a string representing a file's\
    \ name, and returns\n// 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n// A file's name is considered to be valid if and only if all the\
    \ following conditions \n// are met:\n// - There should not be more than three\
    \ digits ('0'-'9') in the file's name.\n// - The file's name contains exactly\
    \ one dot '.'\n// - The substring before the dot should not be empty, and it starts\
    \ with a letter from \n// the latin alphapet ('a'-'z' and 'A'-'Z').\n// - The\
    \ substring after the dot should be one of these: ['txt', 'exe', 'dll']\n// Examples:\n\
    // file_name_check(\"example.txt\") # => 'Yes'\n// file_name_check(\"1example.dll\"\
    ) # => 'No' (the name should start with a latin alphapet letter)\nfunction file_name_check($file_name)\
    \ {\n    $file_name_array = explode('.', $file_name);\n    $file_name_array_count\
    \ = count($file_name_array);\n    $file_name_array_count_digits = 0;\n    $file_name_array_count_letters\
    \ = 0;\n    $file_name_array_count_letters_first = 0;\n    $file_name_array_count_letters_second\
    \ = 0;\n    $file_name_array_count_letters_third = 0;\n    $file_name_array_count_letters_fourth\
    \ = 0;\n    $file_name_array_count_letters_fifth = 0;\n    $file_name_array_count_letters_sixth\
    \ = 0;\n    $file_name_array_count_letters_seventh = 0;\n    $file_name_array_count_letters_eighth\
    \ = 0;\n    $file_name_array_count_letters_ninth = 0;\n    $file_name_array_count_letters_tenth\
    \ = 0;\n    $file_name_array_count_letters_eleventh = 0;\n    $file_name_array_count_letters_twelfth\
    \ = 0;\n    $file_name_array_count_letters_thirteenth = 0;\n    $file_name_array_count_letters_fourteenth\
    \ = 0;\n    $file_name_array_count_letters_fifteenth = 0;\n    $file_name_array_count_letters_sixteenth\
    \ = 0;\n    $file_name_array_count_letters_seventeenth = 0;\n    $file_name_array_count_letters_eighteenth\
    \ = 0;\n    $file_name_array_count_letters_nineteenth = 0;\n    $file_name_array_count_letters_twentieth\
    \ = 0;\n    $file_name_array_count_letters_twentyfirst = 0;\n    $file_name_array_count_letters_twentysecond\
    \ = 0;\n    $file_name_array_count_letters_twentythird = 0;\n    $file_name_array_count_letters_twentyfourth\
    \ = 0;\n    $file_name_array_count\nfunction candidate(...$args) {\n    return\
    \ file_name_check(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    example.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"1example.dll\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"s1sdf3.asd\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"K.dll\") !== \"Yes\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"MY16FILE3.exe\") !== \"Yes\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"His12FILE94.exe\") !==\
    \ \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"_Y.txt\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ?aREYA.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    /this_is_valid.dll\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"this_is_valid.wow\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"this_is_valid.txt\") !== \"Yes\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"this_is_valid.txtexe\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #this2_i4s_5valid.ten\") !== \"No\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"@this1_is6_valid.exe\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"this_is_12valid.6exe4.txt\") !== \"No\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"all.exe.txt\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    I563_No.exe\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"Is3youfault.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"no_one#knows.dll\") !== \"Yes\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"1I563_Yes3.exe\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"I563_Yes3.txtt\") !==\
    \ \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"final..txt\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    final132\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    _f4indsartal132.\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\".txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"s.\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Parse error:  syntax error, unexpected token \"function\" in /tmp/tmpiqsi2dsa.php\
    \ on line 44\n"
  exit_code: 255
  status: SyntaxError
- program: "<?php\n// Create a function which takes a string representing a file's\
    \ name, and returns\n// 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n// A file's name is considered to be valid if and only if all the\
    \ following conditions \n// are met:\n// - There should not be more than three\
    \ digits ('0'-'9') in the file's name.\n// - The file's name contains exactly\
    \ one dot '.'\n// - The substring before the dot should not be empty, and it starts\
    \ with a letter from \n// the latin alphapet ('a'-'z' and 'A'-'Z').\n// - The\
    \ substring after the dot should be one of these: ['txt', 'exe', 'dll']\n// Examples:\n\
    // file_name_check(\"example.txt\") # => 'Yes'\n// file_name_check(\"1example.dll\"\
    ) # => 'No' (the name should start with a latin alphapet letter)\nfunction file_name_check($file_name)\
    \ {\n    $file_name_array = explode('.', $file_name);\n    $first_part = $file_name_array[0];\n\
    \    $second_part = $file_name_array[1];\n    $first_part_length = strlen($first_part);\n\
    \    $second_part_length = strlen($second_part);\n    $first_part_first_letter\
    \ = $first_part[0];\n    $first_part_first_letter_ascii = ord($first_part_first_letter);\n\
    \    $first_part_last_letter = $first_part[$first_part_length - 1];\n    $first_part_last_letter_ascii\
    \ = ord($first_part_last_letter);\n    $second_part_first_letter = $second_part[0];\n\
    \    $second_part_first_letter_ascii = ord($second_part_first_letter);\n    $second_part_last_letter\
    \ = $second_part[$second_part_length - 1];\n    $second_part_last_letter_ascii\
    \ = ord($second_part_last_letter);\n    $first_part_number_count = 0;\n    $second_part_number_count\
    \ = 0;\n    for ($i = 0; $i < $first_part_length; $i++) {\n        $current_letter\
    \ = $first_part[$i];\n        $current_letter_ascii = ord($current_letter);\n\
    \        if ($current_letter_ascii >= 48 && $current_letter_ascii <= 57) {\n \
    \           $first_part_number_count++;\n        }\n    }\n    for ($i = 0; $i\
    \ < $second_part_length; $i++) {\n        $current_letter = $second_part[$i];\n\
    \        $current_letter_ascii = ord($current_letter);\n        if ($current_letter_ascii\
    \ >= 48 && $current_letter_ascii <= 57) {\n            $second_part_number_count++;\n\
    \        }\n    }\n    if ($first_part_number_count > 3 || $second_part_number_count\
    \ > 3\nfunction candidate(...$args) {\n    return file_name_check(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"example.txt\") !== \"Yes\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"1example.dll\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    s1sdf3.asd\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    K.dll\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    MY16FILE3.exe\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"His12FILE94.exe\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"_Y.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"?aREYA.exe\") !== \"No\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"/this_is_valid.dll\") !==\
    \ \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"this_is_valid.wow\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_valid.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"this_is_valid.txtexe\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#this2_i4s_5valid.ten\") !== \"No\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"@this1_is6_valid.exe\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_12valid.6exe4.txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"all.exe.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"I563_No.exe\") !== \"Yes\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Is3youfault.txt\") !== \"\
    Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"no_one#knows.dll\"\
    ) !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1I563_Yes3.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"I563_Yes3.txtt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"final..txt\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"final132\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"_f4indsartal132.\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\".txt\") !== \"No\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"s.\") !== \"\
    No\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Parse error:  syntax error, unexpected token \"function\" in /tmp/tmpbrt7z5q8.php\
    \ on line 45\n"
  exit_code: 255
  status: SyntaxError
- program: "<?php\n// Create a function which takes a string representing a file's\
    \ name, and returns\n// 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n// A file's name is considered to be valid if and only if all the\
    \ following conditions \n// are met:\n// - There should not be more than three\
    \ digits ('0'-'9') in the file's name.\n// - The file's name contains exactly\
    \ one dot '.'\n// - The substring before the dot should not be empty, and it starts\
    \ with a letter from \n// the latin alphapet ('a'-'z' and 'A'-'Z').\n// - The\
    \ substring after the dot should be one of these: ['txt', 'exe', 'dll']\n// Examples:\n\
    // file_name_check(\"example.txt\") # => 'Yes'\n// file_name_check(\"1example.dll\"\
    ) # => 'No' (the name should start with a latin alphapet letter)\nfunction file_name_check($file_name)\
    \ {\n    $file_name_array = explode('.', $file_name);\n    $file_name_array_length\
    \ = count($file_name_array);\n    if ($file_name_array_length != 2) {\n      \
    \  return 'No';\n    }\n    $file_name_array_first = $file_name_array[0];\n  \
    \  $file_name_array_second = $file_name_array[1];\n    $file_name_array_first_length\
    \ = strlen($file_name_array_first);\n    $file_name_array_second_length = strlen($file_name_array_second);\n\
    \    if ($file_name_array_first_length == 0) {\n        return 'No';\n    }\n\
    \    $file_name_array_first_first_char = $file_name_array_first[0];\n    if (preg_match('/[0-9]/',\
    \ $file_name_array_first_first_char)) {\n        return 'No';\n    }\n    if ($file_name_array_second_length\
    \ == 0) {\n        return 'No';\n    }\n    if ($file_name_array_second_length\
    \ > 3) {\n        return 'No';\n    }\n    if ($file_name_array_second != 'txt'\
    \ && $file_name_array_second != 'exe' && $file_name_array_second != 'dll') {\n\
    \        return 'No';\n    }\n    $file_name_array_first_digit_count = 0;\n  \
    \  for ($i = 0; $i < $file_name_array_first_length; $i++) {\n        $file_name_array_first_char\
    \ = $file_name_array_first[$i];\n        if (preg_match('/[0-9]/', $file_name_array_first_char))\
    \ {\n            $file_name_array_first_digit_count++;\n        }\n    }\n   \
    \ if ($file_name_array_first_digit_count > 3) {\n        return 'No';\n    }\n\
    \    return 'Yes';\n}\n\nfunction candidate(...$args) {\n    return file_name_check(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"example.txt\") !== \"Yes\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"1example.dll\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    s1sdf3.asd\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    K.dll\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    MY16FILE3.exe\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"His12FILE94.exe\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"_Y.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"?aREYA.exe\") !== \"No\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"/this_is_valid.dll\") !==\
    \ \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"this_is_valid.wow\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_valid.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"this_is_valid.txtexe\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#this2_i4s_5valid.ten\") !== \"No\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"@this1_is6_valid.exe\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_12valid.6exe4.txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"all.exe.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"I563_No.exe\") !== \"Yes\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Is3youfault.txt\") !== \"\
    Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"no_one#knows.dll\"\
    ) !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1I563_Yes3.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"I563_Yes3.txtt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"final..txt\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"final132\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"_f4indsartal132.\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\".txt\") !== \"No\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"s.\") !== \"\
    No\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpd2k077ut.php:64\n\
    Stack trace:\n#0 /tmp/tmpd2k077ut.php(86): test()\n#1 {main}\n  thrown in /tmp/tmpd2k077ut.php\
    \ on line 64\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function which takes a string representing a file's\
    \ name, and returns\n// 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n// A file's name is considered to be valid if and only if all the\
    \ following conditions \n// are met:\n// - There should not be more than three\
    \ digits ('0'-'9') in the file's name.\n// - The file's name contains exactly\
    \ one dot '.'\n// - The substring before the dot should not be empty, and it starts\
    \ with a letter from \n// the latin alphapet ('a'-'z' and 'A'-'Z').\n// - The\
    \ substring after the dot should be one of these: ['txt', 'exe', 'dll']\n// Examples:\n\
    // file_name_check(\"example.txt\") # => 'Yes'\n// file_name_check(\"1example.dll\"\
    ) # => 'No' (the name should start with a latin alphapet letter)\nfunction file_name_check($file_name)\
    \ {\n    $file_name_array = explode('.', $file_name);\n    $file_name_array_count\
    \ = count($file_name_array);\n    if ($file_name_array_count != 2) {\n       \
    \ return 'No';\n    }\n    $file_name_array_first = $file_name_array[0];\n   \
    \ $file_name_array_last = $file_name_array[1];\n    $file_name_array_first_count\
    \ = strlen($file_name_array_first);\n    $file_name_array_last_count = strlen($file_name_array_last);\n\
    \    if ($file_name_array_first_count == 0 || $file_name_array_last_count == 0)\
    \ {\n        return 'No';\n    }\n    $file_name_array_first_first_char = $file_name_array_first[0];\n\
    \    if (!preg_match('/^[a-zA-Z]$/', $file_name_array_first_first_char)) {\n \
    \       return 'No';\n    }\n    $file_name_array_first_digit_count = 0;\n   \
    \ for ($i = 0; $i < $file_name_array_first_count; $i++) {\n        $file_name_array_first_char\
    \ = $file_name_array_first[$i];\n        if (preg_match('/^[0-9]$/', $file_name_array_first_char))\
    \ {\n            $file_name_array_first_digit_count++;\n        }\n    }\n   \
    \ if ($file_name_array_first_digit_count > 3) {\n        return 'No';\n    }\n\
    \    if (!preg_match('/^(txt|exe|dll)$/', $file_name_array_last)) {\n        return\
    \ 'No';\n    }\n    return 'Yes';\n}\n\nfunction candidate(...$args) {\n    return\
    \ file_name_check(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    example.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"1example.dll\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"s1sdf3.asd\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"K.dll\") !== \"Yes\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"MY16FILE3.exe\") !== \"Yes\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"His12FILE94.exe\") !==\
    \ \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"_Y.txt\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ?aREYA.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    /this_is_valid.dll\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"this_is_valid.wow\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"this_is_valid.txt\") !== \"Yes\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"this_is_valid.txtexe\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #this2_i4s_5valid.ten\") !== \"No\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"@this1_is6_valid.exe\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"this_is_12valid.6exe4.txt\") !== \"No\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"all.exe.txt\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    I563_No.exe\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"Is3youfault.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"no_one#knows.dll\") !== \"Yes\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"1I563_Yes3.exe\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"I563_Yes3.txtt\") !==\
    \ \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"final..txt\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    final132\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    _f4indsartal132.\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\".txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"s.\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Create a function which takes a string representing a file's\
    \ name, and returns\n// 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n// A file's name is considered to be valid if and only if all the\
    \ following conditions \n// are met:\n// - There should not be more than three\
    \ digits ('0'-'9') in the file's name.\n// - The file's name contains exactly\
    \ one dot '.'\n// - The substring before the dot should not be empty, and it starts\
    \ with a letter from \n// the latin alphapet ('a'-'z' and 'A'-'Z').\n// - The\
    \ substring after the dot should be one of these: ['txt', 'exe', 'dll']\n// Examples:\n\
    // file_name_check(\"example.txt\") # => 'Yes'\n// file_name_check(\"1example.dll\"\
    ) # => 'No' (the name should start with a latin alphapet letter)\nfunction file_name_check($file_name)\
    \ {\n    $file_name_array = explode('.', $file_name);\n    $file_name_array_length\
    \ = count($file_name_array);\n    if ($file_name_array_length != 2) {\n      \
    \  return 'No';\n    }\n    $file_name_array_first = $file_name_array[0];\n  \
    \  $file_name_array_second = $file_name_array[1];\n    $file_name_array_first_length\
    \ = strlen($file_name_array_first);\n    $file_name_array_second_length = strlen($file_name_array_second);\n\
    \    if ($file_name_array_first_length == 0) {\n        return 'No';\n    }\n\
    \    if ($file_name_array_second_length == 0) {\n        return 'No';\n    }\n\
    \    if ($file_name_array_second != 'txt' && $file_name_array_second != 'exe'\
    \ && $file_name_array_second != 'dll') {\n        return 'No';\n    }\n    $file_name_array_first_first_char\
    \ = $file_name_array_first[0];\n    if (!ctype_alpha($file_name_array_first_first_char))\
    \ {\n        return 'No';\n    }\n    $file_name_array_first_digit_count = 0;\n\
    \    for ($i = 0; $i < $file_name_array_first_length; $i++) {\n        $file_name_array_first_char\
    \ = $file_name_array_first[$i];\n        if (ctype_digit($file_name_array_first_char))\
    \ {\n            $file_name_array_first_digit_count++;\n        }\n    }\n   \
    \ if ($file_name_array_first_digit_count > 3) {\n        return 'No';\n    }\n\
    \    return 'Yes';\n}\n\nfunction candidate(...$args) {\n    return file_name_check(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"example.txt\") !== \"Yes\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"1example.dll\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    s1sdf3.asd\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    K.dll\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    MY16FILE3.exe\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"His12FILE94.exe\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"_Y.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"?aREYA.exe\") !== \"No\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"/this_is_valid.dll\") !==\
    \ \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"this_is_valid.wow\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_valid.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"this_is_valid.txtexe\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#this2_i4s_5valid.ten\") !== \"No\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"@this1_is6_valid.exe\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_12valid.6exe4.txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"all.exe.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"I563_No.exe\") !== \"Yes\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Is3youfault.txt\") !== \"\
    Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"no_one#knows.dll\"\
    ) !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1I563_Yes3.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"I563_Yes3.txtt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"final..txt\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"final132\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"_f4indsartal132.\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\".txt\") !== \"No\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"s.\") !== \"\
    No\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Create a function which takes a string representing a file's\
    \ name, and returns\n// 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n// A file's name is considered to be valid if and only if all the\
    \ following conditions \n// are met:\n// - There should not be more than three\
    \ digits ('0'-'9') in the file's name.\n// - The file's name contains exactly\
    \ one dot '.'\n// - The substring before the dot should not be empty, and it starts\
    \ with a letter from \n// the latin alphapet ('a'-'z' and 'A'-'Z').\n// - The\
    \ substring after the dot should be one of these: ['txt', 'exe', 'dll']\n// Examples:\n\
    // file_name_check(\"example.txt\") # => 'Yes'\n// file_name_check(\"1example.dll\"\
    ) # => 'No' (the name should start with a latin alphapet letter)\nfunction file_name_check($file_name)\
    \ {\n    $file_name_array = explode('.', $file_name);\n    if (count($file_name_array)\
    \ != 2) {\n        return 'No';\n    }\n    if (preg_match('/[0-9]{4,}/', $file_name_array[0]))\
    \ {\n        return 'No';\n    }\n    if (!preg_match('/^[a-zA-Z]/', $file_name_array[0]))\
    \ {\n        return 'No';\n    }\n    if (!in_array($file_name_array[1], ['txt',\
    \ 'exe', 'dll'])) {\n        return 'No';\n    }\n    return 'Yes';\n}\n\nfunction\
    \ candidate(...$args) {\n    return file_name_check(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"example.txt\") !== \"Yes\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"1example.dll\") !== \"No\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"s1sdf3.asd\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    K.dll\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    MY16FILE3.exe\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"His12FILE94.exe\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"_Y.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"?aREYA.exe\") !== \"No\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"/this_is_valid.dll\") !==\
    \ \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"this_is_valid.wow\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_valid.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"this_is_valid.txtexe\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#this2_i4s_5valid.ten\") !== \"No\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"@this1_is6_valid.exe\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_12valid.6exe4.txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"all.exe.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"I563_No.exe\") !== \"Yes\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Is3youfault.txt\") !== \"\
    Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"no_one#knows.dll\"\
    ) !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1I563_Yes3.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"I563_Yes3.txtt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"final..txt\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"final132\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"_f4indsartal132.\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\".txt\") !== \"No\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"s.\") !== \"\
    No\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpd90w0xwz.php:41\n\
    Stack trace:\n#0 /tmp/tmpd90w0xwz.php(64): test()\n#1 {main}\n  thrown in /tmp/tmpd90w0xwz.php\
    \ on line 41\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function which takes a string representing a file's\
    \ name, and returns\n// 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n// A file's name is considered to be valid if and only if all the\
    \ following conditions \n// are met:\n// - There should not be more than three\
    \ digits ('0'-'9') in the file's name.\n// - The file's name contains exactly\
    \ one dot '.'\n// - The substring before the dot should not be empty, and it starts\
    \ with a letter from \n// the latin alphapet ('a'-'z' and 'A'-'Z').\n// - The\
    \ substring after the dot should be one of these: ['txt', 'exe', 'dll']\n// Examples:\n\
    // file_name_check(\"example.txt\") # => 'Yes'\n// file_name_check(\"1example.dll\"\
    ) # => 'No' (the name should start with a latin alphapet letter)\nfunction file_name_check($file_name)\
    \ {\n    $file_name_arr = explode('.', $file_name);\n    if (count($file_name_arr)\
    \ != 2) {\n        return 'No';\n    }\n    $first_part = $file_name_arr[0];\n\
    \    $second_part = $file_name_arr[1];\n    if (!preg_match('/^[a-zA-Z]/', $first_part))\
    \ {\n        return 'No';\n    }\n    if (preg_match('/[0-9]{4}/', $first_part))\
    \ {\n        return 'No';\n    }\n    if (!in_array($second_part, ['txt', 'exe',\
    \ 'dll'])) {\n        return 'No';\n    }\n    return 'Yes';\n}\n\nfunction candidate(...$args)\
    \ {\n    return file_name_check(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(\"example.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"1example.dll\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"s1sdf3.asd\") !== \"No\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"K.dll\") !== \"Yes\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"MY16FILE3.exe\"\
    ) !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    His12FILE94.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(\"_Y.txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"?aREYA.exe\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"/this_is_valid.dll\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"this_is_valid.wow\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_valid.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"this_is_valid.txtexe\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#this2_i4s_5valid.ten\") !== \"No\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"@this1_is6_valid.exe\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_12valid.6exe4.txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"all.exe.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"I563_No.exe\") !== \"Yes\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Is3youfault.txt\") !== \"\
    Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"no_one#knows.dll\"\
    ) !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1I563_Yes3.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"I563_Yes3.txtt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"final..txt\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"final132\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"_f4indsartal132.\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\".txt\") !== \"No\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"s.\") !== \"\
    No\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpu7ydhemy.php:43\n\
    Stack trace:\n#0 /tmp/tmpu7ydhemy.php(66): test()\n#1 {main}\n  thrown in /tmp/tmpu7ydhemy.php\
    \ on line 43\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function which takes a string representing a file's\
    \ name, and returns\n// 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n// A file's name is considered to be valid if and only if all the\
    \ following conditions \n// are met:\n// - There should not be more than three\
    \ digits ('0'-'9') in the file's name.\n// - The file's name contains exactly\
    \ one dot '.'\n// - The substring before the dot should not be empty, and it starts\
    \ with a letter from \n// the latin alphapet ('a'-'z' and 'A'-'Z').\n// - The\
    \ substring after the dot should be one of these: ['txt', 'exe', 'dll']\n// Examples:\n\
    // file_name_check(\"example.txt\") # => 'Yes'\n// file_name_check(\"1example.dll\"\
    ) # => 'No' (the name should start with a latin alphapet letter)\nfunction file_name_check($file_name)\
    \ {\n    $file_name_arr = explode('.', $file_name);\n    $file_name_arr_len =\
    \ count($file_name_arr);\n    if ($file_name_arr_len > 2) {\n        return 'No';\n\
    \    }\n    $file_name_arr_0 = $file_name_arr[0];\n    $file_name_arr_1 = $file_name_arr[1];\n\
    \    if (preg_match('/[a-zA-Z]/', $file_name_arr_0) === 0) {\n        return 'No';\n\
    \    }\n    if (preg_match('/[0-9]/', $file_name_arr_0) > 3) {\n        return\
    \ 'No';\n    }\n    if ($file_name_arr_1 !== 'txt' && $file_name_arr_1 !== 'exe'\
    \ && $file_name_arr_1 !== 'dll') {\n        return 'No';\n    }\n    return 'Yes';\n\
    }\n\nfunction candidate(...$args) {\n    return file_name_check(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(\"example.txt\") !== \"Yes\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"1example.dll\") !==\
    \ \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"s1sdf3.asd\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    K.dll\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    MY16FILE3.exe\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"His12FILE94.exe\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"_Y.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"?aREYA.exe\") !== \"No\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"/this_is_valid.dll\") !==\
    \ \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"this_is_valid.wow\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_valid.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"this_is_valid.txtexe\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#this2_i4s_5valid.ten\") !== \"No\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"@this1_is6_valid.exe\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_12valid.6exe4.txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"all.exe.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"I563_No.exe\") !== \"Yes\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Is3youfault.txt\") !== \"\
    Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"no_one#knows.dll\"\
    ) !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1I563_Yes3.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"I563_Yes3.txtt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"final..txt\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"final132\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"_f4indsartal132.\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\".txt\") !== \"No\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"s.\") !== \"\
    No\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpau0ql4hc.php:40\n\
    Stack trace:\n#0 /tmp/tmpau0ql4hc.php(67): test()\n#1 {main}\n  thrown in /tmp/tmpau0ql4hc.php\
    \ on line 40\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function which takes a string representing a file's\
    \ name, and returns\n// 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n// A file's name is considered to be valid if and only if all the\
    \ following conditions \n// are met:\n// - There should not be more than three\
    \ digits ('0'-'9') in the file's name.\n// - The file's name contains exactly\
    \ one dot '.'\n// - The substring before the dot should not be empty, and it starts\
    \ with a letter from \n// the latin alphapet ('a'-'z' and 'A'-'Z').\n// - The\
    \ substring after the dot should be one of these: ['txt', 'exe', 'dll']\n// Examples:\n\
    // file_name_check(\"example.txt\") # => 'Yes'\n// file_name_check(\"1example.dll\"\
    ) # => 'No' (the name should start with a latin alphapet letter)\nfunction file_name_check($file_name)\
    \ {\n    $file_name_array = explode('.', $file_name);\n    $file_name_array_count\
    \ = count($file_name_array);\n    if ($file_name_array_count != 2) {\n       \
    \ return 'No';\n    }\n    $file_name_array_0 = $file_name_array[0];\n    $file_name_array_1\
    \ = $file_name_array[1];\n    if (preg_match('/[0-9]/', $file_name_array_0)) {\n\
    \        return 'No';\n    }\n    if (preg_match('/[0-9]{4}/', $file_name_array_0))\
    \ {\n        return 'No';\n    }\n    if (!preg_match('/[a-zA-Z]/', $file_name_array_0))\
    \ {\n        return 'No';\n    }\n    if ($file_name_array_1 != 'txt' && $file_name_array_1\
    \ != 'exe' && $file_name_array_1 != 'dll') {\n        return 'No';\n    }\n  \
    \  return 'Yes';\n}\n\nfunction candidate(...$args) {\n    return file_name_check(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"example.txt\") !== \"Yes\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"1example.dll\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    s1sdf3.asd\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    K.dll\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    MY16FILE3.exe\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"His12FILE94.exe\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"_Y.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"?aREYA.exe\") !== \"No\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"/this_is_valid.dll\") !==\
    \ \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"this_is_valid.wow\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_valid.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"this_is_valid.txtexe\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#this2_i4s_5valid.ten\") !== \"No\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"@this1_is6_valid.exe\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_12valid.6exe4.txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"all.exe.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"I563_No.exe\") !== \"Yes\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Is3youfault.txt\") !== \"\
    Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"no_one#knows.dll\"\
    ) !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1I563_Yes3.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"I563_Yes3.txtt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"final..txt\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"final132\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"_f4indsartal132.\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\".txt\") !== \"No\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"s.\") !== \"\
    No\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp57wa68ot.php:46\n\
    Stack trace:\n#0 /tmp/tmp57wa68ot.php(70): test()\n#1 {main}\n  thrown in /tmp/tmp57wa68ot.php\
    \ on line 46\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function which takes a string representing a file's\
    \ name, and returns\n// 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n// A file's name is considered to be valid if and only if all the\
    \ following conditions \n// are met:\n// - There should not be more than three\
    \ digits ('0'-'9') in the file's name.\n// - The file's name contains exactly\
    \ one dot '.'\n// - The substring before the dot should not be empty, and it starts\
    \ with a letter from \n// the latin alphapet ('a'-'z' and 'A'-'Z').\n// - The\
    \ substring after the dot should be one of these: ['txt', 'exe', 'dll']\n// Examples:\n\
    // file_name_check(\"example.txt\") # => 'Yes'\n// file_name_check(\"1example.dll\"\
    ) # => 'No' (the name should start with a latin alphapet letter)\nfunction file_name_check($file_name)\
    \ {\n    $file_name_array = explode('.', $file_name);\n    $file_name_array_count\
    \ = count($file_name_array);\n    $file_name_array_count_digit = 0;\n    $file_name_array_count_letter\
    \ = 0;\n    $file_name_array_count_dot = 0;\n    $file_name_array_count_extension\
    \ = 0;\n    $file_name_array_count_extension_txt = 0;\n    $file_name_array_count_extension_exe\
    \ = 0;\n    $file_name_array_count_extension_dll = 0;\n    $file_name_array_count_extension_other\
    \ = 0;\n    $file_name_array_count_extension_other_array = [];\n    $file_name_array_count_extension_other_array_count\
    \ = 0;\n    $file_name_array_count_extension_other_array_count_digit = 0;\n  \
    \  $file_name_array_count_extension_other_array_count_letter = 0;\n    $file_name_array_count_extension_other_array_count_dot\
    \ = 0;\n    $file_name_array_count_extension_other_array_count_extension = 0;\n\
    \    $file_name_array_count_extension_other_array_count_extension_txt = 0;\n \
    \   $file_name_array_count_extension_other_array_count_extension_exe = 0;\n  \
    \  $file_name_array_count_extension_other_array_count_extension_dll = 0;\n   \
    \ $file_name_array_count_extension_other_array_count_extension_other = 0;\n  \
    \  $file_name_array_count_extension_other_array_count_extension_other_array =\
    \ [];\n    $file_name_array_count_extension_other_array_count_extension_other_array_count\
    \ = 0;\n    $file_name_array_count_extension_other_array_count_extension_other_array_count_digit\
    \ = 0;\n    $file\nfunction candidate(...$args) {\n    return file_name_check(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"example.txt\") !== \"Yes\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"1example.dll\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    s1sdf3.asd\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    K.dll\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    MY16FILE3.exe\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"His12FILE94.exe\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"_Y.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"?aREYA.exe\") !== \"No\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"/this_is_valid.dll\") !==\
    \ \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"this_is_valid.wow\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_valid.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"this_is_valid.txtexe\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#this2_i4s_5valid.ten\") !== \"No\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"@this1_is6_valid.exe\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_12valid.6exe4.txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"all.exe.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"I563_No.exe\") !== \"Yes\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Is3youfault.txt\") !== \"\
    Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"no_one#knows.dll\"\
    ) !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1I563_Yes3.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"I563_Yes3.txtt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"final..txt\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"final132\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"_f4indsartal132.\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\".txt\") !== \"No\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"s.\") !== \"\
    No\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Parse error:  syntax error, unexpected token \"function\" in /tmp/tmpch2x4j5i.php\
    \ on line 39\n"
  exit_code: 255
  status: SyntaxError
- program: "<?php\n// Create a function which takes a string representing a file's\
    \ name, and returns\n// 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n// A file's name is considered to be valid if and only if all the\
    \ following conditions \n// are met:\n// - There should not be more than three\
    \ digits ('0'-'9') in the file's name.\n// - The file's name contains exactly\
    \ one dot '.'\n// - The substring before the dot should not be empty, and it starts\
    \ with a letter from \n// the latin alphapet ('a'-'z' and 'A'-'Z').\n// - The\
    \ substring after the dot should be one of these: ['txt', 'exe', 'dll']\n// Examples:\n\
    // file_name_check(\"example.txt\") # => 'Yes'\n// file_name_check(\"1example.dll\"\
    ) # => 'No' (the name should start with a latin alphapet letter)\nfunction file_name_check($file_name)\
    \ {\n    $file_name_array = explode('.', $file_name);\n    if (count($file_name_array)\
    \ != 2) {\n        return 'No';\n    }\n    $file_name_array[0] = str_split($file_name_array[0]);\n\
    \    $file_name_array[1] = str_split($file_name_array[1]);\n    if (count($file_name_array[0])\
    \ == 0 || !ctype_alpha($file_name_array[0][0])) {\n        return 'No';\n    }\n\
    \    $count = 0;\n    foreach ($file_name_array[0] as $char) {\n        if (ctype_digit($char))\
    \ {\n            $count++;\n        }\n    }\n    if ($count > 3) {\n        return\
    \ 'No';\n    }\n    if (!in_array($file_name_array[1], ['txt', 'exe', 'dll']))\
    \ {\n        return 'No';\n    }\n    return 'Yes';\n}\n\nfunction candidate(...$args)\
    \ {\n    return file_name_check(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(\"example.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"1example.dll\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"s1sdf3.asd\") !== \"No\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"K.dll\") !== \"Yes\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"MY16FILE3.exe\"\
    ) !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    His12FILE94.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(\"_Y.txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"?aREYA.exe\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"/this_is_valid.dll\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"this_is_valid.wow\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_valid.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"this_is_valid.txtexe\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#this2_i4s_5valid.ten\") !== \"No\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"@this1_is6_valid.exe\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_12valid.6exe4.txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"all.exe.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"I563_No.exe\") !== \"Yes\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Is3youfault.txt\") !== \"\
    Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"no_one#knows.dll\"\
    ) !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1I563_Yes3.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"I563_Yes3.txtt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"final..txt\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"final132\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"_f4indsartal132.\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\".txt\") !== \"No\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"s.\") !== \"\
    No\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpt1ufce6q.php:44\n\
    Stack trace:\n#0 /tmp/tmpt1ufce6q.php(72): test()\n#1 {main}\n  thrown in /tmp/tmpt1ufce6q.php\
    \ on line 44\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function which takes a string representing a file's\
    \ name, and returns\n// 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n// A file's name is considered to be valid if and only if all the\
    \ following conditions \n// are met:\n// - There should not be more than three\
    \ digits ('0'-'9') in the file's name.\n// - The file's name contains exactly\
    \ one dot '.'\n// - The substring before the dot should not be empty, and it starts\
    \ with a letter from \n// the latin alphapet ('a'-'z' and 'A'-'Z').\n// - The\
    \ substring after the dot should be one of these: ['txt', 'exe', 'dll']\n// Examples:\n\
    // file_name_check(\"example.txt\") # => 'Yes'\n// file_name_check(\"1example.dll\"\
    ) # => 'No' (the name should start with a latin alphapet letter)\nfunction file_name_check($file_name)\
    \ {\n    $file_name_arr = explode('.', $file_name);\n    $file_name_arr[0] = str_split($file_name_arr[0]);\n\
    \    $file_name_arr[1] = str_split($file_name_arr[1]);\n    $file_name_arr[0]\
    \ = array_filter($file_name_arr[0], function($item) {\n        return is_numeric($item);\n\
    \    });\n    if (count($file_name_arr[0]) > 3) {\n        return 'No';\n    }\n\
    \    if (count($file_name_arr) != 2) {\n        return 'No';\n    }\n    if (!ctype_alpha($file_name_arr[0][0]))\
    \ {\n        return 'No';\n    }\n    if (!in_array($file_name_arr[1], ['txt',\
    \ 'exe', 'dll'])) {\n        return 'No';\n    }\n    return 'Yes';\n}\n\necho\
    \ file_name_check(\"example.txt\") . PHP_EOL;\necho file_name_check(\"1example.dll\"\
    ) . PHP_EOL;\necho file_name_check(\"1example.txt\") . PHP_EOL;\necho file_name_check(\"\
    example.exe\") . PHP_EOL;\necho file_name_check(\"example.dll\") . PHP_EOL;\n\
    echo file_name_check(\"example.exe\") . PHP_EOL;\necho file_name_check(\"example.exe\"\
    ) . PHP_EOL;\necho file_name_check(\"example.exe\") . PHP_EOL;\necho file_name_check(\"\
    example.exe\") . PHP_EOL;\necho file_name_check(\"example.exe\") . PHP_EOL;\n\
    echo file_name_check(\"example.exe\") . PHP_EOL;\necho file_name_check(\"example.exe\"\
    ) . PHP_EOL;\necho file_name_check(\"example.exe\") . PHP_EOL;\necho file_name_check(\"\
    example.exe\") . PHP_EOL;\necho file_name_check(\"example.exe\") . PHP_EOL;\n\
    echo file_name\nfunction candidate(...$args) {\n    return file_name_check(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"example.txt\") !== \"Yes\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"1example.dll\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    s1sdf3.asd\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    K.dll\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    MY16FILE3.exe\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"His12FILE94.exe\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"_Y.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"?aREYA.exe\") !== \"No\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"/this_is_valid.dll\") !==\
    \ \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"this_is_valid.wow\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_valid.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"this_is_valid.txtexe\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#this2_i4s_5valid.ten\") !== \"No\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"@this1_is6_valid.exe\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_12valid.6exe4.txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"all.exe.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"I563_No.exe\") !== \"Yes\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Is3youfault.txt\") !== \"\
    Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"no_one#knows.dll\"\
    ) !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1I563_Yes3.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"I563_Yes3.txtt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"final..txt\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"final132\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"_f4indsartal132.\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\".txt\") !== \"No\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"s.\") !== \"\
    No\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Parse error:  syntax error, unexpected token \"function\", expecting\
    \ \",\" or \";\" in /tmp/tmpqtji6oq8.php on line 52\n"
  exit_code: 255
  status: SyntaxError
- program: "<?php\n// Create a function which takes a string representing a file's\
    \ name, and returns\n// 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n// A file's name is considered to be valid if and only if all the\
    \ following conditions \n// are met:\n// - There should not be more than three\
    \ digits ('0'-'9') in the file's name.\n// - The file's name contains exactly\
    \ one dot '.'\n// - The substring before the dot should not be empty, and it starts\
    \ with a letter from \n// the latin alphapet ('a'-'z' and 'A'-'Z').\n// - The\
    \ substring after the dot should be one of these: ['txt', 'exe', 'dll']\n// Examples:\n\
    // file_name_check(\"example.txt\") # => 'Yes'\n// file_name_check(\"1example.dll\"\
    ) # => 'No' (the name should start with a latin alphapet letter)\nfunction file_name_check($file_name)\
    \ {\n    $file_name_array = explode('.', $file_name);\n    if (count($file_name_array)\
    \ != 2) {\n        return 'No';\n    }\n    if (strlen($file_name_array[0]) ==\
    \ 0) {\n        return 'No';\n    }\n    if (!ctype_alpha($file_name_array[0][0]))\
    \ {\n        return 'No';\n    }\n    if (substr_count($file_name_array[0], '0')\
    \ + substr_count($file_name_array[0], '1') + substr_count($file_name_array[0],\
    \ '2') + substr_count($file_name_array[0], '3') + substr_count($file_name_array[0],\
    \ '4') + substr_count($file_name_array[0], '5') + substr_count($file_name_array[0],\
    \ '6') + substr_count($file_name_array[0], '7') + substr_count($file_name_array[0],\
    \ '8') + substr_count($file_name_array[0], '9') > 3) {\n        return 'No';\n\
    \    }\n    if ($file_name_array[1] != 'txt' && $file_name_array[1] != 'exe' &&\
    \ $file_name_array[1] != 'dll') {\n        return 'No';\n    }\n    return 'Yes';\n\
    }\n\nfunction candidate(...$args) {\n    return file_name_check(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(\"example.txt\") !== \"Yes\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"1example.dll\") !==\
    \ \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"s1sdf3.asd\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    K.dll\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    MY16FILE3.exe\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"His12FILE94.exe\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"_Y.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"?aREYA.exe\") !== \"No\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"/this_is_valid.dll\") !==\
    \ \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"this_is_valid.wow\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_valid.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"this_is_valid.txtexe\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#this2_i4s_5valid.ten\") !== \"No\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"@this1_is6_valid.exe\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_12valid.6exe4.txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"all.exe.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"I563_No.exe\") !== \"Yes\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Is3youfault.txt\") !== \"\
    Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"no_one#knows.dll\"\
    ) !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1I563_Yes3.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"I563_Yes3.txtt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"final..txt\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"final132\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"_f4indsartal132.\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\".txt\") !== \"No\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"s.\") !== \"\
    No\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Create a function which takes a string representing a file's\
    \ name, and returns\n// 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n// A file's name is considered to be valid if and only if all the\
    \ following conditions \n// are met:\n// - There should not be more than three\
    \ digits ('0'-'9') in the file's name.\n// - The file's name contains exactly\
    \ one dot '.'\n// - The substring before the dot should not be empty, and it starts\
    \ with a letter from \n// the latin alphapet ('a'-'z' and 'A'-'Z').\n// - The\
    \ substring after the dot should be one of these: ['txt', 'exe', 'dll']\n// Examples:\n\
    // file_name_check(\"example.txt\") # => 'Yes'\n// file_name_check(\"1example.dll\"\
    ) # => 'No' (the name should start with a latin alphapet letter)\nfunction file_name_check($file_name)\
    \ {\n    $file_name_array = explode('.', $file_name);\n    $file_name_array_length\
    \ = count($file_name_array);\n    if ($file_name_array_length != 2) {\n      \
    \  return 'No';\n    }\n    $file_name_array_before_dot = $file_name_array[0];\n\
    \    $file_name_array_after_dot = $file_name_array[1];\n    $file_name_array_before_dot_length\
    \ = strlen($file_name_array_before_dot);\n    $file_name_array_after_dot_length\
    \ = strlen($file_name_array_after_dot);\n    if ($file_name_array_before_dot_length\
    \ == 0) {\n        return 'No';\n    }\n    if ($file_name_array_after_dot_length\
    \ == 0) {\n        return 'No';\n    }\n    if ($file_name_array_after_dot !=\
    \ 'txt' && $file_name_array_after_dot != 'exe' && $file_name_array_after_dot !=\
    \ 'dll') {\n        return 'No';\n    }\n    $file_name_array_before_dot_first_char\
    \ = $file_name_array_before_dot[0];\n    if (ord($file_name_array_before_dot_first_char)\
    \ < 65 || (ord($file_name_array_before_dot_first_char) > 90 && ord($file_name_array_before_dot_first_char)\
    \ < 97) || ord($file_name_array_before_dot_first_char) > 122) {\n        return\
    \ 'No';\n    }\n    $file_name_array_before_dot_digit_count = 0;\n    for ($i\
    \ = 0; $i < $file_name_array_before_dot_length; $i++) {\n        $file_name_array_before_dot_char\
    \ = $file_name_array_before_dot[$i];\n        if (ord($file_name_array_before_dot_char)\
    \ >= 48 && ord($file_name_array_before_dot_char) <= 57) {\n\nfunction candidate(...$args)\
    \ {\n    return file_name_check(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(\"example.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"1example.dll\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"s1sdf3.asd\") !== \"No\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"K.dll\") !== \"Yes\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"MY16FILE3.exe\"\
    ) !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    His12FILE94.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(\"_Y.txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"?aREYA.exe\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"/this_is_valid.dll\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"this_is_valid.wow\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_valid.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"this_is_valid.txtexe\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#this2_i4s_5valid.ten\") !== \"No\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"@this1_is6_valid.exe\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_12valid.6exe4.txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"all.exe.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"I563_No.exe\") !== \"Yes\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Is3youfault.txt\") !== \"\
    Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"no_one#knows.dll\"\
    ) !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1I563_Yes3.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"I563_Yes3.txtt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"final..txt\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"final132\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"_f4indsartal132.\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\".txt\") !== \"No\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"s.\") !== \"\
    No\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Parse error:  Unclosed '{' on line 40 in /tmp/tmp3saz3wbt.php on line\
    \ 75\n"
  exit_code: 255
  status: SyntaxError
- program: "<?php\n// Create a function which takes a string representing a file's\
    \ name, and returns\n// 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n// A file's name is considered to be valid if and only if all the\
    \ following conditions \n// are met:\n// - There should not be more than three\
    \ digits ('0'-'9') in the file's name.\n// - The file's name contains exactly\
    \ one dot '.'\n// - The substring before the dot should not be empty, and it starts\
    \ with a letter from \n// the latin alphapet ('a'-'z' and 'A'-'Z').\n// - The\
    \ substring after the dot should be one of these: ['txt', 'exe', 'dll']\n// Examples:\n\
    // file_name_check(\"example.txt\") # => 'Yes'\n// file_name_check(\"1example.dll\"\
    ) # => 'No' (the name should start with a latin alphapet letter)\nfunction file_name_check($file_name)\
    \ {\n    $file_name_arr = explode('.', $file_name);\n    if (count($file_name_arr)\
    \ != 2) {\n        return 'No';\n    }\n    if (preg_match('/[0-9]{4,}/', $file_name_arr[0]))\
    \ {\n        return 'No';\n    }\n    if (!preg_match('/^[a-zA-Z]/', $file_name_arr[0]))\
    \ {\n        return 'No';\n    }\n    if (!in_array($file_name_arr[1], ['txt',\
    \ 'exe', 'dll'])) {\n        return 'No';\n    }\n    return 'Yes';\n}\n\nfunction\
    \ candidate(...$args) {\n    return file_name_check(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"example.txt\") !== \"Yes\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"1example.dll\") !== \"No\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"s1sdf3.asd\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    K.dll\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    MY16FILE3.exe\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"His12FILE94.exe\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"_Y.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"?aREYA.exe\") !== \"No\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"/this_is_valid.dll\") !==\
    \ \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"this_is_valid.wow\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_valid.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"this_is_valid.txtexe\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#this2_i4s_5valid.ten\") !== \"No\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"@this1_is6_valid.exe\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_12valid.6exe4.txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"all.exe.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"I563_No.exe\") !== \"Yes\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Is3youfault.txt\") !== \"\
    Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"no_one#knows.dll\"\
    ) !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1I563_Yes3.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"I563_Yes3.txtt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"final..txt\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"final132\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"_f4indsartal132.\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\".txt\") !== \"No\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"s.\") !== \"\
    No\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpmhv1c5uh.php:41\n\
    Stack trace:\n#0 /tmp/tmpmhv1c5uh.php(64): test()\n#1 {main}\n  thrown in /tmp/tmpmhv1c5uh.php\
    \ on line 41\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function which takes a string representing a file's\
    \ name, and returns\n// 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n// A file's name is considered to be valid if and only if all the\
    \ following conditions \n// are met:\n// - There should not be more than three\
    \ digits ('0'-'9') in the file's name.\n// - The file's name contains exactly\
    \ one dot '.'\n// - The substring before the dot should not be empty, and it starts\
    \ with a letter from \n// the latin alphapet ('a'-'z' and 'A'-'Z').\n// - The\
    \ substring after the dot should be one of these: ['txt', 'exe', 'dll']\n// Examples:\n\
    // file_name_check(\"example.txt\") # => 'Yes'\n// file_name_check(\"1example.dll\"\
    ) # => 'No' (the name should start with a latin alphapet letter)\nfunction file_name_check($file_name)\
    \ {\n    $file_name_array = explode('.', $file_name);\n    $file_name_array_count\
    \ = count($file_name_array);\n    if ($file_name_array_count != 2) {\n       \
    \ return 'No';\n    }\n    $file_name_array_first = $file_name_array[0];\n   \
    \ $file_name_array_second = $file_name_array[1];\n    $file_name_array_first_count\
    \ = strlen($file_name_array_first);\n    $file_name_array_second_count = strlen($file_name_array_second);\n\
    \    if ($file_name_array_first_count == 0) {\n        return 'No';\n    }\n \
    \   if ($file_name_array_second_count == 0) {\n        return 'No';\n    }\n \
    \   if ($file_name_array_second_count > 3) {\n        return 'No';\n    }\n  \
    \  if (!preg_match('/^[a-zA-Z]/', $file_name_array_first)) {\n        return 'No';\n\
    \    }\n    if (!preg_match('/^[0-9]{0,3}$/', $file_name_array_first)) {\n   \
    \     return 'No';\n    }\n    if (!preg_match('/^(txt|exe|dll)$/', $file_name_array_second))\
    \ {\n        return 'No';\n    }\n    return 'Yes';\n}\n\nfunction candidate(...$args)\
    \ {\n    return file_name_check(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(\"example.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"1example.dll\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"s1sdf3.asd\") !== \"No\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"K.dll\") !== \"Yes\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"MY16FILE3.exe\"\
    ) !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    His12FILE94.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(\"_Y.txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"?aREYA.exe\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"/this_is_valid.dll\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"this_is_valid.wow\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_valid.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"this_is_valid.txtexe\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#this2_i4s_5valid.ten\") !== \"No\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"@this1_is6_valid.exe\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_12valid.6exe4.txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"all.exe.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"I563_No.exe\") !== \"Yes\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Is3youfault.txt\") !== \"\
    Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"no_one#knows.dll\"\
    ) !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1I563_Yes3.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"I563_Yes3.txtt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"final..txt\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"final132\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"_f4indsartal132.\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\".txt\") !== \"No\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"s.\") !== \"\
    No\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp3bi5yen2.php:50\n\
    Stack trace:\n#0 /tmp/tmp3bi5yen2.php(78): test()\n#1 {main}\n  thrown in /tmp/tmp3bi5yen2.php\
    \ on line 50\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function which takes a string representing a file's\
    \ name, and returns\n// 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n// A file's name is considered to be valid if and only if all the\
    \ following conditions \n// are met:\n// - There should not be more than three\
    \ digits ('0'-'9') in the file's name.\n// - The file's name contains exactly\
    \ one dot '.'\n// - The substring before the dot should not be empty, and it starts\
    \ with a letter from \n// the latin alphapet ('a'-'z' and 'A'-'Z').\n// - The\
    \ substring after the dot should be one of these: ['txt', 'exe', 'dll']\n// Examples:\n\
    // file_name_check(\"example.txt\") # => 'Yes'\n// file_name_check(\"1example.dll\"\
    ) # => 'No' (the name should start with a latin alphapet letter)\nfunction file_name_check($file_name)\
    \ {\n    $file_name_array = explode('.', $file_name);\n    $file_name_array[0]\
    \ = str_split($file_name_array[0]);\n    $file_name_array[1] = str_split($file_name_array[1]);\n\
    \    $counter = 0;\n    for ($i = 0; $i < count($file_name_array[0]); $i++) {\n\
    \        if (is_numeric($file_name_array[0][$i])) {\n            $counter++;\n\
    \        }\n    }\n    if ($counter > 3) {\n        return 'No';\n    }\n    if\
    \ (count($file_name_array) != 2) {\n        return 'No';\n    }\n    if (is_numeric($file_name_array[0][0]))\
    \ {\n        return 'No';\n    }\n    if ($file_name_array[1][0] != 't' || $file_name_array[1][1]\
    \ != 'x' || $file_name_array[1][2] != 't') {\n        if ($file_name_array[1][0]\
    \ != 'e' || $file_name_array[1][1] != 'x' || $file_name_array[1][2] != 'e') {\n\
    \            if ($file_name_array[1][0] != 'd' || $file_name_array[1][1] != 'l'\
    \ || $file_name_array[1][2] != 'l') {\n                return 'No';\n        \
    \    }\n        }\n    }\n    return 'Yes';\n}\n\nfunction candidate(...$args)\
    \ {\n    return file_name_check(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(\"example.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"1example.dll\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"s1sdf3.asd\") !== \"No\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"K.dll\") !== \"Yes\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"MY16FILE3.exe\"\
    ) !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    His12FILE94.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(\"_Y.txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"?aREYA.exe\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"/this_is_valid.dll\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"this_is_valid.wow\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_valid.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"this_is_valid.txtexe\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#this2_i4s_5valid.ten\") !== \"No\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"@this1_is6_valid.exe\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_12valid.6exe4.txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"all.exe.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"I563_No.exe\") !== \"Yes\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Is3youfault.txt\") !== \"\
    Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"no_one#knows.dll\"\
    ) !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1I563_Yes3.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"I563_Yes3.txtt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"final..txt\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"final132\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"_f4indsartal132.\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\".txt\") !== \"No\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"s.\") !== \"\
    No\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpq_a23r25.php:54\n\
    Stack trace:\n#0 /tmp/tmpq_a23r25.php(76): test()\n#1 {main}\n  thrown in /tmp/tmpq_a23r25.php\
    \ on line 54\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function which takes a string representing a file's\
    \ name, and returns\n// 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n// A file's name is considered to be valid if and only if all the\
    \ following conditions \n// are met:\n// - There should not be more than three\
    \ digits ('0'-'9') in the file's name.\n// - The file's name contains exactly\
    \ one dot '.'\n// - The substring before the dot should not be empty, and it starts\
    \ with a letter from \n// the latin alphapet ('a'-'z' and 'A'-'Z').\n// - The\
    \ substring after the dot should be one of these: ['txt', 'exe', 'dll']\n// Examples:\n\
    // file_name_check(\"example.txt\") # => 'Yes'\n// file_name_check(\"1example.dll\"\
    ) # => 'No' (the name should start with a latin alphapet letter)\nfunction file_name_check($file_name)\
    \ {\n    $file_name_arr = explode('.', $file_name);\n    $file_name_arr[0] = str_split($file_name_arr[0]);\n\
    \    $count = 0;\n    foreach ($file_name_arr[0] as $char) {\n        if (ord($char)\
    \ >= 48 && ord($char) <= 57) {\n            $count++;\n        }\n    }\n    if\
    \ ($count > 3) {\n        return 'No';\n    }\n    if (count($file_name_arr) !=\
    \ 2) {\n        return 'No';\n    }\n    if (ord($file_name_arr[0][0]) < 65 ||\
    \ ord($file_name_arr[0][0]) > 122 || (ord($file_name_arr[0][0]) > 90 && ord($file_name_arr[0][0])\
    \ < 97)) {\n        return 'No';\n    }\n    if ($file_name_arr[1] != 'txt' &&\
    \ $file_name_arr[1] != 'exe' && $file_name_arr[1] != 'dll') {\n        return\
    \ 'No';\n    }\n    return 'Yes';\n}\n\nfunction candidate(...$args) {\n    return\
    \ file_name_check(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    example.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"1example.dll\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"s1sdf3.asd\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"K.dll\") !== \"Yes\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"MY16FILE3.exe\") !== \"Yes\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"His12FILE94.exe\") !==\
    \ \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"_Y.txt\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ?aREYA.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    /this_is_valid.dll\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"this_is_valid.wow\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"this_is_valid.txt\") !== \"Yes\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"this_is_valid.txtexe\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #this2_i4s_5valid.ten\") !== \"No\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"@this1_is6_valid.exe\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"this_is_12valid.6exe4.txt\") !== \"No\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"all.exe.txt\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    I563_No.exe\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"Is3youfault.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"no_one#knows.dll\") !== \"Yes\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"1I563_Yes3.exe\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"I563_Yes3.txtt\") !==\
    \ \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"final..txt\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    final132\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    _f4indsartal132.\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\".txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"s.\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Create a function which takes a string representing a file's\
    \ name, and returns\n// 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n// A file's name is considered to be valid if and only if all the\
    \ following conditions \n// are met:\n// - There should not be more than three\
    \ digits ('0'-'9') in the file's name.\n// - The file's name contains exactly\
    \ one dot '.'\n// - The substring before the dot should not be empty, and it starts\
    \ with a letter from \n// the latin alphapet ('a'-'z' and 'A'-'Z').\n// - The\
    \ substring after the dot should be one of these: ['txt', 'exe', 'dll']\n// Examples:\n\
    // file_name_check(\"example.txt\") # => 'Yes'\n// file_name_check(\"1example.dll\"\
    ) # => 'No' (the name should start with a latin alphapet letter)\nfunction file_name_check($file_name)\
    \ {\n    $file_name_arr = explode('.', $file_name);\n    $file_name_arr_len =\
    \ count($file_name_arr);\n    if ($file_name_arr_len != 2) {\n        return 'No';\n\
    \    }\n    $file_name_arr_0 = $file_name_arr[0];\n    $file_name_arr_1 = $file_name_arr[1];\n\
    \    $file_name_arr_0_len = strlen($file_name_arr_0);\n    $file_name_arr_1_len\
    \ = strlen($file_name_arr_1);\n    if ($file_name_arr_0_len == 0 || $file_name_arr_1_len\
    \ == 0) {\n        return 'No';\n    }\n    $file_name_arr_0_arr = str_split($file_name_arr_0);\n\
    \    $file_name_arr_1_arr = str_split($file_name_arr_1);\n    $file_name_arr_0_arr_0\
    \ = $file_name_arr_0_arr[0];\n    $file_name_arr_1_arr_0 = $file_name_arr_1_arr[0];\n\
    \    if (!preg_match('/^[a-zA-Z]/', $file_name_arr_0_arr_0)) {\n        return\
    \ 'No';\n    }\n    if (!preg_match('/^[a-zA-Z]/', $file_name_arr_1_arr_0)) {\n\
    \        return 'No';\n    }\n    if (!preg_match('/^[a-zA-Z0-9]*$/', $file_name_arr_0))\
    \ {\n        return 'No';\n    }\n    if (!preg_match('/^[a-zA-Z0-9]*$/', $file_name_arr_1))\
    \ {\n        return 'No';\n    }\n    if (preg_match('/[0-9]{4}/', $file_name_arr_0))\
    \ {\n        return 'No';\n    }\n\nfunction candidate(...$args) {\n    return\
    \ file_name_check(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    example.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"1example.dll\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"s1sdf3.asd\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"K.dll\") !== \"Yes\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"MY16FILE3.exe\") !== \"Yes\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"His12FILE94.exe\") !==\
    \ \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"_Y.txt\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ?aREYA.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    /this_is_valid.dll\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"this_is_valid.wow\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"this_is_valid.txt\") !== \"Yes\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"this_is_valid.txtexe\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #this2_i4s_5valid.ten\") !== \"No\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"@this1_is6_valid.exe\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"this_is_12valid.6exe4.txt\") !== \"No\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"all.exe.txt\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    I563_No.exe\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"Is3youfault.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"no_one#knows.dll\") !== \"Yes\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"1I563_Yes3.exe\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"I563_Yes3.txtt\") !==\
    \ \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"final..txt\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    final132\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    _f4indsartal132.\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\".txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"s.\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Parse error:  Unclosed '{' on line 14 in /tmp/tmp62xhzq61.php on line\
    \ 80\n"
  exit_code: 255
  status: SyntaxError
- program: "<?php\n// Create a function which takes a string representing a file's\
    \ name, and returns\n// 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n// A file's name is considered to be valid if and only if all the\
    \ following conditions \n// are met:\n// - There should not be more than three\
    \ digits ('0'-'9') in the file's name.\n// - The file's name contains exactly\
    \ one dot '.'\n// - The substring before the dot should not be empty, and it starts\
    \ with a letter from \n// the latin alphapet ('a'-'z' and 'A'-'Z').\n// - The\
    \ substring after the dot should be one of these: ['txt', 'exe', 'dll']\n// Examples:\n\
    // file_name_check(\"example.txt\") # => 'Yes'\n// file_name_check(\"1example.dll\"\
    ) # => 'No' (the name should start with a latin alphapet letter)\nfunction file_name_check($file_name)\
    \ {\n    $file_name_array = explode('.', $file_name);\n    $file_name_array_count\
    \ = count($file_name_array);\n    if ($file_name_array_count != 2) {\n       \
    \ return 'No';\n    }\n    $file_name_array_first = $file_name_array[0];\n   \
    \ $file_name_array_second = $file_name_array[1];\n    $file_name_array_first_length\
    \ = strlen($file_name_array_first);\n    $file_name_array_second_length = strlen($file_name_array_second);\n\
    \    if ($file_name_array_first_length == 0 || $file_name_array_second_length\
    \ == 0) {\n        return 'No';\n    }\n    $file_name_array_first_first_char\
    \ = $file_name_array_first[0];\n    if (!(ord($file_name_array_first_first_char)\
    \ >= ord('a') && ord($file_name_array_first_first_char) <= ord('z') || ord($file_name_array_first_first_char)\
    \ >= ord('A') && ord($file_name_array_first_first_char) <= ord('Z'))) {\n    \
    \    return 'No';\n    }\n    if (!($file_name_array_second == 'txt' || $file_name_array_second\
    \ == 'exe' || $file_name_array_second == 'dll')) {\n        return 'No';\n   \
    \ }\n    $file_name_array_first_digit_count = 0;\n    for ($i = 0; $i < $file_name_array_first_length;\
    \ $i++) {\n        $file_name_array_first_char = $file_name_array_first[$i];\n\
    \        if (ord($file_name_array_first_char) >= ord('0') && ord($file_name_array_first_char)\
    \ <= ord('9')) {\n            $file_name_array_first_digit_count++;\n        }\n\
    \    }\n    if ($file_name_array_first_digit_count > 3) {\n\nfunction candidate(...$args)\
    \ {\n    return file_name_check(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(\"example.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"1example.dll\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"s1sdf3.asd\") !== \"No\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"K.dll\") !== \"Yes\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"MY16FILE3.exe\"\
    ) !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    His12FILE94.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(\"_Y.txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"?aREYA.exe\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"/this_is_valid.dll\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"this_is_valid.wow\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_valid.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"this_is_valid.txtexe\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#this2_i4s_5valid.ten\") !== \"No\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"@this1_is6_valid.exe\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_12valid.6exe4.txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"all.exe.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"I563_No.exe\") !== \"Yes\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Is3youfault.txt\") !== \"\
    Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"no_one#knows.dll\"\
    ) !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1I563_Yes3.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"I563_Yes3.txtt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"final..txt\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"final132\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"_f4indsartal132.\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\".txt\") !== \"No\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"s.\") !== \"\
    No\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Parse error:  Unclosed '{' on line 41 in /tmp/tmpte1hs57t.php on line\
    \ 76\n"
  exit_code: 255
  status: SyntaxError
- program: "<?php\n// Create a function which takes a string representing a file's\
    \ name, and returns\n// 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n// A file's name is considered to be valid if and only if all the\
    \ following conditions \n// are met:\n// - There should not be more than three\
    \ digits ('0'-'9') in the file's name.\n// - The file's name contains exactly\
    \ one dot '.'\n// - The substring before the dot should not be empty, and it starts\
    \ with a letter from \n// the latin alphapet ('a'-'z' and 'A'-'Z').\n// - The\
    \ substring after the dot should be one of these: ['txt', 'exe', 'dll']\n// Examples:\n\
    // file_name_check(\"example.txt\") # => 'Yes'\n// file_name_check(\"1example.dll\"\
    ) # => 'No' (the name should start with a latin alphapet letter)\nfunction file_name_check($file_name)\
    \ {\n    $file_name_array = explode('.', $file_name);\n    $file_name_array_length\
    \ = count($file_name_array);\n    $file_name_array_length_1 = $file_name_array_length\
    \ - 1;\n    $file_name_array_length_2 = $file_name_array_length - 2;\n    $file_name_array_length_3\
    \ = $file_name_array_length - 3;\n    $file_name_array_length_4 = $file_name_array_length\
    \ - 4;\n    $file_name_array_length_5 = $file_name_array_length - 5;\n    $file_name_array_length_6\
    \ = $file_name_array_length - 6;\n    $file_name_array_length_7 = $file_name_array_length\
    \ - 7;\n    $file_name_array_length_8 = $file_name_array_length - 8;\n    $file_name_array_length_9\
    \ = $file_name_array_length - 9;\n    $file_name_array_length_10 = $file_name_array_length\
    \ - 10;\n    $file_name_array_length_11 = $file_name_array_length - 11;\n    $file_name_array_length_12\
    \ = $file_name_array_length - 12;\n    $file_name_array_length_13 = $file_name_array_length\
    \ - 13;\n    $file_name_array_length_14 = $file_name_array_length - 14;\n    $file_name_array_length_15\
    \ = $file_name_array_length - 15;\n    $file_name_array_length_16 = $file_name_array_length\
    \ - 16;\n    $file_name_array_length_17 = $file_name_array_length - 17;\n    $file_name_array_length_18\
    \ = $file_name_array_length - 18;\n    $file_name_array_length_19 = $file_name_array_length\
    \ - 19;\n    $file_name_array_length_20 = $file_name_array\nfunction candidate(...$args)\
    \ {\n    return file_name_check(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(\"example.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"1example.dll\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"s1sdf3.asd\") !== \"No\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"K.dll\") !== \"Yes\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"MY16FILE3.exe\"\
    ) !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    His12FILE94.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(\"_Y.txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"?aREYA.exe\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"/this_is_valid.dll\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"this_is_valid.wow\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_valid.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"this_is_valid.txtexe\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#this2_i4s_5valid.ten\") !== \"No\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"@this1_is6_valid.exe\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_12valid.6exe4.txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"all.exe.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"I563_No.exe\") !== \"Yes\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Is3youfault.txt\") !== \"\
    Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"no_one#knows.dll\"\
    ) !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1I563_Yes3.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"I563_Yes3.txtt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"final..txt\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"final132\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"_f4indsartal132.\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\".txt\") !== \"No\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"s.\") !== \"\
    No\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Parse error:  syntax error, unexpected token \"function\" in /tmp/tmpc_2dc5ru.php\
    \ on line 37\n"
  exit_code: 255
  status: SyntaxError
- program: "<?php\n// Create a function which takes a string representing a file's\
    \ name, and returns\n// 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n// A file's name is considered to be valid if and only if all the\
    \ following conditions \n// are met:\n// - There should not be more than three\
    \ digits ('0'-'9') in the file's name.\n// - The file's name contains exactly\
    \ one dot '.'\n// - The substring before the dot should not be empty, and it starts\
    \ with a letter from \n// the latin alphapet ('a'-'z' and 'A'-'Z').\n// - The\
    \ substring after the dot should be one of these: ['txt', 'exe', 'dll']\n// Examples:\n\
    // file_name_check(\"example.txt\") # => 'Yes'\n// file_name_check(\"1example.dll\"\
    ) # => 'No' (the name should start with a latin alphapet letter)\nfunction file_name_check($file_name)\
    \ {\n    $file_name_array = explode('.', $file_name);\n    $file_name_array_count\
    \ = count($file_name_array);\n    $file_name_array_count_1 = $file_name_array_count\
    \ - 1;\n    $file_name_array_count_2 = $file_name_array_count - 2;\n    $file_name_array_count_3\
    \ = $file_name_array_count - 3;\n    $file_name_array_count_4 = $file_name_array_count\
    \ - 4;\n    $file_name_array_count_5 = $file_name_array_count - 5;\n    $file_name_array_count_6\
    \ = $file_name_array_count - 6;\n    $file_name_array_count_7 = $file_name_array_count\
    \ - 7;\n    $file_name_array_count_8 = $file_name_array_count - 8;\n    $file_name_array_count_9\
    \ = $file_name_array_count - 9;\n    $file_name_array_count_10 = $file_name_array_count\
    \ - 10;\n    $file_name_array_count_11 = $file_name_array_count - 11;\n    $file_name_array_count_12\
    \ = $file_name_array_count - 12;\n    $file_name_array_count_13 = $file_name_array_count\
    \ - 13;\n    $file_name_array_count_14 = $file_name_array_count - 14;\n    $file_name_array_count_15\
    \ = $file_name_array_count - 15;\n    $file_name_array_count_16 = $file_name_array_count\
    \ - 16;\n    $file_name_array_count_17 = $file_name_array_count - 17;\n    $file_name_array_count_18\
    \ = $file_name_array_count - 18;\n    $file_name_array_count_19 = $file_name_array_count\
    \ - 19;\n    $file_name_array_count_20 = $file_name_array\nfunction candidate(...$args)\
    \ {\n    return file_name_check(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(\"example.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"1example.dll\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"s1sdf3.asd\") !== \"No\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"K.dll\") !== \"Yes\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"MY16FILE3.exe\"\
    ) !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    His12FILE94.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(\"_Y.txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"?aREYA.exe\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"/this_is_valid.dll\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"this_is_valid.wow\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_valid.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"this_is_valid.txtexe\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#this2_i4s_5valid.ten\") !== \"No\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"@this1_is6_valid.exe\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_12valid.6exe4.txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"all.exe.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"I563_No.exe\") !== \"Yes\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Is3youfault.txt\") !== \"\
    Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"no_one#knows.dll\"\
    ) !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1I563_Yes3.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"I563_Yes3.txtt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"final..txt\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"final132\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"_f4indsartal132.\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\".txt\") !== \"No\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"s.\") !== \"\
    No\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Parse error:  syntax error, unexpected token \"function\" in /tmp/tmpqwrb5now.php\
    \ on line 37\n"
  exit_code: 255
  status: SyntaxError
- program: "<?php\n// Create a function which takes a string representing a file's\
    \ name, and returns\n// 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n// A file's name is considered to be valid if and only if all the\
    \ following conditions \n// are met:\n// - There should not be more than three\
    \ digits ('0'-'9') in the file's name.\n// - The file's name contains exactly\
    \ one dot '.'\n// - The substring before the dot should not be empty, and it starts\
    \ with a letter from \n// the latin alphapet ('a'-'z' and 'A'-'Z').\n// - The\
    \ substring after the dot should be one of these: ['txt', 'exe', 'dll']\n// Examples:\n\
    // file_name_check(\"example.txt\") # => 'Yes'\n// file_name_check(\"1example.dll\"\
    ) # => 'No' (the name should start with a latin alphapet letter)\nfunction file_name_check($file_name)\
    \ {\n    $file_name_arr = explode('.', $file_name);\n    if (count($file_name_arr)\
    \ != 2) {\n        return 'No';\n    }\n    $file_name_arr[0] = preg_replace('/[^a-zA-Z]/',\
    \ '', $file_name_arr[0]);\n    if (strlen($file_name_arr[0]) == 0) {\n       \
    \ return 'No';\n    }\n    if (preg_match('/[0-9]{4,}/', $file_name_arr[0])) {\n\
    \        return 'No';\n    }\n    if (!in_array($file_name_arr[1], ['txt', 'exe',\
    \ 'dll'])) {\n        return 'No';\n    }\n    return 'Yes';\n}\n\nfunction candidate(...$args)\
    \ {\n    return file_name_check(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(\"example.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"1example.dll\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"s1sdf3.asd\") !== \"No\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"K.dll\") !== \"Yes\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"MY16FILE3.exe\"\
    ) !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    His12FILE94.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(\"_Y.txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"?aREYA.exe\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"/this_is_valid.dll\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"this_is_valid.wow\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_valid.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"this_is_valid.txtexe\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#this2_i4s_5valid.ten\") !== \"No\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"@this1_is6_valid.exe\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_12valid.6exe4.txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"all.exe.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"I563_No.exe\") !== \"Yes\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Is3youfault.txt\") !== \"\
    Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"no_one#knows.dll\"\
    ) !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1I563_Yes3.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"I563_Yes3.txtt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"final..txt\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"final132\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"_f4indsartal132.\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\".txt\") !== \"No\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"s.\") !== \"\
    No\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp4a2ymdpd.php:38\n\
    Stack trace:\n#0 /tmp/tmp4a2ymdpd.php(65): test()\n#1 {main}\n  thrown in /tmp/tmp4a2ymdpd.php\
    \ on line 38\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function which takes a string representing a file's\
    \ name, and returns\n// 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n// A file's name is considered to be valid if and only if all the\
    \ following conditions \n// are met:\n// - There should not be more than three\
    \ digits ('0'-'9') in the file's name.\n// - The file's name contains exactly\
    \ one dot '.'\n// - The substring before the dot should not be empty, and it starts\
    \ with a letter from \n// the latin alphapet ('a'-'z' and 'A'-'Z').\n// - The\
    \ substring after the dot should be one of these: ['txt', 'exe', 'dll']\n// Examples:\n\
    // file_name_check(\"example.txt\") # => 'Yes'\n// file_name_check(\"1example.dll\"\
    ) # => 'No' (the name should start with a latin alphapet letter)\nfunction file_name_check($file_name)\
    \ {\n    $file_name_array = explode('.', $file_name);\n    if (count($file_name_array)\
    \ != 2) {\n        return 'No';\n    }\n    $first_part = $file_name_array[0];\n\
    \    $second_part = $file_name_array[1];\n    if (preg_match('/[a-zA-Z]/', $first_part[0])\
    \ == 0) {\n        return 'No';\n    }\n    if (preg_match('/[0-9]/', $first_part)\
    \ > 3) {\n        return 'No';\n    }\n    if ($second_part != 'txt' && $second_part\
    \ != 'exe' && $second_part != 'dll') {\n        return 'No';\n    }\n    return\
    \ 'Yes';\n}\n\nfunction candidate(...$args) {\n    return file_name_check(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"example.txt\") !== \"Yes\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"1example.dll\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    s1sdf3.asd\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    K.dll\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    MY16FILE3.exe\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"His12FILE94.exe\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"_Y.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"?aREYA.exe\") !== \"No\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"/this_is_valid.dll\") !==\
    \ \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"this_is_valid.wow\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_valid.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"this_is_valid.txtexe\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#this2_i4s_5valid.ten\") !== \"No\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"@this1_is6_valid.exe\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_12valid.6exe4.txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"all.exe.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"I563_No.exe\") !== \"Yes\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Is3youfault.txt\") !== \"\
    Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"no_one#knows.dll\"\
    ) !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1I563_Yes3.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"I563_Yes3.txtt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"final..txt\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"final132\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"_f4indsartal132.\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\".txt\") !== \"No\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"s.\") !== \"\
    No\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp9nckwgnk.php:43\n\
    Stack trace:\n#0 /tmp/tmp9nckwgnk.php(66): test()\n#1 {main}\n  thrown in /tmp/tmp9nckwgnk.php\
    \ on line 43\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function which takes a string representing a file's\
    \ name, and returns\n// 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n// A file's name is considered to be valid if and only if all the\
    \ following conditions \n// are met:\n// - There should not be more than three\
    \ digits ('0'-'9') in the file's name.\n// - The file's name contains exactly\
    \ one dot '.'\n// - The substring before the dot should not be empty, and it starts\
    \ with a letter from \n// the latin alphapet ('a'-'z' and 'A'-'Z').\n// - The\
    \ substring after the dot should be one of these: ['txt', 'exe', 'dll']\n// Examples:\n\
    // file_name_check(\"example.txt\") # => 'Yes'\n// file_name_check(\"1example.dll\"\
    ) # => 'No' (the name should start with a latin alphapet letter)\nfunction file_name_check($file_name)\
    \ {\n    $file_name_arr = explode('.', $file_name);\n    $file_name_arr_count\
    \ = count($file_name_arr);\n    if ($file_name_arr_count != 2) {\n        return\
    \ 'No';\n    }\n    $file_name_arr_0 = $file_name_arr[0];\n    $file_name_arr_1\
    \ = $file_name_arr[1];\n    if (!preg_match('/^[a-zA-Z]/', $file_name_arr_0))\
    \ {\n        return 'No';\n    }\n    if (preg_match('/[0-9]{4,}/', $file_name_arr_0))\
    \ {\n        return 'No';\n    }\n    if (!in_array($file_name_arr_1, ['txt',\
    \ 'exe', 'dll'])) {\n        return 'No';\n    }\n    return 'Yes';\n}\n\necho\
    \ file_name_check(\"example.txt\") . PHP_EOL;\necho file_name_check(\"1example.dll\"\
    ) . PHP_EOL;\necho file_name_check(\"1example.txt\") . PHP_EOL;\necho file_name_check(\"\
    example.txt1\") . PHP_EOL;\necho file_name_check(\"example.txt.exe\") . PHP_EOL;\n\
    echo file_name_check(\"example.txt.exe.dll\") . PHP_EOL;\necho file_name_check(\"\
    example.txt.exe.dll.txt\") . PHP_EOL;\necho file_name_check(\"example.txt.exe.dll.txt.exe\"\
    ) . PHP_EOL;\necho file_name_check(\"example.txt.exe.dll.txt.exe.dll\") . PHP_EOL;\n\
    echo file_name_check(\"example.txt.exe.dll.txt.exe.dll.txt\") . PHP_EOL;\necho\
    \ file_name_check(\"example.txt.exe.dll.txt.exe.dll.txt.exe\") . PHP_EOL;\necho\
    \ file_name_check(\"example.txt.exe.dll.txt.exe.dll.txt.exe.dll\") .\nfunction\
    \ candidate(...$args) {\n    return file_name_check(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"example.txt\") !== \"Yes\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"1example.dll\") !== \"No\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"s1sdf3.asd\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    K.dll\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    MY16FILE3.exe\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"His12FILE94.exe\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"_Y.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"?aREYA.exe\") !== \"No\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"/this_is_valid.dll\") !==\
    \ \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"this_is_valid.wow\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_valid.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"this_is_valid.txtexe\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#this2_i4s_5valid.ten\") !== \"No\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"@this1_is6_valid.exe\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_12valid.6exe4.txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"all.exe.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"I563_No.exe\") !== \"Yes\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Is3youfault.txt\") !== \"\
    Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"no_one#knows.dll\"\
    ) !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1I563_Yes3.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"I563_Yes3.txtt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"final..txt\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"final132\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"_f4indsartal132.\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\".txt\") !== \"No\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"s.\") !== \"\
    No\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Parse error:  syntax error, unexpected identifier \"candidate\", expecting\
    \ \"(\" in /tmp/tmp30vey2t0.php on line 46\n"
  exit_code: 255
  status: SyntaxError
- program: "<?php\n// Create a function which takes a string representing a file's\
    \ name, and returns\n// 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n// A file's name is considered to be valid if and only if all the\
    \ following conditions \n// are met:\n// - There should not be more than three\
    \ digits ('0'-'9') in the file's name.\n// - The file's name contains exactly\
    \ one dot '.'\n// - The substring before the dot should not be empty, and it starts\
    \ with a letter from \n// the latin alphapet ('a'-'z' and 'A'-'Z').\n// - The\
    \ substring after the dot should be one of these: ['txt', 'exe', 'dll']\n// Examples:\n\
    // file_name_check(\"example.txt\") # => 'Yes'\n// file_name_check(\"1example.dll\"\
    ) # => 'No' (the name should start with a latin alphapet letter)\nfunction file_name_check($file_name)\
    \ {\n    $file_name_arr = explode('.', $file_name);\n    $file_name_arr_count\
    \ = count($file_name_arr);\n    if ($file_name_arr_count > 2) {\n        return\
    \ 'No';\n    }\n    if ($file_name_arr_count == 1) {\n        return 'No';\n \
    \   }\n    if (!preg_match('/^[a-zA-Z]/', $file_name_arr[0])) {\n        return\
    \ 'No';\n    }\n    if (!preg_match('/^[a-zA-Z]/', $file_name_arr[1])) {\n   \
    \     return 'No';\n    }\n    if (preg_match('/[0-9]{4}/', $file_name_arr[0]))\
    \ {\n        return 'No';\n    }\n    if (!preg_match('/^(txt|exe|dll)$/', $file_name_arr[1]))\
    \ {\n        return 'No';\n    }\n    return 'Yes';\n}\n\nfunction candidate(...$args)\
    \ {\n    return file_name_check(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(\"example.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"1example.dll\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"s1sdf3.asd\") !== \"No\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"K.dll\") !== \"Yes\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"MY16FILE3.exe\"\
    ) !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    His12FILE94.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(\"_Y.txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"?aREYA.exe\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"/this_is_valid.dll\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"this_is_valid.wow\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_valid.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"this_is_valid.txtexe\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#this2_i4s_5valid.ten\") !== \"No\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"@this1_is6_valid.exe\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_12valid.6exe4.txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"all.exe.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"I563_No.exe\") !== \"Yes\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Is3youfault.txt\") !== \"\
    Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"no_one#knows.dll\"\
    ) !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1I563_Yes3.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"I563_Yes3.txtt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"final..txt\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"final132\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"_f4indsartal132.\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\".txt\") !== \"No\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"s.\") !== \"\
    No\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpsvo4vwbj.php:48\n\
    Stack trace:\n#0 /tmp/tmpsvo4vwbj.php(71): test()\n#1 {main}\n  thrown in /tmp/tmpsvo4vwbj.php\
    \ on line 48\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function which takes a string representing a file's\
    \ name, and returns\n// 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n// A file's name is considered to be valid if and only if all the\
    \ following conditions \n// are met:\n// - There should not be more than three\
    \ digits ('0'-'9') in the file's name.\n// - The file's name contains exactly\
    \ one dot '.'\n// - The substring before the dot should not be empty, and it starts\
    \ with a letter from \n// the latin alphapet ('a'-'z' and 'A'-'Z').\n// - The\
    \ substring after the dot should be one of these: ['txt', 'exe', 'dll']\n// Examples:\n\
    // file_name_check(\"example.txt\") # => 'Yes'\n// file_name_check(\"1example.dll\"\
    ) # => 'No' (the name should start with a latin alphapet letter)\nfunction file_name_check($file_name)\
    \ {\n    $file_name_arr = explode('.', $file_name);\n    $file_name_arr_count\
    \ = count($file_name_arr);\n    $file_name_arr_count_check = $file_name_arr_count\
    \ === 2;\n    $file_name_arr_count_check_1 = $file_name_arr_count === 1;\n   \
    \ $file_name_arr_count_check_3 = $file_name_arr_count === 3;\n    $file_name_arr_count_check_4\
    \ = $file_name_arr_count === 4;\n    $file_name_arr_count_check_5 = $file_name_arr_count\
    \ === 5;\n    $file_name_arr_count_check_6 = $file_name_arr_count === 6;\n   \
    \ $file_name_arr_count_check_7 = $file_name_arr_count === 7;\n    $file_name_arr_count_check_8\
    \ = $file_name_arr_count === 8;\n    $file_name_arr_count_check_9 = $file_name_arr_count\
    \ === 9;\n    $file_name_arr_count_check_10 = $file_name_arr_count === 10;\n \
    \   $file_name_arr_count_check_11 = $file_name_arr_count === 11;\n    $file_name_arr_count_check_12\
    \ = $file_name_arr_count === 12;\n    $file_name_arr_count_check_13 = $file_name_arr_count\
    \ === 13;\n    $file_name_arr_count_check_14 = $file_name_arr_count === 14;\n\
    \    $file_name_arr_count_check_15 = $file_name_arr_count === 15;\n    $file_name_arr_count_check_16\
    \ = $file_name_arr_count === 16;\n    $file_name_arr_count_check_17 = $file_name_arr_count\
    \ === 17;\n    $file_name_arr_count_check_18 = $file_name_arr_count === 18;\n\
    \    $file_name_arr_\nfunction candidate(...$args) {\n    return file_name_check(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"example.txt\") !== \"Yes\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"1example.dll\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    s1sdf3.asd\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    K.dll\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    MY16FILE3.exe\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"His12FILE94.exe\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"_Y.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"?aREYA.exe\") !== \"No\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"/this_is_valid.dll\") !==\
    \ \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"this_is_valid.wow\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_valid.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"this_is_valid.txtexe\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#this2_i4s_5valid.ten\") !== \"No\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"@this1_is6_valid.exe\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_12valid.6exe4.txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"all.exe.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"I563_No.exe\") !== \"Yes\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Is3youfault.txt\") !== \"\
    Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"no_one#knows.dll\"\
    ) !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1I563_Yes3.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"I563_Yes3.txtt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"final..txt\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"final132\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"_f4indsartal132.\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\".txt\") !== \"No\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"s.\") !== \"\
    No\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Parse error:  syntax error, unexpected token \"function\" in /tmp/tmpqh4cxy2q.php\
    \ on line 36\n"
  exit_code: 255
  status: SyntaxError
- program: "<?php\n// Create a function which takes a string representing a file's\
    \ name, and returns\n// 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n// A file's name is considered to be valid if and only if all the\
    \ following conditions \n// are met:\n// - There should not be more than three\
    \ digits ('0'-'9') in the file's name.\n// - The file's name contains exactly\
    \ one dot '.'\n// - The substring before the dot should not be empty, and it starts\
    \ with a letter from \n// the latin alphapet ('a'-'z' and 'A'-'Z').\n// - The\
    \ substring after the dot should be one of these: ['txt', 'exe', 'dll']\n// Examples:\n\
    // file_name_check(\"example.txt\") # => 'Yes'\n// file_name_check(\"1example.dll\"\
    ) # => 'No' (the name should start with a latin alphapet letter)\nfunction file_name_check($file_name)\
    \ {\n  $file_name_array = explode('.', $file_name);\n  $file_name_array_length\
    \ = count($file_name_array);\n  $file_name_array_length_minus_one = $file_name_array_length\
    \ - 1;\n  $file_name_array_length_minus_two = $file_name_array_length - 2;\n \
    \ $file_name_array_length_minus_three = $file_name_array_length - 3;\n  $file_name_array_length_minus_four\
    \ = $file_name_array_length - 4;\n  $file_name_array_length_minus_five = $file_name_array_length\
    \ - 5;\n  $file_name_array_length_minus_six = $file_name_array_length - 6;\n \
    \ $file_name_array_length_minus_seven = $file_name_array_length - 7;\n  $file_name_array_length_minus_eight\
    \ = $file_name_array_length - 8;\n  $file_name_array_length_minus_nine = $file_name_array_length\
    \ - 9;\n  $file_name_array_length_minus_ten = $file_name_array_length - 10;\n\
    \  $file_name_array_length_minus_eleven = $file_name_array_length - 11;\n  $file_name_array_length_minus_twelve\
    \ = $file_name_array_length - 12;\n  $file_name_array_length_minus_thirteen =\
    \ $file_name_array_length - 13;\n  $file_name_array_length_minus_fourteen = $file_name_array_length\
    \ - 14;\n  $file_name_array_length_minus_fifteen = $file_name_array_length - 15;\n\
    \  $file_name_array_length_minus_sixteen = $file_name_array_length - 16;\n  $file_name_array_length_minus_seventeen\
    \ = $file_name_array_length - 17;\n  $file_name_array_length_minus_eighteen =\
    \ $file_name_array_length -\nfunction candidate(...$args) {\n    return file_name_check(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"example.txt\") !== \"Yes\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"1example.dll\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    s1sdf3.asd\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    K.dll\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    MY16FILE3.exe\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"His12FILE94.exe\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"_Y.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"?aREYA.exe\") !== \"No\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"/this_is_valid.dll\") !==\
    \ \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"this_is_valid.wow\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_valid.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"this_is_valid.txtexe\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#this2_i4s_5valid.ten\") !== \"No\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"@this1_is6_valid.exe\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_12valid.6exe4.txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"all.exe.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"I563_No.exe\") !== \"Yes\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Is3youfault.txt\") !== \"\
    Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"no_one#knows.dll\"\
    ) !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1I563_Yes3.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"I563_Yes3.txtt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"final..txt\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"final132\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"_f4indsartal132.\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\".txt\") !== \"No\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"s.\") !== \"\
    No\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Parse error:  syntax error, unexpected identifier \"candidate\", expecting\
    \ \"(\" in /tmp/tmpg28bhr6g.php on line 35\n"
  exit_code: 255
  status: SyntaxError
- program: "<?php\n// Create a function which takes a string representing a file's\
    \ name, and returns\n// 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n// A file's name is considered to be valid if and only if all the\
    \ following conditions \n// are met:\n// - There should not be more than three\
    \ digits ('0'-'9') in the file's name.\n// - The file's name contains exactly\
    \ one dot '.'\n// - The substring before the dot should not be empty, and it starts\
    \ with a letter from \n// the latin alphapet ('a'-'z' and 'A'-'Z').\n// - The\
    \ substring after the dot should be one of these: ['txt', 'exe', 'dll']\n// Examples:\n\
    // file_name_check(\"example.txt\") # => 'Yes'\n// file_name_check(\"1example.dll\"\
    ) # => 'No' (the name should start with a latin alphapet letter)\nfunction file_name_check($file_name)\
    \ {\n    $file_name_array = explode('.', $file_name);\n    $file_name_array_count\
    \ = count($file_name_array);\n    $file_name_array_count_check = $file_name_array_count\
    \ == 2;\n    $file_name_array_count_check_2 = $file_name_array_count == 1;\n \
    \   $file_name_array_count_check_3 = $file_name_array_count == 3;\n    $file_name_array_count_check_4\
    \ = $file_name_array_count == 4;\n    $file_name_array_count_check_5 = $file_name_array_count\
    \ == 5;\n    $file_name_array_count_check_6 = $file_name_array_count == 6;\n \
    \   $file_name_array_count_check_7 = $file_name_array_count == 7;\n    $file_name_array_count_check_8\
    \ = $file_name_array_count == 8;\n    $file_name_array_count_check_9 = $file_name_array_count\
    \ == 9;\n    $file_name_array_count_check_10 = $file_name_array_count == 10;\n\
    \    $file_name_array_count_check_11 = $file_name_array_count == 11;\n    $file_name_array_count_check_12\
    \ = $file_name_array_count == 12;\n    $file_name_array_count_check_13 = $file_name_array_count\
    \ == 13;\n    $file_name_array_count_check_14 = $file_name_array_count == 14;\n\
    \    $file_name_array_count_check_15 = $file_name_array_count == 15;\n    $file_name_array_count_check_16\
    \ = $file_name_array_count == 16;\n    $file_name_array_count_check_17 = $file_name_array_count\
    \ == 17;\n    $file_name_array_count_check_18 = $file_name_array_count == 18;\n\
    \    $file_name_array_\nfunction candidate(...$args) {\n    return file_name_check(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"example.txt\") !== \"Yes\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"1example.dll\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    s1sdf3.asd\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    K.dll\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    MY16FILE3.exe\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"His12FILE94.exe\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"_Y.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"?aREYA.exe\") !== \"No\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"/this_is_valid.dll\") !==\
    \ \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"this_is_valid.wow\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_valid.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"this_is_valid.txtexe\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#this2_i4s_5valid.ten\") !== \"No\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"@this1_is6_valid.exe\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_12valid.6exe4.txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"all.exe.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"I563_No.exe\") !== \"Yes\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Is3youfault.txt\") !== \"\
    Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"no_one#knows.dll\"\
    ) !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1I563_Yes3.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"I563_Yes3.txtt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"final..txt\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"final132\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"_f4indsartal132.\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\".txt\") !== \"No\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"s.\") !== \"\
    No\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Parse error:  syntax error, unexpected token \"function\" in /tmp/tmp9ejj28ad.php\
    \ on line 36\n"
  exit_code: 255
  status: SyntaxError
- program: "<?php\n// Create a function which takes a string representing a file's\
    \ name, and returns\n// 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n// A file's name is considered to be valid if and only if all the\
    \ following conditions \n// are met:\n// - There should not be more than three\
    \ digits ('0'-'9') in the file's name.\n// - The file's name contains exactly\
    \ one dot '.'\n// - The substring before the dot should not be empty, and it starts\
    \ with a letter from \n// the latin alphapet ('a'-'z' and 'A'-'Z').\n// - The\
    \ substring after the dot should be one of these: ['txt', 'exe', 'dll']\n// Examples:\n\
    // file_name_check(\"example.txt\") # => 'Yes'\n// file_name_check(\"1example.dll\"\
    ) # => 'No' (the name should start with a latin alphapet letter)\nfunction file_name_check($file_name)\
    \ {\n    $file_name_array = explode('.', $file_name);\n    $file_name_array_count\
    \ = count($file_name_array);\n    $file_name_array_count_digit = 0;\n    $file_name_array_count_letter\
    \ = 0;\n    $file_name_array_count_dot = 0;\n    $file_name_array_count_extension\
    \ = 0;\n    $file_name_array_count_extension_array = ['txt', 'exe', 'dll'];\n\
    \    $file_name_array_count_extension_array_count = count($file_name_array_count_extension_array);\n\
    \    $file_name_array_count_extension_array_count_valid = 0;\n    $file_name_array_count_extension_array_count_valid_array\
    \ = [];\n    $file_name_array_count_extension_array_count_valid_array_count =\
    \ 0;\n    $file_name_array_count_extension_array_count_valid_array_count_valid\
    \ = 0;\n    $file_name_array_count_extension_array_count_valid_array_count_valid_array\
    \ = [];\n    $file_name_array_count_extension_array_count_valid_array_count_valid_array_count\
    \ = 0;\n    $file_name_array_count_extension_array_count_valid_array_count_valid_array_count_valid\
    \ = 0;\n    $file_name_array_count_extension_array_count_valid_array_count_valid_array_count_valid_array\
    \ = [];\n    $file_name_array_count_extension_array_count_valid_array_count_valid_array_count_valid_array_count\
    \ = 0;\n    $file_name_array_count_extension_array_count_valid_array_count_valid_array_count_valid_array_count_valid\
    \ = 0;\n    $file_name_array_count_extension_array_count_valid_array_count_valid_array_count_valid_array_count_valid_array\
    \ = [];\n    $file_name_\nfunction candidate(...$args) {\n    return file_name_check(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"example.txt\") !== \"Yes\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"1example.dll\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    s1sdf3.asd\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    K.dll\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    MY16FILE3.exe\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"His12FILE94.exe\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"_Y.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"?aREYA.exe\") !== \"No\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"/this_is_valid.dll\") !==\
    \ \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"this_is_valid.wow\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_valid.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"this_is_valid.txtexe\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#this2_i4s_5valid.ten\") !== \"No\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"@this1_is6_valid.exe\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_12valid.6exe4.txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"all.exe.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"I563_No.exe\") !== \"Yes\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Is3youfault.txt\") !== \"\
    Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"no_one#knows.dll\"\
    ) !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1I563_Yes3.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"I563_Yes3.txtt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"final..txt\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"final132\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"_f4indsartal132.\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\".txt\") !== \"No\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"s.\") !== \"\
    No\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Parse error:  syntax error, unexpected token \"function\" in /tmp/tmp60537qag.php\
    \ on line 35\n"
  exit_code: 255
  status: SyntaxError
- program: "<?php\n// Create a function which takes a string representing a file's\
    \ name, and returns\n// 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n// A file's name is considered to be valid if and only if all the\
    \ following conditions \n// are met:\n// - There should not be more than three\
    \ digits ('0'-'9') in the file's name.\n// - The file's name contains exactly\
    \ one dot '.'\n// - The substring before the dot should not be empty, and it starts\
    \ with a letter from \n// the latin alphapet ('a'-'z' and 'A'-'Z').\n// - The\
    \ substring after the dot should be one of these: ['txt', 'exe', 'dll']\n// Examples:\n\
    // file_name_check(\"example.txt\") # => 'Yes'\n// file_name_check(\"1example.dll\"\
    ) # => 'No' (the name should start with a latin alphapet letter)\nfunction file_name_check($file_name)\
    \ {\n    $file_name_arr = explode('.', $file_name);\n    if (count($file_name_arr)\
    \ != 2) {\n        return 'No';\n    }\n    $first_part = $file_name_arr[0];\n\
    \    $second_part = $file_name_arr[1];\n    if (preg_match('/[0-9]{4,}/', $first_part))\
    \ {\n        return 'No';\n    }\n    if (!preg_match('/[a-zA-Z]/', $first_part))\
    \ {\n        return 'No';\n    }\n    if (!in_array($second_part, ['txt', 'exe',\
    \ 'dll'])) {\n        return 'No';\n    }\n    return 'Yes';\n}\n\nfunction candidate(...$args)\
    \ {\n    return file_name_check(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(\"example.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"1example.dll\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"s1sdf3.asd\") !== \"No\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"K.dll\") !== \"Yes\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"MY16FILE3.exe\"\
    ) !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    His12FILE94.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(\"_Y.txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"?aREYA.exe\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"/this_is_valid.dll\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"this_is_valid.wow\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_valid.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"this_is_valid.txtexe\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#this2_i4s_5valid.ten\") !== \"No\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"@this1_is6_valid.exe\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_12valid.6exe4.txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"all.exe.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"I563_No.exe\") !== \"Yes\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Is3youfault.txt\") !== \"\
    Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"no_one#knows.dll\"\
    ) !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1I563_Yes3.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"I563_Yes3.txtt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"final..txt\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"final132\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"_f4indsartal132.\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\".txt\") !== \"No\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"s.\") !== \"\
    No\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp2hn9g_d_.php:39\n\
    Stack trace:\n#0 /tmp/tmp2hn9g_d_.php(66): test()\n#1 {main}\n  thrown in /tmp/tmp2hn9g_d_.php\
    \ on line 39\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function which takes a string representing a file's\
    \ name, and returns\n// 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n// A file's name is considered to be valid if and only if all the\
    \ following conditions \n// are met:\n// - There should not be more than three\
    \ digits ('0'-'9') in the file's name.\n// - The file's name contains exactly\
    \ one dot '.'\n// - The substring before the dot should not be empty, and it starts\
    \ with a letter from \n// the latin alphapet ('a'-'z' and 'A'-'Z').\n// - The\
    \ substring after the dot should be one of these: ['txt', 'exe', 'dll']\n// Examples:\n\
    // file_name_check(\"example.txt\") # => 'Yes'\n// file_name_check(\"1example.dll\"\
    ) # => 'No' (the name should start with a latin alphapet letter)\nfunction file_name_check($file_name)\
    \ {\n    $file_name_arr = explode('.', $file_name);\n    $file_name_arr[0] = str_split($file_name_arr[0]);\n\
    \    $file_name_arr[1] = str_split($file_name_arr[1]);\n    $count = 0;\n    $count_digits\
    \ = 0;\n    $count_dot = 0;\n    $count_ext = 0;\n    $ext = ['txt', 'exe', 'dll'];\n\
    \    foreach ($file_name_arr[0] as $key => $value) {\n        if (ord($value)\
    \ >= 48 && ord($value) <= 57) {\n            $count_digits++;\n        }\n   \
    \     if (ord($value) >= 65 && ord($value) <= 90 || ord($value) >= 97 && ord($value)\
    \ <= 122) {\n            $count++;\n        }\n    }\n    foreach ($file_name_arr[1]\
    \ as $key => $value) {\n        if ($value == '.') {\n            $count_dot++;\n\
    \        }\n    }\n    foreach ($ext as $key => $value) {\n        if ($file_name_arr[1]\
    \ == $value) {\n            $count_ext++;\n        }\n    }\n    if ($count_digits\
    \ > 3 || $count_dot > 1 || $count == 0 || $count_ext == 0) {\n        return 'No';\n\
    \    } else {\n        return 'Yes';\n    }\n}\necho file_name_check(\"example.txt\"\
    ) . \"\\n\";\necho file_name_check(\"1example.dll\") . \"\\n\";\necho file_name_check(\"\
    1example.txt\") . \"\\n\";\necho file_name_check(\"example.exe\") . \"\\n\";\n\
    echo file_name_check(\"example.dll\") . \"\\n\";\necho file_name_check(\"example.txt.exe\"\
    ) . \"\\n\";\necho file_name_check(\"example.txt.dll\") . \"\\n\";\necho file_name_check(\"\
    example.txt.exe.dll\") . \"\\n\";\necho file_name_check(\"example.txt.exe.dll.txt\"\
    ) . \"\\n\";\nfunction candidate(...$args) {\n    return file_name_check(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"example.txt\") !== \"Yes\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"1example.dll\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    s1sdf3.asd\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    K.dll\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    MY16FILE3.exe\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"His12FILE94.exe\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"_Y.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"?aREYA.exe\") !== \"No\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"/this_is_valid.dll\") !==\
    \ \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"this_is_valid.wow\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_valid.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"this_is_valid.txtexe\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#this2_i4s_5valid.ten\") !== \"No\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"@this1_is6_valid.exe\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_12valid.6exe4.txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"all.exe.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"I563_No.exe\") !== \"Yes\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Is3youfault.txt\") !== \"\
    Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"no_one#knows.dll\"\
    ) !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1I563_Yes3.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"I563_Yes3.txtt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"final..txt\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"final132\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"_f4indsartal132.\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\".txt\") !== \"No\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"s.\") !== \"\
    No\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "No\nNo\nNo\nNo\nNo\nNo\nNo\nNo\nNo\n"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpdbzswy45.php:61\n\
    Stack trace:\n#0 /tmp/tmpdbzswy45.php(89): test()\n#1 {main}\n  thrown in /tmp/tmpdbzswy45.php\
    \ on line 61\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function which takes a string representing a file's\
    \ name, and returns\n// 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n// A file's name is considered to be valid if and only if all the\
    \ following conditions \n// are met:\n// - There should not be more than three\
    \ digits ('0'-'9') in the file's name.\n// - The file's name contains exactly\
    \ one dot '.'\n// - The substring before the dot should not be empty, and it starts\
    \ with a letter from \n// the latin alphapet ('a'-'z' and 'A'-'Z').\n// - The\
    \ substring after the dot should be one of these: ['txt', 'exe', 'dll']\n// Examples:\n\
    // file_name_check(\"example.txt\") # => 'Yes'\n// file_name_check(\"1example.dll\"\
    ) # => 'No' (the name should start with a latin alphapet letter)\nfunction file_name_check($file_name)\
    \ {\n    $file_name_array = explode('.', $file_name);\n    if (count($file_name_array)\
    \ != 2) {\n        return 'No';\n    }\n    $file_name_array[0] = preg_replace('/[^a-zA-Z]/',\
    \ '', $file_name_array[0]);\n    if (strlen($file_name_array[0]) == 0) {\n   \
    \     return 'No';\n    }\n    $file_name_array[1] = preg_replace('/[^a-zA-Z]/',\
    \ '', $file_name_array[1]);\n    if (strlen($file_name_array[1]) == 0) {\n   \
    \     return 'No';\n    }\n    if (!in_array($file_name_array[1], ['txt', 'exe',\
    \ 'dll'])) {\n        return 'No';\n    }\n    if (preg_match('/[0-9]{4,}/', $file_name))\
    \ {\n        return 'No';\n    }\n    return 'Yes';\n}\n\nfunction candidate(...$args)\
    \ {\n    return file_name_check(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(\"example.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"1example.dll\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"s1sdf3.asd\") !== \"No\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"K.dll\") !== \"Yes\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"MY16FILE3.exe\"\
    ) !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    His12FILE94.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(\"_Y.txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"?aREYA.exe\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"/this_is_valid.dll\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"this_is_valid.wow\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_valid.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"this_is_valid.txtexe\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#this2_i4s_5valid.ten\") !== \"No\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"@this1_is6_valid.exe\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_12valid.6exe4.txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"all.exe.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"I563_No.exe\") !== \"Yes\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Is3youfault.txt\") !== \"\
    Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"no_one#knows.dll\"\
    ) !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1I563_Yes3.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"I563_Yes3.txtt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"final..txt\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"final132\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"_f4indsartal132.\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\".txt\") !== \"No\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"s.\") !== \"\
    No\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpq728iqm0.php:42\n\
    Stack trace:\n#0 /tmp/tmpq728iqm0.php(69): test()\n#1 {main}\n  thrown in /tmp/tmpq728iqm0.php\
    \ on line 42\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function which takes a string representing a file's\
    \ name, and returns\n// 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n// A file's name is considered to be valid if and only if all the\
    \ following conditions \n// are met:\n// - There should not be more than three\
    \ digits ('0'-'9') in the file's name.\n// - The file's name contains exactly\
    \ one dot '.'\n// - The substring before the dot should not be empty, and it starts\
    \ with a letter from \n// the latin alphapet ('a'-'z' and 'A'-'Z').\n// - The\
    \ substring after the dot should be one of these: ['txt', 'exe', 'dll']\n// Examples:\n\
    // file_name_check(\"example.txt\") # => 'Yes'\n// file_name_check(\"1example.dll\"\
    ) # => 'No' (the name should start with a latin alphapet letter)\nfunction file_name_check($file_name)\
    \ {\n    $file_name_arr = explode('.', $file_name);\n    if (count($file_name_arr)\
    \ != 2) {\n        return 'No';\n    }\n    $file_name_arr[0] = preg_replace('/[^a-zA-Z]/',\
    \ '', $file_name_arr[0]);\n    if (strlen($file_name_arr[0]) == 0) {\n       \
    \ return 'No';\n    }\n    $file_name_arr[1] = preg_replace('/[^a-zA-Z]/', '',\
    \ $file_name_arr[1]);\n    if (!in_array($file_name_arr[1], ['txt', 'exe', 'dll']))\
    \ {\n        return 'No';\n    }\n    return 'Yes';\n}\n\nfunction candidate(...$args)\
    \ {\n    return file_name_check(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(\"example.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"1example.dll\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"s1sdf3.asd\") !== \"No\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"K.dll\") !== \"Yes\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"MY16FILE3.exe\"\
    ) !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    His12FILE94.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(\"_Y.txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"?aREYA.exe\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"/this_is_valid.dll\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"this_is_valid.wow\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_valid.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"this_is_valid.txtexe\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#this2_i4s_5valid.ten\") !== \"No\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"@this1_is6_valid.exe\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_12valid.6exe4.txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"all.exe.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"I563_No.exe\") !== \"Yes\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Is3youfault.txt\") !== \"\
    Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"no_one#knows.dll\"\
    ) !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1I563_Yes3.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"I563_Yes3.txtt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"final..txt\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"final132\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"_f4indsartal132.\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\".txt\") !== \"No\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"s.\") !== \"\
    No\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpx1fi90v8.php:36\n\
    Stack trace:\n#0 /tmp/tmpx1fi90v8.php(63): test()\n#1 {main}\n  thrown in /tmp/tmpx1fi90v8.php\
    \ on line 36\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function which takes a string representing a file's\
    \ name, and returns\n// 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n// A file's name is considered to be valid if and only if all the\
    \ following conditions \n// are met:\n// - There should not be more than three\
    \ digits ('0'-'9') in the file's name.\n// - The file's name contains exactly\
    \ one dot '.'\n// - The substring before the dot should not be empty, and it starts\
    \ with a letter from \n// the latin alphapet ('a'-'z' and 'A'-'Z').\n// - The\
    \ substring after the dot should be one of these: ['txt', 'exe', 'dll']\n// Examples:\n\
    // file_name_check(\"example.txt\") # => 'Yes'\n// file_name_check(\"1example.dll\"\
    ) # => 'No' (the name should start with a latin alphapet letter)\nfunction file_name_check($file_name)\
    \ {\n    $file_name_arr = explode('.', $file_name);\n    $file_name_arr_len =\
    \ count($file_name_arr);\n    if ($file_name_arr_len != 2) {\n        return 'No';\n\
    \    }\n    $file_name_arr_first = $file_name_arr[0];\n    $file_name_arr_second\
    \ = $file_name_arr[1];\n    $file_name_arr_first_len = strlen($file_name_arr_first);\n\
    \    $file_name_arr_second_len = strlen($file_name_arr_second);\n    if ($file_name_arr_first_len\
    \ == 0 || $file_name_arr_second_len == 0) {\n        return 'No';\n    }\n   \
    \ if (!preg_match('/^[a-zA-Z]/', $file_name_arr_first)) {\n        return 'No';\n\
    \    }\n    if (!preg_match('/^[0-9]{0,3}$/', $file_name_arr_first)) {\n     \
    \   return 'No';\n    }\n    if (!preg_match('/^(txt|exe|dll)$/', $file_name_arr_second))\
    \ {\n        return 'No';\n    }\n    return 'Yes';\n}\n\nfunction candidate(...$args)\
    \ {\n    return file_name_check(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(\"example.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"1example.dll\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"s1sdf3.asd\") !== \"No\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"K.dll\") !== \"Yes\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"MY16FILE3.exe\"\
    ) !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    His12FILE94.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(\"_Y.txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"?aREYA.exe\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"/this_is_valid.dll\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"this_is_valid.wow\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_valid.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"this_is_valid.txtexe\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#this2_i4s_5valid.ten\") !== \"No\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"@this1_is6_valid.exe\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_12valid.6exe4.txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"all.exe.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"I563_No.exe\") !== \"Yes\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Is3youfault.txt\") !== \"\
    Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"no_one#knows.dll\"\
    ) !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1I563_Yes3.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"I563_Yes3.txtt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"final..txt\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"final132\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"_f4indsartal132.\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\".txt\") !== \"No\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"s.\") !== \"\
    No\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp8pkggsjv.php:44\n\
    Stack trace:\n#0 /tmp/tmp8pkggsjv.php(72): test()\n#1 {main}\n  thrown in /tmp/tmp8pkggsjv.php\
    \ on line 44\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function which takes a string representing a file's\
    \ name, and returns\n// 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n// A file's name is considered to be valid if and only if all the\
    \ following conditions \n// are met:\n// - There should not be more than three\
    \ digits ('0'-'9') in the file's name.\n// - The file's name contains exactly\
    \ one dot '.'\n// - The substring before the dot should not be empty, and it starts\
    \ with a letter from \n// the latin alphapet ('a'-'z' and 'A'-'Z').\n// - The\
    \ substring after the dot should be one of these: ['txt', 'exe', 'dll']\n// Examples:\n\
    // file_name_check(\"example.txt\") # => 'Yes'\n// file_name_check(\"1example.dll\"\
    ) # => 'No' (the name should start with a latin alphapet letter)\nfunction file_name_check($file_name)\
    \ {\n    $file_name_arr = explode('.', $file_name);\n    $file_name_arr_len =\
    \ count($file_name_arr);\n    $file_name_arr_len_last = $file_name_arr_len - 1;\n\
    \    $file_name_arr_len_first = $file_name_arr_len - 2;\n    $file_name_arr_len_first_len\
    \ = strlen($file_name_arr[$file_name_arr_len_first]);\n    $file_name_arr_len_last_len\
    \ = strlen($file_name_arr[$file_name_arr_len_last]);\n    $file_name_arr_len_first_first\
    \ = $file_name_arr[$file_name_arr_len_first][0];\n    $file_name_arr_len_last_last\
    \ = $file_name_arr[$file_name_arr_len_last];\n    $file_name_arr_len_first_first_ascii\
    \ = ord($file_name_arr_len_first_first);\n    $file_name_arr_len_first_first_ascii_min\
    \ = ord('a');\n    $file_name_arr_len_first_first_ascii_max = ord('z');\n    $file_name_arr_len_first_first_ascii_min_upper\
    \ = ord('A');\n    $file_name_arr_len_first_first_ascii_max_upper = ord('Z');\n\
    \    $file_name_arr_len_first_first_ascii_min_upper_diff = $file_name_arr_len_first_first_ascii_min_upper\
    \ - $file_name_arr_len_first_first_ascii_min;\n    $file_name_arr_len_first_first_ascii_max_upper_diff\
    \ = $file_name_arr_len_first_first_ascii_max_upper - $file_name_arr_len_first_first_ascii_max;\n\
    \    $file_name_arr_len_first_first_ascii_min_upper\nfunction candidate(...$args)\
    \ {\n    return file_name_check(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(\"example.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"1example.dll\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"s1sdf3.asd\") !== \"No\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"K.dll\") !== \"Yes\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"MY16FILE3.exe\"\
    ) !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    His12FILE94.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(\"_Y.txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"?aREYA.exe\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"/this_is_valid.dll\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"this_is_valid.wow\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_valid.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"this_is_valid.txtexe\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#this2_i4s_5valid.ten\") !== \"No\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"@this1_is6_valid.exe\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_12valid.6exe4.txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"all.exe.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"I563_No.exe\") !== \"Yes\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Is3youfault.txt\") !== \"\
    Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"no_one#knows.dll\"\
    ) !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1I563_Yes3.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"I563_Yes3.txtt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"final..txt\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"final132\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"_f4indsartal132.\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\".txt\") !== \"No\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"s.\") !== \"\
    No\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Parse error:  syntax error, unexpected token \"function\" in /tmp/tmpntg1_mhx.php\
    \ on line 31\n"
  exit_code: 255
  status: SyntaxError
- program: "<?php\n// Create a function which takes a string representing a file's\
    \ name, and returns\n// 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n// A file's name is considered to be valid if and only if all the\
    \ following conditions \n// are met:\n// - There should not be more than three\
    \ digits ('0'-'9') in the file's name.\n// - The file's name contains exactly\
    \ one dot '.'\n// - The substring before the dot should not be empty, and it starts\
    \ with a letter from \n// the latin alphapet ('a'-'z' and 'A'-'Z').\n// - The\
    \ substring after the dot should be one of these: ['txt', 'exe', 'dll']\n// Examples:\n\
    // file_name_check(\"example.txt\") # => 'Yes'\n// file_name_check(\"1example.dll\"\
    ) # => 'No' (the name should start with a latin alphapet letter)\nfunction file_name_check($file_name)\
    \ {\n    $file_name_arr = explode('.', $file_name);\n    if (count($file_name_arr)\
    \ != 2) {\n        return 'No';\n    }\n    if (!preg_match('/^[a-zA-Z]/', $file_name_arr[0]))\
    \ {\n        return 'No';\n    }\n    if (!preg_match('/^[a-zA-Z]/', $file_name_arr[1]))\
    \ {\n        return 'No';\n    }\n    if (preg_match('/[0-9]{4}/', $file_name_arr[0]))\
    \ {\n        return 'No';\n    }\n    if (!preg_match('/^(txt|exe|dll)$/', $file_name_arr[1]))\
    \ {\n        return 'No';\n    }\n    return 'Yes';\n}\n\nfunction candidate(...$args)\
    \ {\n    return file_name_check(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(\"example.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"1example.dll\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"s1sdf3.asd\") !== \"No\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"K.dll\") !== \"Yes\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"MY16FILE3.exe\"\
    ) !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    His12FILE94.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(\"_Y.txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"?aREYA.exe\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"/this_is_valid.dll\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"this_is_valid.wow\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_valid.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"this_is_valid.txtexe\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#this2_i4s_5valid.ten\") !== \"No\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"@this1_is6_valid.exe\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_12valid.6exe4.txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"all.exe.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"I563_No.exe\") !== \"Yes\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Is3youfault.txt\") !== \"\
    Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"no_one#knows.dll\"\
    ) !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1I563_Yes3.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"I563_Yes3.txtt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"final..txt\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"final132\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"_f4indsartal132.\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\".txt\") !== \"No\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"s.\") !== \"\
    No\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp1is9fxcy.php:44\n\
    Stack trace:\n#0 /tmp/tmp1is9fxcy.php(67): test()\n#1 {main}\n  thrown in /tmp/tmp1is9fxcy.php\
    \ on line 44\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function which takes a string representing a file's\
    \ name, and returns\n// 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n// A file's name is considered to be valid if and only if all the\
    \ following conditions \n// are met:\n// - There should not be more than three\
    \ digits ('0'-'9') in the file's name.\n// - The file's name contains exactly\
    \ one dot '.'\n// - The substring before the dot should not be empty, and it starts\
    \ with a letter from \n// the latin alphapet ('a'-'z' and 'A'-'Z').\n// - The\
    \ substring after the dot should be one of these: ['txt', 'exe', 'dll']\n// Examples:\n\
    // file_name_check(\"example.txt\") # => 'Yes'\n// file_name_check(\"1example.dll\"\
    ) # => 'No' (the name should start with a latin alphapet letter)\nfunction file_name_check($file_name)\
    \ {\n    $file_name_array = explode('.', $file_name);\n    $file_name_array_count\
    \ = count($file_name_array);\n    $file_name_array_count_digits = 0;\n    $file_name_array_count_letters\
    \ = 0;\n    $file_name_array_count_letters_first = 0;\n    $file_name_array_count_letters_second\
    \ = 0;\n    $file_name_array_count_letters_third = 0;\n    $file_name_array_count_letters_fourth\
    \ = 0;\n    $file_name_array_count_letters_fifth = 0;\n    $file_name_array_count_letters_sixth\
    \ = 0;\n    $file_name_array_count_letters_seventh = 0;\n    $file_name_array_count_letters_eighth\
    \ = 0;\n    $file_name_array_count_letters_ninth = 0;\n    $file_name_array_count_letters_tenth\
    \ = 0;\n    $file_name_array_count_letters_eleventh = 0;\n    $file_name_array_count_letters_twelfth\
    \ = 0;\n    $file_name_array_count_letters_thirteenth = 0;\n    $file_name_array_count_letters_fourteenth\
    \ = 0;\n    $file_name_array_count_letters_fifteenth = 0;\n    $file_name_array_count_letters_sixteenth\
    \ = 0;\n    $file_name_array_count_letters_seventeenth = 0;\n    $file_name_array_count_letters_eighteenth\
    \ = 0;\n    $file_name_array_count_letters_nineteenth = 0;\n    $file_name_array_count_letters_twentieth\
    \ = 0;\n    $file_name_array_count_letters_twentyfirst = 0;\n    $file_name_array_count_letters_twentysecond\
    \ = 0;\n    $file_name_array_count_letters_twentythird = 0;\n    $file_name_array_count_letters_twentyfourth\
    \ = 0;\n    $file_name_array_count\nfunction candidate(...$args) {\n    return\
    \ file_name_check(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    example.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"1example.dll\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"s1sdf3.asd\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"K.dll\") !== \"Yes\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"MY16FILE3.exe\") !== \"Yes\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"His12FILE94.exe\") !==\
    \ \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"_Y.txt\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ?aREYA.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    /this_is_valid.dll\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"this_is_valid.wow\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"this_is_valid.txt\") !== \"Yes\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"this_is_valid.txtexe\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #this2_i4s_5valid.ten\") !== \"No\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"@this1_is6_valid.exe\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"this_is_12valid.6exe4.txt\") !== \"No\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"all.exe.txt\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    I563_No.exe\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"Is3youfault.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"no_one#knows.dll\") !== \"Yes\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"1I563_Yes3.exe\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"I563_Yes3.txtt\") !==\
    \ \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"final..txt\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    final132\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    _f4indsartal132.\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\".txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"s.\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Parse error:  syntax error, unexpected token \"function\" in /tmp/tmpyynac4ac.php\
    \ on line 44\n"
  exit_code: 255
  status: SyntaxError
- program: "<?php\n// Create a function which takes a string representing a file's\
    \ name, and returns\n// 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n// A file's name is considered to be valid if and only if all the\
    \ following conditions \n// are met:\n// - There should not be more than three\
    \ digits ('0'-'9') in the file's name.\n// - The file's name contains exactly\
    \ one dot '.'\n// - The substring before the dot should not be empty, and it starts\
    \ with a letter from \n// the latin alphapet ('a'-'z' and 'A'-'Z').\n// - The\
    \ substring after the dot should be one of these: ['txt', 'exe', 'dll']\n// Examples:\n\
    // file_name_check(\"example.txt\") # => 'Yes'\n// file_name_check(\"1example.dll\"\
    ) # => 'No' (the name should start with a latin alphapet letter)\nfunction file_name_check($file_name)\
    \ {\n    $file_name_array = explode('.', $file_name);\n    $file_name_array_count\
    \ = count($file_name_array);\n    if ($file_name_array_count != 2) {\n       \
    \ return 'No';\n    }\n    $file_name_array_first = $file_name_array[0];\n   \
    \ $file_name_array_second = $file_name_array[1];\n    $file_name_array_first_count\
    \ = strlen($file_name_array_first);\n    $file_name_array_second_count = strlen($file_name_array_second);\n\
    \    if ($file_name_array_first_count < 1 || $file_name_array_second_count < 1)\
    \ {\n        return 'No';\n    }\n    $file_name_array_first_first_char = $file_name_array_first[0];\n\
    \    if (!preg_match('/^[a-zA-Z]/', $file_name_array_first_first_char)) {\n  \
    \      return 'No';\n    }\n    if (!preg_match('/^[a-zA-Z]/', $file_name_array_second))\
    \ {\n        return 'No';\n    }\n    if (!preg_match('/^[a-zA-Z0-9]{1,3}$/',\
    \ $file_name_array_first)) {\n        return 'No';\n    }\n    if (!preg_match('/^(txt|exe|dll)$/',\
    \ $file_name_array_second)) {\n        return 'No';\n    }\n    return 'Yes';\n\
    }\n\nfunction candidate(...$args) {\n    return file_name_check(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(\"example.txt\") !== \"Yes\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"1example.dll\") !==\
    \ \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"s1sdf3.asd\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    K.dll\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    MY16FILE3.exe\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"His12FILE94.exe\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"_Y.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"?aREYA.exe\") !== \"No\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"/this_is_valid.dll\") !==\
    \ \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"this_is_valid.wow\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_valid.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"this_is_valid.txtexe\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#this2_i4s_5valid.ten\") !== \"No\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"@this1_is6_valid.exe\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_12valid.6exe4.txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"all.exe.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"I563_No.exe\") !== \"Yes\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Is3youfault.txt\") !== \"\
    Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"no_one#knows.dll\"\
    ) !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1I563_Yes3.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"I563_Yes3.txtt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"final..txt\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"final132\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"_f4indsartal132.\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\".txt\") !== \"No\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"s.\") !== \"\
    No\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpz6k0qm7z.php:48\n\
    Stack trace:\n#0 /tmp/tmpz6k0qm7z.php(76): test()\n#1 {main}\n  thrown in /tmp/tmpz6k0qm7z.php\
    \ on line 48\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function which takes a string representing a file's\
    \ name, and returns\n// 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n// A file's name is considered to be valid if and only if all the\
    \ following conditions \n// are met:\n// - There should not be more than three\
    \ digits ('0'-'9') in the file's name.\n// - The file's name contains exactly\
    \ one dot '.'\n// - The substring before the dot should not be empty, and it starts\
    \ with a letter from \n// the latin alphapet ('a'-'z' and 'A'-'Z').\n// - The\
    \ substring after the dot should be one of these: ['txt', 'exe', 'dll']\n// Examples:\n\
    // file_name_check(\"example.txt\") # => 'Yes'\n// file_name_check(\"1example.dll\"\
    ) # => 'No' (the name should start with a latin alphapet letter)\nfunction file_name_check($file_name)\
    \ {\n    $file_name_array = explode('.', $file_name);\n    $file_name_array_count\
    \ = count($file_name_array);\n    if ($file_name_array_count != 2) {\n       \
    \ return 'No';\n    }\n    $file_name_array_first = $file_name_array[0];\n   \
    \ $file_name_array_second = $file_name_array[1];\n    if (empty($file_name_array_first))\
    \ {\n        return 'No';\n    }\n    if (!preg_match('/^[a-zA-Z]/', $file_name_array_first))\
    \ {\n        return 'No';\n    }\n    if (!preg_match('/^[0-9]{0,3}$/', $file_name_array_first))\
    \ {\n        return 'No';\n    }\n    if (!preg_match('/^(txt|exe|dll)$/', $file_name_array_second))\
    \ {\n        return 'No';\n    }\n    return 'Yes';\n}\n\nfunction candidate(...$args)\
    \ {\n    return file_name_check(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(\"example.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"1example.dll\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"s1sdf3.asd\") !== \"No\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"K.dll\") !== \"Yes\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"MY16FILE3.exe\"\
    ) !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    His12FILE94.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(\"_Y.txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"?aREYA.exe\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"/this_is_valid.dll\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"this_is_valid.wow\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_valid.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"this_is_valid.txtexe\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#this2_i4s_5valid.ten\") !== \"No\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"@this1_is6_valid.exe\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_12valid.6exe4.txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"all.exe.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"I563_No.exe\") !== \"Yes\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Is3youfault.txt\") !== \"\
    Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"no_one#knows.dll\"\
    ) !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1I563_Yes3.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"I563_Yes3.txtt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"final..txt\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"final132\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"_f4indsartal132.\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\".txt\") !== \"No\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"s.\") !== \"\
    No\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpal9aayx3.php:42\n\
    Stack trace:\n#0 /tmp/tmpal9aayx3.php(70): test()\n#1 {main}\n  thrown in /tmp/tmpal9aayx3.php\
    \ on line 42\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function which takes a string representing a file's\
    \ name, and returns\n// 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n// A file's name is considered to be valid if and only if all the\
    \ following conditions \n// are met:\n// - There should not be more than three\
    \ digits ('0'-'9') in the file's name.\n// - The file's name contains exactly\
    \ one dot '.'\n// - The substring before the dot should not be empty, and it starts\
    \ with a letter from \n// the latin alphapet ('a'-'z' and 'A'-'Z').\n// - The\
    \ substring after the dot should be one of these: ['txt', 'exe', 'dll']\n// Examples:\n\
    // file_name_check(\"example.txt\") # => 'Yes'\n// file_name_check(\"1example.dll\"\
    ) # => 'No' (the name should start with a latin alphapet letter)\nfunction file_name_check($file_name)\
    \ {\n    $file_name_array = explode('.', $file_name);\n    if (count($file_name_array)\
    \ != 2) {\n        return 'No';\n    }\n    if (preg_match('/[^a-zA-Z0-9]/', $file_name_array[0]))\
    \ {\n        return 'No';\n    }\n    if (preg_match('/[^a-zA-Z0-9]/', $file_name_array[1]))\
    \ {\n        return 'No';\n    }\n    if (preg_match('/[0-9]{4}/', $file_name_array[0]))\
    \ {\n        return 'No';\n    }\n    if (!preg_match('/[a-zA-Z]/', $file_name_array[0]))\
    \ {\n        return 'No';\n    }\n    if (!in_array($file_name_array[1], ['txt',\
    \ 'exe', 'dll'])) {\n        return 'No';\n    }\n    return 'Yes';\n}\n\nfunction\
    \ candidate(...$args) {\n    return file_name_check(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"example.txt\") !== \"Yes\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"1example.dll\") !== \"No\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"s1sdf3.asd\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    K.dll\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    MY16FILE3.exe\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"His12FILE94.exe\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"_Y.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"?aREYA.exe\") !== \"No\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"/this_is_valid.dll\") !==\
    \ \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"this_is_valid.wow\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_valid.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"this_is_valid.txtexe\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#this2_i4s_5valid.ten\") !== \"No\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"@this1_is6_valid.exe\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_12valid.6exe4.txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"all.exe.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"I563_No.exe\") !== \"Yes\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Is3youfault.txt\") !== \"\
    Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"no_one#knows.dll\"\
    ) !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1I563_Yes3.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"I563_Yes3.txtt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"final..txt\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"final132\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"_f4indsartal132.\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\".txt\") !== \"No\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"s.\") !== \"\
    No\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpz0_v_rs1.php:43\n\
    Stack trace:\n#0 /tmp/tmpz0_v_rs1.php(70): test()\n#1 {main}\n  thrown in /tmp/tmpz0_v_rs1.php\
    \ on line 43\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function which takes a string representing a file's\
    \ name, and returns\n// 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n// A file's name is considered to be valid if and only if all the\
    \ following conditions \n// are met:\n// - There should not be more than three\
    \ digits ('0'-'9') in the file's name.\n// - The file's name contains exactly\
    \ one dot '.'\n// - The substring before the dot should not be empty, and it starts\
    \ with a letter from \n// the latin alphapet ('a'-'z' and 'A'-'Z').\n// - The\
    \ substring after the dot should be one of these: ['txt', 'exe', 'dll']\n// Examples:\n\
    // file_name_check(\"example.txt\") # => 'Yes'\n// file_name_check(\"1example.dll\"\
    ) # => 'No' (the name should start with a latin alphapet letter)\nfunction file_name_check($file_name)\
    \ {\n    $file_name_arr = explode('.', $file_name);\n    $file_name_arr_count\
    \ = count($file_name_arr);\n    if ($file_name_arr_count !== 2) {\n        return\
    \ 'No';\n    }\n    $file_name_arr_first = $file_name_arr[0];\n    $file_name_arr_second\
    \ = $file_name_arr[1];\n    if (preg_match('/[0-9]/', $file_name_arr_first) ||\
    \ preg_match('/[0-9]/', $file_name_arr_second)) {\n        return 'No';\n    }\n\
    \    if (!preg_match('/[a-zA-Z]/', $file_name_arr_first)) {\n        return 'No';\n\
    \    }\n    if (!in_array($file_name_arr_second, ['txt', 'exe', 'dll'])) {\n \
    \       return 'No';\n    }\n    return 'Yes';\n}\n\nfunction candidate(...$args)\
    \ {\n    return file_name_check(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(\"example.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"1example.dll\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"s1sdf3.asd\") !== \"No\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"K.dll\") !== \"Yes\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"MY16FILE3.exe\"\
    ) !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    His12FILE94.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(\"_Y.txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"?aREYA.exe\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"/this_is_valid.dll\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"this_is_valid.wow\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_valid.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"this_is_valid.txtexe\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#this2_i4s_5valid.ten\") !== \"No\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"@this1_is6_valid.exe\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_12valid.6exe4.txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"all.exe.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"I563_No.exe\") !== \"Yes\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Is3youfault.txt\") !== \"\
    Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"no_one#knows.dll\"\
    ) !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1I563_Yes3.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"I563_Yes3.txtt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"final..txt\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"final132\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"_f4indsartal132.\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\".txt\") !== \"No\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"s.\") !== \"\
    No\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpt22p5fis.php:43\n\
    Stack trace:\n#0 /tmp/tmpt22p5fis.php(67): test()\n#1 {main}\n  thrown in /tmp/tmpt22p5fis.php\
    \ on line 43\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function which takes a string representing a file's\
    \ name, and returns\n// 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n// A file's name is considered to be valid if and only if all the\
    \ following conditions \n// are met:\n// - There should not be more than three\
    \ digits ('0'-'9') in the file's name.\n// - The file's name contains exactly\
    \ one dot '.'\n// - The substring before the dot should not be empty, and it starts\
    \ with a letter from \n// the latin alphapet ('a'-'z' and 'A'-'Z').\n// - The\
    \ substring after the dot should be one of these: ['txt', 'exe', 'dll']\n// Examples:\n\
    // file_name_check(\"example.txt\") # => 'Yes'\n// file_name_check(\"1example.dll\"\
    ) # => 'No' (the name should start with a latin alphapet letter)\nfunction file_name_check($file_name)\
    \ {\n    $file_name_arr = explode('.', $file_name);\n    $file_name_arr_count\
    \ = count($file_name_arr);\n    $file_name_arr_first = $file_name_arr[0];\n  \
    \  $file_name_arr_first_count = strlen($file_name_arr_first);\n    $file_name_arr_last\
    \ = $file_name_arr[$file_name_arr_count - 1];\n    $file_name_arr_last_count =\
    \ strlen($file_name_arr_last);\n    $file_name_arr_last_arr = str_split($file_name_arr_last);\n\
    \    $file_name_arr_first_arr = str_split($file_name_arr_first);\n    $file_name_arr_first_arr_count\
    \ = count($file_name_arr_first_arr);\n    $file_name_arr_last_arr_count = count($file_name_arr_last_arr);\n\
    \    $file_name_arr_first_arr_first = $file_name_arr_first_arr[0];\n    $file_name_arr_last_arr_first\
    \ = $file_name_arr_last_arr[0];\n    $file_name_arr_last_arr_last = $file_name_arr_last_arr[$file_name_arr_last_arr_count\
    \ - 1];\n    $file_name_arr_last_arr_last_count = strlen($file_name_arr_last_arr_last);\n\
    \    $file_name_arr_last_arr_last_arr = str_split($file_name_arr_last_arr_last);\n\
    \    $file_name_arr_last_arr_last_arr_count = count($file_name_arr_last_arr_last_arr);\n\
    \    $file_name_arr_last_arr_last_arr_first = $file_name_arr_last_arr_last_arr[0];\n\
    \    $file_name_arr_last_arr_last_arr_last = $file_name_arr_last_arr_last_arr[$file_name_arr_\n\
    function candidate(...$args) {\n    return file_name_check(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"example.txt\") !== \"Yes\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"1example.dll\") !== \"No\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"s1sdf3.asd\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    K.dll\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    MY16FILE3.exe\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"His12FILE94.exe\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"_Y.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"?aREYA.exe\") !== \"No\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"/this_is_valid.dll\") !==\
    \ \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"this_is_valid.wow\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_valid.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"this_is_valid.txtexe\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#this2_i4s_5valid.ten\") !== \"No\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"@this1_is6_valid.exe\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_12valid.6exe4.txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"all.exe.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"I563_No.exe\") !== \"Yes\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Is3youfault.txt\") !== \"\
    Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"no_one#knows.dll\"\
    ) !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1I563_Yes3.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"I563_Yes3.txtt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"final..txt\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"final132\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"_f4indsartal132.\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\".txt\") !== \"No\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"s.\") !== \"\
    No\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Parse error:  syntax error, unexpected token \"function\", expecting\
    \ \"]\" in /tmp/tmptuav4nd6.php on line 33\n"
  exit_code: 255
  status: SyntaxError
- program: "<?php\n// Create a function which takes a string representing a file's\
    \ name, and returns\n// 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n// A file's name is considered to be valid if and only if all the\
    \ following conditions \n// are met:\n// - There should not be more than three\
    \ digits ('0'-'9') in the file's name.\n// - The file's name contains exactly\
    \ one dot '.'\n// - The substring before the dot should not be empty, and it starts\
    \ with a letter from \n// the latin alphapet ('a'-'z' and 'A'-'Z').\n// - The\
    \ substring after the dot should be one of these: ['txt', 'exe', 'dll']\n// Examples:\n\
    // file_name_check(\"example.txt\") # => 'Yes'\n// file_name_check(\"1example.dll\"\
    ) # => 'No' (the name should start with a latin alphapet letter)\nfunction file_name_check($file_name)\
    \ {\n    $file_name_arr = explode('.', $file_name);\n    $file_name_arr_count\
    \ = count($file_name_arr);\n    if ($file_name_arr_count != 2) {\n        return\
    \ 'No';\n    }\n    $file_name_arr_0 = $file_name_arr[0];\n    $file_name_arr_1\
    \ = $file_name_arr[1];\n    $file_name_arr_0_count = strlen($file_name_arr_0);\n\
    \    $file_name_arr_1_count = strlen($file_name_arr_1);\n    if ($file_name_arr_0_count\
    \ == 0 || $file_name_arr_1_count == 0) {\n        return 'No';\n    }\n    $file_name_arr_0_first_char\
    \ = $file_name_arr_0[0];\n    if (!preg_match('/^[a-zA-Z]$/', $file_name_arr_0_first_char))\
    \ {\n        return 'No';\n    }\n    $file_name_arr_0_digit_count = 0;\n    for\
    \ ($i = 0; $i < $file_name_arr_0_count; $i++) {\n        $file_name_arr_0_char\
    \ = $file_name_arr_0[$i];\n        if (preg_match('/^[0-9]$/', $file_name_arr_0_char))\
    \ {\n            $file_name_arr_0_digit_count++;\n        }\n    }\n    if ($file_name_arr_0_digit_count\
    \ > 3) {\n        return 'No';\n    }\n    if (!preg_match('/^(txt|exe|dll)$/',\
    \ $file_name_arr_1)) {\n        return 'No';\n    }\n    return 'Yes';\n}\n\n\
    function candidate(...$args) {\n    return file_name_check(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"example.txt\") !== \"Yes\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"1example.dll\") !== \"No\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"s1sdf3.asd\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    K.dll\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    MY16FILE3.exe\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"His12FILE94.exe\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"_Y.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"?aREYA.exe\") !== \"No\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"/this_is_valid.dll\") !==\
    \ \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"this_is_valid.wow\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_valid.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"this_is_valid.txtexe\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#this2_i4s_5valid.ten\") !== \"No\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"@this1_is6_valid.exe\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_12valid.6exe4.txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"all.exe.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"I563_No.exe\") !== \"Yes\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Is3youfault.txt\") !== \"\
    Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"no_one#knows.dll\"\
    ) !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1I563_Yes3.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"I563_Yes3.txtt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"final..txt\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"final132\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"_f4indsartal132.\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\".txt\") !== \"No\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"s.\") !== \"\
    No\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Create a function which takes a string representing a file's\
    \ name, and returns\n// 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n// A file's name is considered to be valid if and only if all the\
    \ following conditions \n// are met:\n// - There should not be more than three\
    \ digits ('0'-'9') in the file's name.\n// - The file's name contains exactly\
    \ one dot '.'\n// - The substring before the dot should not be empty, and it starts\
    \ with a letter from \n// the latin alphapet ('a'-'z' and 'A'-'Z').\n// - The\
    \ substring after the dot should be one of these: ['txt', 'exe', 'dll']\n// Examples:\n\
    // file_name_check(\"example.txt\") # => 'Yes'\n// file_name_check(\"1example.dll\"\
    ) # => 'No' (the name should start with a latin alphapet letter)\nfunction file_name_check($file_name)\
    \ {\n    $file_name_array = explode('.', $file_name);\n    $file_name_array_count\
    \ = count($file_name_array);\n    if ($file_name_array_count != 2) {\n       \
    \ return 'No';\n    }\n    $file_name_array_left = $file_name_array[0];\n    $file_name_array_right\
    \ = $file_name_array[1];\n    if (preg_match('/[^a-zA-Z]/', $file_name_array_left))\
    \ {\n        return 'No';\n    }\n    if (preg_match('/[0-9]/', $file_name_array_left))\
    \ {\n        return 'No';\n    }\n    if ($file_name_array_right != 'txt' && $file_name_array_right\
    \ != 'exe' && $file_name_array_right != 'dll') {\n        return 'No';\n    }\n\
    \    return 'Yes';\n}\n\nfunction candidate(...$args) {\n    return file_name_check(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"example.txt\") !== \"Yes\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"1example.dll\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    s1sdf3.asd\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    K.dll\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    MY16FILE3.exe\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"His12FILE94.exe\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"_Y.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"?aREYA.exe\") !== \"No\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"/this_is_valid.dll\") !==\
    \ \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"this_is_valid.wow\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_valid.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"this_is_valid.txtexe\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#this2_i4s_5valid.ten\") !== \"No\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"@this1_is6_valid.exe\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_12valid.6exe4.txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"all.exe.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"I563_No.exe\") !== \"Yes\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Is3youfault.txt\") !== \"\
    Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"no_one#knows.dll\"\
    ) !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1I563_Yes3.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"I563_Yes3.txtt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"final..txt\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"final132\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"_f4indsartal132.\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\".txt\") !== \"No\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"s.\") !== \"\
    No\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpdpglj96f.php:43\n\
    Stack trace:\n#0 /tmp/tmpdpglj96f.php(67): test()\n#1 {main}\n  thrown in /tmp/tmpdpglj96f.php\
    \ on line 43\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function which takes a string representing a file's\
    \ name, and returns\n// 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n// A file's name is considered to be valid if and only if all the\
    \ following conditions \n// are met:\n// - There should not be more than three\
    \ digits ('0'-'9') in the file's name.\n// - The file's name contains exactly\
    \ one dot '.'\n// - The substring before the dot should not be empty, and it starts\
    \ with a letter from \n// the latin alphapet ('a'-'z' and 'A'-'Z').\n// - The\
    \ substring after the dot should be one of these: ['txt', 'exe', 'dll']\n// Examples:\n\
    // file_name_check(\"example.txt\") # => 'Yes'\n// file_name_check(\"1example.dll\"\
    ) # => 'No' (the name should start with a latin alphapet letter)\nfunction file_name_check($file_name)\
    \ {\n    $file_name_array = explode('.', $file_name);\n    $file_name_array_count\
    \ = count($file_name_array);\n    if ($file_name_array_count != 2) {\n       \
    \ return 'No';\n    }\n    $file_name_array_first = $file_name_array[0];\n   \
    \ $file_name_array_second = $file_name_array[1];\n    if (preg_match('/[a-zA-Z]/',\
    \ $file_name_array_first) == 0) {\n        return 'No';\n    }\n    if (preg_match('/[0-9]/',\
    \ $file_name_array_first) > 3) {\n        return 'No';\n    }\n    if ($file_name_array_second\
    \ != 'txt' && $file_name_array_second != 'exe' && $file_name_array_second != 'dll')\
    \ {\n        return 'No';\n    }\n    return 'Yes';\n}\n\nfunction candidate(...$args)\
    \ {\n    return file_name_check(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(\"example.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"1example.dll\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"s1sdf3.asd\") !== \"No\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"K.dll\") !== \"Yes\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"MY16FILE3.exe\"\
    ) !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    His12FILE94.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(\"_Y.txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"?aREYA.exe\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"/this_is_valid.dll\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"this_is_valid.wow\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_valid.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"this_is_valid.txtexe\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#this2_i4s_5valid.ten\") !== \"No\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"@this1_is6_valid.exe\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_12valid.6exe4.txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"all.exe.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"I563_No.exe\") !== \"Yes\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Is3youfault.txt\") !== \"\
    Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"no_one#knows.dll\"\
    ) !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1I563_Yes3.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"I563_Yes3.txtt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"final..txt\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"final132\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"_f4indsartal132.\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\".txt\") !== \"No\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"s.\") !== \"\
    No\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpppoj78t1.php:40\n\
    Stack trace:\n#0 /tmp/tmpppoj78t1.php(67): test()\n#1 {main}\n  thrown in /tmp/tmpppoj78t1.php\
    \ on line 40\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function which takes a string representing a file's\
    \ name, and returns\n// 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n// A file's name is considered to be valid if and only if all the\
    \ following conditions \n// are met:\n// - There should not be more than three\
    \ digits ('0'-'9') in the file's name.\n// - The file's name contains exactly\
    \ one dot '.'\n// - The substring before the dot should not be empty, and it starts\
    \ with a letter from \n// the latin alphapet ('a'-'z' and 'A'-'Z').\n// - The\
    \ substring after the dot should be one of these: ['txt', 'exe', 'dll']\n// Examples:\n\
    // file_name_check(\"example.txt\") # => 'Yes'\n// file_name_check(\"1example.dll\"\
    ) # => 'No' (the name should start with a latin alphapet letter)\nfunction file_name_check($file_name)\
    \ {\n    $file_name_arr = explode('.', $file_name);\n    $file_name_arr_len =\
    \ count($file_name_arr);\n    if ($file_name_arr_len > 2) {\n        return 'No';\n\
    \    }\n    if ($file_name_arr_len == 1) {\n        return 'No';\n    }\n    $file_name_arr_0\
    \ = $file_name_arr[0];\n    $file_name_arr_1 = $file_name_arr[1];\n    if (preg_match('/[0-9]/',\
    \ $file_name_arr_0)) {\n        return 'No';\n    }\n    if (preg_match('/[0-9]/',\
    \ $file_name_arr_1)) {\n        return 'No';\n    }\n    if (preg_match('/[^a-zA-Z]/',\
    \ $file_name_arr_0)) {\n        return 'No';\n    }\n    if (!preg_match('/[a-zA-Z]/',\
    \ $file_name_arr_0)) {\n        return 'No';\n    }\n    if (!preg_match('/^[a-zA-Z]/',\
    \ $file_name_arr_0)) {\n        return 'No';\n    }\n    if (!preg_match('/^[a-zA-Z]/',\
    \ $file_name_arr_1)) {\n        return 'No';\n    }\n    if (!preg_match('/[a-zA-Z]/',\
    \ $file_name_arr_1)) {\n        return 'No';\n    }\n    if (preg_match('/[^a-zA-Z]/',\
    \ $file_name_arr_1)) {\n        return 'No';\n    }\n    if (preg_match('/[0-9]/',\
    \ $file_name_arr_0)) {\n        return 'No';\n    }\n    if (preg_match('/[0-9]/',\
    \ $file_name_arr_1)) {\n        return 'No';\n    }\n    if (p\nfunction candidate(...$args)\
    \ {\n    return file_name_check(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(\"example.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"1example.dll\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"s1sdf3.asd\") !== \"No\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"K.dll\") !== \"Yes\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"MY16FILE3.exe\"\
    ) !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    His12FILE94.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(\"_Y.txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"?aREYA.exe\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"/this_is_valid.dll\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"this_is_valid.wow\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_valid.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"this_is_valid.txtexe\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#this2_i4s_5valid.ten\") !== \"No\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"@this1_is6_valid.exe\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_12valid.6exe4.txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"all.exe.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"I563_No.exe\") !== \"Yes\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Is3youfault.txt\") !== \"\
    Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"no_one#knows.dll\"\
    ) !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1I563_Yes3.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"I563_Yes3.txtt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"final..txt\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"final132\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"_f4indsartal132.\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\".txt\") !== \"No\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"s.\") !== \"\
    No\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Parse error:  syntax error, unexpected token \"function\" in /tmp/tmpmirol8qi.php\
    \ on line 56\n"
  exit_code: 255
  status: SyntaxError
- program: "<?php\n// Create a function which takes a string representing a file's\
    \ name, and returns\n// 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n// A file's name is considered to be valid if and only if all the\
    \ following conditions \n// are met:\n// - There should not be more than three\
    \ digits ('0'-'9') in the file's name.\n// - The file's name contains exactly\
    \ one dot '.'\n// - The substring before the dot should not be empty, and it starts\
    \ with a letter from \n// the latin alphapet ('a'-'z' and 'A'-'Z').\n// - The\
    \ substring after the dot should be one of these: ['txt', 'exe', 'dll']\n// Examples:\n\
    // file_name_check(\"example.txt\") # => 'Yes'\n// file_name_check(\"1example.dll\"\
    ) # => 'No' (the name should start with a latin alphapet letter)\nfunction file_name_check($file_name)\
    \ {\n    $file_name_arr = explode('.', $file_name);\n    $file_name_arr_count\
    \ = count($file_name_arr);\n    if ($file_name_arr_count !== 2) {\n        return\
    \ 'No';\n    }\n    $file_name_arr_first = $file_name_arr[0];\n    $file_name_arr_last\
    \ = $file_name_arr[1];\n    if (preg_match('/[^a-zA-Z]/', $file_name_arr_first))\
    \ {\n        return 'No';\n    }\n    if (preg_match('/[0-9]/', $file_name_arr_first))\
    \ {\n        return 'No';\n    }\n    if (!in_array($file_name_arr_last, ['txt',\
    \ 'exe', 'dll'])) {\n        return 'No';\n    }\n    return 'Yes';\n}\n\nfunction\
    \ candidate(...$args) {\n    return file_name_check(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"example.txt\") !== \"Yes\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"1example.dll\") !== \"No\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"s1sdf3.asd\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    K.dll\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    MY16FILE3.exe\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"His12FILE94.exe\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"_Y.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"?aREYA.exe\") !== \"No\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"/this_is_valid.dll\") !==\
    \ \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"this_is_valid.wow\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_valid.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"this_is_valid.txtexe\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#this2_i4s_5valid.ten\") !== \"No\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"@this1_is6_valid.exe\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_12valid.6exe4.txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"all.exe.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"I563_No.exe\") !== \"Yes\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Is3youfault.txt\") !== \"\
    Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"no_one#knows.dll\"\
    ) !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1I563_Yes3.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"I563_Yes3.txtt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"final..txt\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"final132\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"_f4indsartal132.\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\".txt\") !== \"No\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"s.\") !== \"\
    No\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp42xsn6j1.php:43\n\
    Stack trace:\n#0 /tmp/tmp42xsn6j1.php(67): test()\n#1 {main}\n  thrown in /tmp/tmp42xsn6j1.php\
    \ on line 43\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function which takes a string representing a file's\
    \ name, and returns\n// 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n// A file's name is considered to be valid if and only if all the\
    \ following conditions \n// are met:\n// - There should not be more than three\
    \ digits ('0'-'9') in the file's name.\n// - The file's name contains exactly\
    \ one dot '.'\n// - The substring before the dot should not be empty, and it starts\
    \ with a letter from \n// the latin alphapet ('a'-'z' and 'A'-'Z').\n// - The\
    \ substring after the dot should be one of these: ['txt', 'exe', 'dll']\n// Examples:\n\
    // file_name_check(\"example.txt\") # => 'Yes'\n// file_name_check(\"1example.dll\"\
    ) # => 'No' (the name should start with a latin alphapet letter)\nfunction file_name_check($file_name)\
    \ {\n    $file_name_array = explode('.', $file_name);\n    $file_name_array_length\
    \ = count($file_name_array);\n    $file_name_array_first_element = $file_name_array[0];\n\
    \    $file_name_array_first_element_length = strlen($file_name_array_first_element);\n\
    \    $file_name_array_last_element = $file_name_array[$file_name_array_length\
    \ - 1];\n    $file_name_array_last_element_length = strlen($file_name_array_last_element);\n\
    \    $file_name_array_last_element_valid = ['txt', 'exe', 'dll'];\n    $file_name_array_last_element_valid_length\
    \ = count($file_name_array_last_element_valid);\n    $file_name_array_first_element_valid\
    \ = ['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o',\
    \ 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E',\
    \ 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U',\
    \ 'V', 'W', 'X', 'Y', 'Z'];\n    $file_name_array_first_element_valid_length =\
    \ count($file_name_array_first_element_valid);\n    $file_name_array_first_element_valid_count\
    \ = 0;\n    $file_name_array_last_element_valid_count = 0;\n    $file_name_array_first_element_valid_count_max\
    \ = 0;\n    $file_name_array_last_element_valid_count_max = 0;\n    $file_name_array_first_element_valid_count_min\
    \ = 0;\n    $file_name\nfunction candidate(...$args) {\n    return file_name_check(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"example.txt\") !== \"Yes\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"1example.dll\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    s1sdf3.asd\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    K.dll\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    MY16FILE3.exe\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"His12FILE94.exe\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"_Y.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"?aREYA.exe\") !== \"No\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"/this_is_valid.dll\") !==\
    \ \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"this_is_valid.wow\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_valid.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"this_is_valid.txtexe\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#this2_i4s_5valid.ten\") !== \"No\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"@this1_is6_valid.exe\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_12valid.6exe4.txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"all.exe.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"I563_No.exe\") !== \"Yes\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Is3youfault.txt\") !== \"\
    Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"no_one#knows.dll\"\
    ) !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1I563_Yes3.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"I563_Yes3.txtt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"final..txt\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"final132\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"_f4indsartal132.\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\".txt\") !== \"No\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"s.\") !== \"\
    No\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Parse error:  syntax error, unexpected token \"function\" in /tmp/tmpch0esume.php\
    \ on line 31\n"
  exit_code: 255
  status: SyntaxError
- program: "<?php\n// Create a function which takes a string representing a file's\
    \ name, and returns\n// 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n// A file's name is considered to be valid if and only if all the\
    \ following conditions \n// are met:\n// - There should not be more than three\
    \ digits ('0'-'9') in the file's name.\n// - The file's name contains exactly\
    \ one dot '.'\n// - The substring before the dot should not be empty, and it starts\
    \ with a letter from \n// the latin alphapet ('a'-'z' and 'A'-'Z').\n// - The\
    \ substring after the dot should be one of these: ['txt', 'exe', 'dll']\n// Examples:\n\
    // file_name_check(\"example.txt\") # => 'Yes'\n// file_name_check(\"1example.dll\"\
    ) # => 'No' (the name should start with a latin alphapet letter)\nfunction file_name_check($file_name)\
    \ {\n    $file_name_arr = explode('.', $file_name);\n    $file_name_arr_length\
    \ = count($file_name_arr);\n    $file_name_arr_first = $file_name_arr[0];\n  \
    \  $file_name_arr_last = $file_name_arr[$file_name_arr_length - 1];\n    $file_name_arr_first_length\
    \ = strlen($file_name_arr_first);\n    $file_name_arr_last_length = strlen($file_name_arr_last);\n\
    \    $file_name_arr_first_first_char = $file_name_arr_first[0];\n    $file_name_arr_first_first_char_ascii\
    \ = ord($file_name_arr_first_first_char);\n    $file_name_arr_first_first_char_ascii_lower\
    \ = $file_name_arr_first_first_char_ascii >= 97 && $file_name_arr_first_first_char_ascii\
    \ <= 122;\n    $file_name_arr_first_first_char_ascii_upper = $file_name_arr_first_first_char_ascii\
    \ >= 65 && $file_name_arr_first_first_char_ascii <= 90;\n    $file_name_arr_first_first_char_ascii_valid\
    \ = $file_name_arr_first_first_char_ascii_lower || $file_name_arr_first_first_char_ascii_upper;\n\
    \    $file_name_arr_last_valid = $file_name_arr_last === 'txt' || $file_name_arr_last\
    \ === 'exe' || $file_name_arr_last === 'dll';\n    $file_name_arr_first_valid\
    \ = $file_name_arr_first_length > 0 && $file_name_arr_first_first_char_ascii_valid;\n\
    \    $file_name_arr_valid = $file_name_arr_length === 2 && $file_name_arr_last_valid\
    \ && $file_name_arr_first_valid;\n   \nfunction candidate(...$args) {\n    return\
    \ file_name_check(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    example.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"1example.dll\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"s1sdf3.asd\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"K.dll\") !== \"Yes\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"MY16FILE3.exe\") !== \"Yes\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"His12FILE94.exe\") !==\
    \ \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"_Y.txt\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ?aREYA.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    /this_is_valid.dll\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"this_is_valid.wow\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"this_is_valid.txt\") !== \"Yes\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"this_is_valid.txtexe\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #this2_i4s_5valid.ten\") !== \"No\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"@this1_is6_valid.exe\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"this_is_12valid.6exe4.txt\") !== \"No\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"all.exe.txt\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    I563_No.exe\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"Is3youfault.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"no_one#knows.dll\") !== \"Yes\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"1I563_Yes3.exe\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"I563_Yes3.txtt\") !==\
    \ \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"final..txt\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    final132\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    _f4indsartal132.\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\".txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"s.\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Parse error:  Unclosed '{' on line 14 in /tmp/tmp_xw3gzyk.php on line\
    \ 63\n"
  exit_code: 255
  status: SyntaxError
- program: "<?php\n// Create a function which takes a string representing a file's\
    \ name, and returns\n// 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n// A file's name is considered to be valid if and only if all the\
    \ following conditions \n// are met:\n// - There should not be more than three\
    \ digits ('0'-'9') in the file's name.\n// - The file's name contains exactly\
    \ one dot '.'\n// - The substring before the dot should not be empty, and it starts\
    \ with a letter from \n// the latin alphapet ('a'-'z' and 'A'-'Z').\n// - The\
    \ substring after the dot should be one of these: ['txt', 'exe', 'dll']\n// Examples:\n\
    // file_name_check(\"example.txt\") # => 'Yes'\n// file_name_check(\"1example.dll\"\
    ) # => 'No' (the name should start with a latin alphapet letter)\nfunction file_name_check($file_name)\
    \ {\n\t$file_name_array = explode('.', $file_name);\n\t$file_name_array_length\
    \ = count($file_name_array);\n\t$file_name_array_length_minus_one = $file_name_array_length\
    \ - 1;\n\t$file_name_array_length_minus_two = $file_name_array_length - 2;\n\t\
    $file_name_array_length_minus_three = $file_name_array_length - 3;\n\t$file_name_array_length_minus_four\
    \ = $file_name_array_length - 4;\n\t$file_name_array_length_minus_five = $file_name_array_length\
    \ - 5;\n\t$file_name_array_length_minus_six = $file_name_array_length - 6;\n\t\
    $file_name_array_length_minus_seven = $file_name_array_length - 7;\n\t$file_name_array_length_minus_eight\
    \ = $file_name_array_length - 8;\n\t$file_name_array_length_minus_nine = $file_name_array_length\
    \ - 9;\n\t$file_name_array_length_minus_ten = $file_name_array_length - 10;\n\t\
    $file_name_array_length_minus_eleven = $file_name_array_length - 11;\n\t$file_name_array_length_minus_twelve\
    \ = $file_name_array_length - 12;\n\t$file_name_array_length_minus_thirteen =\
    \ $file_name_array_length - 13;\n\t$file_name_array_length_minus_fourteen = $file_name_array_length\
    \ - 14;\n\t$file_name_array_length_minus_fifteen = $file_name_array_length - 15;\n\
    \t$file_name_array_length_minus_sixteen = $file_name_array_length - 16;\n\t$file_name_array_length_minus_seventeen\
    \ = $file_name_array_length - 17;\n\t$file_name_array_length_minus_eighteen =\
    \ $file_name_array_length -\nfunction candidate(...$args) {\n    return file_name_check(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"example.txt\") !== \"Yes\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"1example.dll\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    s1sdf3.asd\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    K.dll\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    MY16FILE3.exe\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"His12FILE94.exe\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"_Y.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"?aREYA.exe\") !== \"No\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"/this_is_valid.dll\") !==\
    \ \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"this_is_valid.wow\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_valid.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"this_is_valid.txtexe\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#this2_i4s_5valid.ten\") !== \"No\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"@this1_is6_valid.exe\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_12valid.6exe4.txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"all.exe.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"I563_No.exe\") !== \"Yes\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Is3youfault.txt\") !== \"\
    Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"no_one#knows.dll\"\
    ) !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1I563_Yes3.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"I563_Yes3.txtt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"final..txt\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"final132\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"_f4indsartal132.\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\".txt\") !== \"No\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"s.\") !== \"\
    No\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Parse error:  syntax error, unexpected identifier \"candidate\", expecting\
    \ \"(\" in /tmp/tmpa3bxwf9s.php on line 35\n"
  exit_code: 255
  status: SyntaxError
- program: "<?php\n// Create a function which takes a string representing a file's\
    \ name, and returns\n// 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n// A file's name is considered to be valid if and only if all the\
    \ following conditions \n// are met:\n// - There should not be more than three\
    \ digits ('0'-'9') in the file's name.\n// - The file's name contains exactly\
    \ one dot '.'\n// - The substring before the dot should not be empty, and it starts\
    \ with a letter from \n// the latin alphapet ('a'-'z' and 'A'-'Z').\n// - The\
    \ substring after the dot should be one of these: ['txt', 'exe', 'dll']\n// Examples:\n\
    // file_name_check(\"example.txt\") # => 'Yes'\n// file_name_check(\"1example.dll\"\
    ) # => 'No' (the name should start with a latin alphapet letter)\nfunction file_name_check($file_name)\
    \ {\n    $file_name_array = explode('.', $file_name);\n    $file_name_array[0]\
    \ = str_split($file_name_array[0]);\n    $count = 0;\n    foreach ($file_name_array[0]\
    \ as $letter) {\n        if (is_numeric($letter)) {\n            $count++;\n \
    \       }\n    }\n    if ($count > 3) {\n        return 'No';\n    }\n    if (count($file_name_array)\
    \ != 2) {\n        return 'No';\n    }\n    if (is_numeric($file_name_array[0][0]))\
    \ {\n        return 'No';\n    }\n    if (!in_array($file_name_array[1], ['txt',\
    \ 'exe', 'dll'])) {\n        return 'No';\n    }\n    return 'Yes';\n}\n\nfunction\
    \ candidate(...$args) {\n    return file_name_check(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"example.txt\") !== \"Yes\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"1example.dll\") !== \"No\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"s1sdf3.asd\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    K.dll\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    MY16FILE3.exe\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"His12FILE94.exe\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"_Y.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"?aREYA.exe\") !== \"No\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"/this_is_valid.dll\") !==\
    \ \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"this_is_valid.wow\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_valid.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"this_is_valid.txtexe\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#this2_i4s_5valid.ten\") !== \"No\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"@this1_is6_valid.exe\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_12valid.6exe4.txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"all.exe.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"I563_No.exe\") !== \"Yes\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Is3youfault.txt\") !== \"\
    Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"no_one#knows.dll\"\
    ) !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1I563_Yes3.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"I563_Yes3.txtt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"final..txt\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"final132\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"_f4indsartal132.\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\".txt\") !== \"No\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"s.\") !== \"\
    No\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpmwxf3pbs.php:49\n\
    Stack trace:\n#0 /tmp/tmpmwxf3pbs.php(71): test()\n#1 {main}\n  thrown in /tmp/tmpmwxf3pbs.php\
    \ on line 49\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function which takes a string representing a file's\
    \ name, and returns\n// 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n// A file's name is considered to be valid if and only if all the\
    \ following conditions \n// are met:\n// - There should not be more than three\
    \ digits ('0'-'9') in the file's name.\n// - The file's name contains exactly\
    \ one dot '.'\n// - The substring before the dot should not be empty, and it starts\
    \ with a letter from \n// the latin alphapet ('a'-'z' and 'A'-'Z').\n// - The\
    \ substring after the dot should be one of these: ['txt', 'exe', 'dll']\n// Examples:\n\
    // file_name_check(\"example.txt\") # => 'Yes'\n// file_name_check(\"1example.dll\"\
    ) # => 'No' (the name should start with a latin alphapet letter)\nfunction file_name_check($file_name)\
    \ {\n    $file_name_arr = explode('.', $file_name);\n    if (count($file_name_arr)\
    \ != 2) {\n        return 'No';\n    }\n    $first_part = $file_name_arr[0];\n\
    \    $second_part = $file_name_arr[1];\n    if (!preg_match('/^[a-zA-Z]/', $first_part))\
    \ {\n        return 'No';\n    }\n    if (preg_match('/\\d/', $first_part)) {\n\
    \        return 'No';\n    }\n    if (!in_array($second_part, ['txt', 'exe', 'dll']))\
    \ {\n        return 'No';\n    }\n    return 'Yes';\n}\n\nfunction candidate(...$args)\
    \ {\n    return file_name_check(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(\"example.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"1example.dll\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"s1sdf3.asd\") !== \"No\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"K.dll\") !== \"Yes\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"MY16FILE3.exe\"\
    ) !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    His12FILE94.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(\"_Y.txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"?aREYA.exe\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"/this_is_valid.dll\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"this_is_valid.wow\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_valid.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"this_is_valid.txtexe\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#this2_i4s_5valid.ten\") !== \"No\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"@this1_is6_valid.exe\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_12valid.6exe4.txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"all.exe.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"I563_No.exe\") !== \"Yes\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Is3youfault.txt\") !== \"\
    Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"no_one#knows.dll\"\
    ) !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1I563_Yes3.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"I563_Yes3.txtt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"final..txt\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"final132\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"_f4indsartal132.\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\".txt\") !== \"No\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"s.\") !== \"\
    No\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp0z2y0wn8.php:42\n\
    Stack trace:\n#0 /tmp/tmp0z2y0wn8.php(66): test()\n#1 {main}\n  thrown in /tmp/tmp0z2y0wn8.php\
    \ on line 42\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function which takes a string representing a file's\
    \ name, and returns\n// 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n// A file's name is considered to be valid if and only if all the\
    \ following conditions \n// are met:\n// - There should not be more than three\
    \ digits ('0'-'9') in the file's name.\n// - The file's name contains exactly\
    \ one dot '.'\n// - The substring before the dot should not be empty, and it starts\
    \ with a letter from \n// the latin alphapet ('a'-'z' and 'A'-'Z').\n// - The\
    \ substring after the dot should be one of these: ['txt', 'exe', 'dll']\n// Examples:\n\
    // file_name_check(\"example.txt\") # => 'Yes'\n// file_name_check(\"1example.dll\"\
    ) # => 'No' (the name should start with a latin alphapet letter)\nfunction file_name_check($file_name)\
    \ {\n    $file_name_arr = explode('.', $file_name);\n    $file_name_arr[0] = str_split($file_name_arr[0]);\n\
    \    $file_name_arr[1] = str_split($file_name_arr[1]);\n    $count_digits = 0;\n\
    \    foreach ($file_name_arr[0] as $char) {\n        if (is_numeric($char)) {\n\
    \            $count_digits++;\n        }\n    }\n    if ($count_digits > 3) {\n\
    \        return 'No';\n    }\n    if (!ctype_alpha($file_name_arr[0][0])) {\n\
    \        return 'No';\n    }\n    if (!in_array($file_name_arr[1], ['txt', 'exe',\
    \ 'dll'])) {\n        return 'No';\n    }\n    return 'Yes';\n}\n\nfunction candidate(...$args)\
    \ {\n    return file_name_check(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(\"example.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"1example.dll\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"s1sdf3.asd\") !== \"No\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"K.dll\") !== \"Yes\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"MY16FILE3.exe\"\
    ) !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    His12FILE94.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(\"_Y.txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"?aREYA.exe\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"/this_is_valid.dll\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"this_is_valid.wow\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_valid.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"this_is_valid.txtexe\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#this2_i4s_5valid.ten\") !== \"No\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"@this1_is6_valid.exe\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_12valid.6exe4.txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"all.exe.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"I563_No.exe\") !== \"Yes\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Is3youfault.txt\") !== \"\
    Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"no_one#knows.dll\"\
    ) !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1I563_Yes3.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"I563_Yes3.txtt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"final..txt\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"final132\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"_f4indsartal132.\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\".txt\") !== \"No\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"s.\") !== \"\
    No\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpbqfntyfd.php:41\n\
    Stack trace:\n#0 /tmp/tmpbqfntyfd.php(69): test()\n#1 {main}\n  thrown in /tmp/tmpbqfntyfd.php\
    \ on line 41\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function which takes a string representing a file's\
    \ name, and returns\n// 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n// A file's name is considered to be valid if and only if all the\
    \ following conditions \n// are met:\n// - There should not be more than three\
    \ digits ('0'-'9') in the file's name.\n// - The file's name contains exactly\
    \ one dot '.'\n// - The substring before the dot should not be empty, and it starts\
    \ with a letter from \n// the latin alphapet ('a'-'z' and 'A'-'Z').\n// - The\
    \ substring after the dot should be one of these: ['txt', 'exe', 'dll']\n// Examples:\n\
    // file_name_check(\"example.txt\") # => 'Yes'\n// file_name_check(\"1example.dll\"\
    ) # => 'No' (the name should start with a latin alphapet letter)\nfunction file_name_check($file_name)\
    \ {\n  $file_name_arr = explode('.', $file_name);\n  $file_name_arr_count = count($file_name_arr);\n\
    \  if ($file_name_arr_count != 2) {\n    return 'No';\n  }\n  $file_name_arr_first\
    \ = $file_name_arr[0];\n  $file_name_arr_last = $file_name_arr[1];\n  $file_name_arr_first_count\
    \ = strlen($file_name_arr_first);\n  $file_name_arr_last_count = strlen($file_name_arr_last);\n\
    \  if ($file_name_arr_first_count == 0 || $file_name_arr_last_count == 0) {\n\
    \    return 'No';\n  }\n  $file_name_arr_first_first_char = $file_name_arr_first[0];\n\
    \  if (!preg_match('/^[a-zA-Z]$/', $file_name_arr_first_first_char)) {\n    return\
    \ 'No';\n  }\n  if (!preg_match('/^[a-zA-Z]{1,}$/', $file_name_arr_first)) {\n\
    \    return 'No';\n  }\n  if (!preg_match('/^[0-9]{0,3}$/', $file_name_arr_first))\
    \ {\n    return 'No';\n  }\n  if (!preg_match('/^[a-zA-Z]{1,}[0-9]{0,3}$/', $file_name_arr_first))\
    \ {\n    return 'No';\n  }\n  if (!preg_match('/^(txt|exe|dll)$/', $file_name_arr_last))\
    \ {\n    return 'No';\n  }\n  return 'Yes';\n}\n\nfunction candidate(...$args)\
    \ {\n    return file_name_check(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(\"example.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"1example.dll\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"s1sdf3.asd\") !== \"No\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"K.dll\") !== \"Yes\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"MY16FILE3.exe\"\
    ) !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    His12FILE94.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(\"_Y.txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"?aREYA.exe\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"/this_is_valid.dll\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"this_is_valid.wow\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_valid.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"this_is_valid.txtexe\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#this2_i4s_5valid.ten\") !== \"No\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"@this1_is6_valid.exe\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_12valid.6exe4.txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"all.exe.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"I563_No.exe\") !== \"Yes\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Is3youfault.txt\") !== \"\
    Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"no_one#knows.dll\"\
    ) !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1I563_Yes3.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"I563_Yes3.txtt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"final..txt\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"final132\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"_f4indsartal132.\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\".txt\") !== \"No\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"s.\") !== \"\
    No\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpuanx5p_d.php:51\n\
    Stack trace:\n#0 /tmp/tmpuanx5p_d.php(79): test()\n#1 {main}\n  thrown in /tmp/tmpuanx5p_d.php\
    \ on line 51\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function which takes a string representing a file's\
    \ name, and returns\n// 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n// A file's name is considered to be valid if and only if all the\
    \ following conditions \n// are met:\n// - There should not be more than three\
    \ digits ('0'-'9') in the file's name.\n// - The file's name contains exactly\
    \ one dot '.'\n// - The substring before the dot should not be empty, and it starts\
    \ with a letter from \n// the latin alphapet ('a'-'z' and 'A'-'Z').\n// - The\
    \ substring after the dot should be one of these: ['txt', 'exe', 'dll']\n// Examples:\n\
    // file_name_check(\"example.txt\") # => 'Yes'\n// file_name_check(\"1example.dll\"\
    ) # => 'No' (the name should start with a latin alphapet letter)\nfunction file_name_check($file_name)\
    \ {\n    $file_name_array = explode('.', $file_name);\n    $file_name_array_count\
    \ = count($file_name_array);\n    if ($file_name_array_count != 2) {\n       \
    \ return 'No';\n    }\n    $file_name_array_first = $file_name_array[0];\n   \
    \ $file_name_array_last = $file_name_array[1];\n    $file_name_array_first_count\
    \ = strlen($file_name_array_first);\n    $file_name_array_last_count = strlen($file_name_array_last);\n\
    \    if ($file_name_array_first_count == 0 || $file_name_array_last_count == 0)\
    \ {\n        return 'No';\n    }\n    if (!preg_match('/^[a-zA-Z]/', $file_name_array_first))\
    \ {\n        return 'No';\n    }\n    if (!preg_match('/^[a-zA-Z0-9]*$/', $file_name_array_first))\
    \ {\n        return 'No';\n    }\n    if (!preg_match('/^[a-zA-Z0-9]*$/', $file_name_array_last))\
    \ {\n        return 'No';\n    }\n    if (!preg_match('/^[a-zA-Z]/', $file_name_array_last))\
    \ {\n        return 'No';\n    }\n    if (!preg_match('/^(txt|exe|dll)$/', $file_name_array_last))\
    \ {\n        return 'No';\n    }\n    if (preg_match('/[0-9]{4}/', $file_name_array_first))\
    \ {\n        return 'No';\n    }\n    return 'Yes';\n}\n\nfunction candidate(...$args)\
    \ {\n    return file_name_check(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(\"example.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"1example.dll\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"s1sdf3.asd\") !== \"No\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"K.dll\") !== \"Yes\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"MY16FILE3.exe\"\
    ) !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    His12FILE94.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(\"_Y.txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"?aREYA.exe\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"/this_is_valid.dll\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"this_is_valid.wow\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_valid.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"this_is_valid.txtexe\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#this2_i4s_5valid.ten\") !== \"No\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"@this1_is6_valid.exe\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_12valid.6exe4.txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"all.exe.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"I563_No.exe\") !== \"Yes\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Is3youfault.txt\") !== \"\
    Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"no_one#knows.dll\"\
    ) !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1I563_Yes3.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"I563_Yes3.txtt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"final..txt\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"final132\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"_f4indsartal132.\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\".txt\") !== \"No\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"s.\") !== \"\
    No\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpfxkdkoy4.php:58\n\
    Stack trace:\n#0 /tmp/tmpfxkdkoy4.php(81): test()\n#1 {main}\n  thrown in /tmp/tmpfxkdkoy4.php\
    \ on line 58\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function which takes a string representing a file's\
    \ name, and returns\n// 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n// A file's name is considered to be valid if and only if all the\
    \ following conditions \n// are met:\n// - There should not be more than three\
    \ digits ('0'-'9') in the file's name.\n// - The file's name contains exactly\
    \ one dot '.'\n// - The substring before the dot should not be empty, and it starts\
    \ with a letter from \n// the latin alphapet ('a'-'z' and 'A'-'Z').\n// - The\
    \ substring after the dot should be one of these: ['txt', 'exe', 'dll']\n// Examples:\n\
    // file_name_check(\"example.txt\") # => 'Yes'\n// file_name_check(\"1example.dll\"\
    ) # => 'No' (the name should start with a latin alphapet letter)\nfunction file_name_check($file_name)\
    \ {\n    $file_name_arr = explode('.', $file_name);\n    $file_name_arr_count\
    \ = count($file_name_arr);\n    if ($file_name_arr_count != 2) {\n        return\
    \ 'No';\n    }\n    $file_name_arr_first = $file_name_arr[0];\n    $file_name_arr_last\
    \ = $file_name_arr[1];\n    if (preg_match('/[0-9]/', $file_name_arr_first) ||\
    \ preg_match('/[0-9]/', $file_name_arr_last)) {\n        return 'No';\n    }\n\
    \    if (!preg_match('/[a-zA-Z]/', $file_name_arr_first)) {\n        return 'No';\n\
    \    }\n    if (!in_array($file_name_arr_last, ['txt', 'exe', 'dll'])) {\n   \
    \     return 'No';\n    }\n    return 'Yes';\n}\n\nfunction candidate(...$args)\
    \ {\n    return file_name_check(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(\"example.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"1example.dll\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"s1sdf3.asd\") !== \"No\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"K.dll\") !== \"Yes\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"MY16FILE3.exe\"\
    ) !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    His12FILE94.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(\"_Y.txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"?aREYA.exe\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"/this_is_valid.dll\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"this_is_valid.wow\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_valid.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"this_is_valid.txtexe\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#this2_i4s_5valid.ten\") !== \"No\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"@this1_is6_valid.exe\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_12valid.6exe4.txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"all.exe.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"I563_No.exe\") !== \"Yes\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Is3youfault.txt\") !== \"\
    Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"no_one#knows.dll\"\
    ) !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1I563_Yes3.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"I563_Yes3.txtt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"final..txt\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"final132\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"_f4indsartal132.\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\".txt\") !== \"No\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"s.\") !== \"\
    No\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpfrm044gj.php:43\n\
    Stack trace:\n#0 /tmp/tmpfrm044gj.php(67): test()\n#1 {main}\n  thrown in /tmp/tmpfrm044gj.php\
    \ on line 43\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function which takes a string representing a file's\
    \ name, and returns\n// 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n// A file's name is considered to be valid if and only if all the\
    \ following conditions \n// are met:\n// - There should not be more than three\
    \ digits ('0'-'9') in the file's name.\n// - The file's name contains exactly\
    \ one dot '.'\n// - The substring before the dot should not be empty, and it starts\
    \ with a letter from \n// the latin alphapet ('a'-'z' and 'A'-'Z').\n// - The\
    \ substring after the dot should be one of these: ['txt', 'exe', 'dll']\n// Examples:\n\
    // file_name_check(\"example.txt\") # => 'Yes'\n// file_name_check(\"1example.dll\"\
    ) # => 'No' (the name should start with a latin alphapet letter)\nfunction file_name_check($file_name)\
    \ {\n    $file_name_array = explode('.', $file_name);\n    $file_name_array_count\
    \ = count($file_name_array);\n    if ($file_name_array_count != 2) {\n       \
    \ return 'No';\n    }\n    $file_name_array_first = $file_name_array[0];\n   \
    \ $file_name_array_last = $file_name_array[1];\n    $file_name_array_first_count\
    \ = strlen($file_name_array_first);\n    $file_name_array_last_count = strlen($file_name_array_last);\n\
    \    if ($file_name_array_first_count == 0 || $file_name_array_last_count == 0)\
    \ {\n        return 'No';\n    }\n    if (!preg_match('/^[a-zA-Z]/', $file_name_array_first))\
    \ {\n        return 'No';\n    }\n    if (!preg_match('/^[a-zA-Z]/', $file_name_array_last))\
    \ {\n        return 'No';\n    }\n    if (!preg_match('/^[a-zA-Z0-9]*$/', $file_name_array_first))\
    \ {\n        return 'No';\n    }\n    if (!preg_match('/^[a-zA-Z0-9]*$/', $file_name_array_last))\
    \ {\n        return 'No';\n    }\n    if (preg_match('/[0-9]{4}/', $file_name_array_first))\
    \ {\n        return 'No';\n    }\n    if (!preg_match('/^(txt|exe|dll)$/', $file_name_array_last))\
    \ {\n        return 'No';\n    }\n    return 'Yes';\n}\n\nfunction candidate(...$args)\
    \ {\n    return file_name_check(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(\"example.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"1example.dll\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"s1sdf3.asd\") !== \"No\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"K.dll\") !== \"Yes\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"MY16FILE3.exe\"\
    ) !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    His12FILE94.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(\"_Y.txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"?aREYA.exe\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"/this_is_valid.dll\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"this_is_valid.wow\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_valid.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"this_is_valid.txtexe\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#this2_i4s_5valid.ten\") !== \"No\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"@this1_is6_valid.exe\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_12valid.6exe4.txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"all.exe.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"I563_No.exe\") !== \"Yes\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Is3youfault.txt\") !== \"\
    Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"no_one#knows.dll\"\
    ) !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1I563_Yes3.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"I563_Yes3.txtt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"final..txt\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"final132\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"_f4indsartal132.\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\".txt\") !== \"No\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"s.\") !== \"\
    No\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpfz17ievy.php:58\n\
    Stack trace:\n#0 /tmp/tmpfz17ievy.php(81): test()\n#1 {main}\n  thrown in /tmp/tmpfz17ievy.php\
    \ on line 58\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function which takes a string representing a file's\
    \ name, and returns\n// 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n// A file's name is considered to be valid if and only if all the\
    \ following conditions \n// are met:\n// - There should not be more than three\
    \ digits ('0'-'9') in the file's name.\n// - The file's name contains exactly\
    \ one dot '.'\n// - The substring before the dot should not be empty, and it starts\
    \ with a letter from \n// the latin alphapet ('a'-'z' and 'A'-'Z').\n// - The\
    \ substring after the dot should be one of these: ['txt', 'exe', 'dll']\n// Examples:\n\
    // file_name_check(\"example.txt\") # => 'Yes'\n// file_name_check(\"1example.dll\"\
    ) # => 'No' (the name should start with a latin alphapet letter)\nfunction file_name_check($file_name)\
    \ {\n    $file_name_array = explode('.', $file_name);\n    $first_part = $file_name_array[0];\n\
    \    $second_part = $file_name_array[1];\n    $first_part_array = str_split($first_part);\n\
    \    $number_of_digits = 0;\n    foreach ($first_part_array as $character) {\n\
    \        if (is_numeric($character)) {\n            $number_of_digits++;\n   \
    \     }\n    }\n    if ($number_of_digits > 3) {\n        return 'No';\n    }\n\
    \    if (!ctype_alpha($first_part_array[0])) {\n        return 'No';\n    }\n\
    \    if (!in_array($second_part, ['txt', 'exe', 'dll'])) {\n        return 'No';\n\
    \    }\n    return 'Yes';\n}\n\nfunction candidate(...$args) {\n    return file_name_check(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"example.txt\") !== \"Yes\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"1example.dll\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    s1sdf3.asd\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    K.dll\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    MY16FILE3.exe\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"His12FILE94.exe\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"_Y.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"?aREYA.exe\") !== \"No\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"/this_is_valid.dll\") !==\
    \ \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"this_is_valid.wow\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_valid.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"this_is_valid.txtexe\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#this2_i4s_5valid.ten\") !== \"No\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"@this1_is6_valid.exe\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_12valid.6exe4.txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"all.exe.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"I563_No.exe\") !== \"Yes\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Is3youfault.txt\") !== \"\
    Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"no_one#knows.dll\"\
    ) !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1I563_Yes3.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"I563_Yes3.txtt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"final..txt\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"final132\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"_f4indsartal132.\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\".txt\") !== \"No\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"s.\") !== \"\
    No\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpov5duzd_.php:57\n\
    Stack trace:\n#0 /tmp/tmpov5duzd_.php(70): test()\n#1 {main}\n  thrown in /tmp/tmpov5duzd_.php\
    \ on line 57\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function which takes a string representing a file's\
    \ name, and returns\n// 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n// A file's name is considered to be valid if and only if all the\
    \ following conditions \n// are met:\n// - There should not be more than three\
    \ digits ('0'-'9') in the file's name.\n// - The file's name contains exactly\
    \ one dot '.'\n// - The substring before the dot should not be empty, and it starts\
    \ with a letter from \n// the latin alphapet ('a'-'z' and 'A'-'Z').\n// - The\
    \ substring after the dot should be one of these: ['txt', 'exe', 'dll']\n// Examples:\n\
    // file_name_check(\"example.txt\") # => 'Yes'\n// file_name_check(\"1example.dll\"\
    ) # => 'No' (the name should start with a latin alphapet letter)\nfunction file_name_check($file_name)\
    \ {\n    $file_name_arr = explode('.', $file_name);\n    $file_name_arr_count\
    \ = count($file_name_arr);\n    if ($file_name_arr_count != 2) {\n        return\
    \ 'No';\n    }\n    if (!preg_match('/^[a-zA-Z]/', $file_name_arr[0])) {\n   \
    \     return 'No';\n    }\n    if (preg_match('/[0-9]{4}/', $file_name_arr[0]))\
    \ {\n        return 'No';\n    }\n    if (!in_array($file_name_arr[1], ['txt',\
    \ 'exe', 'dll'])) {\n        return 'No';\n    }\n    return 'Yes';\n}\n\nfunction\
    \ candidate(...$args) {\n    return file_name_check(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"example.txt\") !== \"Yes\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"1example.dll\") !== \"No\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"s1sdf3.asd\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    K.dll\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    MY16FILE3.exe\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"His12FILE94.exe\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"_Y.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"?aREYA.exe\") !== \"No\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"/this_is_valid.dll\") !==\
    \ \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"this_is_valid.wow\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_valid.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"this_is_valid.txtexe\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#this2_i4s_5valid.ten\") !== \"No\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"@this1_is6_valid.exe\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_12valid.6exe4.txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"all.exe.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"I563_No.exe\") !== \"Yes\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Is3youfault.txt\") !== \"\
    Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"no_one#knows.dll\"\
    ) !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1I563_Yes3.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"I563_Yes3.txtt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"final..txt\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"final132\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"_f4indsartal132.\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\".txt\") !== \"No\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"s.\") !== \"\
    No\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpsopmbn13.php:42\n\
    Stack trace:\n#0 /tmp/tmpsopmbn13.php(65): test()\n#1 {main}\n  thrown in /tmp/tmpsopmbn13.php\
    \ on line 42\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function which takes a string representing a file's\
    \ name, and returns\n// 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n// A file's name is considered to be valid if and only if all the\
    \ following conditions \n// are met:\n// - There should not be more than three\
    \ digits ('0'-'9') in the file's name.\n// - The file's name contains exactly\
    \ one dot '.'\n// - The substring before the dot should not be empty, and it starts\
    \ with a letter from \n// the latin alphapet ('a'-'z' and 'A'-'Z').\n// - The\
    \ substring after the dot should be one of these: ['txt', 'exe', 'dll']\n// Examples:\n\
    // file_name_check(\"example.txt\") # => 'Yes'\n// file_name_check(\"1example.dll\"\
    ) # => 'No' (the name should start with a latin alphapet letter)\nfunction file_name_check($file_name)\
    \ {\n    $file_name_array = explode('.', $file_name);\n    if (count($file_name_array)\
    \ != 2) {\n        return 'No';\n    }\n    if (preg_match('/[0-9]{4,}/', $file_name_array[0]))\
    \ {\n        return 'No';\n    }\n    if (!preg_match('/^[a-zA-Z]/', $file_name_array[0]))\
    \ {\n        return 'No';\n    }\n    if (!in_array($file_name_array[1], ['txt',\
    \ 'exe', 'dll'])) {\n        return 'No';\n    }\n    return 'Yes';\n}\n\nfunction\
    \ candidate(...$args) {\n    return file_name_check(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"example.txt\") !== \"Yes\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"1example.dll\") !== \"No\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"s1sdf3.asd\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    K.dll\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    MY16FILE3.exe\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"His12FILE94.exe\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"_Y.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"?aREYA.exe\") !== \"No\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"/this_is_valid.dll\") !==\
    \ \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"this_is_valid.wow\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_valid.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"this_is_valid.txtexe\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#this2_i4s_5valid.ten\") !== \"No\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"@this1_is6_valid.exe\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_12valid.6exe4.txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"all.exe.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"I563_No.exe\") !== \"Yes\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Is3youfault.txt\") !== \"\
    Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"no_one#knows.dll\"\
    ) !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1I563_Yes3.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"I563_Yes3.txtt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"final..txt\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"final132\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"_f4indsartal132.\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\".txt\") !== \"No\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"s.\") !== \"\
    No\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpypo7mpae.php:41\n\
    Stack trace:\n#0 /tmp/tmpypo7mpae.php(64): test()\n#1 {main}\n  thrown in /tmp/tmpypo7mpae.php\
    \ on line 41\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function which takes a string representing a file's\
    \ name, and returns\n// 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n// A file's name is considered to be valid if and only if all the\
    \ following conditions \n// are met:\n// - There should not be more than three\
    \ digits ('0'-'9') in the file's name.\n// - The file's name contains exactly\
    \ one dot '.'\n// - The substring before the dot should not be empty, and it starts\
    \ with a letter from \n// the latin alphapet ('a'-'z' and 'A'-'Z').\n// - The\
    \ substring after the dot should be one of these: ['txt', 'exe', 'dll']\n// Examples:\n\
    // file_name_check(\"example.txt\") # => 'Yes'\n// file_name_check(\"1example.dll\"\
    ) # => 'No' (the name should start with a latin alphapet letter)\nfunction file_name_check($file_name)\
    \ {\n    $file_name_array = explode('.', $file_name);\n    $file_name_array_length\
    \ = count($file_name_array);\n    if ($file_name_array_length == 2) {\n      \
    \  $file_name_array_first_part = $file_name_array[0];\n        $file_name_array_second_part\
    \ = $file_name_array[1];\n        $file_name_array_first_part_length = strlen($file_name_array_first_part);\n\
    \        $file_name_array_second_part_length = strlen($file_name_array_second_part);\n\
    \        if ($file_name_array_first_part_length > 0 && $file_name_array_second_part_length\
    \ > 0) {\n            $file_name_array_first_part_first_char = $file_name_array_first_part[0];\n\
    \            $file_name_array_second_part_first_char = $file_name_array_second_part[0];\n\
    \            if (preg_match('/[a-zA-Z]/', $file_name_array_first_part_first_char)\
    \ && preg_match('/[a-zA-Z]/', $file_name_array_second_part_first_char)) {\n  \
    \              if (preg_match('/[0-9]/', $file_name_array_first_part) && preg_match('/[0-9]/',\
    \ $file_name_array_second_part)) {\n                    $file_name_array_first_part_number_count\
    \ = preg_match_all('/[0-9]/', $file_name_array_first_part);\n                \
    \    $file_name_array_second_part_number_count = preg_match_all('/[0-9]/', $file_name_array_second_part);\n\
    \                    if ($file_name_array_first_part_number_count <= 3 && $file_name_array_second_part_number_count\
    \ <= 3) {\n                        if ($file_name_array_second_part == 'txt' ||\
    \ $file\nfunction candidate(...$args) {\n    return file_name_check(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"example.txt\") !== \"Yes\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"1example.dll\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    s1sdf3.asd\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    K.dll\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    MY16FILE3.exe\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"His12FILE94.exe\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"_Y.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"?aREYA.exe\") !== \"No\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"/this_is_valid.dll\") !==\
    \ \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"this_is_valid.wow\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_valid.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"this_is_valid.txtexe\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#this2_i4s_5valid.ten\") !== \"No\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"@this1_is6_valid.exe\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_12valid.6exe4.txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"all.exe.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"I563_No.exe\") !== \"Yes\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Is3youfault.txt\") !== \"\
    Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"no_one#knows.dll\"\
    ) !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1I563_Yes3.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"I563_Yes3.txtt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"final..txt\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"final132\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"_f4indsartal132.\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\".txt\") !== \"No\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"s.\") !== \"\
    No\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Parse error:  syntax error, unexpected token \"function\" in /tmp/tmptyexru9z.php\
    \ on line 31\n"
  exit_code: 255
  status: SyntaxError
- program: "<?php\n// Create a function which takes a string representing a file's\
    \ name, and returns\n// 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n// A file's name is considered to be valid if and only if all the\
    \ following conditions \n// are met:\n// - There should not be more than three\
    \ digits ('0'-'9') in the file's name.\n// - The file's name contains exactly\
    \ one dot '.'\n// - The substring before the dot should not be empty, and it starts\
    \ with a letter from \n// the latin alphapet ('a'-'z' and 'A'-'Z').\n// - The\
    \ substring after the dot should be one of these: ['txt', 'exe', 'dll']\n// Examples:\n\
    // file_name_check(\"example.txt\") # => 'Yes'\n// file_name_check(\"1example.dll\"\
    ) # => 'No' (the name should start with a latin alphapet letter)\nfunction file_name_check($file_name)\
    \ {\n    $file_name_arr = explode('.', $file_name);\n    $file_name_arr[0] = str_split($file_name_arr[0]);\n\
    \    $file_name_arr[1] = str_split($file_name_arr[1]);\n    $count = 0;\n    $count_num\
    \ = 0;\n    $count_dot = 0;\n    $count_letter = 0;\n    $count_ext = 0;\n   \
    \ foreach ($file_name_arr[0] as $key => $value) {\n        if (is_numeric($value))\
    \ {\n            $count_num++;\n        }\n        if ($count_num > 3) {\n   \
    \         return 'No';\n        }\n        if (ctype_alpha($value)) {\n      \
    \      $count_letter++;\n        }\n        if ($count_letter == 0) {\n      \
    \      return 'No';\n        }\n    }\n    foreach ($file_name_arr[1] as $key\
    \ => $value) {\n        if ($value == '.') {\n            $count_dot++;\n    \
    \    }\n        if ($count_dot > 1) {\n            return 'No';\n        }\n \
    \       if ($value == 'txt' || $value == 'exe' || $value == 'dll') {\n       \
    \     $count_ext++;\n        }\n        if ($count_ext == 0) {\n            return\
    \ 'No';\n        }\n    }\n    return 'Yes';\n}\necho file_name_check(\"example.txt\"\
    ) . \"\\n\";\necho file_name_check(\"1example.dll\") . \"\\n\";\necho file_name_check(\"\
    1example.txt\") . \"\\n\";\necho file_name_check(\"example.exe\") . \"\\n\";\n\
    echo file_name_check(\"example.dll\") . \"\\n\";\necho file_name_check(\"example.txt.exe\"\
    ) . \"\\n\";\necho file_name_check(\"example.txt.dll\") . \"\\n\";\necho file_name_check(\"\
    example.txt.exe.dll\") . \"\\n\";\necho file_name_check(\"example.txt.exe.dll.txt\"\
    ) . \"\\n\";\necho file_name_check(\"example\nfunction candidate(...$args) {\n\
    \    return file_name_check(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    example.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"1example.dll\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"s1sdf3.asd\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"K.dll\") !== \"Yes\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"MY16FILE3.exe\") !== \"Yes\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"His12FILE94.exe\") !==\
    \ \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"_Y.txt\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ?aREYA.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    /this_is_valid.dll\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"this_is_valid.wow\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"this_is_valid.txt\") !== \"Yes\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"this_is_valid.txtexe\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #this2_i4s_5valid.ten\") !== \"No\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"@this1_is6_valid.exe\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"this_is_12valid.6exe4.txt\") !== \"No\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"all.exe.txt\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    I563_No.exe\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"Is3youfault.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"no_one#knows.dll\") !== \"Yes\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"1I563_Yes3.exe\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"I563_Yes3.txtt\") !==\
    \ \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"final..txt\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    final132\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    _f4indsartal132.\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\".txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"s.\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Parse error:  syntax error, unexpected identifier \"example\", expecting\
    \ \")\" in /tmp/tmpkwhcdd50.php on line 68\n"
  exit_code: 255
  status: SyntaxError
- program: "<?php\n// Create a function which takes a string representing a file's\
    \ name, and returns\n// 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n// A file's name is considered to be valid if and only if all the\
    \ following conditions \n// are met:\n// - There should not be more than three\
    \ digits ('0'-'9') in the file's name.\n// - The file's name contains exactly\
    \ one dot '.'\n// - The substring before the dot should not be empty, and it starts\
    \ with a letter from \n// the latin alphapet ('a'-'z' and 'A'-'Z').\n// - The\
    \ substring after the dot should be one of these: ['txt', 'exe', 'dll']\n// Examples:\n\
    // file_name_check(\"example.txt\") # => 'Yes'\n// file_name_check(\"1example.dll\"\
    ) # => 'No' (the name should start with a latin alphapet letter)\nfunction file_name_check($file_name)\
    \ {\n\t$file_name_arr = explode('.', $file_name);\n\tif(count($file_name_arr)\
    \ != 2) {\n\t\treturn 'No';\n\t}\n\t$file_name_arr[0] = preg_replace('/[^a-zA-Z]/',\
    \ '', $file_name_arr[0]);\n\tif(strlen($file_name_arr[0]) == 0) {\n\t\treturn\
    \ 'No';\n\t}\n\tif(!in_array($file_name_arr[1], ['txt', 'exe', 'dll'])) {\n\t\t\
    return 'No';\n\t}\n\treturn 'Yes';\n}\n\nfunction candidate(...$args) {\n    return\
    \ file_name_check(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    example.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"1example.dll\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"s1sdf3.asd\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"K.dll\") !== \"Yes\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"MY16FILE3.exe\") !== \"Yes\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"His12FILE94.exe\") !==\
    \ \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"_Y.txt\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ?aREYA.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    /this_is_valid.dll\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"this_is_valid.wow\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"this_is_valid.txt\") !== \"Yes\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"this_is_valid.txtexe\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #this2_i4s_5valid.ten\") !== \"No\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"@this1_is6_valid.exe\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"this_is_12valid.6exe4.txt\") !== \"No\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"all.exe.txt\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    I563_No.exe\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"Is3youfault.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"no_one#knows.dll\") !== \"Yes\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"1I563_Yes3.exe\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"I563_Yes3.txtt\") !==\
    \ \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"final..txt\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    final132\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    _f4indsartal132.\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\".txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"s.\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpdstx670p.php:35\n\
    Stack trace:\n#0 /tmp/tmpdstx670p.php(62): test()\n#1 {main}\n  thrown in /tmp/tmpdstx670p.php\
    \ on line 35\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function which takes a string representing a file's\
    \ name, and returns\n// 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n// A file's name is considered to be valid if and only if all the\
    \ following conditions \n// are met:\n// - There should not be more than three\
    \ digits ('0'-'9') in the file's name.\n// - The file's name contains exactly\
    \ one dot '.'\n// - The substring before the dot should not be empty, and it starts\
    \ with a letter from \n// the latin alphapet ('a'-'z' and 'A'-'Z').\n// - The\
    \ substring after the dot should be one of these: ['txt', 'exe', 'dll']\n// Examples:\n\
    // file_name_check(\"example.txt\") # => 'Yes'\n// file_name_check(\"1example.dll\"\
    ) # => 'No' (the name should start with a latin alphapet letter)\nfunction file_name_check($file_name)\
    \ {\n    $file_name_arr = explode('.', $file_name);\n    $file_name_arr_len =\
    \ count($file_name_arr);\n    if ($file_name_arr_len != 2) {\n        return 'No';\n\
    \    }\n    $file_name_arr_0 = $file_name_arr[0];\n    $file_name_arr_1 = $file_name_arr[1];\n\
    \    if (preg_match('/^[a-zA-Z]+$/', $file_name_arr_0) == 0) {\n        return\
    \ 'No';\n    }\n    if (preg_match('/^[a-zA-Z]+$/', $file_name_arr_1) == 0) {\n\
    \        return 'No';\n    }\n    if (preg_match('/^[0-9]+$/', $file_name_arr_0)\
    \ == 1) {\n        return 'No';\n    }\n    if (preg_match('/^[0-9]+$/', $file_name_arr_1)\
    \ == 1) {\n        return 'No';\n    }\n    if (preg_match('/[0-9]{4,}/', $file_name_arr_0)\
    \ == 1) {\n        return 'No';\n    }\n    if (preg_match('/[0-9]{4,}/', $file_name_arr_1)\
    \ == 1) {\n        return 'No';\n    }\n    if ($file_name_arr_1 != 'txt' && $file_name_arr_1\
    \ != 'exe' && $file_name_arr_1 != 'dll') {\n        return 'No';\n    }\n    return\
    \ 'Yes';\n}\n\nfunction candidate(...$args) {\n    return file_name_check(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"example.txt\") !== \"Yes\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"1example.dll\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    s1sdf3.asd\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    K.dll\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    MY16FILE3.exe\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"His12FILE94.exe\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"_Y.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"?aREYA.exe\") !== \"No\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"/this_is_valid.dll\") !==\
    \ \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"this_is_valid.wow\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_valid.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"this_is_valid.txtexe\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#this2_i4s_5valid.ten\") !== \"No\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"@this1_is6_valid.exe\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_12valid.6exe4.txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"all.exe.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"I563_No.exe\") !== \"Yes\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Is3youfault.txt\") !== \"\
    Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"no_one#knows.dll\"\
    ) !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1I563_Yes3.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"I563_Yes3.txtt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"final..txt\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"final132\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"_f4indsartal132.\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\".txt\") !== \"No\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"s.\") !== \"\
    No\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpiofs22nd.php:55\n\
    Stack trace:\n#0 /tmp/tmpiofs22nd.php(79): test()\n#1 {main}\n  thrown in /tmp/tmpiofs22nd.php\
    \ on line 55\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function which takes a string representing a file's\
    \ name, and returns\n// 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n// A file's name is considered to be valid if and only if all the\
    \ following conditions \n// are met:\n// - There should not be more than three\
    \ digits ('0'-'9') in the file's name.\n// - The file's name contains exactly\
    \ one dot '.'\n// - The substring before the dot should not be empty, and it starts\
    \ with a letter from \n// the latin alphapet ('a'-'z' and 'A'-'Z').\n// - The\
    \ substring after the dot should be one of these: ['txt', 'exe', 'dll']\n// Examples:\n\
    // file_name_check(\"example.txt\") # => 'Yes'\n// file_name_check(\"1example.dll\"\
    ) # => 'No' (the name should start with a latin alphapet letter)\nfunction file_name_check($file_name)\
    \ {\n    $file_name_array = explode('.', $file_name);\n    $file_name_array_length\
    \ = count($file_name_array);\n    if ($file_name_array_length != 2) {\n      \
    \  return 'No';\n    }\n    $file_name_array_first_element = $file_name_array[0];\n\
    \    $file_name_array_second_element = $file_name_array[1];\n    if (preg_match('/^[a-zA-Z]+$/',\
    \ $file_name_array_first_element) == 0) {\n        return 'No';\n    }\n    if\
    \ (preg_match('/^[0-9]{1,3}$/', $file_name_array_first_element) == 1) {\n    \
    \    return 'No';\n    }\n    if (preg_match('/^[a-zA-Z]+[0-9]{1,3}$/', $file_name_array_first_element)\
    \ == 1) {\n        return 'No';\n    }\n    if (preg_match('/^[a-zA-Z]+[0-9]{1,3}[a-zA-Z]+$/',\
    \ $file_name_array_first_element) == 1) {\n        return 'No';\n    }\n    if\
    \ (preg_match('/^[a-zA-Z]+[0-9]{1,3}[a-zA-Z]+[0-9]{1,3}$/', $file_name_array_first_element)\
    \ == 1) {\n        return 'No';\n    }\n    if (preg_match('/^[a-zA-Z]+[0-9]{1,3}[a-zA-Z]+[0-9]{1,3}[a-zA-Z]+$/',\
    \ $file_name_array_first_element) == 1) {\n        return 'No';\n    }\n    if\
    \ ($file_name_array_second_element != 'txt' && $file_name_array_second_element\
    \ != 'exe' && $file_name\nfunction candidate(...$args) {\n    return file_name_check(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"example.txt\") !== \"Yes\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"1example.dll\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    s1sdf3.asd\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    K.dll\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    MY16FILE3.exe\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"His12FILE94.exe\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"_Y.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"?aREYA.exe\") !== \"No\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"/this_is_valid.dll\") !==\
    \ \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"this_is_valid.wow\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_valid.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"this_is_valid.txtexe\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#this2_i4s_5valid.ten\") !== \"No\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"@this1_is6_valid.exe\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_12valid.6exe4.txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"all.exe.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"I563_No.exe\") !== \"Yes\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Is3youfault.txt\") !== \"\
    Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"no_one#knows.dll\"\
    ) !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1I563_Yes3.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"I563_Yes3.txtt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"final..txt\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"final132\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"_f4indsartal132.\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\".txt\") !== \"No\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"s.\") !== \"\
    No\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Parse error:  syntax error, unexpected token \"function\" in /tmp/tmpjyldowu6.php\
    \ on line 41\n"
  exit_code: 255
  status: SyntaxError
- program: "<?php\n// Create a function which takes a string representing a file's\
    \ name, and returns\n// 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n// A file's name is considered to be valid if and only if all the\
    \ following conditions \n// are met:\n// - There should not be more than three\
    \ digits ('0'-'9') in the file's name.\n// - The file's name contains exactly\
    \ one dot '.'\n// - The substring before the dot should not be empty, and it starts\
    \ with a letter from \n// the latin alphapet ('a'-'z' and 'A'-'Z').\n// - The\
    \ substring after the dot should be one of these: ['txt', 'exe', 'dll']\n// Examples:\n\
    // file_name_check(\"example.txt\") # => 'Yes'\n// file_name_check(\"1example.dll\"\
    ) # => 'No' (the name should start with a latin alphapet letter)\nfunction file_name_check($file_name)\
    \ {\n    $file_name_array = explode('.', $file_name);\n    if (count($file_name_array)\
    \ != 2) {\n        return 'No';\n    }\n    if (preg_match('/[0-9]{4,}/', $file_name_array[0]))\
    \ {\n        return 'No';\n    }\n    if (!preg_match('/^[a-zA-Z]/', $file_name_array[0]))\
    \ {\n        return 'No';\n    }\n    if (!in_array($file_name_array[1], ['txt',\
    \ 'exe', 'dll'])) {\n        return 'No';\n    }\n    return 'Yes';\n}\n\nfunction\
    \ candidate(...$args) {\n    return file_name_check(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"example.txt\") !== \"Yes\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"1example.dll\") !== \"No\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"s1sdf3.asd\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    K.dll\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    MY16FILE3.exe\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"His12FILE94.exe\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"_Y.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"?aREYA.exe\") !== \"No\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"/this_is_valid.dll\") !==\
    \ \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"this_is_valid.wow\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_valid.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"this_is_valid.txtexe\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#this2_i4s_5valid.ten\") !== \"No\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"@this1_is6_valid.exe\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_12valid.6exe4.txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"all.exe.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"I563_No.exe\") !== \"Yes\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Is3youfault.txt\") !== \"\
    Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"no_one#knows.dll\"\
    ) !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1I563_Yes3.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"I563_Yes3.txtt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"final..txt\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"final132\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"_f4indsartal132.\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\".txt\") !== \"No\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"s.\") !== \"\
    No\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp7kkujqk7.php:41\n\
    Stack trace:\n#0 /tmp/tmp7kkujqk7.php(64): test()\n#1 {main}\n  thrown in /tmp/tmp7kkujqk7.php\
    \ on line 41\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function which takes a string representing a file's\
    \ name, and returns\n// 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n// A file's name is considered to be valid if and only if all the\
    \ following conditions \n// are met:\n// - There should not be more than three\
    \ digits ('0'-'9') in the file's name.\n// - The file's name contains exactly\
    \ one dot '.'\n// - The substring before the dot should not be empty, and it starts\
    \ with a letter from \n// the latin alphapet ('a'-'z' and 'A'-'Z').\n// - The\
    \ substring after the dot should be one of these: ['txt', 'exe', 'dll']\n// Examples:\n\
    // file_name_check(\"example.txt\") # => 'Yes'\n// file_name_check(\"1example.dll\"\
    ) # => 'No' (the name should start with a latin alphapet letter)\nfunction file_name_check($file_name)\
    \ {\n    $file_name_array = explode('.', $file_name);\n    $file_name_array_length\
    \ = count($file_name_array);\n    if ($file_name_array_length != 2) {\n      \
    \  return 'No';\n    }\n    $file_name_array_first = $file_name_array[0];\n  \
    \  $file_name_array_second = $file_name_array[1];\n    $file_name_array_first_length\
    \ = strlen($file_name_array_first);\n    $file_name_array_second_length = strlen($file_name_array_second);\n\
    \    if ($file_name_array_first_length < 1 || $file_name_array_second_length <\
    \ 1) {\n        return 'No';\n    }\n    $file_name_array_first_first_char = $file_name_array_first[0];\n\
    \    if (!(ord($file_name_array_first_first_char) >= 65 && ord($file_name_array_first_first_char)\
    \ <= 90) && !(ord($file_name_array_first_first_char) >= 97 && ord($file_name_array_first_first_char)\
    \ <= 122)) {\n        return 'No';\n    }\n    $file_name_array_second_array =\
    \ ['txt', 'exe', 'dll'];\n    if (!in_array($file_name_array_second, $file_name_array_second_array))\
    \ {\n        return 'No';\n    }\n    $file_name_array_first_array = str_split($file_name_array_first);\n\
    \    $file_name_array_first_array_length = count($file_name_array_first_array);\n\
    \    $file_name_array_first_array_digit_count = 0;\n    for ($i = 0; $i < $file_name_array_first_array_length;\
    \ $i++) {\n        if (ord($file_name_array_first_array[$i]) >= 48 && ord($file_name_array_first_array[$i])\
    \ <= 57) {\n            $file_name_array_first_array\nfunction candidate(...$args)\
    \ {\n    return file_name_check(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(\"example.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"1example.dll\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"s1sdf3.asd\") !== \"No\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"K.dll\") !== \"Yes\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"MY16FILE3.exe\"\
    ) !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    His12FILE94.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(\"_Y.txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"?aREYA.exe\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"/this_is_valid.dll\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"this_is_valid.wow\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_valid.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"this_is_valid.txtexe\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#this2_i4s_5valid.ten\") !== \"No\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"@this1_is6_valid.exe\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_12valid.6exe4.txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"all.exe.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"I563_No.exe\") !== \"Yes\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Is3youfault.txt\") !== \"\
    Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"no_one#knows.dll\"\
    ) !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1I563_Yes3.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"I563_Yes3.txtt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"final..txt\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"final132\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"_f4indsartal132.\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\".txt\") !== \"No\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"s.\") !== \"\
    No\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Parse error:  syntax error, unexpected token \"function\" in /tmp/tmpx_2u7_84.php\
    \ on line 41\n"
  exit_code: 255
  status: SyntaxError
- program: "<?php\n// Create a function which takes a string representing a file's\
    \ name, and returns\n// 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n// A file's name is considered to be valid if and only if all the\
    \ following conditions \n// are met:\n// - There should not be more than three\
    \ digits ('0'-'9') in the file's name.\n// - The file's name contains exactly\
    \ one dot '.'\n// - The substring before the dot should not be empty, and it starts\
    \ with a letter from \n// the latin alphapet ('a'-'z' and 'A'-'Z').\n// - The\
    \ substring after the dot should be one of these: ['txt', 'exe', 'dll']\n// Examples:\n\
    // file_name_check(\"example.txt\") # => 'Yes'\n// file_name_check(\"1example.dll\"\
    ) # => 'No' (the name should start with a latin alphapet letter)\nfunction file_name_check($file_name)\
    \ {\n    $file_name_arr = explode('.', $file_name);\n    $file_name_arr[0] = str_split($file_name_arr[0]);\n\
    \    $file_name_arr[1] = str_split($file_name_arr[1]);\n    $count_digits = 0;\n\
    \    $count_dot = 0;\n    $count_letters = 0;\n    foreach ($file_name_arr[0]\
    \ as $key => $value) {\n        if (is_numeric($value)) {\n            $count_digits++;\n\
    \        }\n        if (ctype_alpha($value)) {\n            $count_letters++;\n\
    \        }\n    }\n    foreach ($file_name_arr[1] as $key => $value) {\n     \
    \   if ($value == '.') {\n            $count_dot++;\n        }\n    }\n    if\
    \ ($count_digits > 3 || $count_dot != 1 || $count_letters == 0 || !in_array($file_name_arr[1],\
    \ ['txt', 'exe', 'dll'])) {\n        return 'No';\n    }\n    return 'Yes';\n\
    }\n\nfunction candidate(...$args) {\n    return file_name_check(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(\"example.txt\") !== \"Yes\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"1example.dll\") !==\
    \ \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"s1sdf3.asd\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    K.dll\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    MY16FILE3.exe\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"His12FILE94.exe\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"_Y.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"?aREYA.exe\") !== \"No\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"/this_is_valid.dll\") !==\
    \ \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"this_is_valid.wow\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_valid.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"this_is_valid.txtexe\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#this2_i4s_5valid.ten\") !== \"No\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"@this1_is6_valid.exe\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_12valid.6exe4.txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"all.exe.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"I563_No.exe\") !== \"Yes\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Is3youfault.txt\") !== \"\
    Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"no_one#knows.dll\"\
    ) !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1I563_Yes3.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"I563_Yes3.txtt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"final..txt\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"final132\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"_f4indsartal132.\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\".txt\") !== \"No\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"s.\") !== \"\
    No\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp7c7r6cq9.php:45\n\
    Stack trace:\n#0 /tmp/tmp7c7r6cq9.php(73): test()\n#1 {main}\n  thrown in /tmp/tmp7c7r6cq9.php\
    \ on line 45\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function which takes a string representing a file's\
    \ name, and returns\n// 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n// A file's name is considered to be valid if and only if all the\
    \ following conditions \n// are met:\n// - There should not be more than three\
    \ digits ('0'-'9') in the file's name.\n// - The file's name contains exactly\
    \ one dot '.'\n// - The substring before the dot should not be empty, and it starts\
    \ with a letter from \n// the latin alphapet ('a'-'z' and 'A'-'Z').\n// - The\
    \ substring after the dot should be one of these: ['txt', 'exe', 'dll']\n// Examples:\n\
    // file_name_check(\"example.txt\") # => 'Yes'\n// file_name_check(\"1example.dll\"\
    ) # => 'No' (the name should start with a latin alphapet letter)\nfunction file_name_check($file_name)\
    \ {\n    $file_name_array = explode('.', $file_name);\n    $file_name_array_count\
    \ = count($file_name_array);\n    if ($file_name_array_count != 2) {\n       \
    \ return 'No';\n    }\n    if (!preg_match('/^[a-zA-Z]/', $file_name_array[0]))\
    \ {\n        return 'No';\n    }\n    if (!preg_match('/^[a-zA-Z]/', $file_name_array[1]))\
    \ {\n        return 'No';\n    }\n    if (!preg_match('/^[a-zA-Z]/', $file_name_array[0]))\
    \ {\n        return 'No';\n    }\n    if (!preg_match('/^[a-zA-Z]/', $file_name_array[1]))\
    \ {\n        return 'No';\n    }\n    if (!preg_match('/^[a-zA-Z]/', $file_name_array[0]))\
    \ {\n        return 'No';\n    }\n    if (!preg_match('/^[a-zA-Z]/', $file_name_array[1]))\
    \ {\n        return 'No';\n    }\n    if (!preg_match('/^[a-zA-Z]/', $file_name_array[0]))\
    \ {\n        return 'No';\n    }\n    if (!preg_match('/^[a-zA-Z]/', $file_name_array[1]))\
    \ {\n        return 'No';\n    }\n    if (!preg_match('/^[a-zA-Z]/', $file_name_array[0]))\
    \ {\n        return 'No';\n    }\n    if (!preg_match('/^[a-zA-Z]/', $file_name_array[1]))\
    \ {\n        return 'No';\n    }\n    if (!preg_match('/^[a-zA-Z]/', $file_name_array[0]))\
    \ {\n        return 'No';\n    }\nfunction candidate(...$args) {\n    return file_name_check(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"example.txt\") !== \"Yes\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"1example.dll\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    s1sdf3.asd\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    K.dll\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    MY16FILE3.exe\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"His12FILE94.exe\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"_Y.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"?aREYA.exe\") !== \"No\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"/this_is_valid.dll\") !==\
    \ \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"this_is_valid.wow\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_valid.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"this_is_valid.txtexe\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#this2_i4s_5valid.ten\") !== \"No\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"@this1_is6_valid.exe\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_12valid.6exe4.txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"all.exe.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"I563_No.exe\") !== \"Yes\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Is3youfault.txt\") !== \"\
    Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"no_one#knows.dll\"\
    ) !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1I563_Yes3.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"I563_Yes3.txtt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"final..txt\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"final132\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"_f4indsartal132.\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\".txt\") !== \"No\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"s.\") !== \"\
    No\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Parse error:  Unclosed '{' on line 14 in /tmp/tmp1smvbff2.php on line\
    \ 86\n"
  exit_code: 255
  status: SyntaxError
- program: "<?php\n// Create a function which takes a string representing a file's\
    \ name, and returns\n// 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n// A file's name is considered to be valid if and only if all the\
    \ following conditions \n// are met:\n// - There should not be more than three\
    \ digits ('0'-'9') in the file's name.\n// - The file's name contains exactly\
    \ one dot '.'\n// - The substring before the dot should not be empty, and it starts\
    \ with a letter from \n// the latin alphapet ('a'-'z' and 'A'-'Z').\n// - The\
    \ substring after the dot should be one of these: ['txt', 'exe', 'dll']\n// Examples:\n\
    // file_name_check(\"example.txt\") # => 'Yes'\n// file_name_check(\"1example.dll\"\
    ) # => 'No' (the name should start with a latin alphapet letter)\nfunction file_name_check($file_name)\
    \ {\n    $file_name_array = explode('.', $file_name);\n    $file_name_array_count\
    \ = count($file_name_array);\n    $file_name_array_count_digit = 0;\n    $file_name_array_count_letter\
    \ = 0;\n    $file_name_array_count_dot = 0;\n    $file_name_array_count_extension\
    \ = 0;\n    $file_name_array_count_extension_txt = 0;\n    $file_name_array_count_extension_exe\
    \ = 0;\n    $file_name_array_count_extension_dll = 0;\n    $file_name_array_count_extension_other\
    \ = 0;\n    $file_name_array_count_extension_txt_exe_dll = 0;\n    $file_name_array_count_extension_txt_exe_dll_other\
    \ = 0;\n    $file_name_array_count_extension_txt_exe_dll_other_dot = 0;\n    $file_name_array_count_extension_txt_exe_dll_other_dot_letter\
    \ = 0;\n    $file_name_array_count_extension_txt_exe_dll_other_dot_letter_digit\
    \ = 0;\n    $file_name_array_count_extension_txt_exe_dll_other_dot_letter_digit_digit\
    \ = 0;\n    $file_name_array_count_extension_txt_exe_dll_other_dot_letter_digit_digit_digit\
    \ = 0;\n    $file_name_array_count_extension_txt_exe_dll_other_dot_letter_digit_digit_digit_digit\
    \ = 0;\n    $file_name_array_count_extension_txt_exe_dll_other_dot_letter_digit_digit_digit_digit_digit\
    \ = 0;\n    $file_name_array_count_extension_txt_exe_dll_other_dot_letter_digit_digit_digit_digit_digit_digit\
    \ = 0;\n    $file_name_array_count_extension_txt_exe_dll_other_dot_letter_digit_digit_digit_\n\
    function candidate(...$args) {\n    return file_name_check(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"example.txt\") !== \"Yes\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"1example.dll\") !== \"No\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"s1sdf3.asd\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    K.dll\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    MY16FILE3.exe\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"His12FILE94.exe\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"_Y.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"?aREYA.exe\") !== \"No\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"/this_is_valid.dll\") !==\
    \ \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"this_is_valid.wow\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_valid.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"this_is_valid.txtexe\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#this2_i4s_5valid.ten\") !== \"No\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"@this1_is6_valid.exe\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_12valid.6exe4.txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"all.exe.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"I563_No.exe\") !== \"Yes\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Is3youfault.txt\") !== \"\
    Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"no_one#knows.dll\"\
    ) !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1I563_Yes3.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"I563_Yes3.txtt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"final..txt\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"final132\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"_f4indsartal132.\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\".txt\") !== \"No\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"s.\") !== \"\
    No\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Parse error:  syntax error, unexpected token \"function\" in /tmp/tmpif1j266u.php\
    \ on line 36\n"
  exit_code: 255
  status: SyntaxError
- program: "<?php\n// Create a function which takes a string representing a file's\
    \ name, and returns\n// 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n// A file's name is considered to be valid if and only if all the\
    \ following conditions \n// are met:\n// - There should not be more than three\
    \ digits ('0'-'9') in the file's name.\n// - The file's name contains exactly\
    \ one dot '.'\n// - The substring before the dot should not be empty, and it starts\
    \ with a letter from \n// the latin alphapet ('a'-'z' and 'A'-'Z').\n// - The\
    \ substring after the dot should be one of these: ['txt', 'exe', 'dll']\n// Examples:\n\
    // file_name_check(\"example.txt\") # => 'Yes'\n// file_name_check(\"1example.dll\"\
    ) # => 'No' (the name should start with a latin alphapet letter)\nfunction file_name_check($file_name)\
    \ {\n    $file_name_array = explode('.', $file_name);\n    $file_name_array_length\
    \ = count($file_name_array);\n    $file_name_array_first_element = $file_name_array[0];\n\
    \    $file_name_array_first_element_length = strlen($file_name_array_first_element);\n\
    \    $file_name_array_last_element = $file_name_array[$file_name_array_length\
    \ - 1];\n    $file_name_array_last_element_length = strlen($file_name_array_last_element);\n\
    \    $file_name_array_first_element_digit_count = 0;\n    $file_name_array_last_element_digit_count\
    \ = 0;\n    $file_name_array_first_element_letter_count = 0;\n    $file_name_array_last_element_letter_count\
    \ = 0;\n    $file_name_array_first_element_letter_count_array = [];\n    $file_name_array_last_element_letter_count_array\
    \ = [];\n    $file_name_array_first_element_digit_count_array = [];\n    $file_name_array_last_element_digit_count_array\
    \ = [];\n    $file_name_array_first_element_letter_count_array_length = 0;\n \
    \   $file_name_array_last_element_letter_count_array_length = 0;\n    $file_name_array_first_element_digit_count_array_length\
    \ = 0;\n    $file_name_array_last_element_digit_count_array_length = 0;\n    $file_name_array_first_element_letter_count_array_first_element\
    \ = '';\n    $file_name_array_last_element_letter_count_array_first_element =\
    \ '';\n    $file_name_array_first_element_digit_count_array_first_element = '';\n\
    \    $file_name_array_last_element_digit_count_array_first_element = '';\n   \
    \ $file_name_array_first_element_letter_count_array\nfunction candidate(...$args)\
    \ {\n    return file_name_check(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(\"example.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"1example.dll\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"s1sdf3.asd\") !== \"No\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"K.dll\") !== \"Yes\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"MY16FILE3.exe\"\
    ) !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    His12FILE94.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(\"_Y.txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"?aREYA.exe\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"/this_is_valid.dll\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"this_is_valid.wow\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_valid.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"this_is_valid.txtexe\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#this2_i4s_5valid.ten\") !== \"No\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"@this1_is6_valid.exe\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_12valid.6exe4.txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"all.exe.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"I563_No.exe\") !== \"Yes\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Is3youfault.txt\") !== \"\
    Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"no_one#knows.dll\"\
    ) !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1I563_Yes3.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"I563_Yes3.txtt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"final..txt\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"final132\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"_f4indsartal132.\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\".txt\") !== \"No\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"s.\") !== \"\
    No\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Parse error:  syntax error, unexpected token \"function\" in /tmp/tmp667r2d8v.php\
    \ on line 38\n"
  exit_code: 255
  status: SyntaxError
- program: "<?php\n// Create a function which takes a string representing a file's\
    \ name, and returns\n// 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n// A file's name is considered to be valid if and only if all the\
    \ following conditions \n// are met:\n// - There should not be more than three\
    \ digits ('0'-'9') in the file's name.\n// - The file's name contains exactly\
    \ one dot '.'\n// - The substring before the dot should not be empty, and it starts\
    \ with a letter from \n// the latin alphapet ('a'-'z' and 'A'-'Z').\n// - The\
    \ substring after the dot should be one of these: ['txt', 'exe', 'dll']\n// Examples:\n\
    // file_name_check(\"example.txt\") # => 'Yes'\n// file_name_check(\"1example.dll\"\
    ) # => 'No' (the name should start with a latin alphapet letter)\nfunction file_name_check($file_name)\
    \ {\n    $file_name_array = explode('.', $file_name);\n    if (count($file_name_array)\
    \ != 2) {\n        return 'No';\n    }\n    if (preg_match('/[0-9]{4,}/', $file_name_array[0]))\
    \ {\n        return 'No';\n    }\n    if (!preg_match('/^[a-zA-Z]/', $file_name_array[0]))\
    \ {\n        return 'No';\n    }\n    if (!in_array($file_name_array[1], ['txt',\
    \ 'exe', 'dll'])) {\n        return 'No';\n    }\n    return 'Yes';\n}\n\nfunction\
    \ candidate(...$args) {\n    return file_name_check(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"example.txt\") !== \"Yes\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"1example.dll\") !== \"No\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"s1sdf3.asd\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    K.dll\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    MY16FILE3.exe\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"His12FILE94.exe\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"_Y.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"?aREYA.exe\") !== \"No\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"/this_is_valid.dll\") !==\
    \ \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"this_is_valid.wow\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_valid.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"this_is_valid.txtexe\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#this2_i4s_5valid.ten\") !== \"No\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"@this1_is6_valid.exe\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_12valid.6exe4.txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"all.exe.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"I563_No.exe\") !== \"Yes\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Is3youfault.txt\") !== \"\
    Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"no_one#knows.dll\"\
    ) !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1I563_Yes3.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"I563_Yes3.txtt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"final..txt\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"final132\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"_f4indsartal132.\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\".txt\") !== \"No\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"s.\") !== \"\
    No\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpuz54fq3l.php:41\n\
    Stack trace:\n#0 /tmp/tmpuz54fq3l.php(64): test()\n#1 {main}\n  thrown in /tmp/tmpuz54fq3l.php\
    \ on line 41\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function which takes a string representing a file's\
    \ name, and returns\n// 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n// A file's name is considered to be valid if and only if all the\
    \ following conditions \n// are met:\n// - There should not be more than three\
    \ digits ('0'-'9') in the file's name.\n// - The file's name contains exactly\
    \ one dot '.'\n// - The substring before the dot should not be empty, and it starts\
    \ with a letter from \n// the latin alphapet ('a'-'z' and 'A'-'Z').\n// - The\
    \ substring after the dot should be one of these: ['txt', 'exe', 'dll']\n// Examples:\n\
    // file_name_check(\"example.txt\") # => 'Yes'\n// file_name_check(\"1example.dll\"\
    ) # => 'No' (the name should start with a latin alphapet letter)\nfunction file_name_check($file_name)\
    \ {\n    $file_name_array = explode('.', $file_name);\n    $file_name_array_count\
    \ = count($file_name_array);\n    if ($file_name_array_count != 2) {\n       \
    \ return 'No';\n    }\n    $file_name_array_first = $file_name_array[0];\n   \
    \ $file_name_array_last = $file_name_array[1];\n    $file_name_array_first_count\
    \ = strlen($file_name_array_first);\n    $file_name_array_last_count = strlen($file_name_array_last);\n\
    \    if ($file_name_array_first_count == 0 || $file_name_array_last_count == 0)\
    \ {\n        return 'No';\n    }\n    $file_name_array_first_first_char = $file_name_array_first[0];\n\
    \    if (!(($file_name_array_first_first_char >= 'a' && $file_name_array_first_first_char\
    \ <= 'z') || ($file_name_array_first_first_char >= 'A' && $file_name_array_first_first_char\
    \ <= 'Z'))) {\n        return 'No';\n    }\n    $file_name_array_last_count_digit\
    \ = 0;\n    for ($i = 0; $i < $file_name_array_last_count; $i++) {\n        $file_name_array_last_char\
    \ = $file_name_array_last[$i];\n        if ($file_name_array_last_char >= '0'\
    \ && $file_name_array_last_char <= '9') {\n            $file_name_array_last_count_digit++;\n\
    \        }\n    }\n    if ($file_name_array_last_count_digit > 3) {\n        return\
    \ 'No';\n    }\n    if ($file_name_array_last != 'txt' && $file_name_array_last\
    \ != 'exe' && $file_name_array_last != 'dll') {\n        return 'No';\n    }\n\
    \    return 'Yes';\n}\necho file_name_\nfunction candidate(...$args) {\n    return\
    \ file_name_check(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    example.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"1example.dll\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"s1sdf3.asd\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"K.dll\") !== \"Yes\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"MY16FILE3.exe\") !== \"Yes\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"His12FILE94.exe\") !==\
    \ \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"_Y.txt\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ?aREYA.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    /this_is_valid.dll\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"this_is_valid.wow\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"this_is_valid.txt\") !== \"Yes\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"this_is_valid.txtexe\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #this2_i4s_5valid.ten\") !== \"No\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"@this1_is6_valid.exe\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"this_is_12valid.6exe4.txt\") !== \"No\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"all.exe.txt\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    I563_No.exe\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"Is3youfault.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"no_one#knows.dll\") !== \"Yes\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"1I563_Yes3.exe\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"I563_Yes3.txtt\") !==\
    \ \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"final..txt\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    final132\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    _f4indsartal132.\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\".txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"s.\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Parse error:  syntax error, unexpected token \"function\", expecting\
    \ \",\" or \";\" in /tmp/tmpx3es5c70.php on line 47\n"
  exit_code: 255
  status: SyntaxError
- program: "<?php\n// Create a function which takes a string representing a file's\
    \ name, and returns\n// 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n// A file's name is considered to be valid if and only if all the\
    \ following conditions \n// are met:\n// - There should not be more than three\
    \ digits ('0'-'9') in the file's name.\n// - The file's name contains exactly\
    \ one dot '.'\n// - The substring before the dot should not be empty, and it starts\
    \ with a letter from \n// the latin alphapet ('a'-'z' and 'A'-'Z').\n// - The\
    \ substring after the dot should be one of these: ['txt', 'exe', 'dll']\n// Examples:\n\
    // file_name_check(\"example.txt\") # => 'Yes'\n// file_name_check(\"1example.dll\"\
    ) # => 'No' (the name should start with a latin alphapet letter)\nfunction file_name_check($file_name)\
    \ {\n    $file_name_array = explode('.', $file_name);\n    $file_name_array_count\
    \ = count($file_name_array);\n    $file_name_array_first = $file_name_array[0];\n\
    \    $file_name_array_last = $file_name_array[$file_name_array_count - 1];\n \
    \   $file_name_array_first_count = strlen($file_name_array_first);\n    $file_name_array_last_count\
    \ = strlen($file_name_array_last);\n    $file_name_array_first_first_char = $file_name_array_first[0];\n\
    \    $file_name_array_first_first_char_ascii = ord($file_name_array_first_first_char);\n\
    \    $file_name_array_first_first_char_ascii_lower = $file_name_array_first_first_char_ascii\
    \ >= 97 && $file_name_array_first_first_char_ascii <= 122;\n    $file_name_array_first_first_char_ascii_upper\
    \ = $file_name_array_first_first_char_ascii >= 65 && $file_name_array_first_first_char_ascii\
    \ <= 90;\n    $file_name_array_first_first_char_ascii_valid = $file_name_array_first_first_char_ascii_lower\
    \ || $file_name_array_first_first_char_ascii_upper;\n    $file_name_array_first_digit_count\
    \ = 0;\n    for ($i = 0; $i < $file_name_array_first_count; $i++) {\n        $file_name_array_first_char\
    \ = $file_name_array_first[$i];\n        $file_name_array_first_char_ascii = ord($file_name_array_first_char);\n\
    \        $file_name_array_first_char_ascii_valid = $file_name_array_first_char_ascii\
    \ >= 48 && $file_name_array_first_\nfunction candidate(...$args) {\n    return\
    \ file_name_check(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    example.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"1example.dll\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"s1sdf3.asd\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"K.dll\") !== \"Yes\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"MY16FILE3.exe\") !== \"Yes\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"His12FILE94.exe\") !==\
    \ \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"_Y.txt\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ?aREYA.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    /this_is_valid.dll\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"this_is_valid.wow\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"this_is_valid.txt\") !== \"Yes\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"this_is_valid.txtexe\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #this2_i4s_5valid.ten\") !== \"No\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"@this1_is6_valid.exe\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"this_is_12valid.6exe4.txt\") !== \"No\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"all.exe.txt\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    I563_No.exe\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"Is3youfault.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"no_one#knows.dll\") !== \"Yes\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"1I563_Yes3.exe\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"I563_Yes3.txtt\") !==\
    \ \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"final..txt\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    final132\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    _f4indsartal132.\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\".txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"s.\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Parse error:  syntax error, unexpected token \"function\" in /tmp/tmp00t44eng.php\
    \ on line 31\n"
  exit_code: 255
  status: SyntaxError
- program: "<?php\n// Create a function which takes a string representing a file's\
    \ name, and returns\n// 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n// A file's name is considered to be valid if and only if all the\
    \ following conditions \n// are met:\n// - There should not be more than three\
    \ digits ('0'-'9') in the file's name.\n// - The file's name contains exactly\
    \ one dot '.'\n// - The substring before the dot should not be empty, and it starts\
    \ with a letter from \n// the latin alphapet ('a'-'z' and 'A'-'Z').\n// - The\
    \ substring after the dot should be one of these: ['txt', 'exe', 'dll']\n// Examples:\n\
    // file_name_check(\"example.txt\") # => 'Yes'\n// file_name_check(\"1example.dll\"\
    ) # => 'No' (the name should start with a latin alphapet letter)\nfunction file_name_check($file_name)\
    \ {\n    $file_name_array = explode('.', $file_name);\n    $file_name_array[0]\
    \ = preg_replace('/[0-9]/', '', $file_name_array[0]);\n    if (count($file_name_array)\
    \ != 2 || strlen($file_name_array[0]) == 0 || preg_match('/[0-9]/', $file_name_array[0])\
    \ || !in_array($file_name_array[1], ['txt', 'exe', 'dll'])) {\n        return\
    \ 'No';\n    }\n    return 'Yes';\n}\n\nfunction candidate(...$args) {\n    return\
    \ file_name_check(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    example.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"1example.dll\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"s1sdf3.asd\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"K.dll\") !== \"Yes\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"MY16FILE3.exe\") !== \"Yes\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"His12FILE94.exe\") !==\
    \ \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"_Y.txt\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ?aREYA.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    /this_is_valid.dll\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"this_is_valid.wow\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"this_is_valid.txt\") !== \"Yes\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"this_is_valid.txtexe\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #this2_i4s_5valid.ten\") !== \"No\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"@this1_is6_valid.exe\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"this_is_12valid.6exe4.txt\") !== \"No\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"all.exe.txt\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    I563_No.exe\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"Is3youfault.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"no_one#knows.dll\") !== \"Yes\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"1I563_Yes3.exe\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"I563_Yes3.txtt\") !==\
    \ \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"final..txt\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    final132\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    _f4indsartal132.\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\".txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"s.\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpbgfybfkh.php:29\n\
    Stack trace:\n#0 /tmp/tmpbgfybfkh.php(56): test()\n#1 {main}\n  thrown in /tmp/tmpbgfybfkh.php\
    \ on line 29\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function which takes a string representing a file's\
    \ name, and returns\n// 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n// A file's name is considered to be valid if and only if all the\
    \ following conditions \n// are met:\n// - There should not be more than three\
    \ digits ('0'-'9') in the file's name.\n// - The file's name contains exactly\
    \ one dot '.'\n// - The substring before the dot should not be empty, and it starts\
    \ with a letter from \n// the latin alphapet ('a'-'z' and 'A'-'Z').\n// - The\
    \ substring after the dot should be one of these: ['txt', 'exe', 'dll']\n// Examples:\n\
    // file_name_check(\"example.txt\") # => 'Yes'\n// file_name_check(\"1example.dll\"\
    ) # => 'No' (the name should start with a latin alphapet letter)\nfunction file_name_check($file_name)\
    \ {\n    $file_name_arr = explode('.', $file_name);\n    $file_name_arr_length\
    \ = count($file_name_arr);\n    if ($file_name_arr_length != 2) {\n        return\
    \ 'No';\n    }\n    if (!preg_match('/^[a-zA-Z]/', $file_name_arr[0])) {\n   \
    \     return 'No';\n    }\n    if (preg_match('/[0-9]{4}/', $file_name_arr[0]))\
    \ {\n        return 'No';\n    }\n    if (!in_array($file_name_arr[1], ['txt',\
    \ 'exe', 'dll'])) {\n        return 'No';\n    }\n    return 'Yes';\n}\n\nfunction\
    \ candidate(...$args) {\n    return file_name_check(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"example.txt\") !== \"Yes\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"1example.dll\") !== \"No\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"s1sdf3.asd\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    K.dll\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    MY16FILE3.exe\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"His12FILE94.exe\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"_Y.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"?aREYA.exe\") !== \"No\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"/this_is_valid.dll\") !==\
    \ \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"this_is_valid.wow\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_valid.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"this_is_valid.txtexe\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#this2_i4s_5valid.ten\") !== \"No\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"@this1_is6_valid.exe\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_12valid.6exe4.txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"all.exe.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"I563_No.exe\") !== \"Yes\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Is3youfault.txt\") !== \"\
    Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"no_one#knows.dll\"\
    ) !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1I563_Yes3.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"I563_Yes3.txtt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"final..txt\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"final132\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"_f4indsartal132.\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\".txt\") !== \"No\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"s.\") !== \"\
    No\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpvv5ku9mf.php:42\n\
    Stack trace:\n#0 /tmp/tmpvv5ku9mf.php(65): test()\n#1 {main}\n  thrown in /tmp/tmpvv5ku9mf.php\
    \ on line 42\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function which takes a string representing a file's\
    \ name, and returns\n// 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n// A file's name is considered to be valid if and only if all the\
    \ following conditions \n// are met:\n// - There should not be more than three\
    \ digits ('0'-'9') in the file's name.\n// - The file's name contains exactly\
    \ one dot '.'\n// - The substring before the dot should not be empty, and it starts\
    \ with a letter from \n// the latin alphapet ('a'-'z' and 'A'-'Z').\n// - The\
    \ substring after the dot should be one of these: ['txt', 'exe', 'dll']\n// Examples:\n\
    // file_name_check(\"example.txt\") # => 'Yes'\n// file_name_check(\"1example.dll\"\
    ) # => 'No' (the name should start with a latin alphapet letter)\nfunction file_name_check($file_name)\
    \ {\n    $file_name_array = explode('.', $file_name);\n    $file_name_array_count\
    \ = count($file_name_array);\n    $file_name_array_count_before_dot = strlen($file_name_array[0]);\n\
    \    $file_name_array_count_after_dot = strlen($file_name_array[1]);\n    $file_name_array_count_number\
    \ = 0;\n    $file_name_array_count_letter = 0;\n    $file_name_array_count_dot\
    \ = 0;\n    $file_name_array_count_txt = 0;\n    $file_name_array_count_exe =\
    \ 0;\n    $file_name_array_count_dll = 0;\n    $file_name_array_count_txt_exe_dll\
    \ = 0;\n    $file_name_array_count_txt_exe_dll_array = ['txt', 'exe', 'dll'];\n\
    \    $file_name_array_count_txt_exe_dll_array_count = count($file_name_array_count_txt_exe_dll_array);\n\
    \    $file_name_array_count_txt_exe_dll_array_count_number = 0;\n    $file_name_array_count_txt_exe_dll_array_count_letter\
    \ = 0;\n    $file_name_array_count_txt_exe_dll_array_count_dot = 0;\n    $file_name_array_count_txt_exe_dll_array_count_txt\
    \ = 0;\n    $file_name_array_count_txt_exe_dll_array_count_exe = 0;\n    $file_name_array_count_txt_exe_dll_array_count_dll\
    \ = 0;\n    $file_name_array_count_txt_exe_dll_array_count_txt_exe_dll = 0;\n\
    \    $file_name_array_count_txt_exe_dll_array_count_txt_exe_dll_array = ['txt',\
    \ 'exe', 'dll'];\n    $file_name_array_count_txt_exe_dll_array_count_txt_exe_dll_array\n\
    function candidate(...$args) {\n    return file_name_check(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"example.txt\") !== \"Yes\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"1example.dll\") !== \"No\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"s1sdf3.asd\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    K.dll\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    MY16FILE3.exe\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"His12FILE94.exe\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"_Y.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"?aREYA.exe\") !== \"No\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"/this_is_valid.dll\") !==\
    \ \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"this_is_valid.wow\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_valid.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"this_is_valid.txtexe\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#this2_i4s_5valid.ten\") !== \"No\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"@this1_is6_valid.exe\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_12valid.6exe4.txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"all.exe.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"I563_No.exe\") !== \"Yes\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Is3youfault.txt\") !== \"\
    Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"no_one#knows.dll\"\
    ) !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1I563_Yes3.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"I563_Yes3.txtt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"final..txt\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"final132\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"_f4indsartal132.\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\".txt\") !== \"No\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"s.\") !== \"\
    No\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Parse error:  syntax error, unexpected token \"function\" in /tmp/tmpbw0zpqy4.php\
    \ on line 37\n"
  exit_code: 255
  status: SyntaxError
- program: "<?php\n// Create a function which takes a string representing a file's\
    \ name, and returns\n// 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n// A file's name is considered to be valid if and only if all the\
    \ following conditions \n// are met:\n// - There should not be more than three\
    \ digits ('0'-'9') in the file's name.\n// - The file's name contains exactly\
    \ one dot '.'\n// - The substring before the dot should not be empty, and it starts\
    \ with a letter from \n// the latin alphapet ('a'-'z' and 'A'-'Z').\n// - The\
    \ substring after the dot should be one of these: ['txt', 'exe', 'dll']\n// Examples:\n\
    // file_name_check(\"example.txt\") # => 'Yes'\n// file_name_check(\"1example.dll\"\
    ) # => 'No' (the name should start with a latin alphapet letter)\nfunction file_name_check($file_name)\
    \ {\n    // Write your code here\n    // To print results to the standard output\
    \ you can use print\n    // Example: print \"Hello world!\";\n    $file_name_array\
    \ = explode(\".\", $file_name);\n    $file_name_array_length = count($file_name_array);\n\
    \    if ($file_name_array_length != 2) {\n        return \"No\";\n    }\n    $file_name_array_first\
    \ = $file_name_array[0];\n    $file_name_array_second = $file_name_array[1];\n\
    \    if (preg_match(\"/^[a-zA-Z]/\", $file_name_array_first) == 0) {\n       \
    \ return \"No\";\n    }\n    if (preg_match(\"/[0-9]{4,}/\", $file_name_array_first)\
    \ == 1) {\n        return \"No\";\n    }\n    if ($file_name_array_second != \"\
    txt\" && $file_name_array_second != \"exe\" && $file_name_array_second != \"dll\"\
    ) {\n        return \"No\";\n    }\n    return \"Yes\";\n}\n\nfunction candidate(...$args)\
    \ {\n    return file_name_check(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(\"example.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"1example.dll\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"s1sdf3.asd\") !== \"No\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"K.dll\") !== \"Yes\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"MY16FILE3.exe\"\
    ) !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    His12FILE94.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(\"_Y.txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"?aREYA.exe\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"/this_is_valid.dll\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"this_is_valid.wow\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_valid.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"this_is_valid.txtexe\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#this2_i4s_5valid.ten\") !== \"No\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"@this1_is6_valid.exe\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_12valid.6exe4.txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"all.exe.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"I563_No.exe\") !== \"Yes\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Is3youfault.txt\") !== \"\
    Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"no_one#knows.dll\"\
    ) !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1I563_Yes3.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"I563_Yes3.txtt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"final..txt\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"final132\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"_f4indsartal132.\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\".txt\") !== \"No\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"s.\") !== \"\
    No\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpqsayotlf.php:47\n\
    Stack trace:\n#0 /tmp/tmpqsayotlf.php(70): test()\n#1 {main}\n  thrown in /tmp/tmpqsayotlf.php\
    \ on line 47\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function which takes a string representing a file's\
    \ name, and returns\n// 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n// A file's name is considered to be valid if and only if all the\
    \ following conditions \n// are met:\n// - There should not be more than three\
    \ digits ('0'-'9') in the file's name.\n// - The file's name contains exactly\
    \ one dot '.'\n// - The substring before the dot should not be empty, and it starts\
    \ with a letter from \n// the latin alphapet ('a'-'z' and 'A'-'Z').\n// - The\
    \ substring after the dot should be one of these: ['txt', 'exe', 'dll']\n// Examples:\n\
    // file_name_check(\"example.txt\") # => 'Yes'\n// file_name_check(\"1example.dll\"\
    ) # => 'No' (the name should start with a latin alphapet letter)\nfunction file_name_check($file_name)\
    \ {\n    $file_name_array = explode('.', $file_name);\n    $file_name_array[0]\
    \ = str_split($file_name_array[0]);\n    $file_name_array[1] = str_split($file_name_array[1]);\n\
    \    $count = 0;\n    foreach ($file_name_array[0] as $char) {\n        if (ctype_digit($char))\
    \ {\n            $count++;\n        }\n    }\n    if ($count > 3) {\n        return\
    \ 'No';\n    }\n    if (!ctype_alpha($file_name_array[0][0])) {\n        return\
    \ 'No';\n    }\n    if ($file_name_array[1][0] != 't' || $file_name_array[1][1]\
    \ != 'x' || $file_name_array[1][2] != 't') {\n        if ($file_name_array[1][0]\
    \ != 'e' || $file_name_array[1][1] != 'x' || $file_name_array[1][2] != 'e') {\n\
    \            if ($file_name_array[1][0] != 'd' || $file_name_array[1][1] != 'l'\
    \ || $file_name_array[1][2] != 'l') {\n                return 'No';\n        \
    \    }\n        }\n    }\n    return 'Yes';\n}\n\nfunction candidate(...$args)\
    \ {\n    return file_name_check(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(\"example.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"1example.dll\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"s1sdf3.asd\") !== \"No\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"K.dll\") !== \"Yes\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"MY16FILE3.exe\"\
    ) !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    His12FILE94.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(\"_Y.txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"?aREYA.exe\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"/this_is_valid.dll\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"this_is_valid.wow\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_valid.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"this_is_valid.txtexe\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#this2_i4s_5valid.ten\") !== \"No\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"@this1_is6_valid.exe\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_12valid.6exe4.txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"all.exe.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"I563_No.exe\") !== \"Yes\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Is3youfault.txt\") !== \"\
    Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"no_one#knows.dll\"\
    ) !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1I563_Yes3.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"I563_Yes3.txtt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"final..txt\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"final132\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"_f4indsartal132.\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\".txt\") !== \"No\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"s.\") !== \"\
    No\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp6r43tnyq.php:56\n\
    Stack trace:\n#0 /tmp/tmp6r43tnyq.php(73): test()\n#1 {main}\n  thrown in /tmp/tmp6r43tnyq.php\
    \ on line 56\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function which takes a string representing a file's\
    \ name, and returns\n// 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n// A file's name is considered to be valid if and only if all the\
    \ following conditions \n// are met:\n// - There should not be more than three\
    \ digits ('0'-'9') in the file's name.\n// - The file's name contains exactly\
    \ one dot '.'\n// - The substring before the dot should not be empty, and it starts\
    \ with a letter from \n// the latin alphapet ('a'-'z' and 'A'-'Z').\n// - The\
    \ substring after the dot should be one of these: ['txt', 'exe', 'dll']\n// Examples:\n\
    // file_name_check(\"example.txt\") # => 'Yes'\n// file_name_check(\"1example.dll\"\
    ) # => 'No' (the name should start with a latin alphapet letter)\nfunction file_name_check($file_name)\
    \ {\n    $file_name_array = explode('.', $file_name);\n    if (count($file_name_array)\
    \ != 2) {\n        return 'No';\n    }\n    $file_name_array[0] = preg_replace('/[0-9]/',\
    \ '', $file_name_array[0]);\n    if (strlen($file_name_array[0]) == 0 || !preg_match('/[a-zA-Z]/',\
    \ $file_name_array[0])) {\n        return 'No';\n    }\n    if (!in_array($file_name_array[1],\
    \ ['txt', 'exe', 'dll'])) {\n        return 'No';\n    }\n    return 'Yes';\n\
    }\n\nfunction candidate(...$args) {\n    return file_name_check(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(\"example.txt\") !== \"Yes\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"1example.dll\") !==\
    \ \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"s1sdf3.asd\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    K.dll\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    MY16FILE3.exe\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"His12FILE94.exe\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"_Y.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"?aREYA.exe\") !== \"No\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"/this_is_valid.dll\") !==\
    \ \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"this_is_valid.wow\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_valid.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"this_is_valid.txtexe\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#this2_i4s_5valid.ten\") !== \"No\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"@this1_is6_valid.exe\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_12valid.6exe4.txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"all.exe.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"I563_No.exe\") !== \"Yes\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Is3youfault.txt\") !== \"\
    Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"no_one#knows.dll\"\
    ) !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1I563_Yes3.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"I563_Yes3.txtt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"final..txt\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"final132\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"_f4indsartal132.\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\".txt\") !== \"No\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"s.\") !== \"\
    No\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmprmmykxv5.php:35\n\
    Stack trace:\n#0 /tmp/tmprmmykxv5.php(62): test()\n#1 {main}\n  thrown in /tmp/tmprmmykxv5.php\
    \ on line 35\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function which takes a string representing a file's\
    \ name, and returns\n// 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n// A file's name is considered to be valid if and only if all the\
    \ following conditions \n// are met:\n// - There should not be more than three\
    \ digits ('0'-'9') in the file's name.\n// - The file's name contains exactly\
    \ one dot '.'\n// - The substring before the dot should not be empty, and it starts\
    \ with a letter from \n// the latin alphapet ('a'-'z' and 'A'-'Z').\n// - The\
    \ substring after the dot should be one of these: ['txt', 'exe', 'dll']\n// Examples:\n\
    // file_name_check(\"example.txt\") # => 'Yes'\n// file_name_check(\"1example.dll\"\
    ) # => 'No' (the name should start with a latin alphapet letter)\nfunction file_name_check($file_name)\
    \ {\n    $file_name_parts = explode('.', $file_name);\n    if (count($file_name_parts)\
    \ != 2) {\n        return 'No';\n    }\n    if (strlen($file_name_parts[0]) ==\
    \ 0) {\n        return 'No';\n    }\n    if (preg_match('/[0-9]{4,}/', $file_name_parts[0]))\
    \ {\n        return 'No';\n    }\n    if (!preg_match('/^[a-zA-Z]/', $file_name_parts[0]))\
    \ {\n        return 'No';\n    }\n    if (!in_array($file_name_parts[1], ['txt',\
    \ 'exe', 'dll'])) {\n        return 'No';\n    }\n    return 'Yes';\n}\n\nfunction\
    \ candidate(...$args) {\n    return file_name_check(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"example.txt\") !== \"Yes\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"1example.dll\") !== \"No\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"s1sdf3.asd\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    K.dll\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    MY16FILE3.exe\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"His12FILE94.exe\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"_Y.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"?aREYA.exe\") !== \"No\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"/this_is_valid.dll\") !==\
    \ \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"this_is_valid.wow\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_valid.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"this_is_valid.txtexe\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#this2_i4s_5valid.ten\") !== \"No\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"@this1_is6_valid.exe\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_12valid.6exe4.txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"all.exe.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"I563_No.exe\") !== \"Yes\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Is3youfault.txt\") !== \"\
    Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"no_one#knows.dll\"\
    ) !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1I563_Yes3.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"I563_Yes3.txtt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"final..txt\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"final132\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"_f4indsartal132.\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\".txt\") !== \"No\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"s.\") !== \"\
    No\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp98sts2xa.php:44\n\
    Stack trace:\n#0 /tmp/tmp98sts2xa.php(67): test()\n#1 {main}\n  thrown in /tmp/tmp98sts2xa.php\
    \ on line 44\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function which takes a string representing a file's\
    \ name, and returns\n// 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n// A file's name is considered to be valid if and only if all the\
    \ following conditions \n// are met:\n// - There should not be more than three\
    \ digits ('0'-'9') in the file's name.\n// - The file's name contains exactly\
    \ one dot '.'\n// - The substring before the dot should not be empty, and it starts\
    \ with a letter from \n// the latin alphapet ('a'-'z' and 'A'-'Z').\n// - The\
    \ substring after the dot should be one of these: ['txt', 'exe', 'dll']\n// Examples:\n\
    // file_name_check(\"example.txt\") # => 'Yes'\n// file_name_check(\"1example.dll\"\
    ) # => 'No' (the name should start with a latin alphapet letter)\nfunction file_name_check($file_name)\
    \ {\n    $file_name_array = explode('.', $file_name);\n    $file_name_array_length\
    \ = count($file_name_array);\n    if ($file_name_array_length != 2) {\n      \
    \  return 'No';\n    }\n    $file_name_array_first = $file_name_array[0];\n  \
    \  $file_name_array_second = $file_name_array[1];\n    if (preg_match('/[a-zA-Z]/',\
    \ $file_name_array_first[0]) == 0) {\n        return 'No';\n    }\n    if (preg_match('/[0-9]/',\
    \ $file_name_array_first) > 3) {\n        return 'No';\n    }\n    if ($file_name_array_second\
    \ != 'txt' && $file_name_array_second != 'exe' && $file_name_array_second != 'dll')\
    \ {\n        return 'No';\n    }\n    return 'Yes';\n}\n\nfunction candidate(...$args)\
    \ {\n    return file_name_check(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(\"example.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"1example.dll\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"s1sdf3.asd\") !== \"No\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"K.dll\") !== \"Yes\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"MY16FILE3.exe\"\
    ) !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    His12FILE94.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(\"_Y.txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"?aREYA.exe\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"/this_is_valid.dll\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"this_is_valid.wow\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_valid.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"this_is_valid.txtexe\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#this2_i4s_5valid.ten\") !== \"No\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"@this1_is6_valid.exe\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_12valid.6exe4.txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"all.exe.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"I563_No.exe\") !== \"Yes\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Is3youfault.txt\") !== \"\
    Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"no_one#knows.dll\"\
    ) !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1I563_Yes3.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"I563_Yes3.txtt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"final..txt\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"final132\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"_f4indsartal132.\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\".txt\") !== \"No\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"s.\") !== \"\
    No\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmplnh41s19.php:44\n\
    Stack trace:\n#0 /tmp/tmplnh41s19.php(67): test()\n#1 {main}\n  thrown in /tmp/tmplnh41s19.php\
    \ on line 44\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function which takes a string representing a file's\
    \ name, and returns\n// 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n// A file's name is considered to be valid if and only if all the\
    \ following conditions \n// are met:\n// - There should not be more than three\
    \ digits ('0'-'9') in the file's name.\n// - The file's name contains exactly\
    \ one dot '.'\n// - The substring before the dot should not be empty, and it starts\
    \ with a letter from \n// the latin alphapet ('a'-'z' and 'A'-'Z').\n// - The\
    \ substring after the dot should be one of these: ['txt', 'exe', 'dll']\n// Examples:\n\
    // file_name_check(\"example.txt\") # => 'Yes'\n// file_name_check(\"1example.dll\"\
    ) # => 'No' (the name should start with a latin alphapet letter)\nfunction file_name_check($file_name)\
    \ {\n    $file_name_array = explode('.', $file_name);\n    $file_name_array_count\
    \ = count($file_name_array);\n    if ($file_name_array_count == 2) {\n       \
    \ $file_name_array_first = $file_name_array[0];\n        $file_name_array_second\
    \ = $file_name_array[1];\n        $file_name_array_first_length = strlen($file_name_array_first);\n\
    \        $file_name_array_second_length = strlen($file_name_array_second);\n \
    \       if ($file_name_array_first_length > 0 && $file_name_array_second_length\
    \ > 0) {\n            $file_name_array_first_first_char = $file_name_array_first[0];\n\
    \            $file_name_array_first_first_char_ascii = ord($file_name_array_first_first_char);\n\
    \            if (($file_name_array_first_first_char_ascii >= 65 && $file_name_array_first_first_char_ascii\
    \ <= 90) || ($file_name_array_first_first_char_ascii >= 97 && $file_name_array_first_first_char_ascii\
    \ <= 122)) {\n                $file_name_array_first_digit_count = 0;\n      \
    \          for ($i = 0; $i < $file_name_array_first_length; $i++) {\n        \
    \            $file_name_array_first_char = $file_name_array_first[$i];\n     \
    \               $file_name_array_first_char_ascii = ord($file_name_array_first_char);\n\
    \                    if ($file_name_array_first_char_ascii >= 48 && $file_name_array_first_char_ascii\
    \ <= 57) {\n                        $file_name_array_first_digit_count++;\n  \
    \                  }\n                }\n                if ($file_name_array_first_digit_count\
    \ <= 3) {\n                    if ($file_name_array_second == 'txt' || $file_name_array_second\
    \ == '\nfunction candidate(...$args) {\n    return file_name_check(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"example.txt\") !== \"Yes\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"1example.dll\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    s1sdf3.asd\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    K.dll\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    MY16FILE3.exe\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"His12FILE94.exe\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"_Y.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"?aREYA.exe\") !== \"No\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"/this_is_valid.dll\") !==\
    \ \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"this_is_valid.wow\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_valid.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"this_is_valid.txtexe\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#this2_i4s_5valid.ten\") !== \"No\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"@this1_is6_valid.exe\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_12valid.6exe4.txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"all.exe.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"I563_No.exe\") !== \"Yes\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Is3youfault.txt\") !== \"\
    Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"no_one#knows.dll\"\
    ) !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1I563_Yes3.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"I563_Yes3.txtt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"final..txt\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"final132\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"_f4indsartal132.\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\".txt\") !== \"No\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"s.\") !== \"\
    No\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Parse error:  syntax error, unexpected string content \"\" in /tmp/tmpohq77tpr.php\
    \ on line 35\n"
  exit_code: 255
  status: SyntaxError
- program: "<?php\n// Create a function which takes a string representing a file's\
    \ name, and returns\n// 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n// A file's name is considered to be valid if and only if all the\
    \ following conditions \n// are met:\n// - There should not be more than three\
    \ digits ('0'-'9') in the file's name.\n// - The file's name contains exactly\
    \ one dot '.'\n// - The substring before the dot should not be empty, and it starts\
    \ with a letter from \n// the latin alphapet ('a'-'z' and 'A'-'Z').\n// - The\
    \ substring after the dot should be one of these: ['txt', 'exe', 'dll']\n// Examples:\n\
    // file_name_check(\"example.txt\") # => 'Yes'\n// file_name_check(\"1example.dll\"\
    ) # => 'No' (the name should start with a latin alphapet letter)\nfunction file_name_check($file_name)\
    \ {\n    $file_name_arr = explode('.', $file_name);\n    if (count($file_name_arr)\
    \ != 2) {\n        return 'No';\n    }\n    if (!preg_match('/^[a-zA-Z]/', $file_name_arr[0]))\
    \ {\n        return 'No';\n    }\n    if (!preg_match('/^[0-9]{0,3}$/', $file_name_arr[0]))\
    \ {\n        return 'No';\n    }\n    if (!in_array($file_name_arr[1], ['txt',\
    \ 'exe', 'dll'])) {\n        return 'No';\n    }\n    return 'Yes';\n}\n\nfunction\
    \ candidate(...$args) {\n    return file_name_check(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"example.txt\") !== \"Yes\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"1example.dll\") !== \"No\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"s1sdf3.asd\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    K.dll\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    MY16FILE3.exe\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"His12FILE94.exe\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"_Y.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"?aREYA.exe\") !== \"No\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"/this_is_valid.dll\") !==\
    \ \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"this_is_valid.wow\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_valid.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"this_is_valid.txtexe\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#this2_i4s_5valid.ten\") !== \"No\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"@this1_is6_valid.exe\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_12valid.6exe4.txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"all.exe.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"I563_No.exe\") !== \"Yes\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Is3youfault.txt\") !== \"\
    Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"no_one#knows.dll\"\
    ) !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1I563_Yes3.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"I563_Yes3.txtt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"final..txt\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"final132\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"_f4indsartal132.\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\".txt\") !== \"No\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"s.\") !== \"\
    No\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp2ga_3n4r.php:36\n\
    Stack trace:\n#0 /tmp/tmp2ga_3n4r.php(64): test()\n#1 {main}\n  thrown in /tmp/tmp2ga_3n4r.php\
    \ on line 36\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function which takes a string representing a file's\
    \ name, and returns\n// 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n// A file's name is considered to be valid if and only if all the\
    \ following conditions \n// are met:\n// - There should not be more than three\
    \ digits ('0'-'9') in the file's name.\n// - The file's name contains exactly\
    \ one dot '.'\n// - The substring before the dot should not be empty, and it starts\
    \ with a letter from \n// the latin alphapet ('a'-'z' and 'A'-'Z').\n// - The\
    \ substring after the dot should be one of these: ['txt', 'exe', 'dll']\n// Examples:\n\
    // file_name_check(\"example.txt\") # => 'Yes'\n// file_name_check(\"1example.dll\"\
    ) # => 'No' (the name should start with a latin alphapet letter)\nfunction file_name_check($file_name)\
    \ {\n    $file_name_array = explode('.', $file_name);\n    $file_name_array_count\
    \ = count($file_name_array);\n    $file_name_array_count_digits = preg_match_all('/[0-9]/',\
    \ $file_name_array[0]);\n    $file_name_array_count_letters = preg_match_all('/[a-zA-Z]/',\
    \ $file_name_array[0]);\n    $file_name_array_count_letters_first = preg_match_all('/^[a-zA-Z]/',\
    \ $file_name_array[0]);\n    $file_name_array_count_letters_last = preg_match_all('/[a-zA-Z]$/',\
    \ $file_name_array[0]);\n    $file_name_array_count_letters_only = preg_match_all('/^[a-zA-Z]+$/',\
    \ $file_name_array[0]);\n    $file_name_array_count_letters_only_last = preg_match_all('/[a-zA-Z]+$/',\
    \ $file_name_array[0]);\n    $file_name_array_count_letters_only_first = preg_match_all('/^[a-zA-Z]+/',\
    \ $file_name_array[0]);\n    $file_name_array_count_letters_only_first_last =\
    \ preg_match_all('/^[a-zA-Z]+$/', $file_name_array[0]);\n    $file_name_array_count_letters_only_first_last_last\
    \ = preg_match_all('/^[a-zA-Z]+$/', $file_name_array[$file_name_array_count -\
    \ 1]);\n    $file_name_array_count_letters_only_first_last_last_last = preg_match_all('/^[a-zA-Z]+$/',\
    \ $file_name_array[$file_name_array_count - 1]);\n    $file_name_array_\nfunction\
    \ candidate(...$args) {\n    return file_name_check(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"example.txt\") !== \"Yes\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"1example.dll\") !== \"No\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"s1sdf3.asd\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    K.dll\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    MY16FILE3.exe\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"His12FILE94.exe\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"_Y.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"?aREYA.exe\") !== \"No\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"/this_is_valid.dll\") !==\
    \ \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"this_is_valid.wow\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_valid.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"this_is_valid.txtexe\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#this2_i4s_5valid.ten\") !== \"No\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"@this1_is6_valid.exe\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_12valid.6exe4.txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"all.exe.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"I563_No.exe\") !== \"Yes\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Is3youfault.txt\") !== \"\
    Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"no_one#knows.dll\"\
    ) !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1I563_Yes3.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"I563_Yes3.txtt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"final..txt\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"final132\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"_f4indsartal132.\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\".txt\") !== \"No\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"s.\") !== \"\
    No\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Parse error:  syntax error, unexpected token \"function\" in /tmp/tmpe0tjspty.php\
    \ on line 28\n"
  exit_code: 255
  status: SyntaxError
- program: "<?php\n// Create a function which takes a string representing a file's\
    \ name, and returns\n// 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n// A file's name is considered to be valid if and only if all the\
    \ following conditions \n// are met:\n// - There should not be more than three\
    \ digits ('0'-'9') in the file's name.\n// - The file's name contains exactly\
    \ one dot '.'\n// - The substring before the dot should not be empty, and it starts\
    \ with a letter from \n// the latin alphapet ('a'-'z' and 'A'-'Z').\n// - The\
    \ substring after the dot should be one of these: ['txt', 'exe', 'dll']\n// Examples:\n\
    // file_name_check(\"example.txt\") # => 'Yes'\n// file_name_check(\"1example.dll\"\
    ) # => 'No' (the name should start with a latin alphapet letter)\nfunction file_name_check($file_name)\
    \ {\n    $file_name_arr = explode('.', $file_name);\n    $file_name_arr_length\
    \ = count($file_name_arr);\n    if ($file_name_arr_length !== 2) {\n        return\
    \ 'No';\n    }\n    $file_name_arr_first = $file_name_arr[0];\n    $file_name_arr_second\
    \ = $file_name_arr[1];\n    if (preg_match('/[^a-zA-Z]/', $file_name_arr_first)\
    \ || preg_match('/[^a-zA-Z0-9]/', $file_name_arr_second)) {\n        return 'No';\n\
    \    }\n    if (preg_match('/[0-9]{4,}/', $file_name_arr_first)) {\n        return\
    \ 'No';\n    }\n    if (!in_array($file_name_arr_second, ['txt', 'exe', 'dll']))\
    \ {\n        return 'No';\n    }\n    return 'Yes';\n}\n\nfunction candidate(...$args)\
    \ {\n    return file_name_check(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(\"example.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"1example.dll\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"s1sdf3.asd\") !== \"No\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"K.dll\") !== \"Yes\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"MY16FILE3.exe\"\
    ) !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    His12FILE94.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(\"_Y.txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"?aREYA.exe\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"/this_is_valid.dll\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"this_is_valid.wow\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_valid.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"this_is_valid.txtexe\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#this2_i4s_5valid.ten\") !== \"No\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"@this1_is6_valid.exe\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_12valid.6exe4.txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"all.exe.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"I563_No.exe\") !== \"Yes\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Is3youfault.txt\") !== \"\
    Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"no_one#knows.dll\"\
    ) !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1I563_Yes3.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"I563_Yes3.txtt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"final..txt\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"final132\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"_f4indsartal132.\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\".txt\") !== \"No\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"s.\") !== \"\
    No\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpoultxti8.php:43\n\
    Stack trace:\n#0 /tmp/tmpoultxti8.php(67): test()\n#1 {main}\n  thrown in /tmp/tmpoultxti8.php\
    \ on line 43\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function which takes a string representing a file's\
    \ name, and returns\n// 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n// A file's name is considered to be valid if and only if all the\
    \ following conditions \n// are met:\n// - There should not be more than three\
    \ digits ('0'-'9') in the file's name.\n// - The file's name contains exactly\
    \ one dot '.'\n// - The substring before the dot should not be empty, and it starts\
    \ with a letter from \n// the latin alphapet ('a'-'z' and 'A'-'Z').\n// - The\
    \ substring after the dot should be one of these: ['txt', 'exe', 'dll']\n// Examples:\n\
    // file_name_check(\"example.txt\") # => 'Yes'\n// file_name_check(\"1example.dll\"\
    ) # => 'No' (the name should start with a latin alphapet letter)\nfunction file_name_check($file_name)\
    \ {\n    $file_name_array = explode('.', $file_name);\n    $file_name_array_count\
    \ = count($file_name_array);\n    if ($file_name_array_count != 2) {\n       \
    \ return 'No';\n    }\n    $file_name_array_first = $file_name_array[0];\n   \
    \ $file_name_array_last = $file_name_array[1];\n    $file_name_array_first_count\
    \ = strlen($file_name_array_first);\n    $file_name_array_last_count = strlen($file_name_array_last);\n\
    \    if ($file_name_array_first_count == 0) {\n        return 'No';\n    }\n \
    \   if ($file_name_array_last_count == 0) {\n        return 'No';\n    }\n   \
    \ $file_name_array_first_first_char = $file_name_array_first[0];\n    if (!(($file_name_array_first_first_char\
    \ >= 'a' && $file_name_array_first_first_char <= 'z') || ($file_name_array_first_first_char\
    \ >= 'A' && $file_name_array_first_first_char <= 'Z'))) {\n        return 'No';\n\
    \    }\n    $file_name_array_last_array = ['txt', 'exe', 'dll'];\n    if (!in_array($file_name_array_last,\
    \ $file_name_array_last_array)) {\n        return 'No';\n    }\n    $file_name_array_first_digit_count\
    \ = 0;\n    for ($i = 0; $i < $file_name_array_first_count; $i++) {\n        $file_name_array_first_char\
    \ = $file_name_array_first[$i];\n        if ($file_name_array_first_char >= '0'\
    \ && $file_name_array_first_char <= '9') {\n            $file_name_array_first_digit_count++;\n\
    \        }\n    }\n    if ($file_name_array_first_digit_count > 3) {\n\nfunction\
    \ candidate(...$args) {\n    return file_name_check(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"example.txt\") !== \"Yes\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"1example.dll\") !== \"No\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"s1sdf3.asd\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    K.dll\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    MY16FILE3.exe\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"His12FILE94.exe\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"_Y.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"?aREYA.exe\") !== \"No\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"/this_is_valid.dll\") !==\
    \ \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"this_is_valid.wow\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_valid.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"this_is_valid.txtexe\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#this2_i4s_5valid.ten\") !== \"No\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"@this1_is6_valid.exe\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_12valid.6exe4.txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"all.exe.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"I563_No.exe\") !== \"Yes\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Is3youfault.txt\") !== \"\
    Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"no_one#knows.dll\"\
    ) !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1I563_Yes3.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"I563_Yes3.txtt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"final..txt\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"final132\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"_f4indsartal132.\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\".txt\") !== \"No\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"s.\") !== \"\
    No\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Parse error:  Unclosed '{' on line 45 in /tmp/tmp4ktgrr68.php on line\
    \ 80\n"
  exit_code: 255
  status: SyntaxError
- program: "<?php\n// Create a function which takes a string representing a file's\
    \ name, and returns\n// 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n// A file's name is considered to be valid if and only if all the\
    \ following conditions \n// are met:\n// - There should not be more than three\
    \ digits ('0'-'9') in the file's name.\n// - The file's name contains exactly\
    \ one dot '.'\n// - The substring before the dot should not be empty, and it starts\
    \ with a letter from \n// the latin alphapet ('a'-'z' and 'A'-'Z').\n// - The\
    \ substring after the dot should be one of these: ['txt', 'exe', 'dll']\n// Examples:\n\
    // file_name_check(\"example.txt\") # => 'Yes'\n// file_name_check(\"1example.dll\"\
    ) # => 'No' (the name should start with a latin alphapet letter)\nfunction file_name_check($file_name)\
    \ {\n    $file_name_arr = explode('.', $file_name);\n    $file_name_arr_len =\
    \ count($file_name_arr);\n    if ($file_name_arr_len != 2) {\n        return 'No';\n\
    \    }\n    $file_name_arr_0 = $file_name_arr[0];\n    $file_name_arr_1 = $file_name_arr[1];\n\
    \    $file_name_arr_0_len = strlen($file_name_arr_0);\n    $file_name_arr_1_len\
    \ = strlen($file_name_arr_1);\n    if ($file_name_arr_0_len == 0 || $file_name_arr_1_len\
    \ == 0) {\n        return 'No';\n    }\n    if (!preg_match('/^[a-zA-Z]/', $file_name_arr_0))\
    \ {\n        return 'No';\n    }\n    if (!preg_match('/^[a-zA-Z]/', $file_name_arr_1))\
    \ {\n        return 'No';\n    }\n    if (!preg_match('/^[a-zA-Z0-9]{1,3}$/',\
    \ $file_name_arr_0)) {\n        return 'No';\n    }\n    if (!preg_match('/^(txt|exe|dll)$/',\
    \ $file_name_arr_1)) {\n        return 'No';\n    }\n    return 'Yes';\n}\n\n\
    function candidate(...$args) {\n    return file_name_check(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"example.txt\") !== \"Yes\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"1example.dll\") !== \"No\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"s1sdf3.asd\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    K.dll\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    MY16FILE3.exe\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"His12FILE94.exe\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"_Y.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"?aREYA.exe\") !== \"No\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"/this_is_valid.dll\") !==\
    \ \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"this_is_valid.wow\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_valid.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"this_is_valid.txtexe\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#this2_i4s_5valid.ten\") !== \"No\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"@this1_is6_valid.exe\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_12valid.6exe4.txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"all.exe.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"I563_No.exe\") !== \"Yes\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Is3youfault.txt\") !== \"\
    Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"no_one#knows.dll\"\
    ) !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1I563_Yes3.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"I563_Yes3.txtt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"final..txt\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"final132\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"_f4indsartal132.\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\".txt\") !== \"No\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"s.\") !== \"\
    No\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpvz654aa1.php:47\n\
    Stack trace:\n#0 /tmp/tmpvz654aa1.php(75): test()\n#1 {main}\n  thrown in /tmp/tmpvz654aa1.php\
    \ on line 47\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function which takes a string representing a file's\
    \ name, and returns\n// 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n// A file's name is considered to be valid if and only if all the\
    \ following conditions \n// are met:\n// - There should not be more than three\
    \ digits ('0'-'9') in the file's name.\n// - The file's name contains exactly\
    \ one dot '.'\n// - The substring before the dot should not be empty, and it starts\
    \ with a letter from \n// the latin alphapet ('a'-'z' and 'A'-'Z').\n// - The\
    \ substring after the dot should be one of these: ['txt', 'exe', 'dll']\n// Examples:\n\
    // file_name_check(\"example.txt\") # => 'Yes'\n// file_name_check(\"1example.dll\"\
    ) # => 'No' (the name should start with a latin alphapet letter)\nfunction file_name_check($file_name)\
    \ {\n    $dot_index = strpos($file_name, '.');\n    $substring_before_dot = substr($file_name,\
    \ 0, $dot_index);\n    $substring_after_dot = substr($file_name, $dot_index +\
    \ 1);\n    if (preg_match('/[0-9]{4,}/', $file_name)) {\n        return 'No';\n\
    \    }\n    if (strpos($file_name, '.') === false) {\n        return 'No';\n \
    \   }\n    if (strlen($substring_before_dot) === 0 || !preg_match('/^[a-zA-Z]/',\
    \ $substring_before_dot)) {\n        return 'No';\n    }\n    if (!in_array($substring_after_dot,\
    \ ['txt', 'exe', 'dll'])) {\n        return 'No';\n    }\n    return 'Yes';\n\
    }\n\nfunction candidate(...$args) {\n    return file_name_check(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(\"example.txt\") !== \"Yes\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"1example.dll\") !==\
    \ \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"s1sdf3.asd\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    K.dll\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    MY16FILE3.exe\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"His12FILE94.exe\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"_Y.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"?aREYA.exe\") !== \"No\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"/this_is_valid.dll\") !==\
    \ \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"this_is_valid.wow\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_valid.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"this_is_valid.txtexe\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#this2_i4s_5valid.ten\") !== \"No\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"@this1_is6_valid.exe\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_12valid.6exe4.txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"all.exe.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"I563_No.exe\") !== \"Yes\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Is3youfault.txt\") !== \"\
    Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"no_one#knows.dll\"\
    ) !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1I563_Yes3.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"I563_Yes3.txtt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"final..txt\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"final132\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"_f4indsartal132.\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\".txt\") !== \"No\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"s.\") !== \"\
    No\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpiiup9un8.php:43\n\
    Stack trace:\n#0 /tmp/tmpiiup9un8.php(66): test()\n#1 {main}\n  thrown in /tmp/tmpiiup9un8.php\
    \ on line 43\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function which takes a string representing a file's\
    \ name, and returns\n// 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n// A file's name is considered to be valid if and only if all the\
    \ following conditions \n// are met:\n// - There should not be more than three\
    \ digits ('0'-'9') in the file's name.\n// - The file's name contains exactly\
    \ one dot '.'\n// - The substring before the dot should not be empty, and it starts\
    \ with a letter from \n// the latin alphapet ('a'-'z' and 'A'-'Z').\n// - The\
    \ substring after the dot should be one of these: ['txt', 'exe', 'dll']\n// Examples:\n\
    // file_name_check(\"example.txt\") # => 'Yes'\n// file_name_check(\"1example.dll\"\
    ) # => 'No' (the name should start with a latin alphapet letter)\nfunction file_name_check($file_name)\
    \ {\n    $file_name_array = explode('.', $file_name);\n    if (count($file_name_array)\
    \ != 2) {\n        return 'No';\n    }\n    $first_part = $file_name_array[0];\n\
    \    $second_part = $file_name_array[1];\n    if (preg_match('/^[a-zA-Z]/', $first_part)\
    \ && preg_match('/^[a-zA-Z]/', $second_part) && preg_match('/[0-9]{3,}/', $first_part)\
    \ && preg_match('/[0-9]{3,}/', $second_part)) {\n        return 'No';\n    }\n\
    \    if (preg_match('/[0-9]{3,}/', $first_part) || preg_match('/[0-9]{3,}/', $second_part))\
    \ {\n        return 'No';\n    }\n    if (!preg_match('/^[a-zA-Z]/', $first_part))\
    \ {\n        return 'No';\n    }\n    if (!preg_match('/^[a-zA-Z]/', $second_part))\
    \ {\n        return 'No';\n    }\n    if (!preg_match('/^(txt|exe|dll)$/', $second_part))\
    \ {\n        return 'No';\n    }\n    return 'Yes';\n}\n\nfunction candidate(...$args)\
    \ {\n    return file_name_check(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(\"example.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"1example.dll\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"s1sdf3.asd\") !== \"No\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"K.dll\") !== \"Yes\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"MY16FILE3.exe\"\
    ) !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    His12FILE94.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(\"_Y.txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"?aREYA.exe\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"/this_is_valid.dll\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"this_is_valid.wow\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_valid.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"this_is_valid.txtexe\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#this2_i4s_5valid.ten\") !== \"No\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"@this1_is6_valid.exe\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_12valid.6exe4.txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"all.exe.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"I563_No.exe\") !== \"Yes\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Is3youfault.txt\") !== \"\
    Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"no_one#knows.dll\"\
    ) !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1I563_Yes3.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"I563_Yes3.txtt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"final..txt\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"final132\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"_f4indsartal132.\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\".txt\") !== \"No\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"s.\") !== \"\
    No\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpruolrzu0.php:49\n\
    Stack trace:\n#0 /tmp/tmpruolrzu0.php(72): test()\n#1 {main}\n  thrown in /tmp/tmpruolrzu0.php\
    \ on line 49\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function which takes a string representing a file's\
    \ name, and returns\n// 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n// A file's name is considered to be valid if and only if all the\
    \ following conditions \n// are met:\n// - There should not be more than three\
    \ digits ('0'-'9') in the file's name.\n// - The file's name contains exactly\
    \ one dot '.'\n// - The substring before the dot should not be empty, and it starts\
    \ with a letter from \n// the latin alphapet ('a'-'z' and 'A'-'Z').\n// - The\
    \ substring after the dot should be one of these: ['txt', 'exe', 'dll']\n// Examples:\n\
    // file_name_check(\"example.txt\") # => 'Yes'\n// file_name_check(\"1example.dll\"\
    ) # => 'No' (the name should start with a latin alphapet letter)\nfunction file_name_check($file_name)\
    \ {\n    // Write your code here\n    // To print results to the standard output\
    \ you can use print\n    // Example: print \"Hello world!\";\n    $file_name_array\
    \ = explode(\".\", $file_name);\n    if (count($file_name_array) != 2) {\n   \
    \     return \"No\";\n    }\n    if (!preg_match(\"/^[a-zA-Z]/\", $file_name_array[0]))\
    \ {\n        return \"No\";\n    }\n    if (!preg_match(\"/^[a-zA-Z0-9]*$/\",\
    \ $file_name_array[0])) {\n        return \"No\";\n    }\n    if (strlen($file_name_array[0])\
    \ > 3) {\n        return \"No\";\n    }\n    if (!in_array($file_name_array[1],\
    \ [\"txt\", \"exe\", \"dll\"])) {\n        return \"No\";\n    }\n    return \"\
    Yes\";\n}\n\nfunction candidate(...$args) {\n    return file_name_check(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"example.txt\") !== \"Yes\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"1example.dll\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    s1sdf3.asd\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    K.dll\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    MY16FILE3.exe\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"His12FILE94.exe\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"_Y.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"?aREYA.exe\") !== \"No\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"/this_is_valid.dll\") !==\
    \ \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"this_is_valid.wow\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_valid.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"this_is_valid.txtexe\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#this2_i4s_5valid.ten\") !== \"No\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"@this1_is6_valid.exe\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_12valid.6exe4.txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"all.exe.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"I563_No.exe\") !== \"Yes\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Is3youfault.txt\") !== \"\
    Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"no_one#knows.dll\"\
    ) !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1I563_Yes3.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"I563_Yes3.txtt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"final..txt\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"final132\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"_f4indsartal132.\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\".txt\") !== \"No\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"s.\") !== \"\
    No\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmphi8vhjzi.php:42\n\
    Stack trace:\n#0 /tmp/tmphi8vhjzi.php(70): test()\n#1 {main}\n  thrown in /tmp/tmphi8vhjzi.php\
    \ on line 42\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function which takes a string representing a file's\
    \ name, and returns\n// 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n// A file's name is considered to be valid if and only if all the\
    \ following conditions \n// are met:\n// - There should not be more than three\
    \ digits ('0'-'9') in the file's name.\n// - The file's name contains exactly\
    \ one dot '.'\n// - The substring before the dot should not be empty, and it starts\
    \ with a letter from \n// the latin alphapet ('a'-'z' and 'A'-'Z').\n// - The\
    \ substring after the dot should be one of these: ['txt', 'exe', 'dll']\n// Examples:\n\
    // file_name_check(\"example.txt\") # => 'Yes'\n// file_name_check(\"1example.dll\"\
    ) # => 'No' (the name should start with a latin alphapet letter)\nfunction file_name_check($file_name)\
    \ {\n    if (preg_match('/^[a-zA-Z][a-zA-Z0-9]{0,2}\\.[a-zA-Z]{3}$/', $file_name))\
    \ {\n        return 'Yes';\n    }\n    return 'No';\n}\n\nfunction candidate(...$args)\
    \ {\n    return file_name_check(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(\"example.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"1example.dll\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"s1sdf3.asd\") !== \"No\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"K.dll\") !== \"Yes\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"MY16FILE3.exe\"\
    ) !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    His12FILE94.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(\"_Y.txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"?aREYA.exe\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"/this_is_valid.dll\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"this_is_valid.wow\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_valid.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"this_is_valid.txtexe\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#this2_i4s_5valid.ten\") !== \"No\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"@this1_is6_valid.exe\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_12valid.6exe4.txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"all.exe.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"I563_No.exe\") !== \"Yes\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Is3youfault.txt\") !== \"\
    Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"no_one#knows.dll\"\
    ) !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1I563_Yes3.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"I563_Yes3.txtt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"final..txt\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"final132\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"_f4indsartal132.\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\".txt\") !== \"No\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"s.\") !== \"\
    No\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpfafw_5ws.php:26\n\
    Stack trace:\n#0 /tmp/tmpfafw_5ws.php(54): test()\n#1 {main}\n  thrown in /tmp/tmpfafw_5ws.php\
    \ on line 26\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function which takes a string representing a file's\
    \ name, and returns\n// 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n// A file's name is considered to be valid if and only if all the\
    \ following conditions \n// are met:\n// - There should not be more than three\
    \ digits ('0'-'9') in the file's name.\n// - The file's name contains exactly\
    \ one dot '.'\n// - The substring before the dot should not be empty, and it starts\
    \ with a letter from \n// the latin alphapet ('a'-'z' and 'A'-'Z').\n// - The\
    \ substring after the dot should be one of these: ['txt', 'exe', 'dll']\n// Examples:\n\
    // file_name_check(\"example.txt\") # => 'Yes'\n// file_name_check(\"1example.dll\"\
    ) # => 'No' (the name should start with a latin alphapet letter)\nfunction file_name_check($file_name)\
    \ {\n    $file_name_array = explode('.', $file_name);\n    $file_name_array_count\
    \ = count($file_name_array);\n    $file_name_array_count_digit = 0;\n    $file_name_array_count_letter\
    \ = 0;\n    $file_name_array_count_dot = 0;\n    $file_name_array_count_extension\
    \ = 0;\n    $file_name_array_count_extension_txt = 0;\n    $file_name_array_count_extension_exe\
    \ = 0;\n    $file_name_array_count_extension_dll = 0;\n    $file_name_array_count_extension_other\
    \ = 0;\n    $file_name_array_count_extension_txt_exe_dll = 0;\n    $file_name_array_count_extension_txt_exe_dll_other\
    \ = 0;\n    $file_name_array_count_extension_txt_exe_dll_other_dot = 0;\n    $file_name_array_count_extension_txt_exe_dll_other_dot_digit\
    \ = 0;\n    $file_name_array_count_extension_txt_exe_dll_other_dot_digit_letter\
    \ = 0;\n    $file_name_array_count_extension_txt_exe_dll_other_dot_digit_letter_digit\
    \ = 0;\n    $file_name_array_count_extension_txt_exe_dll_other_dot_digit_letter_digit_digit\
    \ = 0;\n    $file_name_array_count_extension_txt_exe_dll_other_dot_digit_letter_digit_digit_digit\
    \ = 0;\n    $file_name_array_count_extension_txt_exe_dll_other_dot_digit_letter_digit_digit_digit_digit\
    \ = 0;\n    $file_name_array_count_extension_txt_exe_dll_other_dot_digit_letter_digit_digit_digit_digit_digit\
    \ = 0;\n    $file_name_array_count_extension_txt_exe_dll_other_dot_digit_letter_digit_digit_\n\
    function candidate(...$args) {\n    return file_name_check(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"example.txt\") !== \"Yes\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"1example.dll\") !== \"No\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"s1sdf3.asd\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    K.dll\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    MY16FILE3.exe\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"His12FILE94.exe\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"_Y.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"?aREYA.exe\") !== \"No\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"/this_is_valid.dll\") !==\
    \ \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"this_is_valid.wow\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_valid.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"this_is_valid.txtexe\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#this2_i4s_5valid.ten\") !== \"No\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"@this1_is6_valid.exe\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_12valid.6exe4.txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"all.exe.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"I563_No.exe\") !== \"Yes\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Is3youfault.txt\") !== \"\
    Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"no_one#knows.dll\"\
    ) !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1I563_Yes3.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"I563_Yes3.txtt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"final..txt\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"final132\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"_f4indsartal132.\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\".txt\") !== \"No\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"s.\") !== \"\
    No\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Parse error:  syntax error, unexpected token \"function\" in /tmp/tmpqmftagxg.php\
    \ on line 36\n"
  exit_code: 255
  status: SyntaxError
- program: "<?php\n// Create a function which takes a string representing a file's\
    \ name, and returns\n// 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n// A file's name is considered to be valid if and only if all the\
    \ following conditions \n// are met:\n// - There should not be more than three\
    \ digits ('0'-'9') in the file's name.\n// - The file's name contains exactly\
    \ one dot '.'\n// - The substring before the dot should not be empty, and it starts\
    \ with a letter from \n// the latin alphapet ('a'-'z' and 'A'-'Z').\n// - The\
    \ substring after the dot should be one of these: ['txt', 'exe', 'dll']\n// Examples:\n\
    // file_name_check(\"example.txt\") # => 'Yes'\n// file_name_check(\"1example.dll\"\
    ) # => 'No' (the name should start with a latin alphapet letter)\nfunction file_name_check($file_name)\
    \ {\n    $file_name_array = explode('.', $file_name);\n    if (count($file_name_array)\
    \ != 2) {\n        return 'No';\n    }\n    if (!preg_match('/^[a-zA-Z]/', $file_name_array[0]))\
    \ {\n        return 'No';\n    }\n    if (!preg_match('/^[0-9]{0,3}$/', $file_name_array[0]))\
    \ {\n        return 'No';\n    }\n    if (!in_array($file_name_array[1], ['txt',\
    \ 'exe', 'dll'])) {\n        return 'No';\n    }\n    return 'Yes';\n}\n\nfunction\
    \ candidate(...$args) {\n    return file_name_check(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"example.txt\") !== \"Yes\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"1example.dll\") !== \"No\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"s1sdf3.asd\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    K.dll\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    MY16FILE3.exe\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"His12FILE94.exe\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"_Y.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"?aREYA.exe\") !== \"No\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"/this_is_valid.dll\") !==\
    \ \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"this_is_valid.wow\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_valid.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"this_is_valid.txtexe\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#this2_i4s_5valid.ten\") !== \"No\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"@this1_is6_valid.exe\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_12valid.6exe4.txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"all.exe.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"I563_No.exe\") !== \"Yes\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Is3youfault.txt\") !== \"\
    Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"no_one#knows.dll\"\
    ) !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1I563_Yes3.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"I563_Yes3.txtt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"final..txt\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"final132\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"_f4indsartal132.\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\".txt\") !== \"No\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"s.\") !== \"\
    No\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpzwu3hbhk.php:36\n\
    Stack trace:\n#0 /tmp/tmpzwu3hbhk.php(64): test()\n#1 {main}\n  thrown in /tmp/tmpzwu3hbhk.php\
    \ on line 36\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function which takes a string representing a file's\
    \ name, and returns\n// 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n// A file's name is considered to be valid if and only if all the\
    \ following conditions \n// are met:\n// - There should not be more than three\
    \ digits ('0'-'9') in the file's name.\n// - The file's name contains exactly\
    \ one dot '.'\n// - The substring before the dot should not be empty, and it starts\
    \ with a letter from \n// the latin alphapet ('a'-'z' and 'A'-'Z').\n// - The\
    \ substring after the dot should be one of these: ['txt', 'exe', 'dll']\n// Examples:\n\
    // file_name_check(\"example.txt\") # => 'Yes'\n// file_name_check(\"1example.dll\"\
    ) # => 'No' (the name should start with a latin alphapet letter)\nfunction file_name_check($file_name)\
    \ {\n    $file_name_array = explode('.', $file_name);\n    $file_name_array[0]\
    \ = str_split($file_name_array[0]);\n    $file_name_array[1] = str_split($file_name_array[1]);\n\
    \    $count = 0;\n    foreach ($file_name_array[0] as $key => $value) {\n    \
    \    if (is_numeric($value)) {\n            $count++;\n        }\n    }\n    if\
    \ ($count > 3) {\n        return 'No';\n    }\n    if (count($file_name_array)\
    \ != 2) {\n        return 'No';\n    }\n    if (!ctype_alpha($file_name_array[0][0]))\
    \ {\n        return 'No';\n    }\n    if ($file_name_array[1][0] != 't' || $file_name_array[1][1]\
    \ != 'x' || $file_name_array[1][2] != 't') {\n        if ($file_name_array[1][0]\
    \ != 'e' || $file_name_array[1][1] != 'x' || $file_name_array[1][2] != 'e') {\n\
    \            if ($file_name_array[1][0] != 'd' || $file_name_array[1][1] != 'l'\
    \ || $file_name_array[1][2] != 'l') {\n                return 'No';\n        \
    \    }\n        }\n    }\n    return 'Yes';\n}\n\nfunction candidate(...$args)\
    \ {\n    return file_name_check(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(\"example.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"1example.dll\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"s1sdf3.asd\") !== \"No\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"K.dll\") !== \"Yes\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"MY16FILE3.exe\"\
    ) !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    His12FILE94.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(\"_Y.txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"?aREYA.exe\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"/this_is_valid.dll\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"this_is_valid.wow\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_valid.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"this_is_valid.txtexe\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#this2_i4s_5valid.ten\") !== \"No\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"@this1_is6_valid.exe\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_12valid.6exe4.txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"all.exe.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"I563_No.exe\") !== \"Yes\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Is3youfault.txt\") !== \"\
    Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"no_one#knows.dll\"\
    ) !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1I563_Yes3.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"I563_Yes3.txtt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"final..txt\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"final132\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"_f4indsartal132.\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\".txt\") !== \"No\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"s.\") !== \"\
    No\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpjapt_ujx.php:59\n\
    Stack trace:\n#0 /tmp/tmpjapt_ujx.php(76): test()\n#1 {main}\n  thrown in /tmp/tmpjapt_ujx.php\
    \ on line 59\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function which takes a string representing a file's\
    \ name, and returns\n// 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n// A file's name is considered to be valid if and only if all the\
    \ following conditions \n// are met:\n// - There should not be more than three\
    \ digits ('0'-'9') in the file's name.\n// - The file's name contains exactly\
    \ one dot '.'\n// - The substring before the dot should not be empty, and it starts\
    \ with a letter from \n// the latin alphapet ('a'-'z' and 'A'-'Z').\n// - The\
    \ substring after the dot should be one of these: ['txt', 'exe', 'dll']\n// Examples:\n\
    // file_name_check(\"example.txt\") # => 'Yes'\n// file_name_check(\"1example.dll\"\
    ) # => 'No' (the name should start with a latin alphapet letter)\nfunction file_name_check($file_name)\
    \ {\n    $file_name_array = explode('.', $file_name);\n    if (count($file_name_array)\
    \ != 2) {\n        return 'No';\n    }\n    $file_name_array[0] = preg_replace('/[^a-zA-Z]/',\
    \ '', $file_name_array[0]);\n    if (empty($file_name_array[0])) {\n        return\
    \ 'No';\n    }\n    $file_name_array[1] = preg_replace('/[^a-zA-Z]/', '', $file_name_array[1]);\n\
    \    if (!in_array($file_name_array[1], ['txt', 'exe', 'dll'])) {\n        return\
    \ 'No';\n    }\n    return 'Yes';\n}\n\nfunction candidate(...$args) {\n    return\
    \ file_name_check(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    example.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"1example.dll\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"s1sdf3.asd\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"K.dll\") !== \"Yes\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"MY16FILE3.exe\") !== \"Yes\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"His12FILE94.exe\") !==\
    \ \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"_Y.txt\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ?aREYA.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    /this_is_valid.dll\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"this_is_valid.wow\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"this_is_valid.txt\") !== \"Yes\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"this_is_valid.txtexe\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #this2_i4s_5valid.ten\") !== \"No\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"@this1_is6_valid.exe\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"this_is_12valid.6exe4.txt\") !== \"No\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"all.exe.txt\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    I563_No.exe\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"Is3youfault.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"no_one#knows.dll\") !== \"Yes\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"1I563_Yes3.exe\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"I563_Yes3.txtt\") !==\
    \ \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"final..txt\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    final132\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    _f4indsartal132.\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\".txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"s.\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmphjq7v1ql.php:36\n\
    Stack trace:\n#0 /tmp/tmphjq7v1ql.php(63): test()\n#1 {main}\n  thrown in /tmp/tmphjq7v1ql.php\
    \ on line 36\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function which takes a string representing a file's\
    \ name, and returns\n// 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n// A file's name is considered to be valid if and only if all the\
    \ following conditions \n// are met:\n// - There should not be more than three\
    \ digits ('0'-'9') in the file's name.\n// - The file's name contains exactly\
    \ one dot '.'\n// - The substring before the dot should not be empty, and it starts\
    \ with a letter from \n// the latin alphapet ('a'-'z' and 'A'-'Z').\n// - The\
    \ substring after the dot should be one of these: ['txt', 'exe', 'dll']\n// Examples:\n\
    // file_name_check(\"example.txt\") # => 'Yes'\n// file_name_check(\"1example.dll\"\
    ) # => 'No' (the name should start with a latin alphapet letter)\nfunction file_name_check($file_name)\
    \ {\n    $file_name_array = explode('.', $file_name);\n    $file_name_array_length\
    \ = count($file_name_array);\n    if ($file_name_array_length != 2) {\n      \
    \  return 'No';\n    }\n    $file_name_array_first = $file_name_array[0];\n  \
    \  $file_name_array_second = $file_name_array[1];\n    if (preg_match('/[0-9]/',\
    \ $file_name_array_first)) {\n        return 'No';\n    }\n    if (preg_match('/[0-9]{4}/',\
    \ $file_name_array_first)) {\n        return 'No';\n    }\n    if (!preg_match('/[a-zA-Z]/',\
    \ $file_name_array_first)) {\n        return 'No';\n    }\n    if (!preg_match('/[a-zA-Z]/',\
    \ $file_name_array_second)) {\n        return 'No';\n    }\n    if (!preg_match('/[a-zA-Z]/',\
    \ $file_name_array_second)) {\n        return 'No';\n    }\n    if (!preg_match('/[a-zA-Z]/',\
    \ $file_name_array_second)) {\n        return 'No';\n    }\n    if (!preg_match('/[a-zA-Z]/',\
    \ $file_name_array_second)) {\n        return 'No';\n    }\n    if (!preg_match('/[a-zA-Z]/',\
    \ $file_name_array_second)) {\n        return 'No';\n    }\n    if ($file_name_array_second\
    \ != 'txt' && $file_name_array_second != 'exe' && $file_name_array_second != 'dll')\
    \ {\n        return 'No';\n    }\n    return 'Yes';\n}\n\nfunction candidate(...$args)\
    \ {\n    return file_name_check(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(\"example.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"1example.dll\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"s1sdf3.asd\") !== \"No\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"K.dll\") !== \"Yes\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"MY16FILE3.exe\"\
    ) !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    His12FILE94.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(\"_Y.txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"?aREYA.exe\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"/this_is_valid.dll\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"this_is_valid.wow\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_valid.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"this_is_valid.txtexe\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#this2_i4s_5valid.ten\") !== \"No\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"@this1_is6_valid.exe\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_12valid.6exe4.txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"all.exe.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"I563_No.exe\") !== \"Yes\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Is3youfault.txt\") !== \"\
    Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"no_one#knows.dll\"\
    ) !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1I563_Yes3.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"I563_Yes3.txtt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"final..txt\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"final132\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"_f4indsartal132.\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\".txt\") !== \"No\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"s.\") !== \"\
    No\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpnxdax9i2.php:61\n\
    Stack trace:\n#0 /tmp/tmpnxdax9i2.php(85): test()\n#1 {main}\n  thrown in /tmp/tmpnxdax9i2.php\
    \ on line 61\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function which takes a string representing a file's\
    \ name, and returns\n// 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n// A file's name is considered to be valid if and only if all the\
    \ following conditions \n// are met:\n// - There should not be more than three\
    \ digits ('0'-'9') in the file's name.\n// - The file's name contains exactly\
    \ one dot '.'\n// - The substring before the dot should not be empty, and it starts\
    \ with a letter from \n// the latin alphapet ('a'-'z' and 'A'-'Z').\n// - The\
    \ substring after the dot should be one of these: ['txt', 'exe', 'dll']\n// Examples:\n\
    // file_name_check(\"example.txt\") # => 'Yes'\n// file_name_check(\"1example.dll\"\
    ) # => 'No' (the name should start with a latin alphapet letter)\nfunction file_name_check($file_name)\
    \ {\n    $file_name_arr = explode('.', $file_name);\n    $file_name_arr_count\
    \ = count($file_name_arr);\n    $file_name_arr_first = $file_name_arr[0];\n  \
    \  $file_name_arr_last = $file_name_arr[$file_name_arr_count - 1];\n    $file_name_arr_first_count\
    \ = strlen($file_name_arr_first);\n    $file_name_arr_last_count = strlen($file_name_arr_last);\n\
    \    $file_name_arr_first_count_digit = 0;\n    $file_name_arr_first_count_letter\
    \ = 0;\n    $file_name_arr_last_count_digit = 0;\n    $file_name_arr_last_count_letter\
    \ = 0;\n    $file_name_arr_first_count_digit_max = 3;\n    $file_name_arr_last_count_digit_max\
    \ = 3;\n    $file_name_arr_last_arr = ['txt', 'exe', 'dll'];\n    $file_name_arr_last_arr_count\
    \ = count($file_name_arr_last_arr);\n    $file_name_arr_last_arr_count_max = 3;\n\
    \    $file_name_arr_last_arr_count_min = 1;\n    $file_name_arr_last_arr_count_max_min\
    \ = $file_name_arr_last_arr_count_max - $file_name_arr_last_arr_count_min;\n \
    \   $file_name_arr_last_arr_count_max_min_count = 0;\n    $file_name_arr_last_arr_count_max_min_count_max\
    \ = $file_name_arr_last_arr_count_max_min - $file_name_arr_last_arr_count_max_min_count;\n\
    \    $file_name_arr_last_arr_count_max_min_count_max_min = $file_name_arr_last_arr_count_max_min_count_max\
    \ - $file_name_arr_\nfunction candidate(...$args) {\n    return file_name_check(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"example.txt\") !== \"Yes\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"1example.dll\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    s1sdf3.asd\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    K.dll\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    MY16FILE3.exe\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"His12FILE94.exe\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"_Y.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"?aREYA.exe\") !== \"No\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"/this_is_valid.dll\") !==\
    \ \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"this_is_valid.wow\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_valid.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"this_is_valid.txtexe\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#this2_i4s_5valid.ten\") !== \"No\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"@this1_is6_valid.exe\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_12valid.6exe4.txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"all.exe.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"I563_No.exe\") !== \"Yes\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Is3youfault.txt\") !== \"\
    Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"no_one#knows.dll\"\
    ) !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1I563_Yes3.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"I563_Yes3.txtt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"final..txt\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"final132\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"_f4indsartal132.\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\".txt\") !== \"No\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"s.\") !== \"\
    No\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Parse error:  syntax error, unexpected token \"function\" in /tmp/tmpa_64e0pk.php\
    \ on line 35\n"
  exit_code: 255
  status: SyntaxError
- program: "<?php\n// Create a function which takes a string representing a file's\
    \ name, and returns\n// 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n// A file's name is considered to be valid if and only if all the\
    \ following conditions \n// are met:\n// - There should not be more than three\
    \ digits ('0'-'9') in the file's name.\n// - The file's name contains exactly\
    \ one dot '.'\n// - The substring before the dot should not be empty, and it starts\
    \ with a letter from \n// the latin alphapet ('a'-'z' and 'A'-'Z').\n// - The\
    \ substring after the dot should be one of these: ['txt', 'exe', 'dll']\n// Examples:\n\
    // file_name_check(\"example.txt\") # => 'Yes'\n// file_name_check(\"1example.dll\"\
    ) # => 'No' (the name should start with a latin alphapet letter)\nfunction file_name_check($file_name)\
    \ {\n    $file_name_arr = explode('.', $file_name);\n    $file_name_arr_len =\
    \ count($file_name_arr);\n    if ($file_name_arr_len != 2) {\n        return 'No';\n\
    \    }\n    $file_name_arr_0 = $file_name_arr[0];\n    $file_name_arr_1 = $file_name_arr[1];\n\
    \    if (!preg_match('/^[a-zA-Z]/', $file_name_arr_0)) {\n        return 'No';\n\
    \    }\n    if (!preg_match('/^[a-zA-Z0-9]*$/', $file_name_arr_0)) {\n       \
    \ return 'No';\n    }\n    if (preg_match('/[0-9]{4}/', $file_name_arr_0)) {\n\
    \        return 'No';\n    }\n    if (!preg_match('/^(txt|exe|dll)$/', $file_name_arr_1))\
    \ {\n        return 'No';\n    }\n    return 'Yes';\n}\n\nfunction candidate(...$args)\
    \ {\n    return file_name_check(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(\"example.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"1example.dll\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"s1sdf3.asd\") !== \"No\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"K.dll\") !== \"Yes\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"MY16FILE3.exe\"\
    ) !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    His12FILE94.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(\"_Y.txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"?aREYA.exe\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"/this_is_valid.dll\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"this_is_valid.wow\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_valid.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"this_is_valid.txtexe\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#this2_i4s_5valid.ten\") !== \"No\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"@this1_is6_valid.exe\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_12valid.6exe4.txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"all.exe.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"I563_No.exe\") !== \"Yes\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Is3youfault.txt\") !== \"\
    Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"no_one#knows.dll\"\
    ) !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1I563_Yes3.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"I563_Yes3.txtt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"final..txt\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"final132\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"_f4indsartal132.\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\".txt\") !== \"No\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"s.\") !== \"\
    No\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpc6dj6jfg.php:47\n\
    Stack trace:\n#0 /tmp/tmpc6dj6jfg.php(70): test()\n#1 {main}\n  thrown in /tmp/tmpc6dj6jfg.php\
    \ on line 47\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function which takes a string representing a file's\
    \ name, and returns\n// 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n// A file's name is considered to be valid if and only if all the\
    \ following conditions \n// are met:\n// - There should not be more than three\
    \ digits ('0'-'9') in the file's name.\n// - The file's name contains exactly\
    \ one dot '.'\n// - The substring before the dot should not be empty, and it starts\
    \ with a letter from \n// the latin alphapet ('a'-'z' and 'A'-'Z').\n// - The\
    \ substring after the dot should be one of these: ['txt', 'exe', 'dll']\n// Examples:\n\
    // file_name_check(\"example.txt\") # => 'Yes'\n// file_name_check(\"1example.dll\"\
    ) # => 'No' (the name should start with a latin alphapet letter)\nfunction file_name_check($file_name)\
    \ {\n    $file_name_arr = explode('.', $file_name);\n    $file_name_arr_count\
    \ = count($file_name_arr);\n    if ($file_name_arr_count != 2) {\n        return\
    \ 'No';\n    }\n    $file_name_arr_first = $file_name_arr[0];\n    $file_name_arr_second\
    \ = $file_name_arr[1];\n    if (preg_match('/[^a-zA-Z]/', $file_name_arr_first))\
    \ {\n        return 'No';\n    }\n    if (preg_match('/[0-9]/', $file_name_arr_first))\
    \ {\n        return 'No';\n    }\n    if (!in_array($file_name_arr_second, ['txt',\
    \ 'exe', 'dll'])) {\n        return 'No';\n    }\n    return 'Yes';\n}\necho file_name_check(\"\
    example.txt\") . PHP_EOL;\necho file_name_check(\"1example.dll\") . PHP_EOL;\n\
    echo file_name_check(\"1example.txt\") . PHP_EOL;\necho file_name_check(\"example.exe\"\
    ) . PHP_EOL;\necho file_name_check(\"example.dll\") . PHP_EOL;\necho file_name_check(\"\
    example.txt.exe\") . PHP_EOL;\necho file_name_check(\"example.txt.dll\") . PHP_EOL;\n\
    echo file_name_check(\"example.txt.txt\") . PHP_EOL;\necho file_name_check(\"\
    example.txt.exe.dll\") . PHP_EOL;\necho file_name_check(\"example.txt.exe.txt\"\
    ) . PHP_EOL;\necho file_name_check(\"example.txt.exe.exe\") . PHP_EOL;\necho file_name_check(\"\
    example.txt.exe.exe.txt\") . PHP_EOL;\necho file_name_check(\"example.txt.exe.exe.exe\"\
    ) . PHP_EOL;\necho file_name_check(\"example.txt.exe.exe.exe.txt\") . PHP_EOL\n\
    function candidate(...$args) {\n    return file_name_check(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"example.txt\") !== \"Yes\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"1example.dll\") !== \"No\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"s1sdf3.asd\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    K.dll\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    MY16FILE3.exe\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"His12FILE94.exe\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"_Y.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"?aREYA.exe\") !== \"No\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"/this_is_valid.dll\") !==\
    \ \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"this_is_valid.wow\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_valid.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"this_is_valid.txtexe\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#this2_i4s_5valid.ten\") !== \"No\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"@this1_is6_valid.exe\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_12valid.6exe4.txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"all.exe.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"I563_No.exe\") !== \"Yes\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Is3youfault.txt\") !== \"\
    Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"no_one#knows.dll\"\
    ) !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1I563_Yes3.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"I563_Yes3.txtt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"final..txt\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"final132\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"_f4indsartal132.\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\".txt\") !== \"No\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"s.\") !== \"\
    No\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Parse error:  syntax error, unexpected token \"function\", expecting\
    \ \",\" or \";\" in /tmp/tmp84paf263.php on line 47\n"
  exit_code: 255
  status: SyntaxError
- program: "<?php\n// Create a function which takes a string representing a file's\
    \ name, and returns\n// 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n// A file's name is considered to be valid if and only if all the\
    \ following conditions \n// are met:\n// - There should not be more than three\
    \ digits ('0'-'9') in the file's name.\n// - The file's name contains exactly\
    \ one dot '.'\n// - The substring before the dot should not be empty, and it starts\
    \ with a letter from \n// the latin alphapet ('a'-'z' and 'A'-'Z').\n// - The\
    \ substring after the dot should be one of these: ['txt', 'exe', 'dll']\n// Examples:\n\
    // file_name_check(\"example.txt\") # => 'Yes'\n// file_name_check(\"1example.dll\"\
    ) # => 'No' (the name should start with a latin alphapet letter)\nfunction file_name_check($file_name)\
    \ {\n    $file_name_array = explode('.', $file_name);\n    $file_name_extension\
    \ = $file_name_array[1];\n    $file_name_without_extension = $file_name_array[0];\n\
    \    $file_name_without_extension_array = str_split($file_name_without_extension);\n\
    \    $file_name_without_extension_array_count = count($file_name_without_extension_array);\n\
    \    $file_name_without_extension_array_count_digit = 0;\n    $file_name_without_extension_array_count_letter\
    \ = 0;\n    for ($i = 0; $i < $file_name_without_extension_array_count; $i++)\
    \ {\n        if (is_numeric($file_name_without_extension_array[$i])) {\n     \
    \       $file_name_without_extension_array_count_digit++;\n        } else {\n\
    \            $file_name_without_extension_array_count_letter++;\n        }\n \
    \   }\n    if ($file_name_without_extension_array_count_digit > 3) {\n       \
    \ return 'No';\n    } elseif ($file_name_without_extension_array_count_letter\
    \ == 0) {\n        return 'No';\n    } elseif ($file_name_without_extension_array_count_letter\
    \ == 1) {\n        return 'No';\n    } elseif ($file_name_without_extension_array_count_letter\
    \ > 1) {\n        if ($file_name_extension == 'txt' || $file_name_extension ==\
    \ 'exe' || $file_name_extension == 'dll') {\n            return 'Yes';\n     \
    \   } else {\n            return 'No';\n        }\n    }\n}\n\nfunction candidate(...$args)\
    \ {\n    return file_name_check(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(\"example.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"1example.dll\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"s1sdf3.asd\") !== \"No\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"K.dll\") !== \"Yes\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"MY16FILE3.exe\"\
    ) !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    His12FILE94.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(\"_Y.txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"?aREYA.exe\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"/this_is_valid.dll\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"this_is_valid.wow\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_valid.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"this_is_valid.txtexe\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#this2_i4s_5valid.ten\") !== \"No\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"@this1_is6_valid.exe\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_12valid.6exe4.txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"all.exe.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"I563_No.exe\") !== \"Yes\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Is3youfault.txt\") !== \"\
    Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"no_one#knows.dll\"\
    ) !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1I563_Yes3.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"I563_Yes3.txtt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"final..txt\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"final132\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"_f4indsartal132.\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\".txt\") !== \"No\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"s.\") !== \"\
    No\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpdx3bpd0u.php:50\n\
    Stack trace:\n#0 /tmp/tmpdx3bpd0u.php(77): test()\n#1 {main}\n  thrown in /tmp/tmpdx3bpd0u.php\
    \ on line 50\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function which takes a string representing a file's\
    \ name, and returns\n// 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n// A file's name is considered to be valid if and only if all the\
    \ following conditions \n// are met:\n// - There should not be more than three\
    \ digits ('0'-'9') in the file's name.\n// - The file's name contains exactly\
    \ one dot '.'\n// - The substring before the dot should not be empty, and it starts\
    \ with a letter from \n// the latin alphapet ('a'-'z' and 'A'-'Z').\n// - The\
    \ substring after the dot should be one of these: ['txt', 'exe', 'dll']\n// Examples:\n\
    // file_name_check(\"example.txt\") # => 'Yes'\n// file_name_check(\"1example.dll\"\
    ) # => 'No' (the name should start with a latin alphapet letter)\nfunction file_name_check($file_name)\
    \ {\n    $extensions = ['txt', 'exe', 'dll'];\n    $name_parts = explode('.',\
    \ $file_name);\n    if (count($name_parts) != 2) {\n        return 'No';\n   \
    \ }\n    if (!in_array($name_parts[1], $extensions)) {\n        return 'No';\n\
    \    }\n    if (preg_match('/[^a-zA-Z]/', $name_parts[0])) {\n        return 'No';\n\
    \    }\n    if (preg_match('/[0-9]{4,}/', $name_parts[0])) {\n        return 'No';\n\
    \    }\n    return 'Yes';\n}\n\nfunction candidate(...$args) {\n    return file_name_check(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"example.txt\") !== \"Yes\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"1example.dll\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    s1sdf3.asd\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    K.dll\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    MY16FILE3.exe\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"His12FILE94.exe\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"_Y.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"?aREYA.exe\") !== \"No\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"/this_is_valid.dll\") !==\
    \ \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"this_is_valid.wow\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_valid.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"this_is_valid.txtexe\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#this2_i4s_5valid.ten\") !== \"No\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"@this1_is6_valid.exe\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_12valid.6exe4.txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"all.exe.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"I563_No.exe\") !== \"Yes\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Is3youfault.txt\") !== \"\
    Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"no_one#knows.dll\"\
    ) !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1I563_Yes3.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"I563_Yes3.txtt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"final..txt\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"final132\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"_f4indsartal132.\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\".txt\") !== \"No\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"s.\") !== \"\
    No\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpydlm38be.php:41\n\
    Stack trace:\n#0 /tmp/tmpydlm38be.php(65): test()\n#1 {main}\n  thrown in /tmp/tmpydlm38be.php\
    \ on line 41\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function which takes a string representing a file's\
    \ name, and returns\n// 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n// A file's name is considered to be valid if and only if all the\
    \ following conditions \n// are met:\n// - There should not be more than three\
    \ digits ('0'-'9') in the file's name.\n// - The file's name contains exactly\
    \ one dot '.'\n// - The substring before the dot should not be empty, and it starts\
    \ with a letter from \n// the latin alphapet ('a'-'z' and 'A'-'Z').\n// - The\
    \ substring after the dot should be one of these: ['txt', 'exe', 'dll']\n// Examples:\n\
    // file_name_check(\"example.txt\") # => 'Yes'\n// file_name_check(\"1example.dll\"\
    ) # => 'No' (the name should start with a latin alphapet letter)\nfunction file_name_check($file_name)\
    \ {\n    $file_name_arr = explode('.', $file_name);\n    $file_name_arr_count\
    \ = count($file_name_arr);\n    if ($file_name_arr_count == 2) {\n        $file_name_arr_first\
    \ = $file_name_arr[0];\n        $file_name_arr_last = $file_name_arr[1];\n   \
    \     $file_name_arr_first_count = strlen($file_name_arr_first);\n        $file_name_arr_last_count\
    \ = strlen($file_name_arr_last);\n        $file_name_arr_first_first_char = $file_name_arr_first[0];\n\
    \        $file_name_arr_last_first_char = $file_name_arr_last[0];\n        $file_name_arr_first_first_char_ascii\
    \ = ord($file_name_arr_first_first_char);\n        $file_name_arr_last_first_char_ascii\
    \ = ord($file_name_arr_last_first_char);\n        $file_name_arr_first_first_char_ascii_lower\
    \ = $file_name_arr_first_first_char_ascii + 32;\n        $file_name_arr_last_first_char_ascii_lower\
    \ = $file_name_arr_last_first_char_ascii + 32;\n        $file_name_arr_first_first_char_ascii_lower_char\
    \ = chr($file_name_arr_first_first_char_ascii_lower);\n        $file_name_arr_last_first_char_ascii_lower_char\
    \ = chr($file_name_arr_last_first_char_ascii_lower);\n        $file_name_arr_first_first_char_ascii_lower_char_ascii\
    \ = ord($file_name_arr_first_first_char_ascii_lower_char);\n        $file_name_arr_last_first_char_ascii_lower_char_ascii\
    \ = ord($file_name_arr_last_\nfunction candidate(...$args) {\n    return file_name_check(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"example.txt\") !== \"Yes\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"1example.dll\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    s1sdf3.asd\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    K.dll\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    MY16FILE3.exe\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"His12FILE94.exe\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"_Y.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"?aREYA.exe\") !== \"No\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"/this_is_valid.dll\") !==\
    \ \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"this_is_valid.wow\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_valid.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"this_is_valid.txtexe\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#this2_i4s_5valid.ten\") !== \"No\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"@this1_is6_valid.exe\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_12valid.6exe4.txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"all.exe.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"I563_No.exe\") !== \"Yes\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Is3youfault.txt\") !== \"\
    Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"no_one#knows.dll\"\
    ) !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1I563_Yes3.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"I563_Yes3.txtt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"final..txt\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"final132\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"_f4indsartal132.\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\".txt\") !== \"No\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"s.\") !== \"\
    No\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Parse error:  syntax error, unexpected token \"function\", expecting\
    \ \")\" in /tmp/tmpdxfbejr5.php on line 32\n"
  exit_code: 255
  status: SyntaxError
- program: "<?php\n// Create a function which takes a string representing a file's\
    \ name, and returns\n// 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n// A file's name is considered to be valid if and only if all the\
    \ following conditions \n// are met:\n// - There should not be more than three\
    \ digits ('0'-'9') in the file's name.\n// - The file's name contains exactly\
    \ one dot '.'\n// - The substring before the dot should not be empty, and it starts\
    \ with a letter from \n// the latin alphapet ('a'-'z' and 'A'-'Z').\n// - The\
    \ substring after the dot should be one of these: ['txt', 'exe', 'dll']\n// Examples:\n\
    // file_name_check(\"example.txt\") # => 'Yes'\n// file_name_check(\"1example.dll\"\
    ) # => 'No' (the name should start with a latin alphapet letter)\nfunction file_name_check($file_name)\
    \ {\n    $file_name_array = explode('.', $file_name);\n    $file_name_array_length\
    \ = count($file_name_array);\n    $file_name_array_first_element = $file_name_array[0];\n\
    \    $file_name_array_first_element_length = strlen($file_name_array_first_element);\n\
    \    $file_name_array_second_element = $file_name_array[1];\n    $file_name_array_second_element_length\
    \ = strlen($file_name_array_second_element);\n    $file_name_array_second_element_array\
    \ = ['txt', 'exe', 'dll'];\n    $file_name_array_second_element_array_length =\
    \ count($file_name_array_second_element_array);\n    $file_name_array_first_element_first_letter\
    \ = substr($file_name_array_first_element, 0, 1);\n    $file_name_array_first_element_first_letter_ascii\
    \ = ord($file_name_array_first_element_first_letter);\n    $file_name_array_first_element_first_letter_ascii_lower_case\
    \ = $file_name_array_first_element_first_letter_ascii >= 97 && $file_name_array_first_element_first_letter_ascii\
    \ <= 122;\n    $file_name_array_first_element_first_letter_ascii_upper_case =\
    \ $file_name_array_first_element_first_letter_ascii >= 65 && $file_name_array_first_element_first_letter_ascii\
    \ <= 90;\n    $file_name_array_first_element_first_letter_ascii_valid = $file_name_array_first_element_first_letter_ascii_lower_case\
    \ || $file_name_array_first_element_first_letter_ascii_upper_case;\n    $file_name_array_first_element_first_letter_ascii_valid_length\
    \ = $file_name_array_first_element_first_letter_ascii_valid &&\nfunction candidate(...$args)\
    \ {\n    return file_name_check(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(\"example.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"1example.dll\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"s1sdf3.asd\") !== \"No\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"K.dll\") !== \"Yes\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"MY16FILE3.exe\"\
    ) !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    His12FILE94.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(\"_Y.txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"?aREYA.exe\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"/this_is_valid.dll\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"this_is_valid.wow\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_valid.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"this_is_valid.txtexe\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#this2_i4s_5valid.ten\") !== \"No\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"@this1_is6_valid.exe\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_12valid.6exe4.txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"all.exe.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"I563_No.exe\") !== \"Yes\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Is3youfault.txt\") !== \"\
    Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"no_one#knows.dll\"\
    ) !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1I563_Yes3.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"I563_Yes3.txtt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"final..txt\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"final132\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"_f4indsartal132.\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\".txt\") !== \"No\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"s.\") !== \"\
    No\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Parse error:  syntax error, unexpected identifier \"candidate\", expecting\
    \ \"(\" in /tmp/tmp97pwh316.php on line 29\n"
  exit_code: 255
  status: SyntaxError
- program: "<?php\n// Create a function which takes a string representing a file's\
    \ name, and returns\n// 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n// A file's name is considered to be valid if and only if all the\
    \ following conditions \n// are met:\n// - There should not be more than three\
    \ digits ('0'-'9') in the file's name.\n// - The file's name contains exactly\
    \ one dot '.'\n// - The substring before the dot should not be empty, and it starts\
    \ with a letter from \n// the latin alphapet ('a'-'z' and 'A'-'Z').\n// - The\
    \ substring after the dot should be one of these: ['txt', 'exe', 'dll']\n// Examples:\n\
    // file_name_check(\"example.txt\") # => 'Yes'\n// file_name_check(\"1example.dll\"\
    ) # => 'No' (the name should start with a latin alphapet letter)\nfunction file_name_check($file_name)\
    \ {\n    $file_name_array = explode('.', $file_name);\n    if (count($file_name_array)\
    \ != 2) {\n        return 'No';\n    }\n    $file_name_array_0 = $file_name_array[0];\n\
    \    $file_name_array_1 = $file_name_array[1];\n    if (preg_match('/[a-zA-Z]/',\
    \ $file_name_array_0[0]) == 0) {\n        return 'No';\n    }\n    if (preg_match('/[0-9]/',\
    \ $file_name_array_0) > 3) {\n        return 'No';\n    }\n    if ($file_name_array_1\
    \ != 'txt' && $file_name_array_1 != 'exe' && $file_name_array_1 != 'dll') {\n\
    \        return 'No';\n    }\n    return 'Yes';\n}\n\nfunction candidate(...$args)\
    \ {\n    return file_name_check(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(\"example.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"1example.dll\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"s1sdf3.asd\") !== \"No\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"K.dll\") !== \"Yes\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"MY16FILE3.exe\"\
    ) !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    His12FILE94.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(\"_Y.txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"?aREYA.exe\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"/this_is_valid.dll\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"this_is_valid.wow\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_valid.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"this_is_valid.txtexe\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#this2_i4s_5valid.ten\") !== \"No\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"@this1_is6_valid.exe\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_12valid.6exe4.txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"all.exe.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"I563_No.exe\") !== \"Yes\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Is3youfault.txt\") !== \"\
    Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"no_one#knows.dll\"\
    ) !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1I563_Yes3.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"I563_Yes3.txtt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"final..txt\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"final132\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"_f4indsartal132.\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\".txt\") !== \"No\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"s.\") !== \"\
    No\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmprviuv6wu.php:43\n\
    Stack trace:\n#0 /tmp/tmprviuv6wu.php(66): test()\n#1 {main}\n  thrown in /tmp/tmprviuv6wu.php\
    \ on line 43\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function which takes a string representing a file's\
    \ name, and returns\n// 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n// A file's name is considered to be valid if and only if all the\
    \ following conditions \n// are met:\n// - There should not be more than three\
    \ digits ('0'-'9') in the file's name.\n// - The file's name contains exactly\
    \ one dot '.'\n// - The substring before the dot should not be empty, and it starts\
    \ with a letter from \n// the latin alphapet ('a'-'z' and 'A'-'Z').\n// - The\
    \ substring after the dot should be one of these: ['txt', 'exe', 'dll']\n// Examples:\n\
    // file_name_check(\"example.txt\") # => 'Yes'\n// file_name_check(\"1example.dll\"\
    ) # => 'No' (the name should start with a latin alphapet letter)\nfunction file_name_check($file_name)\
    \ {\n    $file_name_arr = explode('.', $file_name);\n    if (count($file_name_arr)\
    \ != 2) {\n        return 'No';\n    }\n    $file_name_arr[0] = preg_replace('/[0-9]/',\
    \ '', $file_name_arr[0]);\n    if (strlen($file_name_arr[0]) == 0 || !preg_match('/[a-zA-Z]/',\
    \ $file_name_arr[0])) {\n        return 'No';\n    }\n    if (!in_array($file_name_arr[1],\
    \ ['txt', 'exe', 'dll'])) {\n        return 'No';\n    }\n    return 'Yes';\n\
    }\n\nfunction candidate(...$args) {\n    return file_name_check(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(\"example.txt\") !== \"Yes\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"1example.dll\") !==\
    \ \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"s1sdf3.asd\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    K.dll\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    MY16FILE3.exe\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"His12FILE94.exe\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"_Y.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"?aREYA.exe\") !== \"No\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"/this_is_valid.dll\") !==\
    \ \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"this_is_valid.wow\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_valid.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"this_is_valid.txtexe\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#this2_i4s_5valid.ten\") !== \"No\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"@this1_is6_valid.exe\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_12valid.6exe4.txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"all.exe.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"I563_No.exe\") !== \"Yes\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Is3youfault.txt\") !== \"\
    Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"no_one#knows.dll\"\
    ) !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1I563_Yes3.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"I563_Yes3.txtt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"final..txt\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"final132\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"_f4indsartal132.\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\".txt\") !== \"No\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"s.\") !== \"\
    No\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp0_ct59vd.php:35\n\
    Stack trace:\n#0 /tmp/tmp0_ct59vd.php(62): test()\n#1 {main}\n  thrown in /tmp/tmp0_ct59vd.php\
    \ on line 35\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function which takes a string representing a file's\
    \ name, and returns\n// 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n// A file's name is considered to be valid if and only if all the\
    \ following conditions \n// are met:\n// - There should not be more than three\
    \ digits ('0'-'9') in the file's name.\n// - The file's name contains exactly\
    \ one dot '.'\n// - The substring before the dot should not be empty, and it starts\
    \ with a letter from \n// the latin alphapet ('a'-'z' and 'A'-'Z').\n// - The\
    \ substring after the dot should be one of these: ['txt', 'exe', 'dll']\n// Examples:\n\
    // file_name_check(\"example.txt\") # => 'Yes'\n// file_name_check(\"1example.dll\"\
    ) # => 'No' (the name should start with a latin alphapet letter)\nfunction file_name_check($file_name)\
    \ {\n    $file_name_array = explode('.', $file_name);\n    $file_name_array_count\
    \ = count($file_name_array);\n    if ($file_name_array_count != 2) {\n       \
    \ return 'No';\n    }\n    $first_part = $file_name_array[0];\n    $second_part\
    \ = $file_name_array[1];\n    $first_part_length = strlen($first_part);\n    $second_part_length\
    \ = strlen($second_part);\n    if ($first_part_length == 0 || $second_part_length\
    \ == 0) {\n        return 'No';\n    }\n    if (preg_match('/[0-9]/', $first_part))\
    \ {\n        return 'No';\n    }\n    if (preg_match_all('/[0-9]/', $first_part)\
    \ > 3) {\n        return 'No';\n    }\n    if ($second_part != 'txt' && $second_part\
    \ != 'exe' && $second_part != 'dll') {\n        return 'No';\n    }\n    return\
    \ 'Yes';\n}\n\necho file_name_check(\"example.txt\") . \"\\n\";\necho file_name_check(\"\
    1example.dll\") . \"\\n\";\necho file_name_check(\"example.exe\") . \"\\n\";\n\
    echo file_name_check(\"example.exe.txt\") . \"\\n\";\necho file_name_check(\"\
    example.txt.exe\") . \"\\n\";\necho file_name_check(\"example.txt.exe.txt\") .\
    \ \"\\n\";\necho file_name_check(\"example.txt.exe.txt.exe\") . \"\\n\";\necho\
    \ file_name_check(\"example.txt.exe.txt.exe.txt\") . \"\\n\";\necho file_name_check(\"\
    example.txt.exe.txt.exe.txt.exe\") . \"\\n\";\necho file_name_check(\"example.txt.exe.txt.exe.txt.exe.txt\"\
    ) . \"\\n\";\necho file_name_check(\"example.txt.exe.txt.exe.txt.exe.txt.exe\"\
    ) . \"\\n\";\necho file_\nfunction candidate(...$args) {\n    return file_name_check(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"example.txt\") !== \"Yes\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"1example.dll\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    s1sdf3.asd\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    K.dll\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    MY16FILE3.exe\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"His12FILE94.exe\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"_Y.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"?aREYA.exe\") !== \"No\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"/this_is_valid.dll\") !==\
    \ \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"this_is_valid.wow\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_valid.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"this_is_valid.txtexe\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#this2_i4s_5valid.ten\") !== \"No\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"@this1_is6_valid.exe\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_12valid.6exe4.txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"all.exe.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"I563_No.exe\") !== \"Yes\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Is3youfault.txt\") !== \"\
    Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"no_one#knows.dll\"\
    ) !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1I563_Yes3.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"I563_Yes3.txtt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"final..txt\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"final132\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"_f4indsartal132.\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\".txt\") !== \"No\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"s.\") !== \"\
    No\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Parse error:  syntax error, unexpected token \"function\", expecting\
    \ \",\" or \";\" in /tmp/tmptc4s05_6.php on line 51\n"
  exit_code: 255
  status: SyntaxError
- program: "<?php\n// Create a function which takes a string representing a file's\
    \ name, and returns\n// 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n// A file's name is considered to be valid if and only if all the\
    \ following conditions \n// are met:\n// - There should not be more than three\
    \ digits ('0'-'9') in the file's name.\n// - The file's name contains exactly\
    \ one dot '.'\n// - The substring before the dot should not be empty, and it starts\
    \ with a letter from \n// the latin alphapet ('a'-'z' and 'A'-'Z').\n// - The\
    \ substring after the dot should be one of these: ['txt', 'exe', 'dll']\n// Examples:\n\
    // file_name_check(\"example.txt\") # => 'Yes'\n// file_name_check(\"1example.dll\"\
    ) # => 'No' (the name should start with a latin alphapet letter)\nfunction file_name_check($file_name)\
    \ {\n    $file_name_array = explode('.', $file_name);\n    if (count($file_name_array)\
    \ != 2) {\n        return 'No';\n    }\n    if (!preg_match('/^[a-zA-Z]/', $file_name_array[0]))\
    \ {\n        return 'No';\n    }\n    if (!preg_match('/^[0-9]{0,3}$/', $file_name_array[0]))\
    \ {\n        return 'No';\n    }\n    if (!preg_match('/^(txt|exe|dll)$/', $file_name_array[1]))\
    \ {\n        return 'No';\n    }\n    return 'Yes';\n}\n\nfunction candidate(...$args)\
    \ {\n    return file_name_check(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(\"example.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"1example.dll\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"s1sdf3.asd\") !== \"No\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"K.dll\") !== \"Yes\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"MY16FILE3.exe\"\
    ) !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    His12FILE94.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(\"_Y.txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"?aREYA.exe\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"/this_is_valid.dll\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"this_is_valid.wow\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_valid.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"this_is_valid.txtexe\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#this2_i4s_5valid.ten\") !== \"No\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"@this1_is6_valid.exe\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_12valid.6exe4.txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"all.exe.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"I563_No.exe\") !== \"Yes\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Is3youfault.txt\") !== \"\
    Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"no_one#knows.dll\"\
    ) !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1I563_Yes3.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"I563_Yes3.txtt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"final..txt\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"final132\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"_f4indsartal132.\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\".txt\") !== \"No\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"s.\") !== \"\
    No\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp_w6xvlnd.php:36\n\
    Stack trace:\n#0 /tmp/tmp_w6xvlnd.php(64): test()\n#1 {main}\n  thrown in /tmp/tmp_w6xvlnd.php\
    \ on line 36\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function which takes a string representing a file's\
    \ name, and returns\n// 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n// A file's name is considered to be valid if and only if all the\
    \ following conditions \n// are met:\n// - There should not be more than three\
    \ digits ('0'-'9') in the file's name.\n// - The file's name contains exactly\
    \ one dot '.'\n// - The substring before the dot should not be empty, and it starts\
    \ with a letter from \n// the latin alphapet ('a'-'z' and 'A'-'Z').\n// - The\
    \ substring after the dot should be one of these: ['txt', 'exe', 'dll']\n// Examples:\n\
    // file_name_check(\"example.txt\") # => 'Yes'\n// file_name_check(\"1example.dll\"\
    ) # => 'No' (the name should start with a latin alphapet letter)\nfunction file_name_check($file_name)\
    \ {\n    $file_name_array = explode('.', $file_name);\n    if (count($file_name_array)\
    \ != 2) {\n        return 'No';\n    }\n    $name = $file_name_array[0];\n   \
    \ $extension = $file_name_array[1];\n    if (preg_match('/[0-9]{4,}/', $name))\
    \ {\n        return 'No';\n    }\n    if (!preg_match('/^[a-zA-Z]/', $name)) {\n\
    \        return 'No';\n    }\n    if (!in_array($extension, ['txt', 'exe', 'dll']))\
    \ {\n        return 'No';\n    }\n    return 'Yes';\n}\n\nfunction candidate(...$args)\
    \ {\n    return file_name_check(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(\"example.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"1example.dll\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"s1sdf3.asd\") !== \"No\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"K.dll\") !== \"Yes\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"MY16FILE3.exe\"\
    ) !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    His12FILE94.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(\"_Y.txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"?aREYA.exe\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"/this_is_valid.dll\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"this_is_valid.wow\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_valid.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"this_is_valid.txtexe\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#this2_i4s_5valid.ten\") !== \"No\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"@this1_is6_valid.exe\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_12valid.6exe4.txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"all.exe.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"I563_No.exe\") !== \"Yes\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Is3youfault.txt\") !== \"\
    Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"no_one#knows.dll\"\
    ) !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1I563_Yes3.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"I563_Yes3.txtt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"final..txt\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"final132\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"_f4indsartal132.\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\".txt\") !== \"No\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"s.\") !== \"\
    No\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpwh1gr57k.php:43\n\
    Stack trace:\n#0 /tmp/tmpwh1gr57k.php(66): test()\n#1 {main}\n  thrown in /tmp/tmpwh1gr57k.php\
    \ on line 43\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function which takes a string representing a file's\
    \ name, and returns\n// 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n// A file's name is considered to be valid if and only if all the\
    \ following conditions \n// are met:\n// - There should not be more than three\
    \ digits ('0'-'9') in the file's name.\n// - The file's name contains exactly\
    \ one dot '.'\n// - The substring before the dot should not be empty, and it starts\
    \ with a letter from \n// the latin alphapet ('a'-'z' and 'A'-'Z').\n// - The\
    \ substring after the dot should be one of these: ['txt', 'exe', 'dll']\n// Examples:\n\
    // file_name_check(\"example.txt\") # => 'Yes'\n// file_name_check(\"1example.dll\"\
    ) # => 'No' (the name should start with a latin alphapet letter)\nfunction file_name_check($file_name)\
    \ {\n    $file_name_array = explode('.', $file_name);\n    $file_name_array_length\
    \ = count($file_name_array);\n    $file_name_array_length_before_dot = $file_name_array_length\
    \ - 1;\n    $file_name_array_length_after_dot = $file_name_array_length - 2;\n\
    \    $file_name_array_length_before_dot_length = strlen($file_name_array[$file_name_array_length_before_dot]);\n\
    \    $file_name_array_length_after_dot_length = strlen($file_name_array[$file_name_array_length_after_dot]);\n\
    \    $file_name_array_length_before_dot_length_count_number = 0;\n    $file_name_array_length_after_dot_length_count_number\
    \ = 0;\n    $file_name_array_length_before_dot_length_count_letter = 0;\n    $file_name_array_length_after_dot_length_count_letter\
    \ = 0;\n    $file_name_array_length_before_dot_length_count_dot = 0;\n    $file_name_array_length_after_dot_length_count_dot\
    \ = 0;\n    $file_name_array_length_before_dot_length_count_letter_first = 0;\n\
    \    $file_name_array_length_after_dot_length_count_letter_first = 0;\n    $file_name_array_length_before_dot_length_count_letter_first_upper\
    \ = 0;\n    $file_name_array_length_after_dot_length_count_letter_first_upper\
    \ = 0;\n    $file_name_array_length_before_dot_length_count_letter_first_lower\
    \ = 0;\n    $file_name_array_length_after_dot_length_count_letter_first_lower\
    \ = 0;\n    $file_name_array_length_before_dot_length_count_letter_first_number\
    \ = 0;\n    $file_name_array_length_after_dot_length_count_letter_first\nfunction\
    \ candidate(...$args) {\n    return file_name_check(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"example.txt\") !== \"Yes\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"1example.dll\") !== \"No\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"s1sdf3.asd\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    K.dll\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    MY16FILE3.exe\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"His12FILE94.exe\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"_Y.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"?aREYA.exe\") !== \"No\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"/this_is_valid.dll\") !==\
    \ \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"this_is_valid.wow\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_valid.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"this_is_valid.txtexe\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#this2_i4s_5valid.ten\") !== \"No\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"@this1_is6_valid.exe\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_12valid.6exe4.txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"all.exe.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"I563_No.exe\") !== \"Yes\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Is3youfault.txt\") !== \"\
    Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"no_one#knows.dll\"\
    ) !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1I563_Yes3.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"I563_Yes3.txtt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"final..txt\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"final132\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"_f4indsartal132.\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\".txt\") !== \"No\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"s.\") !== \"\
    No\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Parse error:  syntax error, unexpected token \"function\" in /tmp/tmpn83ylfhq.php\
    \ on line 35\n"
  exit_code: 255
  status: SyntaxError
- program: "<?php\n// Create a function which takes a string representing a file's\
    \ name, and returns\n// 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n// A file's name is considered to be valid if and only if all the\
    \ following conditions \n// are met:\n// - There should not be more than three\
    \ digits ('0'-'9') in the file's name.\n// - The file's name contains exactly\
    \ one dot '.'\n// - The substring before the dot should not be empty, and it starts\
    \ with a letter from \n// the latin alphapet ('a'-'z' and 'A'-'Z').\n// - The\
    \ substring after the dot should be one of these: ['txt', 'exe', 'dll']\n// Examples:\n\
    // file_name_check(\"example.txt\") # => 'Yes'\n// file_name_check(\"1example.dll\"\
    ) # => 'No' (the name should start with a latin alphapet letter)\nfunction file_name_check($file_name)\
    \ {\n    $file_name_arr = explode('.', $file_name);\n    $file_name_arr_count\
    \ = count($file_name_arr);\n    $file_name_arr_count_check = $file_name_arr_count\
    \ == 2 ? true : false;\n    $file_name_arr_count_check_2 = $file_name_arr_count\
    \ == 1 ? true : false;\n    $file_name_arr_count_check_3 = $file_name_arr_count\
    \ == 3 ? true : false;\n    $file_name_arr_count_check_4 = $file_name_arr_count\
    \ == 4 ? true : false;\n    $file_name_arr_count_check_5 = $file_name_arr_count\
    \ == 5 ? true : false;\n    $file_name_arr_count_check_6 = $file_name_arr_count\
    \ == 6 ? true : false;\n    $file_name_arr_count_check_7 = $file_name_arr_count\
    \ == 7 ? true : false;\n    $file_name_arr_count_check_8 = $file_name_arr_count\
    \ == 8 ? true : false;\n    $file_name_arr_count_check_9 = $file_name_arr_count\
    \ == 9 ? true : false;\n    $file_name_arr_count_check_10 = $file_name_arr_count\
    \ == 10 ? true : false;\n    $file_name_arr_count_check_11 = $file_name_arr_count\
    \ == 11 ? true : false;\n    $file_name_arr_count_check_12 = $file_name_arr_count\
    \ == 12 ? true : false;\n    $file_name_arr_count_check_13 = $file_name_arr_count\
    \ == 13 ? true : false;\n    $file_name_arr_count_check_14 = $file_name_arr_count\
    \ == 14 ? true : false;\n    $file_name_arr_count_check_15 = $file_name_arr_count\
    \ == 15 ? true : false;\n    $file_name_arr_count_check_16 = $file_name_arr_count\
    \ == 16 ? true\nfunction candidate(...$args) {\n    return file_name_check(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"example.txt\") !== \"Yes\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"1example.dll\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    s1sdf3.asd\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    K.dll\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    MY16FILE3.exe\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"His12FILE94.exe\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"_Y.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"?aREYA.exe\") !== \"No\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"/this_is_valid.dll\") !==\
    \ \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"this_is_valid.wow\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_valid.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"this_is_valid.txtexe\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#this2_i4s_5valid.ten\") !== \"No\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"@this1_is6_valid.exe\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_12valid.6exe4.txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"all.exe.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"I563_No.exe\") !== \"Yes\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Is3youfault.txt\") !== \"\
    Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"no_one#knows.dll\"\
    ) !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1I563_Yes3.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"I563_Yes3.txtt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"final..txt\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"final132\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"_f4indsartal132.\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\".txt\") !== \"No\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"s.\") !== \"\
    No\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Parse error:  syntax error, unexpected token \"function\" in /tmp/tmpwpu0062q.php\
    \ on line 33\n"
  exit_code: 255
  status: SyntaxError
- program: "<?php\n// Create a function which takes a string representing a file's\
    \ name, and returns\n// 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n// A file's name is considered to be valid if and only if all the\
    \ following conditions \n// are met:\n// - There should not be more than three\
    \ digits ('0'-'9') in the file's name.\n// - The file's name contains exactly\
    \ one dot '.'\n// - The substring before the dot should not be empty, and it starts\
    \ with a letter from \n// the latin alphapet ('a'-'z' and 'A'-'Z').\n// - The\
    \ substring after the dot should be one of these: ['txt', 'exe', 'dll']\n// Examples:\n\
    // file_name_check(\"example.txt\") # => 'Yes'\n// file_name_check(\"1example.dll\"\
    ) # => 'No' (the name should start with a latin alphapet letter)\nfunction file_name_check($file_name)\
    \ {\n    $parts = explode('.', $file_name);\n    if (count($parts) != 2) {\n \
    \       return 'No';\n    }\n    $first_part = $parts[0];\n    $second_part =\
    \ $parts[1];\n    if (preg_match('/[0-9]{4,}/', $first_part)) {\n        return\
    \ 'No';\n    }\n    if (!preg_match('/^[a-zA-Z]/', $first_part)) {\n        return\
    \ 'No';\n    }\n    if (!in_array($second_part, ['txt', 'exe', 'dll'])) {\n  \
    \      return 'No';\n    }\n    return 'Yes';\n}\n\nfunction candidate(...$args)\
    \ {\n    return file_name_check(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(\"example.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"1example.dll\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"s1sdf3.asd\") !== \"No\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"K.dll\") !== \"Yes\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"MY16FILE3.exe\"\
    ) !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    His12FILE94.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(\"_Y.txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"?aREYA.exe\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"/this_is_valid.dll\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"this_is_valid.wow\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_valid.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"this_is_valid.txtexe\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#this2_i4s_5valid.ten\") !== \"No\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"@this1_is6_valid.exe\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_12valid.6exe4.txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"all.exe.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"I563_No.exe\") !== \"Yes\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Is3youfault.txt\") !== \"\
    Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"no_one#knows.dll\"\
    ) !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1I563_Yes3.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"I563_Yes3.txtt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"final..txt\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"final132\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"_f4indsartal132.\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\".txt\") !== \"No\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"s.\") !== \"\
    No\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpgmepbl21.php:43\n\
    Stack trace:\n#0 /tmp/tmpgmepbl21.php(66): test()\n#1 {main}\n  thrown in /tmp/tmpgmepbl21.php\
    \ on line 43\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function which takes a string representing a file's\
    \ name, and returns\n// 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n// A file's name is considered to be valid if and only if all the\
    \ following conditions \n// are met:\n// - There should not be more than three\
    \ digits ('0'-'9') in the file's name.\n// - The file's name contains exactly\
    \ one dot '.'\n// - The substring before the dot should not be empty, and it starts\
    \ with a letter from \n// the latin alphapet ('a'-'z' and 'A'-'Z').\n// - The\
    \ substring after the dot should be one of these: ['txt', 'exe', 'dll']\n// Examples:\n\
    // file_name_check(\"example.txt\") # => 'Yes'\n// file_name_check(\"1example.dll\"\
    ) # => 'No' (the name should start with a latin alphapet letter)\nfunction file_name_check($file_name)\
    \ {\n    $file_name_array = explode('.', $file_name);\n    $file_name_array_length\
    \ = count($file_name_array);\n    if ($file_name_array_length == 2) {\n      \
    \  $file_name_array_length_0 = strlen($file_name_array[0]);\n        $file_name_array_length_1\
    \ = strlen($file_name_array[1]);\n        if ($file_name_array_length_0 > 0 &&\
    \ $file_name_array_length_1 > 0) {\n            $file_name_array_0_array = str_split($file_name_array[0]);\n\
    \            $file_name_array_1_array = str_split($file_name_array[1]);\n    \
    \        $file_name_array_0_array_length = count($file_name_array_0_array);\n\
    \            $file_name_array_1_array_length = count($file_name_array_1_array);\n\
    \            $file_name_array_0_array_0 = $file_name_array_0_array[0];\n     \
    \       $file_name_array_1_array_0 = $file_name_array_1_array[0];\n          \
    \  $file_name_array_0_array_0_ord = ord($file_name_array_0_array_0);\n       \
    \     $file_name_array_1_array_0_ord = ord($file_name_array_1_array_0);\n    \
    \        if ($file_name_array_0_array_0_ord >= 65 && $file_name_array_0_array_0_ord\
    \ <= 90 || $file_name_array_0_array_0_ord >= 97 && $file_name_array_0_array_0_ord\
    \ <= 122) {\n                $file_name_array_0_array_0_is_valid = true;\n   \
    \         } else {\n                $file_name_array_0_array_0_is_valid = false;\n\
    \            }\n            if ($file_name_array_1_array_0_ord >= 65 && $file_name_array_1_array_0_ord\
    \ <= 90 || $\nfunction candidate(...$args) {\n    return file_name_check(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"example.txt\") !== \"Yes\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"1example.dll\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    s1sdf3.asd\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    K.dll\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    MY16FILE3.exe\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"His12FILE94.exe\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"_Y.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"?aREYA.exe\") !== \"No\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"/this_is_valid.dll\") !==\
    \ \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"this_is_valid.wow\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_valid.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"this_is_valid.txtexe\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#this2_i4s_5valid.ten\") !== \"No\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"@this1_is6_valid.exe\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_12valid.6exe4.txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"all.exe.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"I563_No.exe\") !== \"Yes\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Is3youfault.txt\") !== \"\
    Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"no_one#knows.dll\"\
    ) !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1I563_Yes3.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"I563_Yes3.txtt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"final..txt\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"final132\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"_f4indsartal132.\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\".txt\") !== \"No\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"s.\") !== \"\
    No\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Parse error:  syntax error, unexpected token \"function\", expecting\
    \ variable or \"{\" or \"$\" in /tmp/tmpf38017hf.php on line 35\n"
  exit_code: 255
  status: SyntaxError
- program: "<?php\n// Create a function which takes a string representing a file's\
    \ name, and returns\n// 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n// A file's name is considered to be valid if and only if all the\
    \ following conditions \n// are met:\n// - There should not be more than three\
    \ digits ('0'-'9') in the file's name.\n// - The file's name contains exactly\
    \ one dot '.'\n// - The substring before the dot should not be empty, and it starts\
    \ with a letter from \n// the latin alphapet ('a'-'z' and 'A'-'Z').\n// - The\
    \ substring after the dot should be one of these: ['txt', 'exe', 'dll']\n// Examples:\n\
    // file_name_check(\"example.txt\") # => 'Yes'\n// file_name_check(\"1example.dll\"\
    ) # => 'No' (the name should start with a latin alphapet letter)\nfunction file_name_check($file_name)\
    \ {\n    $file_name_array = explode('.', $file_name);\n    $first_part = $file_name_array[0];\n\
    \    $second_part = $file_name_array[1];\n    $first_part_array = str_split($first_part);\n\
    \    $count = 0;\n    foreach ($first_part_array as $letter) {\n        if (is_numeric($letter))\
    \ {\n            $count++;\n        }\n    }\n    if ($count > 3) {\n        return\
    \ 'No';\n    }\n    if (!ctype_alpha($first_part_array[0])) {\n        return\
    \ 'No';\n    }\n    if ($second_part != 'txt' && $second_part != 'exe' && $second_part\
    \ != 'dll') {\n        return 'No';\n    }\n    return 'Yes';\n}\n\nfunction candidate(...$args)\
    \ {\n    return file_name_check(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(\"example.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"1example.dll\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"s1sdf3.asd\") !== \"No\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"K.dll\") !== \"Yes\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"MY16FILE3.exe\"\
    ) !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    His12FILE94.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(\"_Y.txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"?aREYA.exe\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"/this_is_valid.dll\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"this_is_valid.wow\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_valid.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"this_is_valid.txtexe\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#this2_i4s_5valid.ten\") !== \"No\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"@this1_is6_valid.exe\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_12valid.6exe4.txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"all.exe.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"I563_No.exe\") !== \"Yes\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Is3youfault.txt\") !== \"\
    Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"no_one#knows.dll\"\
    ) !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1I563_Yes3.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"I563_Yes3.txtt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"final..txt\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"final132\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"_f4indsartal132.\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\".txt\") !== \"No\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"s.\") !== \"\
    No\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpszvbrbe3.php:57\n\
    Stack trace:\n#0 /tmp/tmpszvbrbe3.php(70): test()\n#1 {main}\n  thrown in /tmp/tmpszvbrbe3.php\
    \ on line 57\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function which takes a string representing a file's\
    \ name, and returns\n// 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n// A file's name is considered to be valid if and only if all the\
    \ following conditions \n// are met:\n// - There should not be more than three\
    \ digits ('0'-'9') in the file's name.\n// - The file's name contains exactly\
    \ one dot '.'\n// - The substring before the dot should not be empty, and it starts\
    \ with a letter from \n// the latin alphapet ('a'-'z' and 'A'-'Z').\n// - The\
    \ substring after the dot should be one of these: ['txt', 'exe', 'dll']\n// Examples:\n\
    // file_name_check(\"example.txt\") # => 'Yes'\n// file_name_check(\"1example.dll\"\
    ) # => 'No' (the name should start with a latin alphapet letter)\nfunction file_name_check($file_name)\
    \ {\n    $file_name_array = explode('.', $file_name);\n    $file_name_array_count\
    \ = count($file_name_array);\n    $file_name_array_first = $file_name_array[0];\n\
    \    $file_name_array_last = $file_name_array[$file_name_array_count - 1];\n \
    \   $file_name_array_first_count = strlen($file_name_array_first);\n    $file_name_array_last_count\
    \ = strlen($file_name_array_last);\n    $file_name_array_first_first_char = $file_name_array_first[0];\n\
    \    $file_name_array_first_first_char_ascii = ord($file_name_array_first_first_char);\n\
    \    $file_name_array_first_first_char_ascii_is_valid = ($file_name_array_first_first_char_ascii\
    \ >= 65 && $file_name_array_first_first_char_ascii <= 90) || ($file_name_array_first_first_char_ascii\
    \ >= 97 && $file_name_array_first_first_char_ascii <= 122);\n    $file_name_array_last_is_valid\
    \ = $file_name_array_last == 'txt' || $file_name_array_last == 'exe' || $file_name_array_last\
    \ == 'dll';\n    $file_name_array_first_count_is_valid = $file_name_array_first_count\
    \ > 0;\n    $file_name_array_count_is_valid = $file_name_array_count == 2;\n \
    \   $file_name_array_first_is_valid = true;\n    $file_name_array_first_digits_count\
    \ = 0;\n    for ($i = 0; $i < $file_name_array_first_count; $i++) {\n        $file_name_array_first_char\
    \ = $file_name_array_first[$i];\n        $file_name_array_first_char_ascii = ord($file_name_array\n\
    function candidate(...$args) {\n    return file_name_check(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"example.txt\") !== \"Yes\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"1example.dll\") !== \"No\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"s1sdf3.asd\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    K.dll\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    MY16FILE3.exe\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"His12FILE94.exe\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"_Y.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"?aREYA.exe\") !== \"No\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"/this_is_valid.dll\") !==\
    \ \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"this_is_valid.wow\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_valid.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"this_is_valid.txtexe\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#this2_i4s_5valid.ten\") !== \"No\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"@this1_is6_valid.exe\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_12valid.6exe4.txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"all.exe.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"I563_No.exe\") !== \"Yes\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Is3youfault.txt\") !== \"\
    Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"no_one#knows.dll\"\
    ) !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1I563_Yes3.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"I563_Yes3.txtt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"final..txt\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"final132\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"_f4indsartal132.\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\".txt\") !== \"No\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"s.\") !== \"\
    No\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Parse error:  syntax error, unexpected token \"function\", expecting\
    \ \")\" in /tmp/tmp3pw87c4w.php on line 32\n"
  exit_code: 255
  status: SyntaxError
- program: "<?php\n// Create a function which takes a string representing a file's\
    \ name, and returns\n// 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n// A file's name is considered to be valid if and only if all the\
    \ following conditions \n// are met:\n// - There should not be more than three\
    \ digits ('0'-'9') in the file's name.\n// - The file's name contains exactly\
    \ one dot '.'\n// - The substring before the dot should not be empty, and it starts\
    \ with a letter from \n// the latin alphapet ('a'-'z' and 'A'-'Z').\n// - The\
    \ substring after the dot should be one of these: ['txt', 'exe', 'dll']\n// Examples:\n\
    // file_name_check(\"example.txt\") # => 'Yes'\n// file_name_check(\"1example.dll\"\
    ) # => 'No' (the name should start with a latin alphapet letter)\nfunction file_name_check($file_name)\
    \ {\n    $file_name_array = explode('.', $file_name);\n    $file_name_array_length\
    \ = count($file_name_array);\n    $file_name_array_length_2 = count($file_name_array)\
    \ - 1;\n    $file_name_array_length_3 = count($file_name_array) - 2;\n    $file_name_array_length_4\
    \ = count($file_name_array) - 3;\n    $file_name_array_length_5 = count($file_name_array)\
    \ - 4;\n    $file_name_array_length_6 = count($file_name_array) - 5;\n    $file_name_array_length_7\
    \ = count($file_name_array) - 6;\n    $file_name_array_length_8 = count($file_name_array)\
    \ - 7;\n    $file_name_array_length_9 = count($file_name_array) - 8;\n    $file_name_array_length_10\
    \ = count($file_name_array) - 9;\n    $file_name_array_length_11 = count($file_name_array)\
    \ - 10;\n    $file_name_array_length_12 = count($file_name_array) - 11;\n    $file_name_array_length_13\
    \ = count($file_name_array) - 12;\n    $file_name_array_length_14 = count($file_name_array)\
    \ - 13;\n    $file_name_array_length_15 = count($file_name_array) - 14;\n    $file_name_array_length_16\
    \ = count($file_name_array) - 15;\n    $file_name_array_length_17 = count($file_name_array)\
    \ - 16;\n    $file_name_array_length_18 = count($file_name_array) - 17;\n    $file_name_array_length_19\
    \ = count($file_name_array) - 18;\n    $file_name_array_length_20 = count($file_name_array)\
    \ - 19;\n    $file_name_array_length_21 = count($file_name_\nfunction candidate(...$args)\
    \ {\n    return file_name_check(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(\"example.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"1example.dll\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"s1sdf3.asd\") !== \"No\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"K.dll\") !== \"Yes\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"MY16FILE3.exe\"\
    ) !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    His12FILE94.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(\"_Y.txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"?aREYA.exe\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"/this_is_valid.dll\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"this_is_valid.wow\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_valid.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"this_is_valid.txtexe\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#this2_i4s_5valid.ten\") !== \"No\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"@this1_is6_valid.exe\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_12valid.6exe4.txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"all.exe.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"I563_No.exe\") !== \"Yes\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Is3youfault.txt\") !== \"\
    Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"no_one#knows.dll\"\
    ) !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1I563_Yes3.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"I563_Yes3.txtt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"final..txt\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"final132\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"_f4indsartal132.\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\".txt\") !== \"No\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"s.\") !== \"\
    No\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Parse error:  syntax error, unexpected token \"function\", expecting\
    \ \")\" in /tmp/tmp3gdr9bn_.php on line 37\n"
  exit_code: 255
  status: SyntaxError
- program: "<?php\n// Create a function which takes a string representing a file's\
    \ name, and returns\n// 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n// A file's name is considered to be valid if and only if all the\
    \ following conditions \n// are met:\n// - There should not be more than three\
    \ digits ('0'-'9') in the file's name.\n// - The file's name contains exactly\
    \ one dot '.'\n// - The substring before the dot should not be empty, and it starts\
    \ with a letter from \n// the latin alphapet ('a'-'z' and 'A'-'Z').\n// - The\
    \ substring after the dot should be one of these: ['txt', 'exe', 'dll']\n// Examples:\n\
    // file_name_check(\"example.txt\") # => 'Yes'\n// file_name_check(\"1example.dll\"\
    ) # => 'No' (the name should start with a latin alphapet letter)\nfunction file_name_check($file_name)\
    \ {\n    $file_name_array = explode('.', $file_name);\n    $file_name_array_length\
    \ = count($file_name_array);\n    $file_name_array_length_first = strlen($file_name_array[0]);\n\
    \    $file_name_array_length_second = strlen($file_name_array[1]);\n    $file_name_array_length_second_first\
    \ = $file_name_array[1][0];\n    $file_name_array_length_second_second = $file_name_array[1][1];\n\
    \    $file_name_array_length_second_third = $file_name_array[1][2];\n    $file_name_array_length_second_fourth\
    \ = $file_name_array[1][3];\n    $file_name_array_length_second_fifth = $file_name_array[1][4];\n\
    \    $file_name_array_length_second_sixth = $file_name_array[1][5];\n    $file_name_array_length_second_seventh\
    \ = $file_name_array[1][6];\n    $file_name_array_length_second_eighth = $file_name_array[1][7];\n\
    \    $file_name_array_length_second_ninth = $file_name_array[1][8];\n    $file_name_array_length_second_tenth\
    \ = $file_name_array[1][9];\n    $file_name_array_length_second_eleventh = $file_name_array[1][10];\n\
    \    $file_name_array_length_second_twelfth = $file_name_array[1][11];\n    $file_name_array_length_second_thirteenth\
    \ = $file_name_array[1][12];\n    $file_name_array_length_second_fourteenth =\
    \ $file_name_array[1][13];\n    $file_name_array_length_second_fifteenth = $file_name_array[1][14];\n\
    \    $file_name_array_length_second_sixteenth = $file_name_array[1][15\nfunction\
    \ candidate(...$args) {\n    return file_name_check(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"example.txt\") !== \"Yes\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"1example.dll\") !== \"No\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"s1sdf3.asd\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    K.dll\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    MY16FILE3.exe\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"His12FILE94.exe\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"_Y.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"?aREYA.exe\") !== \"No\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"/this_is_valid.dll\") !==\
    \ \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"this_is_valid.wow\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_valid.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"this_is_valid.txtexe\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#this2_i4s_5valid.ten\") !== \"No\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"@this1_is6_valid.exe\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_12valid.6exe4.txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"all.exe.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"I563_No.exe\") !== \"Yes\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Is3youfault.txt\") !== \"\
    Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"no_one#knows.dll\"\
    ) !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1I563_Yes3.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"I563_Yes3.txtt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"final..txt\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"final132\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"_f4indsartal132.\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\".txt\") !== \"No\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"s.\") !== \"\
    No\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Parse error:  syntax error, unexpected token \"function\", expecting\
    \ \"]\" in /tmp/tmpuqe9jzhy.php on line 35\n"
  exit_code: 255
  status: SyntaxError
- program: "<?php\n// Create a function which takes a string representing a file's\
    \ name, and returns\n// 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n// A file's name is considered to be valid if and only if all the\
    \ following conditions \n// are met:\n// - There should not be more than three\
    \ digits ('0'-'9') in the file's name.\n// - The file's name contains exactly\
    \ one dot '.'\n// - The substring before the dot should not be empty, and it starts\
    \ with a letter from \n// the latin alphapet ('a'-'z' and 'A'-'Z').\n// - The\
    \ substring after the dot should be one of these: ['txt', 'exe', 'dll']\n// Examples:\n\
    // file_name_check(\"example.txt\") # => 'Yes'\n// file_name_check(\"1example.dll\"\
    ) # => 'No' (the name should start with a latin alphapet letter)\nfunction file_name_check($file_name)\
    \ {\n    $file_name_arr = explode('.', $file_name);\n    $file_name_arr_count\
    \ = count($file_name_arr);\n    if ($file_name_arr_count > 2) {\n        return\
    \ 'No';\n    }\n    if (!preg_match('/^[a-zA-Z]/', $file_name_arr[0])) {\n   \
    \     return 'No';\n    }\n    if (!in_array($file_name_arr[1], ['txt', 'exe',\
    \ 'dll'])) {\n        return 'No';\n    }\n    if (preg_match('/[0-9]{4,}/', $file_name))\
    \ {\n        return 'No';\n    }\n    return 'Yes';\n}\n\nfunction candidate(...$args)\
    \ {\n    return file_name_check(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(\"example.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"1example.dll\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"s1sdf3.asd\") !== \"No\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"K.dll\") !== \"Yes\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"MY16FILE3.exe\"\
    ) !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    His12FILE94.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(\"_Y.txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"?aREYA.exe\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"/this_is_valid.dll\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"this_is_valid.wow\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_valid.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"this_is_valid.txtexe\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#this2_i4s_5valid.ten\") !== \"No\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"@this1_is6_valid.exe\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_12valid.6exe4.txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"all.exe.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"I563_No.exe\") !== \"Yes\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Is3youfault.txt\") !== \"\
    Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"no_one#knows.dll\"\
    ) !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1I563_Yes3.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"I563_Yes3.txtt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"final..txt\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"final132\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"_f4indsartal132.\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\".txt\") !== \"No\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"s.\") !== \"\
    No\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpyaptnuu7.php:42\n\
    Stack trace:\n#0 /tmp/tmpyaptnuu7.php(65): test()\n#1 {main}\n  thrown in /tmp/tmpyaptnuu7.php\
    \ on line 42\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function which takes a string representing a file's\
    \ name, and returns\n// 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n// A file's name is considered to be valid if and only if all the\
    \ following conditions \n// are met:\n// - There should not be more than three\
    \ digits ('0'-'9') in the file's name.\n// - The file's name contains exactly\
    \ one dot '.'\n// - The substring before the dot should not be empty, and it starts\
    \ with a letter from \n// the latin alphapet ('a'-'z' and 'A'-'Z').\n// - The\
    \ substring after the dot should be one of these: ['txt', 'exe', 'dll']\n// Examples:\n\
    // file_name_check(\"example.txt\") # => 'Yes'\n// file_name_check(\"1example.dll\"\
    ) # => 'No' (the name should start with a latin alphapet letter)\nfunction file_name_check($file_name)\
    \ {\n    $file_name_array = explode('.', $file_name);\n    $file_name_array_length\
    \ = count($file_name_array);\n    $file_name_array_first_char = $file_name_array[0][0];\n\
    \    $file_name_array_first_char_ord = ord($file_name_array_first_char);\n   \
    \ $file_name_array_last_char = $file_name_array[$file_name_array_length - 1];\n\
    \    $file_name_array_last_char_ord = ord($file_name_array_last_char);\n    $file_name_array_first_char_is_digit\
    \ = $file_name_array_first_char_ord >= 48 && $file_name_array_first_char_ord <=\
    \ 57;\n    $file_name_array_first_char_is_letter = $file_name_array_first_char_ord\
    \ >= 65 && $file_name_array_first_char_ord <= 90 || $file_name_array_first_char_ord\
    \ >= 97 && $file_name_array_first_char_ord <= 122;\n    $file_name_array_last_char_is_txt\
    \ = $file_name_array_last_char == 'txt';\n    $file_name_array_last_char_is_exe\
    \ = $file_name_array_last_char == 'exe';\n    $file_name_array_last_char_is_dll\
    \ = $file_name_array_last_char == 'dll';\n    $file_name_array_last_char_is_valid\
    \ = $file_name_array_last_char_is_txt || $file_name_array_last_char_is_exe ||\
    \ $file_name_array_last_char_is_dll;\n    $file_name_array_first_char_is_valid\
    \ = $file_name_array_first_char_is_digit == false && $file_name_array_first_char_is_letter\
    \ == true;\n    $file_name_array_length_is_valid = $file_name_array_length ==\
    \ 2;\n    $file_name_array_first\nfunction candidate(...$args) {\n    return file_name_check(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"example.txt\") !== \"Yes\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"1example.dll\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    s1sdf3.asd\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    K.dll\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    MY16FILE3.exe\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"His12FILE94.exe\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"_Y.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"?aREYA.exe\") !== \"No\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"/this_is_valid.dll\") !==\
    \ \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"this_is_valid.wow\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_valid.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"this_is_valid.txtexe\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#this2_i4s_5valid.ten\") !== \"No\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"@this1_is6_valid.exe\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_12valid.6exe4.txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"all.exe.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"I563_No.exe\") !== \"Yes\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Is3youfault.txt\") !== \"\
    Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"no_one#knows.dll\"\
    ) !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1I563_Yes3.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"I563_Yes3.txtt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"final..txt\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"final132\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"_f4indsartal132.\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\".txt\") !== \"No\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"s.\") !== \"\
    No\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Parse error:  syntax error, unexpected token \"function\" in /tmp/tmp7n6z0k_a.php\
    \ on line 30\n"
  exit_code: 255
  status: SyntaxError
- program: "<?php\n// Create a function which takes a string representing a file's\
    \ name, and returns\n// 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n// A file's name is considered to be valid if and only if all the\
    \ following conditions \n// are met:\n// - There should not be more than three\
    \ digits ('0'-'9') in the file's name.\n// - The file's name contains exactly\
    \ one dot '.'\n// - The substring before the dot should not be empty, and it starts\
    \ with a letter from \n// the latin alphapet ('a'-'z' and 'A'-'Z').\n// - The\
    \ substring after the dot should be one of these: ['txt', 'exe', 'dll']\n// Examples:\n\
    // file_name_check(\"example.txt\") # => 'Yes'\n// file_name_check(\"1example.dll\"\
    ) # => 'No' (the name should start with a latin alphapet letter)\nfunction file_name_check($file_name)\
    \ {\n    $file_name_array = explode('.', $file_name);\n    $file_name_array_count\
    \ = count($file_name_array);\n    if ($file_name_array_count > 2) {\n        return\
    \ 'No';\n    }\n    if ($file_name_array_count == 1) {\n        return 'No';\n\
    \    }\n    $file_name_array_first = $file_name_array[0];\n    $file_name_array_second\
    \ = $file_name_array[1];\n    $file_name_array_first_count = strlen($file_name_array_first);\n\
    \    $file_name_array_second_count = strlen($file_name_array_second);\n    if\
    \ ($file_name_array_first_count == 0) {\n        return 'No';\n    }\n    if ($file_name_array_second_count\
    \ == 0) {\n        return 'No';\n    }\n    if (ctype_alpha($file_name_array_first[0])\
    \ == false) {\n        return 'No';\n    }\n    $file_name_array_first_digit_count\
    \ = 0;\n    for ($i = 0; $i < $file_name_array_first_count; $i++) {\n        if\
    \ (ctype_digit($file_name_array_first[$i]) == true) {\n            $file_name_array_first_digit_count++;\n\
    \        }\n    }\n    if ($file_name_array_first_digit_count > 3) {\n       \
    \ return 'No';\n    }\n    if ($file_name_array_second != 'txt' && $file_name_array_second\
    \ != 'exe' && $file_name_array_second != 'dll') {\n        return 'No';\n    }\n\
    \    return 'Yes';\n}\n\nfunction candidate(...$args) {\n    return file_name_check(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"example.txt\") !== \"Yes\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"1example.dll\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    s1sdf3.asd\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    K.dll\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    MY16FILE3.exe\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"His12FILE94.exe\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"_Y.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"?aREYA.exe\") !== \"No\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"/this_is_valid.dll\") !==\
    \ \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"this_is_valid.wow\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_valid.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"this_is_valid.txtexe\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#this2_i4s_5valid.ten\") !== \"No\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"@this1_is6_valid.exe\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_12valid.6exe4.txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"all.exe.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"I563_No.exe\") !== \"Yes\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Is3youfault.txt\") !== \"\
    Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"no_one#knows.dll\"\
    ) !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1I563_Yes3.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"I563_Yes3.txtt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"final..txt\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"final132\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"_f4indsartal132.\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\".txt\") !== \"No\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"s.\") !== \"\
    No\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Create a function which takes a string representing a file's\
    \ name, and returns\n// 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n// A file's name is considered to be valid if and only if all the\
    \ following conditions \n// are met:\n// - There should not be more than three\
    \ digits ('0'-'9') in the file's name.\n// - The file's name contains exactly\
    \ one dot '.'\n// - The substring before the dot should not be empty, and it starts\
    \ with a letter from \n// the latin alphapet ('a'-'z' and 'A'-'Z').\n// - The\
    \ substring after the dot should be one of these: ['txt', 'exe', 'dll']\n// Examples:\n\
    // file_name_check(\"example.txt\") # => 'Yes'\n// file_name_check(\"1example.dll\"\
    ) # => 'No' (the name should start with a latin alphapet letter)\nfunction file_name_check($file_name)\
    \ {\n    $file_name_arr = explode('.', $file_name);\n    if (count($file_name_arr)\
    \ != 2) {\n        return 'No';\n    }\n    if (!preg_match('/^[a-zA-Z]/', $file_name_arr[0]))\
    \ {\n        return 'No';\n    }\n    if (!preg_match('/^[a-zA-Z0-9]*$/', $file_name_arr[0]))\
    \ {\n        return 'No';\n    }\n    if (preg_match('/[0-9]{4}/', $file_name_arr[0]))\
    \ {\n        return 'No';\n    }\n    if (!in_array($file_name_arr[1], ['txt',\
    \ 'exe', 'dll'])) {\n        return 'No';\n    }\n    return 'Yes';\n}\n\nfunction\
    \ candidate(...$args) {\n    return file_name_check(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"example.txt\") !== \"Yes\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"1example.dll\") !== \"No\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"s1sdf3.asd\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    K.dll\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    MY16FILE3.exe\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"His12FILE94.exe\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"_Y.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"?aREYA.exe\") !== \"No\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"/this_is_valid.dll\") !==\
    \ \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"this_is_valid.wow\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_valid.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"this_is_valid.txtexe\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#this2_i4s_5valid.ten\") !== \"No\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"@this1_is6_valid.exe\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_12valid.6exe4.txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"all.exe.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"I563_No.exe\") !== \"Yes\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Is3youfault.txt\") !== \"\
    Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"no_one#knows.dll\"\
    ) !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1I563_Yes3.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"I563_Yes3.txtt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"final..txt\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"final132\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"_f4indsartal132.\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\".txt\") !== \"No\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"s.\") !== \"\
    No\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp2zboeae4.php:44\n\
    Stack trace:\n#0 /tmp/tmp2zboeae4.php(67): test()\n#1 {main}\n  thrown in /tmp/tmp2zboeae4.php\
    \ on line 44\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function which takes a string representing a file's\
    \ name, and returns\n// 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n// A file's name is considered to be valid if and only if all the\
    \ following conditions \n// are met:\n// - There should not be more than three\
    \ digits ('0'-'9') in the file's name.\n// - The file's name contains exactly\
    \ one dot '.'\n// - The substring before the dot should not be empty, and it starts\
    \ with a letter from \n// the latin alphapet ('a'-'z' and 'A'-'Z').\n// - The\
    \ substring after the dot should be one of these: ['txt', 'exe', 'dll']\n// Examples:\n\
    // file_name_check(\"example.txt\") # => 'Yes'\n// file_name_check(\"1example.dll\"\
    ) # => 'No' (the name should start with a latin alphapet letter)\nfunction file_name_check($file_name)\
    \ {\n    $file_name_arr = explode('.', $file_name);\n    if (count($file_name_arr)\
    \ != 2) {\n        return 'No';\n    }\n    if (!preg_match('/^[a-zA-Z]/', $file_name_arr[0]))\
    \ {\n        return 'No';\n    }\n    if (!preg_match('/^[0-9]{0,3}$/', $file_name_arr[0]))\
    \ {\n        return 'No';\n    }\n    if (!in_array($file_name_arr[1], ['txt',\
    \ 'exe', 'dll'])) {\n        return 'No';\n    }\n    return 'Yes';\n}\n\nfunction\
    \ candidate(...$args) {\n    return file_name_check(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"example.txt\") !== \"Yes\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"1example.dll\") !== \"No\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"s1sdf3.asd\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    K.dll\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    MY16FILE3.exe\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"His12FILE94.exe\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"_Y.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"?aREYA.exe\") !== \"No\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"/this_is_valid.dll\") !==\
    \ \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"this_is_valid.wow\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_valid.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"this_is_valid.txtexe\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#this2_i4s_5valid.ten\") !== \"No\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"@this1_is6_valid.exe\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_12valid.6exe4.txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"all.exe.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"I563_No.exe\") !== \"Yes\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Is3youfault.txt\") !== \"\
    Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"no_one#knows.dll\"\
    ) !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1I563_Yes3.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"I563_Yes3.txtt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"final..txt\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"final132\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"_f4indsartal132.\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\".txt\") !== \"No\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"s.\") !== \"\
    No\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpw72cjssp.php:36\n\
    Stack trace:\n#0 /tmp/tmpw72cjssp.php(64): test()\n#1 {main}\n  thrown in /tmp/tmpw72cjssp.php\
    \ on line 36\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function which takes a string representing a file's\
    \ name, and returns\n// 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n// A file's name is considered to be valid if and only if all the\
    \ following conditions \n// are met:\n// - There should not be more than three\
    \ digits ('0'-'9') in the file's name.\n// - The file's name contains exactly\
    \ one dot '.'\n// - The substring before the dot should not be empty, and it starts\
    \ with a letter from \n// the latin alphapet ('a'-'z' and 'A'-'Z').\n// - The\
    \ substring after the dot should be one of these: ['txt', 'exe', 'dll']\n// Examples:\n\
    // file_name_check(\"example.txt\") # => 'Yes'\n// file_name_check(\"1example.dll\"\
    ) # => 'No' (the name should start with a latin alphapet letter)\nfunction file_name_check($file_name)\
    \ {\n    $file_name_arr = explode('.', $file_name);\n    $file_name_arr_count\
    \ = count($file_name_arr);\n    if ($file_name_arr_count != 2) {\n        return\
    \ 'No';\n    }\n    $first_part = $file_name_arr[0];\n    $second_part = $file_name_arr[1];\n\
    \    if (preg_match('/[0-9]{4,}/', $first_part)) {\n        return 'No';\n   \
    \ }\n    if (!preg_match('/[a-zA-Z]/', $first_part)) {\n        return 'No';\n\
    \    }\n    if (!in_array($second_part, ['txt', 'exe', 'dll'])) {\n        return\
    \ 'No';\n    }\n    return 'Yes';\n}\n\nfunction candidate(...$args) {\n    return\
    \ file_name_check(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    example.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"1example.dll\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"s1sdf3.asd\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"K.dll\") !== \"Yes\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"MY16FILE3.exe\") !== \"Yes\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"His12FILE94.exe\") !==\
    \ \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"_Y.txt\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ?aREYA.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    /this_is_valid.dll\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"this_is_valid.wow\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"this_is_valid.txt\") !== \"Yes\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"this_is_valid.txtexe\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #this2_i4s_5valid.ten\") !== \"No\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"@this1_is6_valid.exe\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"this_is_12valid.6exe4.txt\") !== \"No\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"all.exe.txt\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    I563_No.exe\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"Is3youfault.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"no_one#knows.dll\") !== \"Yes\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"1I563_Yes3.exe\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"I563_Yes3.txtt\") !==\
    \ \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"final..txt\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    final132\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    _f4indsartal132.\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\".txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"s.\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpo8ffnt97.php:40\n\
    Stack trace:\n#0 /tmp/tmpo8ffnt97.php(67): test()\n#1 {main}\n  thrown in /tmp/tmpo8ffnt97.php\
    \ on line 40\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function which takes a string representing a file's\
    \ name, and returns\n// 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n// A file's name is considered to be valid if and only if all the\
    \ following conditions \n// are met:\n// - There should not be more than three\
    \ digits ('0'-'9') in the file's name.\n// - The file's name contains exactly\
    \ one dot '.'\n// - The substring before the dot should not be empty, and it starts\
    \ with a letter from \n// the latin alphapet ('a'-'z' and 'A'-'Z').\n// - The\
    \ substring after the dot should be one of these: ['txt', 'exe', 'dll']\n// Examples:\n\
    // file_name_check(\"example.txt\") # => 'Yes'\n// file_name_check(\"1example.dll\"\
    ) # => 'No' (the name should start with a latin alphapet letter)\nfunction file_name_check($file_name)\
    \ {\n    $file_name_array = explode('.', $file_name);\n    $file_name_array_count\
    \ = count($file_name_array);\n    $file_name_array_first = $file_name_array[0];\n\
    \    $file_name_array_last = $file_name_array[$file_name_array_count - 1];\n \
    \   $file_name_array_first_count = strlen($file_name_array_first);\n    $file_name_array_last_count\
    \ = strlen($file_name_array_last);\n    $file_name_array_first_first_char = $file_name_array_first[0];\n\
    \    $file_name_array_first_first_char_ascii = ord($file_name_array_first_first_char);\n\
    \    $file_name_array_first_last_char = $file_name_array_first[$file_name_array_first_count\
    \ - 1];\n    $file_name_array_first_last_char_ascii = ord($file_name_array_first_last_char);\n\
    \    $file_name_array_last_first_char = $file_name_array_last[0];\n    $file_name_array_last_first_char_ascii\
    \ = ord($file_name_array_last_first_char);\n    $file_name_array_last_last_char\
    \ = $file_name_array_last[$file_name_array_last_count - 1];\n    $file_name_array_last_last_char_ascii\
    \ = ord($file_name_array_last_last_char);\n    $file_name_array_first_first_char_ascii_min\
    \ = ord('a');\n    $file_name_array_first_first_char_ascii_max = ord('z');\n \
    \   $file_name_array_first_first_char_ascii_min_upper = ord('A');\n    $file_name_array_first_first_char_ascii_max_upper\
    \ = ord('Z');\n    $file_name_array_first_last_char_as\nfunction candidate(...$args)\
    \ {\n    return file_name_check(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(\"example.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"1example.dll\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"s1sdf3.asd\") !== \"No\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"K.dll\") !== \"Yes\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"MY16FILE3.exe\"\
    ) !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    His12FILE94.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(\"_Y.txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"?aREYA.exe\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"/this_is_valid.dll\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"this_is_valid.wow\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_valid.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"this_is_valid.txtexe\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#this2_i4s_5valid.ten\") !== \"No\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"@this1_is6_valid.exe\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_12valid.6exe4.txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"all.exe.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"I563_No.exe\") !== \"Yes\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Is3youfault.txt\") !== \"\
    Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"no_one#knows.dll\"\
    ) !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1I563_Yes3.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"I563_Yes3.txtt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"final..txt\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"final132\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"_f4indsartal132.\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\".txt\") !== \"No\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"s.\") !== \"\
    No\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Parse error:  syntax error, unexpected token \"function\" in /tmp/tmpkq6_qouk.php\
    \ on line 34\n"
  exit_code: 255
  status: SyntaxError
- program: "<?php\n// Create a function which takes a string representing a file's\
    \ name, and returns\n// 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n// A file's name is considered to be valid if and only if all the\
    \ following conditions \n// are met:\n// - There should not be more than three\
    \ digits ('0'-'9') in the file's name.\n// - The file's name contains exactly\
    \ one dot '.'\n// - The substring before the dot should not be empty, and it starts\
    \ with a letter from \n// the latin alphapet ('a'-'z' and 'A'-'Z').\n// - The\
    \ substring after the dot should be one of these: ['txt', 'exe', 'dll']\n// Examples:\n\
    // file_name_check(\"example.txt\") # => 'Yes'\n// file_name_check(\"1example.dll\"\
    ) # => 'No' (the name should start with a latin alphapet letter)\nfunction file_name_check($file_name)\
    \ {\n    $file_name_arr = explode('.', $file_name);\n    $file_name_first = $file_name_arr[0];\n\
    \    $file_name_last = $file_name_arr[1];\n    if (preg_match('/^[a-zA-Z]/', $file_name_first)\
    \ && preg_match('/[0-9]{3}/', $file_name_first) == 0 && preg_match('/^(txt|exe|dll)$/',\
    \ $file_name_last)) {\n        return 'Yes';\n    } else {\n        return 'No';\n\
    \    }\n}\n\nfunction candidate(...$args) {\n    return file_name_check(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"example.txt\") !== \"Yes\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"1example.dll\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    s1sdf3.asd\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    K.dll\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    MY16FILE3.exe\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"His12FILE94.exe\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"_Y.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"?aREYA.exe\") !== \"No\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"/this_is_valid.dll\") !==\
    \ \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"this_is_valid.wow\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_valid.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"this_is_valid.txtexe\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#this2_i4s_5valid.ten\") !== \"No\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"@this1_is6_valid.exe\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_12valid.6exe4.txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"all.exe.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"I563_No.exe\") !== \"Yes\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Is3youfault.txt\") !== \"\
    Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"no_one#knows.dll\"\
    ) !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1I563_Yes3.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"I563_Yes3.txtt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"final..txt\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"final132\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"_f4indsartal132.\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\".txt\") !== \"No\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"s.\") !== \"\
    No\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp1efr66mq.php:35\n\
    Stack trace:\n#0 /tmp/tmp1efr66mq.php(58): test()\n#1 {main}\n  thrown in /tmp/tmp1efr66mq.php\
    \ on line 35\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function which takes a string representing a file's\
    \ name, and returns\n// 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n// A file's name is considered to be valid if and only if all the\
    \ following conditions \n// are met:\n// - There should not be more than three\
    \ digits ('0'-'9') in the file's name.\n// - The file's name contains exactly\
    \ one dot '.'\n// - The substring before the dot should not be empty, and it starts\
    \ with a letter from \n// the latin alphapet ('a'-'z' and 'A'-'Z').\n// - The\
    \ substring after the dot should be one of these: ['txt', 'exe', 'dll']\n// Examples:\n\
    // file_name_check(\"example.txt\") # => 'Yes'\n// file_name_check(\"1example.dll\"\
    ) # => 'No' (the name should start with a latin alphapet letter)\nfunction file_name_check($file_name)\
    \ {\n    $file_name_array = explode('.', $file_name);\n    $file_name_array_count\
    \ = count($file_name_array);\n    if ($file_name_array_count != 2) {\n       \
    \ return 'No';\n    }\n    $file_name_array_first = $file_name_array[0];\n   \
    \ $file_name_array_second = $file_name_array[1];\n    if (preg_match('/[a-zA-Z]/',\
    \ $file_name_array_first[0]) == 0) {\n        return 'No';\n    }\n    if (preg_match('/[0-9]/',\
    \ $file_name_array_first) > 3) {\n        return 'No';\n    }\n    if ($file_name_array_second\
    \ != 'txt' && $file_name_array_second != 'exe' && $file_name_array_second != 'dll')\
    \ {\n        return 'No';\n    }\n    return 'Yes';\n}\n\nfunction candidate(...$args)\
    \ {\n    return file_name_check(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(\"example.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"1example.dll\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"s1sdf3.asd\") !== \"No\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"K.dll\") !== \"Yes\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"MY16FILE3.exe\"\
    ) !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    His12FILE94.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(\"_Y.txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"?aREYA.exe\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"/this_is_valid.dll\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"this_is_valid.wow\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_valid.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"this_is_valid.txtexe\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#this2_i4s_5valid.ten\") !== \"No\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"@this1_is6_valid.exe\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_12valid.6exe4.txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"all.exe.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"I563_No.exe\") !== \"Yes\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Is3youfault.txt\") !== \"\
    Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"no_one#knows.dll\"\
    ) !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1I563_Yes3.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"I563_Yes3.txtt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"final..txt\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"final132\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"_f4indsartal132.\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\".txt\") !== \"No\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"s.\") !== \"\
    No\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmplog4byhy.php:44\n\
    Stack trace:\n#0 /tmp/tmplog4byhy.php(67): test()\n#1 {main}\n  thrown in /tmp/tmplog4byhy.php\
    \ on line 44\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function which takes a string representing a file's\
    \ name, and returns\n// 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n// A file's name is considered to be valid if and only if all the\
    \ following conditions \n// are met:\n// - There should not be more than three\
    \ digits ('0'-'9') in the file's name.\n// - The file's name contains exactly\
    \ one dot '.'\n// - The substring before the dot should not be empty, and it starts\
    \ with a letter from \n// the latin alphapet ('a'-'z' and 'A'-'Z').\n// - The\
    \ substring after the dot should be one of these: ['txt', 'exe', 'dll']\n// Examples:\n\
    // file_name_check(\"example.txt\") # => 'Yes'\n// file_name_check(\"1example.dll\"\
    ) # => 'No' (the name should start with a latin alphapet letter)\nfunction file_name_check($file_name)\
    \ {\n    $file_name_arr = explode('.', $file_name);\n    $file_name_arr_count\
    \ = count($file_name_arr);\n    $file_name_arr_count_1 = $file_name_arr_count\
    \ - 1;\n    $file_name_arr_count_2 = $file_name_arr_count - 2;\n    $file_name_arr_count_3\
    \ = $file_name_arr_count - 3;\n    $file_name_arr_count_4 = $file_name_arr_count\
    \ - 4;\n    $file_name_arr_count_5 = $file_name_arr_count - 5;\n    $file_name_arr_count_6\
    \ = $file_name_arr_count - 6;\n    $file_name_arr_count_7 = $file_name_arr_count\
    \ - 7;\n    $file_name_arr_count_8 = $file_name_arr_count - 8;\n    $file_name_arr_count_9\
    \ = $file_name_arr_count - 9;\n    $file_name_arr_count_10 = $file_name_arr_count\
    \ - 10;\n    $file_name_arr_count_11 = $file_name_arr_count - 11;\n    $file_name_arr_count_12\
    \ = $file_name_arr_count - 12;\n    $file_name_arr_count_13 = $file_name_arr_count\
    \ - 13;\n    $file_name_arr_count_14 = $file_name_arr_count - 14;\n    $file_name_arr_count_15\
    \ = $file_name_arr_count - 15;\n    $file_name_arr_count_16 = $file_name_arr_count\
    \ - 16;\n    $file_name_arr_count_17 = $file_name_arr_count - 17;\n    $file_name_arr_count_18\
    \ = $file_name_arr_count - 18;\n    $file_name_arr_count_19 = $file_name_arr_count\
    \ - 19;\n    $file_name_arr_count_20 = $file_name_arr\nfunction candidate(...$args)\
    \ {\n    return file_name_check(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(\"example.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"1example.dll\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"s1sdf3.asd\") !== \"No\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"K.dll\") !== \"Yes\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"MY16FILE3.exe\"\
    ) !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    His12FILE94.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(\"_Y.txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"?aREYA.exe\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"/this_is_valid.dll\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"this_is_valid.wow\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_valid.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"this_is_valid.txtexe\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#this2_i4s_5valid.ten\") !== \"No\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"@this1_is6_valid.exe\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_12valid.6exe4.txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"all.exe.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"I563_No.exe\") !== \"Yes\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Is3youfault.txt\") !== \"\
    Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"no_one#knows.dll\"\
    ) !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1I563_Yes3.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"I563_Yes3.txtt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"final..txt\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"final132\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"_f4indsartal132.\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\".txt\") !== \"No\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"s.\") !== \"\
    No\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Parse error:  syntax error, unexpected token \"function\" in /tmp/tmp8_6t970u.php\
    \ on line 37\n"
  exit_code: 255
  status: SyntaxError
- program: "<?php\n// Create a function which takes a string representing a file's\
    \ name, and returns\n// 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n// A file's name is considered to be valid if and only if all the\
    \ following conditions \n// are met:\n// - There should not be more than three\
    \ digits ('0'-'9') in the file's name.\n// - The file's name contains exactly\
    \ one dot '.'\n// - The substring before the dot should not be empty, and it starts\
    \ with a letter from \n// the latin alphapet ('a'-'z' and 'A'-'Z').\n// - The\
    \ substring after the dot should be one of these: ['txt', 'exe', 'dll']\n// Examples:\n\
    // file_name_check(\"example.txt\") # => 'Yes'\n// file_name_check(\"1example.dll\"\
    ) # => 'No' (the name should start with a latin alphapet letter)\nfunction file_name_check($file_name)\
    \ {\n    $file_name_arr = explode('.', $file_name);\n    $file_name_arr_count\
    \ = count($file_name_arr);\n    if ($file_name_arr_count !== 2) {\n        return\
    \ 'No';\n    }\n    $file_name_arr_0 = $file_name_arr[0];\n    $file_name_arr_1\
    \ = $file_name_arr[1];\n    if (preg_match('/[0-9]{4,}/', $file_name_arr_0)) {\n\
    \        return 'No';\n    }\n    if (!preg_match('/^[a-zA-Z]/', $file_name_arr_0))\
    \ {\n        return 'No';\n    }\n    if (!in_array($file_name_arr_1, ['txt',\
    \ 'exe', 'dll'])) {\n        return 'No';\n    }\n    return 'Yes';\n}\n\nfunction\
    \ candidate(...$args) {\n    return file_name_check(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"example.txt\") !== \"Yes\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"1example.dll\") !== \"No\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"s1sdf3.asd\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    K.dll\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    MY16FILE3.exe\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"His12FILE94.exe\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"_Y.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"?aREYA.exe\") !== \"No\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"/this_is_valid.dll\") !==\
    \ \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"this_is_valid.wow\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_valid.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"this_is_valid.txtexe\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#this2_i4s_5valid.ten\") !== \"No\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"@this1_is6_valid.exe\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_12valid.6exe4.txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"all.exe.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"I563_No.exe\") !== \"Yes\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Is3youfault.txt\") !== \"\
    Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"no_one#knows.dll\"\
    ) !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1I563_Yes3.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"I563_Yes3.txtt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"final..txt\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"final132\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"_f4indsartal132.\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\".txt\") !== \"No\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"s.\") !== \"\
    No\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpqqfszfcm.php:44\n\
    Stack trace:\n#0 /tmp/tmpqqfszfcm.php(67): test()\n#1 {main}\n  thrown in /tmp/tmpqqfszfcm.php\
    \ on line 44\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function which takes a string representing a file's\
    \ name, and returns\n// 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n// A file's name is considered to be valid if and only if all the\
    \ following conditions \n// are met:\n// - There should not be more than three\
    \ digits ('0'-'9') in the file's name.\n// - The file's name contains exactly\
    \ one dot '.'\n// - The substring before the dot should not be empty, and it starts\
    \ with a letter from \n// the latin alphapet ('a'-'z' and 'A'-'Z').\n// - The\
    \ substring after the dot should be one of these: ['txt', 'exe', 'dll']\n// Examples:\n\
    // file_name_check(\"example.txt\") # => 'Yes'\n// file_name_check(\"1example.dll\"\
    ) # => 'No' (the name should start with a latin alphapet letter)\nfunction file_name_check($file_name)\
    \ {\n    $file_name_array = explode('.', $file_name);\n    $file_name_array[0]\
    \ = str_split($file_name_array[0]);\n    $file_name_array[1] = str_split($file_name_array[1]);\n\
    \    $count = 0;\n    foreach ($file_name_array[0] as $key => $value) {\n    \
    \    if (is_numeric($value)) {\n            $count++;\n        }\n    }\n    if\
    \ ($count > 3) {\n        return 'No';\n    }\n    if (count($file_name_array)\
    \ != 2) {\n        return 'No';\n    }\n    if (!ctype_alpha($file_name_array[0][0]))\
    \ {\n        return 'No';\n    }\n    if ($file_name_array[1][0] != 't' || $file_name_array[1][1]\
    \ != 'x' || $file_name_array[1][2] != 't') {\n        if ($file_name_array[1][0]\
    \ != 'e' || $file_name_array[1][1] != 'x' || $file_name_array[1][2] != 'e') {\n\
    \            if ($file_name_array[1][0] != 'd' || $file_name_array[1][1] != 'l'\
    \ || $file_name_array[1][2] != 'l') {\n                return 'No';\n        \
    \    }\n        }\n    }\n    return 'Yes';\n}\n\nfunction candidate(...$args)\
    \ {\n    return file_name_check(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(\"example.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"1example.dll\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"s1sdf3.asd\") !== \"No\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"K.dll\") !== \"Yes\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"MY16FILE3.exe\"\
    ) !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    His12FILE94.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(\"_Y.txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"?aREYA.exe\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"/this_is_valid.dll\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"this_is_valid.wow\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_valid.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"this_is_valid.txtexe\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#this2_i4s_5valid.ten\") !== \"No\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"@this1_is6_valid.exe\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_12valid.6exe4.txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"all.exe.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"I563_No.exe\") !== \"Yes\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Is3youfault.txt\") !== \"\
    Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"no_one#knows.dll\"\
    ) !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1I563_Yes3.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"I563_Yes3.txtt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"final..txt\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"final132\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"_f4indsartal132.\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\".txt\") !== \"No\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"s.\") !== \"\
    No\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpou5_vt1o.php:59\n\
    Stack trace:\n#0 /tmp/tmpou5_vt1o.php(76): test()\n#1 {main}\n  thrown in /tmp/tmpou5_vt1o.php\
    \ on line 59\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function which takes a string representing a file's\
    \ name, and returns\n// 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n// A file's name is considered to be valid if and only if all the\
    \ following conditions \n// are met:\n// - There should not be more than three\
    \ digits ('0'-'9') in the file's name.\n// - The file's name contains exactly\
    \ one dot '.'\n// - The substring before the dot should not be empty, and it starts\
    \ with a letter from \n// the latin alphapet ('a'-'z' and 'A'-'Z').\n// - The\
    \ substring after the dot should be one of these: ['txt', 'exe', 'dll']\n// Examples:\n\
    // file_name_check(\"example.txt\") # => 'Yes'\n// file_name_check(\"1example.dll\"\
    ) # => 'No' (the name should start with a latin alphapet letter)\nfunction file_name_check($file_name)\
    \ {\n    $file_name_array = explode('.', $file_name);\n    $file_name_array_count\
    \ = count($file_name_array);\n    $file_name_array_count_check = $file_name_array_count\
    \ == 2;\n    $file_name_array_count_check_2 = $file_name_array_count == 1;\n \
    \   $file_name_array_count_check_3 = $file_name_array_count == 3;\n    $file_name_array_count_check_4\
    \ = $file_name_array_count == 0;\n    $file_name_array_count_check_5 = $file_name_array_count\
    \ == 4;\n    $file_name_array_count_check_6 = $file_name_array_count == 5;\n \
    \   $file_name_array_count_check_7 = $file_name_array_count == 6;\n    $file_name_array_count_check_8\
    \ = $file_name_array_count == 7;\n    $file_name_array_count_check_9 = $file_name_array_count\
    \ == 8;\n    $file_name_array_count_check_10 = $file_name_array_count == 9;\n\
    \    $file_name_array_count_check_11 = $file_name_array_count == 10;\n    $file_name_array_count_check_12\
    \ = $file_name_array_count == 11;\n    $file_name_array_count_check_13 = $file_name_array_count\
    \ == 12;\n    $file_name_array_count_check_14 = $file_name_array_count == 13;\n\
    \    $file_name_array_count_check_15 = $file_name_array_count == 14;\n    $file_name_array_count_check_16\
    \ = $file_name_array_count == 15;\n    $file_name_array_count_check_17 = $file_name_array_count\
    \ == 16;\n    $file_name_array_count_check_18 = $file_name_array_count == 17;\n\
    \    $file_name_array_\nfunction candidate(...$args) {\n    return file_name_check(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"example.txt\") !== \"Yes\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"1example.dll\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    s1sdf3.asd\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    K.dll\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    MY16FILE3.exe\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"His12FILE94.exe\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"_Y.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"?aREYA.exe\") !== \"No\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"/this_is_valid.dll\") !==\
    \ \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"this_is_valid.wow\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_valid.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"this_is_valid.txtexe\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#this2_i4s_5valid.ten\") !== \"No\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"@this1_is6_valid.exe\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_12valid.6exe4.txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"all.exe.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"I563_No.exe\") !== \"Yes\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Is3youfault.txt\") !== \"\
    Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"no_one#knows.dll\"\
    ) !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1I563_Yes3.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"I563_Yes3.txtt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"final..txt\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"final132\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"_f4indsartal132.\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\".txt\") !== \"No\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"s.\") !== \"\
    No\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Parse error:  syntax error, unexpected token \"function\" in /tmp/tmpq5uiym7l.php\
    \ on line 36\n"
  exit_code: 255
  status: SyntaxError
- program: "<?php\n// Create a function which takes a string representing a file's\
    \ name, and returns\n// 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n// A file's name is considered to be valid if and only if all the\
    \ following conditions \n// are met:\n// - There should not be more than three\
    \ digits ('0'-'9') in the file's name.\n// - The file's name contains exactly\
    \ one dot '.'\n// - The substring before the dot should not be empty, and it starts\
    \ with a letter from \n// the latin alphapet ('a'-'z' and 'A'-'Z').\n// - The\
    \ substring after the dot should be one of these: ['txt', 'exe', 'dll']\n// Examples:\n\
    // file_name_check(\"example.txt\") # => 'Yes'\n// file_name_check(\"1example.dll\"\
    ) # => 'No' (the name should start with a latin alphapet letter)\nfunction file_name_check($file_name)\
    \ {\n    $file_name_array = explode('.', $file_name);\n    $file_name_array_count\
    \ = count($file_name_array);\n    if ($file_name_array_count != 2) {\n       \
    \ return 'No';\n    }\n    $file_name_array_first = $file_name_array[0];\n   \
    \ $file_name_array_second = $file_name_array[1];\n    $file_name_array_first_count\
    \ = strlen($file_name_array_first);\n    $file_name_array_second_count = strlen($file_name_array_second);\n\
    \    if ($file_name_array_first_count == 0) {\n        return 'No';\n    }\n \
    \   if ($file_name_array_second_count == 0) {\n        return 'No';\n    }\n \
    \   if (!preg_match('/^[a-zA-Z]/', $file_name_array_first)) {\n        return\
    \ 'No';\n    }\n    if (!preg_match('/^[a-zA-Z]/', $file_name_array_second)) {\n\
    \        return 'No';\n    }\n    if (preg_match('/[0-9]{4}/', $file_name_array_first))\
    \ {\n        return 'No';\n    }\n    if (!preg_match('/^(txt|exe|dll)$/', $file_name_array_second))\
    \ {\n        return 'No';\n    }\n    return 'Yes';\n}\n\nfunction candidate(...$args)\
    \ {\n    return file_name_check(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(\"example.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"1example.dll\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"s1sdf3.asd\") !== \"No\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"K.dll\") !== \"Yes\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"MY16FILE3.exe\"\
    ) !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    His12FILE94.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(\"_Y.txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"?aREYA.exe\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"/this_is_valid.dll\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"this_is_valid.wow\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_valid.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"this_is_valid.txtexe\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#this2_i4s_5valid.ten\") !== \"No\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"@this1_is6_valid.exe\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_12valid.6exe4.txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"all.exe.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"I563_No.exe\") !== \"Yes\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Is3youfault.txt\") !== \"\
    Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"no_one#knows.dll\"\
    ) !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1I563_Yes3.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"I563_Yes3.txtt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"final..txt\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"final132\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"_f4indsartal132.\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\".txt\") !== \"No\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"s.\") !== \"\
    No\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpyywau95y.php:55\n\
    Stack trace:\n#0 /tmp/tmpyywau95y.php(78): test()\n#1 {main}\n  thrown in /tmp/tmpyywau95y.php\
    \ on line 55\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function which takes a string representing a file's\
    \ name, and returns\n// 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n// A file's name is considered to be valid if and only if all the\
    \ following conditions \n// are met:\n// - There should not be more than three\
    \ digits ('0'-'9') in the file's name.\n// - The file's name contains exactly\
    \ one dot '.'\n// - The substring before the dot should not be empty, and it starts\
    \ with a letter from \n// the latin alphapet ('a'-'z' and 'A'-'Z').\n// - The\
    \ substring after the dot should be one of these: ['txt', 'exe', 'dll']\n// Examples:\n\
    // file_name_check(\"example.txt\") # => 'Yes'\n// file_name_check(\"1example.dll\"\
    ) # => 'No' (the name should start with a latin alphapet letter)\nfunction file_name_check($file_name)\
    \ {\n    $file_name_array = explode('.', $file_name);\n    if (count($file_name_array)\
    \ != 2) {\n        return 'No';\n    }\n    if (strlen($file_name_array[0]) ==\
    \ 0) {\n        return 'No';\n    }\n    if (!preg_match('/^[a-zA-Z]/', $file_name_array[0]))\
    \ {\n        return 'No';\n    }\n    if (preg_match('/[0-9]{4}/', $file_name_array[0]))\
    \ {\n        return 'No';\n    }\n    if (!in_array($file_name_array[1], ['txt',\
    \ 'exe', 'dll'])) {\n        return 'No';\n    }\n    return 'Yes';\n}\n\nfunction\
    \ candidate(...$args) {\n    return file_name_check(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"example.txt\") !== \"Yes\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"1example.dll\") !== \"No\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"s1sdf3.asd\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    K.dll\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    MY16FILE3.exe\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"His12FILE94.exe\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"_Y.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"?aREYA.exe\") !== \"No\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"/this_is_valid.dll\") !==\
    \ \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"this_is_valid.wow\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_valid.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"this_is_valid.txtexe\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#this2_i4s_5valid.ten\") !== \"No\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"@this1_is6_valid.exe\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_12valid.6exe4.txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"all.exe.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"I563_No.exe\") !== \"Yes\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Is3youfault.txt\") !== \"\
    Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"no_one#knows.dll\"\
    ) !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1I563_Yes3.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"I563_Yes3.txtt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"final..txt\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"final132\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"_f4indsartal132.\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\".txt\") !== \"No\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"s.\") !== \"\
    No\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpjvkcb3k9.php:44\n\
    Stack trace:\n#0 /tmp/tmpjvkcb3k9.php(67): test()\n#1 {main}\n  thrown in /tmp/tmpjvkcb3k9.php\
    \ on line 44\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function which takes a string representing a file's\
    \ name, and returns\n// 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n// A file's name is considered to be valid if and only if all the\
    \ following conditions \n// are met:\n// - There should not be more than three\
    \ digits ('0'-'9') in the file's name.\n// - The file's name contains exactly\
    \ one dot '.'\n// - The substring before the dot should not be empty, and it starts\
    \ with a letter from \n// the latin alphapet ('a'-'z' and 'A'-'Z').\n// - The\
    \ substring after the dot should be one of these: ['txt', 'exe', 'dll']\n// Examples:\n\
    // file_name_check(\"example.txt\") # => 'Yes'\n// file_name_check(\"1example.dll\"\
    ) # => 'No' (the name should start with a latin alphapet letter)\nfunction file_name_check($file_name)\
    \ {\n    $file_name_array = explode('.', $file_name);\n    $file_name_array[0]\
    \ = str_split($file_name_array[0]);\n    $file_name_array[1] = str_split($file_name_array[1]);\n\
    \    $count_digits = 0;\n    $count_dots = 0;\n    foreach ($file_name_array[0]\
    \ as $char) {\n        if (ctype_digit($char)) {\n            $count_digits++;\n\
    \        }\n    }\n    foreach ($file_name_array[1] as $char) {\n        if ($char\
    \ == '.') {\n            $count_dots++;\n        }\n    }\n    if ($count_digits\
    \ > 3 || $count_dots > 1 || !ctype_alpha($file_name_array[0][0]) || !in_array($file_name_array[1],\
    \ ['txt', 'exe', 'dll'])) {\n        return 'No';\n    }\n    return 'Yes';\n\
    }\n\nfunction candidate(...$args) {\n    return file_name_check(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(\"example.txt\") !== \"Yes\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"1example.dll\") !==\
    \ \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"s1sdf3.asd\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    K.dll\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    MY16FILE3.exe\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"His12FILE94.exe\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"_Y.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"?aREYA.exe\") !== \"No\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"/this_is_valid.dll\") !==\
    \ \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"this_is_valid.wow\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_valid.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"this_is_valid.txtexe\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#this2_i4s_5valid.ten\") !== \"No\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"@this1_is6_valid.exe\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_12valid.6exe4.txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"all.exe.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"I563_No.exe\") !== \"Yes\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Is3youfault.txt\") !== \"\
    Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"no_one#knows.dll\"\
    ) !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1I563_Yes3.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"I563_Yes3.txtt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"final..txt\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"final132\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"_f4indsartal132.\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\".txt\") !== \"No\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"s.\") !== \"\
    No\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpl12l3jnc.php:41\n\
    Stack trace:\n#0 /tmp/tmpl12l3jnc.php(69): test()\n#1 {main}\n  thrown in /tmp/tmpl12l3jnc.php\
    \ on line 41\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function which takes a string representing a file's\
    \ name, and returns\n// 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n// A file's name is considered to be valid if and only if all the\
    \ following conditions \n// are met:\n// - There should not be more than three\
    \ digits ('0'-'9') in the file's name.\n// - The file's name contains exactly\
    \ one dot '.'\n// - The substring before the dot should not be empty, and it starts\
    \ with a letter from \n// the latin alphapet ('a'-'z' and 'A'-'Z').\n// - The\
    \ substring after the dot should be one of these: ['txt', 'exe', 'dll']\n// Examples:\n\
    // file_name_check(\"example.txt\") # => 'Yes'\n// file_name_check(\"1example.dll\"\
    ) # => 'No' (the name should start with a latin alphapet letter)\nfunction file_name_check($file_name)\
    \ {\n    $file_name_array = explode('.', $file_name);\n    $file_name_array_count\
    \ = count($file_name_array);\n    $file_name_array_count_digits = 0;\n    $file_name_array_count_letters\
    \ = 0;\n    $file_name_array_count_letters_first = 0;\n    $file_name_array_count_letters_second\
    \ = 0;\n    $file_name_array_count_letters_third = 0;\n    $file_name_array_count_letters_fourth\
    \ = 0;\n    $file_name_array_count_letters_fifth = 0;\n    $file_name_array_count_letters_sixth\
    \ = 0;\n    $file_name_array_count_letters_seventh = 0;\n    $file_name_array_count_letters_eighth\
    \ = 0;\n    $file_name_array_count_letters_ninth = 0;\n    $file_name_array_count_letters_tenth\
    \ = 0;\n    $file_name_array_count_letters_eleventh = 0;\n    $file_name_array_count_letters_twelfth\
    \ = 0;\n    $file_name_array_count_letters_thirteenth = 0;\n    $file_name_array_count_letters_fourteenth\
    \ = 0;\n    $file_name_array_count_letters_fifteenth = 0;\n    $file_name_array_count_letters_sixteenth\
    \ = 0;\n    $file_name_array_count_letters_seventeenth = 0;\n    $file_name_array_count_letters_eighteenth\
    \ = 0;\n    $file_name_array_count_letters_nineteenth = 0;\n    $file_name_array_count_letters_twentieth\
    \ = 0;\n    $file_name_array_count_letters_twentyfirst = 0;\n    $file_name_array_count_letters_twentysecond\
    \ = 0;\n    $file_name_array_count_letters_twentythird = 0;\n    $file_name_array_count_letters_twentyfourth\
    \ = 0;\n    $file_name_array_count\nfunction candidate(...$args) {\n    return\
    \ file_name_check(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    example.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"1example.dll\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"s1sdf3.asd\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"K.dll\") !== \"Yes\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"MY16FILE3.exe\") !== \"Yes\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"His12FILE94.exe\") !==\
    \ \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"_Y.txt\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ?aREYA.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    /this_is_valid.dll\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"this_is_valid.wow\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"this_is_valid.txt\") !== \"Yes\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"this_is_valid.txtexe\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #this2_i4s_5valid.ten\") !== \"No\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"@this1_is6_valid.exe\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"this_is_12valid.6exe4.txt\") !== \"No\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"all.exe.txt\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    I563_No.exe\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"Is3youfault.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"no_one#knows.dll\") !== \"Yes\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"1I563_Yes3.exe\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"I563_Yes3.txtt\") !==\
    \ \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"final..txt\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    final132\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    _f4indsartal132.\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\".txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"s.\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Parse error:  syntax error, unexpected token \"function\" in /tmp/tmp_8sm6a_y.php\
    \ on line 44\n"
  exit_code: 255
  status: SyntaxError
- program: "<?php\n// Create a function which takes a string representing a file's\
    \ name, and returns\n// 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n// A file's name is considered to be valid if and only if all the\
    \ following conditions \n// are met:\n// - There should not be more than three\
    \ digits ('0'-'9') in the file's name.\n// - The file's name contains exactly\
    \ one dot '.'\n// - The substring before the dot should not be empty, and it starts\
    \ with a letter from \n// the latin alphapet ('a'-'z' and 'A'-'Z').\n// - The\
    \ substring after the dot should be one of these: ['txt', 'exe', 'dll']\n// Examples:\n\
    // file_name_check(\"example.txt\") # => 'Yes'\n// file_name_check(\"1example.dll\"\
    ) # => 'No' (the name should start with a latin alphapet letter)\nfunction file_name_check($file_name)\
    \ {\n    $file_name_arr = explode('.', $file_name);\n    $file_name_arr_count\
    \ = count($file_name_arr);\n    $file_name_arr_first = $file_name_arr[0];\n  \
    \  $file_name_arr_last = $file_name_arr[$file_name_arr_count - 1];\n    $file_name_arr_first_count\
    \ = strlen($file_name_arr_first);\n    $file_name_arr_last_count = strlen($file_name_arr_last);\n\
    \    $file_name_arr_first_count_num = 0;\n    $file_name_arr_first_count_letter\
    \ = 0;\n    $file_name_arr_last_count_num = 0;\n    $file_name_arr_last_count_letter\
    \ = 0;\n    $file_name_arr_first_count_num_arr = [];\n    $file_name_arr_first_count_letter_arr\
    \ = [];\n    $file_name_arr_last_count_num_arr = [];\n    $file_name_arr_last_count_letter_arr\
    \ = [];\n    $file_name_arr_first_count_num_arr_count = 0;\n    $file_name_arr_first_count_letter_arr_count\
    \ = 0;\n    $file_name_arr_last_count_num_arr_count = 0;\n    $file_name_arr_last_count_letter_arr_count\
    \ = 0;\n    $file_name_arr_first_count_num_arr_count_num = 0;\n    $file_name_arr_first_count_letter_arr_count_num\
    \ = 0;\n    $file_name_arr_last_count_num_arr_count_num = 0;\n    $file_name_arr_last_count_letter_arr_count_num\
    \ = 0;\n    $file_name_arr_first_count_num_arr_count_num_arr = [];\n    $file_name_arr_first_count_letter_arr_count_num_arr\
    \ = [];\n    $file_name_arr_last_count_num\nfunction candidate(...$args) {\n \
    \   return file_name_check(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    example.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"1example.dll\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"s1sdf3.asd\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"K.dll\") !== \"Yes\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"MY16FILE3.exe\") !== \"Yes\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"His12FILE94.exe\") !==\
    \ \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"_Y.txt\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ?aREYA.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    /this_is_valid.dll\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"this_is_valid.wow\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"this_is_valid.txt\") !== \"Yes\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"this_is_valid.txtexe\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #this2_i4s_5valid.ten\") !== \"No\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"@this1_is6_valid.exe\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"this_is_12valid.6exe4.txt\") !== \"No\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"all.exe.txt\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    I563_No.exe\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"Is3youfault.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"no_one#knows.dll\") !== \"Yes\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"1I563_Yes3.exe\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"I563_Yes3.txtt\") !==\
    \ \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"final..txt\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    final132\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    _f4indsartal132.\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\".txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"s.\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Parse error:  syntax error, unexpected token \"function\" in /tmp/tmprfk0zl3o.php\
    \ on line 40\n"
  exit_code: 255
  status: SyntaxError
- program: "<?php\n// Create a function which takes a string representing a file's\
    \ name, and returns\n// 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n// A file's name is considered to be valid if and only if all the\
    \ following conditions \n// are met:\n// - There should not be more than three\
    \ digits ('0'-'9') in the file's name.\n// - The file's name contains exactly\
    \ one dot '.'\n// - The substring before the dot should not be empty, and it starts\
    \ with a letter from \n// the latin alphapet ('a'-'z' and 'A'-'Z').\n// - The\
    \ substring after the dot should be one of these: ['txt', 'exe', 'dll']\n// Examples:\n\
    // file_name_check(\"example.txt\") # => 'Yes'\n// file_name_check(\"1example.dll\"\
    ) # => 'No' (the name should start with a latin alphapet letter)\nfunction file_name_check($file_name)\
    \ {\n    $file_name_arr = explode('.', $file_name);\n    $file_name_arr_len =\
    \ count($file_name_arr);\n    if ($file_name_arr_len == 2) {\n        $file_name_arr_0\
    \ = $file_name_arr[0];\n        $file_name_arr_1 = $file_name_arr[1];\n      \
    \  $file_name_arr_0_len = strlen($file_name_arr_0);\n        $file_name_arr_1_len\
    \ = strlen($file_name_arr_1);\n        if ($file_name_arr_0_len > 0 && $file_name_arr_1_len\
    \ > 0) {\n            $file_name_arr_0_first_char = $file_name_arr_0[0];\n   \
    \         $file_name_arr_1_last_char = $file_name_arr_1[$file_name_arr_1_len -\
    \ 1];\n            if (preg_match('/^[a-zA-Z]$/', $file_name_arr_0_first_char)\
    \ && preg_match('/^[a-zA-Z]$/', $file_name_arr_1_last_char)) {\n             \
    \   $file_name_arr_0_num_count = preg_match_all('/[0-9]/', $file_name_arr_0);\n\
    \                if ($file_name_arr_0_num_count <= 3) {\n                    if\
    \ ($file_name_arr_1 == 'txt' || $file_name_arr_1 == 'exe' || $file_name_arr_1\
    \ == 'dll') {\n                        return 'Yes';\n                    }\n\
    \                }\n            }\n        }\n    }\n    return 'No';\n}\n\nfunction\
    \ candidate(...$args) {\n    return file_name_check(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"example.txt\") !== \"Yes\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"1example.dll\") !== \"No\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"s1sdf3.asd\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    K.dll\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    MY16FILE3.exe\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"His12FILE94.exe\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"_Y.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"?aREYA.exe\") !== \"No\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"/this_is_valid.dll\") !==\
    \ \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"this_is_valid.wow\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_valid.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"this_is_valid.txtexe\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#this2_i4s_5valid.ten\") !== \"No\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"@this1_is6_valid.exe\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_12valid.6exe4.txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"all.exe.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"I563_No.exe\") !== \"Yes\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Is3youfault.txt\") !== \"\
    Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"no_one#knows.dll\"\
    ) !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1I563_Yes3.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"I563_Yes3.txtt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"final..txt\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"final132\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"_f4indsartal132.\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\".txt\") !== \"No\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"s.\") !== \"\
    No\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Create a function which takes a string representing a file's\
    \ name, and returns\n// 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n// A file's name is considered to be valid if and only if all the\
    \ following conditions \n// are met:\n// - There should not be more than three\
    \ digits ('0'-'9') in the file's name.\n// - The file's name contains exactly\
    \ one dot '.'\n// - The substring before the dot should not be empty, and it starts\
    \ with a letter from \n// the latin alphapet ('a'-'z' and 'A'-'Z').\n// - The\
    \ substring after the dot should be one of these: ['txt', 'exe', 'dll']\n// Examples:\n\
    // file_name_check(\"example.txt\") # => 'Yes'\n// file_name_check(\"1example.dll\"\
    ) # => 'No' (the name should start with a latin alphapet letter)\nfunction file_name_check($file_name)\
    \ {\n    $file_name_array = explode('.', $file_name);\n    $file_name_array[0]\
    \ = str_split($file_name_array[0]);\n    $file_name_array[1] = str_split($file_name_array[1]);\n\
    \    $file_name_array[0] = array_filter($file_name_array[0], function($item) {\n\
    \        return is_numeric($item);\n    });\n    $file_name_array[0] = count($file_name_array[0]);\n\
    \    $file_name_array[1] = implode($file_name_array[1]);\n    if ($file_name_array[0]\
    \ > 3) {\n        return 'No';\n    } elseif (!preg_match('/[a-zA-Z]/', $file_name_array[0][0]))\
    \ {\n        return 'No';\n    } elseif (!in_array($file_name_array[1], ['txt',\
    \ 'exe', 'dll'])) {\n        return 'No';\n    } else {\n        return 'Yes';\n\
    \    }\n}\n\nfunction candidate(...$args) {\n    return file_name_check(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"example.txt\") !== \"Yes\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"1example.dll\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    s1sdf3.asd\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    K.dll\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    MY16FILE3.exe\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"His12FILE94.exe\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"_Y.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"?aREYA.exe\") !== \"No\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"/this_is_valid.dll\") !==\
    \ \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"this_is_valid.wow\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_valid.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"this_is_valid.txtexe\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#this2_i4s_5valid.ten\") !== \"No\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"@this1_is6_valid.exe\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_12valid.6exe4.txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"all.exe.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"I563_No.exe\") !== \"Yes\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Is3youfault.txt\") !== \"\
    Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"no_one#knows.dll\"\
    ) !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1I563_Yes3.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"I563_Yes3.txtt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"final..txt\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"final132\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"_f4indsartal132.\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\".txt\") !== \"No\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"s.\") !== \"\
    No\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Warning:  Trying to access array offset on value of type int in /tmp/tmp2bv1npo1.php\
    \ on line 25\nPHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp2bv1npo1.php:39\n\
    Stack trace:\n#0 /tmp/tmp2bv1npo1.php(67): test()\n#1 {main}\n  thrown in /tmp/tmp2bv1npo1.php\
    \ on line 39\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function which takes a string representing a file's\
    \ name, and returns\n// 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n// A file's name is considered to be valid if and only if all the\
    \ following conditions \n// are met:\n// - There should not be more than three\
    \ digits ('0'-'9') in the file's name.\n// - The file's name contains exactly\
    \ one dot '.'\n// - The substring before the dot should not be empty, and it starts\
    \ with a letter from \n// the latin alphapet ('a'-'z' and 'A'-'Z').\n// - The\
    \ substring after the dot should be one of these: ['txt', 'exe', 'dll']\n// Examples:\n\
    // file_name_check(\"example.txt\") # => 'Yes'\n// file_name_check(\"1example.dll\"\
    ) # => 'No' (the name should start with a latin alphapet letter)\nfunction file_name_check($file_name)\
    \ {\n    $file_name_array = explode('.', $file_name);\n    if (count($file_name_array)\
    \ != 2) {\n        return 'No';\n    }\n    $file_name_array[0] = str_split($file_name_array[0]);\n\
    \    $file_name_array[1] = str_split($file_name_array[1]);\n    $is_valid = true;\n\
    \    $is_valid = $is_valid && (preg_match('/^[a-zA-Z]/', $file_name_array[0][0]));\n\
    \    $is_valid = $is_valid && (preg_match('/^[a-zA-Z]/', $file_name_array[1][0]));\n\
    \    $is_valid = $is_valid && (preg_match('/^[a-zA-Z]/', $file_name_array[1][1]));\n\
    \    $is_valid = $is_valid && (preg_match('/^[a-zA-Z]/', $file_name_array[1][2]));\n\
    \    $is_valid = $is_valid && (preg_match('/^[0-9]/', $file_name_array[1][3])\
    \ == false);\n    $is_valid = $is_valid && (preg_match('/^[0-9]/', $file_name_array[1][4])\
    \ == false);\n    $is_valid = $is_valid && (preg_match('/^[0-9]/', $file_name_array[1][5])\
    \ == false);\n    $is_valid = $is_valid && (preg_match('/^[0-9]/', $file_name_array[1][6])\
    \ == false);\n    $is_valid = $is_valid && (preg_match('/^[0-9]/', $file_name_array[1][7])\
    \ == false);\n    $is_valid = $is_valid && (preg_match('/^[0-9]/', $file_name_array[1][8])\
    \ ==\nfunction candidate(...$args) {\n    return file_name_check(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"example.txt\") !== \"Yes\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"1example.dll\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    s1sdf3.asd\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    K.dll\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    MY16FILE3.exe\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"His12FILE94.exe\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"_Y.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"?aREYA.exe\") !== \"No\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"/this_is_valid.dll\") !==\
    \ \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"this_is_valid.wow\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_valid.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"this_is_valid.txtexe\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#this2_i4s_5valid.ten\") !== \"No\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"@this1_is6_valid.exe\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_12valid.6exe4.txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"all.exe.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"I563_No.exe\") !== \"Yes\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Is3youfault.txt\") !== \"\
    Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"no_one#knows.dll\"\
    ) !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1I563_Yes3.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"I563_Yes3.txtt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"final..txt\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"final132\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"_f4indsartal132.\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\".txt\") !== \"No\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"s.\") !== \"\
    No\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Parse error:  syntax error, unexpected identifier \"candidate\", expecting\
    \ \"(\" in /tmp/tmpo0x21tur.php on line 32\n"
  exit_code: 255
  status: SyntaxError
- program: "<?php\n// Create a function which takes a string representing a file's\
    \ name, and returns\n// 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n// A file's name is considered to be valid if and only if all the\
    \ following conditions \n// are met:\n// - There should not be more than three\
    \ digits ('0'-'9') in the file's name.\n// - The file's name contains exactly\
    \ one dot '.'\n// - The substring before the dot should not be empty, and it starts\
    \ with a letter from \n// the latin alphapet ('a'-'z' and 'A'-'Z').\n// - The\
    \ substring after the dot should be one of these: ['txt', 'exe', 'dll']\n// Examples:\n\
    // file_name_check(\"example.txt\") # => 'Yes'\n// file_name_check(\"1example.dll\"\
    ) # => 'No' (the name should start with a latin alphapet letter)\nfunction file_name_check($file_name)\
    \ {\n    $file_name_array = explode('.', $file_name);\n    $file_name_array_count\
    \ = count($file_name_array);\n    if ($file_name_array_count != 2) {\n       \
    \ return 'No';\n    }\n    $file_name_array_first = $file_name_array[0];\n   \
    \ $file_name_array_second = $file_name_array[1];\n    $file_name_array_first_count\
    \ = strlen($file_name_array_first);\n    $file_name_array_second_count = strlen($file_name_array_second);\n\
    \    if ($file_name_array_first_count == 0 || $file_name_array_second_count ==\
    \ 0) {\n        return 'No';\n    }\n    $file_name_array_first_first_char = $file_name_array_first[0];\n\
    \    if (!ctype_alpha($file_name_array_first_first_char)) {\n        return 'No';\n\
    \    }\n    $file_name_array_first_digit_count = 0;\n    for ($i = 0; $i < $file_name_array_first_count;\
    \ $i++) {\n        $file_name_array_first_char = $file_name_array_first[$i];\n\
    \        if (ctype_digit($file_name_array_first_char)) {\n            $file_name_array_first_digit_count++;\n\
    \        }\n    }\n    if ($file_name_array_first_digit_count > 3) {\n       \
    \ return 'No';\n    }\n    if ($file_name_array_second != 'txt' && $file_name_array_second\
    \ != 'exe' && $file_name_array_second != 'dll') {\n        return 'No';\n    }\n\
    \    return 'Yes';\n}\n\nfunction candidate(...$args) {\n    return file_name_check(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"example.txt\") !== \"Yes\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"1example.dll\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    s1sdf3.asd\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    K.dll\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    MY16FILE3.exe\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"His12FILE94.exe\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"_Y.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"?aREYA.exe\") !== \"No\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"/this_is_valid.dll\") !==\
    \ \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"this_is_valid.wow\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_valid.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"this_is_valid.txtexe\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#this2_i4s_5valid.ten\") !== \"No\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"@this1_is6_valid.exe\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_12valid.6exe4.txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"all.exe.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"I563_No.exe\") !== \"Yes\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Is3youfault.txt\") !== \"\
    Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"no_one#knows.dll\"\
    ) !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1I563_Yes3.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"I563_Yes3.txtt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"final..txt\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"final132\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"_f4indsartal132.\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\".txt\") !== \"No\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"s.\") !== \"\
    No\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Create a function which takes a string representing a file's\
    \ name, and returns\n// 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n// A file's name is considered to be valid if and only if all the\
    \ following conditions \n// are met:\n// - There should not be more than three\
    \ digits ('0'-'9') in the file's name.\n// - The file's name contains exactly\
    \ one dot '.'\n// - The substring before the dot should not be empty, and it starts\
    \ with a letter from \n// the latin alphapet ('a'-'z' and 'A'-'Z').\n// - The\
    \ substring after the dot should be one of these: ['txt', 'exe', 'dll']\n// Examples:\n\
    // file_name_check(\"example.txt\") # => 'Yes'\n// file_name_check(\"1example.dll\"\
    ) # => 'No' (the name should start with a latin alphapet letter)\nfunction file_name_check($file_name)\
    \ {\n    $file_name_arr = explode('.', $file_name);\n    $file_name_arr[0] = str_split($file_name_arr[0]);\n\
    \    $count = 0;\n    foreach ($file_name_arr[0] as $value) {\n        if (is_numeric($value))\
    \ {\n            $count++;\n        }\n    }\n    if ($count > 3) {\n        return\
    \ 'No';\n    }\n    if (!preg_match('/^[a-zA-Z]/', $file_name_arr[0][0])) {\n\
    \        return 'No';\n    }\n    if (!in_array($file_name_arr[1], ['txt', 'exe',\
    \ 'dll'])) {\n        return 'No';\n    }\n    return 'Yes';\n}\n\nfunction candidate(...$args)\
    \ {\n    return file_name_check(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(\"example.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"1example.dll\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"s1sdf3.asd\") !== \"No\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"K.dll\") !== \"Yes\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"MY16FILE3.exe\"\
    ) !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    His12FILE94.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(\"_Y.txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"?aREYA.exe\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"/this_is_valid.dll\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"this_is_valid.wow\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_valid.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"this_is_valid.txtexe\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#this2_i4s_5valid.ten\") !== \"No\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"@this1_is6_valid.exe\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_12valid.6exe4.txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"all.exe.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"I563_No.exe\") !== \"Yes\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Is3youfault.txt\") !== \"\
    Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"no_one#knows.dll\"\
    ) !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1I563_Yes3.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"I563_Yes3.txtt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"final..txt\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"final132\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"_f4indsartal132.\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\".txt\") !== \"No\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"s.\") !== \"\
    No\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmph622wztj.php:55\n\
    Stack trace:\n#0 /tmp/tmph622wztj.php(68): test()\n#1 {main}\n  thrown in /tmp/tmph622wztj.php\
    \ on line 55\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function which takes a string representing a file's\
    \ name, and returns\n// 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n// A file's name is considered to be valid if and only if all the\
    \ following conditions \n// are met:\n// - There should not be more than three\
    \ digits ('0'-'9') in the file's name.\n// - The file's name contains exactly\
    \ one dot '.'\n// - The substring before the dot should not be empty, and it starts\
    \ with a letter from \n// the latin alphapet ('a'-'z' and 'A'-'Z').\n// - The\
    \ substring after the dot should be one of these: ['txt', 'exe', 'dll']\n// Examples:\n\
    // file_name_check(\"example.txt\") # => 'Yes'\n// file_name_check(\"1example.dll\"\
    ) # => 'No' (the name should start with a latin alphapet letter)\nfunction file_name_check($file_name)\
    \ {\n    $file_name_array = explode('.', $file_name);\n    $file_name_array_count\
    \ = count($file_name_array);\n    $file_name_array_first = $file_name_array[0];\n\
    \    $file_name_array_first_count = strlen($file_name_array_first);\n    $file_name_array_first_first_letter\
    \ = $file_name_array_first[0];\n    $file_name_array_last = $file_name_array[$file_name_array_count\
    \ - 1];\n    $file_name_array_last_count = strlen($file_name_array_last);\n  \
    \  $file_name_array_last_array = ['txt', 'exe', 'dll'];\n    $file_name_array_last_array_count\
    \ = count($file_name_array_last_array);\n    $file_name_array_last_array_index\
    \ = 0;\n    $file_name_array_last_array_value = '';\n    $file_name_array_last_array_value_count\
    \ = 0;\n    $file_name_array_last_array_value_count_check = 0;\n    $file_name_array_last_array_value_count_check_count\
    \ = 0;\n    $file_name_array_last_array_value_count_check_count_check = 0;\n \
    \   $file_name_array_last_array_value_count_check_count_check_count = 0;\n   \
    \ $file_name_array_last_array_value_count_check_count_check_count_check = 0;\n\
    \    $file_name_array_last_array_value_count_check_count_check_count_check_count\
    \ = 0;\n    $file_name_array_last_array_value_count_check_count_check_count_check_count_check\
    \ = 0;\n    $file_name_array_last_array_value_count_check_count_check_count_check_count_check_count\
    \ = 0;\n    $file_name_array_last_array_value_count_check_count_check_count_\n\
    function candidate(...$args) {\n    return file_name_check(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"example.txt\") !== \"Yes\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"1example.dll\") !== \"No\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"s1sdf3.asd\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    K.dll\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    MY16FILE3.exe\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"His12FILE94.exe\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"_Y.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"?aREYA.exe\") !== \"No\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"/this_is_valid.dll\") !==\
    \ \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"this_is_valid.wow\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_valid.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"this_is_valid.txtexe\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#this2_i4s_5valid.ten\") !== \"No\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"@this1_is6_valid.exe\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_12valid.6exe4.txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"all.exe.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"I563_No.exe\") !== \"Yes\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Is3youfault.txt\") !== \"\
    Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"no_one#knows.dll\"\
    ) !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1I563_Yes3.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"I563_Yes3.txtt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"final..txt\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"final132\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"_f4indsartal132.\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\".txt\") !== \"No\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"s.\") !== \"\
    No\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Parse error:  syntax error, unexpected token \"function\" in /tmp/tmpx5ljj57y.php\
    \ on line 36\n"
  exit_code: 255
  status: SyntaxError
- program: "<?php\n// Create a function which takes a string representing a file's\
    \ name, and returns\n// 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n// A file's name is considered to be valid if and only if all the\
    \ following conditions \n// are met:\n// - There should not be more than three\
    \ digits ('0'-'9') in the file's name.\n// - The file's name contains exactly\
    \ one dot '.'\n// - The substring before the dot should not be empty, and it starts\
    \ with a letter from \n// the latin alphapet ('a'-'z' and 'A'-'Z').\n// - The\
    \ substring after the dot should be one of these: ['txt', 'exe', 'dll']\n// Examples:\n\
    // file_name_check(\"example.txt\") # => 'Yes'\n// file_name_check(\"1example.dll\"\
    ) # => 'No' (the name should start with a latin alphapet letter)\nfunction file_name_check($file_name)\
    \ {\n    $file_name_array = explode('.', $file_name);\n    $file_name_array_length\
    \ = count($file_name_array);\n    $file_name_array_length_before_dot = $file_name_array_length\
    \ - 1;\n    $file_name_array_length_after_dot = $file_name_array_length - 2;\n\
    \    $file_name_array_length_before_dot_length = strlen($file_name_array[$file_name_array_length_before_dot]);\n\
    \    $file_name_array_length_after_dot_length = strlen($file_name_array[$file_name_array_length_after_dot]);\n\
    \    $file_name_array_length_before_dot_length_digit = preg_match_all('/[0-9]/',\
    \ $file_name_array[$file_name_array_length_before_dot]);\n    $file_name_array_length_after_dot_length_digit\
    \ = preg_match_all('/[0-9]/', $file_name_array[$file_name_array_length_after_dot]);\n\
    \    $file_name_array_length_before_dot_length_letter = preg_match_all('/[a-zA-Z]/',\
    \ $file_name_array[$file_name_array_length_before_dot]);\n    $file_name_array_length_after_dot_length_letter\
    \ = preg_match_all('/[a-zA-Z]/', $file_name_array[$file_name_array_length_after_dot]);\n\
    \    $file_name_array_length_before_dot_length_letter_first = preg_match_all('/^[a-zA-Z]/',\
    \ $file_name_array[$file_name_array_length_before_dot]);\n    $file_name_array_length_after_dot_length_letter_first\
    \ = preg_match_all('/^[a-zA-Z]/', $file_name_array[$file_name_array_length_after_dot]);\n\
    \    $\nfunction candidate(...$args) {\n    return file_name_check(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"example.txt\") !== \"Yes\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"1example.dll\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    s1sdf3.asd\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    K.dll\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    MY16FILE3.exe\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"His12FILE94.exe\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"_Y.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"?aREYA.exe\") !== \"No\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"/this_is_valid.dll\") !==\
    \ \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"this_is_valid.wow\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_valid.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"this_is_valid.txtexe\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#this2_i4s_5valid.ten\") !== \"No\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"@this1_is6_valid.exe\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_12valid.6exe4.txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"all.exe.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"I563_No.exe\") !== \"Yes\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Is3youfault.txt\") !== \"\
    Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"no_one#knows.dll\"\
    ) !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1I563_Yes3.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"I563_Yes3.txtt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"final..txt\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"final132\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"_f4indsartal132.\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\".txt\") !== \"No\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"s.\") !== \"\
    No\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Parse error:  syntax error, unexpected token \"function\", expecting\
    \ variable or \"{\" or \"$\" in /tmp/tmpee5uv0c7.php on line 28\n"
  exit_code: 255
  status: SyntaxError
- program: "<?php\n// Create a function which takes a string representing a file's\
    \ name, and returns\n// 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n// A file's name is considered to be valid if and only if all the\
    \ following conditions \n// are met:\n// - There should not be more than three\
    \ digits ('0'-'9') in the file's name.\n// - The file's name contains exactly\
    \ one dot '.'\n// - The substring before the dot should not be empty, and it starts\
    \ with a letter from \n// the latin alphapet ('a'-'z' and 'A'-'Z').\n// - The\
    \ substring after the dot should be one of these: ['txt', 'exe', 'dll']\n// Examples:\n\
    // file_name_check(\"example.txt\") # => 'Yes'\n// file_name_check(\"1example.dll\"\
    ) # => 'No' (the name should start with a latin alphapet letter)\nfunction file_name_check($file_name)\
    \ {\n    $file_name_arr = explode('.', $file_name);\n    $file_name_arr_count\
    \ = count($file_name_arr);\n    if ($file_name_arr_count !== 2) {\n        return\
    \ 'No';\n    }\n    $file_name_arr_first = $file_name_arr[0];\n    $file_name_arr_last\
    \ = $file_name_arr[1];\n    if (preg_match('/^[a-zA-Z]/', $file_name_arr_first)\
    \ === 0) {\n        return 'No';\n    }\n    if (preg_match('/[0-9]{4,}/', $file_name_arr_first)\
    \ === 1) {\n        return 'No';\n    }\n    if ($file_name_arr_last !== 'txt'\
    \ && $file_name_arr_last !== 'exe' && $file_name_arr_last !== 'dll') {\n     \
    \   return 'No';\n    }\n    return 'Yes';\n}\n\nfunction candidate(...$args)\
    \ {\n    return file_name_check(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(\"example.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"1example.dll\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"s1sdf3.asd\") !== \"No\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"K.dll\") !== \"Yes\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"MY16FILE3.exe\"\
    ) !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    His12FILE94.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(\"_Y.txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"?aREYA.exe\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"/this_is_valid.dll\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"this_is_valid.wow\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_valid.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"this_is_valid.txtexe\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#this2_i4s_5valid.ten\") !== \"No\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"@this1_is6_valid.exe\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_12valid.6exe4.txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"all.exe.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"I563_No.exe\") !== \"Yes\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Is3youfault.txt\") !== \"\
    Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"no_one#knows.dll\"\
    ) !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1I563_Yes3.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"I563_Yes3.txtt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"final..txt\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"final132\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"_f4indsartal132.\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\".txt\") !== \"No\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"s.\") !== \"\
    No\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpduhh7tis.php:44\n\
    Stack trace:\n#0 /tmp/tmpduhh7tis.php(67): test()\n#1 {main}\n  thrown in /tmp/tmpduhh7tis.php\
    \ on line 44\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function which takes a string representing a file's\
    \ name, and returns\n// 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n// A file's name is considered to be valid if and only if all the\
    \ following conditions \n// are met:\n// - There should not be more than three\
    \ digits ('0'-'9') in the file's name.\n// - The file's name contains exactly\
    \ one dot '.'\n// - The substring before the dot should not be empty, and it starts\
    \ with a letter from \n// the latin alphapet ('a'-'z' and 'A'-'Z').\n// - The\
    \ substring after the dot should be one of these: ['txt', 'exe', 'dll']\n// Examples:\n\
    // file_name_check(\"example.txt\") # => 'Yes'\n// file_name_check(\"1example.dll\"\
    ) # => 'No' (the name should start with a latin alphapet letter)\nfunction file_name_check($file_name)\
    \ {\n    $file_name_arr = explode('.', $file_name);\n    $file_name_arr_length\
    \ = count($file_name_arr);\n    if ($file_name_arr_length !== 2) {\n        return\
    \ 'No';\n    }\n    $file_name_arr_first = $file_name_arr[0];\n    $file_name_arr_second\
    \ = $file_name_arr[1];\n    if (preg_match('/^[a-zA-Z]+$/', $file_name_arr_first)\
    \ === 0) {\n        return 'No';\n    }\n    if (preg_match('/^[a-zA-Z]+$/', $file_name_arr_second)\
    \ === 0) {\n        return 'No';\n    }\n    if (preg_match('/^[0-9]+$/', $file_name_arr_first)\
    \ === 1) {\n        return 'No';\n    }\n    if (preg_match('/^[0-9]+$/', $file_name_arr_second)\
    \ === 1) {\n        return 'No';\n    }\n    if (preg_match('/^[0-9]+$/', $file_name_arr_first)\
    \ === 0) {\n        return 'No';\n    }\n    if (preg_match('/^[0-9]+$/', $file_name_arr_second)\
    \ === 0) {\n        return 'No';\n    }\n    if (preg_match('/^[0-9]{3,}$/', $file_name_arr_first)\
    \ === 1) {\n        return 'No';\n    }\n    if (preg_match('/^[0-9]{3,}$/', $file_name_arr_second)\
    \ === 1) {\n        return 'No';\n    }\n    if ($file_name_arr_second !== 'txt'\
    \ && $file_name_arr_second !== 'exe' && $file_name_arr_second !== 'dll') {\n \
    \       return 'No';\n    }\n    return 'Yes';\n}\n\nfunction candidate(...$args)\
    \ {\n    return file_name_check(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(\"example.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"1example.dll\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"s1sdf3.asd\") !== \"No\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"K.dll\") !== \"Yes\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"MY16FILE3.exe\"\
    ) !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    His12FILE94.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(\"_Y.txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"?aREYA.exe\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"/this_is_valid.dll\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"this_is_valid.wow\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_valid.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"this_is_valid.txtexe\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#this2_i4s_5valid.ten\") !== \"No\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"@this1_is6_valid.exe\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_12valid.6exe4.txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"all.exe.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"I563_No.exe\") !== \"Yes\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Is3youfault.txt\") !== \"\
    Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"no_one#knows.dll\"\
    ) !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1I563_Yes3.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"I563_Yes3.txtt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"final..txt\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"final132\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"_f4indsartal132.\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\".txt\") !== \"No\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"s.\") !== \"\
    No\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp6ba22057.php:57\n\
    Stack trace:\n#0 /tmp/tmp6ba22057.php(85): test()\n#1 {main}\n  thrown in /tmp/tmp6ba22057.php\
    \ on line 57\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function which takes a string representing a file's\
    \ name, and returns\n// 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n// A file's name is considered to be valid if and only if all the\
    \ following conditions \n// are met:\n// - There should not be more than three\
    \ digits ('0'-'9') in the file's name.\n// - The file's name contains exactly\
    \ one dot '.'\n// - The substring before the dot should not be empty, and it starts\
    \ with a letter from \n// the latin alphapet ('a'-'z' and 'A'-'Z').\n// - The\
    \ substring after the dot should be one of these: ['txt', 'exe', 'dll']\n// Examples:\n\
    // file_name_check(\"example.txt\") # => 'Yes'\n// file_name_check(\"1example.dll\"\
    ) # => 'No' (the name should start with a latin alphapet letter)\nfunction file_name_check($file_name)\
    \ {\n    $file_name_array = explode('.', $file_name);\n    $file_name_array_length\
    \ = count($file_name_array);\n    if ($file_name_array_length != 2) {\n      \
    \  return 'No';\n    }\n    $file_name_array_first = $file_name_array[0];\n  \
    \  $file_name_array_second = $file_name_array[1];\n    $file_name_array_first_length\
    \ = strlen($file_name_array_first);\n    $file_name_array_second_length = strlen($file_name_array_second);\n\
    \    if ($file_name_array_first_length == 0) {\n        return 'No';\n    }\n\
    \    if ($file_name_array_second_length == 0) {\n        return 'No';\n    }\n\
    \    if ($file_name_array_second != 'txt' && $file_name_array_second != 'exe'\
    \ && $file_name_array_second != 'dll') {\n        return 'No';\n    }\n    $file_name_array_first_first_char\
    \ = $file_name_array_first[0];\n    if (!(($file_name_array_first_first_char >=\
    \ 'a' && $file_name_array_first_first_char <= 'z') || ($file_name_array_first_first_char\
    \ >= 'A' && $file_name_array_first_first_char <= 'Z'))) {\n        return 'No';\n\
    \    }\n    $file_name_array_first_digit_count = 0;\n    for ($i = 0; $i < $file_name_array_first_length;\
    \ $i++) {\n        $file_name_array_first_char = $file_name_array_first[$i];\n\
    \        if ($file_name_array_first_char >= '0' && $file_name_array_first_char\
    \ <= '9') {\n            $file_name_array_first_digit_count++;\n        }\n  \
    \  }\n    if ($file_name_array_first_digit_count > 3) {\n        return 'No';\n\
    \    }\n\nfunction candidate(...$args) {\n    return file_name_check(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"example.txt\") !== \"Yes\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"1example.dll\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    s1sdf3.asd\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    K.dll\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    MY16FILE3.exe\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"His12FILE94.exe\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"_Y.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"?aREYA.exe\") !== \"No\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"/this_is_valid.dll\") !==\
    \ \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"this_is_valid.wow\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_valid.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"this_is_valid.txtexe\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#this2_i4s_5valid.ten\") !== \"No\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"@this1_is6_valid.exe\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_12valid.6exe4.txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"all.exe.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"I563_No.exe\") !== \"Yes\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Is3youfault.txt\") !== \"\
    Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"no_one#knows.dll\"\
    ) !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1I563_Yes3.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"I563_Yes3.txtt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"final..txt\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"final132\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"_f4indsartal132.\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\".txt\") !== \"No\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"s.\") !== \"\
    No\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Parse error:  Unclosed '{' on line 14 in /tmp/tmpmo6pboxe.php on line\
    \ 81\n"
  exit_code: 255
  status: SyntaxError
- program: "<?php\n// Create a function which takes a string representing a file's\
    \ name, and returns\n// 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n// A file's name is considered to be valid if and only if all the\
    \ following conditions \n// are met:\n// - There should not be more than three\
    \ digits ('0'-'9') in the file's name.\n// - The file's name contains exactly\
    \ one dot '.'\n// - The substring before the dot should not be empty, and it starts\
    \ with a letter from \n// the latin alphapet ('a'-'z' and 'A'-'Z').\n// - The\
    \ substring after the dot should be one of these: ['txt', 'exe', 'dll']\n// Examples:\n\
    // file_name_check(\"example.txt\") # => 'Yes'\n// file_name_check(\"1example.dll\"\
    ) # => 'No' (the name should start with a latin alphapet letter)\nfunction file_name_check($file_name)\
    \ {\n    $file_name_parts = explode('.', $file_name);\n    if (count($file_name_parts)\
    \ != 2) {\n        return 'No';\n    }\n    $file_name_parts[0] = preg_replace('/[^a-zA-Z]/',\
    \ '', $file_name_parts[0]);\n    if (strlen($file_name_parts[0]) == 0) {\n   \
    \     return 'No';\n    }\n    if (!in_array($file_name_parts[1], ['txt', 'exe',\
    \ 'dll'])) {\n        return 'No';\n    }\n    if (preg_match_all('/[0-9]/', $file_name)\
    \ > 3) {\n        return 'No';\n    }\n    return 'Yes';\n}\n\necho file_name_check(\"\
    example.txt\") . \"\\n\";\necho file_name_check(\"1example.dll\") . \"\\n\";\n\
    echo file_name_check(\"1example.dll\") . \"\\n\";\necho file_name_check(\"1example.dll\"\
    ) . \"\\n\";\necho file_name_check(\"1example.dll\") . \"\\n\";\necho file_name_check(\"\
    1example.dll\") . \"\\n\";\necho file_name_check(\"1example.dll\") . \"\\n\";\n\
    echo file_name_check(\"1example.dll\") . \"\\n\";\necho file_name_check(\"1example.dll\"\
    ) . \"\\n\";\necho file_name_check(\"1example.dll\") . \"\\n\";\necho file_name_check(\"\
    1example.dll\") . \"\\n\";\necho file_name_check(\"1example.dll\") . \"\\n\";\n\
    echo file_name_check(\"1example.dll\") . \"\\n\";\necho file_name_check(\"1example.dll\"\
    ) . \"\\n\";\necho file_name_check(\"1example.dll\") . \"\\n\";\necho file_name_check(\"\
    1example.dll\") . \"\\n\";\necho file_name_check(\"1example.dll\") . \"\\n\";\n\
    echo file_name_check(\"1example.dll\") . \"\\n\";\necho file_name_check(\"1example.dll\"\
    ) .\nfunction candidate(...$args) {\n    return file_name_check(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(\"example.txt\") !== \"Yes\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"1example.dll\") !==\
    \ \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"s1sdf3.asd\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    K.dll\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    MY16FILE3.exe\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"His12FILE94.exe\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"_Y.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"?aREYA.exe\") !== \"No\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"/this_is_valid.dll\") !==\
    \ \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"this_is_valid.wow\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_valid.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"this_is_valid.txtexe\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#this2_i4s_5valid.ten\") !== \"No\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"@this1_is6_valid.exe\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_12valid.6exe4.txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"all.exe.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"I563_No.exe\") !== \"Yes\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Is3youfault.txt\") !== \"\
    Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"no_one#knows.dll\"\
    ) !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1I563_Yes3.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"I563_Yes3.txtt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"final..txt\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"final132\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"_f4indsartal132.\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\".txt\") !== \"No\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"s.\") !== \"\
    No\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Parse error:  syntax error, unexpected identifier \"candidate\", expecting\
    \ \"(\" in /tmp/tmp1xj4hqxt.php on line 51\n"
  exit_code: 255
  status: SyntaxError
- program: "<?php\n// Create a function which takes a string representing a file's\
    \ name, and returns\n// 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n// A file's name is considered to be valid if and only if all the\
    \ following conditions \n// are met:\n// - There should not be more than three\
    \ digits ('0'-'9') in the file's name.\n// - The file's name contains exactly\
    \ one dot '.'\n// - The substring before the dot should not be empty, and it starts\
    \ with a letter from \n// the latin alphapet ('a'-'z' and 'A'-'Z').\n// - The\
    \ substring after the dot should be one of these: ['txt', 'exe', 'dll']\n// Examples:\n\
    // file_name_check(\"example.txt\") # => 'Yes'\n// file_name_check(\"1example.dll\"\
    ) # => 'No' (the name should start with a latin alphapet letter)\nfunction file_name_check($file_name)\
    \ {\n    $file_name_arr = explode('.', $file_name);\n    $file_name_arr_len =\
    \ count($file_name_arr);\n    if ($file_name_arr_len != 2) {\n        return 'No';\n\
    \    }\n    if (preg_match('/[^a-zA-Z]/', $file_name_arr[0])) {\n        return\
    \ 'No';\n    }\n    if (!in_array($file_name_arr[1], ['txt', 'exe', 'dll'])) {\n\
    \        return 'No';\n    }\n    if (preg_match('/[0-9]{4,}/', $file_name)) {\n\
    \        return 'No';\n    }\n    return 'Yes';\n}\n\necho file_name_check(\"\
    example.txt\") . PHP_EOL;\necho file_name_check(\"1example.dll\") . PHP_EOL;\n\
    echo file_name_check(\"example.exe\") . PHP_EOL;\necho file_name_check(\"example.txt.exe\"\
    ) . PHP_EOL;\necho file_name_check(\"example.txt.dll\") . PHP_EOL;\necho file_name_check(\"\
    example.txt.txt\") . PHP_EOL;\necho file_name_check(\"example.txt.exe.txt\") .\
    \ PHP_EOL;\necho file_name_check(\"example.txt.exe.dll\") . PHP_EOL;\necho file_name_check(\"\
    example.txt.exe.exe\") . PHP_EOL;\necho file_name_check(\"example.txt.exe.exe.exe\"\
    ) . PHP_EOL;\necho file_name_check(\"example.txt.exe.exe.exe.exe\") . PHP_EOL;\n\
    echo file_name_check(\"example.txt.exe.exe.exe.exe.exe\") . PHP_EOL;\necho file_name_check(\"\
    example.txt.exe.exe.exe.exe.exe.exe\") . PHP_EOL;\necho file_name_check(\"example.txt.exe.exe.exe.exe.exe.exe.exe\"\
    ) . PHP_EOL;\necho file_name_check(\"\nfunction candidate(...$args) {\n    return\
    \ file_name_check(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    example.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"1example.dll\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"s1sdf3.asd\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"K.dll\") !== \"Yes\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"MY16FILE3.exe\") !== \"Yes\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"His12FILE94.exe\") !==\
    \ \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"_Y.txt\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ?aREYA.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    /this_is_valid.dll\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"this_is_valid.wow\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"this_is_valid.txt\") !== \"Yes\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"this_is_valid.txtexe\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #this2_i4s_5valid.ten\") !== \"No\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"@this1_is6_valid.exe\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"this_is_12valid.6exe4.txt\") !== \"No\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"all.exe.txt\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    I563_No.exe\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"Is3youfault.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"no_one#knows.dll\") !== \"Yes\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"1I563_Yes3.exe\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"I563_Yes3.txtt\") !==\
    \ \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"final..txt\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    final132\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    _f4indsartal132.\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\".txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"s.\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Parse error:  syntax error, unexpected identifier \"example\", expecting\
    \ \")\" in /tmp/tmpo0cjgn6v.php on line 52\n"
  exit_code: 255
  status: SyntaxError
- program: "<?php\n// Create a function which takes a string representing a file's\
    \ name, and returns\n// 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n// A file's name is considered to be valid if and only if all the\
    \ following conditions \n// are met:\n// - There should not be more than three\
    \ digits ('0'-'9') in the file's name.\n// - The file's name contains exactly\
    \ one dot '.'\n// - The substring before the dot should not be empty, and it starts\
    \ with a letter from \n// the latin alphapet ('a'-'z' and 'A'-'Z').\n// - The\
    \ substring after the dot should be one of these: ['txt', 'exe', 'dll']\n// Examples:\n\
    // file_name_check(\"example.txt\") # => 'Yes'\n// file_name_check(\"1example.dll\"\
    ) # => 'No' (the name should start with a latin alphapet letter)\nfunction file_name_check($file_name)\
    \ {\n    $file_name_array = explode('.', $file_name);\n    $file_name_array_count\
    \ = count($file_name_array);\n    $file_name_array_first = $file_name_array[0];\n\
    \    $file_name_array_last = $file_name_array[$file_name_array_count - 1];\n \
    \   $file_name_array_first_count = strlen($file_name_array_first);\n    $file_name_array_last_count\
    \ = strlen($file_name_array_last);\n    $file_name_array_first_first_char = $file_name_array_first[0];\n\
    \    $file_name_array_first_first_char_ascii = ord($file_name_array_first_first_char);\n\
    \    $file_name_array_first_first_char_ascii_lower = $file_name_array_first_first_char_ascii\
    \ >= 97 && $file_name_array_first_first_char_ascii <= 122;\n    $file_name_array_first_first_char_ascii_upper\
    \ = $file_name_array_first_first_char_ascii >= 65 && $file_name_array_first_first_char_ascii\
    \ <= 90;\n    $file_name_array_first_first_char_ascii_valid = $file_name_array_first_first_char_ascii_lower\
    \ || $file_name_array_first_first_char_ascii_upper;\n    $file_name_array_first_valid\
    \ = $file_name_array_first_first_char_ascii_valid && $file_name_array_first_count\
    \ > 0;\n    $file_name_array_last_valid = $file_name_array_last == 'txt' || $file_name_array_last\
    \ == 'exe' || $file_name_array_last == 'dll';\n    $file_name_array_valid = $file_name_array_count\
    \ == 2 && $file_name_array_first_valid && $file_name_array_last_valid;\n   \n\
    function candidate(...$args) {\n    return file_name_check(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"example.txt\") !== \"Yes\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"1example.dll\") !== \"No\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"s1sdf3.asd\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    K.dll\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    MY16FILE3.exe\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"His12FILE94.exe\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"_Y.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"?aREYA.exe\") !== \"No\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"/this_is_valid.dll\") !==\
    \ \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"this_is_valid.wow\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_valid.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"this_is_valid.txtexe\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#this2_i4s_5valid.ten\") !== \"No\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"@this1_is6_valid.exe\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_12valid.6exe4.txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"all.exe.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"I563_No.exe\") !== \"Yes\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Is3youfault.txt\") !== \"\
    Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"no_one#knows.dll\"\
    ) !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1I563_Yes3.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"I563_Yes3.txtt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"final..txt\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"final132\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"_f4indsartal132.\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\".txt\") !== \"No\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"s.\") !== \"\
    No\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Parse error:  Unclosed '{' on line 14 in /tmp/tmp61xzypnw.php on line\
    \ 63\n"
  exit_code: 255
  status: SyntaxError
- program: "<?php\n// Create a function which takes a string representing a file's\
    \ name, and returns\n// 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n// A file's name is considered to be valid if and only if all the\
    \ following conditions \n// are met:\n// - There should not be more than three\
    \ digits ('0'-'9') in the file's name.\n// - The file's name contains exactly\
    \ one dot '.'\n// - The substring before the dot should not be empty, and it starts\
    \ with a letter from \n// the latin alphapet ('a'-'z' and 'A'-'Z').\n// - The\
    \ substring after the dot should be one of these: ['txt', 'exe', 'dll']\n// Examples:\n\
    // file_name_check(\"example.txt\") # => 'Yes'\n// file_name_check(\"1example.dll\"\
    ) # => 'No' (the name should start with a latin alphapet letter)\nfunction file_name_check($file_name)\
    \ {\n    $file_name_array = explode('.', $file_name);\n    $file_name_array[0]\
    \ = str_split($file_name_array[0]);\n    $file_name_array[1] = str_split($file_name_array[1]);\n\
    \    $count = 0;\n    $count_2 = 0;\n    foreach ($file_name_array[0] as $key\
    \ => $value) {\n        if (is_numeric($value)) {\n            $count++;\n   \
    \     }\n    }\n    foreach ($file_name_array[1] as $key => $value) {\n      \
    \  if (is_numeric($value)) {\n            $count_2++;\n        }\n    }\n    if\
    \ ($count > 3 || $count_2 > 0) {\n        return 'No';\n    } elseif (ctype_alpha($file_name_array[0][0])\
    \ && $file_name_array[1][0] == 't' && $file_name_array[1][1] == 'x' && $file_name_array[1][2]\
    \ == 't') {\n        return 'Yes';\n    } elseif (ctype_alpha($file_name_array[0][0])\
    \ && $file_name_array[1][0] == 'e' && $file_name_array[1][1] == 'x' && $file_name_array[1][2]\
    \ == 'e') {\n        return 'Yes';\n    } elseif (ctype_alpha($file_name_array[0][0])\
    \ && $file_name_array[1][0] == 'd' && $file_name_array[1][1] == 'l' && $file_name_array[1][2]\
    \ == 'l') {\n        return 'Yes';\n    } else {\n        return 'No';\n    }\n\
    }\n\nfunction candidate(...$args) {\n    return file_name_check(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(\"example.txt\") !== \"Yes\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"1example.dll\") !==\
    \ \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"s1sdf3.asd\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    K.dll\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    MY16FILE3.exe\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"His12FILE94.exe\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"_Y.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"?aREYA.exe\") !== \"No\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"/this_is_valid.dll\") !==\
    \ \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"this_is_valid.wow\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_valid.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"this_is_valid.txtexe\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#this2_i4s_5valid.ten\") !== \"No\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"@this1_is6_valid.exe\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_12valid.6exe4.txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"all.exe.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"I563_No.exe\") !== \"Yes\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Is3youfault.txt\") !== \"\
    Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"no_one#knows.dll\"\
    ) !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1I563_Yes3.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"I563_Yes3.txtt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"final..txt\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"final132\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"_f4indsartal132.\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\".txt\") !== \"No\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"s.\") !== \"\
    No\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpbzr8snsy.php:59\n\
    Stack trace:\n#0 /tmp/tmpbzr8snsy.php(76): test()\n#1 {main}\n  thrown in /tmp/tmpbzr8snsy.php\
    \ on line 59\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function which takes a string representing a file's\
    \ name, and returns\n// 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n// A file's name is considered to be valid if and only if all the\
    \ following conditions \n// are met:\n// - There should not be more than three\
    \ digits ('0'-'9') in the file's name.\n// - The file's name contains exactly\
    \ one dot '.'\n// - The substring before the dot should not be empty, and it starts\
    \ with a letter from \n// the latin alphapet ('a'-'z' and 'A'-'Z').\n// - The\
    \ substring after the dot should be one of these: ['txt', 'exe', 'dll']\n// Examples:\n\
    // file_name_check(\"example.txt\") # => 'Yes'\n// file_name_check(\"1example.dll\"\
    ) # => 'No' (the name should start with a latin alphapet letter)\nfunction file_name_check($file_name)\
    \ {\n    $file_name_array = explode('.', $file_name);\n    $file_name_array_count\
    \ = count($file_name_array);\n    $file_name_array_first = $file_name_array[0];\n\
    \    $file_name_array_last = $file_name_array[$file_name_array_count - 1];\n \
    \   $file_name_array_first_count = strlen($file_name_array_first);\n    $file_name_array_last_count\
    \ = strlen($file_name_array_last);\n    $file_name_array_first_first_letter =\
    \ $file_name_array_first[0];\n    $file_name_array_first_first_letter_ascii =\
    \ ord($file_name_array_first_first_letter);\n    $file_name_array_first_first_letter_ascii_lower\
    \ = $file_name_array_first_first_letter_ascii >= 97 && $file_name_array_first_first_letter_ascii\
    \ <= 122;\n    $file_name_array_first_first_letter_ascii_upper = $file_name_array_first_first_letter_ascii\
    \ >= 65 && $file_name_array_first_first_letter_ascii <= 90;\n    $file_name_array_first_first_letter_ascii_valid\
    \ = $file_name_array_first_first_letter_ascii_lower || $file_name_array_first_first_letter_ascii_upper;\n\
    \    $file_name_array_first_first_letter_valid = $file_name_array_first_first_letter_ascii_valid;\n\
    \    $file_name_array_first_valid = $file_name_array_first_count > 0 && $file_name_array_first_first_letter_valid;\n\
    \    $file_name_array_last_valid = $file_name_array_last === 'txt' || $file_name_array_last\
    \ === 'exe' || $file_name_array_last === 'dll';\n    $file_name_array_valid =\
    \ $file_\nfunction candidate(...$args) {\n    return file_name_check(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"example.txt\") !== \"Yes\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"1example.dll\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    s1sdf3.asd\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    K.dll\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    MY16FILE3.exe\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"His12FILE94.exe\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"_Y.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"?aREYA.exe\") !== \"No\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"/this_is_valid.dll\") !==\
    \ \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"this_is_valid.wow\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_valid.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"this_is_valid.txtexe\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#this2_i4s_5valid.ten\") !== \"No\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"@this1_is6_valid.exe\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_12valid.6exe4.txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"all.exe.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"I563_No.exe\") !== \"Yes\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Is3youfault.txt\") !== \"\
    Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"no_one#knows.dll\"\
    ) !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1I563_Yes3.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"I563_Yes3.txtt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"final..txt\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"final132\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"_f4indsartal132.\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\".txt\") !== \"No\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"s.\") !== \"\
    No\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Parse error:  syntax error, unexpected token \"function\" in /tmp/tmp6hikb1s5.php\
    \ on line 30\n"
  exit_code: 255
  status: SyntaxError
- program: "<?php\n// Create a function which takes a string representing a file's\
    \ name, and returns\n// 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n// A file's name is considered to be valid if and only if all the\
    \ following conditions \n// are met:\n// - There should not be more than three\
    \ digits ('0'-'9') in the file's name.\n// - The file's name contains exactly\
    \ one dot '.'\n// - The substring before the dot should not be empty, and it starts\
    \ with a letter from \n// the latin alphapet ('a'-'z' and 'A'-'Z').\n// - The\
    \ substring after the dot should be one of these: ['txt', 'exe', 'dll']\n// Examples:\n\
    // file_name_check(\"example.txt\") # => 'Yes'\n// file_name_check(\"1example.dll\"\
    ) # => 'No' (the name should start with a latin alphapet letter)\nfunction file_name_check($file_name)\
    \ {\n    $file_name_array = explode('.', $file_name);\n    $file_name_array_length\
    \ = count($file_name_array);\n    if ($file_name_array_length != 2) {\n      \
    \  return 'No';\n    }\n    $file_name_array_first = $file_name_array[0];\n  \
    \  $file_name_array_second = $file_name_array[1];\n    if (!preg_match('/^[a-zA-Z]/',\
    \ $file_name_array_first)) {\n        return 'No';\n    }\n    if (preg_match('/[0-9]{4,}/',\
    \ $file_name_array_first)) {\n        return 'No';\n    }\n    if (!preg_match('/^(txt|exe|dll)$/',\
    \ $file_name_array_second)) {\n        return 'No';\n    }\n    return 'Yes';\n\
    }\n\nfunction candidate(...$args) {\n    return file_name_check(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(\"example.txt\") !== \"Yes\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"1example.dll\") !==\
    \ \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"s1sdf3.asd\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    K.dll\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    MY16FILE3.exe\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"His12FILE94.exe\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"_Y.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"?aREYA.exe\") !== \"No\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"/this_is_valid.dll\") !==\
    \ \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"this_is_valid.wow\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_valid.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"this_is_valid.txtexe\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#this2_i4s_5valid.ten\") !== \"No\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"@this1_is6_valid.exe\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_12valid.6exe4.txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"all.exe.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"I563_No.exe\") !== \"Yes\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Is3youfault.txt\") !== \"\
    Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"no_one#knows.dll\"\
    ) !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1I563_Yes3.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"I563_Yes3.txtt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"final..txt\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"final132\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"_f4indsartal132.\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\".txt\") !== \"No\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"s.\") !== \"\
    No\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpub_jwohf.php:44\n\
    Stack trace:\n#0 /tmp/tmpub_jwohf.php(67): test()\n#1 {main}\n  thrown in /tmp/tmpub_jwohf.php\
    \ on line 44\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function which takes a string representing a file's\
    \ name, and returns\n// 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n// A file's name is considered to be valid if and only if all the\
    \ following conditions \n// are met:\n// - There should not be more than three\
    \ digits ('0'-'9') in the file's name.\n// - The file's name contains exactly\
    \ one dot '.'\n// - The substring before the dot should not be empty, and it starts\
    \ with a letter from \n// the latin alphapet ('a'-'z' and 'A'-'Z').\n// - The\
    \ substring after the dot should be one of these: ['txt', 'exe', 'dll']\n// Examples:\n\
    // file_name_check(\"example.txt\") # => 'Yes'\n// file_name_check(\"1example.dll\"\
    ) # => 'No' (the name should start with a latin alphapet letter)\nfunction file_name_check($file_name)\
    \ {\n    $file_name_arr = explode('.', $file_name);\n    $file_name_arr_len =\
    \ count($file_name_arr);\n    if ($file_name_arr_len == 2) {\n        $file_name_arr_0\
    \ = $file_name_arr[0];\n        $file_name_arr_1 = $file_name_arr[1];\n      \
    \  $file_name_arr_0_len = strlen($file_name_arr_0);\n        $file_name_arr_1_len\
    \ = strlen($file_name_arr_1);\n        if ($file_name_arr_0_len > 0 && $file_name_arr_1_len\
    \ > 0) {\n            $file_name_arr_0_arr = str_split($file_name_arr_0);\n  \
    \          $file_name_arr_1_arr = str_split($file_name_arr_1);\n            $file_name_arr_0_arr_len\
    \ = count($file_name_arr_0_arr);\n            $file_name_arr_1_arr_len = count($file_name_arr_1_arr);\n\
    \            $file_name_arr_0_arr_0 = $file_name_arr_0_arr[0];\n            $file_name_arr_1_arr_0\
    \ = $file_name_arr_1_arr[0];\n            $file_name_arr_0_arr_0_ascii = ord($file_name_arr_0_arr_0);\n\
    \            $file_name_arr_1_arr_0_ascii = ord($file_name_arr_1_arr_0);\n   \
    \         $file_name_arr_0_arr_0_ascii_lower = $file_name_arr_0_arr_0_ascii >=\
    \ 97 && $file_name_arr_0_arr_0_ascii <= 122;\n            $file_name_arr_0_arr_0_ascii_upper\
    \ = $file_name_arr_0_arr_0_ascii >= 65 && $file_name_arr_0_arr_0_ascii <=\nfunction\
    \ candidate(...$args) {\n    return file_name_check(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"example.txt\") !== \"Yes\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"1example.dll\") !== \"No\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"s1sdf3.asd\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    K.dll\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    MY16FILE3.exe\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"His12FILE94.exe\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"_Y.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"?aREYA.exe\") !== \"No\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"/this_is_valid.dll\") !==\
    \ \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"this_is_valid.wow\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_valid.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"this_is_valid.txtexe\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#this2_i4s_5valid.ten\") !== \"No\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"@this1_is6_valid.exe\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_12valid.6exe4.txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"all.exe.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"I563_No.exe\") !== \"Yes\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Is3youfault.txt\") !== \"\
    Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"no_one#knows.dll\"\
    ) !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1I563_Yes3.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"I563_Yes3.txtt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"final..txt\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"final132\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"_f4indsartal132.\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\".txt\") !== \"No\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"s.\") !== \"\
    No\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Parse error:  syntax error, unexpected identifier \"candidate\", expecting\
    \ \"(\" in /tmp/tmplo6un7iw.php on line 33\n"
  exit_code: 255
  status: SyntaxError
- program: "<?php\n// Create a function which takes a string representing a file's\
    \ name, and returns\n// 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n// A file's name is considered to be valid if and only if all the\
    \ following conditions \n// are met:\n// - There should not be more than three\
    \ digits ('0'-'9') in the file's name.\n// - The file's name contains exactly\
    \ one dot '.'\n// - The substring before the dot should not be empty, and it starts\
    \ with a letter from \n// the latin alphapet ('a'-'z' and 'A'-'Z').\n// - The\
    \ substring after the dot should be one of these: ['txt', 'exe', 'dll']\n// Examples:\n\
    // file_name_check(\"example.txt\") # => 'Yes'\n// file_name_check(\"1example.dll\"\
    ) # => 'No' (the name should start with a latin alphapet letter)\nfunction file_name_check($file_name)\
    \ {\n    $file_name_array = explode('.', $file_name);\n    $file_name_array_length\
    \ = count($file_name_array);\n    if ($file_name_array_length != 2) {\n      \
    \  return 'No';\n    }\n    $file_name_array_first = $file_name_array[0];\n  \
    \  $file_name_array_second = $file_name_array[1];\n    $file_name_array_first_length\
    \ = strlen($file_name_array_first);\n    if ($file_name_array_first_length ==\
    \ 0) {\n        return 'No';\n    }\n    $file_name_array_first_first_char = $file_name_array_first[0];\n\
    \    if (!(ord($file_name_array_first_first_char) >= ord('a') && ord($file_name_array_first_first_char)\
    \ <= ord('z') || ord($file_name_array_first_first_char) >= ord('A') && ord($file_name_array_first_first_char)\
    \ <= ord('Z'))) {\n        return 'No';\n    }\n    $file_name_array_first_digit_count\
    \ = 0;\n    for ($i = 0; $i < $file_name_array_first_length; $i++) {\n       \
    \ $file_name_array_first_char = $file_name_array_first[$i];\n        if (ord($file_name_array_first_char)\
    \ >= ord('0') && ord($file_name_array_first_char) <= ord('9')) {\n           \
    \ $file_name_array_first_digit_count++;\n        }\n    }\n    if ($file_name_array_first_digit_count\
    \ > 3) {\n        return 'No';\n    }\n    if ($file_name_array_second != 'txt'\
    \ && $file_name_array_second != 'exe' && $file_name_array_second != 'dll') {\n\
    \        return 'No';\n    }\n    return 'Yes';\n}\n\nfunction candidate(...$args)\
    \ {\n    return file_name_check(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(\"example.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"1example.dll\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"s1sdf3.asd\") !== \"No\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"K.dll\") !== \"Yes\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"MY16FILE3.exe\"\
    ) !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    His12FILE94.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(\"_Y.txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"?aREYA.exe\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"/this_is_valid.dll\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"this_is_valid.wow\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_valid.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"this_is_valid.txtexe\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#this2_i4s_5valid.ten\") !== \"No\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"@this1_is6_valid.exe\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_12valid.6exe4.txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"all.exe.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"I563_No.exe\") !== \"Yes\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Is3youfault.txt\") !== \"\
    Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"no_one#knows.dll\"\
    ) !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1I563_Yes3.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"I563_Yes3.txtt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"final..txt\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"final132\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"_f4indsartal132.\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\".txt\") !== \"No\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"s.\") !== \"\
    No\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Create a function which takes a string representing a file's\
    \ name, and returns\n// 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n// A file's name is considered to be valid if and only if all the\
    \ following conditions \n// are met:\n// - There should not be more than three\
    \ digits ('0'-'9') in the file's name.\n// - The file's name contains exactly\
    \ one dot '.'\n// - The substring before the dot should not be empty, and it starts\
    \ with a letter from \n// the latin alphapet ('a'-'z' and 'A'-'Z').\n// - The\
    \ substring after the dot should be one of these: ['txt', 'exe', 'dll']\n// Examples:\n\
    // file_name_check(\"example.txt\") # => 'Yes'\n// file_name_check(\"1example.dll\"\
    ) # => 'No' (the name should start with a latin alphapet letter)\nfunction file_name_check($file_name)\
    \ {\n    $file_name_array = explode('.', $file_name);\n    $file_name_array_count\
    \ = count($file_name_array);\n    $file_name_array_count_digit = 0;\n    $file_name_array_count_dot\
    \ = 0;\n    $file_name_array_count_letter = 0;\n    $file_name_array_count_letter_first\
    \ = 0;\n    $file_name_array_count_letter_last = 0;\n    $file_name_array_count_letter_last_txt\
    \ = 0;\n    $file_name_array_count_letter_last_exe = 0;\n    $file_name_array_count_letter_last_dll\
    \ = 0;\n    $file_name_array_count_letter_last_txt_exe_dll = 0;\n    $file_name_array_count_letter_last_txt_exe_dll_count\
    \ = 0;\n    $file_name_array_count_letter_last_txt_exe_dll_count_array = array();\n\
    \    $file_name_array_count_letter_last_txt_exe_dll_count_array_count = 0;\n \
    \   $file_name_array_count_letter_last_txt_exe_dll_count_array_count_array = array();\n\
    \    $file_name_array_count_letter_last_txt_exe_dll_count_array_count_array_count\
    \ = 0;\n    $file_name_array_count_letter_last_txt_exe_dll_count_array_count_array_count_array\
    \ = array();\n    $file_name_array_count_letter_last_txt_exe_dll_count_array_count_array_count_array_count\
    \ = 0;\n    $file_name_array_count_letter_last_txt_exe_dll_count_array_count_array_count_array_count_array\
    \ = array();\n    $file_name_array_count_letter_last_txt_exe_dll_count_array_count_array_count_array_count_array_count\
    \ = 0;\n    $file_name_array_count_letter_last_txt_exe_\nfunction candidate(...$args)\
    \ {\n    return file_name_check(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(\"example.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"1example.dll\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"s1sdf3.asd\") !== \"No\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"K.dll\") !== \"Yes\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"MY16FILE3.exe\"\
    ) !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    His12FILE94.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(\"_Y.txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"?aREYA.exe\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"/this_is_valid.dll\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"this_is_valid.wow\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_valid.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"this_is_valid.txtexe\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#this2_i4s_5valid.ten\") !== \"No\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"@this1_is6_valid.exe\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_12valid.6exe4.txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"all.exe.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"I563_No.exe\") !== \"Yes\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Is3youfault.txt\") !== \"\
    Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"no_one#knows.dll\"\
    ) !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1I563_Yes3.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"I563_Yes3.txtt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"final..txt\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"final132\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"_f4indsartal132.\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\".txt\") !== \"No\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"s.\") !== \"\
    No\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Parse error:  syntax error, unexpected token \"function\" in /tmp/tmp8vyv2hln.php\
    \ on line 36\n"
  exit_code: 255
  status: SyntaxError
- program: "<?php\n// Create a function which takes a string representing a file's\
    \ name, and returns\n// 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n// A file's name is considered to be valid if and only if all the\
    \ following conditions \n// are met:\n// - There should not be more than three\
    \ digits ('0'-'9') in the file's name.\n// - The file's name contains exactly\
    \ one dot '.'\n// - The substring before the dot should not be empty, and it starts\
    \ with a letter from \n// the latin alphapet ('a'-'z' and 'A'-'Z').\n// - The\
    \ substring after the dot should be one of these: ['txt', 'exe', 'dll']\n// Examples:\n\
    // file_name_check(\"example.txt\") # => 'Yes'\n// file_name_check(\"1example.dll\"\
    ) # => 'No' (the name should start with a latin alphapet letter)\nfunction file_name_check($file_name)\
    \ {\n    $file_name_arr = explode('.', $file_name);\n    $file_name_arr_count\
    \ = count($file_name_arr);\n    if ($file_name_arr_count != 2) {\n        return\
    \ 'No';\n    }\n    $file_name_arr_first = $file_name_arr[0];\n    $file_name_arr_second\
    \ = $file_name_arr[1];\n    $file_name_arr_first_count = strlen($file_name_arr_first);\n\
    \    $file_name_arr_second_count = strlen($file_name_arr_second);\n    if ($file_name_arr_first_count\
    \ == 0) {\n        return 'No';\n    }\n    if ($file_name_arr_second_count ==\
    \ 0) {\n        return 'No';\n    }\n    if ($file_name_arr_second_count > 3)\
    \ {\n        return 'No';\n    }\n    if ($file_name_arr_second != 'txt' && $file_name_arr_second\
    \ != 'exe' && $file_name_arr_second != 'dll') {\n        return 'No';\n    }\n\
    \    $file_name_arr_first_arr = str_split($file_name_arr_first);\n    $file_name_arr_first_arr_first\
    \ = $file_name_arr_first_arr[0];\n    if (!(ord($file_name_arr_first_arr_first)\
    \ >= 97 && ord($file_name_arr_first_arr_first) <= 122) && !(ord($file_name_arr_first_arr_first)\
    \ >= 65 && ord($file_name_arr_first_arr_first) <= 90)) {\n        return 'No';\n\
    \    }\n    $file_name_arr_first_arr_count = count($file_name_arr_first_arr);\n\
    \    $file_name_arr_first_arr_count_num = 0;\n    for ($i = 0; $i < $file_name_arr_first_arr_count;\
    \ $i++) {\n        if (ord($file_name_arr_first_arr[$i]) >= 48\nfunction candidate(...$args)\
    \ {\n    return file_name_check(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(\"example.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"1example.dll\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"s1sdf3.asd\") !== \"No\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"K.dll\") !== \"Yes\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"MY16FILE3.exe\"\
    ) !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    His12FILE94.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(\"_Y.txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"?aREYA.exe\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"/this_is_valid.dll\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"this_is_valid.wow\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_valid.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"this_is_valid.txtexe\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#this2_i4s_5valid.ten\") !== \"No\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"@this1_is6_valid.exe\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_12valid.6exe4.txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"all.exe.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"I563_No.exe\") !== \"Yes\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Is3youfault.txt\") !== \"\
    Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"no_one#knows.dll\"\
    ) !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1I563_Yes3.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"I563_Yes3.txtt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"final..txt\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"final132\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"_f4indsartal132.\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\".txt\") !== \"No\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"s.\") !== \"\
    No\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Parse error:  syntax error, unexpected token \"function\" in /tmp/tmpno534u98.php\
    \ on line 45\n"
  exit_code: 255
  status: SyntaxError
- program: "<?php\n// Create a function which takes a string representing a file's\
    \ name, and returns\n// 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n// A file's name is considered to be valid if and only if all the\
    \ following conditions \n// are met:\n// - There should not be more than three\
    \ digits ('0'-'9') in the file's name.\n// - The file's name contains exactly\
    \ one dot '.'\n// - The substring before the dot should not be empty, and it starts\
    \ with a letter from \n// the latin alphapet ('a'-'z' and 'A'-'Z').\n// - The\
    \ substring after the dot should be one of these: ['txt', 'exe', 'dll']\n// Examples:\n\
    // file_name_check(\"example.txt\") # => 'Yes'\n// file_name_check(\"1example.dll\"\
    ) # => 'No' (the name should start with a latin alphapet letter)\nfunction file_name_check($file_name)\
    \ {\n    $file_name_array = explode('.', $file_name);\n    $file_name_array_count\
    \ = count($file_name_array);\n    if ($file_name_array_count == 2) {\n       \
    \ $file_name_array_count_0 = strlen($file_name_array[0]);\n        $file_name_array_count_1\
    \ = strlen($file_name_array[1]);\n        if ($file_name_array_count_0 > 0 &&\
    \ $file_name_array_count_1 > 0) {\n            $file_name_array_count_0_0 = $file_name_array[0][0];\n\
    \            if (preg_match('/^[a-zA-Z]/', $file_name_array_count_0_0)) {\n  \
    \              $file_name_array_count_0_0_count = substr_count($file_name_array[0],\
    \ '0') + substr_count($file_name_array[0], '1') + substr_count($file_name_array[0],\
    \ '2') + substr_count($file_name_array[0], '3') + substr_count($file_name_array[0],\
    \ '4') + substr_count($file_name_array[0], '5') + substr_count($file_name_array[0],\
    \ '6') + substr_count($file_name_array[0], '7') + substr_count($file_name_array[0],\
    \ '8') + substr_count($file_name_array[0], '9');\n                if ($file_name_array_count_0_0_count\
    \ <= 3) {\n                    if ($file_name_array[1] == 'txt' || $file_name_array[1]\
    \ == 'exe' || $file_name_array[1] == 'dll') {\n                        return\
    \ 'Yes';\n                    }\n                }\n            }\n        }\n\
    \    }\n    return 'No';\n}\n\nfunction candidate(...$args) {\n    return file_name_check(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"example.txt\") !== \"Yes\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"1example.dll\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    s1sdf3.asd\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    K.dll\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    MY16FILE3.exe\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"His12FILE94.exe\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"_Y.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"?aREYA.exe\") !== \"No\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"/this_is_valid.dll\") !==\
    \ \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"this_is_valid.wow\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_valid.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"this_is_valid.txtexe\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#this2_i4s_5valid.ten\") !== \"No\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"@this1_is6_valid.exe\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_12valid.6exe4.txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"all.exe.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"I563_No.exe\") !== \"Yes\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Is3youfault.txt\") !== \"\
    Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"no_one#knows.dll\"\
    ) !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1I563_Yes3.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"I563_Yes3.txtt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"final..txt\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"final132\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"_f4indsartal132.\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\".txt\") !== \"No\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"s.\") !== \"\
    No\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Create a function which takes a string representing a file's\
    \ name, and returns\n// 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n// A file's name is considered to be valid if and only if all the\
    \ following conditions \n// are met:\n// - There should not be more than three\
    \ digits ('0'-'9') in the file's name.\n// - The file's name contains exactly\
    \ one dot '.'\n// - The substring before the dot should not be empty, and it starts\
    \ with a letter from \n// the latin alphapet ('a'-'z' and 'A'-'Z').\n// - The\
    \ substring after the dot should be one of these: ['txt', 'exe', 'dll']\n// Examples:\n\
    // file_name_check(\"example.txt\") # => 'Yes'\n// file_name_check(\"1example.dll\"\
    ) # => 'No' (the name should start with a latin alphapet letter)\nfunction file_name_check($file_name)\
    \ {\n    $file_name_array = explode('.', $file_name);\n    if (count($file_name_array)\
    \ != 2) {\n        return 'No';\n    }\n    if (strlen($file_name_array[0]) ==\
    \ 0) {\n        return 'No';\n    }\n    if (!ctype_alpha($file_name_array[0][0]))\
    \ {\n        return 'No';\n    }\n    if (preg_match_all('/[0-9]/', $file_name_array[0])\
    \ > 3) {\n        return 'No';\n    }\n    if (!in_array($file_name_array[1],\
    \ ['txt', 'exe', 'dll'])) {\n        return 'No';\n    }\n    return 'Yes';\n\
    }\n\nfunction candidate(...$args) {\n    return file_name_check(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(\"example.txt\") !== \"Yes\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"1example.dll\") !==\
    \ \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"s1sdf3.asd\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    K.dll\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    MY16FILE3.exe\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"His12FILE94.exe\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"_Y.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"?aREYA.exe\") !== \"No\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"/this_is_valid.dll\") !==\
    \ \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"this_is_valid.wow\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_valid.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"this_is_valid.txtexe\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#this2_i4s_5valid.ten\") !== \"No\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"@this1_is6_valid.exe\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_12valid.6exe4.txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"all.exe.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"I563_No.exe\") !== \"Yes\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Is3youfault.txt\") !== \"\
    Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"no_one#knows.dll\"\
    ) !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1I563_Yes3.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"I563_Yes3.txtt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"final..txt\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"final132\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"_f4indsartal132.\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\".txt\") !== \"No\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"s.\") !== \"\
    No\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Create a function which takes a string representing a file's\
    \ name, and returns\n// 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n// A file's name is considered to be valid if and only if all the\
    \ following conditions \n// are met:\n// - There should not be more than three\
    \ digits ('0'-'9') in the file's name.\n// - The file's name contains exactly\
    \ one dot '.'\n// - The substring before the dot should not be empty, and it starts\
    \ with a letter from \n// the latin alphapet ('a'-'z' and 'A'-'Z').\n// - The\
    \ substring after the dot should be one of these: ['txt', 'exe', 'dll']\n// Examples:\n\
    // file_name_check(\"example.txt\") # => 'Yes'\n// file_name_check(\"1example.dll\"\
    ) # => 'No' (the name should start with a latin alphapet letter)\nfunction file_name_check($file_name)\
    \ {\n    $file_name_parts = explode('.', $file_name);\n    if (count($file_name_parts)\
    \ != 2) {\n        return 'No';\n    }\n    $file_name_parts[0] = preg_replace('/[^a-zA-Z]/',\
    \ '', $file_name_parts[0]);\n    if (strlen($file_name_parts[0]) == 0) {\n   \
    \     return 'No';\n    }\n    if (!in_array($file_name_parts[1], ['txt', 'exe',\
    \ 'dll'])) {\n        return 'No';\n    }\n    if (preg_match_all('/[0-9]/', $file_name)\
    \ > 3) {\n        return 'No';\n    }\n    return 'Yes';\n}\n\nfunction candidate(...$args)\
    \ {\n    return file_name_check(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(\"example.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"1example.dll\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"s1sdf3.asd\") !== \"No\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"K.dll\") !== \"Yes\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"MY16FILE3.exe\"\
    ) !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    His12FILE94.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(\"_Y.txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"?aREYA.exe\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"/this_is_valid.dll\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"this_is_valid.wow\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_valid.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"this_is_valid.txtexe\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#this2_i4s_5valid.ten\") !== \"No\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"@this1_is6_valid.exe\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_12valid.6exe4.txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"all.exe.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"I563_No.exe\") !== \"Yes\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Is3youfault.txt\") !== \"\
    Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"no_one#knows.dll\"\
    ) !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1I563_Yes3.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"I563_Yes3.txtt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"final..txt\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"final132\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"_f4indsartal132.\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\".txt\") !== \"No\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"s.\") !== \"\
    No\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpjko8lmwq.php:38\n\
    Stack trace:\n#0 /tmp/tmpjko8lmwq.php(65): test()\n#1 {main}\n  thrown in /tmp/tmpjko8lmwq.php\
    \ on line 38\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function which takes a string representing a file's\
    \ name, and returns\n// 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n// A file's name is considered to be valid if and only if all the\
    \ following conditions \n// are met:\n// - There should not be more than three\
    \ digits ('0'-'9') in the file's name.\n// - The file's name contains exactly\
    \ one dot '.'\n// - The substring before the dot should not be empty, and it starts\
    \ with a letter from \n// the latin alphapet ('a'-'z' and 'A'-'Z').\n// - The\
    \ substring after the dot should be one of these: ['txt', 'exe', 'dll']\n// Examples:\n\
    // file_name_check(\"example.txt\") # => 'Yes'\n// file_name_check(\"1example.dll\"\
    ) # => 'No' (the name should start with a latin alphapet letter)\nfunction file_name_check($file_name)\
    \ {\n    $file_name_parts = explode('.', $file_name);\n    $file_name_parts_count\
    \ = count($file_name_parts);\n    if ($file_name_parts_count != 2) {\n       \
    \ return 'No';\n    }\n    $file_name_parts_first = $file_name_parts[0];\n   \
    \ $file_name_parts_second = $file_name_parts[1];\n    if (preg_match('/[0-9]{4,}/',\
    \ $file_name_parts_first)) {\n        return 'No';\n    }\n    if (!preg_match('/^[a-zA-Z]/',\
    \ $file_name_parts_first)) {\n        return 'No';\n    }\n    if (!in_array($file_name_parts_second,\
    \ ['txt', 'exe', 'dll'])) {\n        return 'No';\n    }\n    return 'Yes';\n\
    }\n\nfunction candidate(...$args) {\n    return file_name_check(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(\"example.txt\") !== \"Yes\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"1example.dll\") !==\
    \ \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"s1sdf3.asd\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    K.dll\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    MY16FILE3.exe\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"His12FILE94.exe\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"_Y.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"?aREYA.exe\") !== \"No\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"/this_is_valid.dll\") !==\
    \ \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"this_is_valid.wow\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_valid.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"this_is_valid.txtexe\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#this2_i4s_5valid.ten\") !== \"No\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"@this1_is6_valid.exe\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_12valid.6exe4.txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"all.exe.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"I563_No.exe\") !== \"Yes\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Is3youfault.txt\") !== \"\
    Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"no_one#knows.dll\"\
    ) !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1I563_Yes3.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"I563_Yes3.txtt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"final..txt\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"final132\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"_f4indsartal132.\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\".txt\") !== \"No\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"s.\") !== \"\
    No\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp8a3y56kw.php:44\n\
    Stack trace:\n#0 /tmp/tmp8a3y56kw.php(67): test()\n#1 {main}\n  thrown in /tmp/tmp8a3y56kw.php\
    \ on line 44\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function which takes a string representing a file's\
    \ name, and returns\n// 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n// A file's name is considered to be valid if and only if all the\
    \ following conditions \n// are met:\n// - There should not be more than three\
    \ digits ('0'-'9') in the file's name.\n// - The file's name contains exactly\
    \ one dot '.'\n// - The substring before the dot should not be empty, and it starts\
    \ with a letter from \n// the latin alphapet ('a'-'z' and 'A'-'Z').\n// - The\
    \ substring after the dot should be one of these: ['txt', 'exe', 'dll']\n// Examples:\n\
    // file_name_check(\"example.txt\") # => 'Yes'\n// file_name_check(\"1example.dll\"\
    ) # => 'No' (the name should start with a latin alphapet letter)\nfunction file_name_check($file_name)\
    \ {\n    $file_name_array = explode('.', $file_name);\n    $file_name_array_count\
    \ = count($file_name_array);\n    if ($file_name_array_count != 2) {\n       \
    \ return 'No';\n    }\n    $file_name_array_first = $file_name_array[0];\n   \
    \ $file_name_array_second = $file_name_array[1];\n    if (preg_match('/[^a-zA-Z]/',\
    \ $file_name_array_first)) {\n        return 'No';\n    }\n    if (preg_match('/[0-9]{4,}/',\
    \ $file_name_array_first)) {\n        return 'No';\n    }\n    if (!in_array($file_name_array_second,\
    \ ['txt', 'exe', 'dll'])) {\n        return 'No';\n    }\n    return 'Yes';\n\
    }\n\nfunction candidate(...$args) {\n    return file_name_check(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(\"example.txt\") !== \"Yes\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"1example.dll\") !==\
    \ \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"s1sdf3.asd\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    K.dll\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    MY16FILE3.exe\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"His12FILE94.exe\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"_Y.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"?aREYA.exe\") !== \"No\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"/this_is_valid.dll\") !==\
    \ \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"this_is_valid.wow\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_valid.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"this_is_valid.txtexe\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#this2_i4s_5valid.ten\") !== \"No\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"@this1_is6_valid.exe\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_12valid.6exe4.txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"all.exe.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"I563_No.exe\") !== \"Yes\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Is3youfault.txt\") !== \"\
    Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"no_one#knows.dll\"\
    ) !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1I563_Yes3.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"I563_Yes3.txtt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"final..txt\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"final132\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"_f4indsartal132.\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\".txt\") !== \"No\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"s.\") !== \"\
    No\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmppzb5931f.php:43\n\
    Stack trace:\n#0 /tmp/tmppzb5931f.php(67): test()\n#1 {main}\n  thrown in /tmp/tmppzb5931f.php\
    \ on line 43\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function which takes a string representing a file's\
    \ name, and returns\n// 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n// A file's name is considered to be valid if and only if all the\
    \ following conditions \n// are met:\n// - There should not be more than three\
    \ digits ('0'-'9') in the file's name.\n// - The file's name contains exactly\
    \ one dot '.'\n// - The substring before the dot should not be empty, and it starts\
    \ with a letter from \n// the latin alphapet ('a'-'z' and 'A'-'Z').\n// - The\
    \ substring after the dot should be one of these: ['txt', 'exe', 'dll']\n// Examples:\n\
    // file_name_check(\"example.txt\") # => 'Yes'\n// file_name_check(\"1example.dll\"\
    ) # => 'No' (the name should start with a latin alphapet letter)\nfunction file_name_check($file_name)\
    \ {\n    $file_name_arr = explode('.', $file_name);\n    if (count($file_name_arr)\
    \ != 2) {\n        return 'No';\n    }\n    $file_name_arr[0] = preg_replace('/[^a-zA-Z]/',\
    \ '', $file_name_arr[0]);\n    if (strlen($file_name_arr[0]) == 0) {\n       \
    \ return 'No';\n    }\n    if (preg_match('/[0-9]{4,}/', $file_name_arr[0])) {\n\
    \        return 'No';\n    }\n    if (!in_array($file_name_arr[1], ['txt', 'exe',\
    \ 'dll'])) {\n        return 'No';\n    }\n    return 'Yes';\n}\n\nfunction candidate(...$args)\
    \ {\n    return file_name_check(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(\"example.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"1example.dll\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"s1sdf3.asd\") !== \"No\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"K.dll\") !== \"Yes\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"MY16FILE3.exe\"\
    ) !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    His12FILE94.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(\"_Y.txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"?aREYA.exe\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"/this_is_valid.dll\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"this_is_valid.wow\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_valid.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"this_is_valid.txtexe\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#this2_i4s_5valid.ten\") !== \"No\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"@this1_is6_valid.exe\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_12valid.6exe4.txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"all.exe.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"I563_No.exe\") !== \"Yes\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Is3youfault.txt\") !== \"\
    Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"no_one#knows.dll\"\
    ) !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1I563_Yes3.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"I563_Yes3.txtt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"final..txt\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"final132\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"_f4indsartal132.\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\".txt\") !== \"No\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"s.\") !== \"\
    No\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmppaxofd6b.php:38\n\
    Stack trace:\n#0 /tmp/tmppaxofd6b.php(65): test()\n#1 {main}\n  thrown in /tmp/tmppaxofd6b.php\
    \ on line 38\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function which takes a string representing a file's\
    \ name, and returns\n// 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n// A file's name is considered to be valid if and only if all the\
    \ following conditions \n// are met:\n// - There should not be more than three\
    \ digits ('0'-'9') in the file's name.\n// - The file's name contains exactly\
    \ one dot '.'\n// - The substring before the dot should not be empty, and it starts\
    \ with a letter from \n// the latin alphapet ('a'-'z' and 'A'-'Z').\n// - The\
    \ substring after the dot should be one of these: ['txt', 'exe', 'dll']\n// Examples:\n\
    // file_name_check(\"example.txt\") # => 'Yes'\n// file_name_check(\"1example.dll\"\
    ) # => 'No' (the name should start with a latin alphapet letter)\nfunction file_name_check($file_name)\
    \ {\n    $file_name_arr = explode('.', $file_name);\n    if (count($file_name_arr)\
    \ != 2) {\n        return 'No';\n    }\n    if (preg_match('/[0-9]{4,}/', $file_name_arr[0]))\
    \ {\n        return 'No';\n    }\n    if (!preg_match('/[a-zA-Z]/', $file_name_arr[0]))\
    \ {\n        return 'No';\n    }\n    if (!in_array($file_name_arr[1], ['txt',\
    \ 'exe', 'dll'])) {\n        return 'No';\n    }\n    return 'Yes';\n}\n\nfunction\
    \ candidate(...$args) {\n    return file_name_check(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"example.txt\") !== \"Yes\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"1example.dll\") !== \"No\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"s1sdf3.asd\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    K.dll\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    MY16FILE3.exe\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"His12FILE94.exe\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"_Y.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"?aREYA.exe\") !== \"No\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"/this_is_valid.dll\") !==\
    \ \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"this_is_valid.wow\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_valid.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"this_is_valid.txtexe\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#this2_i4s_5valid.ten\") !== \"No\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"@this1_is6_valid.exe\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_12valid.6exe4.txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"all.exe.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"I563_No.exe\") !== \"Yes\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Is3youfault.txt\") !== \"\
    Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"no_one#knows.dll\"\
    ) !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1I563_Yes3.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"I563_Yes3.txtt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"final..txt\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"final132\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"_f4indsartal132.\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\".txt\") !== \"No\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"s.\") !== \"\
    No\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpvo_4adn_.php:37\n\
    Stack trace:\n#0 /tmp/tmpvo_4adn_.php(64): test()\n#1 {main}\n  thrown in /tmp/tmpvo_4adn_.php\
    \ on line 37\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function which takes a string representing a file's\
    \ name, and returns\n// 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n// A file's name is considered to be valid if and only if all the\
    \ following conditions \n// are met:\n// - There should not be more than three\
    \ digits ('0'-'9') in the file's name.\n// - The file's name contains exactly\
    \ one dot '.'\n// - The substring before the dot should not be empty, and it starts\
    \ with a letter from \n// the latin alphapet ('a'-'z' and 'A'-'Z').\n// - The\
    \ substring after the dot should be one of these: ['txt', 'exe', 'dll']\n// Examples:\n\
    // file_name_check(\"example.txt\") # => 'Yes'\n// file_name_check(\"1example.dll\"\
    ) # => 'No' (the name should start with a latin alphapet letter)\nfunction file_name_check($file_name)\
    \ {\n    $file_name_array = explode('.', $file_name);\n    $file_name_array_count\
    \ = count($file_name_array);\n    $file_name_array_first = $file_name_array[0];\n\
    \    $file_name_array_last = $file_name_array[$file_name_array_count - 1];\n \
    \   $file_name_array_first_count = strlen($file_name_array_first);\n    $file_name_array_last_count\
    \ = strlen($file_name_array_last);\n    $file_name_array_first_first_char = $file_name_array_first[0];\n\
    \    $file_name_array_first_first_char_ascii = ord($file_name_array_first_first_char);\n\
    \    $file_name_array_first_first_char_ascii_is_number = $file_name_array_first_first_char_ascii\
    \ >= 48 && $file_name_array_first_first_char_ascii <= 57;\n    $file_name_array_first_first_char_ascii_is_letter\
    \ = $file_name_array_first_first_char_ascii >= 65 && $file_name_array_first_first_char_ascii\
    \ <= 90 || $file_name_array_first_first_char_ascii >= 97 && $file_name_array_first_first_char_ascii\
    \ <= 122;\n    $file_name_array_first_first_char_is_number = $file_name_array_first_first_char_ascii_is_number;\n\
    \    $file_name_array_first_first_char_is_letter = $file_name_array_first_first_char_ascii_is_letter;\n\
    \    $file_name_array_first_first_char_is_valid = $file_name_array_first_first_char_is_number\
    \ || $file_name_array_first_first_char_is_letter;\n    $file_name_array_first_has_more_than_three_digits\
    \ = preg_match\nfunction candidate(...$args) {\n    return file_name_check(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"example.txt\") !== \"Yes\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"1example.dll\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    s1sdf3.asd\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    K.dll\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    MY16FILE3.exe\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"His12FILE94.exe\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"_Y.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"?aREYA.exe\") !== \"No\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"/this_is_valid.dll\") !==\
    \ \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"this_is_valid.wow\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_valid.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"this_is_valid.txtexe\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#this2_i4s_5valid.ten\") !== \"No\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"@this1_is6_valid.exe\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_12valid.6exe4.txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"all.exe.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"I563_No.exe\") !== \"Yes\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Is3youfault.txt\") !== \"\
    Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"no_one#knows.dll\"\
    ) !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1I563_Yes3.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"I563_Yes3.txtt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"final..txt\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"final132\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"_f4indsartal132.\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\".txt\") !== \"No\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"s.\") !== \"\
    No\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Parse error:  syntax error, unexpected token \"function\" in /tmp/tmp5yh2k9xa.php\
    \ on line 29\n"
  exit_code: 255
  status: SyntaxError
- program: "<?php\n// Create a function which takes a string representing a file's\
    \ name, and returns\n// 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n// A file's name is considered to be valid if and only if all the\
    \ following conditions \n// are met:\n// - There should not be more than three\
    \ digits ('0'-'9') in the file's name.\n// - The file's name contains exactly\
    \ one dot '.'\n// - The substring before the dot should not be empty, and it starts\
    \ with a letter from \n// the latin alphapet ('a'-'z' and 'A'-'Z').\n// - The\
    \ substring after the dot should be one of these: ['txt', 'exe', 'dll']\n// Examples:\n\
    // file_name_check(\"example.txt\") # => 'Yes'\n// file_name_check(\"1example.dll\"\
    ) # => 'No' (the name should start with a latin alphapet letter)\nfunction file_name_check($file_name)\
    \ {\n    $file_name_array = explode('.', $file_name);\n    $file_name_array_count\
    \ = count($file_name_array);\n    if ($file_name_array_count != 2) {\n       \
    \ return 'No';\n    }\n    $file_name_array_first = $file_name_array[0];\n   \
    \ $file_name_array_last = $file_name_array[1];\n    if (!preg_match('/^[a-zA-Z]+$/',\
    \ $file_name_array_first[0])) {\n        return 'No';\n    }\n    if (!preg_match('/^[a-zA-Z]+$/',\
    \ $file_name_array_last[0])) {\n        return 'No';\n    }\n    if (!preg_match('/^[a-zA-Z]+$/',\
    \ $file_name_array_last[1])) {\n        return 'No';\n    }\n    if (!preg_match('/^[a-zA-Z]+$/',\
    \ $file_name_array_last[2])) {\n        return 'No';\n    }\n    if (!preg_match('/^[a-zA-Z0-9]+$/',\
    \ $file_name_array_first)) {\n        return 'No';\n    }\n    if (!preg_match('/^[a-zA-Z0-9]+$/',\
    \ $file_name_array_last)) {\n        return 'No';\n    }\n    if (preg_match('/^[0-9]+$/',\
    \ $file_name_array_first)) {\n        return 'No';\n    }\n    if (preg_match('/^[0-9]+$/',\
    \ $file_name_array_last)) {\n        return 'No';\n    }\n    if (preg_match('/^[0-9]+$/',\
    \ $file_name_array_first[1])) {\n        return 'No';\n    }\n    if (preg_match('/^[0-9]+$/',\
    \ $file_name_array_first[2]\nfunction candidate(...$args) {\n    return file_name_check(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"example.txt\") !== \"Yes\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"1example.dll\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    s1sdf3.asd\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    K.dll\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    MY16FILE3.exe\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"His12FILE94.exe\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"_Y.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"?aREYA.exe\") !== \"No\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"/this_is_valid.dll\") !==\
    \ \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"this_is_valid.wow\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_valid.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"this_is_valid.txtexe\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#this2_i4s_5valid.ten\") !== \"No\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"@this1_is6_valid.exe\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_12valid.6exe4.txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"all.exe.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"I563_No.exe\") !== \"Yes\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Is3youfault.txt\") !== \"\
    Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"no_one#knows.dll\"\
    ) !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1I563_Yes3.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"I563_Yes3.txtt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"final..txt\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"final132\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"_f4indsartal132.\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\".txt\") !== \"No\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"s.\") !== \"\
    No\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Parse error:  syntax error, unexpected token \"function\", expecting\
    \ \")\" in /tmp/tmpmitqna_b.php on line 50\n"
  exit_code: 255
  status: SyntaxError
- program: "<?php\n// Create a function which takes a string representing a file's\
    \ name, and returns\n// 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n// A file's name is considered to be valid if and only if all the\
    \ following conditions \n// are met:\n// - There should not be more than three\
    \ digits ('0'-'9') in the file's name.\n// - The file's name contains exactly\
    \ one dot '.'\n// - The substring before the dot should not be empty, and it starts\
    \ with a letter from \n// the latin alphapet ('a'-'z' and 'A'-'Z').\n// - The\
    \ substring after the dot should be one of these: ['txt', 'exe', 'dll']\n// Examples:\n\
    // file_name_check(\"example.txt\") # => 'Yes'\n// file_name_check(\"1example.dll\"\
    ) # => 'No' (the name should start with a latin alphapet letter)\nfunction file_name_check($file_name)\
    \ {\n    $file_name_arr = explode('.', $file_name);\n    $file_name_arr_len =\
    \ count($file_name_arr);\n    if ($file_name_arr_len != 2) {\n        return 'No';\n\
    \    }\n    $file_name_arr_0 = $file_name_arr[0];\n    $file_name_arr_1 = $file_name_arr[1];\n\
    \    if (preg_match('/[a-zA-Z]/', $file_name_arr_0) == 0) {\n        return 'No';\n\
    \    }\n    if (preg_match('/[0-9]/', $file_name_arr_0) > 3) {\n        return\
    \ 'No';\n    }\n    if ($file_name_arr_1 != 'txt' && $file_name_arr_1 != 'exe'\
    \ && $file_name_arr_1 != 'dll') {\n        return 'No';\n    }\n    return 'Yes';\n\
    }\n\nfunction candidate(...$args) {\n    return file_name_check(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(\"example.txt\") !== \"Yes\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"1example.dll\") !==\
    \ \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"s1sdf3.asd\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    K.dll\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    MY16FILE3.exe\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"His12FILE94.exe\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"_Y.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"?aREYA.exe\") !== \"No\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"/this_is_valid.dll\") !==\
    \ \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"this_is_valid.wow\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_valid.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"this_is_valid.txtexe\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#this2_i4s_5valid.ten\") !== \"No\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"@this1_is6_valid.exe\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_12valid.6exe4.txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"all.exe.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"I563_No.exe\") !== \"Yes\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Is3youfault.txt\") !== \"\
    Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"no_one#knows.dll\"\
    ) !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1I563_Yes3.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"I563_Yes3.txtt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"final..txt\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"final132\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"_f4indsartal132.\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\".txt\") !== \"No\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"s.\") !== \"\
    No\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpfuwx09_w.php:40\n\
    Stack trace:\n#0 /tmp/tmpfuwx09_w.php(67): test()\n#1 {main}\n  thrown in /tmp/tmpfuwx09_w.php\
    \ on line 40\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function which takes a string representing a file's\
    \ name, and returns\n// 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n// A file's name is considered to be valid if and only if all the\
    \ following conditions \n// are met:\n// - There should not be more than three\
    \ digits ('0'-'9') in the file's name.\n// - The file's name contains exactly\
    \ one dot '.'\n// - The substring before the dot should not be empty, and it starts\
    \ with a letter from \n// the latin alphapet ('a'-'z' and 'A'-'Z').\n// - The\
    \ substring after the dot should be one of these: ['txt', 'exe', 'dll']\n// Examples:\n\
    // file_name_check(\"example.txt\") # => 'Yes'\n// file_name_check(\"1example.dll\"\
    ) # => 'No' (the name should start with a latin alphapet letter)\nfunction file_name_check($file_name)\
    \ {\n    $file_name_arr = explode('.', $file_name);\n    $file_name_arr_count\
    \ = count($file_name_arr);\n    if ($file_name_arr_count != 2) {\n        return\
    \ 'No';\n    }\n    $file_name_arr_first = $file_name_arr[0];\n    $file_name_arr_second\
    \ = $file_name_arr[1];\n    $file_name_arr_first_count = strlen($file_name_arr_first);\n\
    \    $file_name_arr_second_count = strlen($file_name_arr_second);\n    if ($file_name_arr_first_count\
    \ == 0) {\n        return 'No';\n    }\n    if (preg_match('/[0-9]/', $file_name_arr_first))\
    \ {\n        return 'No';\n    }\n    if (preg_match('/[^a-zA-Z0-9]/', $file_name_arr_first))\
    \ {\n        return 'No';\n    }\n    if (preg_match('/[0-9]/', $file_name_arr_second))\
    \ {\n        return 'No';\n    }\n    if (preg_match('/[^a-zA-Z0-9]/', $file_name_arr_second))\
    \ {\n        return 'No';\n    }\n    if ($file_name_arr_second_count != 3) {\n\
    \        return 'No';\n    }\n    if ($file_name_arr_second != 'txt' && $file_name_arr_second\
    \ != 'exe' && $file_name_arr_second != 'dll') {\n        return 'No';\n    }\n\
    \    return 'Yes';\n}\n\nfunction candidate(...$args) {\n    return file_name_check(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"example.txt\") !== \"Yes\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"1example.dll\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    s1sdf3.asd\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    K.dll\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    MY16FILE3.exe\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"His12FILE94.exe\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"_Y.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"?aREYA.exe\") !== \"No\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"/this_is_valid.dll\") !==\
    \ \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"this_is_valid.wow\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_valid.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"this_is_valid.txtexe\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#this2_i4s_5valid.ten\") !== \"No\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"@this1_is6_valid.exe\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_12valid.6exe4.txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"all.exe.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"I563_No.exe\") !== \"Yes\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Is3youfault.txt\") !== \"\
    Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"no_one#knows.dll\"\
    ) !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1I563_Yes3.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"I563_Yes3.txtt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"final..txt\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"final132\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"_f4indsartal132.\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\".txt\") !== \"No\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"s.\") !== \"\
    No\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpvrbps644.php:57\n\
    Stack trace:\n#0 /tmp/tmpvrbps644.php(81): test()\n#1 {main}\n  thrown in /tmp/tmpvrbps644.php\
    \ on line 57\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function which takes a string representing a file's\
    \ name, and returns\n// 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n// A file's name is considered to be valid if and only if all the\
    \ following conditions \n// are met:\n// - There should not be more than three\
    \ digits ('0'-'9') in the file's name.\n// - The file's name contains exactly\
    \ one dot '.'\n// - The substring before the dot should not be empty, and it starts\
    \ with a letter from \n// the latin alphapet ('a'-'z' and 'A'-'Z').\n// - The\
    \ substring after the dot should be one of these: ['txt', 'exe', 'dll']\n// Examples:\n\
    // file_name_check(\"example.txt\") # => 'Yes'\n// file_name_check(\"1example.dll\"\
    ) # => 'No' (the name should start with a latin alphapet letter)\nfunction file_name_check($file_name)\
    \ {\n    $file_name_array = explode('.', $file_name);\n    $file_name_array_length\
    \ = count($file_name_array);\n    if ($file_name_array_length != 2) {\n      \
    \  return 'No';\n    }\n    $file_name_array_first = $file_name_array[0];\n  \
    \  $file_name_array_second = $file_name_array[1];\n    if (preg_match('/[^a-zA-Z]/',\
    \ $file_name_array_first)) {\n        return 'No';\n    }\n    if (preg_match('/[0-9]/',\
    \ $file_name_array_first)) {\n        return 'No';\n    }\n    if ($file_name_array_second\
    \ != 'txt' && $file_name_array_second != 'exe' && $file_name_array_second != 'dll')\
    \ {\n        return 'No';\n    }\n    return 'Yes';\n}\n\nfunction candidate(...$args)\
    \ {\n    return file_name_check(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(\"example.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"1example.dll\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"s1sdf3.asd\") !== \"No\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"K.dll\") !== \"Yes\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"MY16FILE3.exe\"\
    ) !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    His12FILE94.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(\"_Y.txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"?aREYA.exe\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"/this_is_valid.dll\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"this_is_valid.wow\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_valid.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"this_is_valid.txtexe\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#this2_i4s_5valid.ten\") !== \"No\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"@this1_is6_valid.exe\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_12valid.6exe4.txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"all.exe.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"I563_No.exe\") !== \"Yes\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Is3youfault.txt\") !== \"\
    Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"no_one#knows.dll\"\
    ) !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1I563_Yes3.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"I563_Yes3.txtt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"final..txt\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"final132\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"_f4indsartal132.\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\".txt\") !== \"No\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"s.\") !== \"\
    No\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp2wr762b5.php:43\n\
    Stack trace:\n#0 /tmp/tmp2wr762b5.php(67): test()\n#1 {main}\n  thrown in /tmp/tmp2wr762b5.php\
    \ on line 43\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function which takes a string representing a file's\
    \ name, and returns\n// 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n// A file's name is considered to be valid if and only if all the\
    \ following conditions \n// are met:\n// - There should not be more than three\
    \ digits ('0'-'9') in the file's name.\n// - The file's name contains exactly\
    \ one dot '.'\n// - The substring before the dot should not be empty, and it starts\
    \ with a letter from \n// the latin alphapet ('a'-'z' and 'A'-'Z').\n// - The\
    \ substring after the dot should be one of these: ['txt', 'exe', 'dll']\n// Examples:\n\
    // file_name_check(\"example.txt\") # => 'Yes'\n// file_name_check(\"1example.dll\"\
    ) # => 'No' (the name should start with a latin alphapet letter)\nfunction file_name_check($file_name)\
    \ {\n    $file_name_array = explode('.', $file_name);\n    $file_name_array_count\
    \ = count($file_name_array);\n    if ($file_name_array_count > 2) {\n        return\
    \ 'No';\n    }\n    if ($file_name_array_count == 1) {\n        return 'No';\n\
    \    }\n    if (preg_match('/^[a-zA-Z]/', $file_name_array[0]) == 0) {\n     \
    \   return 'No';\n    }\n    if (preg_match('/[0-9]{4,}/', $file_name_array[0])\
    \ == 1) {\n        return 'No';\n    }\n    if ($file_name_array[1] != 'txt' &&\
    \ $file_name_array[1] != 'exe' && $file_name_array[1] != 'dll') {\n        return\
    \ 'No';\n    }\n    return 'Yes';\n}\n\nfunction candidate(...$args) {\n    return\
    \ file_name_check(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    example.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"1example.dll\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"s1sdf3.asd\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"K.dll\") !== \"Yes\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"MY16FILE3.exe\") !== \"Yes\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"His12FILE94.exe\") !==\
    \ \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"_Y.txt\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    ?aREYA.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    /this_is_valid.dll\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"this_is_valid.wow\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"this_is_valid.txt\") !== \"Yes\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"this_is_valid.txtexe\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    #this2_i4s_5valid.ten\") !== \"No\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"@this1_is6_valid.exe\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"this_is_12valid.6exe4.txt\") !== \"No\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"all.exe.txt\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    I563_No.exe\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"Is3youfault.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"no_one#knows.dll\") !== \"Yes\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"1I563_Yes3.exe\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"I563_Yes3.txtt\") !==\
    \ \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"final..txt\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    final132\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    _f4indsartal132.\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(\".txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"s.\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpn8vhvhy2.php:45\n\
    Stack trace:\n#0 /tmp/tmpn8vhvhy2.php(68): test()\n#1 {main}\n  thrown in /tmp/tmpn8vhvhy2.php\
    \ on line 45\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function which takes a string representing a file's\
    \ name, and returns\n// 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n// A file's name is considered to be valid if and only if all the\
    \ following conditions \n// are met:\n// - There should not be more than three\
    \ digits ('0'-'9') in the file's name.\n// - The file's name contains exactly\
    \ one dot '.'\n// - The substring before the dot should not be empty, and it starts\
    \ with a letter from \n// the latin alphapet ('a'-'z' and 'A'-'Z').\n// - The\
    \ substring after the dot should be one of these: ['txt', 'exe', 'dll']\n// Examples:\n\
    // file_name_check(\"example.txt\") # => 'Yes'\n// file_name_check(\"1example.dll\"\
    ) # => 'No' (the name should start with a latin alphapet letter)\nfunction file_name_check($file_name)\
    \ {\n    $file_name_arr = explode('.', $file_name);\n    $file_name_arr_count\
    \ = count($file_name_arr);\n    if ($file_name_arr_count == 2) {\n        $file_name_arr_0\
    \ = $file_name_arr[0];\n        $file_name_arr_1 = $file_name_arr[1];\n      \
    \  $file_name_arr_0_count = strlen($file_name_arr_0);\n        $file_name_arr_1_count\
    \ = strlen($file_name_arr_1);\n        $file_name_arr_0_first_char = $file_name_arr_0[0];\n\
    \        $file_name_arr_0_first_char_ord = ord($file_name_arr_0_first_char);\n\
    \        $file_name_arr_0_first_char_ord_is_letter = $file_name_arr_0_first_char_ord\
    \ >= 65 && $file_name_arr_0_first_char_ord <= 90 || $file_name_arr_0_first_char_ord\
    \ >= 97 && $file_name_arr_0_first_char_ord <= 122;\n        $file_name_arr_1_is_valid\
    \ = $file_name_arr_1 == 'txt' || $file_name_arr_1 == 'exe' || $file_name_arr_1\
    \ == 'dll';\n        $file_name_arr_0_is_valid = $file_name_arr_0_first_char_ord_is_letter\
    \ && $file_name_arr_0_count <= 3;\n        if ($file_name_arr_0_is_valid && $file_name_arr_1_is_valid)\
    \ {\n            return 'Yes';\n        }\n    }\n    return 'No';\n}\n\nfunction\
    \ candidate(...$args) {\n    return file_name_check(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"example.txt\") !== \"Yes\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"1example.dll\") !== \"No\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"s1sdf3.asd\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    K.dll\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    MY16FILE3.exe\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"His12FILE94.exe\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"_Y.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"?aREYA.exe\") !== \"No\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"/this_is_valid.dll\") !==\
    \ \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"this_is_valid.wow\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_valid.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"this_is_valid.txtexe\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#this2_i4s_5valid.ten\") !== \"No\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"@this1_is6_valid.exe\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_12valid.6exe4.txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"all.exe.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"I563_No.exe\") !== \"Yes\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Is3youfault.txt\") !== \"\
    Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"no_one#knows.dll\"\
    ) !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1I563_Yes3.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"I563_Yes3.txtt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"final..txt\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"final132\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"_f4indsartal132.\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\".txt\") !== \"No\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"s.\") !== \"\
    No\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp6ay21er8.php:39\n\
    Stack trace:\n#0 /tmp/tmp6ay21er8.php(67): test()\n#1 {main}\n  thrown in /tmp/tmp6ay21er8.php\
    \ on line 39\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function which takes a string representing a file's\
    \ name, and returns\n// 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n// A file's name is considered to be valid if and only if all the\
    \ following conditions \n// are met:\n// - There should not be more than three\
    \ digits ('0'-'9') in the file's name.\n// - The file's name contains exactly\
    \ one dot '.'\n// - The substring before the dot should not be empty, and it starts\
    \ with a letter from \n// the latin alphapet ('a'-'z' and 'A'-'Z').\n// - The\
    \ substring after the dot should be one of these: ['txt', 'exe', 'dll']\n// Examples:\n\
    // file_name_check(\"example.txt\") # => 'Yes'\n// file_name_check(\"1example.dll\"\
    ) # => 'No' (the name should start with a latin alphapet letter)\nfunction file_name_check($file_name)\
    \ {\n    $substr = explode('.', $file_name);\n    $substr_1 = $substr[0];\n  \
    \  $substr_2 = $substr[1];\n    $count = 0;\n    for ($i = 0; $i < strlen($substr_1);\
    \ $i++) {\n        if (is_numeric($substr_1[$i])) {\n            $count++;\n \
    \       }\n    }\n    if ($count > 3) {\n        return 'No';\n    }\n    if (ctype_alpha($substr_1[0]))\
    \ {\n        if ($substr_2 == 'txt' || $substr_2 == 'exe' || $substr_2 == 'dll')\
    \ {\n            return 'Yes';\n        }\n    }\n    return 'No';\n}\n\nfunction\
    \ candidate(...$args) {\n    return file_name_check(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"example.txt\") !== \"Yes\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"1example.dll\") !== \"No\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"s1sdf3.asd\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    K.dll\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    MY16FILE3.exe\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"His12FILE94.exe\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"_Y.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"?aREYA.exe\") !== \"No\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"/this_is_valid.dll\") !==\
    \ \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"this_is_valid.wow\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_valid.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"this_is_valid.txtexe\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#this2_i4s_5valid.ten\") !== \"No\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"@this1_is6_valid.exe\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_12valid.6exe4.txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"all.exe.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"I563_No.exe\") !== \"Yes\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Is3youfault.txt\") !== \"\
    Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"no_one#knows.dll\"\
    ) !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1I563_Yes3.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"I563_Yes3.txtt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"final..txt\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"final132\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"_f4indsartal132.\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\".txt\") !== \"No\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"s.\") !== \"\
    No\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpa5r6vgui.php:55\n\
    Stack trace:\n#0 /tmp/tmpa5r6vgui.php(68): test()\n#1 {main}\n  thrown in /tmp/tmpa5r6vgui.php\
    \ on line 55\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function which takes a string representing a file's\
    \ name, and returns\n// 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n// A file's name is considered to be valid if and only if all the\
    \ following conditions \n// are met:\n// - There should not be more than three\
    \ digits ('0'-'9') in the file's name.\n// - The file's name contains exactly\
    \ one dot '.'\n// - The substring before the dot should not be empty, and it starts\
    \ with a letter from \n// the latin alphapet ('a'-'z' and 'A'-'Z').\n// - The\
    \ substring after the dot should be one of these: ['txt', 'exe', 'dll']\n// Examples:\n\
    // file_name_check(\"example.txt\") # => 'Yes'\n// file_name_check(\"1example.dll\"\
    ) # => 'No' (the name should start with a latin alphapet letter)\nfunction file_name_check($file_name)\
    \ {\n    $file_name_array = explode('.', $file_name);\n    $file_name_array_length\
    \ = count($file_name_array);\n    if ($file_name_array_length != 2) {\n      \
    \  return 'No';\n    }\n    $file_name_array_first = $file_name_array[0];\n  \
    \  $file_name_array_second = $file_name_array[1];\n    $file_name_array_first_length\
    \ = strlen($file_name_array_first);\n    $file_name_array_second_length = strlen($file_name_array_second);\n\
    \    if ($file_name_array_first_length == 0) {\n        return 'No';\n    }\n\
    \    if ($file_name_array_second_length == 0) {\n        return 'No';\n    }\n\
    \    if ($file_name_array_second != 'txt' && $file_name_array_second != 'exe'\
    \ && $file_name_array_second != 'dll') {\n        return 'No';\n    }\n    $file_name_array_first_first_char\
    \ = $file_name_array_first[0];\n    if (!preg_match('/^[a-zA-Z]/', $file_name_array_first_first_char))\
    \ {\n        return 'No';\n    }\n    if (preg_match('/[0-9]{4}/', $file_name_array_first))\
    \ {\n        return 'No';\n    }\n    return 'Yes';\n}\n\nfunction candidate(...$args)\
    \ {\n    return file_name_check(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(\"example.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"1example.dll\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"s1sdf3.asd\") !== \"No\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"K.dll\") !== \"Yes\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"MY16FILE3.exe\"\
    ) !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    His12FILE94.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(\"_Y.txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"?aREYA.exe\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"/this_is_valid.dll\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"this_is_valid.wow\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_valid.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"this_is_valid.txtexe\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#this2_i4s_5valid.ten\") !== \"No\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"@this1_is6_valid.exe\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_12valid.6exe4.txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"all.exe.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"I563_No.exe\") !== \"Yes\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Is3youfault.txt\") !== \"\
    Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"no_one#knows.dll\"\
    ) !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1I563_Yes3.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"I563_Yes3.txtt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"final..txt\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"final132\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"_f4indsartal132.\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\".txt\") !== \"No\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"s.\") !== \"\
    No\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp26mli903.php:53\n\
    Stack trace:\n#0 /tmp/tmp26mli903.php(76): test()\n#1 {main}\n  thrown in /tmp/tmp26mli903.php\
    \ on line 53\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function which takes a string representing a file's\
    \ name, and returns\n// 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n// A file's name is considered to be valid if and only if all the\
    \ following conditions \n// are met:\n// - There should not be more than three\
    \ digits ('0'-'9') in the file's name.\n// - The file's name contains exactly\
    \ one dot '.'\n// - The substring before the dot should not be empty, and it starts\
    \ with a letter from \n// the latin alphapet ('a'-'z' and 'A'-'Z').\n// - The\
    \ substring after the dot should be one of these: ['txt', 'exe', 'dll']\n// Examples:\n\
    // file_name_check(\"example.txt\") # => 'Yes'\n// file_name_check(\"1example.dll\"\
    ) # => 'No' (the name should start with a latin alphapet letter)\nfunction file_name_check($file_name)\
    \ {\n    $file_name_array = explode('.', $file_name);\n    if (count($file_name_array)\
    \ != 2) {\n        return 'No';\n    }\n    $first_part = $file_name_array[0];\n\
    \    $second_part = $file_name_array[1];\n    if (!preg_match('/^[a-zA-Z]/', $first_part))\
    \ {\n        return 'No';\n    }\n    if (!preg_match('/^[a-zA-Z]{3}$/', $second_part))\
    \ {\n        return 'No';\n    }\n    if (preg_match('/\\d/', $first_part) &&\
    \ preg_match_all('/\\d/', $first_part) > 3) {\n        return 'No';\n    }\n \
    \   return 'Yes';\n}\n\nfunction candidate(...$args) {\n    return file_name_check(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"example.txt\") !== \"Yes\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"1example.dll\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    s1sdf3.asd\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    K.dll\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    MY16FILE3.exe\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"His12FILE94.exe\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"_Y.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"?aREYA.exe\") !== \"No\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"/this_is_valid.dll\") !==\
    \ \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"this_is_valid.wow\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_valid.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"this_is_valid.txtexe\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#this2_i4s_5valid.ten\") !== \"No\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"@this1_is6_valid.exe\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_12valid.6exe4.txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"all.exe.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"I563_No.exe\") !== \"Yes\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Is3youfault.txt\") !== \"\
    Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"no_one#knows.dll\"\
    ) !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1I563_Yes3.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"I563_Yes3.txtt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"final..txt\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"final132\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"_f4indsartal132.\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\".txt\") !== \"No\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"s.\") !== \"\
    No\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpjk597a81.php:40\n\
    Stack trace:\n#0 /tmp/tmpjk597a81.php(66): test()\n#1 {main}\n  thrown in /tmp/tmpjk597a81.php\
    \ on line 40\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function which takes a string representing a file's\
    \ name, and returns\n// 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n// A file's name is considered to be valid if and only if all the\
    \ following conditions \n// are met:\n// - There should not be more than three\
    \ digits ('0'-'9') in the file's name.\n// - The file's name contains exactly\
    \ one dot '.'\n// - The substring before the dot should not be empty, and it starts\
    \ with a letter from \n// the latin alphapet ('a'-'z' and 'A'-'Z').\n// - The\
    \ substring after the dot should be one of these: ['txt', 'exe', 'dll']\n// Examples:\n\
    // file_name_check(\"example.txt\") # => 'Yes'\n// file_name_check(\"1example.dll\"\
    ) # => 'No' (the name should start with a latin alphapet letter)\nfunction file_name_check($file_name)\
    \ {\n    $file_name_array = explode('.', $file_name);\n    $file_name_array[0]\
    \ = preg_replace('/[0-9]/', '', $file_name_array[0]);\n    $file_name_array[0]\
    \ = preg_replace('/[^a-zA-Z]/', '', $file_name_array[0]);\n    $file_name_array[1]\
    \ = preg_replace('/[^a-zA-Z]/', '', $file_name_array[1]);\n    if (strlen($file_name_array[0])\
    \ == 0 || strlen($file_name_array[1]) == 0) {\n        return 'No';\n    }\n \
    \   if (strlen($file_name_array[0]) > 3) {\n        return 'No';\n    }\n    if\
    \ ($file_name_array[1] != 'txt' && $file_name_array[1] != 'exe' && $file_name_array[1]\
    \ != 'dll') {\n        return 'No';\n    }\n    return 'Yes';\n}\n\nfunction candidate(...$args)\
    \ {\n    return file_name_check(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(\"example.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"1example.dll\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"s1sdf3.asd\") !== \"No\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"K.dll\") !== \"Yes\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"MY16FILE3.exe\"\
    ) !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    His12FILE94.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(\"_Y.txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"?aREYA.exe\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"/this_is_valid.dll\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"this_is_valid.wow\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_valid.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"this_is_valid.txtexe\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#this2_i4s_5valid.ten\") !== \"No\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"@this1_is6_valid.exe\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_12valid.6exe4.txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"all.exe.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"I563_No.exe\") !== \"Yes\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Is3youfault.txt\") !== \"\
    Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"no_one#knows.dll\"\
    ) !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1I563_Yes3.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"I563_Yes3.txtt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"final..txt\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"final132\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"_f4indsartal132.\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\".txt\") !== \"No\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"s.\") !== \"\
    No\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpecfjlghy.php:36\n\
    Stack trace:\n#0 /tmp/tmpecfjlghy.php(64): test()\n#1 {main}\n  thrown in /tmp/tmpecfjlghy.php\
    \ on line 36\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function which takes a string representing a file's\
    \ name, and returns\n// 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n// A file's name is considered to be valid if and only if all the\
    \ following conditions \n// are met:\n// - There should not be more than three\
    \ digits ('0'-'9') in the file's name.\n// - The file's name contains exactly\
    \ one dot '.'\n// - The substring before the dot should not be empty, and it starts\
    \ with a letter from \n// the latin alphapet ('a'-'z' and 'A'-'Z').\n// - The\
    \ substring after the dot should be one of these: ['txt', 'exe', 'dll']\n// Examples:\n\
    // file_name_check(\"example.txt\") # => 'Yes'\n// file_name_check(\"1example.dll\"\
    ) # => 'No' (the name should start with a latin alphapet letter)\nfunction file_name_check($file_name)\
    \ {\n    $extensions = ['txt', 'exe', 'dll'];\n    $file_name_parts = explode('.',\
    \ $file_name);\n    if (count($file_name_parts) != 2) {\n        return 'No';\n\
    \    }\n    if (!ctype_alpha($file_name_parts[0][0])) {\n        return 'No';\n\
    \    }\n    if (!in_array($file_name_parts[1], $extensions)) {\n        return\
    \ 'No';\n    }\n    if (preg_match_all('/[0-9]/', $file_name_parts[0]) > 3) {\n\
    \        return 'No';\n    }\n    return 'Yes';\n}\n\nfunction candidate(...$args)\
    \ {\n    return file_name_check(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(\"example.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"1example.dll\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"s1sdf3.asd\") !== \"No\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"K.dll\") !== \"Yes\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"MY16FILE3.exe\"\
    ) !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    His12FILE94.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(\"_Y.txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"?aREYA.exe\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"/this_is_valid.dll\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"this_is_valid.wow\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_valid.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"this_is_valid.txtexe\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#this2_i4s_5valid.ten\") !== \"No\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"@this1_is6_valid.exe\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_12valid.6exe4.txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"all.exe.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"I563_No.exe\") !== \"Yes\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Is3youfault.txt\") !== \"\
    Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"no_one#knows.dll\"\
    ) !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1I563_Yes3.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"I563_Yes3.txtt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"final..txt\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"final132\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"_f4indsartal132.\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\".txt\") !== \"No\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"s.\") !== \"\
    No\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Warning:  Uninitialized string offset 0 in /tmp/tmpyho47ofa.php on\
    \ line 20\n"
  exit_code: 0
  status: OK
- program: "<?php\n// Create a function which takes a string representing a file's\
    \ name, and returns\n// 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n// A file's name is considered to be valid if and only if all the\
    \ following conditions \n// are met:\n// - There should not be more than three\
    \ digits ('0'-'9') in the file's name.\n// - The file's name contains exactly\
    \ one dot '.'\n// - The substring before the dot should not be empty, and it starts\
    \ with a letter from \n// the latin alphapet ('a'-'z' and 'A'-'Z').\n// - The\
    \ substring after the dot should be one of these: ['txt', 'exe', 'dll']\n// Examples:\n\
    // file_name_check(\"example.txt\") # => 'Yes'\n// file_name_check(\"1example.dll\"\
    ) # => 'No' (the name should start with a latin alphapet letter)\nfunction file_name_check($file_name)\
    \ {\n    $file_name_array = explode('.', $file_name);\n    $file_name_array[0]\
    \ = str_split($file_name_array[0]);\n    $count = 0;\n    foreach ($file_name_array[0]\
    \ as $char) {\n        if (ctype_digit($char)) {\n            $count++;\n    \
    \    }\n    }\n    if ($count > 3) {\n        return 'No';\n    }\n    if (count($file_name_array)\
    \ != 2) {\n        return 'No';\n    }\n    if (!ctype_alpha($file_name_array[0][0]))\
    \ {\n        return 'No';\n    }\n    if (!in_array($file_name_array[1], ['txt',\
    \ 'exe', 'dll'])) {\n        return 'No';\n    }\n    return 'Yes';\n}\n\nfunction\
    \ candidate(...$args) {\n    return file_name_check(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"example.txt\") !== \"Yes\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"1example.dll\") !== \"No\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"s1sdf3.asd\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    K.dll\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    MY16FILE3.exe\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"His12FILE94.exe\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"_Y.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"?aREYA.exe\") !== \"No\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"/this_is_valid.dll\") !==\
    \ \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"this_is_valid.wow\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_valid.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"this_is_valid.txtexe\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#this2_i4s_5valid.ten\") !== \"No\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"@this1_is6_valid.exe\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_12valid.6exe4.txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"all.exe.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"I563_No.exe\") !== \"Yes\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Is3youfault.txt\") !== \"\
    Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"no_one#knows.dll\"\
    ) !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1I563_Yes3.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"I563_Yes3.txtt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"final..txt\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"final132\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"_f4indsartal132.\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\".txt\") !== \"No\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"s.\") !== \"\
    No\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Create a function which takes a string representing a file's\
    \ name, and returns\n// 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n// A file's name is considered to be valid if and only if all the\
    \ following conditions \n// are met:\n// - There should not be more than three\
    \ digits ('0'-'9') in the file's name.\n// - The file's name contains exactly\
    \ one dot '.'\n// - The substring before the dot should not be empty, and it starts\
    \ with a letter from \n// the latin alphapet ('a'-'z' and 'A'-'Z').\n// - The\
    \ substring after the dot should be one of these: ['txt', 'exe', 'dll']\n// Examples:\n\
    // file_name_check(\"example.txt\") # => 'Yes'\n// file_name_check(\"1example.dll\"\
    ) # => 'No' (the name should start with a latin alphapet letter)\nfunction file_name_check($file_name)\
    \ {\n    $file_name_array = explode('.', $file_name);\n    $file_name_array_count\
    \ = count($file_name_array);\n    $file_name_array_count_digit = 0;\n    $file_name_array_count_dot\
    \ = 0;\n    $file_name_array_count_letter = 0;\n    $file_name_array_count_extension\
    \ = 0;\n    $file_name_array_count_extension_txt = 0;\n    $file_name_array_count_extension_exe\
    \ = 0;\n    $file_name_array_count_extension_dll = 0;\n    $file_name_array_count_extension_other\
    \ = 0;\n    $file_name_array_count_extension_empty = 0;\n    $file_name_array_count_extension_empty_txt\
    \ = 0;\n    $file_name_array_count_extension_empty_exe = 0;\n    $file_name_array_count_extension_empty_dll\
    \ = 0;\n    $file_name_array_count_extension_empty_other = 0;\n    $file_name_array_count_extension_empty_other_txt\
    \ = 0;\n    $file_name_array_count_extension_empty_other_exe = 0;\n    $file_name_array_count_extension_empty_other_dll\
    \ = 0;\n    $file_name_array_count_extension_empty_other_other = 0;\n    $file_name_array_count_extension_empty_other_other_txt\
    \ = 0;\n    $file_name_array_count_extension_empty_other_other_exe = 0;\n    $file_name_array_count_extension_empty_other_other_dll\
    \ = 0;\n    $file_name_array_count_extension_empty_other_other_other = 0;\n  \
    \  $file_name_array_count_extension_empty_other_other_other_txt = 0;\n    $file_name_array_count_extension_empty_other_other_other_exe\
    \ = 0;\n    $file_name_array\nfunction candidate(...$args) {\n    return file_name_check(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"example.txt\") !== \"Yes\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"1example.dll\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    s1sdf3.asd\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    K.dll\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    MY16FILE3.exe\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"His12FILE94.exe\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"_Y.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"?aREYA.exe\") !== \"No\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"/this_is_valid.dll\") !==\
    \ \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"this_is_valid.wow\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_valid.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"this_is_valid.txtexe\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#this2_i4s_5valid.ten\") !== \"No\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"@this1_is6_valid.exe\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_12valid.6exe4.txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"all.exe.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"I563_No.exe\") !== \"Yes\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Is3youfault.txt\") !== \"\
    Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"no_one#knows.dll\"\
    ) !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1I563_Yes3.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"I563_Yes3.txtt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"final..txt\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"final132\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"_f4indsartal132.\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\".txt\") !== \"No\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"s.\") !== \"\
    No\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Parse error:  syntax error, unexpected token \"function\" in /tmp/tmpp9y4s0rb.php\
    \ on line 41\n"
  exit_code: 255
  status: SyntaxError
- program: "<?php\n// Create a function which takes a string representing a file's\
    \ name, and returns\n// 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n// A file's name is considered to be valid if and only if all the\
    \ following conditions \n// are met:\n// - There should not be more than three\
    \ digits ('0'-'9') in the file's name.\n// - The file's name contains exactly\
    \ one dot '.'\n// - The substring before the dot should not be empty, and it starts\
    \ with a letter from \n// the latin alphapet ('a'-'z' and 'A'-'Z').\n// - The\
    \ substring after the dot should be one of these: ['txt', 'exe', 'dll']\n// Examples:\n\
    // file_name_check(\"example.txt\") # => 'Yes'\n// file_name_check(\"1example.dll\"\
    ) # => 'No' (the name should start with a latin alphapet letter)\nfunction file_name_check($file_name)\
    \ {\n    $file_name_array = explode('.', $file_name);\n    if (count($file_name_array)\
    \ != 2) {\n        return 'No';\n    }\n    $file_name_array[0] = str_split($file_name_array[0]);\n\
    \    $file_name_array[1] = str_split($file_name_array[1]);\n    $count = 0;\n\
    \    foreach ($file_name_array[0] as $char) {\n        if (ord($char) >= 48 &&\
    \ ord($char) <= 57) {\n            $count++;\n        }\n    }\n    if ($count\
    \ > 3) {\n        return 'No';\n    }\n    if (ord($file_name_array[0][0]) < 65\
    \ || (ord($file_name_array[0][0]) > 90 && ord($file_name_array[0][0]) < 97) ||\
    \ ord($file_name_array[0][0]) > 122) {\n        return 'No';\n    }\n    if ($file_name_array[1][0]\
    \ != 't' || $file_name_array[1][1] != 'x' || $file_name_array[1][2] != 't') {\n\
    \        if ($file_name_array[1][0] != 'e' || $file_name_array[1][1] != 'x' ||\
    \ $file_name_array[1][2] != 'e') {\n            if ($file_name_array[1][0] !=\
    \ 'd' || $file_name_array[1][1] != 'l' || $file_name_array[1][2] != 'l') {\n \
    \               return 'No';\n            }\n        }\n    }\n    return 'Yes';\n\
    }\necho file_name_check(\"example.txt\") . PHP_EOL;\necho file_name_check(\"1example.dll\"\
    ) . PHP_EOL;\necho file_name_check(\"example.exe\") . PHP_EOL;\necho file_name_check(\"\
    example.dll\") . PHP_EOL;\necho file_name_check(\"example.txt\") . PHP_EOL;\n\
    echo file_name\nfunction candidate(...$args) {\n    return file_name_check(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"example.txt\") !== \"Yes\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"1example.dll\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    s1sdf3.asd\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    K.dll\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    MY16FILE3.exe\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"His12FILE94.exe\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"_Y.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"?aREYA.exe\") !== \"No\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"/this_is_valid.dll\") !==\
    \ \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"this_is_valid.wow\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_valid.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"this_is_valid.txtexe\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#this2_i4s_5valid.ten\") !== \"No\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"@this1_is6_valid.exe\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_12valid.6exe4.txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"all.exe.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"I563_No.exe\") !== \"Yes\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Is3youfault.txt\") !== \"\
    Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"no_one#knows.dll\"\
    ) !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1I563_Yes3.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"I563_Yes3.txtt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"final..txt\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"final132\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"_f4indsartal132.\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\".txt\") !== \"No\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"s.\") !== \"\
    No\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Parse error:  syntax error, unexpected token \"function\", expecting\
    \ \",\" or \";\" in /tmp/tmp_m12bl7n.php on line 48\n"
  exit_code: 255
  status: SyntaxError
- program: "<?php\n// Create a function which takes a string representing a file's\
    \ name, and returns\n// 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n// A file's name is considered to be valid if and only if all the\
    \ following conditions \n// are met:\n// - There should not be more than three\
    \ digits ('0'-'9') in the file's name.\n// - The file's name contains exactly\
    \ one dot '.'\n// - The substring before the dot should not be empty, and it starts\
    \ with a letter from \n// the latin alphapet ('a'-'z' and 'A'-'Z').\n// - The\
    \ substring after the dot should be one of these: ['txt', 'exe', 'dll']\n// Examples:\n\
    // file_name_check(\"example.txt\") # => 'Yes'\n// file_name_check(\"1example.dll\"\
    ) # => 'No' (the name should start with a latin alphapet letter)\nfunction file_name_check($file_name)\
    \ {\n    $file_name_arr = explode('.', $file_name);\n    $file_name_arr_size =\
    \ count($file_name_arr);\n    if ($file_name_arr_size != 2) {\n        return\
    \ 'No';\n    }\n    $file_name_arr_0 = $file_name_arr[0];\n    $file_name_arr_1\
    \ = $file_name_arr[1];\n    $file_name_arr_0_size = strlen($file_name_arr_0);\n\
    \    $file_name_arr_1_size = strlen($file_name_arr_1);\n    if ($file_name_arr_0_size\
    \ == 0) {\n        return 'No';\n    }\n    if (!preg_match('/^[a-zA-Z]/', $file_name_arr_0))\
    \ {\n        return 'No';\n    }\n    if (!preg_match('/^[a-zA-Z]/', $file_name_arr_1))\
    \ {\n        return 'No';\n    }\n    if (!preg_match('/^[a-zA-Z0-9]*$/', $file_name_arr_0))\
    \ {\n        return 'No';\n    }\n    if (!preg_match('/^[a-zA-Z0-9]*$/', $file_name_arr_1))\
    \ {\n        return 'No';\n    }\n    if ($file_name_arr_1_size != 3) {\n    \
    \    return 'No';\n    }\n    if (!preg_match('/^[a-zA-Z0-9]*$/', $file_name_arr_0))\
    \ {\n        return 'No';\n    }\n    if (!preg_match('/^[a-zA-Z0-9]*$/', $file_name_arr_1))\
    \ {\n        return 'No';\n    }\n    if ($file_name_arr_1_size != 3) {\n    \
    \    return 'No';\n    }\n    if (!preg_match('/^[a-zA-Z0-9]*$/\nfunction candidate(...$args)\
    \ {\n    return file_name_check(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(\"example.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"1example.dll\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"s1sdf3.asd\") !== \"No\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"K.dll\") !== \"Yes\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"MY16FILE3.exe\"\
    ) !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    His12FILE94.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(\"_Y.txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"?aREYA.exe\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"/this_is_valid.dll\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"this_is_valid.wow\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_valid.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"this_is_valid.txtexe\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#this2_i4s_5valid.ten\") !== \"No\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"@this1_is6_valid.exe\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_12valid.6exe4.txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"all.exe.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"I563_No.exe\") !== \"Yes\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Is3youfault.txt\") !== \"\
    Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"no_one#knows.dll\"\
    ) !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1I563_Yes3.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"I563_Yes3.txtt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"final..txt\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"final132\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"_f4indsartal132.\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\".txt\") !== \"No\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"s.\") !== \"\
    No\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Parse error:  syntax error, unexpected string content \"/^[a-zA-Z0-9]*$/\"\
    \ in /tmp/tmpcvniiee4.php on line 51\n"
  exit_code: 255
  status: SyntaxError
- program: "<?php\n// Create a function which takes a string representing a file's\
    \ name, and returns\n// 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n// A file's name is considered to be valid if and only if all the\
    \ following conditions \n// are met:\n// - There should not be more than three\
    \ digits ('0'-'9') in the file's name.\n// - The file's name contains exactly\
    \ one dot '.'\n// - The substring before the dot should not be empty, and it starts\
    \ with a letter from \n// the latin alphapet ('a'-'z' and 'A'-'Z').\n// - The\
    \ substring after the dot should be one of these: ['txt', 'exe', 'dll']\n// Examples:\n\
    // file_name_check(\"example.txt\") # => 'Yes'\n// file_name_check(\"1example.dll\"\
    ) # => 'No' (the name should start with a latin alphapet letter)\nfunction file_name_check($file_name)\
    \ {\n    $file_name_arr = explode('.', $file_name);\n    if (count($file_name_arr)\
    \ != 2) {\n        return 'No';\n    }\n    if (preg_match('/[^a-zA-Z0-9]/', $file_name_arr[0]))\
    \ {\n        return 'No';\n    }\n    if (preg_match('/[^a-zA-Z0-9]/', $file_name_arr[1]))\
    \ {\n        return 'No';\n    }\n    if (preg_match('/[0-9]{4,}/', $file_name_arr[0]))\
    \ {\n        return 'No';\n    }\n    if (!preg_match('/[a-zA-Z]/', $file_name_arr[0]))\
    \ {\n        return 'No';\n    }\n    if (!in_array($file_name_arr[1], ['txt',\
    \ 'exe', 'dll'])) {\n        return 'No';\n    }\n    return 'Yes';\n}\n\nfunction\
    \ candidate(...$args) {\n    return file_name_check(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"example.txt\") !== \"Yes\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"1example.dll\") !== \"No\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"s1sdf3.asd\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    K.dll\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    MY16FILE3.exe\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"His12FILE94.exe\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"_Y.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"?aREYA.exe\") !== \"No\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"/this_is_valid.dll\") !==\
    \ \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"this_is_valid.wow\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_valid.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"this_is_valid.txtexe\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#this2_i4s_5valid.ten\") !== \"No\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"@this1_is6_valid.exe\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_12valid.6exe4.txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"all.exe.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"I563_No.exe\") !== \"Yes\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Is3youfault.txt\") !== \"\
    Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"no_one#knows.dll\"\
    ) !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1I563_Yes3.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"I563_Yes3.txtt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"final..txt\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"final132\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"_f4indsartal132.\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\".txt\") !== \"No\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"s.\") !== \"\
    No\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpuw3ncrvk.php:43\n\
    Stack trace:\n#0 /tmp/tmpuw3ncrvk.php(70): test()\n#1 {main}\n  thrown in /tmp/tmpuw3ncrvk.php\
    \ on line 43\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function which takes a string representing a file's\
    \ name, and returns\n// 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n// A file's name is considered to be valid if and only if all the\
    \ following conditions \n// are met:\n// - There should not be more than three\
    \ digits ('0'-'9') in the file's name.\n// - The file's name contains exactly\
    \ one dot '.'\n// - The substring before the dot should not be empty, and it starts\
    \ with a letter from \n// the latin alphapet ('a'-'z' and 'A'-'Z').\n// - The\
    \ substring after the dot should be one of these: ['txt', 'exe', 'dll']\n// Examples:\n\
    // file_name_check(\"example.txt\") # => 'Yes'\n// file_name_check(\"1example.dll\"\
    ) # => 'No' (the name should start with a latin alphapet letter)\nfunction file_name_check($file_name)\
    \ {\n    // Write your code here\n    // To print results to the standard output\
    \ you can use print\n    // Example: print \"Hello world!\";\n    $dot_pos = strpos($file_name,\
    \ '.');\n    if ($dot_pos === false) {\n        return 'No';\n    }\n    $name_part\
    \ = substr($file_name, 0, $dot_pos);\n    $ext_part = substr($file_name, $dot_pos\
    \ + 1);\n    if (strlen($name_part) === 0 || !preg_match('/^[a-zA-Z]/', $name_part))\
    \ {\n        return 'No';\n    }\n    if (preg_match('/\\d/', $name_part) > 3)\
    \ {\n        return 'No';\n    }\n    if (!in_array($ext_part, ['txt', 'exe',\
    \ 'dll'])) {\n        return 'No';\n    }\n    return 'Yes';\n}\n\nfunction candidate(...$args)\
    \ {\n    return file_name_check(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(\"example.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"1example.dll\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"s1sdf3.asd\") !== \"No\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"K.dll\") !== \"Yes\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"MY16FILE3.exe\"\
    ) !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    His12FILE94.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(\"_Y.txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"?aREYA.exe\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"/this_is_valid.dll\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"this_is_valid.wow\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_valid.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"this_is_valid.txtexe\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#this2_i4s_5valid.ten\") !== \"No\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"@this1_is6_valid.exe\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_12valid.6exe4.txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"all.exe.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"I563_No.exe\") !== \"Yes\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Is3youfault.txt\") !== \"\
    Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"no_one#knows.dll\"\
    ) !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1I563_Yes3.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"I563_Yes3.txtt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"final..txt\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"final132\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"_f4indsartal132.\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\".txt\") !== \"No\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"s.\") !== \"\
    No\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmphmagtt4h.php:46\n\
    Stack trace:\n#0 /tmp/tmphmagtt4h.php(69): test()\n#1 {main}\n  thrown in /tmp/tmphmagtt4h.php\
    \ on line 46\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function which takes a string representing a file's\
    \ name, and returns\n// 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n// A file's name is considered to be valid if and only if all the\
    \ following conditions \n// are met:\n// - There should not be more than three\
    \ digits ('0'-'9') in the file's name.\n// - The file's name contains exactly\
    \ one dot '.'\n// - The substring before the dot should not be empty, and it starts\
    \ with a letter from \n// the latin alphapet ('a'-'z' and 'A'-'Z').\n// - The\
    \ substring after the dot should be one of these: ['txt', 'exe', 'dll']\n// Examples:\n\
    // file_name_check(\"example.txt\") # => 'Yes'\n// file_name_check(\"1example.dll\"\
    ) # => 'No' (the name should start with a latin alphapet letter)\nfunction file_name_check($file_name)\
    \ {\n    $file_name_array = explode('.', $file_name);\n    $file_name_array_count\
    \ = count($file_name_array);\n    $file_name_array_count_digit = 0;\n    $file_name_array_count_dot\
    \ = 0;\n    $file_name_array_count_letter = 0;\n    $file_name_array_count_extension\
    \ = 0;\n    $file_name_array_count_extension_txt = 0;\n    $file_name_array_count_extension_exe\
    \ = 0;\n    $file_name_array_count_extension_dll = 0;\n    $file_name_array_count_extension_other\
    \ = 0;\n    $file_name_array_count_extension_other_txt = 0;\n    $file_name_array_count_extension_other_exe\
    \ = 0;\n    $file_name_array_count_extension_other_dll = 0;\n    $file_name_array_count_extension_other_other\
    \ = 0;\n    $file_name_array_count_extension_other_other_txt = 0;\n    $file_name_array_count_extension_other_other_exe\
    \ = 0;\n    $file_name_array_count_extension_other_other_dll = 0;\n    $file_name_array_count_extension_other_other_other\
    \ = 0;\n    $file_name_array_count_extension_other_other_other_txt = 0;\n    $file_name_array_count_extension_other_other_other_exe\
    \ = 0;\n    $file_name_array_count_extension_other_other_other_dll = 0;\n    $file_name_array_count_extension_other_other_other_other\
    \ = 0;\n    $file_name_array_count_extension_other_other_other_other_txt = 0;\n\
    \    $file_name_array_count_extension_other_other_other_other_exe = 0;\n    $file_name_array_count_extension_other_other_other_other_dll\
    \ = 0;\nfunction candidate(...$args) {\n    return file_name_check(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"example.txt\") !== \"Yes\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"1example.dll\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    s1sdf3.asd\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    K.dll\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    MY16FILE3.exe\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"His12FILE94.exe\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"_Y.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"?aREYA.exe\") !== \"No\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"/this_is_valid.dll\") !==\
    \ \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"this_is_valid.wow\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_valid.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"this_is_valid.txtexe\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#this2_i4s_5valid.ten\") !== \"No\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"@this1_is6_valid.exe\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_12valid.6exe4.txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"all.exe.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"I563_No.exe\") !== \"Yes\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Is3youfault.txt\") !== \"\
    Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"no_one#knows.dll\"\
    ) !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1I563_Yes3.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"I563_Yes3.txtt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"final..txt\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"final132\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"_f4indsartal132.\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\".txt\") !== \"No\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"s.\") !== \"\
    No\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Parse error:  Unclosed '{' on line 14 in /tmp/tmplk4aqc__.php on line\
    \ 73\n"
  exit_code: 255
  status: SyntaxError
- program: "<?php\n// Create a function which takes a string representing a file's\
    \ name, and returns\n// 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n// A file's name is considered to be valid if and only if all the\
    \ following conditions \n// are met:\n// - There should not be more than three\
    \ digits ('0'-'9') in the file's name.\n// - The file's name contains exactly\
    \ one dot '.'\n// - The substring before the dot should not be empty, and it starts\
    \ with a letter from \n// the latin alphapet ('a'-'z' and 'A'-'Z').\n// - The\
    \ substring after the dot should be one of these: ['txt', 'exe', 'dll']\n// Examples:\n\
    // file_name_check(\"example.txt\") # => 'Yes'\n// file_name_check(\"1example.dll\"\
    ) # => 'No' (the name should start with a latin alphapet letter)\nfunction file_name_check($file_name)\
    \ {\n    $file_name_array = explode('.', $file_name);\n    $file_name_array_count\
    \ = count($file_name_array);\n    if ($file_name_array_count > 2) {\n        return\
    \ 'No';\n    }\n    if ($file_name_array_count == 1) {\n        return 'No';\n\
    \    }\n    if (preg_match('/[0-9]{4,}/', $file_name_array[0])) {\n        return\
    \ 'No';\n    }\n    if (!preg_match('/[a-zA-Z]/', $file_name_array[0])) {\n  \
    \      return 'No';\n    }\n    if (!in_array($file_name_array[1], ['txt', 'exe',\
    \ 'dll'])) {\n        return 'No';\n    }\n    return 'Yes';\n}\n\nfunction candidate(...$args)\
    \ {\n    return file_name_check(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(\"example.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"1example.dll\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"s1sdf3.asd\") !== \"No\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"K.dll\") !== \"Yes\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"MY16FILE3.exe\"\
    ) !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    His12FILE94.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(\"_Y.txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"?aREYA.exe\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"/this_is_valid.dll\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"this_is_valid.wow\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_valid.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"this_is_valid.txtexe\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#this2_i4s_5valid.ten\") !== \"No\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"@this1_is6_valid.exe\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_12valid.6exe4.txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"all.exe.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"I563_No.exe\") !== \"Yes\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Is3youfault.txt\") !== \"\
    Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"no_one#knows.dll\"\
    ) !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1I563_Yes3.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"I563_Yes3.txtt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"final..txt\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"final132\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"_f4indsartal132.\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\".txt\") !== \"No\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"s.\") !== \"\
    No\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpmjly09pr.php:41\n\
    Stack trace:\n#0 /tmp/tmpmjly09pr.php(68): test()\n#1 {main}\n  thrown in /tmp/tmpmjly09pr.php\
    \ on line 41\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Create a function which takes a string representing a file's\
    \ name, and returns\n// 'Yes' if the the file's name is valid, and returns 'No'\
    \ otherwise.\n// A file's name is considered to be valid if and only if all the\
    \ following conditions \n// are met:\n// - There should not be more than three\
    \ digits ('0'-'9') in the file's name.\n// - The file's name contains exactly\
    \ one dot '.'\n// - The substring before the dot should not be empty, and it starts\
    \ with a letter from \n// the latin alphapet ('a'-'z' and 'A'-'Z').\n// - The\
    \ substring after the dot should be one of these: ['txt', 'exe', 'dll']\n// Examples:\n\
    // file_name_check(\"example.txt\") # => 'Yes'\n// file_name_check(\"1example.dll\"\
    ) # => 'No' (the name should start with a latin alphapet letter)\nfunction file_name_check($file_name)\
    \ {\n    $file_name_arr = explode('.', $file_name);\n    $file_name_arr_len =\
    \ count($file_name_arr);\n    if ($file_name_arr_len != 2) {\n        return 'No';\n\
    \    }\n    $file_name_arr_0 = $file_name_arr[0];\n    $file_name_arr_1 = $file_name_arr[1];\n\
    \    $file_name_arr_0_len = strlen($file_name_arr_0);\n    $file_name_arr_1_len\
    \ = strlen($file_name_arr_1);\n    if ($file_name_arr_0_len == 0) {\n        return\
    \ 'No';\n    }\n    if ($file_name_arr_1_len == 0) {\n        return 'No';\n \
    \   }\n    if ($file_name_arr_1_len > 3) {\n        return 'No';\n    }\n    if\
    \ (!preg_match('/^[a-zA-Z]/', $file_name_arr_0)) {\n        return 'No';\n   \
    \ }\n    if (!preg_match('/^[0-9]/', $file_name_arr_1)) {\n        return 'No';\n\
    \    }\n    if (!preg_match('/[0-9]{3}$/', $file_name_arr_1)) {\n        return\
    \ 'No';\n    }\n    if (!preg_match('/^(txt|exe|dll)$/', $file_name_arr_1)) {\n\
    \        return 'No';\n    }\n    return 'Yes';\n}\n\nfunction candidate(...$args)\
    \ {\n    return file_name_check(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(\"example.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"1example.dll\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"s1sdf3.asd\") !== \"No\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"K.dll\") !== \"Yes\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"MY16FILE3.exe\"\
    ) !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    His12FILE94.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n  \
    \  if (candidate(\"_Y.txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"?aREYA.exe\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"/this_is_valid.dll\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"this_is_valid.wow\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_valid.txt\") !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"this_is_valid.txtexe\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"#this2_i4s_5valid.ten\") !== \"No\") {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"@this1_is6_valid.exe\"\
    ) !== \"No\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    this_is_12valid.6exe4.txt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"all.exe.txt\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"I563_No.exe\") !== \"Yes\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(\"Is3youfault.txt\") !== \"\
    Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"no_one#knows.dll\"\
    ) !== \"Yes\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    1I563_Yes3.exe\") !== \"No\") { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(\"I563_Yes3.txtt\") !== \"No\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"final..txt\") !== \"No\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"final132\") !== \"No\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"_f4indsartal132.\") !== \"No\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\".txt\") !== \"No\")\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"s.\") !== \"\
    No\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpydr5vct1.php:53\n\
    Stack trace:\n#0 /tmp/tmpydr5vct1.php(81): test()\n#1 {main}\n  thrown in /tmp/tmpydr5vct1.php\
    \ on line 53\n"
  exit_code: 255
  status: Exception

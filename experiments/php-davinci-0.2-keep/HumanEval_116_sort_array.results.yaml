name: HumanEval_116_sort_array
language: php
results:
- program: "<?php\n// In this Kata, you have to sort an array of non-negative integers\
    \ according to\n// number of ones in their binary representation in ascending\
    \ order.\n// For similar number of ones, sort based on decimal value.\n// It must\
    \ be implemented like this:\n// >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4,\
    \ 5]\n// >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n// >>>\
    \ sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\nfunction sort_array($arr) {\n \
    \ $arr_ones = [];\n  $arr_dec = [];\n  foreach ($arr as $key => $value) {\n  \
    \  $arr_ones[$key] = substr_count(decbin($value), '1');\n    $arr_dec[$key] =\
    \ $value;\n  }\n  array_multisort($arr_ones, SORT_ASC, $arr_dec, SORT_ASC, $arr);\n\
    \  return $arr;\n}\n\nfunction candidate(...$args) {\n    return sort_array(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 5, 2, 3, 4)) !== array(1,\
    \ 2, 4, 3, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2,\
    \ -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 0, 2, 3, 4)) !== array(0, 1, 2, 4,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !==\
    \ array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 44,\
    \ 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 16,\
    \ 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpzwrfn8fp.php:26\n\
    Stack trace:\n#0 /tmp/tmpzwrfn8fp.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpzwrfn8fp.php\
    \ on line 26\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// In this Kata, you have to sort an array of non-negative integers\
    \ according to\n// number of ones in their binary representation in ascending\
    \ order.\n// For similar number of ones, sort based on decimal value.\n// It must\
    \ be implemented like this:\n// >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4,\
    \ 5]\n// >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n// >>>\
    \ sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\nfunction sort_array($arr) {\n \
    \ $arr = array_map(function($n) {\n    return [$n, decbin($n)];\n  }, $arr);\n\
    \  usort($arr, function($a, $b) {\n    $a_ones = substr_count($a[1], '1');\n \
    \   $b_ones = substr_count($b[1], '1');\n    if ($a_ones === $b_ones) {\n    \
    \  return $a[0] - $b[0];\n    }\n    return $a_ones - $b_ones;\n  });\n  return\
    \ array_map(function($n) {\n    return $n[0];\n  }, $arr);\n}\n\necho sort_array([1,\
    \ 5, 2, 3, 4]) . \"\\n\";\necho sort_array([-2, -3, -4, -5, -6]) . \"\\n\";\n\
    echo sort_array([1, 0, 2, 3, 4]) . \"\\n\";\nfunction candidate(...$args) {\n\
    \    return sort_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 5, 2, 3, 4)) !== array(1, 2, 4, 3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-2, -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0, 2,\
    \ 3, 4)) !== array(0, 1, 2, 4, 3)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2,\
    \ 2, 4, 4, 3, 3, 5, 5, 5, 7, 77)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 6, 44, 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8,\
    \ 16, 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "Array\nArray\nArray\n"
  stderr: "PHP Warning:  Array to string conversion in /tmp/tmpujos7rms.php on line\
    \ 26\nPHP Warning:  Array to string conversion in /tmp/tmpujos7rms.php on line\
    \ 27\nPHP Warning:  Array to string conversion in /tmp/tmpujos7rms.php on line\
    \ 28\nPHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpujos7rms.php:35\n\
    Stack trace:\n#0 /tmp/tmpujos7rms.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpujos7rms.php\
    \ on line 35\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// In this Kata, you have to sort an array of non-negative integers\
    \ according to\n// number of ones in their binary representation in ascending\
    \ order.\n// For similar number of ones, sort based on decimal value.\n// It must\
    \ be implemented like this:\n// >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4,\
    \ 5]\n// >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n// >>>\
    \ sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\nfunction sort_array($arr) {\n \
    \ $arr = array_map(function($n) {\n    return [$n, decbin($n)];\n  }, $arr);\n\
    \  usort($arr, function($a, $b) {\n    $a_ones = substr_count($a[1], '1');\n \
    \   $b_ones = substr_count($b[1], '1');\n    if ($a_ones == $b_ones) {\n     \
    \ return $a[0] - $b[0];\n    }\n    return $a_ones - $b_ones;\n  });\n  return\
    \ array_map(function($n) {\n    return $n[0];\n  }, $arr);\n}\n\nfunction candidate(...$args)\
    \ {\n    return sort_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 5, 2, 3, 4)) !== array(1, 2, 4, 3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-2, -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0, 2,\
    \ 3, 4)) !== array(0, 1, 2, 4, 3)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2,\
    \ 2, 4, 4, 3, 3, 5, 5, 5, 7, 77)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 6, 44, 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8,\
    \ 16, 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpgqkmy8ej.php:32\n\
    Stack trace:\n#0 /tmp/tmpgqkmy8ej.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpgqkmy8ej.php\
    \ on line 32\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// In this Kata, you have to sort an array of non-negative integers\
    \ according to\n// number of ones in their binary representation in ascending\
    \ order.\n// For similar number of ones, sort based on decimal value.\n// It must\
    \ be implemented like this:\n// >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4,\
    \ 5]\n// >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n// >>>\
    \ sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\nfunction sort_array($arr) {\n \
    \ $arr = array_map('decbin', $arr);\n  $arr = array_map('strlen', $arr);\n  $arr\
    \ = array_combine($arr, $arr);\n  ksort($arr);\n  $arr = array_keys($arr);\n \
    \ $arr = array_map('bindec', $arr);\n  return $arr;\n}\n\nfunction candidate(...$args)\
    \ {\n    return sort_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 5, 2, 3, 4)) !== array(1, 2, 4, 3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-2, -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0, 2,\
    \ 3, 4)) !== array(0, 1, 2, 4, 3)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2,\
    \ 2, 4, 4, 3, 3, 5, 5, 5, 7, 77)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 6, 44, 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8,\
    \ 16, 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp7fn25trr.php:24\n\
    Stack trace:\n#0 /tmp/tmp7fn25trr.php(34): test()\n#1 {main}\n  thrown in /tmp/tmp7fn25trr.php\
    \ on line 24\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// In this Kata, you have to sort an array of non-negative integers\
    \ according to\n// number of ones in their binary representation in ascending\
    \ order.\n// For similar number of ones, sort based on decimal value.\n// It must\
    \ be implemented like this:\n// >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4,\
    \ 5]\n// >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n// >>>\
    \ sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\nfunction sort_array($arr) {\n \
    \ $arr = array_map(function($n) {\n    return [$n, decbin($n)];\n  }, $arr);\n\
    \  usort($arr, function($a, $b) {\n    $a1 = substr_count($a[1], '1');\n    $b1\
    \ = substr_count($b[1], '1');\n    if ($a1 == $b1) {\n      return $a[0] - $b[0];\n\
    \    }\n    return $a1 - $b1;\n  });\n  return array_map(function($n) {\n    return\
    \ $n[0];\n  }, $arr);\n}\n\nfunction candidate(...$args) {\n    return sort_array(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 5, 2, 3, 4)) !== array(1,\
    \ 2, 4, 3, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2,\
    \ -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 0, 2, 3, 4)) !== array(0, 1, 2, 4,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !==\
    \ array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 44,\
    \ 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 16,\
    \ 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpx8ic1kdf.php:32\n\
    Stack trace:\n#0 /tmp/tmpx8ic1kdf.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpx8ic1kdf.php\
    \ on line 32\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// In this Kata, you have to sort an array of non-negative integers\
    \ according to\n// number of ones in their binary representation in ascending\
    \ order.\n// For similar number of ones, sort based on decimal value.\n// It must\
    \ be implemented like this:\n// >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4,\
    \ 5]\n// >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n// >>>\
    \ sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\nfunction sort_array($arr) {\n \
    \ $arr = array_map(function($x) {\n    return [$x, decbin($x)];\n  }, $arr);\n\
    \  usort($arr, function($a, $b) {\n    $a_ones = substr_count($a[1], '1');\n \
    \   $b_ones = substr_count($b[1], '1');\n    if ($a_ones == $b_ones) {\n     \
    \ return $a[0] - $b[0];\n    }\n    return $a_ones - $b_ones;\n  });\n  return\
    \ array_map(function($x) {\n    return $x[0];\n  }, $arr);\n}\n\nfunction candidate(...$args)\
    \ {\n    return sort_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 5, 2, 3, 4)) !== array(1, 2, 4, 3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-2, -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0, 2,\
    \ 3, 4)) !== array(0, 1, 2, 4, 3)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2,\
    \ 2, 4, 4, 3, 3, 5, 5, 5, 7, 77)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 6, 44, 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8,\
    \ 16, 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpqced_8n5.php:32\n\
    Stack trace:\n#0 /tmp/tmpqced_8n5.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpqced_8n5.php\
    \ on line 32\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// In this Kata, you have to sort an array of non-negative integers\
    \ according to\n// number of ones in their binary representation in ascending\
    \ order.\n// For similar number of ones, sort based on decimal value.\n// It must\
    \ be implemented like this:\n// >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4,\
    \ 5]\n// >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n// >>>\
    \ sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\nfunction sort_array($arr) {\n \
    \ $arr = array_map(function($v) {\n    return [$v, decbin($v)];\n  }, $arr);\n\
    \  usort($arr, function($a, $b) {\n    $a_ones = substr_count($a[1], '1');\n \
    \   $b_ones = substr_count($b[1], '1');\n    if ($a_ones == $b_ones) {\n     \
    \ return $a[0] - $b[0];\n    }\n    return $a_ones - $b_ones;\n  });\n  return\
    \ array_map(function($v) {\n    return $v[0];\n  }, $arr);\n}\n\nfunction candidate(...$args)\
    \ {\n    return sort_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 5, 2, 3, 4)) !== array(1, 2, 4, 3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-2, -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0, 2,\
    \ 3, 4)) !== array(0, 1, 2, 4, 3)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2,\
    \ 2, 4, 4, 3, 3, 5, 5, 5, 7, 77)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 6, 44, 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8,\
    \ 16, 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpz74vzq86.php:32\n\
    Stack trace:\n#0 /tmp/tmpz74vzq86.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpz74vzq86.php\
    \ on line 32\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// In this Kata, you have to sort an array of non-negative integers\
    \ according to\n// number of ones in their binary representation in ascending\
    \ order.\n// For similar number of ones, sort based on decimal value.\n// It must\
    \ be implemented like this:\n// >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4,\
    \ 5]\n// >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n// >>>\
    \ sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\nfunction sort_array($arr) {\n \
    \   $arr = array_map(function($n) {\n        return [$n, decbin($n)];\n    },\
    \ $arr);\n    usort($arr, function($a, $b) {\n        $a_ones = substr_count($a[1],\
    \ '1');\n        $b_ones = substr_count($b[1], '1');\n        if ($a_ones == $b_ones)\
    \ {\n            return $a[0] - $b[0];\n        }\n        return $a_ones - $b_ones;\n\
    \    });\n    return array_map(function($n) {\n        return $n[0];\n    }, $arr);\n\
    }\n\nfunction candidate(...$args) {\n    return sort_array(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 5, 2, 3, 4)) !== array(1, 2, 4, 3,\
    \ 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2,\
    \ -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 0, 2, 3, 4)) !== array(0, 1, 2, 4,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !==\
    \ array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 44,\
    \ 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 16,\
    \ 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpobvxckc3.php:32\n\
    Stack trace:\n#0 /tmp/tmpobvxckc3.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpobvxckc3.php\
    \ on line 32\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// In this Kata, you have to sort an array of non-negative integers\
    \ according to\n// number of ones in their binary representation in ascending\
    \ order.\n// For similar number of ones, sort based on decimal value.\n// It must\
    \ be implemented like this:\n// >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4,\
    \ 5]\n// >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n// >>>\
    \ sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\nfunction sort_array($arr) {\n \
    \ // Your code here\n  $arr = array_map(function($n) {\n    return [$n, decbin($n)];\n\
    \  }, $arr);\n  usort($arr, function($a, $b) {\n    $a1 = substr_count($a[1],\
    \ '1');\n    $b1 = substr_count($b[1], '1');\n    if ($a1 == $b1) {\n      return\
    \ $a[0] - $b[0];\n    }\n    return $a1 - $b1;\n  });\n  return array_map(function($n)\
    \ {\n    return $n[0];\n  }, $arr);\n}\n\nfunction candidate(...$args) {\n   \
    \ return sort_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 5, 2, 3, 4)) !== array(1, 2, 4, 3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-2, -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0, 2,\
    \ 3, 4)) !== array(0, 1, 2, 4, 3)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2,\
    \ 2, 4, 4, 3, 3, 5, 5, 5, 7, 77)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 6, 44, 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8,\
    \ 16, 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpq11yizwf.php:33\n\
    Stack trace:\n#0 /tmp/tmpq11yizwf.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpq11yizwf.php\
    \ on line 33\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// In this Kata, you have to sort an array of non-negative integers\
    \ according to\n// number of ones in their binary representation in ascending\
    \ order.\n// For similar number of ones, sort based on decimal value.\n// It must\
    \ be implemented like this:\n// >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4,\
    \ 5]\n// >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n// >>>\
    \ sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\nfunction sort_array($arr) {\n \
    \ $arr = array_map(function($v) {\n    return [$v, decbin($v)];\n  }, $arr);\n\
    \  usort($arr, function($a, $b) {\n    $a_ones = substr_count($a[1], '1');\n \
    \   $b_ones = substr_count($b[1], '1');\n    if ($a_ones == $b_ones) {\n     \
    \ return $a[0] - $b[0];\n    }\n    return $a_ones - $b_ones;\n  });\n  return\
    \ array_map(function($v) {\n    return $v[0];\n  }, $arr);\n}\n\nfunction candidate(...$args)\
    \ {\n    return sort_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 5, 2, 3, 4)) !== array(1, 2, 4, 3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-2, -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0, 2,\
    \ 3, 4)) !== array(0, 1, 2, 4, 3)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2,\
    \ 2, 4, 4, 3, 3, 5, 5, 5, 7, 77)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 6, 44, 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8,\
    \ 16, 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp8jrx3gn_.php:32\n\
    Stack trace:\n#0 /tmp/tmp8jrx3gn_.php(41): test()\n#1 {main}\n  thrown in /tmp/tmp8jrx3gn_.php\
    \ on line 32\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// In this Kata, you have to sort an array of non-negative integers\
    \ according to\n// number of ones in their binary representation in ascending\
    \ order.\n// For similar number of ones, sort based on decimal value.\n// It must\
    \ be implemented like this:\n// >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4,\
    \ 5]\n// >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n// >>>\
    \ sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\nfunction sort_array($arr) {\n \
    \   $arr = array_map(function($n) {\n        return [$n, decbin($n)];\n    },\
    \ $arr);\n    usort($arr, function($a, $b) {\n        $a_ones = substr_count($a[1],\
    \ '1');\n        $b_ones = substr_count($b[1], '1');\n        if ($a_ones == $b_ones)\
    \ {\n            return $a[0] - $b[0];\n        }\n        return $a_ones - $b_ones;\n\
    \    });\n    return array_map(function($n) {\n        return $n[0];\n    }, $arr);\n\
    }\n\nfunction candidate(...$args) {\n    return sort_array(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 5, 2, 3, 4)) !== array(1, 2, 4, 3,\
    \ 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2,\
    \ -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 0, 2, 3, 4)) !== array(0, 1, 2, 4,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !==\
    \ array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 44,\
    \ 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 16,\
    \ 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmph9ub5shp.php:32\n\
    Stack trace:\n#0 /tmp/tmph9ub5shp.php(41): test()\n#1 {main}\n  thrown in /tmp/tmph9ub5shp.php\
    \ on line 32\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// In this Kata, you have to sort an array of non-negative integers\
    \ according to\n// number of ones in their binary representation in ascending\
    \ order.\n// For similar number of ones, sort based on decimal value.\n// It must\
    \ be implemented like this:\n// >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4,\
    \ 5]\n// >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n// >>>\
    \ sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\nfunction sort_array($arr) {\n \
    \ $arr = array_map(function($n) {\n    return [$n, decbin($n)];\n  }, $arr);\n\
    \  usort($arr, function($a, $b) {\n    return substr_count($a[1], '1') - substr_count($b[1],\
    \ '1');\n  });\n  return array_map(function($n) {\n    return $n[0];\n  }, $arr);\n\
    }\n\nfunction candidate(...$args) {\n    return sort_array(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 5, 2, 3, 4)) !== array(1, 2, 4, 3,\
    \ 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2,\
    \ -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 0, 2, 3, 4)) !== array(0, 1, 2, 4,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !==\
    \ array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 44,\
    \ 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 16,\
    \ 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpx4c230yr.php:26\n\
    Stack trace:\n#0 /tmp/tmpx4c230yr.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpx4c230yr.php\
    \ on line 26\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// In this Kata, you have to sort an array of non-negative integers\
    \ according to\n// number of ones in their binary representation in ascending\
    \ order.\n// For similar number of ones, sort based on decimal value.\n// It must\
    \ be implemented like this:\n// >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4,\
    \ 5]\n// >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n// >>>\
    \ sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\nfunction sort_array($arr) {\n \
    \ // your code here\n}\nfunction candidate(...$args) {\n    return sort_array(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 5, 2, 3, 4)) !== array(1,\
    \ 2, 4, 3, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2,\
    \ -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 0, 2, 3, 4)) !== array(0, 1, 2, 4,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !==\
    \ array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 44,\
    \ 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 16,\
    \ 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpam28pu_w.php:17\n\
    Stack trace:\n#0 /tmp/tmpam28pu_w.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpam28pu_w.php\
    \ on line 17\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// In this Kata, you have to sort an array of non-negative integers\
    \ according to\n// number of ones in their binary representation in ascending\
    \ order.\n// For similar number of ones, sort based on decimal value.\n// It must\
    \ be implemented like this:\n// >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4,\
    \ 5]\n// >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n// >>>\
    \ sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\nfunction sort_array($arr) {\n \
    \   $arr = array_map(function($n) {\n        return [$n, decbin($n)];\n    },\
    \ $arr);\n    usort($arr, function($a, $b) {\n        $a_ones = substr_count($a[1],\
    \ '1');\n        $b_ones = substr_count($b[1], '1');\n        if ($a_ones == $b_ones)\
    \ {\n            return $a[0] - $b[0];\n        }\n        return $a_ones - $b_ones;\n\
    \    });\n    return array_map(function($n) {\n        return $n[0];\n    }, $arr);\n\
    }\n\nfunction candidate(...$args) {\n    return sort_array(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 5, 2, 3, 4)) !== array(1, 2, 4, 3,\
    \ 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2,\
    \ -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 0, 2, 3, 4)) !== array(0, 1, 2, 4,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !==\
    \ array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 44,\
    \ 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 16,\
    \ 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp7d5totcs.php:32\n\
    Stack trace:\n#0 /tmp/tmp7d5totcs.php(41): test()\n#1 {main}\n  thrown in /tmp/tmp7d5totcs.php\
    \ on line 32\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// In this Kata, you have to sort an array of non-negative integers\
    \ according to\n// number of ones in their binary representation in ascending\
    \ order.\n// For similar number of ones, sort based on decimal value.\n// It must\
    \ be implemented like this:\n// >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4,\
    \ 5]\n// >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n// >>>\
    \ sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\nfunction sort_array($arr) {\n \
    \   $arr = array_map(function($n) {\n        return [$n, decbin($n)];\n    },\
    \ $arr);\n    usort($arr, function($a, $b) {\n        $a_ones = substr_count($a[1],\
    \ '1');\n        $b_ones = substr_count($b[1], '1');\n        if ($a_ones == $b_ones)\
    \ {\n            return $a[0] - $b[0];\n        }\n        return $a_ones - $b_ones;\n\
    \    });\n    return array_map(function($n) {\n        return $n[0];\n    }, $arr);\n\
    }\n\nfunction candidate(...$args) {\n    return sort_array(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 5, 2, 3, 4)) !== array(1, 2, 4, 3,\
    \ 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2,\
    \ -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 0, 2, 3, 4)) !== array(0, 1, 2, 4,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !==\
    \ array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 44,\
    \ 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 16,\
    \ 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp05dia6tp.php:32\n\
    Stack trace:\n#0 /tmp/tmp05dia6tp.php(41): test()\n#1 {main}\n  thrown in /tmp/tmp05dia6tp.php\
    \ on line 32\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// In this Kata, you have to sort an array of non-negative integers\
    \ according to\n// number of ones in their binary representation in ascending\
    \ order.\n// For similar number of ones, sort based on decimal value.\n// It must\
    \ be implemented like this:\n// >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4,\
    \ 5]\n// >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n// >>>\
    \ sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\nfunction sort_array($arr) {\n \
    \ $arr = array_map(function($num) {\n    $binary = decbin($num);\n    $ones =\
    \ substr_count($binary, '1');\n    return [$ones, $num];\n  }, $arr);\n  usort($arr,\
    \ function($a, $b) {\n    if ($a[0] === $b[0]) {\n      return $a[1] - $b[1];\n\
    \    }\n    return $a[0] - $b[0];\n  });\n  return array_map(function($num) {\n\
    \    return $num[1];\n  }, $arr);\n}\n\necho sort_array([1, 5, 2, 3, 4]) . PHP_EOL;\n\
    echo sort_array([-2, -3, -4, -5, -6]) . PHP_EOL;\necho sort_array([1, 0, 2, 3,\
    \ 4]) . PHP_EOL;\nfunction candidate(...$args) {\n    return sort_array(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 5, 2, 3, 4)) !== array(1,\
    \ 2, 4, 3, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2,\
    \ -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 0, 2, 3, 4)) !== array(0, 1, 2, 4,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !==\
    \ array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 44,\
    \ 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 16,\
    \ 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "Array\nArray\nArray\n"
  stderr: "PHP Warning:  Array to string conversion in /tmp/tmpzs5hwiz4.php on line\
    \ 26\nPHP Warning:  Array to string conversion in /tmp/tmpzs5hwiz4.php on line\
    \ 27\nPHP Warning:  Array to string conversion in /tmp/tmpzs5hwiz4.php on line\
    \ 28\nPHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpzs5hwiz4.php:35\n\
    Stack trace:\n#0 /tmp/tmpzs5hwiz4.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpzs5hwiz4.php\
    \ on line 35\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// In this Kata, you have to sort an array of non-negative integers\
    \ according to\n// number of ones in their binary representation in ascending\
    \ order.\n// For similar number of ones, sort based on decimal value.\n// It must\
    \ be implemented like this:\n// >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4,\
    \ 5]\n// >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n// >>>\
    \ sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\nfunction sort_array($arr) {\n \
    \   $arr = array_map(function($x) {\n        return [$x, decbin($x)];\n    },\
    \ $arr);\n    usort($arr, function($a, $b) {\n        $a_ones = substr_count($a[1],\
    \ '1');\n        $b_ones = substr_count($b[1], '1');\n        if ($a_ones == $b_ones)\
    \ {\n            return $a[0] - $b[0];\n        }\n        return $a_ones - $b_ones;\n\
    \    });\n    return array_map(function($x) {\n        return $x[0];\n    }, $arr);\n\
    }\n\nfunction candidate(...$args) {\n    return sort_array(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 5, 2, 3, 4)) !== array(1, 2, 4, 3,\
    \ 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2,\
    \ -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 0, 2, 3, 4)) !== array(0, 1, 2, 4,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !==\
    \ array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 44,\
    \ 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 16,\
    \ 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp50y2w4ij.php:32\n\
    Stack trace:\n#0 /tmp/tmp50y2w4ij.php(41): test()\n#1 {main}\n  thrown in /tmp/tmp50y2w4ij.php\
    \ on line 32\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// In this Kata, you have to sort an array of non-negative integers\
    \ according to\n// number of ones in their binary representation in ascending\
    \ order.\n// For similar number of ones, sort based on decimal value.\n// It must\
    \ be implemented like this:\n// >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4,\
    \ 5]\n// >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n// >>>\
    \ sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\nfunction sort_array($arr) {\n \
    \ $arr = array_map(function($n) {\n    return [$n, decbin($n)];\n  }, $arr);\n\
    \  usort($arr, function($a, $b) {\n    $a = $a[1];\n    $b = $b[1];\n    $a =\
    \ str_split($a);\n    $b = str_split($b);\n    $a = array_count_values($a);\n\
    \    $b = array_count_values($b);\n    $a = $a['1'] ?? 0;\n    $b = $b['1'] ??\
    \ 0;\n    if ($a === $b) {\n      return $a[0] <=> $b[0];\n    }\n    return $a\
    \ <=> $b;\n  });\n  return array_map(function($n) {\n    return $n[0];\n  }, $arr);\n\
    }\n\nfunction candidate(...$args) {\n    return sort_array(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 5, 2, 3, 4)) !== array(1, 2, 4, 3,\
    \ 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2,\
    \ -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 0, 2, 3, 4)) !== array(0, 1, 2, 4,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !==\
    \ array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 44,\
    \ 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 16,\
    \ 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: ''
  stderr: "PHP Warning:  Trying to access array offset on value of type int in /tmp/tmpczrj8kpz.php\
    \ on line 23\nPHP Warning:  Trying to access array offset on value of type int\
    \ in /tmp/tmpczrj8kpz.php on line 23\nPHP Warning:  Trying to access array offset\
    \ on value of type int in /tmp/tmpczrj8kpz.php on line 23\nPHP Warning:  Trying\
    \ to access array offset on value of type int in /tmp/tmpczrj8kpz.php on line\
    \ 23\nPHP Warning:  Trying to access array offset on value of type int in /tmp/tmpczrj8kpz.php\
    \ on line 23\nPHP Warning:  Trying to access array offset on value of type int\
    \ in /tmp/tmpczrj8kpz.php on line 23\nPHP Fatal error:  Uncaught Exception: Test\
    \ failed! in /tmp/tmpczrj8kpz.php:37\nStack trace:\n#0 /tmp/tmpczrj8kpz.php(47):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpczrj8kpz.php on line 37\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// In this Kata, you have to sort an array of non-negative integers\
    \ according to\n// number of ones in their binary representation in ascending\
    \ order.\n// For similar number of ones, sort based on decimal value.\n// It must\
    \ be implemented like this:\n// >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4,\
    \ 5]\n// >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n// >>>\
    \ sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\nfunction sort_array($arr) {\n \
    \ $ones = [];\n  foreach ($arr as $key => $value) {\n    $ones[$key] = substr_count(decbin($value),\
    \ '1');\n  }\n  array_multisort($ones, SORT_ASC, $arr);\n  return $arr;\n}\n\n\
    function candidate(...$args) {\n    return sort_array(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 5, 2, 3, 4)) !== array(1, 2, 4, 3,\
    \ 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2,\
    \ -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 0, 2, 3, 4)) !== array(0, 1, 2, 4,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !==\
    \ array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 44,\
    \ 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 16,\
    \ 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpo_96c77u.php:24\n\
    Stack trace:\n#0 /tmp/tmpo_96c77u.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpo_96c77u.php\
    \ on line 24\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// In this Kata, you have to sort an array of non-negative integers\
    \ according to\n// number of ones in their binary representation in ascending\
    \ order.\n// For similar number of ones, sort based on decimal value.\n// It must\
    \ be implemented like this:\n// >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4,\
    \ 5]\n// >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n// >>>\
    \ sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\nfunction sort_array($arr) {\n \
    \ $arr = array_map(function($v) {\n    return [$v, decbin($v)];\n  }, $arr);\n\
    \  usort($arr, function($a, $b) {\n    $a1 = substr_count($a[1], '1');\n    $b1\
    \ = substr_count($b[1], '1');\n    if ($a1 == $b1) {\n      return $a[0] - $b[0];\n\
    \    }\n    return $a1 - $b1;\n  });\n  return array_map(function($v) {\n    return\
    \ $v[0];\n  }, $arr);\n}\n\nfunction candidate(...$args) {\n    return sort_array(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 5, 2, 3, 4)) !== array(1,\
    \ 2, 4, 3, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2,\
    \ -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 0, 2, 3, 4)) !== array(0, 1, 2, 4,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !==\
    \ array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 44,\
    \ 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 16,\
    \ 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp3z7xav6u.php:32\n\
    Stack trace:\n#0 /tmp/tmp3z7xav6u.php(41): test()\n#1 {main}\n  thrown in /tmp/tmp3z7xav6u.php\
    \ on line 32\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// In this Kata, you have to sort an array of non-negative integers\
    \ according to\n// number of ones in their binary representation in ascending\
    \ order.\n// For similar number of ones, sort based on decimal value.\n// It must\
    \ be implemented like this:\n// >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4,\
    \ 5]\n// >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n// >>>\
    \ sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\nfunction sort_array($arr) {\n \
    \ $arr = array_map(function($n) {\n    return [\n      'ones' => substr_count(decbin($n),\
    \ '1'),\n      'dec' => $n\n    ];\n  }, $arr);\n  usort($arr, function($a, $b)\
    \ {\n    if ($a['ones'] == $b['ones']) {\n      return $a['dec'] - $b['dec'];\n\
    \    }\n    return $a['ones'] - $b['ones'];\n  });\n  return array_map(function($n)\
    \ {\n    return $n['dec'];\n  }, $arr);\n}\n\nfunction candidate(...$args) {\n\
    \    return sort_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 5, 2, 3, 4)) !== array(1, 2, 4, 3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-2, -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0, 2,\
    \ 3, 4)) !== array(0, 1, 2, 4, 3)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2,\
    \ 2, 4, 4, 3, 3, 5, 5, 5, 7, 77)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 6, 44, 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8,\
    \ 16, 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpexxi6766.php:33\n\
    Stack trace:\n#0 /tmp/tmpexxi6766.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpexxi6766.php\
    \ on line 33\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// In this Kata, you have to sort an array of non-negative integers\
    \ according to\n// number of ones in their binary representation in ascending\
    \ order.\n// For similar number of ones, sort based on decimal value.\n// It must\
    \ be implemented like this:\n// >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4,\
    \ 5]\n// >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n// >>>\
    \ sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\nfunction sort_array($arr) {\n \
    \ $arr = array_map(function($n) {\n    $ones = substr_count(decbin($n), '1');\n\
    \    return [$n, $ones];\n  }, $arr);\n  usort($arr, function($a, $b) {\n    if\
    \ ($a[1] === $b[1]) {\n      return $a[0] - $b[0];\n    }\n    return $a[1] -\
    \ $b[1];\n  });\n  return array_map(function($n) {\n    return $n[0];\n  }, $arr);\n\
    }\n\nfunction candidate(...$args) {\n    return sort_array(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 5, 2, 3, 4)) !== array(1, 2, 4, 3,\
    \ 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2,\
    \ -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 0, 2, 3, 4)) !== array(0, 1, 2, 4,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !==\
    \ array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 44,\
    \ 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 16,\
    \ 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpymz7nhc2.php:31\n\
    Stack trace:\n#0 /tmp/tmpymz7nhc2.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpymz7nhc2.php\
    \ on line 31\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// In this Kata, you have to sort an array of non-negative integers\
    \ according to\n// number of ones in their binary representation in ascending\
    \ order.\n// For similar number of ones, sort based on decimal value.\n// It must\
    \ be implemented like this:\n// >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4,\
    \ 5]\n// >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n// >>>\
    \ sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\nfunction sort_array($arr) {\n \
    \ $arr = array_map(function($n) {\n    return [$n, decbin($n)];\n  }, $arr);\n\
    \  usort($arr, function($a, $b) {\n    $a_ones = substr_count($a[1], '1');\n \
    \   $b_ones = substr_count($b[1], '1');\n    if ($a_ones == $b_ones) {\n     \
    \ return $a[0] - $b[0];\n    }\n    return $a_ones - $b_ones;\n  });\n  return\
    \ array_map(function($a) {\n    return $a[0];\n  }, $arr);\n}\n\nfunction candidate(...$args)\
    \ {\n    return sort_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 5, 2, 3, 4)) !== array(1, 2, 4, 3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-2, -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0, 2,\
    \ 3, 4)) !== array(0, 1, 2, 4, 3)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2,\
    \ 2, 4, 4, 3, 3, 5, 5, 5, 7, 77)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 6, 44, 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8,\
    \ 16, 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpl_ag6wlr.php:32\n\
    Stack trace:\n#0 /tmp/tmpl_ag6wlr.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpl_ag6wlr.php\
    \ on line 32\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// In this Kata, you have to sort an array of non-negative integers\
    \ according to\n// number of ones in their binary representation in ascending\
    \ order.\n// For similar number of ones, sort based on decimal value.\n// It must\
    \ be implemented like this:\n// >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4,\
    \ 5]\n// >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n// >>>\
    \ sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\nfunction sort_array($arr) {\n \
    \ $arr = array_map(function($x) {\n    return [$x, decbin($x)];\n  }, $arr);\n\
    \  usort($arr, function($a, $b) {\n    $a_ones = substr_count($a[1], '1');\n \
    \   $b_ones = substr_count($b[1], '1');\n    if ($a_ones == $b_ones) {\n     \
    \ return $a[0] - $b[0];\n    }\n    return $a_ones - $b_ones;\n  });\n  return\
    \ array_map(function($x) {\n    return $x[0];\n  }, $arr);\n}\n\necho sort_array([1,\
    \ 5, 2, 3, 4]) . \"\\n\";\necho sort_array([-2, -3, -4, -5, -6]) . \"\\n\";\n\
    echo sort_array([1, 0, 2, 3, 4]) . \"\\n\";\nfunction candidate(...$args) {\n\
    \    return sort_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 5, 2, 3, 4)) !== array(1, 2, 4, 3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-2, -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0, 2,\
    \ 3, 4)) !== array(0, 1, 2, 4, 3)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2,\
    \ 2, 4, 4, 3, 3, 5, 5, 5, 7, 77)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 6, 44, 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8,\
    \ 16, 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "Array\nArray\nArray\n"
  stderr: "PHP Warning:  Array to string conversion in /tmp/tmpiyuypc68.php on line\
    \ 26\nPHP Warning:  Array to string conversion in /tmp/tmpiyuypc68.php on line\
    \ 27\nPHP Warning:  Array to string conversion in /tmp/tmpiyuypc68.php on line\
    \ 28\nPHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpiyuypc68.php:35\n\
    Stack trace:\n#0 /tmp/tmpiyuypc68.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpiyuypc68.php\
    \ on line 35\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// In this Kata, you have to sort an array of non-negative integers\
    \ according to\n// number of ones in their binary representation in ascending\
    \ order.\n// For similar number of ones, sort based on decimal value.\n// It must\
    \ be implemented like this:\n// >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4,\
    \ 5]\n// >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n// >>>\
    \ sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\nfunction sort_array($arr) {\n \
    \ $arr = array_map(function($n) {\n    return [$n, decbin($n)];\n  }, $arr);\n\
    \  usort($arr, function($a, $b) {\n    $a_ones = substr_count($a[1], '1');\n \
    \   $b_ones = substr_count($b[1], '1');\n    if ($a_ones == $b_ones) {\n     \
    \ return $a[0] - $b[0];\n    }\n    return $a_ones - $b_ones;\n  });\n  return\
    \ array_map(function($n) {\n    return $n[0];\n  }, $arr);\n}\n\nfunction candidate(...$args)\
    \ {\n    return sort_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 5, 2, 3, 4)) !== array(1, 2, 4, 3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-2, -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0, 2,\
    \ 3, 4)) !== array(0, 1, 2, 4, 3)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2,\
    \ 2, 4, 4, 3, 3, 5, 5, 5, 7, 77)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 6, 44, 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8,\
    \ 16, 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp4rps_5bz.php:32\n\
    Stack trace:\n#0 /tmp/tmp4rps_5bz.php(41): test()\n#1 {main}\n  thrown in /tmp/tmp4rps_5bz.php\
    \ on line 32\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// In this Kata, you have to sort an array of non-negative integers\
    \ according to\n// number of ones in their binary representation in ascending\
    \ order.\n// For similar number of ones, sort based on decimal value.\n// It must\
    \ be implemented like this:\n// >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4,\
    \ 5]\n// >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n// >>>\
    \ sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\nfunction sort_array($arr) {\n \
    \ $arr = array_map(function($a) {\n    return [$a, decbin($a)];\n  }, $arr);\n\
    \  usort($arr, function($a, $b) {\n    $a_ones = substr_count($a[1], '1');\n \
    \   $b_ones = substr_count($b[1], '1');\n    if ($a_ones === $b_ones) {\n    \
    \  return $a[0] - $b[0];\n    }\n    return $a_ones - $b_ones;\n  });\n  return\
    \ array_map(function($a) {\n    return $a[0];\n  }, $arr);\n}\n\nfunction candidate(...$args)\
    \ {\n    return sort_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 5, 2, 3, 4)) !== array(1, 2, 4, 3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-2, -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0, 2,\
    \ 3, 4)) !== array(0, 1, 2, 4, 3)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2,\
    \ 2, 4, 4, 3, 3, 5, 5, 5, 7, 77)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 6, 44, 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8,\
    \ 16, 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp3qdwzm6x.php:32\n\
    Stack trace:\n#0 /tmp/tmp3qdwzm6x.php(41): test()\n#1 {main}\n  thrown in /tmp/tmp3qdwzm6x.php\
    \ on line 32\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// In this Kata, you have to sort an array of non-negative integers\
    \ according to\n// number of ones in their binary representation in ascending\
    \ order.\n// For similar number of ones, sort based on decimal value.\n// It must\
    \ be implemented like this:\n// >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4,\
    \ 5]\n// >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n// >>>\
    \ sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\nfunction sort_array($arr) {\n \
    \ $arr = array_map(function($num) {\n    return [$num, decbin($num)];\n  }, $arr);\n\
    \  usort($arr, function($a, $b) {\n    $a1 = substr_count($a[1], '1');\n    $b1\
    \ = substr_count($b[1], '1');\n    if ($a1 === $b1) {\n      return $a[0] - $b[0];\n\
    \    }\n    return $a1 - $b1;\n  });\n  return array_map(function($num) {\n  \
    \  return $num[0];\n  }, $arr);\n}\n\nfunction candidate(...$args) {\n    return\
    \ sort_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 5, 2, 3, 4)) !== array(1, 2, 4, 3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-2, -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0, 2,\
    \ 3, 4)) !== array(0, 1, 2, 4, 3)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2,\
    \ 2, 4, 4, 3, 3, 5, 5, 5, 7, 77)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 6, 44, 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8,\
    \ 16, 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpbedpdfmh.php:32\n\
    Stack trace:\n#0 /tmp/tmpbedpdfmh.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpbedpdfmh.php\
    \ on line 32\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// In this Kata, you have to sort an array of non-negative integers\
    \ according to\n// number of ones in their binary representation in ascending\
    \ order.\n// For similar number of ones, sort based on decimal value.\n// It must\
    \ be implemented like this:\n// >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4,\
    \ 5]\n// >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n// >>>\
    \ sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\nfunction sort_array($arr) {\n \
    \ $arr = array_map(function($x) {\n    return [$x, decbin($x)];\n  }, $arr);\n\
    \  usort($arr, function($a, $b) {\n    $a_ones = substr_count($a[1], '1');\n \
    \   $b_ones = substr_count($b[1], '1');\n    if ($a_ones === $b_ones) {\n    \
    \  return $a[0] - $b[0];\n    }\n    return $a_ones - $b_ones;\n  });\n  return\
    \ array_map(function($x) {\n    return $x[0];\n  }, $arr);\n}\n\nfunction candidate(...$args)\
    \ {\n    return sort_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 5, 2, 3, 4)) !== array(1, 2, 4, 3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-2, -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0, 2,\
    \ 3, 4)) !== array(0, 1, 2, 4, 3)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2,\
    \ 2, 4, 4, 3, 3, 5, 5, 5, 7, 77)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 6, 44, 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8,\
    \ 16, 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp1ua3c78e.php:32\n\
    Stack trace:\n#0 /tmp/tmp1ua3c78e.php(41): test()\n#1 {main}\n  thrown in /tmp/tmp1ua3c78e.php\
    \ on line 32\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// In this Kata, you have to sort an array of non-negative integers\
    \ according to\n// number of ones in their binary representation in ascending\
    \ order.\n// For similar number of ones, sort based on decimal value.\n// It must\
    \ be implemented like this:\n// >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4,\
    \ 5]\n// >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n// >>>\
    \ sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\nfunction sort_array($arr) {\n \
    \ $arr = array_map(function($v) {\n    return [\n      'dec' => $v,\n      'bin'\
    \ => decbin($v)\n    ];\n  }, $arr);\n  usort($arr, function($a, $b) {\n    $a\
    \ = $a['bin'];\n    $b = $b['bin'];\n    $a = str_replace('0', '', $a);\n    $b\
    \ = str_replace('0', '', $b);\n    if (strlen($a) == strlen($b)) {\n      return\
    \ $a['dec'] - $b['dec'];\n    }\n    return strlen($a) - strlen($b);\n  });\n\
    \  return array_map(function($v) {\n    return $v['dec'];\n  }, $arr);\n}\n\n\
    function candidate(...$args) {\n    return sort_array(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 5, 2, 3, 4)) !== array(1, 2, 4, 3,\
    \ 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2,\
    \ -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 0, 2, 3, 4)) !== array(0, 1, 2, 4,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !==\
    \ array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 44,\
    \ 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 16,\
    \ 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught TypeError: Cannot access offset of type string\
    \ on string in /tmp/tmpzzt9luzv.php:22\nStack trace:\n#0 [internal function]:\
    \ {closure}()\n#1 /tmp/tmpzzt9luzv.php(25): usort()\n#2 /tmp/tmpzzt9luzv.php(32):\
    \ sort_array()\n#3 /tmp/tmpzzt9luzv.php(36): candidate()\n#4 /tmp/tmpzzt9luzv.php(46):\
    \ test()\n#5 {main}\n  thrown in /tmp/tmpzzt9luzv.php on line 22\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// In this Kata, you have to sort an array of non-negative integers\
    \ according to\n// number of ones in their binary representation in ascending\
    \ order.\n// For similar number of ones, sort based on decimal value.\n// It must\
    \ be implemented like this:\n// >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4,\
    \ 5]\n// >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n// >>>\
    \ sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\nfunction sort_array($arr) {\n \
    \ $arr = array_map(function($n) {\n    return [$n, decbin($n)];\n  }, $arr);\n\
    \  usort($arr, function($a, $b) {\n    $a = $a[1];\n    $b = $b[1];\n    $a =\
    \ str_split($a);\n    $b = str_split($b);\n    $a = array_sum($a);\n    $b = array_sum($b);\n\
    \    if ($a === $b) {\n      return $a[0] - $b[0];\n    }\n    return $a - $b;\n\
    \  });\n  return array_map(function($n) {\n    return $n[0];\n  }, $arr);\n}\n\
    \nfunction candidate(...$args) {\n    return sort_array(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 5, 2, 3, 4)) !== array(1, 2, 4, 3,\
    \ 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2,\
    \ -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 0, 2, 3, 4)) !== array(0, 1, 2, 4,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !==\
    \ array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 44,\
    \ 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 16,\
    \ 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: ''
  stderr: "PHP Warning:  Trying to access array offset on value of type int in /tmp/tmpe55h7jiu.php\
    \ on line 21\nPHP Warning:  Trying to access array offset on value of type int\
    \ in /tmp/tmpe55h7jiu.php on line 21\nPHP Warning:  Trying to access array offset\
    \ on value of type int in /tmp/tmpe55h7jiu.php on line 21\nPHP Warning:  Trying\
    \ to access array offset on value of type int in /tmp/tmpe55h7jiu.php on line\
    \ 21\nPHP Warning:  Trying to access array offset on value of type int in /tmp/tmpe55h7jiu.php\
    \ on line 21\nPHP Warning:  Trying to access array offset on value of type int\
    \ in /tmp/tmpe55h7jiu.php on line 21\nPHP Fatal error:  Uncaught Exception: Test\
    \ failed! in /tmp/tmpe55h7jiu.php:35\nStack trace:\n#0 /tmp/tmpe55h7jiu.php(45):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpe55h7jiu.php on line 35\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// In this Kata, you have to sort an array of non-negative integers\
    \ according to\n// number of ones in their binary representation in ascending\
    \ order.\n// For similar number of ones, sort based on decimal value.\n// It must\
    \ be implemented like this:\n// >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4,\
    \ 5]\n// >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n// >>>\
    \ sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\nfunction sort_array($arr) {\n \
    \ $arr = array_map(function($n) {\n    return [$n, decbin($n)];\n  }, $arr);\n\
    \  usort($arr, function($a, $b) {\n    $a = $a[1];\n    $b = $b[1];\n    $a =\
    \ str_split($a);\n    $b = str_split($b);\n    $a = array_sum($a);\n    $b = array_sum($b);\n\
    \    if ($a == $b) {\n      return $a[0] - $b[0];\n    }\n    return $a - $b;\n\
    \  });\n  $arr = array_map(function($n) {\n    return $n[0];\n  }, $arr);\n  return\
    \ $arr;\n}\n\nfunction candidate(...$args) {\n    return sort_array(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 5, 2, 3, 4)) !== array(1,\
    \ 2, 4, 3, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2,\
    \ -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 0, 2, 3, 4)) !== array(0, 1, 2, 4,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !==\
    \ array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 44,\
    \ 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 16,\
    \ 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: ''
  stderr: "PHP Warning:  Trying to access array offset on value of type int in /tmp/tmpojrgpy8v.php\
    \ on line 21\nPHP Warning:  Trying to access array offset on value of type int\
    \ in /tmp/tmpojrgpy8v.php on line 21\nPHP Warning:  Trying to access array offset\
    \ on value of type int in /tmp/tmpojrgpy8v.php on line 21\nPHP Warning:  Trying\
    \ to access array offset on value of type int in /tmp/tmpojrgpy8v.php on line\
    \ 21\nPHP Warning:  Trying to access array offset on value of type int in /tmp/tmpojrgpy8v.php\
    \ on line 21\nPHP Warning:  Trying to access array offset on value of type int\
    \ in /tmp/tmpojrgpy8v.php on line 21\nPHP Fatal error:  Uncaught Exception: Test\
    \ failed! in /tmp/tmpojrgpy8v.php:36\nStack trace:\n#0 /tmp/tmpojrgpy8v.php(46):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpojrgpy8v.php on line 36\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// In this Kata, you have to sort an array of non-negative integers\
    \ according to\n// number of ones in their binary representation in ascending\
    \ order.\n// For similar number of ones, sort based on decimal value.\n// It must\
    \ be implemented like this:\n// >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4,\
    \ 5]\n// >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n// >>>\
    \ sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\nfunction sort_array($arr) {\n \
    \   $arr = array_map(function($x) {\n        return [$x, decbin($x)];\n    },\
    \ $arr);\n    usort($arr, function($a, $b) {\n        $a_ones = substr_count($a[1],\
    \ '1');\n        $b_ones = substr_count($b[1], '1');\n        if ($a_ones == $b_ones)\
    \ {\n            return $a[0] - $b[0];\n        }\n        return $a_ones - $b_ones;\n\
    \    });\n    return array_map(function($x) {\n        return $x[0];\n    }, $arr);\n\
    }\n\nfunction candidate(...$args) {\n    return sort_array(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 5, 2, 3, 4)) !== array(1, 2, 4, 3,\
    \ 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2,\
    \ -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 0, 2, 3, 4)) !== array(0, 1, 2, 4,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !==\
    \ array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 44,\
    \ 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 16,\
    \ 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpthhlt55f.php:32\n\
    Stack trace:\n#0 /tmp/tmpthhlt55f.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpthhlt55f.php\
    \ on line 32\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// In this Kata, you have to sort an array of non-negative integers\
    \ according to\n// number of ones in their binary representation in ascending\
    \ order.\n// For similar number of ones, sort based on decimal value.\n// It must\
    \ be implemented like this:\n// >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4,\
    \ 5]\n// >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n// >>>\
    \ sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\nfunction sort_array($arr) {\n \
    \ $arr = array_map(function($n) {\n    return [$n, decbin($n)];\n  }, $arr);\n\
    \  usort($arr, function($a, $b) {\n    $a_ones = substr_count($a[1], '1');\n \
    \   $b_ones = substr_count($b[1], '1');\n    if ($a_ones == $b_ones) {\n     \
    \ return $a[0] - $b[0];\n    }\n    return $a_ones - $b_ones;\n  });\n  return\
    \ array_map(function($n) {\n    return $n[0];\n  }, $arr);\n}\n\nfunction candidate(...$args)\
    \ {\n    return sort_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 5, 2, 3, 4)) !== array(1, 2, 4, 3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-2, -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0, 2,\
    \ 3, 4)) !== array(0, 1, 2, 4, 3)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2,\
    \ 2, 4, 4, 3, 3, 5, 5, 5, 7, 77)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 6, 44, 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8,\
    \ 16, 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp3ueu7vws.php:32\n\
    Stack trace:\n#0 /tmp/tmp3ueu7vws.php(41): test()\n#1 {main}\n  thrown in /tmp/tmp3ueu7vws.php\
    \ on line 32\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// In this Kata, you have to sort an array of non-negative integers\
    \ according to\n// number of ones in their binary representation in ascending\
    \ order.\n// For similar number of ones, sort based on decimal value.\n// It must\
    \ be implemented like this:\n// >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4,\
    \ 5]\n// >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n// >>>\
    \ sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\nfunction sort_array($arr) {\n \
    \ $arr = array_map(function($num) {\n    return [$num, decbin($num)];\n  }, $arr);\n\
    \  usort($arr, function($a, $b) {\n    $a_ones = substr_count($a[1], '1');\n \
    \   $b_ones = substr_count($b[1], '1');\n    if ($a_ones === $b_ones) {\n    \
    \  return $a[0] - $b[0];\n    }\n    return $a_ones - $b_ones;\n  });\n  return\
    \ array_map(function($num) {\n    return $num[0];\n  }, $arr);\n}\n\nfunction\
    \ candidate(...$args) {\n    return sort_array(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, 5, 2, 3, 4)) !== array(1, 2, 4, 3, 5)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2, -3, -4,\
    \ -5, -6)) !== array(-4, -2, -6, -5, -3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 0, 2, 3, 4)) !== array(0, 1, 2, 4, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 5, 77,\
    \ 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 44, 12, 32,\
    \ 5)) !== array(32, 3, 5, 6, 12, 44)) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 16, 32))\
    \ !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpyck5c5ws.php:32\n\
    Stack trace:\n#0 /tmp/tmpyck5c5ws.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpyck5c5ws.php\
    \ on line 32\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// In this Kata, you have to sort an array of non-negative integers\
    \ according to\n// number of ones in their binary representation in ascending\
    \ order.\n// For similar number of ones, sort based on decimal value.\n// It must\
    \ be implemented like this:\n// >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4,\
    \ 5]\n// >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n// >>>\
    \ sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\nfunction sort_array($arr) {\n \
    \ $arr = array_map(function($n) {\n    return [$n, decbin($n)];\n  }, $arr);\n\
    \  usort($arr, function($a, $b) {\n    $a_ones = substr_count($a[1], '1');\n \
    \   $b_ones = substr_count($b[1], '1');\n    if ($a_ones == $b_ones) {\n     \
    \ return $a[0] - $b[0];\n    }\n    return $a_ones - $b_ones;\n  });\n  return\
    \ array_map(function($n) {\n    return $n[0];\n  }, $arr);\n}\n\nfunction candidate(...$args)\
    \ {\n    return sort_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 5, 2, 3, 4)) !== array(1, 2, 4, 3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-2, -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0, 2,\
    \ 3, 4)) !== array(0, 1, 2, 4, 3)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2,\
    \ 2, 4, 4, 3, 3, 5, 5, 5, 7, 77)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 6, 44, 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8,\
    \ 16, 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpbgeljbgo.php:32\n\
    Stack trace:\n#0 /tmp/tmpbgeljbgo.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpbgeljbgo.php\
    \ on line 32\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// In this Kata, you have to sort an array of non-negative integers\
    \ according to\n// number of ones in their binary representation in ascending\
    \ order.\n// For similar number of ones, sort based on decimal value.\n// It must\
    \ be implemented like this:\n// >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4,\
    \ 5]\n// >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n// >>>\
    \ sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\nfunction sort_array($arr) {\n \
    \ $ones = [];\n  foreach ($arr as $key => $value) {\n    $ones[$key] = substr_count(decbin($value),\
    \ '1');\n  }\n  array_multisort($ones, SORT_ASC, $arr);\n  return $arr;\n}\n\n\
    function candidate(...$args) {\n    return sort_array(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 5, 2, 3, 4)) !== array(1, 2, 4, 3,\
    \ 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2,\
    \ -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 0, 2, 3, 4)) !== array(0, 1, 2, 4,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !==\
    \ array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 44,\
    \ 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 16,\
    \ 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpy7r65pke.php:24\n\
    Stack trace:\n#0 /tmp/tmpy7r65pke.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpy7r65pke.php\
    \ on line 24\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// In this Kata, you have to sort an array of non-negative integers\
    \ according to\n// number of ones in their binary representation in ascending\
    \ order.\n// For similar number of ones, sort based on decimal value.\n// It must\
    \ be implemented like this:\n// >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4,\
    \ 5]\n// >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n// >>>\
    \ sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\nfunction sort_array($arr) {\n \
    \ $arr = array_map(function($num) {\n    return [$num, decbin($num)];\n  }, $arr);\n\
    \  usort($arr, function($a, $b) {\n    $aOnes = substr_count($a[1], '1');\n  \
    \  $bOnes = substr_count($b[1], '1');\n    if ($aOnes === $bOnes) {\n      return\
    \ $a[0] - $b[0];\n    }\n    return $aOnes - $bOnes;\n  });\n  return array_map(function($num)\
    \ {\n    return $num[0];\n  }, $arr);\n}\n\nfunction candidate(...$args) {\n \
    \   return sort_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 5, 2, 3, 4)) !== array(1, 2, 4, 3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-2, -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0, 2,\
    \ 3, 4)) !== array(0, 1, 2, 4, 3)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2,\
    \ 2, 4, 4, 3, 3, 5, 5, 5, 7, 77)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 6, 44, 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8,\
    \ 16, 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpibm52hzn.php:32\n\
    Stack trace:\n#0 /tmp/tmpibm52hzn.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpibm52hzn.php\
    \ on line 32\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// In this Kata, you have to sort an array of non-negative integers\
    \ according to\n// number of ones in their binary representation in ascending\
    \ order.\n// For similar number of ones, sort based on decimal value.\n// It must\
    \ be implemented like this:\n// >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4,\
    \ 5]\n// >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n// >>>\
    \ sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\nfunction sort_array($arr) {\n \
    \   $arr = array_map(function($num) {\n        return [$num, decbin($num)];\n\
    \    }, $arr);\n    usort($arr, function($a, $b) {\n        $a_ones = substr_count($a[1],\
    \ '1');\n        $b_ones = substr_count($b[1], '1');\n        if ($a_ones == $b_ones)\
    \ {\n            return $a[0] - $b[0];\n        }\n        return $a_ones - $b_ones;\n\
    \    });\n    return array_map(function($num) {\n        return $num[0];\n   \
    \ }, $arr);\n}\n\nfunction candidate(...$args) {\n    return sort_array(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 5, 2, 3, 4)) !== array(1,\
    \ 2, 4, 3, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2,\
    \ -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 0, 2, 3, 4)) !== array(0, 1, 2, 4,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !==\
    \ array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 44,\
    \ 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 16,\
    \ 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpaxocmcp9.php:32\n\
    Stack trace:\n#0 /tmp/tmpaxocmcp9.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpaxocmcp9.php\
    \ on line 32\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// In this Kata, you have to sort an array of non-negative integers\
    \ according to\n// number of ones in their binary representation in ascending\
    \ order.\n// For similar number of ones, sort based on decimal value.\n// It must\
    \ be implemented like this:\n// >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4,\
    \ 5]\n// >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n// >>>\
    \ sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\nfunction sort_array($arr) {\n \
    \ $arr = array_map(function($num) {\n    return [$num, decbin($num)];\n  }, $arr);\n\
    \  usort($arr, function($a, $b) {\n    $a_ones = substr_count($a[1], '1');\n \
    \   $b_ones = substr_count($b[1], '1');\n    if ($a_ones == $b_ones) {\n     \
    \ return $a[0] - $b[0];\n    }\n    return $a_ones - $b_ones;\n  });\n  return\
    \ array_map(function($num) {\n    return $num[0];\n  }, $arr);\n}\n\nfunction\
    \ candidate(...$args) {\n    return sort_array(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, 5, 2, 3, 4)) !== array(1, 2, 4, 3, 5)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2, -3, -4,\
    \ -5, -6)) !== array(-4, -2, -6, -5, -3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 0, 2, 3, 4)) !== array(0, 1, 2, 4, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 5, 77,\
    \ 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 44, 12, 32,\
    \ 5)) !== array(32, 3, 5, 6, 12, 44)) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 16, 32))\
    \ !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp8ya27l4e.php:32\n\
    Stack trace:\n#0 /tmp/tmp8ya27l4e.php(41): test()\n#1 {main}\n  thrown in /tmp/tmp8ya27l4e.php\
    \ on line 32\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// In this Kata, you have to sort an array of non-negative integers\
    \ according to\n// number of ones in their binary representation in ascending\
    \ order.\n// For similar number of ones, sort based on decimal value.\n// It must\
    \ be implemented like this:\n// >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4,\
    \ 5]\n// >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n// >>>\
    \ sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\nfunction sort_array($arr) {\n \
    \ $arr = array_map(function($n) {\n    return [$n, decbin($n)];\n  }, $arr);\n\
    \  usort($arr, function($a, $b) {\n    $a_ones = substr_count($a[1], '1');\n \
    \   $b_ones = substr_count($b[1], '1');\n    if ($a_ones === $b_ones) {\n    \
    \  return $a[0] - $b[0];\n    }\n    return $a_ones - $b_ones;\n  });\n  return\
    \ array_map(function($n) {\n    return $n[0];\n  }, $arr);\n}\n\nfunction candidate(...$args)\
    \ {\n    return sort_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 5, 2, 3, 4)) !== array(1, 2, 4, 3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-2, -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0, 2,\
    \ 3, 4)) !== array(0, 1, 2, 4, 3)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2,\
    \ 2, 4, 4, 3, 3, 5, 5, 5, 7, 77)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 6, 44, 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8,\
    \ 16, 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpy5q2mbhq.php:32\n\
    Stack trace:\n#0 /tmp/tmpy5q2mbhq.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpy5q2mbhq.php\
    \ on line 32\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// In this Kata, you have to sort an array of non-negative integers\
    \ according to\n// number of ones in their binary representation in ascending\
    \ order.\n// For similar number of ones, sort based on decimal value.\n// It must\
    \ be implemented like this:\n// >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4,\
    \ 5]\n// >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n// >>>\
    \ sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\nfunction sort_array($arr) {\n \
    \ $ones = [];\n  $zeros = [];\n  foreach ($arr as $num) {\n    if ($num < 0) {\n\
    \      $zeros[] = $num;\n    } else {\n      $ones[] = $num;\n    }\n  }\n  usort($ones,\
    \ function($a, $b) {\n    $a = decbin($a);\n    $b = decbin($b);\n    $a = substr_count($a,\
    \ '1');\n    $b = substr_count($b, '1');\n    if ($a == $b) {\n      return $a\
    \ < $b ? -1 : 1;\n    }\n    return $a < $b ? -1 : 1;\n  });\n  sort($zeros);\n\
    \  return array_merge($ones, $zeros);\n}\n\nfunction candidate(...$args) {\n \
    \   return sort_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 5, 2, 3, 4)) !== array(1, 2, 4, 3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-2, -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0, 2,\
    \ 3, 4)) !== array(0, 1, 2, 4, 3)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2,\
    \ 2, 4, 4, 3, 3, 5, 5, 5, 7, 77)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 6, 44, 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8,\
    \ 16, 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp47b_qbep.php:38\n\
    Stack trace:\n#0 /tmp/tmp47b_qbep.php(48): test()\n#1 {main}\n  thrown in /tmp/tmp47b_qbep.php\
    \ on line 38\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// In this Kata, you have to sort an array of non-negative integers\
    \ according to\n// number of ones in their binary representation in ascending\
    \ order.\n// For similar number of ones, sort based on decimal value.\n// It must\
    \ be implemented like this:\n// >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4,\
    \ 5]\n// >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n// >>>\
    \ sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\nfunction sort_array($arr) {\n \
    \ $arr = array_map(function($n) {\n    return [$n, decbin($n)];\n  }, $arr);\n\
    \  usort($arr, function($a, $b) {\n    $a_ones = substr_count($a[1], '1');\n \
    \   $b_ones = substr_count($b[1], '1');\n    if ($a_ones == $b_ones) {\n     \
    \ return $a[0] - $b[0];\n    }\n    return $a_ones - $b_ones;\n  });\n  return\
    \ array_map(function($n) {\n    return $n[0];\n  }, $arr);\n}\n\nfunction candidate(...$args)\
    \ {\n    return sort_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 5, 2, 3, 4)) !== array(1, 2, 4, 3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-2, -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0, 2,\
    \ 3, 4)) !== array(0, 1, 2, 4, 3)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2,\
    \ 2, 4, 4, 3, 3, 5, 5, 5, 7, 77)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 6, 44, 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8,\
    \ 16, 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpxfl84ahx.php:32\n\
    Stack trace:\n#0 /tmp/tmpxfl84ahx.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpxfl84ahx.php\
    \ on line 32\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// In this Kata, you have to sort an array of non-negative integers\
    \ according to\n// number of ones in their binary representation in ascending\
    \ order.\n// For similar number of ones, sort based on decimal value.\n// It must\
    \ be implemented like this:\n// >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4,\
    \ 5]\n// >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n// >>>\
    \ sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\nfunction sort_array($arr) {\n \
    \ $arr = array_map(function($n) {\n    return [$n, decbin($n)];\n  }, $arr);\n\
    \  usort($arr, function($a, $b) {\n    $a1 = substr_count($a[1], '1');\n    $b1\
    \ = substr_count($b[1], '1');\n    if ($a1 == $b1) {\n      return $a[0] - $b[0];\n\
    \    }\n    return $a1 - $b1;\n  });\n  return array_map(function($n) {\n    return\
    \ $n[0];\n  }, $arr);\n}\n\nfunction candidate(...$args) {\n    return sort_array(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 5, 2, 3, 4)) !== array(1,\
    \ 2, 4, 3, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2,\
    \ -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 0, 2, 3, 4)) !== array(0, 1, 2, 4,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !==\
    \ array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 44,\
    \ 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 16,\
    \ 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp30337fv8.php:32\n\
    Stack trace:\n#0 /tmp/tmp30337fv8.php(41): test()\n#1 {main}\n  thrown in /tmp/tmp30337fv8.php\
    \ on line 32\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// In this Kata, you have to sort an array of non-negative integers\
    \ according to\n// number of ones in their binary representation in ascending\
    \ order.\n// For similar number of ones, sort based on decimal value.\n// It must\
    \ be implemented like this:\n// >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4,\
    \ 5]\n// >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n// >>>\
    \ sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\nfunction sort_array($arr) {\n \
    \ $arr = array_map(function($n) {\n    return [$n, decbin($n)];\n  }, $arr);\n\
    \  usort($arr, function($a, $b) {\n    $a_ones = substr_count($a[1], '1');\n \
    \   $b_ones = substr_count($b[1], '1');\n    if ($a_ones === $b_ones) {\n    \
    \  return $a[0] - $b[0];\n    }\n    return $a_ones - $b_ones;\n  });\n  return\
    \ array_map(function($n) {\n    return $n[0];\n  }, $arr);\n}\n\necho sort_array([1,\
    \ 5, 2, 3, 4]) . \"\\n\";\necho sort_array([-2, -3, -4, -5, -6]) . \"\\n\";\n\
    echo sort_array([1, 0, 2, 3, 4]) . \"\\n\";\nfunction candidate(...$args) {\n\
    \    return sort_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 5, 2, 3, 4)) !== array(1, 2, 4, 3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-2, -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0, 2,\
    \ 3, 4)) !== array(0, 1, 2, 4, 3)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2,\
    \ 2, 4, 4, 3, 3, 5, 5, 5, 7, 77)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 6, 44, 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8,\
    \ 16, 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "Array\nArray\nArray\n"
  stderr: "PHP Warning:  Array to string conversion in /tmp/tmpinowgawi.php on line\
    \ 26\nPHP Warning:  Array to string conversion in /tmp/tmpinowgawi.php on line\
    \ 27\nPHP Warning:  Array to string conversion in /tmp/tmpinowgawi.php on line\
    \ 28\nPHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpinowgawi.php:35\n\
    Stack trace:\n#0 /tmp/tmpinowgawi.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpinowgawi.php\
    \ on line 35\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// In this Kata, you have to sort an array of non-negative integers\
    \ according to\n// number of ones in their binary representation in ascending\
    \ order.\n// For similar number of ones, sort based on decimal value.\n// It must\
    \ be implemented like this:\n// >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4,\
    \ 5]\n// >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n// >>>\
    \ sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\nfunction sort_array($arr) {\n \
    \   $arr = array_map(function($n) {\n        return [$n, decbin($n)];\n    },\
    \ $arr);\n    usort($arr, function($a, $b) {\n        $a = $a[1];\n        $b\
    \ = $b[1];\n        $a = str_split($a);\n        $b = str_split($b);\n       \
    \ $a = array_sum($a);\n        $b = array_sum($b);\n        if ($a == $b) {\n\
    \            return $a[0] - $b[0];\n        }\n        return $a - $b;\n    });\n\
    \    $arr = array_map(function($n) {\n        return $n[0];\n    }, $arr);\n \
    \   return $arr;\n}\n\nfunction candidate(...$args) {\n    return sort_array(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 5, 2, 3, 4)) !== array(1,\
    \ 2, 4, 3, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2,\
    \ -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 0, 2, 3, 4)) !== array(0, 1, 2, 4,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !==\
    \ array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 44,\
    \ 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 16,\
    \ 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: ''
  stderr: "PHP Warning:  Trying to access array offset on value of type int in /tmp/tmpj0n2uesi.php\
    \ on line 21\nPHP Warning:  Trying to access array offset on value of type int\
    \ in /tmp/tmpj0n2uesi.php on line 21\nPHP Warning:  Trying to access array offset\
    \ on value of type int in /tmp/tmpj0n2uesi.php on line 21\nPHP Warning:  Trying\
    \ to access array offset on value of type int in /tmp/tmpj0n2uesi.php on line\
    \ 21\nPHP Warning:  Trying to access array offset on value of type int in /tmp/tmpj0n2uesi.php\
    \ on line 21\nPHP Warning:  Trying to access array offset on value of type int\
    \ in /tmp/tmpj0n2uesi.php on line 21\nPHP Fatal error:  Uncaught Exception: Test\
    \ failed! in /tmp/tmpj0n2uesi.php:36\nStack trace:\n#0 /tmp/tmpj0n2uesi.php(46):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpj0n2uesi.php on line 36\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// In this Kata, you have to sort an array of non-negative integers\
    \ according to\n// number of ones in their binary representation in ascending\
    \ order.\n// For similar number of ones, sort based on decimal value.\n// It must\
    \ be implemented like this:\n// >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4,\
    \ 5]\n// >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n// >>>\
    \ sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\nfunction sort_array($arr) {\n \
    \ $arr = array_map(function($n) {\n    $ones = substr_count(decbin($n), '1');\n\
    \    return [$n, $ones];\n  }, $arr);\n  usort($arr, function($a, $b) {\n    if\
    \ ($a[1] == $b[1]) {\n      return $a[0] - $b[0];\n    }\n    return $a[1] - $b[1];\n\
    \  });\n  return array_map(function($n) {\n    return $n[0];\n  }, $arr);\n}\n\
    \nfunction candidate(...$args) {\n    return sort_array(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 5, 2, 3, 4)) !== array(1, 2, 4, 3,\
    \ 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2,\
    \ -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 0, 2, 3, 4)) !== array(0, 1, 2, 4,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !==\
    \ array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 44,\
    \ 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 16,\
    \ 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpt1kw1fl_.php:31\n\
    Stack trace:\n#0 /tmp/tmpt1kw1fl_.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpt1kw1fl_.php\
    \ on line 31\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// In this Kata, you have to sort an array of non-negative integers\
    \ according to\n// number of ones in their binary representation in ascending\
    \ order.\n// For similar number of ones, sort based on decimal value.\n// It must\
    \ be implemented like this:\n// >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4,\
    \ 5]\n// >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n// >>>\
    \ sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\nfunction sort_array($arr) {\n \
    \ $arr = array_map(function($n) {\n    return [$n, decbin($n)];\n  }, $arr);\n\
    \  usort($arr, function($a, $b) {\n    $a_ones = substr_count($a[1], '1');\n \
    \   $b_ones = substr_count($b[1], '1');\n    if ($a_ones == $b_ones) {\n     \
    \ return $a[0] - $b[0];\n    }\n    return $a_ones - $b_ones;\n  });\n  return\
    \ array_map(function($n) {\n    return $n[0];\n  }, $arr);\n}\n\necho sort_array([1,\
    \ 5, 2, 3, 4]) . \"\\n\";\necho sort_array([-2, -3, -4, -5, -6]) . \"\\n\";\n\
    echo sort_array([1, 0, 2, 3, 4]) . \"\\n\";\nfunction candidate(...$args) {\n\
    \    return sort_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 5, 2, 3, 4)) !== array(1, 2, 4, 3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-2, -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0, 2,\
    \ 3, 4)) !== array(0, 1, 2, 4, 3)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2,\
    \ 2, 4, 4, 3, 3, 5, 5, 5, 7, 77)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 6, 44, 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8,\
    \ 16, 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "Array\nArray\nArray\n"
  stderr: "PHP Warning:  Array to string conversion in /tmp/tmpjtt_65ph.php on line\
    \ 26\nPHP Warning:  Array to string conversion in /tmp/tmpjtt_65ph.php on line\
    \ 27\nPHP Warning:  Array to string conversion in /tmp/tmpjtt_65ph.php on line\
    \ 28\nPHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpjtt_65ph.php:35\n\
    Stack trace:\n#0 /tmp/tmpjtt_65ph.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpjtt_65ph.php\
    \ on line 35\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// In this Kata, you have to sort an array of non-negative integers\
    \ according to\n// number of ones in their binary representation in ascending\
    \ order.\n// For similar number of ones, sort based on decimal value.\n// It must\
    \ be implemented like this:\n// >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4,\
    \ 5]\n// >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n// >>>\
    \ sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\nfunction sort_array($arr) {\n \
    \ $arr = array_map(function($num) {\n    return [$num, decbin($num)];\n  }, $arr);\n\
    \  usort($arr, function($a, $b) {\n    $a_ones = substr_count($a[1], '1');\n \
    \   $b_ones = substr_count($b[1], '1');\n    if ($a_ones == $b_ones) {\n     \
    \ return $a[0] - $b[0];\n    }\n    return $a_ones - $b_ones;\n  });\n  return\
    \ array_map(function($num) {\n    return $num[0];\n  }, $arr);\n}\n\nfunction\
    \ candidate(...$args) {\n    return sort_array(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, 5, 2, 3, 4)) !== array(1, 2, 4, 3, 5)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2, -3, -4,\
    \ -5, -6)) !== array(-4, -2, -6, -5, -3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 0, 2, 3, 4)) !== array(0, 1, 2, 4, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 5, 77,\
    \ 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 44, 12, 32,\
    \ 5)) !== array(32, 3, 5, 6, 12, 44)) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 16, 32))\
    \ !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp07kir7kp.php:32\n\
    Stack trace:\n#0 /tmp/tmp07kir7kp.php(41): test()\n#1 {main}\n  thrown in /tmp/tmp07kir7kp.php\
    \ on line 32\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// In this Kata, you have to sort an array of non-negative integers\
    \ according to\n// number of ones in their binary representation in ascending\
    \ order.\n// For similar number of ones, sort based on decimal value.\n// It must\
    \ be implemented like this:\n// >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4,\
    \ 5]\n// >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n// >>>\
    \ sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\nfunction sort_array($arr) {\n \
    \ $arr = array_map(function($n) {\n    return [$n, decbin($n)];\n  }, $arr);\n\
    \  usort($arr, function($a, $b) {\n    $a_ones = strlen(preg_replace('/[^1]/',\
    \ '', $a[1]));\n    $b_ones = strlen(preg_replace('/[^1]/', '', $b[1]));\n   \
    \ if ($a_ones == $b_ones) {\n      return $a[0] - $b[0];\n    }\n    return $a_ones\
    \ - $b_ones;\n  });\n  return array_map(function($n) {\n    return $n[0];\n  },\
    \ $arr);\n}\n\nfunction candidate(...$args) {\n    return sort_array(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 5, 2, 3, 4)) !== array(1,\
    \ 2, 4, 3, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2,\
    \ -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 0, 2, 3, 4)) !== array(0, 1, 2, 4,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !==\
    \ array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 44,\
    \ 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 16,\
    \ 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmps_1cfwgt.php:32\n\
    Stack trace:\n#0 /tmp/tmps_1cfwgt.php(41): test()\n#1 {main}\n  thrown in /tmp/tmps_1cfwgt.php\
    \ on line 32\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// In this Kata, you have to sort an array of non-negative integers\
    \ according to\n// number of ones in their binary representation in ascending\
    \ order.\n// For similar number of ones, sort based on decimal value.\n// It must\
    \ be implemented like this:\n// >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4,\
    \ 5]\n// >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n// >>>\
    \ sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\nfunction sort_array($arr) {\n \
    \ $arr = array_map(function($n) {\n    return [$n, decbin($n)];\n  }, $arr);\n\
    \  usort($arr, function($a, $b) {\n    $a_ones = substr_count($a[1], '1');\n \
    \   $b_ones = substr_count($b[1], '1');\n    if ($a_ones == $b_ones) {\n     \
    \ return $a[0] - $b[0];\n    }\n    return $a_ones - $b_ones;\n  });\n  return\
    \ array_map(function($n) {\n    return $n[0];\n  }, $arr);\n}\n\nfunction candidate(...$args)\
    \ {\n    return sort_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 5, 2, 3, 4)) !== array(1, 2, 4, 3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-2, -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0, 2,\
    \ 3, 4)) !== array(0, 1, 2, 4, 3)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2,\
    \ 2, 4, 4, 3, 3, 5, 5, 5, 7, 77)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 6, 44, 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8,\
    \ 16, 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp4yo60qfl.php:32\n\
    Stack trace:\n#0 /tmp/tmp4yo60qfl.php(41): test()\n#1 {main}\n  thrown in /tmp/tmp4yo60qfl.php\
    \ on line 32\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// In this Kata, you have to sort an array of non-negative integers\
    \ according to\n// number of ones in their binary representation in ascending\
    \ order.\n// For similar number of ones, sort based on decimal value.\n// It must\
    \ be implemented like this:\n// >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4,\
    \ 5]\n// >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n// >>>\
    \ sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\nfunction sort_array($arr) {\n \
    \ $arr = array_map(function($n) {\n    $n = (string) $n;\n    $n = str_split($n);\n\
    \    $n = array_map(function($n) {\n      return (int) $n;\n    }, $n);\n    $n\
    \ = array_sum($n);\n    return $n;\n  }, $arr);\n  $arr = array_map(function($n)\
    \ {\n    $n = (string) $n;\n    $n = str_split($n);\n    $n = array_map(function($n)\
    \ {\n      return (int) $n;\n    }, $n);\n    $n = array_sum($n);\n    return\
    \ $n;\n  }, $arr);\n  $arr = array_map(function($n) {\n    $n = (string) $n;\n\
    \    $n = str_split($n);\n    $n = array_map(function($n) {\n      return (int)\
    \ $n;\n    }, $n);\n    $n = array_sum($n);\n    return $n;\n  }, $arr);\n  $arr\
    \ = array_map(function($n) {\n    $n = (string) $n;\n    $n = str_split($n);\n\
    \    $n = array_map(function($n) {\n      return (int) $n;\n    }, $n);\n    $n\
    \ = array_sum($n);\n    return $n;\n  }, $arr);\n  $arr = array_map(function($n)\
    \ {\n    $n = (string) $n;\n    $n = str_split($n);\n    $n = array_map(function($n)\
    \ {\n      return (int) $n;\n    }, $n);\n    $n = array_sum($n);\n    return\
    \ $n;\n  }, $arr);\n  $arr = array_map(function($n) {\n    $n = (string) $n;\n\
    \    $n = str_split($n);\n    $n = array_map(function($n) {\n      return (int)\
    \ $n;\n    }, $n);\n    $n = array_\nfunction candidate(...$args) {\n    return\
    \ sort_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 5, 2, 3, 4)) !== array(1, 2, 4, 3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-2, -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0, 2,\
    \ 3, 4)) !== array(0, 1, 2, 4, 3)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2,\
    \ 2, 4, 4, 3, 3, 5, 5, 5, 7, 77)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 6, 44, 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8,\
    \ 16, 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Parse error:  syntax error, unexpected token \"function\" in /tmp/tmp4wp0nd7m.php\
    \ on line 62\n"
  exit_code: 255
  status: SyntaxError
- program: "<?php\n// In this Kata, you have to sort an array of non-negative integers\
    \ according to\n// number of ones in their binary representation in ascending\
    \ order.\n// For similar number of ones, sort based on decimal value.\n// It must\
    \ be implemented like this:\n// >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4,\
    \ 5]\n// >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n// >>>\
    \ sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\nfunction sort_array($arr) {\n \
    \   $arr_ones = array();\n    $arr_dec = array();\n    foreach ($arr as $key =>\
    \ $value) {\n        $arr_ones[$key] = substr_count(decbin($value), '1');\n  \
    \      $arr_dec[$key] = $value;\n    }\n    array_multisort($arr_ones, SORT_ASC,\
    \ $arr_dec, SORT_ASC, $arr);\n    return $arr;\n}\n\nfunction candidate(...$args)\
    \ {\n    return sort_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 5, 2, 3, 4)) !== array(1, 2, 4, 3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-2, -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0, 2,\
    \ 3, 4)) !== array(0, 1, 2, 4, 3)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2,\
    \ 2, 4, 4, 3, 3, 5, 5, 5, 7, 77)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 6, 44, 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8,\
    \ 16, 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp7xszn8cz.php:26\n\
    Stack trace:\n#0 /tmp/tmp7xszn8cz.php(35): test()\n#1 {main}\n  thrown in /tmp/tmp7xszn8cz.php\
    \ on line 26\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// In this Kata, you have to sort an array of non-negative integers\
    \ according to\n// number of ones in their binary representation in ascending\
    \ order.\n// For similar number of ones, sort based on decimal value.\n// It must\
    \ be implemented like this:\n// >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4,\
    \ 5]\n// >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n// >>>\
    \ sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\nfunction sort_array($arr) {\n \
    \   $ones = [];\n    foreach ($arr as $key => $value) {\n        $ones[$key] =\
    \ substr_count(decbin($value), '1');\n    }\n    array_multisort($ones, SORT_ASC,\
    \ $arr);\n    return $arr;\n}\n\nfunction candidate(...$args) {\n    return sort_array(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 5, 2, 3, 4)) !== array(1,\
    \ 2, 4, 3, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2,\
    \ -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 0, 2, 3, 4)) !== array(0, 1, 2, 4,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !==\
    \ array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 44,\
    \ 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 16,\
    \ 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp58r63jne.php:24\n\
    Stack trace:\n#0 /tmp/tmp58r63jne.php(33): test()\n#1 {main}\n  thrown in /tmp/tmp58r63jne.php\
    \ on line 24\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// In this Kata, you have to sort an array of non-negative integers\
    \ according to\n// number of ones in their binary representation in ascending\
    \ order.\n// For similar number of ones, sort based on decimal value.\n// It must\
    \ be implemented like this:\n// >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4,\
    \ 5]\n// >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n// >>>\
    \ sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\nfunction sort_array($arr) {\n \
    \ $arr = array_map('decbin', $arr);\n  $arr = array_map('strlen', $arr);\n  $arr\
    \ = array_combine($arr, $arr);\n  ksort($arr);\n  $arr = array_keys($arr);\n \
    \ return $arr;\n}\n\nfunction candidate(...$args) {\n    return sort_array(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 5, 2, 3, 4)) !== array(1,\
    \ 2, 4, 3, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2,\
    \ -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 0, 2, 3, 4)) !== array(0, 1, 2, 4,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !==\
    \ array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 44,\
    \ 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 16,\
    \ 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpzrudb313.php:23\n\
    Stack trace:\n#0 /tmp/tmpzrudb313.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpzrudb313.php\
    \ on line 23\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// In this Kata, you have to sort an array of non-negative integers\
    \ according to\n// number of ones in their binary representation in ascending\
    \ order.\n// For similar number of ones, sort based on decimal value.\n// It must\
    \ be implemented like this:\n// >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4,\
    \ 5]\n// >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n// >>>\
    \ sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\nfunction sort_array($arr) {\n \
    \ $arr = array_map(function($n) {\n    return [$n, decbin($n)];\n  }, $arr);\n\
    \  usort($arr, function($a, $b) {\n    $a_ones = substr_count($a[1], '1');\n \
    \   $b_ones = substr_count($b[1], '1');\n    if ($a_ones == $b_ones) {\n     \
    \ return $a[0] - $b[0];\n    }\n    return $a_ones - $b_ones;\n  });\n  return\
    \ array_map(function($n) {\n    return $n[0];\n  }, $arr);\n}\n\nfunction candidate(...$args)\
    \ {\n    return sort_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 5, 2, 3, 4)) !== array(1, 2, 4, 3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-2, -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0, 2,\
    \ 3, 4)) !== array(0, 1, 2, 4, 3)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2,\
    \ 2, 4, 4, 3, 3, 5, 5, 5, 7, 77)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 6, 44, 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8,\
    \ 16, 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpfizmzln3.php:32\n\
    Stack trace:\n#0 /tmp/tmpfizmzln3.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpfizmzln3.php\
    \ on line 32\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// In this Kata, you have to sort an array of non-negative integers\
    \ according to\n// number of ones in their binary representation in ascending\
    \ order.\n// For similar number of ones, sort based on decimal value.\n// It must\
    \ be implemented like this:\n// >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4,\
    \ 5]\n// >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n// >>>\
    \ sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\nfunction sort_array($arr) {\n \
    \   $arr = array_map(function($num) {\n        return [$num, decbin($num)];\n\
    \    }, $arr);\n    usort($arr, function($a, $b) {\n        $a_ones = substr_count($a[1],\
    \ '1');\n        $b_ones = substr_count($b[1], '1');\n        if ($a_ones ===\
    \ $b_ones) {\n            return $a[0] - $b[0];\n        }\n        return $a_ones\
    \ - $b_ones;\n    });\n    return array_map(function($num) {\n        return $num[0];\n\
    \    }, $arr);\n}\n\nfunction candidate(...$args) {\n    return sort_array(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 5, 2, 3, 4)) !== array(1,\
    \ 2, 4, 3, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2,\
    \ -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 0, 2, 3, 4)) !== array(0, 1, 2, 4,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !==\
    \ array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 44,\
    \ 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 16,\
    \ 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp_z8arekb.php:32\n\
    Stack trace:\n#0 /tmp/tmp_z8arekb.php(41): test()\n#1 {main}\n  thrown in /tmp/tmp_z8arekb.php\
    \ on line 32\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// In this Kata, you have to sort an array of non-negative integers\
    \ according to\n// number of ones in their binary representation in ascending\
    \ order.\n// For similar number of ones, sort based on decimal value.\n// It must\
    \ be implemented like this:\n// >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4,\
    \ 5]\n// >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n// >>>\
    \ sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\nfunction sort_array($arr) {\n \
    \   $arr = array_map(function($n) {\n        return [$n, decbin($n)];\n    },\
    \ $arr);\n    usort($arr, function($a, $b) {\n        $a = $a[1];\n        $b\
    \ = $b[1];\n        $a = substr_count($a, '1');\n        $b = substr_count($b,\
    \ '1');\n        if ($a === $b) {\n            return $a[0] - $b[0];\n       \
    \ }\n        return $a - $b;\n    });\n    return array_map(function($n) {\n \
    \       return $n[0];\n    }, $arr);\n}\n\nfunction candidate(...$args) {\n  \
    \  return sort_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 5, 2, 3, 4)) !== array(1, 2, 4, 3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-2, -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0, 2,\
    \ 3, 4)) !== array(0, 1, 2, 4, 3)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2,\
    \ 2, 4, 4, 3, 3, 5, 5, 5, 7, 77)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 6, 44, 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8,\
    \ 16, 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Warning:  Trying to access array offset on value of type int in /tmp/tmp3h4vi9bx.php\
    \ on line 19\nPHP Warning:  Trying to access array offset on value of type int\
    \ in /tmp/tmp3h4vi9bx.php on line 19\nPHP Warning:  Trying to access array offset\
    \ on value of type int in /tmp/tmp3h4vi9bx.php on line 19\nPHP Warning:  Trying\
    \ to access array offset on value of type int in /tmp/tmp3h4vi9bx.php on line\
    \ 19\nPHP Warning:  Trying to access array offset on value of type int in /tmp/tmp3h4vi9bx.php\
    \ on line 19\nPHP Warning:  Trying to access array offset on value of type int\
    \ in /tmp/tmp3h4vi9bx.php on line 19\nPHP Fatal error:  Uncaught Exception: Test\
    \ failed! in /tmp/tmp3h4vi9bx.php:33\nStack trace:\n#0 /tmp/tmp3h4vi9bx.php(43):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmp3h4vi9bx.php on line 33\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// In this Kata, you have to sort an array of non-negative integers\
    \ according to\n// number of ones in their binary representation in ascending\
    \ order.\n// For similar number of ones, sort based on decimal value.\n// It must\
    \ be implemented like this:\n// >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4,\
    \ 5]\n// >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n// >>>\
    \ sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\nfunction sort_array($arr) {\n \
    \ $arr = array_map(function($x) {\n    return [$x, decbin($x)];\n  }, $arr);\n\
    \  usort($arr, function($a, $b) {\n    $a = $a[1];\n    $b = $b[1];\n    $a =\
    \ str_split($a);\n    $b = str_split($b);\n    $a = array_count_values($a);\n\
    \    $b = array_count_values($b);\n    if (isset($a['1']) && isset($b['1'])) {\n\
    \      if ($a['1'] == $b['1']) {\n        return $a[0] - $b[0];\n      }\n   \
    \   return $a['1'] - $b['1'];\n    }\n    if (isset($a['1'])) {\n      return\
    \ -1;\n    }\n    if (isset($b['1'])) {\n      return 1;\n    }\n    return $a[0]\
    \ - $b[0];\n  });\n  $arr = array_map(function($x) {\n    return $x[0];\n  },\
    \ $arr);\n  return $arr;\n}\n\nfunction candidate(...$args) {\n    return sort_array(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 5, 2, 3, 4)) !== array(1,\
    \ 2, 4, 3, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2,\
    \ -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 0, 2, 3, 4)) !== array(0, 1, 2, 4,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !==\
    \ array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 44,\
    \ 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 16,\
    \ 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: ''
  stderr: "PHP Warning:  Undefined array key 0 in /tmp/tmpvc73dvrn.php on line 22\n\
    PHP Warning:  Undefined array key 0 in /tmp/tmpvc73dvrn.php on line 22\nPHP Fatal\
    \ error:  Uncaught Exception: Test failed! in /tmp/tmpvc73dvrn.php:46\nStack trace:\n\
    #0 /tmp/tmpvc73dvrn.php(55): test()\n#1 {main}\n  thrown in /tmp/tmpvc73dvrn.php\
    \ on line 46\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// In this Kata, you have to sort an array of non-negative integers\
    \ according to\n// number of ones in their binary representation in ascending\
    \ order.\n// For similar number of ones, sort based on decimal value.\n// It must\
    \ be implemented like this:\n// >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4,\
    \ 5]\n// >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n// >>>\
    \ sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\nfunction sort_array($arr) {\n \
    \ $arr = array_map(function($n) {\n    return [$n, decbin($n)];\n  }, $arr);\n\
    \  usort($arr, function($a, $b) {\n    $a1 = substr_count($a[1], '1');\n    $b1\
    \ = substr_count($b[1], '1');\n    if ($a1 == $b1) {\n      return $a[0] - $b[0];\n\
    \    }\n    return $a1 - $b1;\n  });\n  return array_map(function($a) {\n    return\
    \ $a[0];\n  }, $arr);\n}\n\nfunction candidate(...$args) {\n    return sort_array(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 5, 2, 3, 4)) !== array(1,\
    \ 2, 4, 3, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2,\
    \ -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 0, 2, 3, 4)) !== array(0, 1, 2, 4,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !==\
    \ array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 44,\
    \ 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 16,\
    \ 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpmw0dom7g.php:32\n\
    Stack trace:\n#0 /tmp/tmpmw0dom7g.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpmw0dom7g.php\
    \ on line 32\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// In this Kata, you have to sort an array of non-negative integers\
    \ according to\n// number of ones in their binary representation in ascending\
    \ order.\n// For similar number of ones, sort based on decimal value.\n// It must\
    \ be implemented like this:\n// >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4,\
    \ 5]\n// >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n// >>>\
    \ sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\nfunction sort_array($arr) {\n \
    \ $arr = array_map(function($n) {\n    return [$n, decbin($n)];\n  }, $arr);\n\
    \  usort($arr, function($a, $b) {\n    $a_ones = substr_count($a[1], '1');\n \
    \   $b_ones = substr_count($b[1], '1');\n    if ($a_ones == $b_ones) {\n     \
    \ return $a[0] - $b[0];\n    }\n    return $a_ones - $b_ones;\n  });\n  return\
    \ array_map(function($n) {\n    return $n[0];\n  }, $arr);\n}\n\nfunction candidate(...$args)\
    \ {\n    return sort_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 5, 2, 3, 4)) !== array(1, 2, 4, 3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-2, -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0, 2,\
    \ 3, 4)) !== array(0, 1, 2, 4, 3)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2,\
    \ 2, 4, 4, 3, 3, 5, 5, 5, 7, 77)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 6, 44, 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8,\
    \ 16, 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp33bjs2qp.php:32\n\
    Stack trace:\n#0 /tmp/tmp33bjs2qp.php(41): test()\n#1 {main}\n  thrown in /tmp/tmp33bjs2qp.php\
    \ on line 32\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// In this Kata, you have to sort an array of non-negative integers\
    \ according to\n// number of ones in their binary representation in ascending\
    \ order.\n// For similar number of ones, sort based on decimal value.\n// It must\
    \ be implemented like this:\n// >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4,\
    \ 5]\n// >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n// >>>\
    \ sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\nfunction sort_array($arr) {\n \
    \ $arr = array_map(function($num) {\n    return [$num, decbin($num)];\n  }, $arr);\n\
    \  usort($arr, function($a, $b) {\n    $a_ones = substr_count($a[1], '1');\n \
    \   $b_ones = substr_count($b[1], '1');\n    if ($a_ones == $b_ones) {\n     \
    \ return $a[0] - $b[0];\n    }\n    return $a_ones - $b_ones;\n  });\n  return\
    \ array_map(function($num) {\n    return $num[0];\n  }, $arr);\n}\n\nfunction\
    \ candidate(...$args) {\n    return sort_array(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, 5, 2, 3, 4)) !== array(1, 2, 4, 3, 5)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2, -3, -4,\
    \ -5, -6)) !== array(-4, -2, -6, -5, -3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 0, 2, 3, 4)) !== array(0, 1, 2, 4, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 5, 77,\
    \ 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 44, 12, 32,\
    \ 5)) !== array(32, 3, 5, 6, 12, 44)) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 16, 32))\
    \ !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpkhl8ky71.php:32\n\
    Stack trace:\n#0 /tmp/tmpkhl8ky71.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpkhl8ky71.php\
    \ on line 32\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// In this Kata, you have to sort an array of non-negative integers\
    \ according to\n// number of ones in their binary representation in ascending\
    \ order.\n// For similar number of ones, sort based on decimal value.\n// It must\
    \ be implemented like this:\n// >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4,\
    \ 5]\n// >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n// >>>\
    \ sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\nfunction sort_array($arr) {\n \
    \ $arr = array_map(function($x) {\n    $bin = decbin($x);\n    $ones = substr_count($bin,\
    \ '1');\n    return [$x, $ones];\n  }, $arr);\n  usort($arr, function($a, $b)\
    \ {\n    if ($a[1] == $b[1]) {\n      return $a[0] - $b[0];\n    }\n    return\
    \ $a[1] - $b[1];\n  });\n  return array_map(function($x) {\n    return $x[0];\n\
    \  }, $arr);\n}\n\nfunction candidate(...$args) {\n    return sort_array(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 5, 2, 3, 4)) !== array(1,\
    \ 2, 4, 3, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2,\
    \ -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 0, 2, 3, 4)) !== array(0, 1, 2, 4,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !==\
    \ array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 44,\
    \ 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 16,\
    \ 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpcam80qtc.php:32\n\
    Stack trace:\n#0 /tmp/tmpcam80qtc.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpcam80qtc.php\
    \ on line 32\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// In this Kata, you have to sort an array of non-negative integers\
    \ according to\n// number of ones in their binary representation in ascending\
    \ order.\n// For similar number of ones, sort based on decimal value.\n// It must\
    \ be implemented like this:\n// >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4,\
    \ 5]\n// >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n// >>>\
    \ sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\nfunction sort_array($arr) {\n \
    \   $arr = array_map(function($x) {\n        return [$x, decbin($x)];\n    },\
    \ $arr);\n    usort($arr, function($a, $b) {\n        $a_ones = substr_count($a[1],\
    \ '1');\n        $b_ones = substr_count($b[1], '1');\n        if ($a_ones == $b_ones)\
    \ {\n            return $a[0] - $b[0];\n        }\n        return $a_ones - $b_ones;\n\
    \    });\n    return array_map(function($x) {\n        return $x[0];\n    }, $arr);\n\
    }\n\nfunction candidate(...$args) {\n    return sort_array(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 5, 2, 3, 4)) !== array(1, 2, 4, 3,\
    \ 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2,\
    \ -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 0, 2, 3, 4)) !== array(0, 1, 2, 4,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !==\
    \ array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 44,\
    \ 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 16,\
    \ 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp3tzojqy0.php:32\n\
    Stack trace:\n#0 /tmp/tmp3tzojqy0.php(41): test()\n#1 {main}\n  thrown in /tmp/tmp3tzojqy0.php\
    \ on line 32\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// In this Kata, you have to sort an array of non-negative integers\
    \ according to\n// number of ones in their binary representation in ascending\
    \ order.\n// For similar number of ones, sort based on decimal value.\n// It must\
    \ be implemented like this:\n// >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4,\
    \ 5]\n// >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n// >>>\
    \ sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\nfunction sort_array($arr) {\n \
    \ $arr = array_map(function($n) {\n    return [$n, decbin($n)];\n  }, $arr);\n\
    \  usort($arr, function($a, $b) {\n    $a_ones = substr_count($a[1], '1');\n \
    \   $b_ones = substr_count($b[1], '1');\n    if ($a_ones === $b_ones) {\n    \
    \  return $a[0] - $b[0];\n    }\n    return $a_ones - $b_ones;\n  });\n  return\
    \ array_map(function($n) {\n    return $n[0];\n  }, $arr);\n}\n\nfunction candidate(...$args)\
    \ {\n    return sort_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 5, 2, 3, 4)) !== array(1, 2, 4, 3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-2, -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0, 2,\
    \ 3, 4)) !== array(0, 1, 2, 4, 3)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2,\
    \ 2, 4, 4, 3, 3, 5, 5, 5, 7, 77)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 6, 44, 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8,\
    \ 16, 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpf2tv9ym7.php:32\n\
    Stack trace:\n#0 /tmp/tmpf2tv9ym7.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpf2tv9ym7.php\
    \ on line 32\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// In this Kata, you have to sort an array of non-negative integers\
    \ according to\n// number of ones in their binary representation in ascending\
    \ order.\n// For similar number of ones, sort based on decimal value.\n// It must\
    \ be implemented like this:\n// >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4,\
    \ 5]\n// >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n// >>>\
    \ sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\nfunction sort_array($arr) {\n \
    \ $ones = [];\n  $zeros = [];\n  foreach ($arr as $key => $value) {\n    $binary\
    \ = decbin($value);\n    $count = substr_count($binary, '1');\n    if ($count\
    \ == 0) {\n      $zeros[] = $value;\n    } else {\n      $ones[$count][] = $value;\n\
    \    }\n  }\n  ksort($ones);\n  $result = [];\n  foreach ($ones as $key => $value)\
    \ {\n    sort($value);\n    $result = array_merge($result, $value);\n  }\n  sort($zeros);\n\
    \  $result = array_merge($result, $zeros);\n  return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return sort_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 5, 2, 3, 4)) !== array(1, 2, 4, 3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-2, -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0, 2,\
    \ 3, 4)) !== array(0, 1, 2, 4, 3)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2,\
    \ 2, 4, 4, 3, 3, 5, 5, 5, 7, 77)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 6, 44, 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8,\
    \ 16, 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpbjk3y0ml.php:38\n\
    Stack trace:\n#0 /tmp/tmpbjk3y0ml.php(47): test()\n#1 {main}\n  thrown in /tmp/tmpbjk3y0ml.php\
    \ on line 38\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// In this Kata, you have to sort an array of non-negative integers\
    \ according to\n// number of ones in their binary representation in ascending\
    \ order.\n// For similar number of ones, sort based on decimal value.\n// It must\
    \ be implemented like this:\n// >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4,\
    \ 5]\n// >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n// >>>\
    \ sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\nfunction sort_array($arr) {\n \
    \ $arr = array_map(function($num) {\n    return [$num, decbin($num)];\n  }, $arr);\n\
    \  usort($arr, function($a, $b) {\n    $a_ones = substr_count($a[1], '1');\n \
    \   $b_ones = substr_count($b[1], '1');\n    if ($a_ones == $b_ones) {\n     \
    \ return $a[0] - $b[0];\n    }\n    return $a_ones - $b_ones;\n  });\n  return\
    \ array_map(function($num) {\n    return $num[0];\n  }, $arr);\n}\n\nfunction\
    \ candidate(...$args) {\n    return sort_array(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, 5, 2, 3, 4)) !== array(1, 2, 4, 3, 5)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2, -3, -4,\
    \ -5, -6)) !== array(-4, -2, -6, -5, -3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 0, 2, 3, 4)) !== array(0, 1, 2, 4, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 5, 77,\
    \ 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 44, 12, 32,\
    \ 5)) !== array(32, 3, 5, 6, 12, 44)) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 16, 32))\
    \ !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp3gd2wkyb.php:32\n\
    Stack trace:\n#0 /tmp/tmp3gd2wkyb.php(41): test()\n#1 {main}\n  thrown in /tmp/tmp3gd2wkyb.php\
    \ on line 32\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// In this Kata, you have to sort an array of non-negative integers\
    \ according to\n// number of ones in their binary representation in ascending\
    \ order.\n// For similar number of ones, sort based on decimal value.\n// It must\
    \ be implemented like this:\n// >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4,\
    \ 5]\n// >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n// >>>\
    \ sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\nfunction sort_array($arr) {\n \
    \ $arr = array_map(function($n) {\n    return [$n, decbin($n)];\n  }, $arr);\n\
    \  usort($arr, function($a, $b) {\n    $a_ones = substr_count($a[1], '1');\n \
    \   $b_ones = substr_count($b[1], '1');\n    if ($a_ones == $b_ones) {\n     \
    \ return $a[0] - $b[0];\n    }\n    return $a_ones - $b_ones;\n  });\n  return\
    \ array_map(function($n) {\n    return $n[0];\n  }, $arr);\n}\n\nprint_r(sort_array([1,\
    \ 5, 2, 3, 4]));\nprint_r(sort_array([-2, -3, -4, -5, -6]));\nprint_r(sort_array([1,\
    \ 0, 2, 3, 4]));\nfunction candidate(...$args) {\n    return sort_array(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 5, 2, 3, 4)) !== array(1,\
    \ 2, 4, 3, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2,\
    \ -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 0, 2, 3, 4)) !== array(0, 1, 2, 4,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !==\
    \ array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 44,\
    \ 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 16,\
    \ 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "Array\n(\n    [0] => 1\n    [1] => 2\n    [2] => 4\n    [3] => 3\n    [4]\
    \ => 5\n)\nArray\n(\n    [0] => -6\n    [1] => -4\n    [2] => -5\n    [3] => -3\n\
    \    [4] => -2\n)\nArray\n(\n    [0] => 0\n    [1] => 1\n    [2] => 2\n    [3]\
    \ => 4\n    [4] => 3\n)\n"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp6jho6i2h.php:35\n\
    Stack trace:\n#0 /tmp/tmp6jho6i2h.php(44): test()\n#1 {main}\n  thrown in /tmp/tmp6jho6i2h.php\
    \ on line 35\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// In this Kata, you have to sort an array of non-negative integers\
    \ according to\n// number of ones in their binary representation in ascending\
    \ order.\n// For similar number of ones, sort based on decimal value.\n// It must\
    \ be implemented like this:\n// >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4,\
    \ 5]\n// >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n// >>>\
    \ sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\nfunction sort_array($arr) {\n \
    \   $arr = array_map(function($num) {\n        return [$num, decbin($num)];\n\
    \    }, $arr);\n    usort($arr, function($a, $b) {\n        $a_ones = substr_count($a[1],\
    \ '1');\n        $b_ones = substr_count($b[1], '1');\n        if ($a_ones ===\
    \ $b_ones) {\n            return $a[0] - $b[0];\n        }\n        return $a_ones\
    \ - $b_ones;\n    });\n    return array_map(function($num) {\n        return $num[0];\n\
    \    }, $arr);\n}\n\nfunction candidate(...$args) {\n    return sort_array(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 5, 2, 3, 4)) !== array(1,\
    \ 2, 4, 3, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2,\
    \ -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 0, 2, 3, 4)) !== array(0, 1, 2, 4,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !==\
    \ array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 44,\
    \ 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 16,\
    \ 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp39sxtcp1.php:32\n\
    Stack trace:\n#0 /tmp/tmp39sxtcp1.php(41): test()\n#1 {main}\n  thrown in /tmp/tmp39sxtcp1.php\
    \ on line 32\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// In this Kata, you have to sort an array of non-negative integers\
    \ according to\n// number of ones in their binary representation in ascending\
    \ order.\n// For similar number of ones, sort based on decimal value.\n// It must\
    \ be implemented like this:\n// >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4,\
    \ 5]\n// >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n// >>>\
    \ sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\nfunction sort_array($arr) {\n \
    \ $ones = array_map(function($n) {\n    return substr_count(decbin($n), '1');\n\
    \  }, $arr);\n  array_multisort($ones, $arr);\n  return $arr;\n}\n\nfunction candidate(...$args)\
    \ {\n    return sort_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 5, 2, 3, 4)) !== array(1, 2, 4, 3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-2, -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0, 2,\
    \ 3, 4)) !== array(0, 1, 2, 4, 3)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2,\
    \ 2, 4, 4, 3, 3, 5, 5, 5, 7, 77)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 6, 44, 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8,\
    \ 16, 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpebnkp6cs.php:23\n\
    Stack trace:\n#0 /tmp/tmpebnkp6cs.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpebnkp6cs.php\
    \ on line 23\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// In this Kata, you have to sort an array of non-negative integers\
    \ according to\n// number of ones in their binary representation in ascending\
    \ order.\n// For similar number of ones, sort based on decimal value.\n// It must\
    \ be implemented like this:\n// >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4,\
    \ 5]\n// >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n// >>>\
    \ sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\nfunction sort_array($arr) {\n \
    \ $arr = array_map(function($num) {\n    $ones = substr_count(decbin($num), '1');\n\
    \    return [$num, $ones];\n  }, $arr);\n  usort($arr, function($a, $b) {\n  \
    \  if ($a[1] == $b[1]) {\n      return $a[0] - $b[0];\n    }\n    return $a[1]\
    \ - $b[1];\n  });\n  return array_map(function($num) {\n    return $num[0];\n\
    \  }, $arr);\n}\n\nfunction candidate(...$args) {\n    return sort_array(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 5, 2, 3, 4)) !== array(1,\
    \ 2, 4, 3, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2,\
    \ -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 0, 2, 3, 4)) !== array(0, 1, 2, 4,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !==\
    \ array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 44,\
    \ 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 16,\
    \ 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpkey9i96p.php:31\n\
    Stack trace:\n#0 /tmp/tmpkey9i96p.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpkey9i96p.php\
    \ on line 31\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// In this Kata, you have to sort an array of non-negative integers\
    \ according to\n// number of ones in their binary representation in ascending\
    \ order.\n// For similar number of ones, sort based on decimal value.\n// It must\
    \ be implemented like this:\n// >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4,\
    \ 5]\n// >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n// >>>\
    \ sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\nfunction sort_array($arr) {\n \
    \ $arr = array_map(function($n) {\n    return [$n, decbin($n)];\n  }, $arr);\n\
    \  usort($arr, function($a, $b) {\n    $a_ones = substr_count($a[1], '1');\n \
    \   $b_ones = substr_count($b[1], '1');\n    if ($a_ones === $b_ones) {\n    \
    \  return $a[0] - $b[0];\n    }\n    return $a_ones - $b_ones;\n  });\n  return\
    \ array_map(function($n) {\n    return $n[0];\n  }, $arr);\n}\n\necho implode(',\
    \ ', sort_array([1, 5, 2, 3, 4])) . \"\\n\";\necho implode(', ', sort_array([-2,\
    \ -3, -4, -5, -6])) . \"\\n\";\necho implode(', ', sort_array([1, 0, 2, 3, 4]))\
    \ . \"\\n\";\nfunction candidate(...$args) {\n    return sort_array(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 5, 2, 3, 4)) !== array(1,\
    \ 2, 4, 3, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2,\
    \ -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 0, 2, 3, 4)) !== array(0, 1, 2, 4,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !==\
    \ array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 44,\
    \ 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 16,\
    \ 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "1, 2, 4, 3, 5\n-6, -4, -5, -3, -2\n0, 1, 2, 4, 3\n"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmphuciypeb.php:35\n\
    Stack trace:\n#0 /tmp/tmphuciypeb.php(44): test()\n#1 {main}\n  thrown in /tmp/tmphuciypeb.php\
    \ on line 35\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// In this Kata, you have to sort an array of non-negative integers\
    \ according to\n// number of ones in their binary representation in ascending\
    \ order.\n// For similar number of ones, sort based on decimal value.\n// It must\
    \ be implemented like this:\n// >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4,\
    \ 5]\n// >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n// >>>\
    \ sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\nfunction sort_array($arr) {\n \
    \ $arr = array_map(function($n) {\n    return [$n, decbin($n)];\n  }, $arr);\n\
    \  usort($arr, function($a, $b) {\n    $a_ones = substr_count($a[1], '1');\n \
    \   $b_ones = substr_count($b[1], '1');\n    if ($a_ones === $b_ones) {\n    \
    \  return $a[0] - $b[0];\n    }\n    return $a_ones - $b_ones;\n  });\n  return\
    \ array_map(function($n) {\n    return $n[0];\n  }, $arr);\n}\n\nfunction candidate(...$args)\
    \ {\n    return sort_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 5, 2, 3, 4)) !== array(1, 2, 4, 3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-2, -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0, 2,\
    \ 3, 4)) !== array(0, 1, 2, 4, 3)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2,\
    \ 2, 4, 4, 3, 3, 5, 5, 5, 7, 77)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 6, 44, 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8,\
    \ 16, 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp8f3zqyt5.php:32\n\
    Stack trace:\n#0 /tmp/tmp8f3zqyt5.php(41): test()\n#1 {main}\n  thrown in /tmp/tmp8f3zqyt5.php\
    \ on line 32\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// In this Kata, you have to sort an array of non-negative integers\
    \ according to\n// number of ones in their binary representation in ascending\
    \ order.\n// For similar number of ones, sort based on decimal value.\n// It must\
    \ be implemented like this:\n// >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4,\
    \ 5]\n// >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n// >>>\
    \ sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\nfunction sort_array($arr) {\n \
    \ $ones = [];\n  foreach ($arr as $key => $value) {\n    $ones[$key] = substr_count(decbin($value),\
    \ '1');\n  }\n  array_multisort($ones, SORT_ASC, $arr);\n  return $arr;\n}\n\n\
    function candidate(...$args) {\n    return sort_array(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 5, 2, 3, 4)) !== array(1, 2, 4, 3,\
    \ 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2,\
    \ -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 0, 2, 3, 4)) !== array(0, 1, 2, 4,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !==\
    \ array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 44,\
    \ 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 16,\
    \ 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpvmtjp47c.php:24\n\
    Stack trace:\n#0 /tmp/tmpvmtjp47c.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpvmtjp47c.php\
    \ on line 24\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// In this Kata, you have to sort an array of non-negative integers\
    \ according to\n// number of ones in their binary representation in ascending\
    \ order.\n// For similar number of ones, sort based on decimal value.\n// It must\
    \ be implemented like this:\n// >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4,\
    \ 5]\n// >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n// >>>\
    \ sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\nfunction sort_array($arr) {\n \
    \ $arr = array_map(function($num) {\n    return [$num, decbin($num)];\n  }, $arr);\n\
    \  usort($arr, function($a, $b) {\n    $a_ones = substr_count($a[1], '1');\n \
    \   $b_ones = substr_count($b[1], '1');\n    if ($a_ones == $b_ones) {\n     \
    \ return $a[0] - $b[0];\n    }\n    return $a_ones - $b_ones;\n  });\n  return\
    \ array_map(function($num) {\n    return $num[0];\n  }, $arr);\n}\nfunction candidate(...$args)\
    \ {\n    return sort_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 5, 2, 3, 4)) !== array(1, 2, 4, 3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-2, -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0, 2,\
    \ 3, 4)) !== array(0, 1, 2, 4, 3)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2,\
    \ 2, 4, 4, 3, 3, 5, 5, 5, 7, 77)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 6, 44, 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8,\
    \ 16, 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpk26ifhqf.php:31\n\
    Stack trace:\n#0 /tmp/tmpk26ifhqf.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpk26ifhqf.php\
    \ on line 31\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// In this Kata, you have to sort an array of non-negative integers\
    \ according to\n// number of ones in their binary representation in ascending\
    \ order.\n// For similar number of ones, sort based on decimal value.\n// It must\
    \ be implemented like this:\n// >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4,\
    \ 5]\n// >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n// >>>\
    \ sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\nfunction sort_array($arr) {\n \
    \ $arr = array_map(function($n) {\n    return [$n, decbin($n)];\n  }, $arr);\n\
    \  usort($arr, function($a, $b) {\n    $a1 = substr_count($a[1], '1');\n    $b1\
    \ = substr_count($b[1], '1');\n    if ($a1 == $b1) {\n      return $a[0] - $b[0];\n\
    \    }\n    return $a1 - $b1;\n  });\n  return array_map(function($n) {\n    return\
    \ $n[0];\n  }, $arr);\n}\n\nfunction candidate(...$args) {\n    return sort_array(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 5, 2, 3, 4)) !== array(1,\
    \ 2, 4, 3, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2,\
    \ -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 0, 2, 3, 4)) !== array(0, 1, 2, 4,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !==\
    \ array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 44,\
    \ 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 16,\
    \ 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpxss8gd70.php:32\n\
    Stack trace:\n#0 /tmp/tmpxss8gd70.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpxss8gd70.php\
    \ on line 32\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// In this Kata, you have to sort an array of non-negative integers\
    \ according to\n// number of ones in their binary representation in ascending\
    \ order.\n// For similar number of ones, sort based on decimal value.\n// It must\
    \ be implemented like this:\n// >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4,\
    \ 5]\n// >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n// >>>\
    \ sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\nfunction sort_array($arr) {\n \
    \   $arr = array_map(function($x) {\n        return [$x, decbin($x)];\n    },\
    \ $arr);\n    usort($arr, function($a, $b) {\n        $a = substr_count($a[1],\
    \ '1');\n        $b = substr_count($b[1], '1');\n        if ($a == $b) {\n   \
    \         return $a[0] - $b[0];\n        }\n        return $a - $b;\n    });\n\
    \    return array_map(function($x) {\n        return $x[0];\n    }, $arr);\n}\n\
    \nfunction candidate(...$args) {\n    return sort_array(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 5, 2, 3, 4)) !== array(1, 2, 4, 3,\
    \ 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2,\
    \ -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 0, 2, 3, 4)) !== array(0, 1, 2, 4,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !==\
    \ array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 44,\
    \ 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 16,\
    \ 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: ''
  stderr: "PHP Warning:  Trying to access array offset on value of type int in /tmp/tmp92vw32zl.php\
    \ on line 17\nPHP Warning:  Trying to access array offset on value of type int\
    \ in /tmp/tmp92vw32zl.php on line 17\nPHP Warning:  Trying to access array offset\
    \ on value of type int in /tmp/tmp92vw32zl.php on line 17\nPHP Warning:  Trying\
    \ to access array offset on value of type int in /tmp/tmp92vw32zl.php on line\
    \ 17\nPHP Warning:  Trying to access array offset on value of type int in /tmp/tmp92vw32zl.php\
    \ on line 17\nPHP Warning:  Trying to access array offset on value of type int\
    \ in /tmp/tmp92vw32zl.php on line 17\nPHP Fatal error:  Uncaught Exception: Test\
    \ failed! in /tmp/tmp92vw32zl.php:31\nStack trace:\n#0 /tmp/tmp92vw32zl.php(41):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmp92vw32zl.php on line 31\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// In this Kata, you have to sort an array of non-negative integers\
    \ according to\n// number of ones in their binary representation in ascending\
    \ order.\n// For similar number of ones, sort based on decimal value.\n// It must\
    \ be implemented like this:\n// >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4,\
    \ 5]\n// >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n// >>>\
    \ sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\nfunction sort_array($arr) {\n \
    \ $arr = array_map(function($n) {\n    return [$n, decbin($n)];\n  }, $arr);\n\
    \  usort($arr, function($a, $b) {\n    $a = $a[1];\n    $b = $b[1];\n    $a =\
    \ str_split($a);\n    $b = str_split($b);\n    $a = array_sum($a);\n    $b = array_sum($b);\n\
    \    if ($a === $b) {\n      return $a[0] - $b[0];\n    }\n    return $a - $b;\n\
    \  });\n  return array_map(function($n) {\n    return $n[0];\n  }, $arr);\n}\n\
    \nfunction candidate(...$args) {\n    return sort_array(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 5, 2, 3, 4)) !== array(1, 2, 4, 3,\
    \ 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2,\
    \ -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 0, 2, 3, 4)) !== array(0, 1, 2, 4,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !==\
    \ array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 44,\
    \ 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 16,\
    \ 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: ''
  stderr: "PHP Warning:  Trying to access array offset on value of type int in /tmp/tmp2jgsnxlk.php\
    \ on line 21\nPHP Warning:  Trying to access array offset on value of type int\
    \ in /tmp/tmp2jgsnxlk.php on line 21\nPHP Warning:  Trying to access array offset\
    \ on value of type int in /tmp/tmp2jgsnxlk.php on line 21\nPHP Warning:  Trying\
    \ to access array offset on value of type int in /tmp/tmp2jgsnxlk.php on line\
    \ 21\nPHP Warning:  Trying to access array offset on value of type int in /tmp/tmp2jgsnxlk.php\
    \ on line 21\nPHP Warning:  Trying to access array offset on value of type int\
    \ in /tmp/tmp2jgsnxlk.php on line 21\nPHP Fatal error:  Uncaught Exception: Test\
    \ failed! in /tmp/tmp2jgsnxlk.php:35\nStack trace:\n#0 /tmp/tmp2jgsnxlk.php(45):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmp2jgsnxlk.php on line 35\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// In this Kata, you have to sort an array of non-negative integers\
    \ according to\n// number of ones in their binary representation in ascending\
    \ order.\n// For similar number of ones, sort based on decimal value.\n// It must\
    \ be implemented like this:\n// >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4,\
    \ 5]\n// >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n// >>>\
    \ sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\nfunction sort_array($arr) {\n \
    \ $arr = array_map(function($n) {\n    return [$n, decbin($n)];\n  }, $arr);\n\
    \  usort($arr, function($a, $b) {\n    $a_ones = substr_count($a[1], '1');\n \
    \   $b_ones = substr_count($b[1], '1');\n    if ($a_ones === $b_ones) {\n    \
    \  return $a[0] - $b[0];\n    }\n    return $a_ones - $b_ones;\n  });\n  return\
    \ array_map(function($n) {\n    return $n[0];\n  }, $arr);\n}\n\nfunction candidate(...$args)\
    \ {\n    return sort_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 5, 2, 3, 4)) !== array(1, 2, 4, 3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-2, -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0, 2,\
    \ 3, 4)) !== array(0, 1, 2, 4, 3)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2,\
    \ 2, 4, 4, 3, 3, 5, 5, 5, 7, 77)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 6, 44, 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8,\
    \ 16, 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmptum98alv.php:32\n\
    Stack trace:\n#0 /tmp/tmptum98alv.php(41): test()\n#1 {main}\n  thrown in /tmp/tmptum98alv.php\
    \ on line 32\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// In this Kata, you have to sort an array of non-negative integers\
    \ according to\n// number of ones in their binary representation in ascending\
    \ order.\n// For similar number of ones, sort based on decimal value.\n// It must\
    \ be implemented like this:\n// >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4,\
    \ 5]\n// >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n// >>>\
    \ sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\nfunction sort_array($arr) {\n \
    \ $arr = array_map(function($num) {\n    return [$num, decbin($num)];\n  }, $arr);\n\
    \  usort($arr, function($a, $b) {\n    $a_ones = substr_count($a[1], '1');\n \
    \   $b_ones = substr_count($b[1], '1');\n    if ($a_ones === $b_ones) {\n    \
    \  return $a[0] - $b[0];\n    }\n    return $a_ones - $b_ones;\n  });\n  return\
    \ array_map(function($num) {\n    return $num[0];\n  }, $arr);\n}\n\nfunction\
    \ candidate(...$args) {\n    return sort_array(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, 5, 2, 3, 4)) !== array(1, 2, 4, 3, 5)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2, -3, -4,\
    \ -5, -6)) !== array(-4, -2, -6, -5, -3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 0, 2, 3, 4)) !== array(0, 1, 2, 4, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 5, 77,\
    \ 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 44, 12, 32,\
    \ 5)) !== array(32, 3, 5, 6, 12, 44)) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 16, 32))\
    \ !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpd6aw4l58.php:32\n\
    Stack trace:\n#0 /tmp/tmpd6aw4l58.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpd6aw4l58.php\
    \ on line 32\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// In this Kata, you have to sort an array of non-negative integers\
    \ according to\n// number of ones in their binary representation in ascending\
    \ order.\n// For similar number of ones, sort based on decimal value.\n// It must\
    \ be implemented like this:\n// >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4,\
    \ 5]\n// >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n// >>>\
    \ sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\nfunction sort_array($arr) {\n \
    \   $arr = array_map(function($v) {\n        return [$v, decbin($v)];\n    },\
    \ $arr);\n    usort($arr, function($a, $b) {\n        $a = $a[1];\n        $b\
    \ = $b[1];\n        $a = substr_count($a, '1');\n        $b = substr_count($b,\
    \ '1');\n        if ($a == $b) {\n            return $a[0] - $b[0];\n        }\n\
    \        return $a - $b;\n    });\n    return array_map(function($v) {\n     \
    \   return $v[0];\n    }, $arr);\n}\n\nfunction candidate(...$args) {\n    return\
    \ sort_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 5, 2, 3, 4)) !== array(1, 2, 4, 3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-2, -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0, 2,\
    \ 3, 4)) !== array(0, 1, 2, 4, 3)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2,\
    \ 2, 4, 4, 3, 3, 5, 5, 5, 7, 77)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 6, 44, 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8,\
    \ 16, 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Warning:  Trying to access array offset on value of type int in /tmp/tmpq9l1o_2t.php\
    \ on line 19\nPHP Warning:  Trying to access array offset on value of type int\
    \ in /tmp/tmpq9l1o_2t.php on line 19\nPHP Warning:  Trying to access array offset\
    \ on value of type int in /tmp/tmpq9l1o_2t.php on line 19\nPHP Warning:  Trying\
    \ to access array offset on value of type int in /tmp/tmpq9l1o_2t.php on line\
    \ 19\nPHP Warning:  Trying to access array offset on value of type int in /tmp/tmpq9l1o_2t.php\
    \ on line 19\nPHP Warning:  Trying to access array offset on value of type int\
    \ in /tmp/tmpq9l1o_2t.php on line 19\nPHP Fatal error:  Uncaught Exception: Test\
    \ failed! in /tmp/tmpq9l1o_2t.php:33\nStack trace:\n#0 /tmp/tmpq9l1o_2t.php(43):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpq9l1o_2t.php on line 33\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// In this Kata, you have to sort an array of non-negative integers\
    \ according to\n// number of ones in their binary representation in ascending\
    \ order.\n// For similar number of ones, sort based on decimal value.\n// It must\
    \ be implemented like this:\n// >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4,\
    \ 5]\n// >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n// >>>\
    \ sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\nfunction sort_array($arr) {\n \
    \ $arr = array_map(function($n) {\n    return [$n, decbin($n)];\n  }, $arr);\n\
    \  usort($arr, function($a, $b) {\n    $a_ones = substr_count($a[1], '1');\n \
    \   $b_ones = substr_count($b[1], '1');\n    if ($a_ones === $b_ones) {\n    \
    \  return $a[0] - $b[0];\n    }\n    return $a_ones - $b_ones;\n  });\n  return\
    \ array_map(function($n) {\n    return $n[0];\n  }, $arr);\n}\n\nfunction candidate(...$args)\
    \ {\n    return sort_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 5, 2, 3, 4)) !== array(1, 2, 4, 3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-2, -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0, 2,\
    \ 3, 4)) !== array(0, 1, 2, 4, 3)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2,\
    \ 2, 4, 4, 3, 3, 5, 5, 5, 7, 77)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 6, 44, 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8,\
    \ 16, 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpdsie2fvy.php:32\n\
    Stack trace:\n#0 /tmp/tmpdsie2fvy.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpdsie2fvy.php\
    \ on line 32\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// In this Kata, you have to sort an array of non-negative integers\
    \ according to\n// number of ones in their binary representation in ascending\
    \ order.\n// For similar number of ones, sort based on decimal value.\n// It must\
    \ be implemented like this:\n// >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4,\
    \ 5]\n// >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n// >>>\
    \ sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\nfunction sort_array($arr) {\n \
    \ $ones = [];\n  foreach ($arr as $key => $value) {\n    $ones[$key] = substr_count(decbin($value),\
    \ '1');\n  }\n  array_multisort($ones, SORT_ASC, $arr);\n  return $arr;\n}\n\n\
    function candidate(...$args) {\n    return sort_array(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 5, 2, 3, 4)) !== array(1, 2, 4, 3,\
    \ 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2,\
    \ -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 0, 2, 3, 4)) !== array(0, 1, 2, 4,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !==\
    \ array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 44,\
    \ 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 16,\
    \ 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmppkun4d9c.php:24\n\
    Stack trace:\n#0 /tmp/tmppkun4d9c.php(33): test()\n#1 {main}\n  thrown in /tmp/tmppkun4d9c.php\
    \ on line 24\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// In this Kata, you have to sort an array of non-negative integers\
    \ according to\n// number of ones in their binary representation in ascending\
    \ order.\n// For similar number of ones, sort based on decimal value.\n// It must\
    \ be implemented like this:\n// >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4,\
    \ 5]\n// >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n// >>>\
    \ sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\nfunction sort_array($arr) {\n \
    \ $arr = array_map(function($n) {\n    return [$n, decbin($n)];\n  }, $arr);\n\
    \  usort($arr, function($a, $b) {\n    $a1 = substr_count($a[1], '1');\n    $b1\
    \ = substr_count($b[1], '1');\n    if ($a1 == $b1) {\n      return $a[0] - $b[0];\n\
    \    }\n    return $a1 - $b1;\n  });\n  return array_map(function($n) {\n    return\
    \ $n[0];\n  }, $arr);\n}\n\nfunction candidate(...$args) {\n    return sort_array(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 5, 2, 3, 4)) !== array(1,\
    \ 2, 4, 3, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2,\
    \ -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 0, 2, 3, 4)) !== array(0, 1, 2, 4,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !==\
    \ array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 44,\
    \ 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 16,\
    \ 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmphusjkc62.php:32\n\
    Stack trace:\n#0 /tmp/tmphusjkc62.php(41): test()\n#1 {main}\n  thrown in /tmp/tmphusjkc62.php\
    \ on line 32\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// In this Kata, you have to sort an array of non-negative integers\
    \ according to\n// number of ones in their binary representation in ascending\
    \ order.\n// For similar number of ones, sort based on decimal value.\n// It must\
    \ be implemented like this:\n// >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4,\
    \ 5]\n// >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n// >>>\
    \ sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\nfunction sort_array($arr) {\n \
    \   $arr = array_map(function($n) {\n        return [$n, decbin($n)];\n    },\
    \ $arr);\n    usort($arr, function($a, $b) {\n        $a_ones = substr_count($a[1],\
    \ '1');\n        $b_ones = substr_count($b[1], '1');\n        if ($a_ones == $b_ones)\
    \ {\n            return $a[0] - $b[0];\n        }\n        return $a_ones - $b_ones;\n\
    \    });\n    return array_map(function($n) {\n        return $n[0];\n    }, $arr);\n\
    }\n\nfunction candidate(...$args) {\n    return sort_array(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 5, 2, 3, 4)) !== array(1, 2, 4, 3,\
    \ 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2,\
    \ -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 0, 2, 3, 4)) !== array(0, 1, 2, 4,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !==\
    \ array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 44,\
    \ 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 16,\
    \ 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp2zfzoz45.php:32\n\
    Stack trace:\n#0 /tmp/tmp2zfzoz45.php(41): test()\n#1 {main}\n  thrown in /tmp/tmp2zfzoz45.php\
    \ on line 32\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// In this Kata, you have to sort an array of non-negative integers\
    \ according to\n// number of ones in their binary representation in ascending\
    \ order.\n// For similar number of ones, sort based on decimal value.\n// It must\
    \ be implemented like this:\n// >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4,\
    \ 5]\n// >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n// >>>\
    \ sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\nfunction sort_array($arr) {\n \
    \   $arr = array_map(function($num) {\n        return [\n            'num' =>\
    \ $num,\n            'ones' => substr_count(decbin($num), '1'),\n        ];\n\
    \    }, $arr);\n    usort($arr, function($a, $b) {\n        if ($a['ones'] ==\
    \ $b['ones']) {\n            return $a['num'] - $b['num'];\n        }\n      \
    \  return $a['ones'] - $b['ones'];\n    });\n    return array_map(function($num)\
    \ {\n        return $num['num'];\n    }, $arr);\n}\n\nfunction candidate(...$args)\
    \ {\n    return sort_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 5, 2, 3, 4)) !== array(1, 2, 4, 3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-2, -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0, 2,\
    \ 3, 4)) !== array(0, 1, 2, 4, 3)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2,\
    \ 2, 4, 4, 3, 3, 5, 5, 5, 7, 77)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 6, 44, 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8,\
    \ 16, 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp0n4d5yya.php:33\n\
    Stack trace:\n#0 /tmp/tmp0n4d5yya.php(42): test()\n#1 {main}\n  thrown in /tmp/tmp0n4d5yya.php\
    \ on line 33\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// In this Kata, you have to sort an array of non-negative integers\
    \ according to\n// number of ones in their binary representation in ascending\
    \ order.\n// For similar number of ones, sort based on decimal value.\n// It must\
    \ be implemented like this:\n// >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4,\
    \ 5]\n// >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n// >>>\
    \ sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\nfunction sort_array($arr) {\n \
    \ $arr = array_map(function($n) {\n    return [$n, decbin($n)];\n  }, $arr);\n\
    \  usort($arr, function($a, $b) {\n    $a_ones = substr_count($a[1], '1');\n \
    \   $b_ones = substr_count($b[1], '1');\n    if ($a_ones == $b_ones) {\n     \
    \ return $a[0] - $b[0];\n    }\n    return $a_ones - $b_ones;\n  });\n  return\
    \ array_map(function($n) {\n    return $n[0];\n  }, $arr);\n}\n\necho implode(',\
    \ ', sort_array([1, 5, 2, 3, 4])) . \"\\n\";\necho implode(', ', sort_array([-2,\
    \ -3, -4, -5, -6])) . \"\\n\";\necho implode(', ', sort_array([1, 0, 2, 3, 4]))\
    \ . \"\\n\";\nfunction candidate(...$args) {\n    return sort_array(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 5, 2, 3, 4)) !== array(1,\
    \ 2, 4, 3, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2,\
    \ -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 0, 2, 3, 4)) !== array(0, 1, 2, 4,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !==\
    \ array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 44,\
    \ 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 16,\
    \ 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "1, 2, 4, 3, 5\n-6, -4, -5, -3, -2\n0, 1, 2, 4, 3\n"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpjhlt8_9z.php:35\n\
    Stack trace:\n#0 /tmp/tmpjhlt8_9z.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpjhlt8_9z.php\
    \ on line 35\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// In this Kata, you have to sort an array of non-negative integers\
    \ according to\n// number of ones in their binary representation in ascending\
    \ order.\n// For similar number of ones, sort based on decimal value.\n// It must\
    \ be implemented like this:\n// >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4,\
    \ 5]\n// >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n// >>>\
    \ sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\nfunction sort_array($arr) {\n \
    \   $arr = array_map(function($n) {\n        return [$n, decbin($n)];\n    },\
    \ $arr);\n    usort($arr, function($a, $b) {\n        $a = $a[1];\n        $b\
    \ = $b[1];\n        $a = str_split($a);\n        $b = str_split($b);\n       \
    \ $a = array_count_values($a);\n        $b = array_count_values($b);\n       \
    \ if (isset($a['1']) && isset($b['1'])) {\n            if ($a['1'] == $b['1'])\
    \ {\n                return $a[0] - $b[0];\n            }\n            return\
    \ $a['1'] - $b['1'];\n        }\n        if (isset($a['1'])) {\n            return\
    \ -1;\n        }\n        if (isset($b['1'])) {\n            return 1;\n     \
    \   }\n        return $a[0] - $b[0];\n    });\n    $arr = array_map(function($n)\
    \ {\n        return $n[0];\n    }, $arr);\n    return $arr;\n}\n\nfunction candidate(...$args)\
    \ {\n    return sort_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 5, 2, 3, 4)) !== array(1, 2, 4, 3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-2, -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0, 2,\
    \ 3, 4)) !== array(0, 1, 2, 4, 3)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2,\
    \ 2, 4, 4, 3, 3, 5, 5, 5, 7, 77)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 6, 44, 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8,\
    \ 16, 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Warning:  Undefined array key 0 in /tmp/tmphqz2xnlu.php on line 22\n\
    PHP Warning:  Undefined array key 0 in /tmp/tmphqz2xnlu.php on line 22\nPHP Fatal\
    \ error:  Uncaught Exception: Test failed! in /tmp/tmphqz2xnlu.php:46\nStack trace:\n\
    #0 /tmp/tmphqz2xnlu.php(55): test()\n#1 {main}\n  thrown in /tmp/tmphqz2xnlu.php\
    \ on line 46\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// In this Kata, you have to sort an array of non-negative integers\
    \ according to\n// number of ones in their binary representation in ascending\
    \ order.\n// For similar number of ones, sort based on decimal value.\n// It must\
    \ be implemented like this:\n// >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4,\
    \ 5]\n// >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n// >>>\
    \ sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\nfunction sort_array($arr) {\n \
    \ $arr = array_map(function($x) {\n    return [$x, decbin($x)];\n  }, $arr);\n\
    \  usort($arr, function($a, $b) {\n    $a = $a[1];\n    $b = $b[1];\n    $a =\
    \ str_split($a);\n    $b = str_split($b);\n    $a = array_sum($a);\n    $b = array_sum($b);\n\
    \    if ($a == $b) {\n      return $a[0] - $b[0];\n    }\n    return $a - $b;\n\
    \  });\n  $arr = array_map(function($x) {\n    return $x[0];\n  }, $arr);\n  return\
    \ $arr;\n}\n\nfunction candidate(...$args) {\n    return sort_array(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 5, 2, 3, 4)) !== array(1,\
    \ 2, 4, 3, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2,\
    \ -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 0, 2, 3, 4)) !== array(0, 1, 2, 4,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !==\
    \ array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 44,\
    \ 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 16,\
    \ 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: ''
  stderr: "PHP Warning:  Trying to access array offset on value of type int in /tmp/tmp3c0h4lat.php\
    \ on line 21\nPHP Warning:  Trying to access array offset on value of type int\
    \ in /tmp/tmp3c0h4lat.php on line 21\nPHP Warning:  Trying to access array offset\
    \ on value of type int in /tmp/tmp3c0h4lat.php on line 21\nPHP Warning:  Trying\
    \ to access array offset on value of type int in /tmp/tmp3c0h4lat.php on line\
    \ 21\nPHP Warning:  Trying to access array offset on value of type int in /tmp/tmp3c0h4lat.php\
    \ on line 21\nPHP Warning:  Trying to access array offset on value of type int\
    \ in /tmp/tmp3c0h4lat.php on line 21\nPHP Fatal error:  Uncaught Exception: Test\
    \ failed! in /tmp/tmp3c0h4lat.php:36\nStack trace:\n#0 /tmp/tmp3c0h4lat.php(46):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmp3c0h4lat.php on line 36\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// In this Kata, you have to sort an array of non-negative integers\
    \ according to\n// number of ones in their binary representation in ascending\
    \ order.\n// For similar number of ones, sort based on decimal value.\n// It must\
    \ be implemented like this:\n// >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4,\
    \ 5]\n// >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n// >>>\
    \ sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\nfunction sort_array($arr) {\n \
    \ $arr = array_map(function($x) {\n    return [$x, decbin($x)];\n  }, $arr);\n\
    \  usort($arr, function($a, $b) {\n    $a_ones = substr_count($a[1], '1');\n \
    \   $b_ones = substr_count($b[1], '1');\n    if ($a_ones === $b_ones) {\n    \
    \  return $a[0] - $b[0];\n    }\n    return $a_ones - $b_ones;\n  });\n  return\
    \ array_map(function($x) {\n    return $x[0];\n  }, $arr);\n}\n\nfunction candidate(...$args)\
    \ {\n    return sort_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 5, 2, 3, 4)) !== array(1, 2, 4, 3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-2, -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0, 2,\
    \ 3, 4)) !== array(0, 1, 2, 4, 3)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2,\
    \ 2, 4, 4, 3, 3, 5, 5, 5, 7, 77)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 6, 44, 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8,\
    \ 16, 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp359xnf69.php:32\n\
    Stack trace:\n#0 /tmp/tmp359xnf69.php(41): test()\n#1 {main}\n  thrown in /tmp/tmp359xnf69.php\
    \ on line 32\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// In this Kata, you have to sort an array of non-negative integers\
    \ according to\n// number of ones in their binary representation in ascending\
    \ order.\n// For similar number of ones, sort based on decimal value.\n// It must\
    \ be implemented like this:\n// >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4,\
    \ 5]\n// >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n// >>>\
    \ sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\nfunction sort_array($arr) {\n \
    \ $ones = [];\n  $zeros = [];\n  foreach ($arr as $key => $value) {\n    if (decbin($value)\
    \ == 1) {\n      $ones[] = $value;\n    } else {\n      $zeros[] = $value;\n \
    \   }\n  }\n  sort($ones);\n  sort($zeros);\n  return array_merge($ones, $zeros);\n\
    }\n\nfunction candidate(...$args) {\n    return sort_array(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 5, 2, 3, 4)) !== array(1, 2, 4, 3,\
    \ 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2,\
    \ -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 0, 2, 3, 4)) !== array(0, 1, 2, 4,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !==\
    \ array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 44,\
    \ 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 16,\
    \ 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpsh9t5w2v.php:29\n\
    Stack trace:\n#0 /tmp/tmpsh9t5w2v.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpsh9t5w2v.php\
    \ on line 29\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// In this Kata, you have to sort an array of non-negative integers\
    \ according to\n// number of ones in their binary representation in ascending\
    \ order.\n// For similar number of ones, sort based on decimal value.\n// It must\
    \ be implemented like this:\n// >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4,\
    \ 5]\n// >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n// >>>\
    \ sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\nfunction sort_array($arr) {\n \
    \   $arr = array_map(function($n) {\n        return [$n, decbin($n)];\n    },\
    \ $arr);\n    usort($arr, function($a, $b) {\n        $a_ones = substr_count($a[1],\
    \ '1');\n        $b_ones = substr_count($b[1], '1');\n        if ($a_ones ===\
    \ $b_ones) {\n            return $a[0] - $b[0];\n        }\n        return $a_ones\
    \ - $b_ones;\n    });\n    return array_map(function($n) {\n        return $n[0];\n\
    \    }, $arr);\n}\n\nfunction candidate(...$args) {\n    return sort_array(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 5, 2, 3, 4)) !== array(1,\
    \ 2, 4, 3, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2,\
    \ -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 0, 2, 3, 4)) !== array(0, 1, 2, 4,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !==\
    \ array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 44,\
    \ 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 16,\
    \ 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpmu9z2y6m.php:32\n\
    Stack trace:\n#0 /tmp/tmpmu9z2y6m.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpmu9z2y6m.php\
    \ on line 32\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// In this Kata, you have to sort an array of non-negative integers\
    \ according to\n// number of ones in their binary representation in ascending\
    \ order.\n// For similar number of ones, sort based on decimal value.\n// It must\
    \ be implemented like this:\n// >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4,\
    \ 5]\n// >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n// >>>\
    \ sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\nfunction sort_array($arr) {\n \
    \   $ones = [];\n    foreach ($arr as $key => $value) {\n        $ones[$key] =\
    \ substr_count(decbin($value), '1');\n    }\n    array_multisort($ones, SORT_ASC,\
    \ $arr);\n    return $arr;\n}\n\nfunction candidate(...$args) {\n    return sort_array(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 5, 2, 3, 4)) !== array(1,\
    \ 2, 4, 3, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2,\
    \ -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 0, 2, 3, 4)) !== array(0, 1, 2, 4,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !==\
    \ array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 44,\
    \ 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 16,\
    \ 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpjzjdn3sn.php:24\n\
    Stack trace:\n#0 /tmp/tmpjzjdn3sn.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpjzjdn3sn.php\
    \ on line 24\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// In this Kata, you have to sort an array of non-negative integers\
    \ according to\n// number of ones in their binary representation in ascending\
    \ order.\n// For similar number of ones, sort based on decimal value.\n// It must\
    \ be implemented like this:\n// >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4,\
    \ 5]\n// >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n// >>>\
    \ sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\nfunction sort_array($arr) {\n \
    \ $arr = array_map(function($n) {\n    return [$n, decbin($n)];\n  }, $arr);\n\
    \  usort($arr, function($a, $b) {\n    $a_ones = substr_count($a[1], '1');\n \
    \   $b_ones = substr_count($b[1], '1');\n    if ($a_ones == $b_ones) {\n     \
    \ return $a[0] - $b[0];\n    }\n    return $a_ones - $b_ones;\n  });\n  return\
    \ array_map(function($n) {\n    return $n[0];\n  }, $arr);\n}\n\nfunction candidate(...$args)\
    \ {\n    return sort_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 5, 2, 3, 4)) !== array(1, 2, 4, 3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-2, -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0, 2,\
    \ 3, 4)) !== array(0, 1, 2, 4, 3)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2,\
    \ 2, 4, 4, 3, 3, 5, 5, 5, 7, 77)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 6, 44, 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8,\
    \ 16, 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpa5mm_0k4.php:32\n\
    Stack trace:\n#0 /tmp/tmpa5mm_0k4.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpa5mm_0k4.php\
    \ on line 32\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// In this Kata, you have to sort an array of non-negative integers\
    \ according to\n// number of ones in their binary representation in ascending\
    \ order.\n// For similar number of ones, sort based on decimal value.\n// It must\
    \ be implemented like this:\n// >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4,\
    \ 5]\n// >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n// >>>\
    \ sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\nfunction sort_array($arr) {\n \
    \ $arr = array_map(function($n) {\n    return [decbin($n), $n];\n  }, $arr);\n\
    \  usort($arr, function($a, $b) {\n    $a_ones = substr_count($a[0], '1');\n \
    \   $b_ones = substr_count($b[0], '1');\n    if ($a_ones == $b_ones) {\n     \
    \ return $a[1] - $b[1];\n    }\n    return $a_ones - $b_ones;\n  });\n  return\
    \ array_map(function($n) {\n    return $n[1];\n  }, $arr);\n}\n\nfunction candidate(...$args)\
    \ {\n    return sort_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 5, 2, 3, 4)) !== array(1, 2, 4, 3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-2, -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0, 2,\
    \ 3, 4)) !== array(0, 1, 2, 4, 3)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2,\
    \ 2, 4, 4, 3, 3, 5, 5, 5, 7, 77)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 6, 44, 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8,\
    \ 16, 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp7oa6zw43.php:32\n\
    Stack trace:\n#0 /tmp/tmp7oa6zw43.php(41): test()\n#1 {main}\n  thrown in /tmp/tmp7oa6zw43.php\
    \ on line 32\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// In this Kata, you have to sort an array of non-negative integers\
    \ according to\n// number of ones in their binary representation in ascending\
    \ order.\n// For similar number of ones, sort based on decimal value.\n// It must\
    \ be implemented like this:\n// >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4,\
    \ 5]\n// >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n// >>>\
    \ sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\nfunction sort_array($arr) {\n \
    \   $arr = array_map(function($n) {\n        return [$n, decbin($n)];\n    },\
    \ $arr);\n    usort($arr, function($a, $b) {\n        $a = $a[1];\n        $b\
    \ = $b[1];\n        $a = substr_count($a, '1');\n        $b = substr_count($b,\
    \ '1');\n        if ($a === $b) {\n            return $a[0] - $b[0];\n       \
    \ }\n        return $a - $b;\n    });\n    return array_map(function($n) {\n \
    \       return $n[0];\n    }, $arr);\n}\n\nfunction candidate(...$args) {\n  \
    \  return sort_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 5, 2, 3, 4)) !== array(1, 2, 4, 3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-2, -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0, 2,\
    \ 3, 4)) !== array(0, 1, 2, 4, 3)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2,\
    \ 2, 4, 4, 3, 3, 5, 5, 5, 7, 77)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 6, 44, 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8,\
    \ 16, 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Warning:  Trying to access array offset on value of type int in /tmp/tmpo0zn7ot2.php\
    \ on line 19\nPHP Warning:  Trying to access array offset on value of type int\
    \ in /tmp/tmpo0zn7ot2.php on line 19\nPHP Warning:  Trying to access array offset\
    \ on value of type int in /tmp/tmpo0zn7ot2.php on line 19\nPHP Warning:  Trying\
    \ to access array offset on value of type int in /tmp/tmpo0zn7ot2.php on line\
    \ 19\nPHP Warning:  Trying to access array offset on value of type int in /tmp/tmpo0zn7ot2.php\
    \ on line 19\nPHP Warning:  Trying to access array offset on value of type int\
    \ in /tmp/tmpo0zn7ot2.php on line 19\nPHP Fatal error:  Uncaught Exception: Test\
    \ failed! in /tmp/tmpo0zn7ot2.php:33\nStack trace:\n#0 /tmp/tmpo0zn7ot2.php(43):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpo0zn7ot2.php on line 33\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// In this Kata, you have to sort an array of non-negative integers\
    \ according to\n// number of ones in their binary representation in ascending\
    \ order.\n// For similar number of ones, sort based on decimal value.\n// It must\
    \ be implemented like this:\n// >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4,\
    \ 5]\n// >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n// >>>\
    \ sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\nfunction sort_array($arr) {\n \
    \ $arr = array_map(function($n) {\n    return [$n, decbin($n)];\n  }, $arr);\n\
    \  usort($arr, function($a, $b) {\n    $a = $a[1];\n    $b = $b[1];\n    $a =\
    \ str_split($a);\n    $b = str_split($b);\n    $a = array_sum($a);\n    $b = array_sum($b);\n\
    \    if ($a === $b) {\n      return $a[0] - $b[0];\n    }\n    return $a - $b;\n\
    \  });\n  return array_map(function($n) {\n    return $n[0];\n  }, $arr);\n}\n\
    \nfunction candidate(...$args) {\n    return sort_array(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 5, 2, 3, 4)) !== array(1, 2, 4, 3,\
    \ 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2,\
    \ -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 0, 2, 3, 4)) !== array(0, 1, 2, 4,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !==\
    \ array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 44,\
    \ 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 16,\
    \ 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: ''
  stderr: "PHP Warning:  Trying to access array offset on value of type int in /tmp/tmplfirj202.php\
    \ on line 21\nPHP Warning:  Trying to access array offset on value of type int\
    \ in /tmp/tmplfirj202.php on line 21\nPHP Warning:  Trying to access array offset\
    \ on value of type int in /tmp/tmplfirj202.php on line 21\nPHP Warning:  Trying\
    \ to access array offset on value of type int in /tmp/tmplfirj202.php on line\
    \ 21\nPHP Warning:  Trying to access array offset on value of type int in /tmp/tmplfirj202.php\
    \ on line 21\nPHP Warning:  Trying to access array offset on value of type int\
    \ in /tmp/tmplfirj202.php on line 21\nPHP Fatal error:  Uncaught Exception: Test\
    \ failed! in /tmp/tmplfirj202.php:35\nStack trace:\n#0 /tmp/tmplfirj202.php(45):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmplfirj202.php on line 35\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// In this Kata, you have to sort an array of non-negative integers\
    \ according to\n// number of ones in their binary representation in ascending\
    \ order.\n// For similar number of ones, sort based on decimal value.\n// It must\
    \ be implemented like this:\n// >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4,\
    \ 5]\n// >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n// >>>\
    \ sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\nfunction sort_array($arr) {\n \
    \   $arr = array_map(function($n) {\n        return [$n, decbin($n)];\n    },\
    \ $arr);\n    usort($arr, function($a, $b) {\n        $a_ones = substr_count($a[1],\
    \ '1');\n        $b_ones = substr_count($b[1], '1');\n        if ($a_ones ===\
    \ $b_ones) {\n            return $a[0] - $b[0];\n        }\n        return $a_ones\
    \ - $b_ones;\n    });\n    return array_map(function($n) {\n        return $n[0];\n\
    \    }, $arr);\n}\n\nfunction candidate(...$args) {\n    return sort_array(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 5, 2, 3, 4)) !== array(1,\
    \ 2, 4, 3, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2,\
    \ -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 0, 2, 3, 4)) !== array(0, 1, 2, 4,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !==\
    \ array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 44,\
    \ 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 16,\
    \ 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpvgexu5_z.php:32\n\
    Stack trace:\n#0 /tmp/tmpvgexu5_z.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpvgexu5_z.php\
    \ on line 32\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// In this Kata, you have to sort an array of non-negative integers\
    \ according to\n// number of ones in their binary representation in ascending\
    \ order.\n// For similar number of ones, sort based on decimal value.\n// It must\
    \ be implemented like this:\n// >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4,\
    \ 5]\n// >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n// >>>\
    \ sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\nfunction sort_array($arr) {\n \
    \ $arr = array_map(function($n) {\n    return [$n, decbin($n)];\n  }, $arr);\n\
    \  usort($arr, function($a, $b) {\n    $a = $a[1];\n    $b = $b[1];\n    $a_ones\
    \ = substr_count($a, '1');\n    $b_ones = substr_count($b, '1');\n    if ($a_ones\
    \ == $b_ones) {\n      return $a > $b ? 1 : -1;\n    }\n    return $a_ones > $b_ones\
    \ ? 1 : -1;\n  });\n  return array_map(function($n) {\n    return $n[0];\n  },\
    \ $arr);\n}\n\nfunction candidate(...$args) {\n    return sort_array(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 5, 2, 3, 4)) !== array(1,\
    \ 2, 4, 3, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2,\
    \ -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 0, 2, 3, 4)) !== array(0, 1, 2, 4,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !==\
    \ array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 44,\
    \ 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 16,\
    \ 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpaudsgbej.php:34\n\
    Stack trace:\n#0 /tmp/tmpaudsgbej.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpaudsgbej.php\
    \ on line 34\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// In this Kata, you have to sort an array of non-negative integers\
    \ according to\n// number of ones in their binary representation in ascending\
    \ order.\n// For similar number of ones, sort based on decimal value.\n// It must\
    \ be implemented like this:\n// >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4,\
    \ 5]\n// >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n// >>>\
    \ sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\nfunction sort_array($arr) {\n \
    \ $arr = array_map(function($n) {\n    return [$n, decbin($n)];\n  }, $arr);\n\
    \  usort($arr, function($a, $b) {\n    $a_ones = substr_count($a[1], '1');\n \
    \   $b_ones = substr_count($b[1], '1');\n    if ($a_ones == $b_ones) {\n     \
    \ return $a[0] - $b[0];\n    }\n    return $a_ones - $b_ones;\n  });\n  return\
    \ array_map(function($n) {\n    return $n[0];\n  }, $arr);\n}\n\nfunction candidate(...$args)\
    \ {\n    return sort_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 5, 2, 3, 4)) !== array(1, 2, 4, 3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-2, -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0, 2,\
    \ 3, 4)) !== array(0, 1, 2, 4, 3)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2,\
    \ 2, 4, 4, 3, 3, 5, 5, 5, 7, 77)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 6, 44, 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8,\
    \ 16, 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpsx2y9bt1.php:32\n\
    Stack trace:\n#0 /tmp/tmpsx2y9bt1.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpsx2y9bt1.php\
    \ on line 32\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// In this Kata, you have to sort an array of non-negative integers\
    \ according to\n// number of ones in their binary representation in ascending\
    \ order.\n// For similar number of ones, sort based on decimal value.\n// It must\
    \ be implemented like this:\n// >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4,\
    \ 5]\n// >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n// >>>\
    \ sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\nfunction sort_array($arr) {\n \
    \   $arr = array_map(function($n) {\n        return [$n, decbin($n)];\n    },\
    \ $arr);\n    usort($arr, function($a, $b) {\n        $a1 = substr_count($a[1],\
    \ '1');\n        $b1 = substr_count($b[1], '1');\n        if ($a1 == $b1) {\n\
    \            return $a[0] - $b[0];\n        }\n        return $a1 - $b1;\n   \
    \ });\n    return array_map(function($n) {\n        return $n[0];\n    }, $arr);\n\
    }\n\nfunction candidate(...$args) {\n    return sort_array(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 5, 2, 3, 4)) !== array(1, 2, 4, 3,\
    \ 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2,\
    \ -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 0, 2, 3, 4)) !== array(0, 1, 2, 4,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !==\
    \ array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 44,\
    \ 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 16,\
    \ 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp1ymsdjbp.php:32\n\
    Stack trace:\n#0 /tmp/tmp1ymsdjbp.php(41): test()\n#1 {main}\n  thrown in /tmp/tmp1ymsdjbp.php\
    \ on line 32\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// In this Kata, you have to sort an array of non-negative integers\
    \ according to\n// number of ones in their binary representation in ascending\
    \ order.\n// For similar number of ones, sort based on decimal value.\n// It must\
    \ be implemented like this:\n// >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4,\
    \ 5]\n// >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n// >>>\
    \ sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\nfunction sort_array($arr) {\n \
    \ $ones = [];\n  foreach ($arr as $key => $value) {\n    $ones[$key] = substr_count(decbin($value),\
    \ '1');\n  }\n  array_multisort($ones, SORT_ASC, $arr);\n  return $arr;\n}\n\n\
    function candidate(...$args) {\n    return sort_array(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 5, 2, 3, 4)) !== array(1, 2, 4, 3,\
    \ 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2,\
    \ -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 0, 2, 3, 4)) !== array(0, 1, 2, 4,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !==\
    \ array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 44,\
    \ 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 16,\
    \ 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpq0bjwkda.php:24\n\
    Stack trace:\n#0 /tmp/tmpq0bjwkda.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpq0bjwkda.php\
    \ on line 24\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// In this Kata, you have to sort an array of non-negative integers\
    \ according to\n// number of ones in their binary representation in ascending\
    \ order.\n// For similar number of ones, sort based on decimal value.\n// It must\
    \ be implemented like this:\n// >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4,\
    \ 5]\n// >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n// >>>\
    \ sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\nfunction sort_array($arr) {\n \
    \ $arr = array_map(function($n) {\n    return [$n, decbin($n)];\n  }, $arr);\n\
    \  usort($arr, function($a, $b) {\n    $a_ones = substr_count($a[1], '1');\n \
    \   $b_ones = substr_count($b[1], '1');\n    if ($a_ones == $b_ones) {\n     \
    \ return $a[0] - $b[0];\n    }\n    return $a_ones - $b_ones;\n  });\n  return\
    \ array_map(function($n) {\n    return $n[0];\n  }, $arr);\n}\n\nfunction candidate(...$args)\
    \ {\n    return sort_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 5, 2, 3, 4)) !== array(1, 2, 4, 3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-2, -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0, 2,\
    \ 3, 4)) !== array(0, 1, 2, 4, 3)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2,\
    \ 2, 4, 4, 3, 3, 5, 5, 5, 7, 77)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 6, 44, 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8,\
    \ 16, 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpmrz9qcsg.php:32\n\
    Stack trace:\n#0 /tmp/tmpmrz9qcsg.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpmrz9qcsg.php\
    \ on line 32\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// In this Kata, you have to sort an array of non-negative integers\
    \ according to\n// number of ones in their binary representation in ascending\
    \ order.\n// For similar number of ones, sort based on decimal value.\n// It must\
    \ be implemented like this:\n// >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4,\
    \ 5]\n// >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n// >>>\
    \ sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\nfunction sort_array($arr) {\n \
    \ $arr = array_map(function($x) {\n    return [$x, decbin($x)];\n  }, $arr);\n\
    \  usort($arr, function($a, $b) {\n    $a = $a[1];\n    $b = $b[1];\n    $a =\
    \ str_split($a);\n    $b = str_split($b);\n    $a = array_sum($a);\n    $b = array_sum($b);\n\
    \    if ($a == $b) {\n      return $a[0] - $b[0];\n    }\n    return $a - $b;\n\
    \  });\n  $arr = array_map(function($x) {\n    return $x[0];\n  }, $arr);\n  return\
    \ $arr;\n}\n\nfunction candidate(...$args) {\n    return sort_array(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 5, 2, 3, 4)) !== array(1,\
    \ 2, 4, 3, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2,\
    \ -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 0, 2, 3, 4)) !== array(0, 1, 2, 4,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !==\
    \ array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 44,\
    \ 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 16,\
    \ 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: ''
  stderr: "PHP Warning:  Trying to access array offset on value of type int in /tmp/tmpxq7dbt8_.php\
    \ on line 21\nPHP Warning:  Trying to access array offset on value of type int\
    \ in /tmp/tmpxq7dbt8_.php on line 21\nPHP Warning:  Trying to access array offset\
    \ on value of type int in /tmp/tmpxq7dbt8_.php on line 21\nPHP Warning:  Trying\
    \ to access array offset on value of type int in /tmp/tmpxq7dbt8_.php on line\
    \ 21\nPHP Warning:  Trying to access array offset on value of type int in /tmp/tmpxq7dbt8_.php\
    \ on line 21\nPHP Warning:  Trying to access array offset on value of type int\
    \ in /tmp/tmpxq7dbt8_.php on line 21\nPHP Fatal error:  Uncaught Exception: Test\
    \ failed! in /tmp/tmpxq7dbt8_.php:36\nStack trace:\n#0 /tmp/tmpxq7dbt8_.php(46):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpxq7dbt8_.php on line 36\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// In this Kata, you have to sort an array of non-negative integers\
    \ according to\n// number of ones in their binary representation in ascending\
    \ order.\n// For similar number of ones, sort based on decimal value.\n// It must\
    \ be implemented like this:\n// >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4,\
    \ 5]\n// >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n// >>>\
    \ sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\nfunction sort_array($arr) {\n \
    \ $arr = array_map(function($n) {\n    return [$n, decbin($n)];\n  }, $arr);\n\
    \  usort($arr, function($a, $b) {\n    $a = $a[1];\n    $b = $b[1];\n    $a =\
    \ str_split($a);\n    $b = str_split($b);\n    $a = array_sum($a);\n    $b = array_sum($b);\n\
    \    if ($a == $b) {\n      return $a[0] - $b[0];\n    }\n    return $a - $b;\n\
    \  });\n  $arr = array_map(function($n) {\n    return $n[0];\n  }, $arr);\n  return\
    \ $arr;\n}\n\nfunction candidate(...$args) {\n    return sort_array(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 5, 2, 3, 4)) !== array(1,\
    \ 2, 4, 3, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2,\
    \ -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 0, 2, 3, 4)) !== array(0, 1, 2, 4,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !==\
    \ array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 44,\
    \ 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 16,\
    \ 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: ''
  stderr: "PHP Warning:  Trying to access array offset on value of type int in /tmp/tmpn1xb5yl7.php\
    \ on line 21\nPHP Warning:  Trying to access array offset on value of type int\
    \ in /tmp/tmpn1xb5yl7.php on line 21\nPHP Warning:  Trying to access array offset\
    \ on value of type int in /tmp/tmpn1xb5yl7.php on line 21\nPHP Warning:  Trying\
    \ to access array offset on value of type int in /tmp/tmpn1xb5yl7.php on line\
    \ 21\nPHP Warning:  Trying to access array offset on value of type int in /tmp/tmpn1xb5yl7.php\
    \ on line 21\nPHP Warning:  Trying to access array offset on value of type int\
    \ in /tmp/tmpn1xb5yl7.php on line 21\nPHP Fatal error:  Uncaught Exception: Test\
    \ failed! in /tmp/tmpn1xb5yl7.php:36\nStack trace:\n#0 /tmp/tmpn1xb5yl7.php(46):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpn1xb5yl7.php on line 36\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// In this Kata, you have to sort an array of non-negative integers\
    \ according to\n// number of ones in their binary representation in ascending\
    \ order.\n// For similar number of ones, sort based on decimal value.\n// It must\
    \ be implemented like this:\n// >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4,\
    \ 5]\n// >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n// >>>\
    \ sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\nfunction sort_array($arr) {\n \
    \ $sorted = [];\n  foreach ($arr as $key => $value) {\n    $sorted[$key] = decbin($value);\n\
    \  }\n  asort($sorted);\n  foreach ($sorted as $key => $value) {\n    $sorted[$key]\
    \ = bindec($value);\n  }\n  return $sorted;\n}\n\nfunction candidate(...$args)\
    \ {\n    return sort_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 5, 2, 3, 4)) !== array(1, 2, 4, 3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-2, -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0, 2,\
    \ 3, 4)) !== array(0, 1, 2, 4, 3)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2,\
    \ 2, 4, 4, 3, 3, 5, 5, 5, 7, 77)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 6, 44, 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8,\
    \ 16, 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp07p3n6v3.php:26\n\
    Stack trace:\n#0 /tmp/tmp07p3n6v3.php(36): test()\n#1 {main}\n  thrown in /tmp/tmp07p3n6v3.php\
    \ on line 26\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// In this Kata, you have to sort an array of non-negative integers\
    \ according to\n// number of ones in their binary representation in ascending\
    \ order.\n// For similar number of ones, sort based on decimal value.\n// It must\
    \ be implemented like this:\n// >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4,\
    \ 5]\n// >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n// >>>\
    \ sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\nfunction sort_array($arr) {\n \
    \ $arr = array_map(function($n) {\n    return [$n, decbin($n)];\n  }, $arr);\n\
    \  usort($arr, function($a, $b) {\n    $a1 = substr_count($a[1], '1');\n    $b1\
    \ = substr_count($b[1], '1');\n    if ($a1 == $b1) {\n      return $a[0] - $b[0];\n\
    \    }\n    return $a1 - $b1;\n  });\n  return array_map(function($n) {\n    return\
    \ $n[0];\n  }, $arr);\n}\n\nfunction candidate(...$args) {\n    return sort_array(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 5, 2, 3, 4)) !== array(1,\
    \ 2, 4, 3, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2,\
    \ -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 0, 2, 3, 4)) !== array(0, 1, 2, 4,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !==\
    \ array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 44,\
    \ 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 16,\
    \ 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmphu8tbt9v.php:32\n\
    Stack trace:\n#0 /tmp/tmphu8tbt9v.php(41): test()\n#1 {main}\n  thrown in /tmp/tmphu8tbt9v.php\
    \ on line 32\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// In this Kata, you have to sort an array of non-negative integers\
    \ according to\n// number of ones in their binary representation in ascending\
    \ order.\n// For similar number of ones, sort based on decimal value.\n// It must\
    \ be implemented like this:\n// >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4,\
    \ 5]\n// >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n// >>>\
    \ sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\nfunction sort_array($arr) {\n \
    \ $arr = array_map(function($n) {\n    return [$n, decbin($n)];\n  }, $arr);\n\
    \  usort($arr, function($a, $b) {\n    $a_ones = substr_count($a[1], '1');\n \
    \   $b_ones = substr_count($b[1], '1');\n    if ($a_ones === $b_ones) {\n    \
    \  return $a[0] - $b[0];\n    }\n    return $a_ones - $b_ones;\n  });\n  return\
    \ array_map(function($n) {\n    return $n[0];\n  }, $arr);\n}\n\nfunction candidate(...$args)\
    \ {\n    return sort_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 5, 2, 3, 4)) !== array(1, 2, 4, 3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-2, -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0, 2,\
    \ 3, 4)) !== array(0, 1, 2, 4, 3)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2,\
    \ 2, 4, 4, 3, 3, 5, 5, 5, 7, 77)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 6, 44, 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8,\
    \ 16, 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp7geoj8dv.php:32\n\
    Stack trace:\n#0 /tmp/tmp7geoj8dv.php(41): test()\n#1 {main}\n  thrown in /tmp/tmp7geoj8dv.php\
    \ on line 32\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// In this Kata, you have to sort an array of non-negative integers\
    \ according to\n// number of ones in their binary representation in ascending\
    \ order.\n// For similar number of ones, sort based on decimal value.\n// It must\
    \ be implemented like this:\n// >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4,\
    \ 5]\n// >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n// >>>\
    \ sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\nfunction sort_array($arr) {\n \
    \ $arr = array_map(function($v) {\n    return [$v, decbin($v)];\n  }, $arr);\n\
    \  usort($arr, function($a, $b) {\n    $a_ones = substr_count($a[1], '1');\n \
    \   $b_ones = substr_count($b[1], '1');\n    if ($a_ones == $b_ones) {\n     \
    \ return $a[0] - $b[0];\n    }\n    return $a_ones - $b_ones;\n  });\n  return\
    \ array_map(function($v) {\n    return $v[0];\n  }, $arr);\n}\n\necho sort_array([1,\
    \ 5, 2, 3, 4]) . PHP_EOL;\necho sort_array([-2, -3, -4, -5, -6]) . PHP_EOL;\n\
    echo sort_array([1, 0, 2, 3, 4]) . PHP_EOL;\nfunction candidate(...$args) {\n\
    \    return sort_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 5, 2, 3, 4)) !== array(1, 2, 4, 3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-2, -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0, 2,\
    \ 3, 4)) !== array(0, 1, 2, 4, 3)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2,\
    \ 2, 4, 4, 3, 3, 5, 5, 5, 7, 77)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 6, 44, 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8,\
    \ 16, 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "Array\nArray\nArray\n"
  stderr: "PHP Warning:  Array to string conversion in /tmp/tmpn9dys0z1.php on line\
    \ 26\nPHP Warning:  Array to string conversion in /tmp/tmpn9dys0z1.php on line\
    \ 27\nPHP Warning:  Array to string conversion in /tmp/tmpn9dys0z1.php on line\
    \ 28\nPHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpn9dys0z1.php:35\n\
    Stack trace:\n#0 /tmp/tmpn9dys0z1.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpn9dys0z1.php\
    \ on line 35\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// In this Kata, you have to sort an array of non-negative integers\
    \ according to\n// number of ones in their binary representation in ascending\
    \ order.\n// For similar number of ones, sort based on decimal value.\n// It must\
    \ be implemented like this:\n// >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4,\
    \ 5]\n// >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n// >>>\
    \ sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\nfunction sort_array($arr) {\n \
    \ $arr = array_map(function($n) {\n    return [$n, decbin($n)];\n  }, $arr);\n\
    \  usort($arr, function($a, $b) {\n    $a_ones = substr_count($a[1], '1');\n \
    \   $b_ones = substr_count($b[1], '1');\n    if ($a_ones == $b_ones) {\n     \
    \ return $a[0] - $b[0];\n    }\n    return $a_ones - $b_ones;\n  });\n  return\
    \ array_map(function($n) {\n    return $n[0];\n  }, $arr);\n}\n\nfunction candidate(...$args)\
    \ {\n    return sort_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 5, 2, 3, 4)) !== array(1, 2, 4, 3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-2, -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0, 2,\
    \ 3, 4)) !== array(0, 1, 2, 4, 3)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2,\
    \ 2, 4, 4, 3, 3, 5, 5, 5, 7, 77)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 6, 44, 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8,\
    \ 16, 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpanz27p3k.php:32\n\
    Stack trace:\n#0 /tmp/tmpanz27p3k.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpanz27p3k.php\
    \ on line 32\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// In this Kata, you have to sort an array of non-negative integers\
    \ according to\n// number of ones in their binary representation in ascending\
    \ order.\n// For similar number of ones, sort based on decimal value.\n// It must\
    \ be implemented like this:\n// >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4,\
    \ 5]\n// >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n// >>>\
    \ sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\nfunction sort_array($arr) {\n \
    \ $arr = array_map(function($x) {\n    return [$x, decbin($x)];\n  }, $arr);\n\
    \  usort($arr, function($a, $b) {\n    $a_ones = substr_count($a[1], '1');\n \
    \   $b_ones = substr_count($b[1], '1');\n    if ($a_ones === $b_ones) {\n    \
    \  return $a[0] - $b[0];\n    }\n    return $a_ones - $b_ones;\n  });\n  return\
    \ array_map(function($x) {\n    return $x[0];\n  }, $arr);\n}\n\nfunction candidate(...$args)\
    \ {\n    return sort_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 5, 2, 3, 4)) !== array(1, 2, 4, 3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-2, -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0, 2,\
    \ 3, 4)) !== array(0, 1, 2, 4, 3)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2,\
    \ 2, 4, 4, 3, 3, 5, 5, 5, 7, 77)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 6, 44, 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8,\
    \ 16, 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp5ypmvmst.php:32\n\
    Stack trace:\n#0 /tmp/tmp5ypmvmst.php(41): test()\n#1 {main}\n  thrown in /tmp/tmp5ypmvmst.php\
    \ on line 32\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// In this Kata, you have to sort an array of non-negative integers\
    \ according to\n// number of ones in their binary representation in ascending\
    \ order.\n// For similar number of ones, sort based on decimal value.\n// It must\
    \ be implemented like this:\n// >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4,\
    \ 5]\n// >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n// >>>\
    \ sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\nfunction sort_array($arr) {\n \
    \ $arr = array_map(function($n) {\n    $n = decbin($n);\n    $n = str_split($n);\n\
    \    $n = array_count_values($n);\n    return [$n[1], $n[0]];\n  }, $arr);\n \
    \ usort($arr, function($a, $b) {\n    if ($a[0] == $b[0]) {\n      return $a[1]\
    \ - $b[1];\n    }\n    return $a[0] - $b[0];\n  });\n  $arr = array_map(function($n)\
    \ {\n    return bindec($n[1]);\n  }, $arr);\n  return $arr;\n}\n\nfunction candidate(...$args)\
    \ {\n    return sort_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 5, 2, 3, 4)) !== array(1, 2, 4, 3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-2, -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0, 2,\
    \ 3, 4)) !== array(0, 1, 2, 4, 3)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2,\
    \ 2, 4, 4, 3, 3, 5, 5, 5, 7, 77)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 6, 44, 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8,\
    \ 16, 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Warning:  Undefined array key 0 in /tmp/tmp3t10k1a_.php on line 14\n\
    PHP Warning:  Undefined array key 0 in /tmp/tmp3t10k1a_.php on line 14\nPHP Fatal\
    \ error:  Uncaught Exception: Test failed! in /tmp/tmp3t10k1a_.php:33\nStack trace:\n\
    #0 /tmp/tmp3t10k1a_.php(43): test()\n#1 {main}\n  thrown in /tmp/tmp3t10k1a_.php\
    \ on line 33\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// In this Kata, you have to sort an array of non-negative integers\
    \ according to\n// number of ones in their binary representation in ascending\
    \ order.\n// For similar number of ones, sort based on decimal value.\n// It must\
    \ be implemented like this:\n// >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4,\
    \ 5]\n// >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n// >>>\
    \ sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\nfunction sort_array($arr) {\n \
    \ $arr = array_map(function($x) {\n    return [$x, decbin($x)];\n  }, $arr);\n\
    \  usort($arr, function($a, $b) {\n    $a1 = substr_count($a[1], '1');\n    $b1\
    \ = substr_count($b[1], '1');\n    if ($a1 == $b1) {\n      return $a[0] - $b[0];\n\
    \    }\n    return $a1 - $b1;\n  });\n  return array_map(function($x) {\n    return\
    \ $x[0];\n  }, $arr);\n}\n\nfunction candidate(...$args) {\n    return sort_array(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 5, 2, 3, 4)) !== array(1,\
    \ 2, 4, 3, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2,\
    \ -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 0, 2, 3, 4)) !== array(0, 1, 2, 4,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !==\
    \ array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 44,\
    \ 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 16,\
    \ 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp1_wztw9k.php:32\n\
    Stack trace:\n#0 /tmp/tmp1_wztw9k.php(41): test()\n#1 {main}\n  thrown in /tmp/tmp1_wztw9k.php\
    \ on line 32\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// In this Kata, you have to sort an array of non-negative integers\
    \ according to\n// number of ones in their binary representation in ascending\
    \ order.\n// For similar number of ones, sort based on decimal value.\n// It must\
    \ be implemented like this:\n// >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4,\
    \ 5]\n// >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n// >>>\
    \ sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\nfunction sort_array($arr) {\n \
    \ $arr = array_map(function($n) {\n    return [$n, decbin($n)];\n  }, $arr);\n\
    \  usort($arr, function($a, $b) {\n    $a_ones = substr_count($a[1], '1');\n \
    \   $b_ones = substr_count($b[1], '1');\n    if ($a_ones == $b_ones) {\n     \
    \ return $a[0] - $b[0];\n    }\n    return $a_ones - $b_ones;\n  });\n  return\
    \ array_map(function($n) {\n    return $n[0];\n  }, $arr);\n}\n\nfunction candidate(...$args)\
    \ {\n    return sort_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 5, 2, 3, 4)) !== array(1, 2, 4, 3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-2, -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0, 2,\
    \ 3, 4)) !== array(0, 1, 2, 4, 3)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2,\
    \ 2, 4, 4, 3, 3, 5, 5, 5, 7, 77)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 6, 44, 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8,\
    \ 16, 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpdyvcrkm0.php:32\n\
    Stack trace:\n#0 /tmp/tmpdyvcrkm0.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpdyvcrkm0.php\
    \ on line 32\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// In this Kata, you have to sort an array of non-negative integers\
    \ according to\n// number of ones in their binary representation in ascending\
    \ order.\n// For similar number of ones, sort based on decimal value.\n// It must\
    \ be implemented like this:\n// >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4,\
    \ 5]\n// >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n// >>>\
    \ sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\nfunction sort_array($arr) {\n \
    \ $arr = array_map(function($n) {\n    return [$n, decbin($n)];\n  }, $arr);\n\
    \  usort($arr, function($a, $b) {\n    $a_ones = substr_count($a[1], '1');\n \
    \   $b_ones = substr_count($b[1], '1');\n    if ($a_ones == $b_ones) {\n     \
    \ return $a[0] - $b[0];\n    }\n    return $a_ones - $b_ones;\n  });\n  return\
    \ array_map(function($n) {\n    return $n[0];\n  }, $arr);\n}\n\nfunction candidate(...$args)\
    \ {\n    return sort_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 5, 2, 3, 4)) !== array(1, 2, 4, 3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-2, -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0, 2,\
    \ 3, 4)) !== array(0, 1, 2, 4, 3)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2,\
    \ 2, 4, 4, 3, 3, 5, 5, 5, 7, 77)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 6, 44, 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8,\
    \ 16, 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpgcxp9el5.php:32\n\
    Stack trace:\n#0 /tmp/tmpgcxp9el5.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpgcxp9el5.php\
    \ on line 32\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// In this Kata, you have to sort an array of non-negative integers\
    \ according to\n// number of ones in their binary representation in ascending\
    \ order.\n// For similar number of ones, sort based on decimal value.\n// It must\
    \ be implemented like this:\n// >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4,\
    \ 5]\n// >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n// >>>\
    \ sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\nfunction sort_array($arr) {\n \
    \ $arr = array_map(function($x) {\n    return [$x, decbin($x)];\n  }, $arr);\n\
    \  usort($arr, function($a, $b) {\n    $a1 = substr_count($a[1], '1');\n    $b1\
    \ = substr_count($b[1], '1');\n    if ($a1 == $b1) {\n      return $a[0] - $b[0];\n\
    \    }\n    return $a1 - $b1;\n  });\n  return array_map(function($x) {\n    return\
    \ $x[0];\n  }, $arr);\n}\n\nfunction candidate(...$args) {\n    return sort_array(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 5, 2, 3, 4)) !== array(1,\
    \ 2, 4, 3, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2,\
    \ -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 0, 2, 3, 4)) !== array(0, 1, 2, 4,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !==\
    \ array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 44,\
    \ 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 16,\
    \ 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpe481odc3.php:32\n\
    Stack trace:\n#0 /tmp/tmpe481odc3.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpe481odc3.php\
    \ on line 32\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// In this Kata, you have to sort an array of non-negative integers\
    \ according to\n// number of ones in their binary representation in ascending\
    \ order.\n// For similar number of ones, sort based on decimal value.\n// It must\
    \ be implemented like this:\n// >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4,\
    \ 5]\n// >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n// >>>\
    \ sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\nfunction sort_array($arr) {\n \
    \ $arr = array_map(function($n) {\n    return [$n, decbin($n)];\n  }, $arr);\n\
    \  usort($arr, function($a, $b) {\n    $a1 = substr_count($a[1], '1');\n    $b1\
    \ = substr_count($b[1], '1');\n    if ($a1 == $b1) {\n      return $a[0] - $b[0];\n\
    \    }\n    return $a1 - $b1;\n  });\n  return array_map(function($n) {\n    return\
    \ $n[0];\n  }, $arr);\n}\n\nfunction candidate(...$args) {\n    return sort_array(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 5, 2, 3, 4)) !== array(1,\
    \ 2, 4, 3, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2,\
    \ -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 0, 2, 3, 4)) !== array(0, 1, 2, 4,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !==\
    \ array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 44,\
    \ 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 16,\
    \ 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpwxeyb8o9.php:32\n\
    Stack trace:\n#0 /tmp/tmpwxeyb8o9.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpwxeyb8o9.php\
    \ on line 32\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// In this Kata, you have to sort an array of non-negative integers\
    \ according to\n// number of ones in their binary representation in ascending\
    \ order.\n// For similar number of ones, sort based on decimal value.\n// It must\
    \ be implemented like this:\n// >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4,\
    \ 5]\n// >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n// >>>\
    \ sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\nfunction sort_array($arr) {\n \
    \ $arr = array_map(function($v) {\n    return [$v, decbin($v)];\n  }, $arr);\n\
    \  usort($arr, function($a, $b) {\n    $a_ones = substr_count($a[1], '1');\n \
    \   $b_ones = substr_count($b[1], '1');\n    if ($a_ones == $b_ones) {\n     \
    \ return $a[0] - $b[0];\n    }\n    return $a_ones - $b_ones;\n  });\n  return\
    \ array_map(function($v) {\n    return $v[0];\n  }, $arr);\n}\n\nfunction candidate(...$args)\
    \ {\n    return sort_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 5, 2, 3, 4)) !== array(1, 2, 4, 3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-2, -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0, 2,\
    \ 3, 4)) !== array(0, 1, 2, 4, 3)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2,\
    \ 2, 4, 4, 3, 3, 5, 5, 5, 7, 77)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 6, 44, 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8,\
    \ 16, 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp3ah4z5le.php:32\n\
    Stack trace:\n#0 /tmp/tmp3ah4z5le.php(41): test()\n#1 {main}\n  thrown in /tmp/tmp3ah4z5le.php\
    \ on line 32\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// In this Kata, you have to sort an array of non-negative integers\
    \ according to\n// number of ones in their binary representation in ascending\
    \ order.\n// For similar number of ones, sort based on decimal value.\n// It must\
    \ be implemented like this:\n// >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4,\
    \ 5]\n// >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n// >>>\
    \ sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\nfunction sort_array($arr) {\n \
    \ $sorted = [];\n  $ones = [];\n  foreach ($arr as $key => $value) {\n    $ones[$key]\
    \ = substr_count(decbin($value), '1');\n  }\n  asort($ones);\n  foreach ($ones\
    \ as $key => $value) {\n    $sorted[] = $arr[$key];\n  }\n  return $sorted;\n\
    }\n\nfunction candidate(...$args) {\n    return sort_array(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 5, 2, 3, 4)) !== array(1, 2, 4, 3,\
    \ 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2,\
    \ -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 0, 2, 3, 4)) !== array(0, 1, 2, 4,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !==\
    \ array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 44,\
    \ 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 16,\
    \ 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpfo4pshqk.php:27\n\
    Stack trace:\n#0 /tmp/tmpfo4pshqk.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpfo4pshqk.php\
    \ on line 27\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// In this Kata, you have to sort an array of non-negative integers\
    \ according to\n// number of ones in their binary representation in ascending\
    \ order.\n// For similar number of ones, sort based on decimal value.\n// It must\
    \ be implemented like this:\n// >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4,\
    \ 5]\n// >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n// >>>\
    \ sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\nfunction sort_array($arr) {\n \
    \ $arr = array_map(function($n) {\n    return [$n, decbin($n)];\n  }, $arr);\n\
    \  usort($arr, function($a, $b) {\n    $a_ones = substr_count($a[1], '1');\n \
    \   $b_ones = substr_count($b[1], '1');\n    if ($a_ones === $b_ones) {\n    \
    \  return $a[0] - $b[0];\n    }\n    return $a_ones - $b_ones;\n  });\n  return\
    \ array_map(function($n) {\n    return $n[0];\n  }, $arr);\n}\n\nfunction candidate(...$args)\
    \ {\n    return sort_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 5, 2, 3, 4)) !== array(1, 2, 4, 3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-2, -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0, 2,\
    \ 3, 4)) !== array(0, 1, 2, 4, 3)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2,\
    \ 2, 4, 4, 3, 3, 5, 5, 5, 7, 77)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 6, 44, 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8,\
    \ 16, 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpuw2rjgnj.php:32\n\
    Stack trace:\n#0 /tmp/tmpuw2rjgnj.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpuw2rjgnj.php\
    \ on line 32\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// In this Kata, you have to sort an array of non-negative integers\
    \ according to\n// number of ones in their binary representation in ascending\
    \ order.\n// For similar number of ones, sort based on decimal value.\n// It must\
    \ be implemented like this:\n// >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4,\
    \ 5]\n// >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n// >>>\
    \ sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\nfunction sort_array($arr) {\n \
    \ $arr = array_map(function($x) {\n    return [$x, decbin($x)];\n  }, $arr);\n\
    \  usort($arr, function($a, $b) {\n    $a_ones = substr_count($a[1], '1');\n \
    \   $b_ones = substr_count($b[1], '1');\n    if ($a_ones == $b_ones) {\n     \
    \ return $a[0] - $b[0];\n    }\n    return $a_ones - $b_ones;\n  });\n  return\
    \ array_map(function($x) {\n    return $x[0];\n  }, $arr);\n}\n\nfunction candidate(...$args)\
    \ {\n    return sort_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 5, 2, 3, 4)) !== array(1, 2, 4, 3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-2, -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0, 2,\
    \ 3, 4)) !== array(0, 1, 2, 4, 3)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2,\
    \ 2, 4, 4, 3, 3, 5, 5, 5, 7, 77)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 6, 44, 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8,\
    \ 16, 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpecnf34yb.php:32\n\
    Stack trace:\n#0 /tmp/tmpecnf34yb.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpecnf34yb.php\
    \ on line 32\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// In this Kata, you have to sort an array of non-negative integers\
    \ according to\n// number of ones in their binary representation in ascending\
    \ order.\n// For similar number of ones, sort based on decimal value.\n// It must\
    \ be implemented like this:\n// >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4,\
    \ 5]\n// >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n// >>>\
    \ sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\nfunction sort_array($arr) {\n \
    \ $arr = array_map(function($num) {\n    return [$num, decbin($num)];\n  }, $arr);\n\
    \  usort($arr, function($a, $b) {\n    $a_ones = substr_count($a[1], '1');\n \
    \   $b_ones = substr_count($b[1], '1');\n    if ($a_ones == $b_ones) {\n     \
    \ return $a[0] - $b[0];\n    }\n    return $a_ones - $b_ones;\n  });\n  return\
    \ array_map(function($num) {\n    return $num[0];\n  }, $arr);\n}\n\nfunction\
    \ candidate(...$args) {\n    return sort_array(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, 5, 2, 3, 4)) !== array(1, 2, 4, 3, 5)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2, -3, -4,\
    \ -5, -6)) !== array(-4, -2, -6, -5, -3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 0, 2, 3, 4)) !== array(0, 1, 2, 4, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 5, 77,\
    \ 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 44, 12, 32,\
    \ 5)) !== array(32, 3, 5, 6, 12, 44)) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 16, 32))\
    \ !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpylqisize.php:32\n\
    Stack trace:\n#0 /tmp/tmpylqisize.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpylqisize.php\
    \ on line 32\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// In this Kata, you have to sort an array of non-negative integers\
    \ according to\n// number of ones in their binary representation in ascending\
    \ order.\n// For similar number of ones, sort based on decimal value.\n// It must\
    \ be implemented like this:\n// >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4,\
    \ 5]\n// >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n// >>>\
    \ sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\nfunction sort_array($arr) {\n \
    \ $arr = array_map(function($n) {\n    $n = decbin($n);\n    $n = str_split($n);\n\
    \    $n = array_count_values($n);\n    return $n[1];\n  }, $arr);\n  $arr = array_combine($arr,\
    \ $arr);\n  ksort($arr);\n  $arr = array_keys($arr);\n  $arr = array_map(function($n)\
    \ {\n    return bindec($n);\n  }, $arr);\n  return $arr;\n}\n\nfunction candidate(...$args)\
    \ {\n    return sort_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 5, 2, 3, 4)) !== array(1, 2, 4, 3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-2, -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0, 2,\
    \ 3, 4)) !== array(0, 1, 2, 4, 3)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2,\
    \ 2, 4, 4, 3, 3, 5, 5, 5, 7, 77)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 6, 44, 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8,\
    \ 16, 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmposc9vu7i.php:30\n\
    Stack trace:\n#0 /tmp/tmposc9vu7i.php(40): test()\n#1 {main}\n  thrown in /tmp/tmposc9vu7i.php\
    \ on line 30\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// In this Kata, you have to sort an array of non-negative integers\
    \ according to\n// number of ones in their binary representation in ascending\
    \ order.\n// For similar number of ones, sort based on decimal value.\n// It must\
    \ be implemented like this:\n// >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4,\
    \ 5]\n// >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n// >>>\
    \ sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\nfunction sort_array($arr) {\n \
    \ $arr = array_map(function($n) {\n    return [$n, decbin($n)];\n  }, $arr);\n\
    \  usort($arr, function($a, $b) {\n    $a_ones = substr_count($a[1], '1');\n \
    \   $b_ones = substr_count($b[1], '1');\n    if ($a_ones == $b_ones) {\n     \
    \ return $a[0] - $b[0];\n    }\n    return $a_ones - $b_ones;\n  });\n  return\
    \ array_map(function($n) {\n    return $n[0];\n  }, $arr);\n}\n\necho implode(',\
    \ ', sort_array([1, 5, 2, 3, 4])) . \"\\n\";\necho implode(', ', sort_array([-2,\
    \ -3, -4, -5, -6])) . \"\\n\";\necho implode(', ', sort_array([1, 0, 2, 3, 4]))\
    \ . \"\\n\";\nfunction candidate(...$args) {\n    return sort_array(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 5, 2, 3, 4)) !== array(1,\
    \ 2, 4, 3, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2,\
    \ -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 0, 2, 3, 4)) !== array(0, 1, 2, 4,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !==\
    \ array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 44,\
    \ 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 16,\
    \ 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "1, 2, 4, 3, 5\n-6, -4, -5, -3, -2\n0, 1, 2, 4, 3\n"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmporh45n62.php:35\n\
    Stack trace:\n#0 /tmp/tmporh45n62.php(44): test()\n#1 {main}\n  thrown in /tmp/tmporh45n62.php\
    \ on line 35\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// In this Kata, you have to sort an array of non-negative integers\
    \ according to\n// number of ones in their binary representation in ascending\
    \ order.\n// For similar number of ones, sort based on decimal value.\n// It must\
    \ be implemented like this:\n// >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4,\
    \ 5]\n// >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n// >>>\
    \ sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\nfunction sort_array($arr) {\n \
    \ $arr = array_map(function($num) {\n    return [$num, decbin($num)];\n  }, $arr);\n\
    \  usort($arr, function($a, $b) {\n    $a_ones = substr_count($a[1], '1');\n \
    \   $b_ones = substr_count($b[1], '1');\n    if ($a_ones == $b_ones) {\n     \
    \ return $a[0] - $b[0];\n    }\n    return $a_ones - $b_ones;\n  });\n  return\
    \ array_map(function($num) {\n    return $num[0];\n  }, $arr);\n}\n\nfunction\
    \ candidate(...$args) {\n    return sort_array(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, 5, 2, 3, 4)) !== array(1, 2, 4, 3, 5)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2, -3, -4,\
    \ -5, -6)) !== array(-4, -2, -6, -5, -3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 0, 2, 3, 4)) !== array(0, 1, 2, 4, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 5, 77,\
    \ 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 44, 12, 32,\
    \ 5)) !== array(32, 3, 5, 6, 12, 44)) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 16, 32))\
    \ !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp8z6520vc.php:32\n\
    Stack trace:\n#0 /tmp/tmp8z6520vc.php(41): test()\n#1 {main}\n  thrown in /tmp/tmp8z6520vc.php\
    \ on line 32\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// In this Kata, you have to sort an array of non-negative integers\
    \ according to\n// number of ones in their binary representation in ascending\
    \ order.\n// For similar number of ones, sort based on decimal value.\n// It must\
    \ be implemented like this:\n// >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4,\
    \ 5]\n// >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n// >>>\
    \ sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\nfunction sort_array($arr) {\n \
    \ $ones = [];\n  foreach ($arr as $key => $value) {\n    $ones[$key] = substr_count(decbin($value),\
    \ '1');\n  }\n  array_multisort($ones, SORT_ASC, $arr);\n  return $arr;\n}\n\n\
    echo sort_array([1, 5, 2, 3, 4]);\necho sort_array([-2, -3, -4, -5, -6]);\necho\
    \ sort_array([1, 0, 2, 3, 4]);\nfunction candidate(...$args) {\n    return sort_array(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 5, 2, 3, 4)) !== array(1,\
    \ 2, 4, 3, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2,\
    \ -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 0, 2, 3, 4)) !== array(0, 1, 2, 4,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !==\
    \ array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 44,\
    \ 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 16,\
    \ 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: ArrayArrayArray
  stderr: "PHP Warning:  Array to string conversion in /tmp/tmpag1d20f0.php on line\
    \ 18\nPHP Warning:  Array to string conversion in /tmp/tmpag1d20f0.php on line\
    \ 19\nPHP Warning:  Array to string conversion in /tmp/tmpag1d20f0.php on line\
    \ 20\nPHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpag1d20f0.php:27\n\
    Stack trace:\n#0 /tmp/tmpag1d20f0.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpag1d20f0.php\
    \ on line 27\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// In this Kata, you have to sort an array of non-negative integers\
    \ according to\n// number of ones in their binary representation in ascending\
    \ order.\n// For similar number of ones, sort based on decimal value.\n// It must\
    \ be implemented like this:\n// >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4,\
    \ 5]\n// >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n// >>>\
    \ sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\nfunction sort_array($arr) {\n \
    \ $arr = array_map(function($n) {\n    return [$n, decbin($n)];\n  }, $arr);\n\
    \  usort($arr, function($a, $b) {\n    $a = $a[1];\n    $b = $b[1];\n    $a =\
    \ str_split($a);\n    $b = str_split($b);\n    $a = array_sum($a);\n    $b = array_sum($b);\n\
    \    if ($a == $b) {\n      return $a[0] - $b[0];\n    }\n    return $a - $b;\n\
    \  });\n  $arr = array_map(function($n) {\n    return $n[0];\n  }, $arr);\n  return\
    \ $arr;\n}\n\nfunction candidate(...$args) {\n    return sort_array(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 5, 2, 3, 4)) !== array(1,\
    \ 2, 4, 3, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2,\
    \ -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 0, 2, 3, 4)) !== array(0, 1, 2, 4,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !==\
    \ array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 44,\
    \ 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 16,\
    \ 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: ''
  stderr: "PHP Warning:  Trying to access array offset on value of type int in /tmp/tmpdg397xsx.php\
    \ on line 21\nPHP Warning:  Trying to access array offset on value of type int\
    \ in /tmp/tmpdg397xsx.php on line 21\nPHP Warning:  Trying to access array offset\
    \ on value of type int in /tmp/tmpdg397xsx.php on line 21\nPHP Warning:  Trying\
    \ to access array offset on value of type int in /tmp/tmpdg397xsx.php on line\
    \ 21\nPHP Warning:  Trying to access array offset on value of type int in /tmp/tmpdg397xsx.php\
    \ on line 21\nPHP Warning:  Trying to access array offset on value of type int\
    \ in /tmp/tmpdg397xsx.php on line 21\nPHP Fatal error:  Uncaught Exception: Test\
    \ failed! in /tmp/tmpdg397xsx.php:36\nStack trace:\n#0 /tmp/tmpdg397xsx.php(46):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpdg397xsx.php on line 36\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// In this Kata, you have to sort an array of non-negative integers\
    \ according to\n// number of ones in their binary representation in ascending\
    \ order.\n// For similar number of ones, sort based on decimal value.\n// It must\
    \ be implemented like this:\n// >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4,\
    \ 5]\n// >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n// >>>\
    \ sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\nfunction sort_array($arr) {\n \
    \   $arr = array_map('decbin', $arr);\n    $arr = array_map('strlen', $arr);\n\
    \    $arr = array_combine(range(0, count($arr) - 1), $arr);\n    asort($arr);\n\
    \    $arr = array_keys($arr);\n    return $arr;\n}\n\nfunction candidate(...$args)\
    \ {\n    return sort_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 5, 2, 3, 4)) !== array(1, 2, 4, 3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-2, -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0, 2,\
    \ 3, 4)) !== array(0, 1, 2, 4, 3)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2,\
    \ 2, 4, 4, 3, 3, 5, 5, 5, 7, 77)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 6, 44, 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8,\
    \ 16, 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpz25wk_vt.php:23\n\
    Stack trace:\n#0 /tmp/tmpz25wk_vt.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpz25wk_vt.php\
    \ on line 23\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// In this Kata, you have to sort an array of non-negative integers\
    \ according to\n// number of ones in their binary representation in ascending\
    \ order.\n// For similar number of ones, sort based on decimal value.\n// It must\
    \ be implemented like this:\n// >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4,\
    \ 5]\n// >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n// >>>\
    \ sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\nfunction sort_array($arr) {\n \
    \ $arr = array_map(function($n) {\n    return [$n, decbin($n)];\n  }, $arr);\n\
    \  usort($arr, function($a, $b) {\n    $a = $a[1];\n    $b = $b[1];\n    $a =\
    \ str_split($a);\n    $b = str_split($b);\n    $a = array_sum($a);\n    $b = array_sum($b);\n\
    \    if ($a === $b) {\n      return $a[0] - $b[0];\n    }\n    return $a - $b;\n\
    \  });\n  return array_map(function($n) {\n    return $n[0];\n  }, $arr);\n}\n\
    \nfunction candidate(...$args) {\n    return sort_array(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 5, 2, 3, 4)) !== array(1, 2, 4, 3,\
    \ 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2,\
    \ -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 0, 2, 3, 4)) !== array(0, 1, 2, 4,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !==\
    \ array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 44,\
    \ 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 16,\
    \ 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: ''
  stderr: "PHP Warning:  Trying to access array offset on value of type int in /tmp/tmpinq0cebu.php\
    \ on line 21\nPHP Warning:  Trying to access array offset on value of type int\
    \ in /tmp/tmpinq0cebu.php on line 21\nPHP Warning:  Trying to access array offset\
    \ on value of type int in /tmp/tmpinq0cebu.php on line 21\nPHP Warning:  Trying\
    \ to access array offset on value of type int in /tmp/tmpinq0cebu.php on line\
    \ 21\nPHP Warning:  Trying to access array offset on value of type int in /tmp/tmpinq0cebu.php\
    \ on line 21\nPHP Warning:  Trying to access array offset on value of type int\
    \ in /tmp/tmpinq0cebu.php on line 21\nPHP Fatal error:  Uncaught Exception: Test\
    \ failed! in /tmp/tmpinq0cebu.php:35\nStack trace:\n#0 /tmp/tmpinq0cebu.php(45):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpinq0cebu.php on line 35\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// In this Kata, you have to sort an array of non-negative integers\
    \ according to\n// number of ones in their binary representation in ascending\
    \ order.\n// For similar number of ones, sort based on decimal value.\n// It must\
    \ be implemented like this:\n// >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4,\
    \ 5]\n// >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n// >>>\
    \ sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\nfunction sort_array($arr) {\n \
    \ $arr = array_map(function($n) {\n    return [$n, decbin($n)];\n  }, $arr);\n\
    \  usort($arr, function($a, $b) {\n    $a1 = substr_count($a[1], '1');\n    $b1\
    \ = substr_count($b[1], '1');\n    if ($a1 == $b1) {\n      return $a[0] - $b[0];\n\
    \    }\n    return $a1 - $b1;\n  });\n  return array_map(function($n) {\n    return\
    \ $n[0];\n  }, $arr);\n}\n\nfunction candidate(...$args) {\n    return sort_array(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 5, 2, 3, 4)) !== array(1,\
    \ 2, 4, 3, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2,\
    \ -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 0, 2, 3, 4)) !== array(0, 1, 2, 4,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !==\
    \ array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 44,\
    \ 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 16,\
    \ 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp8s0cll4m.php:32\n\
    Stack trace:\n#0 /tmp/tmp8s0cll4m.php(41): test()\n#1 {main}\n  thrown in /tmp/tmp8s0cll4m.php\
    \ on line 32\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// In this Kata, you have to sort an array of non-negative integers\
    \ according to\n// number of ones in their binary representation in ascending\
    \ order.\n// For similar number of ones, sort based on decimal value.\n// It must\
    \ be implemented like this:\n// >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4,\
    \ 5]\n// >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n// >>>\
    \ sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\nfunction sort_array($arr) {\n \
    \   $ones = [];\n    foreach ($arr as $key => $value) {\n        $ones[$key] =\
    \ substr_count(decbin($value), '1');\n    }\n    array_multisort($ones, SORT_ASC,\
    \ $arr);\n    return $arr;\n}\n\nfunction candidate(...$args) {\n    return sort_array(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 5, 2, 3, 4)) !== array(1,\
    \ 2, 4, 3, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2,\
    \ -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 0, 2, 3, 4)) !== array(0, 1, 2, 4,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !==\
    \ array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 44,\
    \ 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 16,\
    \ 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp7rq8mxhy.php:24\n\
    Stack trace:\n#0 /tmp/tmp7rq8mxhy.php(33): test()\n#1 {main}\n  thrown in /tmp/tmp7rq8mxhy.php\
    \ on line 24\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// In this Kata, you have to sort an array of non-negative integers\
    \ according to\n// number of ones in their binary representation in ascending\
    \ order.\n// For similar number of ones, sort based on decimal value.\n// It must\
    \ be implemented like this:\n// >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4,\
    \ 5]\n// >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n// >>>\
    \ sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\nfunction sort_array($arr) {\n \
    \ $arr = array_map(function($v) {\n    return [$v, decbin($v)];\n  }, $arr);\n\
    \  usort($arr, function($a, $b) {\n    $a = substr_count($a[1], '1');\n    $b\
    \ = substr_count($b[1], '1');\n    if ($a == $b) {\n      return $a[0] - $b[0];\n\
    \    }\n    return $a - $b;\n  });\n  return array_map(function($v) {\n    return\
    \ $v[0];\n  }, $arr);\n}\n\nfunction candidate(...$args) {\n    return sort_array(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 5, 2, 3, 4)) !== array(1,\
    \ 2, 4, 3, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2,\
    \ -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 0, 2, 3, 4)) !== array(0, 1, 2, 4,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !==\
    \ array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 44,\
    \ 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 16,\
    \ 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: ''
  stderr: "PHP Warning:  Trying to access array offset on value of type int in /tmp/tmpsp6ls_6h.php\
    \ on line 17\nPHP Warning:  Trying to access array offset on value of type int\
    \ in /tmp/tmpsp6ls_6h.php on line 17\nPHP Warning:  Trying to access array offset\
    \ on value of type int in /tmp/tmpsp6ls_6h.php on line 17\nPHP Warning:  Trying\
    \ to access array offset on value of type int in /tmp/tmpsp6ls_6h.php on line\
    \ 17\nPHP Warning:  Trying to access array offset on value of type int in /tmp/tmpsp6ls_6h.php\
    \ on line 17\nPHP Warning:  Trying to access array offset on value of type int\
    \ in /tmp/tmpsp6ls_6h.php on line 17\nPHP Fatal error:  Uncaught Exception: Test\
    \ failed! in /tmp/tmpsp6ls_6h.php:31\nStack trace:\n#0 /tmp/tmpsp6ls_6h.php(41):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpsp6ls_6h.php on line 31\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// In this Kata, you have to sort an array of non-negative integers\
    \ according to\n// number of ones in their binary representation in ascending\
    \ order.\n// For similar number of ones, sort based on decimal value.\n// It must\
    \ be implemented like this:\n// >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4,\
    \ 5]\n// >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n// >>>\
    \ sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\nfunction sort_array($arr) {\n \
    \ $ones = [];\n  $zeros = [];\n  foreach ($arr as $value) {\n    $binary = decbin($value);\n\
    \    $count = substr_count($binary, '1');\n    if ($count === 0) {\n      $zeros[]\
    \ = $value;\n    } else {\n      $ones[$count][] = $value;\n    }\n  }\n  ksort($ones);\n\
    \  $result = [];\n  foreach ($ones as $value) {\n    sort($value);\n    $result\
    \ = array_merge($result, $value);\n  }\n  sort($zeros);\n  $result = array_merge($result,\
    \ $zeros);\n  return $result;\n}\n\nfunction candidate(...$args) {\n    return\
    \ sort_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 5, 2, 3, 4)) !== array(1, 2, 4, 3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-2, -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0, 2,\
    \ 3, 4)) !== array(0, 1, 2, 4, 3)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2,\
    \ 2, 4, 4, 3, 3, 5, 5, 5, 7, 77)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 6, 44, 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8,\
    \ 16, 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpvzi2cxg5.php:38\n\
    Stack trace:\n#0 /tmp/tmpvzi2cxg5.php(47): test()\n#1 {main}\n  thrown in /tmp/tmpvzi2cxg5.php\
    \ on line 38\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// In this Kata, you have to sort an array of non-negative integers\
    \ according to\n// number of ones in their binary representation in ascending\
    \ order.\n// For similar number of ones, sort based on decimal value.\n// It must\
    \ be implemented like this:\n// >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4,\
    \ 5]\n// >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n// >>>\
    \ sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\nfunction sort_array($arr) {\n \
    \ $arr = array_map(function($n) {\n    return [$n, decbin($n)];\n  }, $arr);\n\
    \  usort($arr, function($a, $b) {\n    $a_ones = substr_count($a[1], '1');\n \
    \   $b_ones = substr_count($b[1], '1');\n    if ($a_ones == $b_ones) {\n     \
    \ return $a[0] - $b[0];\n    }\n    return $a_ones - $b_ones;\n  });\n  return\
    \ array_map(function($n) {\n    return $n[0];\n  }, $arr);\n}\n\necho implode(',\
    \ ', sort_array([1, 5, 2, 3, 4])) . \"\\n\";\necho implode(', ', sort_array([-2,\
    \ -3, -4, -5, -6])) . \"\\n\";\necho implode(', ', sort_array([1, 0, 2, 3, 4]))\
    \ . \"\\n\";\nfunction candidate(...$args) {\n    return sort_array(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 5, 2, 3, 4)) !== array(1,\
    \ 2, 4, 3, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2,\
    \ -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 0, 2, 3, 4)) !== array(0, 1, 2, 4,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !==\
    \ array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 44,\
    \ 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 16,\
    \ 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "1, 2, 4, 3, 5\n-6, -4, -5, -3, -2\n0, 1, 2, 4, 3\n"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp_20ajyni.php:35\n\
    Stack trace:\n#0 /tmp/tmp_20ajyni.php(44): test()\n#1 {main}\n  thrown in /tmp/tmp_20ajyni.php\
    \ on line 35\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// In this Kata, you have to sort an array of non-negative integers\
    \ according to\n// number of ones in their binary representation in ascending\
    \ order.\n// For similar number of ones, sort based on decimal value.\n// It must\
    \ be implemented like this:\n// >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4,\
    \ 5]\n// >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n// >>>\
    \ sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\nfunction sort_array($arr) {\n \
    \ $arr = array_map(function($n) {\n    return [$n, decbin($n)];\n  }, $arr);\n\
    \  usort($arr, function($a, $b) {\n    $a_ones = substr_count($a[1], '1');\n \
    \   $b_ones = substr_count($b[1], '1');\n    if ($a_ones === $b_ones) {\n    \
    \  return $a[0] - $b[0];\n    }\n    return $a_ones - $b_ones;\n  });\n  return\
    \ array_map(function($n) {\n    return $n[0];\n  }, $arr);\n}\n\necho sort_array([1,\
    \ 5, 2, 3, 4]) . PHP_EOL;\necho sort_array([-2, -3, -4, -5, -6]) . PHP_EOL;\n\
    echo sort_array([1, 0, 2, 3, 4]) . PHP_EOL;\nfunction candidate(...$args) {\n\
    \    return sort_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 5, 2, 3, 4)) !== array(1, 2, 4, 3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-2, -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0, 2,\
    \ 3, 4)) !== array(0, 1, 2, 4, 3)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2,\
    \ 2, 4, 4, 3, 3, 5, 5, 5, 7, 77)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 6, 44, 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8,\
    \ 16, 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "Array\nArray\nArray\n"
  stderr: "PHP Warning:  Array to string conversion in /tmp/tmp8m1vinzn.php on line\
    \ 26\nPHP Warning:  Array to string conversion in /tmp/tmp8m1vinzn.php on line\
    \ 27\nPHP Warning:  Array to string conversion in /tmp/tmp8m1vinzn.php on line\
    \ 28\nPHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp8m1vinzn.php:35\n\
    Stack trace:\n#0 /tmp/tmp8m1vinzn.php(44): test()\n#1 {main}\n  thrown in /tmp/tmp8m1vinzn.php\
    \ on line 35\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// In this Kata, you have to sort an array of non-negative integers\
    \ according to\n// number of ones in their binary representation in ascending\
    \ order.\n// For similar number of ones, sort based on decimal value.\n// It must\
    \ be implemented like this:\n// >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4,\
    \ 5]\n// >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n// >>>\
    \ sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\nfunction sort_array($arr) {\n \
    \ $arr = array_map(function($n) {\n    return [$n, decbin($n)];\n  }, $arr);\n\
    \  usort($arr, function($a, $b) {\n    $a_ones = substr_count($a[1], '1');\n \
    \   $b_ones = substr_count($b[1], '1');\n    if ($a_ones == $b_ones) {\n     \
    \ return $a[0] - $b[0];\n    }\n    return $a_ones - $b_ones;\n  });\n  return\
    \ array_map(function($n) {\n    return $n[0];\n  }, $arr);\n}\n\nfunction candidate(...$args)\
    \ {\n    return sort_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 5, 2, 3, 4)) !== array(1, 2, 4, 3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-2, -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0, 2,\
    \ 3, 4)) !== array(0, 1, 2, 4, 3)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2,\
    \ 2, 4, 4, 3, 3, 5, 5, 5, 7, 77)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 6, 44, 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8,\
    \ 16, 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpde8neg8m.php:32\n\
    Stack trace:\n#0 /tmp/tmpde8neg8m.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpde8neg8m.php\
    \ on line 32\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// In this Kata, you have to sort an array of non-negative integers\
    \ according to\n// number of ones in their binary representation in ascending\
    \ order.\n// For similar number of ones, sort based on decimal value.\n// It must\
    \ be implemented like this:\n// >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4,\
    \ 5]\n// >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n// >>>\
    \ sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\nfunction sort_array($arr) {\n \
    \   $arr = array_map(function($num) {\n        return [$num, decbin($num)];\n\
    \    }, $arr);\n    usort($arr, function($a, $b) {\n        $a = $a[1];\n    \
    \    $b = $b[1];\n        $a = str_split($a);\n        $b = str_split($b);\n \
    \       $a = array_count_values($a);\n        $b = array_count_values($b);\n \
    \       if ($a[1] == $b[1]) {\n            return $a[0] - $b[0];\n        }\n\
    \        return $a[1] - $b[1];\n    });\n    $arr = array_map(function($num) {\n\
    \        return $num[0];\n    }, $arr);\n    return $arr;\n}\n\nfunction candidate(...$args)\
    \ {\n    return sort_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 5, 2, 3, 4)) !== array(1, 2, 4, 3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-2, -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0, 2,\
    \ 3, 4)) !== array(0, 1, 2, 4, 3)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2,\
    \ 2, 4, 4, 3, 3, 5, 5, 5, 7, 77)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 6, 44, 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8,\
    \ 16, 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Warning:  Undefined array key 0 in /tmp/tmpam2e0vwa.php on line 21\n\
    PHP Warning:  Undefined array key 0 in /tmp/tmpam2e0vwa.php on line 21\nPHP Fatal\
    \ error:  Uncaught Exception: Test failed! in /tmp/tmpam2e0vwa.php:37\nStack trace:\n\
    #0 /tmp/tmpam2e0vwa.php(46): test()\n#1 {main}\n  thrown in /tmp/tmpam2e0vwa.php\
    \ on line 37\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// In this Kata, you have to sort an array of non-negative integers\
    \ according to\n// number of ones in their binary representation in ascending\
    \ order.\n// For similar number of ones, sort based on decimal value.\n// It must\
    \ be implemented like this:\n// >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4,\
    \ 5]\n// >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n// >>>\
    \ sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\nfunction sort_array($arr) {\n \
    \ $arr = array_map(function($n) {\n    return [$n, decbin($n)];\n  }, $arr);\n\
    \  usort($arr, function($a, $b) {\n    $a = $a[1];\n    $b = $b[1];\n    $a =\
    \ str_split($a);\n    $b = str_split($b);\n    $a = array_sum($a);\n    $b = array_sum($b);\n\
    \    if ($a == $b) {\n      return $a[0] - $b[0];\n    }\n    return $a - $b;\n\
    \  });\n  $arr = array_map(function($n) {\n    return $n[0];\n  }, $arr);\n  return\
    \ $arr;\n}\n\nfunction candidate(...$args) {\n    return sort_array(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 5, 2, 3, 4)) !== array(1,\
    \ 2, 4, 3, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2,\
    \ -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 0, 2, 3, 4)) !== array(0, 1, 2, 4,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !==\
    \ array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 44,\
    \ 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 16,\
    \ 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: ''
  stderr: "PHP Warning:  Trying to access array offset on value of type int in /tmp/tmpf0_q_k7b.php\
    \ on line 21\nPHP Warning:  Trying to access array offset on value of type int\
    \ in /tmp/tmpf0_q_k7b.php on line 21\nPHP Warning:  Trying to access array offset\
    \ on value of type int in /tmp/tmpf0_q_k7b.php on line 21\nPHP Warning:  Trying\
    \ to access array offset on value of type int in /tmp/tmpf0_q_k7b.php on line\
    \ 21\nPHP Warning:  Trying to access array offset on value of type int in /tmp/tmpf0_q_k7b.php\
    \ on line 21\nPHP Warning:  Trying to access array offset on value of type int\
    \ in /tmp/tmpf0_q_k7b.php on line 21\nPHP Fatal error:  Uncaught Exception: Test\
    \ failed! in /tmp/tmpf0_q_k7b.php:36\nStack trace:\n#0 /tmp/tmpf0_q_k7b.php(46):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpf0_q_k7b.php on line 36\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// In this Kata, you have to sort an array of non-negative integers\
    \ according to\n// number of ones in their binary representation in ascending\
    \ order.\n// For similar number of ones, sort based on decimal value.\n// It must\
    \ be implemented like this:\n// >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4,\
    \ 5]\n// >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n// >>>\
    \ sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\nfunction sort_array($arr) {\n \
    \ $arr = array_map(function($x) {\n    return [$x, decbin($x)];\n  }, $arr);\n\
    \  usort($arr, function($a, $b) {\n    $a_ones = substr_count($a[1], '1');\n \
    \   $b_ones = substr_count($b[1], '1');\n    if ($a_ones == $b_ones) {\n     \
    \ return $a[0] - $b[0];\n    }\n    return $a_ones - $b_ones;\n  });\n  return\
    \ array_map(function($x) {\n    return $x[0];\n  }, $arr);\n}\n\nfunction candidate(...$args)\
    \ {\n    return sort_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 5, 2, 3, 4)) !== array(1, 2, 4, 3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-2, -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0, 2,\
    \ 3, 4)) !== array(0, 1, 2, 4, 3)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2,\
    \ 2, 4, 4, 3, 3, 5, 5, 5, 7, 77)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 6, 44, 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8,\
    \ 16, 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp_s8a90e_.php:32\n\
    Stack trace:\n#0 /tmp/tmp_s8a90e_.php(41): test()\n#1 {main}\n  thrown in /tmp/tmp_s8a90e_.php\
    \ on line 32\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// In this Kata, you have to sort an array of non-negative integers\
    \ according to\n// number of ones in their binary representation in ascending\
    \ order.\n// For similar number of ones, sort based on decimal value.\n// It must\
    \ be implemented like this:\n// >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4,\
    \ 5]\n// >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n// >>>\
    \ sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\nfunction sort_array($arr) {\n \
    \ $ones = [];\n  $zeros = [];\n  foreach ($arr as $num) {\n    $bin = decbin($num);\n\
    \    if (substr_count($bin, '1') > 0) {\n      $ones[$num] = substr_count($bin,\
    \ '1');\n    } else {\n      $zeros[$num] = substr_count($bin, '1');\n    }\n\
    \  }\n  asort($ones);\n  asort($zeros);\n  return array_merge(array_keys($zeros),\
    \ array_keys($ones));\n}\n\nfunction candidate(...$args) {\n    return sort_array(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 5, 2, 3, 4)) !== array(1,\
    \ 2, 4, 3, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2,\
    \ -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 0, 2, 3, 4)) !== array(0, 1, 2, 4,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !==\
    \ array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 44,\
    \ 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 16,\
    \ 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpt6llw0fv.php:30\n\
    Stack trace:\n#0 /tmp/tmpt6llw0fv.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpt6llw0fv.php\
    \ on line 30\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// In this Kata, you have to sort an array of non-negative integers\
    \ according to\n// number of ones in their binary representation in ascending\
    \ order.\n// For similar number of ones, sort based on decimal value.\n// It must\
    \ be implemented like this:\n// >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4,\
    \ 5]\n// >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n// >>>\
    \ sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\nfunction sort_array($arr) {\n \
    \ $arr = array_map(function($n) {\n    return [$n, decbin($n)];\n  }, $arr);\n\
    \  usort($arr, function($a, $b) {\n    $a_ones = substr_count($a[1], '1');\n \
    \   $b_ones = substr_count($b[1], '1');\n    if ($a_ones === $b_ones) {\n    \
    \  return $a[0] - $b[0];\n    }\n    return $a_ones - $b_ones;\n  });\n  return\
    \ array_map(function($n) {\n    return $n[0];\n  }, $arr);\n}\n\necho sort_array([1,\
    \ 5, 2, 3, 4]) . PHP_EOL;\necho sort_array([-2, -3, -4, -5, -6]) . PHP_EOL;\n\
    echo sort_array([1, 0, 2, 3, 4]) . PHP_EOL;\nfunction candidate(...$args) {\n\
    \    return sort_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 5, 2, 3, 4)) !== array(1, 2, 4, 3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-2, -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0, 2,\
    \ 3, 4)) !== array(0, 1, 2, 4, 3)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2,\
    \ 2, 4, 4, 3, 3, 5, 5, 5, 7, 77)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 6, 44, 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8,\
    \ 16, 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "Array\nArray\nArray\n"
  stderr: "PHP Warning:  Array to string conversion in /tmp/tmp_0jvf69_.php on line\
    \ 26\nPHP Warning:  Array to string conversion in /tmp/tmp_0jvf69_.php on line\
    \ 27\nPHP Warning:  Array to string conversion in /tmp/tmp_0jvf69_.php on line\
    \ 28\nPHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp_0jvf69_.php:35\n\
    Stack trace:\n#0 /tmp/tmp_0jvf69_.php(44): test()\n#1 {main}\n  thrown in /tmp/tmp_0jvf69_.php\
    \ on line 35\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// In this Kata, you have to sort an array of non-negative integers\
    \ according to\n// number of ones in their binary representation in ascending\
    \ order.\n// For similar number of ones, sort based on decimal value.\n// It must\
    \ be implemented like this:\n// >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4,\
    \ 5]\n// >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n// >>>\
    \ sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\nfunction sort_array($arr) {\n \
    \ $arr = array_map(function($num) {\n    $ones = substr_count(decbin($num), '1');\n\
    \    return [$num, $ones];\n  }, $arr);\n  usort($arr, function($a, $b) {\n  \
    \  if ($a[1] === $b[1]) {\n      return $a[0] - $b[0];\n    }\n    return $a[1]\
    \ - $b[1];\n  });\n  return array_map(function($num) {\n    return $num[0];\n\
    \  }, $arr);\n}\n\nfunction candidate(...$args) {\n    return sort_array(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 5, 2, 3, 4)) !== array(1,\
    \ 2, 4, 3, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2,\
    \ -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 0, 2, 3, 4)) !== array(0, 1, 2, 4,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !==\
    \ array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 44,\
    \ 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 16,\
    \ 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpk0c5kd9v.php:31\n\
    Stack trace:\n#0 /tmp/tmpk0c5kd9v.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpk0c5kd9v.php\
    \ on line 31\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// In this Kata, you have to sort an array of non-negative integers\
    \ according to\n// number of ones in their binary representation in ascending\
    \ order.\n// For similar number of ones, sort based on decimal value.\n// It must\
    \ be implemented like this:\n// >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4,\
    \ 5]\n// >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n// >>>\
    \ sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\nfunction sort_array($arr) {\n \
    \ $arr = array_map('decbin', $arr);\n  $arr = array_map('strlen', $arr);\n  $arr\
    \ = array_map('intval', $arr);\n  $arr = array_combine($arr, $arr);\n  ksort($arr);\n\
    \  $arr = array_keys($arr);\n  return $arr;\n}\n\nfunction candidate(...$args)\
    \ {\n    return sort_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 5, 2, 3, 4)) !== array(1, 2, 4, 3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-2, -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0, 2,\
    \ 3, 4)) !== array(0, 1, 2, 4, 3)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2,\
    \ 2, 4, 4, 3, 3, 5, 5, 5, 7, 77)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 6, 44, 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8,\
    \ 16, 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpzsggx4vu.php:24\n\
    Stack trace:\n#0 /tmp/tmpzsggx4vu.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpzsggx4vu.php\
    \ on line 24\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// In this Kata, you have to sort an array of non-negative integers\
    \ according to\n// number of ones in their binary representation in ascending\
    \ order.\n// For similar number of ones, sort based on decimal value.\n// It must\
    \ be implemented like this:\n// >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4,\
    \ 5]\n// >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n// >>>\
    \ sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\nfunction sort_array($arr) {\n \
    \ $arr = array_map(function($n) {\n    return [$n, decbin($n)];\n  }, $arr);\n\
    \  usort($arr, function($a, $b) {\n    $a_ones = substr_count($a[1], '1');\n \
    \   $b_ones = substr_count($b[1], '1');\n    if ($a_ones === $b_ones) {\n    \
    \  return $a[0] - $b[0];\n    }\n    return $a_ones - $b_ones;\n  });\n  return\
    \ array_map(function($n) {\n    return $n[0];\n  }, $arr);\n}\n\nfunction candidate(...$args)\
    \ {\n    return sort_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 5, 2, 3, 4)) !== array(1, 2, 4, 3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-2, -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0, 2,\
    \ 3, 4)) !== array(0, 1, 2, 4, 3)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2,\
    \ 2, 4, 4, 3, 3, 5, 5, 5, 7, 77)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 6, 44, 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8,\
    \ 16, 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpisgk5vev.php:32\n\
    Stack trace:\n#0 /tmp/tmpisgk5vev.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpisgk5vev.php\
    \ on line 32\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// In this Kata, you have to sort an array of non-negative integers\
    \ according to\n// number of ones in their binary representation in ascending\
    \ order.\n// For similar number of ones, sort based on decimal value.\n// It must\
    \ be implemented like this:\n// >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4,\
    \ 5]\n// >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n// >>>\
    \ sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\nfunction sort_array($arr) {\n \
    \ $arr = array_map(function($n) {\n    return [$n, decbin($n)];\n  }, $arr);\n\
    \  usort($arr, function($a, $b) {\n    $a_ones = substr_count($a[1], '1');\n \
    \   $b_ones = substr_count($b[1], '1');\n    if ($a_ones == $b_ones) {\n     \
    \ return $a[0] - $b[0];\n    }\n    return $a_ones - $b_ones;\n  });\n  return\
    \ array_map(function($n) {\n    return $n[0];\n  }, $arr);\n}\n\nfunction candidate(...$args)\
    \ {\n    return sort_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 5, 2, 3, 4)) !== array(1, 2, 4, 3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-2, -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0, 2,\
    \ 3, 4)) !== array(0, 1, 2, 4, 3)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2,\
    \ 2, 4, 4, 3, 3, 5, 5, 5, 7, 77)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 6, 44, 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8,\
    \ 16, 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpsuuvb6pn.php:32\n\
    Stack trace:\n#0 /tmp/tmpsuuvb6pn.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpsuuvb6pn.php\
    \ on line 32\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// In this Kata, you have to sort an array of non-negative integers\
    \ according to\n// number of ones in their binary representation in ascending\
    \ order.\n// For similar number of ones, sort based on decimal value.\n// It must\
    \ be implemented like this:\n// >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4,\
    \ 5]\n// >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n// >>>\
    \ sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\nfunction sort_array($arr) {\n \
    \ $arr = array_map(function($num) {\n    return [$num, decbin($num)];\n  }, $arr);\n\
    \  usort($arr, function($a, $b) {\n    $a_ones = substr_count($a[1], '1');\n \
    \   $b_ones = substr_count($b[1], '1');\n    if ($a_ones === $b_ones) {\n    \
    \  return $a[0] - $b[0];\n    }\n    return $a_ones - $b_ones;\n  });\n  return\
    \ array_map(function($num) {\n    return $num[0];\n  }, $arr);\n}\n\nfunction\
    \ candidate(...$args) {\n    return sort_array(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, 5, 2, 3, 4)) !== array(1, 2, 4, 3, 5)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2, -3, -4,\
    \ -5, -6)) !== array(-4, -2, -6, -5, -3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 0, 2, 3, 4)) !== array(0, 1, 2, 4, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 5, 77,\
    \ 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 44, 12, 32,\
    \ 5)) !== array(32, 3, 5, 6, 12, 44)) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 16, 32))\
    \ !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpwea5daob.php:32\n\
    Stack trace:\n#0 /tmp/tmpwea5daob.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpwea5daob.php\
    \ on line 32\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// In this Kata, you have to sort an array of non-negative integers\
    \ according to\n// number of ones in their binary representation in ascending\
    \ order.\n// For similar number of ones, sort based on decimal value.\n// It must\
    \ be implemented like this:\n// >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4,\
    \ 5]\n// >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n// >>>\
    \ sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\nfunction sort_array($arr) {\n \
    \ $arr = array_map(function($v) {\n    return [$v, decbin($v)];\n  }, $arr);\n\
    \  usort($arr, function($a, $b) {\n    $a_ones = substr_count($a[1], '1');\n \
    \   $b_ones = substr_count($b[1], '1');\n    if ($a_ones == $b_ones) {\n     \
    \ return $a[0] - $b[0];\n    }\n    return $a_ones - $b_ones;\n  });\n  return\
    \ array_map(function($v) {\n    return $v[0];\n  }, $arr);\n}\n\nfunction candidate(...$args)\
    \ {\n    return sort_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 5, 2, 3, 4)) !== array(1, 2, 4, 3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-2, -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0, 2,\
    \ 3, 4)) !== array(0, 1, 2, 4, 3)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2,\
    \ 2, 4, 4, 3, 3, 5, 5, 5, 7, 77)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 6, 44, 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8,\
    \ 16, 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpa2hw6uy2.php:32\n\
    Stack trace:\n#0 /tmp/tmpa2hw6uy2.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpa2hw6uy2.php\
    \ on line 32\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// In this Kata, you have to sort an array of non-negative integers\
    \ according to\n// number of ones in their binary representation in ascending\
    \ order.\n// For similar number of ones, sort based on decimal value.\n// It must\
    \ be implemented like this:\n// >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4,\
    \ 5]\n// >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n// >>>\
    \ sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\nfunction sort_array($arr) {\n \
    \ $ones = [];\n  foreach ($arr as $key => $value) {\n    $ones[$key] = substr_count(decbin($value),\
    \ \"1\");\n  }\n  array_multisort($ones, SORT_ASC, $arr);\n  return $arr;\n}\n\
    \nfunction candidate(...$args) {\n    return sort_array(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 5, 2, 3, 4)) !== array(1, 2, 4, 3,\
    \ 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2,\
    \ -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 0, 2, 3, 4)) !== array(0, 1, 2, 4,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !==\
    \ array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 44,\
    \ 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 16,\
    \ 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpu0jqtbr1.php:24\n\
    Stack trace:\n#0 /tmp/tmpu0jqtbr1.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpu0jqtbr1.php\
    \ on line 24\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// In this Kata, you have to sort an array of non-negative integers\
    \ according to\n// number of ones in their binary representation in ascending\
    \ order.\n// For similar number of ones, sort based on decimal value.\n// It must\
    \ be implemented like this:\n// >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4,\
    \ 5]\n// >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n// >>>\
    \ sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\nfunction sort_array($arr) {\n \
    \   $ones = [];\n    $zeros = [];\n    foreach ($arr as $key => $value) {\n  \
    \      $binary = decbin($value);\n        $count = substr_count($binary, '1');\n\
    \        if ($count === 0) {\n            $zeros[] = $value;\n        } else {\n\
    \            $ones[$count][] = $value;\n        }\n    }\n    ksort($ones);\n\
    \    $result = [];\n    foreach ($ones as $key => $value) {\n        sort($value);\n\
    \        $result = array_merge($result, $value);\n    }\n    sort($zeros);\n \
    \   $result = array_merge($result, $zeros);\n    return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return sort_array(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, 5, 2, 3, 4)) !== array(1, 2, 4, 3, 5)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2, -3, -4,\
    \ -5, -6)) !== array(-4, -2, -6, -5, -3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 0, 2, 3, 4)) !== array(0, 1, 2, 4, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 5, 77,\
    \ 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 44, 12, 32,\
    \ 5)) !== array(32, 3, 5, 6, 12, 44)) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 16, 32))\
    \ !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpspgzjqa0.php:38\n\
    Stack trace:\n#0 /tmp/tmpspgzjqa0.php(47): test()\n#1 {main}\n  thrown in /tmp/tmpspgzjqa0.php\
    \ on line 38\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// In this Kata, you have to sort an array of non-negative integers\
    \ according to\n// number of ones in their binary representation in ascending\
    \ order.\n// For similar number of ones, sort based on decimal value.\n// It must\
    \ be implemented like this:\n// >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4,\
    \ 5]\n// >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n// >>>\
    \ sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\nfunction sort_array($arr) {\n \
    \ $ones = [];\n  $zeros = [];\n  foreach ($arr as $key => $value) {\n    $binary\
    \ = decbin($value);\n    $count = substr_count($binary, '1');\n    if ($count\
    \ === 0) {\n      $zeros[] = $value;\n    } else {\n      $ones[$count][] = $value;\n\
    \    }\n  }\n  ksort($ones);\n  $sorted = [];\n  foreach ($ones as $key => $value)\
    \ {\n    sort($value);\n    $sorted = array_merge($sorted, $value);\n  }\n  sort($zeros);\n\
    \  $sorted = array_merge($sorted, $zeros);\n  return $sorted;\n}\n\nfunction candidate(...$args)\
    \ {\n    return sort_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 5, 2, 3, 4)) !== array(1, 2, 4, 3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-2, -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0, 2,\
    \ 3, 4)) !== array(0, 1, 2, 4, 3)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2,\
    \ 2, 4, 4, 3, 3, 5, 5, 5, 7, 77)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 6, 44, 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8,\
    \ 16, 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp7i_hgnqc.php:38\n\
    Stack trace:\n#0 /tmp/tmp7i_hgnqc.php(47): test()\n#1 {main}\n  thrown in /tmp/tmp7i_hgnqc.php\
    \ on line 38\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// In this Kata, you have to sort an array of non-negative integers\
    \ according to\n// number of ones in their binary representation in ascending\
    \ order.\n// For similar number of ones, sort based on decimal value.\n// It must\
    \ be implemented like this:\n// >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4,\
    \ 5]\n// >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n// >>>\
    \ sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\nfunction sort_array($arr) {\n \
    \ $arr_ones = [];\n  $arr_decimal = [];\n  foreach ($arr as $key => $value) {\n\
    \    $arr_ones[$key] = substr_count(decbin($value), '1');\n    $arr_decimal[$key]\
    \ = $value;\n  }\n  array_multisort($arr_ones, SORT_ASC, $arr_decimal, SORT_ASC,\
    \ $arr);\n  return $arr;\n}\n\nfunction candidate(...$args) {\n    return sort_array(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 5, 2, 3, 4)) !== array(1,\
    \ 2, 4, 3, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2,\
    \ -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 0, 2, 3, 4)) !== array(0, 1, 2, 4,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !==\
    \ array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 44,\
    \ 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 16,\
    \ 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp5fe5wa50.php:26\n\
    Stack trace:\n#0 /tmp/tmp5fe5wa50.php(35): test()\n#1 {main}\n  thrown in /tmp/tmp5fe5wa50.php\
    \ on line 26\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// In this Kata, you have to sort an array of non-negative integers\
    \ according to\n// number of ones in their binary representation in ascending\
    \ order.\n// For similar number of ones, sort based on decimal value.\n// It must\
    \ be implemented like this:\n// >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4,\
    \ 5]\n// >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n// >>>\
    \ sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\nfunction sort_array($arr) {\n \
    \ $arr = array_map(function($n) {\n    return [$n, decbin($n)];\n  }, $arr);\n\
    \  usort($arr, function($a, $b) {\n    $a = count_chars($a[1], 1);\n    $b = count_chars($b[1],\
    \ 1);\n    if ($a[1] == $b[1]) {\n      return $a[0] - $b[0];\n    }\n    return\
    \ $a[1] - $b[1];\n  });\n  return array_map(function($n) {\n    return $n[0];\n\
    \  }, $arr);\n}\n\nfunction candidate(...$args) {\n    return sort_array(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 5, 2, 3, 4)) !== array(1,\
    \ 2, 4, 3, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2,\
    \ -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 0, 2, 3, 4)) !== array(0, 1, 2, 4,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !==\
    \ array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 44,\
    \ 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 16,\
    \ 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: ''
  stderr: "PHP Warning:  Undefined array key 1 in /tmp/tmp1jpmuqfp.php on line 16\n\
    PHP Warning:  Undefined array key 1 in /tmp/tmp1jpmuqfp.php on line 16\nPHP Warning:\
    \  Undefined array key 0 in /tmp/tmp1jpmuqfp.php on line 17\nPHP Warning:  Undefined\
    \ array key 0 in /tmp/tmp1jpmuqfp.php on line 17\nPHP Warning:  Undefined array\
    \ key 1 in /tmp/tmp1jpmuqfp.php on line 16\nPHP Warning:  Undefined array key\
    \ 1 in /tmp/tmp1jpmuqfp.php on line 16\nPHP Warning:  Undefined array key 0 in\
    \ /tmp/tmp1jpmuqfp.php on line 17\nPHP Warning:  Undefined array key 0 in /tmp/tmp1jpmuqfp.php\
    \ on line 17\nPHP Warning:  Undefined array key 1 in /tmp/tmp1jpmuqfp.php on line\
    \ 16\nPHP Warning:  Undefined array key 1 in /tmp/tmp1jpmuqfp.php on line 16\n\
    PHP Warning:  Undefined array key 0 in /tmp/tmp1jpmuqfp.php on line 17\nPHP Warning:\
    \  Undefined array key 0 in /tmp/tmp1jpmuqfp.php on line 17\nPHP Warning:  Undefined\
    \ array key 1 in /tmp/tmp1jpmuqfp.php on line 16\nPHP Warning:  Undefined array\
    \ key 1 in /tmp/tmp1jpmuqfp.php on line 16\nPHP Warning:  Undefined array key\
    \ 0 in /tmp/tmp1jpmuqfp.php on line 17\nPHP Warning:  Undefined array key 0 in\
    \ /tmp/tmp1jpmuqfp.php on line 17\nPHP Fatal error:  Uncaught Exception: Test\
    \ failed! in /tmp/tmp1jpmuqfp.php:31\nStack trace:\n#0 /tmp/tmp1jpmuqfp.php(41):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmp1jpmuqfp.php on line 31\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// In this Kata, you have to sort an array of non-negative integers\
    \ according to\n// number of ones in their binary representation in ascending\
    \ order.\n// For similar number of ones, sort based on decimal value.\n// It must\
    \ be implemented like this:\n// >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4,\
    \ 5]\n// >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n// >>>\
    \ sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\nfunction sort_array($arr) {\n \
    \ $arr = array_map(function($n) {\n    return [$n, decbin($n)];\n  }, $arr);\n\
    \  usort($arr, function($a, $b) {\n    $a_ones = substr_count($a[1], '1');\n \
    \   $b_ones = substr_count($b[1], '1');\n    if ($a_ones == $b_ones) {\n     \
    \ return $a[0] - $b[0];\n    }\n    return $a_ones - $b_ones;\n  });\n  return\
    \ array_map(function($n) {\n    return $n[0];\n  }, $arr);\n}\n\nfunction candidate(...$args)\
    \ {\n    return sort_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 5, 2, 3, 4)) !== array(1, 2, 4, 3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-2, -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0, 2,\
    \ 3, 4)) !== array(0, 1, 2, 4, 3)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2,\
    \ 2, 4, 4, 3, 3, 5, 5, 5, 7, 77)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 6, 44, 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8,\
    \ 16, 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpaypatdm1.php:32\n\
    Stack trace:\n#0 /tmp/tmpaypatdm1.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpaypatdm1.php\
    \ on line 32\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// In this Kata, you have to sort an array of non-negative integers\
    \ according to\n// number of ones in their binary representation in ascending\
    \ order.\n// For similar number of ones, sort based on decimal value.\n// It must\
    \ be implemented like this:\n// >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4,\
    \ 5]\n// >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n// >>>\
    \ sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\nfunction sort_array($arr) {\n \
    \ $ones = [];\n  $zeros = [];\n  foreach ($arr as $key => $value) {\n    $binary\
    \ = decbin($value);\n    $count = substr_count($binary, '1');\n    if ($count\
    \ == 0) {\n      $zeros[] = $value;\n    } else {\n      $ones[$count][] = $value;\n\
    \    }\n  }\n  ksort($ones);\n  $result = [];\n  foreach ($ones as $key => $value)\
    \ {\n    sort($value);\n    $result = array_merge($result, $value);\n  }\n  sort($zeros);\n\
    \  $result = array_merge($result, $zeros);\n  return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return sort_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 5, 2, 3, 4)) !== array(1, 2, 4, 3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-2, -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0, 2,\
    \ 3, 4)) !== array(0, 1, 2, 4, 3)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2,\
    \ 2, 4, 4, 3, 3, 5, 5, 5, 7, 77)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 6, 44, 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8,\
    \ 16, 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpptr7pnit.php:38\n\
    Stack trace:\n#0 /tmp/tmpptr7pnit.php(47): test()\n#1 {main}\n  thrown in /tmp/tmpptr7pnit.php\
    \ on line 38\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// In this Kata, you have to sort an array of non-negative integers\
    \ according to\n// number of ones in their binary representation in ascending\
    \ order.\n// For similar number of ones, sort based on decimal value.\n// It must\
    \ be implemented like this:\n// >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4,\
    \ 5]\n// >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n// >>>\
    \ sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\nfunction sort_array($arr) {\n \
    \ $arr = array_map(function($n) {\n    return [$n, decbin($n)];\n  }, $arr);\n\
    \  usort($arr, function($a, $b) {\n    $a_ones = substr_count($a[1], '1');\n \
    \   $b_ones = substr_count($b[1], '1');\n    if ($a_ones == $b_ones) {\n     \
    \ return $a[0] - $b[0];\n    }\n    return $a_ones - $b_ones;\n  });\n  return\
    \ array_map(function($n) {\n    return $n[0];\n  }, $arr);\n}\n\nfunction candidate(...$args)\
    \ {\n    return sort_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 5, 2, 3, 4)) !== array(1, 2, 4, 3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-2, -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0, 2,\
    \ 3, 4)) !== array(0, 1, 2, 4, 3)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2,\
    \ 2, 4, 4, 3, 3, 5, 5, 5, 7, 77)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 6, 44, 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8,\
    \ 16, 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpi134ol3m.php:32\n\
    Stack trace:\n#0 /tmp/tmpi134ol3m.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpi134ol3m.php\
    \ on line 32\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// In this Kata, you have to sort an array of non-negative integers\
    \ according to\n// number of ones in their binary representation in ascending\
    \ order.\n// For similar number of ones, sort based on decimal value.\n// It must\
    \ be implemented like this:\n// >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4,\
    \ 5]\n// >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n// >>>\
    \ sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\nfunction sort_array($arr) {\n \
    \ $arr = array_map(function($n) {\n    return [$n, decbin($n)];\n  }, $arr);\n\
    \  usort($arr, function($a, $b) {\n    $a_ones = substr_count($a[1], '1');\n \
    \   $b_ones = substr_count($b[1], '1');\n    if ($a_ones === $b_ones) {\n    \
    \  return $a[0] - $b[0];\n    }\n    return $a_ones - $b_ones;\n  });\n  return\
    \ array_map(function($n) {\n    return $n[0];\n  }, $arr);\n}\n\nfunction candidate(...$args)\
    \ {\n    return sort_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 5, 2, 3, 4)) !== array(1, 2, 4, 3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-2, -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0, 2,\
    \ 3, 4)) !== array(0, 1, 2, 4, 3)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2,\
    \ 2, 4, 4, 3, 3, 5, 5, 5, 7, 77)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 6, 44, 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8,\
    \ 16, 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp_d0eq3hs.php:32\n\
    Stack trace:\n#0 /tmp/tmp_d0eq3hs.php(41): test()\n#1 {main}\n  thrown in /tmp/tmp_d0eq3hs.php\
    \ on line 32\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// In this Kata, you have to sort an array of non-negative integers\
    \ according to\n// number of ones in their binary representation in ascending\
    \ order.\n// For similar number of ones, sort based on decimal value.\n// It must\
    \ be implemented like this:\n// >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4,\
    \ 5]\n// >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n// >>>\
    \ sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\nfunction sort_array($arr) {\n \
    \ $arr = array_map(function($n) {\n    return [$n, decbin($n)];\n  }, $arr);\n\
    \  usort($arr, function($a, $b) {\n    $a_ones = substr_count($a[1], '1');\n \
    \   $b_ones = substr_count($b[1], '1');\n    if ($a_ones === $b_ones) {\n    \
    \  return $a[0] - $b[0];\n    }\n    return $a_ones - $b_ones;\n  });\n  return\
    \ array_map(function($n) {\n    return $n[0];\n  }, $arr);\n}\n\nfunction candidate(...$args)\
    \ {\n    return sort_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 5, 2, 3, 4)) !== array(1, 2, 4, 3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-2, -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0, 2,\
    \ 3, 4)) !== array(0, 1, 2, 4, 3)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2,\
    \ 2, 4, 4, 3, 3, 5, 5, 5, 7, 77)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 6, 44, 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8,\
    \ 16, 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpdl81bezy.php:32\n\
    Stack trace:\n#0 /tmp/tmpdl81bezy.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpdl81bezy.php\
    \ on line 32\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// In this Kata, you have to sort an array of non-negative integers\
    \ according to\n// number of ones in their binary representation in ascending\
    \ order.\n// For similar number of ones, sort based on decimal value.\n// It must\
    \ be implemented like this:\n// >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4,\
    \ 5]\n// >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n// >>>\
    \ sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\nfunction sort_array($arr) {\n \
    \ $arr = array_map(function($v) {\n    return [$v, decbin($v)];\n  }, $arr);\n\
    \  usort($arr, function($a, $b) {\n    $a_ones = substr_count($a[1], '1');\n \
    \   $b_ones = substr_count($b[1], '1');\n    if ($a_ones == $b_ones) {\n     \
    \ return $a[0] - $b[0];\n    }\n    return $a_ones - $b_ones;\n  });\n  return\
    \ array_map(function($v) {\n    return $v[0];\n  }, $arr);\n}\n\nfunction candidate(...$args)\
    \ {\n    return sort_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 5, 2, 3, 4)) !== array(1, 2, 4, 3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-2, -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0, 2,\
    \ 3, 4)) !== array(0, 1, 2, 4, 3)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2,\
    \ 2, 4, 4, 3, 3, 5, 5, 5, 7, 77)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 6, 44, 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8,\
    \ 16, 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp6cz49_fj.php:32\n\
    Stack trace:\n#0 /tmp/tmp6cz49_fj.php(41): test()\n#1 {main}\n  thrown in /tmp/tmp6cz49_fj.php\
    \ on line 32\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// In this Kata, you have to sort an array of non-negative integers\
    \ according to\n// number of ones in their binary representation in ascending\
    \ order.\n// For similar number of ones, sort based on decimal value.\n// It must\
    \ be implemented like this:\n// >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4,\
    \ 5]\n// >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n// >>>\
    \ sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\nfunction sort_array($arr) {\n \
    \ $ones = [];\n  $zeros = [];\n  foreach ($arr as $key => $value) {\n    if (decbin($value)\
    \ == str_repeat('1', strlen(decbin($value)))) {\n      $ones[] = $value;\n   \
    \ } else {\n      $zeros[] = $value;\n    }\n  }\n  sort($ones);\n  sort($zeros);\n\
    \  return array_merge($zeros, $ones);\n}\n\nfunction candidate(...$args) {\n \
    \   return sort_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 5, 2, 3, 4)) !== array(1, 2, 4, 3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-2, -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0, 2,\
    \ 3, 4)) !== array(0, 1, 2, 4, 3)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2,\
    \ 2, 4, 4, 3, 3, 5, 5, 5, 7, 77)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 6, 44, 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8,\
    \ 16, 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpxbytffay.php:29\n\
    Stack trace:\n#0 /tmp/tmpxbytffay.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpxbytffay.php\
    \ on line 29\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// In this Kata, you have to sort an array of non-negative integers\
    \ according to\n// number of ones in their binary representation in ascending\
    \ order.\n// For similar number of ones, sort based on decimal value.\n// It must\
    \ be implemented like this:\n// >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4,\
    \ 5]\n// >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n// >>>\
    \ sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\nfunction sort_array($arr) {\n \
    \ $arr = array_map(function($num) {\n    $ones = substr_count(decbin($num), '1');\n\
    \    return [$num, $ones];\n  }, $arr);\n  usort($arr, function($a, $b) {\n  \
    \  if ($a[1] === $b[1]) {\n      return $a[0] - $b[0];\n    }\n    return $a[1]\
    \ - $b[1];\n  });\n  return array_map(function($num) {\n    return $num[0];\n\
    \  }, $arr);\n}\n\nfunction candidate(...$args) {\n    return sort_array(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 5, 2, 3, 4)) !== array(1,\
    \ 2, 4, 3, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2,\
    \ -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 0, 2, 3, 4)) !== array(0, 1, 2, 4,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !==\
    \ array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 44,\
    \ 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 16,\
    \ 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpciexlvfc.php:31\n\
    Stack trace:\n#0 /tmp/tmpciexlvfc.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpciexlvfc.php\
    \ on line 31\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// In this Kata, you have to sort an array of non-negative integers\
    \ according to\n// number of ones in their binary representation in ascending\
    \ order.\n// For similar number of ones, sort based on decimal value.\n// It must\
    \ be implemented like this:\n// >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4,\
    \ 5]\n// >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n// >>>\
    \ sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\nfunction sort_array($arr) {\n \
    \ $count = [];\n  foreach ($arr as $key => $value) {\n    $count[$key] = substr_count(decbin($value),\
    \ '1');\n  }\n  array_multisort($count, SORT_ASC, $arr);\n  return $arr;\n}\n\n\
    function candidate(...$args) {\n    return sort_array(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 5, 2, 3, 4)) !== array(1, 2, 4, 3,\
    \ 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2,\
    \ -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 0, 2, 3, 4)) !== array(0, 1, 2, 4,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !==\
    \ array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 44,\
    \ 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 16,\
    \ 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpvq20v0_l.php:24\n\
    Stack trace:\n#0 /tmp/tmpvq20v0_l.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpvq20v0_l.php\
    \ on line 24\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// In this Kata, you have to sort an array of non-negative integers\
    \ according to\n// number of ones in their binary representation in ascending\
    \ order.\n// For similar number of ones, sort based on decimal value.\n// It must\
    \ be implemented like this:\n// >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4,\
    \ 5]\n// >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n// >>>\
    \ sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\nfunction sort_array($arr) {\n \
    \   $arr = array_map(function($n) {\n        return [$n, decbin($n)];\n    },\
    \ $arr);\n    usort($arr, function($a, $b) {\n        $a = $a[1];\n        $b\
    \ = $b[1];\n        if (substr_count($a, '1') == substr_count($b, '1')) {\n  \
    \          return $a < $b ? -1 : 1;\n        }\n        return substr_count($a,\
    \ '1') < substr_count($b, '1') ? -1 : 1;\n    });\n    return array_map(function($n)\
    \ {\n        return $n[0];\n    }, $arr);\n}\n\nfunction candidate(...$args) {\n\
    \    return sort_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 5, 2, 3, 4)) !== array(1, 2, 4, 3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-2, -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0, 2,\
    \ 3, 4)) !== array(0, 1, 2, 4, 3)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2,\
    \ 2, 4, 4, 3, 3, 5, 5, 5, 7, 77)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 6, 44, 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8,\
    \ 16, 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpifmpmpgl.php:32\n\
    Stack trace:\n#0 /tmp/tmpifmpmpgl.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpifmpmpgl.php\
    \ on line 32\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// In this Kata, you have to sort an array of non-negative integers\
    \ according to\n// number of ones in their binary representation in ascending\
    \ order.\n// For similar number of ones, sort based on decimal value.\n// It must\
    \ be implemented like this:\n// >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4,\
    \ 5]\n// >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n// >>>\
    \ sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\nfunction sort_array($arr) {\n \
    \   $ones = [];\n    $zeros = [];\n    foreach ($arr as $key => $value) {\n  \
    \      $binary = decbin($value);\n        $count = substr_count($binary, '1');\n\
    \        if ($count === 0) {\n            $zeros[] = $value;\n        } else {\n\
    \            $ones[$count][] = $value;\n        }\n    }\n    ksort($ones);\n\
    \    $result = [];\n    foreach ($ones as $key => $value) {\n        sort($value);\n\
    \        $result = array_merge($result, $value);\n    }\n    sort($zeros);\n \
    \   $result = array_merge($result, $zeros);\n    return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return sort_array(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, 5, 2, 3, 4)) !== array(1, 2, 4, 3, 5)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2, -3, -4,\
    \ -5, -6)) !== array(-4, -2, -6, -5, -3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 0, 2, 3, 4)) !== array(0, 1, 2, 4, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 5, 77,\
    \ 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 44, 12, 32,\
    \ 5)) !== array(32, 3, 5, 6, 12, 44)) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 16, 32))\
    \ !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpbv5984cg.php:38\n\
    Stack trace:\n#0 /tmp/tmpbv5984cg.php(47): test()\n#1 {main}\n  thrown in /tmp/tmpbv5984cg.php\
    \ on line 38\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// In this Kata, you have to sort an array of non-negative integers\
    \ according to\n// number of ones in their binary representation in ascending\
    \ order.\n// For similar number of ones, sort based on decimal value.\n// It must\
    \ be implemented like this:\n// >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4,\
    \ 5]\n// >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n// >>>\
    \ sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\nfunction sort_array($arr) {\n \
    \ $arr = array_map(function($n) {\n    return [$n, decbin($n)];\n  }, $arr);\n\
    \  usort($arr, function($a, $b) {\n    $a_ones = substr_count($a[1], '1');\n \
    \   $b_ones = substr_count($b[1], '1');\n    if ($a_ones == $b_ones) {\n     \
    \ return $a[0] - $b[0];\n    }\n    return $a_ones - $b_ones;\n  });\n  return\
    \ array_map(function($n) {\n    return $n[0];\n  }, $arr);\n}\n\nfunction candidate(...$args)\
    \ {\n    return sort_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 5, 2, 3, 4)) !== array(1, 2, 4, 3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-2, -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0, 2,\
    \ 3, 4)) !== array(0, 1, 2, 4, 3)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2,\
    \ 2, 4, 4, 3, 3, 5, 5, 5, 7, 77)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 6, 44, 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8,\
    \ 16, 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpxn58gsdb.php:32\n\
    Stack trace:\n#0 /tmp/tmpxn58gsdb.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpxn58gsdb.php\
    \ on line 32\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// In this Kata, you have to sort an array of non-negative integers\
    \ according to\n// number of ones in their binary representation in ascending\
    \ order.\n// For similar number of ones, sort based on decimal value.\n// It must\
    \ be implemented like this:\n// >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4,\
    \ 5]\n// >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n// >>>\
    \ sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\nfunction sort_array($arr) {\n \
    \ $arr = array_map(function($a) {\n    return [$a, decbin($a)];\n  }, $arr);\n\
    \  usort($arr, function($a, $b) {\n    $a_ones = substr_count($a[1], '1');\n \
    \   $b_ones = substr_count($b[1], '1');\n    if ($a_ones === $b_ones) {\n    \
    \  return $a[0] - $b[0];\n    }\n    return $a_ones - $b_ones;\n  });\n  return\
    \ array_map(function($a) {\n    return $a[0];\n  }, $arr);\n}\n\nfunction candidate(...$args)\
    \ {\n    return sort_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 5, 2, 3, 4)) !== array(1, 2, 4, 3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-2, -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0, 2,\
    \ 3, 4)) !== array(0, 1, 2, 4, 3)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2,\
    \ 2, 4, 4, 3, 3, 5, 5, 5, 7, 77)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 6, 44, 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8,\
    \ 16, 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp4085z4vd.php:32\n\
    Stack trace:\n#0 /tmp/tmp4085z4vd.php(41): test()\n#1 {main}\n  thrown in /tmp/tmp4085z4vd.php\
    \ on line 32\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// In this Kata, you have to sort an array of non-negative integers\
    \ according to\n// number of ones in their binary representation in ascending\
    \ order.\n// For similar number of ones, sort based on decimal value.\n// It must\
    \ be implemented like this:\n// >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4,\
    \ 5]\n// >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n// >>>\
    \ sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\nfunction sort_array($arr) {\n \
    \ $arr = array_map(function($n) {\n    return [$n, decbin($n)];\n  }, $arr);\n\
    \  usort($arr, function($a, $b) {\n    $aOnes = substr_count($a[1], '1');\n  \
    \  $bOnes = substr_count($b[1], '1');\n    if ($aOnes == $bOnes) {\n      return\
    \ $a[0] - $b[0];\n    }\n    return $aOnes - $bOnes;\n  });\n  return array_map(function($n)\
    \ {\n    return $n[0];\n  }, $arr);\n}\n\nfunction candidate(...$args) {\n   \
    \ return sort_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 5, 2, 3, 4)) !== array(1, 2, 4, 3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-2, -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0, 2,\
    \ 3, 4)) !== array(0, 1, 2, 4, 3)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2,\
    \ 2, 4, 4, 3, 3, 5, 5, 5, 7, 77)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 6, 44, 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8,\
    \ 16, 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpci9gayx6.php:32\n\
    Stack trace:\n#0 /tmp/tmpci9gayx6.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpci9gayx6.php\
    \ on line 32\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// In this Kata, you have to sort an array of non-negative integers\
    \ according to\n// number of ones in their binary representation in ascending\
    \ order.\n// For similar number of ones, sort based on decimal value.\n// It must\
    \ be implemented like this:\n// >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4,\
    \ 5]\n// >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n// >>>\
    \ sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\nfunction sort_array($arr) {\n \
    \ $arr = array_map(function($n) {\n    return [$n, decbin($n)];\n  }, $arr);\n\
    \  usort($arr, function($a, $b) {\n    $a_ones = substr_count($a[1], '1');\n \
    \   $b_ones = substr_count($b[1], '1');\n    if ($a_ones === $b_ones) {\n    \
    \  return $a[0] - $b[0];\n    }\n    return $a_ones - $b_ones;\n  });\n  return\
    \ array_map(function($n) {\n    return $n[0];\n  }, $arr);\n}\n\nfunction candidate(...$args)\
    \ {\n    return sort_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 5, 2, 3, 4)) !== array(1, 2, 4, 3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-2, -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0, 2,\
    \ 3, 4)) !== array(0, 1, 2, 4, 3)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2,\
    \ 2, 4, 4, 3, 3, 5, 5, 5, 7, 77)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 6, 44, 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8,\
    \ 16, 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpiemha8ya.php:32\n\
    Stack trace:\n#0 /tmp/tmpiemha8ya.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpiemha8ya.php\
    \ on line 32\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// In this Kata, you have to sort an array of non-negative integers\
    \ according to\n// number of ones in their binary representation in ascending\
    \ order.\n// For similar number of ones, sort based on decimal value.\n// It must\
    \ be implemented like this:\n// >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4,\
    \ 5]\n// >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n// >>>\
    \ sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\nfunction sort_array($arr) {\n \
    \ $arr = array_map(function($x) {\n    return [$x, decbin($x)];\n  }, $arr);\n\
    \  usort($arr, function($a, $b) {\n    $a_ones = substr_count($a[1], '1');\n \
    \   $b_ones = substr_count($b[1], '1');\n    if ($a_ones == $b_ones) {\n     \
    \ return $a[0] - $b[0];\n    }\n    return $a_ones - $b_ones;\n  });\n  return\
    \ array_map(function($x) {\n    return $x[0];\n  }, $arr);\n}\n\nfunction candidate(...$args)\
    \ {\n    return sort_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 5, 2, 3, 4)) !== array(1, 2, 4, 3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-2, -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0, 2,\
    \ 3, 4)) !== array(0, 1, 2, 4, 3)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2,\
    \ 2, 4, 4, 3, 3, 5, 5, 5, 7, 77)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 6, 44, 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8,\
    \ 16, 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmptpzwe6la.php:32\n\
    Stack trace:\n#0 /tmp/tmptpzwe6la.php(41): test()\n#1 {main}\n  thrown in /tmp/tmptpzwe6la.php\
    \ on line 32\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// In this Kata, you have to sort an array of non-negative integers\
    \ according to\n// number of ones in their binary representation in ascending\
    \ order.\n// For similar number of ones, sort based on decimal value.\n// It must\
    \ be implemented like this:\n// >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4,\
    \ 5]\n// >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n// >>>\
    \ sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\nfunction sort_array($arr) {\n \
    \   $arr = array_map(function($elem) {\n        return [\n            'dec' =>\
    \ $elem,\n            'bin' => decbin($elem)\n        ];\n    }, $arr);\n    usort($arr,\
    \ function($a, $b) {\n        $a_ones = substr_count($a['bin'], '1');\n      \
    \  $b_ones = substr_count($b['bin'], '1');\n        if ($a_ones === $b_ones) {\n\
    \            return $a['dec'] - $b['dec'];\n        }\n        return $a_ones\
    \ - $b_ones;\n    });\n    return array_map(function($elem) {\n        return\
    \ $elem['dec'];\n    }, $arr);\n}\n\nfunction candidate(...$args) {\n    return\
    \ sort_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 5, 2, 3, 4)) !== array(1, 2, 4, 3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-2, -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0, 2,\
    \ 3, 4)) !== array(0, 1, 2, 4, 3)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2,\
    \ 2, 4, 4, 3, 3, 5, 5, 5, 7, 77)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 6, 44, 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8,\
    \ 16, 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpgl44wqsc.php:35\n\
    Stack trace:\n#0 /tmp/tmpgl44wqsc.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpgl44wqsc.php\
    \ on line 35\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// In this Kata, you have to sort an array of non-negative integers\
    \ according to\n// number of ones in their binary representation in ascending\
    \ order.\n// For similar number of ones, sort based on decimal value.\n// It must\
    \ be implemented like this:\n// >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4,\
    \ 5]\n// >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n// >>>\
    \ sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\nfunction sort_array($arr) {\n \
    \ $arr = array_map(function($x) {\n    return [$x, decbin($x)];\n  }, $arr);\n\
    \  usort($arr, function($a, $b) {\n    $a = $a[1];\n    $b = $b[1];\n    $a =\
    \ str_split($a);\n    $b = str_split($b);\n    $a = array_sum($a);\n    $b = array_sum($b);\n\
    \    if ($a === $b) {\n      return $a[0] - $b[0];\n    }\n    return $a - $b;\n\
    \  });\n  $arr = array_map(function($x) {\n    return $x[0];\n  }, $arr);\n  return\
    \ $arr;\n}\n\nfunction candidate(...$args) {\n    return sort_array(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 5, 2, 3, 4)) !== array(1,\
    \ 2, 4, 3, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2,\
    \ -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 0, 2, 3, 4)) !== array(0, 1, 2, 4,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !==\
    \ array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 44,\
    \ 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 16,\
    \ 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: ''
  stderr: "PHP Warning:  Trying to access array offset on value of type int in /tmp/tmphfptzu01.php\
    \ on line 21\nPHP Warning:  Trying to access array offset on value of type int\
    \ in /tmp/tmphfptzu01.php on line 21\nPHP Warning:  Trying to access array offset\
    \ on value of type int in /tmp/tmphfptzu01.php on line 21\nPHP Warning:  Trying\
    \ to access array offset on value of type int in /tmp/tmphfptzu01.php on line\
    \ 21\nPHP Warning:  Trying to access array offset on value of type int in /tmp/tmphfptzu01.php\
    \ on line 21\nPHP Warning:  Trying to access array offset on value of type int\
    \ in /tmp/tmphfptzu01.php on line 21\nPHP Fatal error:  Uncaught Exception: Test\
    \ failed! in /tmp/tmphfptzu01.php:36\nStack trace:\n#0 /tmp/tmphfptzu01.php(46):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmphfptzu01.php on line 36\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// In this Kata, you have to sort an array of non-negative integers\
    \ according to\n// number of ones in their binary representation in ascending\
    \ order.\n// For similar number of ones, sort based on decimal value.\n// It must\
    \ be implemented like this:\n// >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4,\
    \ 5]\n// >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n// >>>\
    \ sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\nfunction sort_array($arr) {\n \
    \ $arr = array_map(function($x) {\n    return [$x, decbin($x)];\n  }, $arr);\n\
    \  usort($arr, function($a, $b) {\n    $a_ones = substr_count($a[1], '1');\n \
    \   $b_ones = substr_count($b[1], '1');\n    if ($a_ones === $b_ones) {\n    \
    \  return $a[0] - $b[0];\n    }\n    return $a_ones - $b_ones;\n  });\n  return\
    \ array_map(function($x) {\n    return $x[0];\n  }, $arr);\n}\n\nfunction candidate(...$args)\
    \ {\n    return sort_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 5, 2, 3, 4)) !== array(1, 2, 4, 3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-2, -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0, 2,\
    \ 3, 4)) !== array(0, 1, 2, 4, 3)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2,\
    \ 2, 4, 4, 3, 3, 5, 5, 5, 7, 77)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 6, 44, 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8,\
    \ 16, 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmptb1pnlt4.php:32\n\
    Stack trace:\n#0 /tmp/tmptb1pnlt4.php(41): test()\n#1 {main}\n  thrown in /tmp/tmptb1pnlt4.php\
    \ on line 32\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// In this Kata, you have to sort an array of non-negative integers\
    \ according to\n// number of ones in their binary representation in ascending\
    \ order.\n// For similar number of ones, sort based on decimal value.\n// It must\
    \ be implemented like this:\n// >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4,\
    \ 5]\n// >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n// >>>\
    \ sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\nfunction sort_array($arr) {\n \
    \ $arr = array_map(function($n) {\n    return [$n, decbin($n)];\n  }, $arr);\n\
    \  usort($arr, function($a, $b) {\n    $a_ones = substr_count($a[1], '1');\n \
    \   $b_ones = substr_count($b[1], '1');\n    if ($a_ones == $b_ones) {\n     \
    \ return $a[0] - $b[0];\n    }\n    return $a_ones - $b_ones;\n  });\n  return\
    \ array_map(function($n) {\n    return $n[0];\n  }, $arr);\n}\n\nfunction candidate(...$args)\
    \ {\n    return sort_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 5, 2, 3, 4)) !== array(1, 2, 4, 3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-2, -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0, 2,\
    \ 3, 4)) !== array(0, 1, 2, 4, 3)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2,\
    \ 2, 4, 4, 3, 3, 5, 5, 5, 7, 77)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 6, 44, 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8,\
    \ 16, 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpd173rdss.php:32\n\
    Stack trace:\n#0 /tmp/tmpd173rdss.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpd173rdss.php\
    \ on line 32\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// In this Kata, you have to sort an array of non-negative integers\
    \ according to\n// number of ones in their binary representation in ascending\
    \ order.\n// For similar number of ones, sort based on decimal value.\n// It must\
    \ be implemented like this:\n// >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4,\
    \ 5]\n// >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n// >>>\
    \ sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\nfunction sort_array($arr) {\n \
    \ $arr = array_map(function($n) {\n    return [$n, decbin($n)];\n  }, $arr);\n\
    \  usort($arr, function($a, $b) {\n    $a = $a[1];\n    $b = $b[1];\n    $a =\
    \ str_split($a);\n    $b = str_split($b);\n    $a = array_sum($a);\n    $b = array_sum($b);\n\
    \    if ($a == $b) {\n      return $a[0] - $b[0];\n    }\n    return $a - $b;\n\
    \  });\n  $arr = array_map(function($n) {\n    return $n[0];\n  }, $arr);\n  return\
    \ $arr;\n}\n\nfunction candidate(...$args) {\n    return sort_array(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 5, 2, 3, 4)) !== array(1,\
    \ 2, 4, 3, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2,\
    \ -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 0, 2, 3, 4)) !== array(0, 1, 2, 4,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !==\
    \ array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 44,\
    \ 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 16,\
    \ 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: ''
  stderr: "PHP Warning:  Trying to access array offset on value of type int in /tmp/tmpjw8u4uw9.php\
    \ on line 21\nPHP Warning:  Trying to access array offset on value of type int\
    \ in /tmp/tmpjw8u4uw9.php on line 21\nPHP Warning:  Trying to access array offset\
    \ on value of type int in /tmp/tmpjw8u4uw9.php on line 21\nPHP Warning:  Trying\
    \ to access array offset on value of type int in /tmp/tmpjw8u4uw9.php on line\
    \ 21\nPHP Warning:  Trying to access array offset on value of type int in /tmp/tmpjw8u4uw9.php\
    \ on line 21\nPHP Warning:  Trying to access array offset on value of type int\
    \ in /tmp/tmpjw8u4uw9.php on line 21\nPHP Fatal error:  Uncaught Exception: Test\
    \ failed! in /tmp/tmpjw8u4uw9.php:36\nStack trace:\n#0 /tmp/tmpjw8u4uw9.php(46):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpjw8u4uw9.php on line 36\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// In this Kata, you have to sort an array of non-negative integers\
    \ according to\n// number of ones in their binary representation in ascending\
    \ order.\n// For similar number of ones, sort based on decimal value.\n// It must\
    \ be implemented like this:\n// >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4,\
    \ 5]\n// >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n// >>>\
    \ sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\nfunction sort_array($arr) {\n \
    \ $arr = array_map(function($n) {\n    return [$n, decbin($n)];\n  }, $arr);\n\
    \  usort($arr, function($a, $b) {\n    $a_ones = substr_count($a[1], '1');\n \
    \   $b_ones = substr_count($b[1], '1');\n    if ($a_ones == $b_ones) {\n     \
    \ return $a[0] - $b[0];\n    }\n    return $a_ones - $b_ones;\n  });\n  return\
    \ array_map(function($n) {\n    return $n[0];\n  }, $arr);\n}\n\nfunction candidate(...$args)\
    \ {\n    return sort_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 5, 2, 3, 4)) !== array(1, 2, 4, 3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-2, -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0, 2,\
    \ 3, 4)) !== array(0, 1, 2, 4, 3)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2,\
    \ 2, 4, 4, 3, 3, 5, 5, 5, 7, 77)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 6, 44, 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8,\
    \ 16, 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp5je5bfbx.php:32\n\
    Stack trace:\n#0 /tmp/tmp5je5bfbx.php(41): test()\n#1 {main}\n  thrown in /tmp/tmp5je5bfbx.php\
    \ on line 32\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// In this Kata, you have to sort an array of non-negative integers\
    \ according to\n// number of ones in their binary representation in ascending\
    \ order.\n// For similar number of ones, sort based on decimal value.\n// It must\
    \ be implemented like this:\n// >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4,\
    \ 5]\n// >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n// >>>\
    \ sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\nfunction sort_array($arr) {\n \
    \ $arr = array_map(function($x) {\n    return [$x, decbin($x)];\n  }, $arr);\n\
    \  usort($arr, function($a, $b) {\n    $a = $a[1];\n    $b = $b[1];\n    $a =\
    \ str_split($a);\n    $b = str_split($b);\n    $a = array_sum($a);\n    $b = array_sum($b);\n\
    \    if ($a === $b) {\n      return $a[0] - $b[0];\n    }\n    return $a - $b;\n\
    \  });\n  $arr = array_map(function($x) {\n    return $x[0];\n  }, $arr);\n  return\
    \ $arr;\n}\nfunction candidate(...$args) {\n    return sort_array(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 5, 2, 3, 4)) !== array(1,\
    \ 2, 4, 3, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2,\
    \ -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 0, 2, 3, 4)) !== array(0, 1, 2, 4,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !==\
    \ array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 44,\
    \ 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 16,\
    \ 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: ''
  stderr: "PHP Warning:  Trying to access array offset on value of type int in /tmp/tmpdyd__w9w.php\
    \ on line 21\nPHP Warning:  Trying to access array offset on value of type int\
    \ in /tmp/tmpdyd__w9w.php on line 21\nPHP Warning:  Trying to access array offset\
    \ on value of type int in /tmp/tmpdyd__w9w.php on line 21\nPHP Warning:  Trying\
    \ to access array offset on value of type int in /tmp/tmpdyd__w9w.php on line\
    \ 21\nPHP Warning:  Trying to access array offset on value of type int in /tmp/tmpdyd__w9w.php\
    \ on line 21\nPHP Warning:  Trying to access array offset on value of type int\
    \ in /tmp/tmpdyd__w9w.php on line 21\nPHP Fatal error:  Uncaught Exception: Test\
    \ failed! in /tmp/tmpdyd__w9w.php:35\nStack trace:\n#0 /tmp/tmpdyd__w9w.php(45):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpdyd__w9w.php on line 35\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// In this Kata, you have to sort an array of non-negative integers\
    \ according to\n// number of ones in their binary representation in ascending\
    \ order.\n// For similar number of ones, sort based on decimal value.\n// It must\
    \ be implemented like this:\n// >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4,\
    \ 5]\n// >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n// >>>\
    \ sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\nfunction sort_array($arr) {\n \
    \   $arr = array_map(function($num) {\n        return [$num, decbin($num)];\n\
    \    }, $arr);\n    usort($arr, function($a, $b) {\n        $a_ones = substr_count($a[1],\
    \ '1');\n        $b_ones = substr_count($b[1], '1');\n        if ($a_ones == $b_ones)\
    \ {\n            return $a[0] - $b[0];\n        }\n        return $a_ones - $b_ones;\n\
    \    });\n    return array_map(function($num) {\n        return $num[0];\n   \
    \ }, $arr);\n}\n\nfunction candidate(...$args) {\n    return sort_array(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 5, 2, 3, 4)) !== array(1,\
    \ 2, 4, 3, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2,\
    \ -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 0, 2, 3, 4)) !== array(0, 1, 2, 4,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !==\
    \ array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 44,\
    \ 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 16,\
    \ 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpwxdbrkgo.php:32\n\
    Stack trace:\n#0 /tmp/tmpwxdbrkgo.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpwxdbrkgo.php\
    \ on line 32\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// In this Kata, you have to sort an array of non-negative integers\
    \ according to\n// number of ones in their binary representation in ascending\
    \ order.\n// For similar number of ones, sort based on decimal value.\n// It must\
    \ be implemented like this:\n// >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4,\
    \ 5]\n// >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n// >>>\
    \ sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\nfunction sort_array($arr) {\n \
    \ $arr = array_map(function($num) {\n    $ones = substr_count(decbin($num), '1');\n\
    \    return [$num, $ones];\n  }, $arr);\n  usort($arr, function($a, $b) {\n  \
    \  if ($a[1] == $b[1]) {\n      return $a[0] - $b[0];\n    }\n    return $a[1]\
    \ - $b[1];\n  });\n  return array_map(function($num) {\n    return $num[0];\n\
    \  }, $arr);\n}\n\nfunction candidate(...$args) {\n    return sort_array(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 5, 2, 3, 4)) !== array(1,\
    \ 2, 4, 3, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2,\
    \ -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 0, 2, 3, 4)) !== array(0, 1, 2, 4,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !==\
    \ array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 44,\
    \ 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 16,\
    \ 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpygop5pmh.php:31\n\
    Stack trace:\n#0 /tmp/tmpygop5pmh.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpygop5pmh.php\
    \ on line 31\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// In this Kata, you have to sort an array of non-negative integers\
    \ according to\n// number of ones in their binary representation in ascending\
    \ order.\n// For similar number of ones, sort based on decimal value.\n// It must\
    \ be implemented like this:\n// >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4,\
    \ 5]\n// >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n// >>>\
    \ sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\nfunction sort_array($arr) {\n \
    \ $arr = array_map(function($n) {\n    return [$n, decbin($n)];\n  }, $arr);\n\
    \  usort($arr, function($a, $b) {\n    $a_ones = substr_count($a[1], '1');\n \
    \   $b_ones = substr_count($b[1], '1');\n    if ($a_ones === $b_ones) {\n    \
    \  return $a[0] - $b[0];\n    }\n    return $a_ones - $b_ones;\n  });\n  return\
    \ array_map(function($n) {\n    return $n[0];\n  }, $arr);\n}\n\nfunction candidate(...$args)\
    \ {\n    return sort_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 5, 2, 3, 4)) !== array(1, 2, 4, 3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-2, -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0, 2,\
    \ 3, 4)) !== array(0, 1, 2, 4, 3)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2,\
    \ 2, 4, 4, 3, 3, 5, 5, 5, 7, 77)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 6, 44, 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8,\
    \ 16, 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp7ki553a4.php:32\n\
    Stack trace:\n#0 /tmp/tmp7ki553a4.php(41): test()\n#1 {main}\n  thrown in /tmp/tmp7ki553a4.php\
    \ on line 32\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// In this Kata, you have to sort an array of non-negative integers\
    \ according to\n// number of ones in their binary representation in ascending\
    \ order.\n// For similar number of ones, sort based on decimal value.\n// It must\
    \ be implemented like this:\n// >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4,\
    \ 5]\n// >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n// >>>\
    \ sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\nfunction sort_array($arr) {\n \
    \ $arr = array_map(function($n) {\n    $ones = substr_count(decbin($n), '1');\n\
    \    return [$n, $ones];\n  }, $arr);\n  usort($arr, function($a, $b) {\n    if\
    \ ($a[1] == $b[1]) {\n      return $a[0] - $b[0];\n    }\n    return $a[1] - $b[1];\n\
    \  });\n  return array_map(function($n) {\n    return $n[0];\n  }, $arr);\n}\n\
    \nfunction candidate(...$args) {\n    return sort_array(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 5, 2, 3, 4)) !== array(1, 2, 4, 3,\
    \ 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2,\
    \ -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 0, 2, 3, 4)) !== array(0, 1, 2, 4,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !==\
    \ array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 44,\
    \ 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 16,\
    \ 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmps_xpu14e.php:31\n\
    Stack trace:\n#0 /tmp/tmps_xpu14e.php(40): test()\n#1 {main}\n  thrown in /tmp/tmps_xpu14e.php\
    \ on line 31\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// In this Kata, you have to sort an array of non-negative integers\
    \ according to\n// number of ones in their binary representation in ascending\
    \ order.\n// For similar number of ones, sort based on decimal value.\n// It must\
    \ be implemented like this:\n// >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4,\
    \ 5]\n// >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n// >>>\
    \ sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\nfunction sort_array($arr) {\n \
    \   $arr = array_map(function($i) {\n        return [$i, decbin($i)];\n    },\
    \ $arr);\n    usort($arr, function($a, $b) {\n        $a_ones = substr_count($a[1],\
    \ '1');\n        $b_ones = substr_count($b[1], '1');\n        if ($a_ones == $b_ones)\
    \ {\n            return $a[0] - $b[0];\n        }\n        return $a_ones - $b_ones;\n\
    \    });\n    return array_map(function($i) {\n        return $i[0];\n    }, $arr);\n\
    }\n\nfunction candidate(...$args) {\n    return sort_array(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 5, 2, 3, 4)) !== array(1, 2, 4, 3,\
    \ 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2,\
    \ -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 0, 2, 3, 4)) !== array(0, 1, 2, 4,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !==\
    \ array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 44,\
    \ 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 16,\
    \ 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp2s60audm.php:32\n\
    Stack trace:\n#0 /tmp/tmp2s60audm.php(41): test()\n#1 {main}\n  thrown in /tmp/tmp2s60audm.php\
    \ on line 32\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// In this Kata, you have to sort an array of non-negative integers\
    \ according to\n// number of ones in their binary representation in ascending\
    \ order.\n// For similar number of ones, sort based on decimal value.\n// It must\
    \ be implemented like this:\n// >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4,\
    \ 5]\n// >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n// >>>\
    \ sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\nfunction sort_array($arr) {\n \
    \   $ones = [];\n    foreach ($arr as $i => $num) {\n        $ones[$i] = substr_count(decbin($num),\
    \ '1');\n    }\n    array_multisort($ones, SORT_ASC, $arr);\n    return $arr;\n\
    }\n\nfunction candidate(...$args) {\n    return sort_array(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 5, 2, 3, 4)) !== array(1, 2, 4, 3,\
    \ 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2,\
    \ -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 0, 2, 3, 4)) !== array(0, 1, 2, 4,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !==\
    \ array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 44,\
    \ 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 16,\
    \ 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp0l1mjocy.php:24\n\
    Stack trace:\n#0 /tmp/tmp0l1mjocy.php(33): test()\n#1 {main}\n  thrown in /tmp/tmp0l1mjocy.php\
    \ on line 24\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// In this Kata, you have to sort an array of non-negative integers\
    \ according to\n// number of ones in their binary representation in ascending\
    \ order.\n// For similar number of ones, sort based on decimal value.\n// It must\
    \ be implemented like this:\n// >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4,\
    \ 5]\n// >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n// >>>\
    \ sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\nfunction sort_array($arr) {\n \
    \ $arr = array_map(function($n) {\n    return [$n, decbin($n)];\n  }, $arr);\n\
    \  usort($arr, function($a, $b) {\n    $a_ones = substr_count($a[1], '1');\n \
    \   $b_ones = substr_count($b[1], '1');\n    if ($a_ones == $b_ones) {\n     \
    \ return $a[0] - $b[0];\n    }\n    return $a_ones - $b_ones;\n  });\n  return\
    \ array_map(function($n) {\n    return $n[0];\n  }, $arr);\n}\n\necho implode(',\
    \ ', sort_array([1, 5, 2, 3, 4])) . \"\\n\";\necho implode(', ', sort_array([-2,\
    \ -3, -4, -5, -6])) . \"\\n\";\necho implode(', ', sort_array([1, 0, 2, 3, 4]))\
    \ . \"\\n\";\nfunction candidate(...$args) {\n    return sort_array(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 5, 2, 3, 4)) !== array(1,\
    \ 2, 4, 3, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2,\
    \ -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 0, 2, 3, 4)) !== array(0, 1, 2, 4,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !==\
    \ array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 44,\
    \ 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 16,\
    \ 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: "1, 2, 4, 3, 5\n-6, -4, -5, -3, -2\n0, 1, 2, 4, 3\n"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpu18ra406.php:35\n\
    Stack trace:\n#0 /tmp/tmpu18ra406.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpu18ra406.php\
    \ on line 35\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// In this Kata, you have to sort an array of non-negative integers\
    \ according to\n// number of ones in their binary representation in ascending\
    \ order.\n// For similar number of ones, sort based on decimal value.\n// It must\
    \ be implemented like this:\n// >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4,\
    \ 5]\n// >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n// >>>\
    \ sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\nfunction sort_array($arr) {\n \
    \ $arr = array_map(function($a) {\n    return [$a, decbin($a)];\n  }, $arr);\n\
    \  usort($arr, function($a, $b) {\n    $a = substr_count($a[1], '1');\n    $b\
    \ = substr_count($b[1], '1');\n    if ($a === $b) {\n      return $a[0] - $b[0];\n\
    \    }\n    return $a - $b;\n  });\n  return array_map(function($a) {\n    return\
    \ $a[0];\n  }, $arr);\n}\n\nfunction candidate(...$args) {\n    return sort_array(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 5, 2, 3, 4)) !== array(1,\
    \ 2, 4, 3, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2,\
    \ -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 0, 2, 3, 4)) !== array(0, 1, 2, 4,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !==\
    \ array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 44,\
    \ 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 16,\
    \ 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: ''
  stderr: "PHP Warning:  Trying to access array offset on value of type int in /tmp/tmp7evkf5da.php\
    \ on line 17\nPHP Warning:  Trying to access array offset on value of type int\
    \ in /tmp/tmp7evkf5da.php on line 17\nPHP Warning:  Trying to access array offset\
    \ on value of type int in /tmp/tmp7evkf5da.php on line 17\nPHP Warning:  Trying\
    \ to access array offset on value of type int in /tmp/tmp7evkf5da.php on line\
    \ 17\nPHP Warning:  Trying to access array offset on value of type int in /tmp/tmp7evkf5da.php\
    \ on line 17\nPHP Warning:  Trying to access array offset on value of type int\
    \ in /tmp/tmp7evkf5da.php on line 17\nPHP Fatal error:  Uncaught Exception: Test\
    \ failed! in /tmp/tmp7evkf5da.php:31\nStack trace:\n#0 /tmp/tmp7evkf5da.php(41):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmp7evkf5da.php on line 31\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// In this Kata, you have to sort an array of non-negative integers\
    \ according to\n// number of ones in their binary representation in ascending\
    \ order.\n// For similar number of ones, sort based on decimal value.\n// It must\
    \ be implemented like this:\n// >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4,\
    \ 5]\n// >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n// >>>\
    \ sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\nfunction sort_array($arr) {\n \
    \ $arr = array_map(function($x) {\n    return [$x, decbin($x)];\n  }, $arr);\n\
    \  usort($arr, function($a, $b) {\n    $a_ones = substr_count($a[1], '1');\n \
    \   $b_ones = substr_count($b[1], '1');\n    if ($a_ones == $b_ones) {\n     \
    \ return $a[0] - $b[0];\n    }\n    return $a_ones - $b_ones;\n  });\n  return\
    \ array_map(function($x) {\n    return $x[0];\n  }, $arr);\n}\n\nfunction candidate(...$args)\
    \ {\n    return sort_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 5, 2, 3, 4)) !== array(1, 2, 4, 3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-2, -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0, 2,\
    \ 3, 4)) !== array(0, 1, 2, 4, 3)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2,\
    \ 2, 4, 4, 3, 3, 5, 5, 5, 7, 77)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 6, 44, 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8,\
    \ 16, 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpltu0qapt.php:32\n\
    Stack trace:\n#0 /tmp/tmpltu0qapt.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpltu0qapt.php\
    \ on line 32\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// In this Kata, you have to sort an array of non-negative integers\
    \ according to\n// number of ones in their binary representation in ascending\
    \ order.\n// For similar number of ones, sort based on decimal value.\n// It must\
    \ be implemented like this:\n// >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4,\
    \ 5]\n// >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n// >>>\
    \ sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\nfunction sort_array($arr) {\n \
    \   $arr = array_map(function($v) {\n        return [$v, decbin($v)];\n    },\
    \ $arr);\n    usort($arr, function($a, $b) {\n        $a1 = substr_count($a[1],\
    \ '1');\n        $b1 = substr_count($b[1], '1');\n        if ($a1 == $b1) {\n\
    \            return $a[0] - $b[0];\n        }\n        return $a1 - $b1;\n   \
    \ });\n    return array_map(function($v) {\n        return $v[0];\n    }, $arr);\n\
    }\n\nfunction candidate(...$args) {\n    return sort_array(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 5, 2, 3, 4)) !== array(1, 2, 4, 3,\
    \ 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2,\
    \ -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 0, 2, 3, 4)) !== array(0, 1, 2, 4,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !==\
    \ array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 44,\
    \ 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 16,\
    \ 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmppg20puuu.php:32\n\
    Stack trace:\n#0 /tmp/tmppg20puuu.php(41): test()\n#1 {main}\n  thrown in /tmp/tmppg20puuu.php\
    \ on line 32\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// In this Kata, you have to sort an array of non-negative integers\
    \ according to\n// number of ones in their binary representation in ascending\
    \ order.\n// For similar number of ones, sort based on decimal value.\n// It must\
    \ be implemented like this:\n// >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4,\
    \ 5]\n// >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n// >>>\
    \ sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\nfunction sort_array($arr) {\n \
    \   $ones = [];\n    foreach ($arr as $num) {\n        $ones[] = substr_count(decbin($num),\
    \ '1');\n    }\n    array_multisort($ones, $arr);\n    return $arr;\n}\n\nfunction\
    \ candidate(...$args) {\n    return sort_array(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(array(1, 5, 2, 3, 4)) !== array(1, 2, 4, 3, 5)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2, -3, -4,\
    \ -5, -6)) !== array(-4, -2, -6, -5, -3)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(1, 0, 2, 3, 4)) !== array(0, 1, 2, 4, 3)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array()) !== array())\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 5, 77,\
    \ 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 44, 12, 32,\
    \ 5)) !== array(32, 3, 5, 6, 12, 44)) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 16, 32))\
    \ !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpaewjirsm.php:24\n\
    Stack trace:\n#0 /tmp/tmpaewjirsm.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpaewjirsm.php\
    \ on line 24\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// In this Kata, you have to sort an array of non-negative integers\
    \ according to\n// number of ones in their binary representation in ascending\
    \ order.\n// For similar number of ones, sort based on decimal value.\n// It must\
    \ be implemented like this:\n// >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4,\
    \ 5]\n// >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n// >>>\
    \ sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\nfunction sort_array($arr) {\n \
    \   $ones = [];\n    $zeros = [];\n    foreach ($arr as $key => $value) {\n  \
    \      $binary = decbin($value);\n        $count = substr_count($binary, '1');\n\
    \        if ($count > 0) {\n            $ones[$key] = $value;\n        } else\
    \ {\n            $zeros[$key] = $value;\n        }\n    }\n    asort($ones);\n\
    \    asort($zeros);\n    $result = array_merge($zeros, $ones);\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return sort_array(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 5, 2, 3, 4)) !== array(1, 2, 4, 3,\
    \ 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2,\
    \ -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 0, 2, 3, 4)) !== array(0, 1, 2, 4,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !==\
    \ array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 44,\
    \ 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 16,\
    \ 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpktnwdvxr.php:32\n\
    Stack trace:\n#0 /tmp/tmpktnwdvxr.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpktnwdvxr.php\
    \ on line 32\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// In this Kata, you have to sort an array of non-negative integers\
    \ according to\n// number of ones in their binary representation in ascending\
    \ order.\n// For similar number of ones, sort based on decimal value.\n// It must\
    \ be implemented like this:\n// >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4,\
    \ 5]\n// >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n// >>>\
    \ sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\nfunction sort_array($arr) {\n \
    \ $arr = array_map(function($n) {\n    $ones = substr_count(decbin($n), '1');\n\
    \    return [$n, $ones];\n  }, $arr);\n  usort($arr, function($a, $b) {\n    return\
    \ $a[1] == $b[1] ? $a[0] - $b[0] : $a[1] - $b[1];\n  });\n  return array_map(function($n)\
    \ {\n    return $n[0];\n  }, $arr);\n}\n\nfunction candidate(...$args) {\n   \
    \ return sort_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 5, 2, 3, 4)) !== array(1, 2, 4, 3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-2, -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0, 2,\
    \ 3, 4)) !== array(0, 1, 2, 4, 3)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2,\
    \ 2, 4, 4, 3, 3, 5, 5, 5, 7, 77)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 6, 44, 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8,\
    \ 16, 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp_0fyu_d1.php:28\n\
    Stack trace:\n#0 /tmp/tmp_0fyu_d1.php(37): test()\n#1 {main}\n  thrown in /tmp/tmp_0fyu_d1.php\
    \ on line 28\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// In this Kata, you have to sort an array of non-negative integers\
    \ according to\n// number of ones in their binary representation in ascending\
    \ order.\n// For similar number of ones, sort based on decimal value.\n// It must\
    \ be implemented like this:\n// >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4,\
    \ 5]\n// >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n// >>>\
    \ sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\nfunction sort_array($arr) {\n \
    \ $arr = array_map(function($n) {\n    return [$n, decbin($n)];\n  }, $arr);\n\
    \  usort($arr, function($a, $b) {\n    $a_ones = substr_count($a[1], '1');\n \
    \   $b_ones = substr_count($b[1], '1');\n    if ($a_ones == $b_ones) {\n     \
    \ return $a[0] - $b[0];\n    }\n    return $a_ones - $b_ones;\n  });\n  return\
    \ array_map(function($n) {\n    return $n[0];\n  }, $arr);\n}\n\nfunction candidate(...$args)\
    \ {\n    return sort_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 5, 2, 3, 4)) !== array(1, 2, 4, 3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-2, -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0, 2,\
    \ 3, 4)) !== array(0, 1, 2, 4, 3)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2,\
    \ 2, 4, 4, 3, 3, 5, 5, 5, 7, 77)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 6, 44, 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8,\
    \ 16, 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmphtj74tud.php:32\n\
    Stack trace:\n#0 /tmp/tmphtj74tud.php(41): test()\n#1 {main}\n  thrown in /tmp/tmphtj74tud.php\
    \ on line 32\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// In this Kata, you have to sort an array of non-negative integers\
    \ according to\n// number of ones in their binary representation in ascending\
    \ order.\n// For similar number of ones, sort based on decimal value.\n// It must\
    \ be implemented like this:\n// >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4,\
    \ 5]\n// >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n// >>>\
    \ sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\nfunction sort_array($arr) {\n \
    \   $arr = array_map(function($x) {\n        return [$x, decbin($x)];\n    },\
    \ $arr);\n    usort($arr, function($a, $b) {\n        $a_ones = substr_count($a[1],\
    \ '1');\n        $b_ones = substr_count($b[1], '1');\n        if ($a_ones == $b_ones)\
    \ {\n            return $a[0] - $b[0];\n        }\n        return $a_ones - $b_ones;\n\
    \    });\n    return array_map(function($x) {\n        return $x[0];\n    }, $arr);\n\
    }\n\nfunction candidate(...$args) {\n    return sort_array(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 5, 2, 3, 4)) !== array(1, 2, 4, 3,\
    \ 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2,\
    \ -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 0, 2, 3, 4)) !== array(0, 1, 2, 4,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !==\
    \ array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 44,\
    \ 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 16,\
    \ 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp7kl216bn.php:32\n\
    Stack trace:\n#0 /tmp/tmp7kl216bn.php(41): test()\n#1 {main}\n  thrown in /tmp/tmp7kl216bn.php\
    \ on line 32\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// In this Kata, you have to sort an array of non-negative integers\
    \ according to\n// number of ones in their binary representation in ascending\
    \ order.\n// For similar number of ones, sort based on decimal value.\n// It must\
    \ be implemented like this:\n// >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4,\
    \ 5]\n// >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n// >>>\
    \ sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\nfunction sort_array($arr) {\n \
    \ $ones = [];\n  $zeros = [];\n  foreach ($arr as $num) {\n    if ($num < 0) {\n\
    \      $zeros[] = $num;\n    } else {\n      $ones[] = $num;\n    }\n  }\n  usort($ones,\
    \ function($a, $b) {\n    $a_ones = substr_count(decbin($a), '1');\n    $b_ones\
    \ = substr_count(decbin($b), '1');\n    if ($a_ones == $b_ones) {\n      return\
    \ $a - $b;\n    }\n    return $a_ones - $b_ones;\n  });\n  return array_merge($ones,\
    \ $zeros);\n}\n\nfunction candidate(...$args) {\n    return sort_array(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 5, 2, 3, 4)) !== array(1,\
    \ 2, 4, 3, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2,\
    \ -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 0, 2, 3, 4)) !== array(0, 1, 2, 4,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !==\
    \ array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 44,\
    \ 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 16,\
    \ 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp3z5wd662.php:36\n\
    Stack trace:\n#0 /tmp/tmp3z5wd662.php(45): test()\n#1 {main}\n  thrown in /tmp/tmp3z5wd662.php\
    \ on line 36\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// In this Kata, you have to sort an array of non-negative integers\
    \ according to\n// number of ones in their binary representation in ascending\
    \ order.\n// For similar number of ones, sort based on decimal value.\n// It must\
    \ be implemented like this:\n// >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4,\
    \ 5]\n// >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n// >>>\
    \ sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\nfunction sort_array($arr) {\n \
    \   $arr = array_map(function($num) {\n        return [$num, decbin($num)];\n\
    \    }, $arr);\n    usort($arr, function($a, $b) {\n        $a_ones = substr_count($a[1],\
    \ '1');\n        $b_ones = substr_count($b[1], '1');\n        if ($a_ones == $b_ones)\
    \ {\n            return $a[0] - $b[0];\n        }\n        return $a_ones - $b_ones;\n\
    \    });\n    return array_map(function($num) {\n        return $num[0];\n   \
    \ }, $arr);\n}\n\nfunction candidate(...$args) {\n    return sort_array(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 5, 2, 3, 4)) !== array(1,\
    \ 2, 4, 3, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2,\
    \ -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 0, 2, 3, 4)) !== array(0, 1, 2, 4,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !==\
    \ array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 44,\
    \ 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 16,\
    \ 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpsds1u9d1.php:32\n\
    Stack trace:\n#0 /tmp/tmpsds1u9d1.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpsds1u9d1.php\
    \ on line 32\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// In this Kata, you have to sort an array of non-negative integers\
    \ according to\n// number of ones in their binary representation in ascending\
    \ order.\n// For similar number of ones, sort based on decimal value.\n// It must\
    \ be implemented like this:\n// >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4,\
    \ 5]\n// >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n// >>>\
    \ sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\nfunction sort_array($arr) {\n \
    \ $arr = array_map(function($n) {\n    return [$n, decbin($n)];\n  }, $arr);\n\
    \  usort($arr, function($a, $b) {\n    $a = $a[1];\n    $b = $b[1];\n    $a =\
    \ str_replace('0', '', $a);\n    $b = str_replace('0', '', $b);\n    if (strlen($a)\
    \ === strlen($b)) {\n      return $a[0] > $b[0] ? 1 : -1;\n    }\n    return strlen($a)\
    \ > strlen($b) ? 1 : -1;\n  });\n  return array_map(function($n) {\n    return\
    \ $n[0];\n  }, $arr);\n}\n\nfunction candidate(...$args) {\n    return sort_array(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 5, 2, 3, 4)) !== array(1,\
    \ 2, 4, 3, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2,\
    \ -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 0, 2, 3, 4)) !== array(0, 1, 2, 4,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !==\
    \ array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 44,\
    \ 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 16,\
    \ 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpod6zuau2.php:33\n\
    Stack trace:\n#0 /tmp/tmpod6zuau2.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpod6zuau2.php\
    \ on line 33\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// In this Kata, you have to sort an array of non-negative integers\
    \ according to\n// number of ones in their binary representation in ascending\
    \ order.\n// For similar number of ones, sort based on decimal value.\n// It must\
    \ be implemented like this:\n// >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4,\
    \ 5]\n// >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n// >>>\
    \ sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\nfunction sort_array($arr) {\n \
    \ $arr = array_map(function($n) {\n    return [$n, decbin($n)];\n  }, $arr);\n\
    \  usort($arr, function($a, $b) {\n    $a_ones = substr_count($a[1], '1');\n \
    \   $b_ones = substr_count($b[1], '1');\n    if ($a_ones === $b_ones) {\n    \
    \  return $a[0] - $b[0];\n    }\n    return $a_ones - $b_ones;\n  });\n  return\
    \ array_map(function($n) {\n    return $n[0];\n  }, $arr);\n}\n\nfunction candidate(...$args)\
    \ {\n    return sort_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 5, 2, 3, 4)) !== array(1, 2, 4, 3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-2, -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0, 2,\
    \ 3, 4)) !== array(0, 1, 2, 4, 3)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2,\
    \ 2, 4, 4, 3, 3, 5, 5, 5, 7, 77)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 6, 44, 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8,\
    \ 16, 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp1rts4og_.php:32\n\
    Stack trace:\n#0 /tmp/tmp1rts4og_.php(41): test()\n#1 {main}\n  thrown in /tmp/tmp1rts4og_.php\
    \ on line 32\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// In this Kata, you have to sort an array of non-negative integers\
    \ according to\n// number of ones in their binary representation in ascending\
    \ order.\n// For similar number of ones, sort based on decimal value.\n// It must\
    \ be implemented like this:\n// >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4,\
    \ 5]\n// >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n// >>>\
    \ sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\nfunction sort_array($arr) {\n \
    \ $arr = array_map(function($n) {\n    return [$n, decbin($n)];\n  }, $arr);\n\
    \  usort($arr, function($a, $b) {\n    $a_ones = substr_count($a[1], '1');\n \
    \   $b_ones = substr_count($b[1], '1');\n    if ($a_ones == $b_ones) {\n     \
    \ return $a[0] - $b[0];\n    }\n    return $a_ones - $b_ones;\n  });\n  return\
    \ array_map(function($n) {\n    return $n[0];\n  }, $arr);\n}\n\nfunction candidate(...$args)\
    \ {\n    return sort_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 5, 2, 3, 4)) !== array(1, 2, 4, 3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-2, -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0, 2,\
    \ 3, 4)) !== array(0, 1, 2, 4, 3)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2,\
    \ 2, 4, 4, 3, 3, 5, 5, 5, 7, 77)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 6, 44, 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8,\
    \ 16, 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpjgzfbv_v.php:32\n\
    Stack trace:\n#0 /tmp/tmpjgzfbv_v.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpjgzfbv_v.php\
    \ on line 32\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// In this Kata, you have to sort an array of non-negative integers\
    \ according to\n// number of ones in their binary representation in ascending\
    \ order.\n// For similar number of ones, sort based on decimal value.\n// It must\
    \ be implemented like this:\n// >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4,\
    \ 5]\n// >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n// >>>\
    \ sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\nfunction sort_array($arr) {\n \
    \ $arr = array_map(function($num) {\n    return [$num, decbin($num)];\n  }, $arr);\n\
    \  usort($arr, function($a, $b) {\n    $a = $a[1];\n    $b = $b[1];\n    $a =\
    \ str_split($a);\n    $b = str_split($b);\n    $a = array_sum($a);\n    $b = array_sum($b);\n\
    \    if ($a == $b) {\n      return $a[0] - $b[0];\n    }\n    return $a - $b;\n\
    \  });\n  $arr = array_map(function($num) {\n    return $num[0];\n  }, $arr);\n\
    \  return $arr;\n}\n\nfunction candidate(...$args) {\n    return sort_array(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 5, 2, 3, 4)) !== array(1,\
    \ 2, 4, 3, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2,\
    \ -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 0, 2, 3, 4)) !== array(0, 1, 2, 4,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !==\
    \ array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 44,\
    \ 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 16,\
    \ 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: ''
  stderr: "PHP Warning:  Trying to access array offset on value of type int in /tmp/tmpqjand4e0.php\
    \ on line 21\nPHP Warning:  Trying to access array offset on value of type int\
    \ in /tmp/tmpqjand4e0.php on line 21\nPHP Warning:  Trying to access array offset\
    \ on value of type int in /tmp/tmpqjand4e0.php on line 21\nPHP Warning:  Trying\
    \ to access array offset on value of type int in /tmp/tmpqjand4e0.php on line\
    \ 21\nPHP Warning:  Trying to access array offset on value of type int in /tmp/tmpqjand4e0.php\
    \ on line 21\nPHP Warning:  Trying to access array offset on value of type int\
    \ in /tmp/tmpqjand4e0.php on line 21\nPHP Fatal error:  Uncaught Exception: Test\
    \ failed! in /tmp/tmpqjand4e0.php:36\nStack trace:\n#0 /tmp/tmpqjand4e0.php(46):\
    \ test()\n#1 {main}\n  thrown in /tmp/tmpqjand4e0.php on line 36\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// In this Kata, you have to sort an array of non-negative integers\
    \ according to\n// number of ones in their binary representation in ascending\
    \ order.\n// For similar number of ones, sort based on decimal value.\n// It must\
    \ be implemented like this:\n// >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4,\
    \ 5]\n// >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n// >>>\
    \ sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\nfunction sort_array($arr) {\n \
    \   $arr = array_map(function($x) {\n        return [$x, decbin($x)];\n    },\
    \ $arr);\n    usort($arr, function($a, $b) {\n        $a_ones = substr_count($a[1],\
    \ '1');\n        $b_ones = substr_count($b[1], '1');\n        if ($a_ones ===\
    \ $b_ones) {\n            return $a[0] - $b[0];\n        }\n        return $a_ones\
    \ - $b_ones;\n    });\n    return array_map(function($x) {\n        return $x[0];\n\
    \    }, $arr);\n}\n\nfunction candidate(...$args) {\n    return sort_array(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 5, 2, 3, 4)) !== array(1,\
    \ 2, 4, 3, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2,\
    \ -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 0, 2, 3, 4)) !== array(0, 1, 2, 4,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !==\
    \ array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 44,\
    \ 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 16,\
    \ 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmph7z5p4k5.php:32\n\
    Stack trace:\n#0 /tmp/tmph7z5p4k5.php(41): test()\n#1 {main}\n  thrown in /tmp/tmph7z5p4k5.php\
    \ on line 32\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// In this Kata, you have to sort an array of non-negative integers\
    \ according to\n// number of ones in their binary representation in ascending\
    \ order.\n// For similar number of ones, sort based on decimal value.\n// It must\
    \ be implemented like this:\n// >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4,\
    \ 5]\n// >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n// >>>\
    \ sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\nfunction sort_array($arr) {\n \
    \ $arr = array_map(function($n) {\n    return [$n, decbin($n)];\n  }, $arr);\n\
    \  usort($arr, function($a, $b) {\n    $a_ones = substr_count($a[1], '1');\n \
    \   $b_ones = substr_count($b[1], '1');\n    if ($a_ones == $b_ones) {\n     \
    \ return $a[0] - $b[0];\n    }\n    return $a_ones - $b_ones;\n  });\n  return\
    \ array_map(function($n) {\n    return $n[0];\n  }, $arr);\n}\n\nfunction candidate(...$args)\
    \ {\n    return sort_array(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1,\
    \ 5, 2, 3, 4)) !== array(1, 2, 4, 3, 5)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(-2, -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1, 0, 2,\
    \ 3, 4)) !== array(0, 1, 2, 4, 3)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array()) !== array()) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2,\
    \ 2, 4, 4, 3, 3, 5, 5, 5, 7, 77)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(array(3, 6, 44, 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8,\
    \ 16, 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpnr2cwmvj.php:32\n\
    Stack trace:\n#0 /tmp/tmpnr2cwmvj.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpnr2cwmvj.php\
    \ on line 32\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// In this Kata, you have to sort an array of non-negative integers\
    \ according to\n// number of ones in their binary representation in ascending\
    \ order.\n// For similar number of ones, sort based on decimal value.\n// It must\
    \ be implemented like this:\n// >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4,\
    \ 5]\n// >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n// >>>\
    \ sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\nfunction sort_array($arr) {\n \
    \   $arr = array_map(function($v) {\n        return [$v, decbin($v)];\n    },\
    \ $arr);\n    usort($arr, function($a, $b) {\n        $a_ones = substr_count($a[1],\
    \ '1');\n        $b_ones = substr_count($b[1], '1');\n        if ($a_ones == $b_ones)\
    \ {\n            return $a[0] - $b[0];\n        }\n        return $a_ones - $b_ones;\n\
    \    });\n    return array_map(function($v) {\n        return $v[0];\n    }, $arr);\n\
    }\n\nfunction candidate(...$args) {\n    return sort_array(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 5, 2, 3, 4)) !== array(1, 2, 4, 3,\
    \ 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2,\
    \ -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 0, 2, 3, 4)) !== array(0, 1, 2, 4,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !==\
    \ array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 44,\
    \ 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 16,\
    \ 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpcoau0_c6.php:32\n\
    Stack trace:\n#0 /tmp/tmpcoau0_c6.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpcoau0_c6.php\
    \ on line 32\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// In this Kata, you have to sort an array of non-negative integers\
    \ according to\n// number of ones in their binary representation in ascending\
    \ order.\n// For similar number of ones, sort based on decimal value.\n// It must\
    \ be implemented like this:\n// >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4,\
    \ 5]\n// >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n// >>>\
    \ sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\nfunction sort_array($arr) {\n \
    \   $arr = array_map(function($x) {\n        return [$x, decbin($x)];\n    },\
    \ $arr);\n    usort($arr, function($a, $b) {\n        $a_ones = substr_count($a[1],\
    \ '1');\n        $b_ones = substr_count($b[1], '1');\n        if ($a_ones == $b_ones)\
    \ {\n            return $a[0] - $b[0];\n        }\n        return $a_ones - $b_ones;\n\
    \    });\n    return array_map(function($x) {\n        return $x[0];\n    }, $arr);\n\
    }\n\nfunction candidate(...$args) {\n    return sort_array(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1, 5, 2, 3, 4)) !== array(1, 2, 4, 3,\
    \ 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2,\
    \ -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 0, 2, 3, 4)) !== array(0, 1, 2, 4,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !==\
    \ array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 44,\
    \ 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 16,\
    \ 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpcqxe_cc_.php:32\n\
    Stack trace:\n#0 /tmp/tmpcqxe_cc_.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpcqxe_cc_.php\
    \ on line 32\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// In this Kata, you have to sort an array of non-negative integers\
    \ according to\n// number of ones in their binary representation in ascending\
    \ order.\n// For similar number of ones, sort based on decimal value.\n// It must\
    \ be implemented like this:\n// >>> sort_array([1, 5, 2, 3, 4]) == [1, 2, 3, 4,\
    \ 5]\n// >>> sort_array([-2, -3, -4, -5, -6]) == [-6, -5, -4, -3, -2]\n// >>>\
    \ sort_array([1, 0, 2, 3, 4]) [0, 1, 2, 3, 4]\nfunction sort_array($arr) {\n \
    \ // Your code here\n}\nfunction candidate(...$args) {\n    return sort_array(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1, 5, 2, 3, 4)) !== array(1,\
    \ 2, 4, 3, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2,\
    \ -3, -4, -5, -6)) !== array(-4, -2, -6, -5, -3)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(array(1, 0, 2, 3, 4)) !== array(0, 1, 2, 4,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array()) !==\
    \ array()) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2,\
    \ 5, 77, 4, 5, 3, 5, 7, 2, 3, 4)) !== array(2, 2, 4, 4, 3, 3, 5, 5, 5, 7, 77))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(3, 6, 44,\
    \ 12, 32, 5)) !== array(32, 3, 5, 6, 12, 44)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(array(2, 4, 8, 16, 32)) !== array(2, 4, 8, 16, 32)) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(array(2, 4, 8, 16,\
    \ 32)) !== array(2, 4, 8, 16, 32)) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpefxiutfw.php:17\n\
    Stack trace:\n#0 /tmp/tmpefxiutfw.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpefxiutfw.php\
    \ on line 17\n"
  exit_code: 255
  status: Exception

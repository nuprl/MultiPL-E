name: HumanEval_19_sort_numbers
language: php
results:
- program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers('three one five')\n// 'one three\
    \ five'\nfunction sort_numbers($numbers) {\n    $numbers = explode(' ', $numbers);\n\
    \    $numbers = array_map(function($number) {\n        return number_to_digit($number);\n\
    \    }, $numbers);\n    sort($numbers);\n    $numbers = array_map(function($number)\
    \ {\n        return digit_to_number($number);\n    }, $numbers);\n    return implode('\
    \ ', $numbers);\n}\n\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Error: Call to undefined function number_to_digit()\
    \ in /tmp/tmp7dhr_e1u.php:10\nStack trace:\n#0 [internal function]: {closure}()\n\
    #1 /tmp/tmp7dhr_e1u.php(11): array_map()\n#2 /tmp/tmp7dhr_e1u.php(20): sort_numbers()\n\
    #3 /tmp/tmp7dhr_e1u.php(24): candidate()\n#4 /tmp/tmp7dhr_e1u.php(31): test()\n\
    #5 {main}\n  thrown in /tmp/tmp7dhr_e1u.php on line 10\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers('three one five')\n// 'one three\
    \ five'\nfunction sort_numbers($numbers) {\n    $numbers = explode(' ', $numbers);\n\
    \    $numbers = array_map(function($number) {\n        return array_search($number,\
    \ ['zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine']);\n\
    \    }, $numbers);\n    sort($numbers);\n    $numbers = array_map(function($number)\
    \ {\n        return ['zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight', 'nine'][$number];\n    }, $numbers);\n    return implode(' ', $numbers);\n\
    }\n\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpbva83691.php:24\n\
    Stack trace:\n#0 /tmp/tmpbva83691.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpbva83691.php\
    \ on line 24\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers('three one five')\n// 'one three\
    \ five'\nfunction sort_numbers($numbers) {\n  $numbers = explode(' ', $numbers);\n\
    \  $numbers = array_map(function($number) {\n    switch ($number) {\n      case\
    \ 'zero':\n        return 0;\n      case 'one':\n        return 1;\n      case\
    \ 'two':\n        return 2;\n      case 'three':\n        return 3;\n      case\
    \ 'four':\n        return 4;\n      case 'five':\n        return 5;\n      case\
    \ 'six':\n        return 6;\n      case 'seven':\n        return 7;\n      case\
    \ 'eight':\n        return 8;\n      case 'nine':\n        return 9;\n    }\n\
    \  }, $numbers);\n  sort($numbers);\n  $numbers = array_map(function($number)\
    \ {\n    switch ($number) {\n      case 0:\n        return 'zero';\n      case\
    \ 1:\n        return 'one';\n      case 2:\n        return 'two';\n      case\
    \ 3:\n        return 'three';\n      case 4:\n        return 'four';\n      case\
    \ 5:\n        return 'five';\n      case 6:\n        return 'six';\n      case\
    \ 7:\n        return 'seven';\n      case 8:\n        return 'eight';\n      case\
    \ 9:\n        return 'nine';\n    }\n  }, $numbers);\n  return implode(' ', $numbers);\n\
    }\n\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp393l28sg.php:66\n\
    Stack trace:\n#0 /tmp/tmp393l28sg.php(73): test()\n#1 {main}\n  thrown in /tmp/tmp393l28sg.php\
    \ on line 66\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers('three one five')\n// 'one three\
    \ five'\nfunction sort_numbers($numbers) {\n  $numbers = explode(' ', $numbers);\n\
    \  $numbers = array_map(function($number) {\n    return array_search($number,\
    \ array('zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight',\
    \ 'nine'));\n  }, $numbers);\n  sort($numbers);\n  $numbers = array_map(function($number)\
    \ {\n    return array('zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight', 'nine')[$number];\n  }, $numbers);\n  return implode(' ', $numbers);\n\
    }\n\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmphtuys59v.php:24\n\
    Stack trace:\n#0 /tmp/tmphtuys59v.php(31): test()\n#1 {main}\n  thrown in /tmp/tmphtuys59v.php\
    \ on line 24\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers('three one five')\n// 'one three\
    \ five'\nfunction sort_numbers($numbers) {\n    $numbers = explode(' ', $numbers);\n\
    \    $numbers = array_map(function($number) {\n        return number_to_int($number);\n\
    \    }, $numbers);\n    sort($numbers);\n    $numbers = array_map(function($number)\
    \ {\n        return int_to_number($number);\n    }, $numbers);\n    return implode('\
    \ ', $numbers);\n}\n\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Error: Call to undefined function number_to_int()\
    \ in /tmp/tmpwesq4x46.php:10\nStack trace:\n#0 [internal function]: {closure}()\n\
    #1 /tmp/tmpwesq4x46.php(11): array_map()\n#2 /tmp/tmpwesq4x46.php(20): sort_numbers()\n\
    #3 /tmp/tmpwesq4x46.php(24): candidate()\n#4 /tmp/tmpwesq4x46.php(31): test()\n\
    #5 {main}\n  thrown in /tmp/tmpwesq4x46.php on line 10\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers('three one five')\n// 'one three\
    \ five'\nfunction sort_numbers($numbers) {\n    $numbers = explode(' ', $numbers);\n\
    \    $numbers = array_map(function($number) {\n        return $number == 'zero'\
    \ ? 0 : $number == 'one' ? 1 : $number == 'two' ? 2 : $number == 'three' ? 3 :\
    \ $number == 'four' ? 4 : $number == 'five' ? 5 : $number == 'six' ? 6 : $number\
    \ == 'seven' ? 7 : $number == 'eight' ? 8 : $number == 'nine' ? 9 : $number;\n\
    \    }, $numbers);\n    sort($numbers);\n    $numbers = array_map(function($number)\
    \ {\n        return $number == 0 ? 'zero' : $number == 1 ? 'one' : $number ==\
    \ 2 ? 'two' : $number == 3 ? 'three' : $number == 4 ? 'four' : $number == 5 ?\
    \ 'five' : $number == 6 ? 'six' : $number == 7 ? 'seven' : $number == 8 ? 'eight'\
    \ : $number == 9 ? 'nine' : $number;\n    }, $numbers);\n    return implode('\
    \ ', $numbers);\n}\n\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Unparenthesized `a ? b : c ? d : e` is not supported.\
    \ Use either `(a ? b : c) ? d : e` or `a ? b : (c ? d : e)` in /tmp/tmpmnte32bm.php\
    \ on line 10\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers('three one five')\n// 'one three\
    \ five'\nfunction sort_numbers($numbers) {\n    $numbers = explode(' ', $numbers);\n\
    \    $numbers = array_map(function($number) {\n        return [\n            'number'\
    \ => $number,\n            'value' => array_search($number, ['zero', 'one', 'two',\
    \ 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine'])\n        ];\n   \
    \ }, $numbers);\n    usort($numbers, function($a, $b) {\n        return $a['value']\
    \ - $b['value'];\n    });\n    $numbers = array_map(function($number) {\n    \
    \    return $number['number'];\n    }, $numbers);\n    return implode(' ', $numbers);\n\
    }\n\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers('three one five')\n// 'one three\
    \ five'\nfunction sort_numbers($numbers) {\n    $numbers = explode(' ', $numbers);\n\
    \    $numbers = array_map(function($number) {\n        return [\n            'number'\
    \ => $number,\n            'value' => array_search($number, ['zero', 'one', 'two',\
    \ 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine'])\n        ];\n   \
    \ }, $numbers);\n    usort($numbers, function($a, $b) {\n        return $a['value']\
    \ - $b['value'];\n    });\n    $numbers = array_map(function($number) {\n    \
    \    return $number['number'];\n    }, $numbers);\n    return implode(' ', $numbers);\n\
    }\n\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers('three one five')\n// 'one three\
    \ five'\nfunction sort_numbers($numbers) {\n    $numbers = explode(' ', $numbers);\n\
    \    $numbers = array_map(function($number) {\n        return $number == 'zero'\
    \ ? 0 : $number == 'one' ? 1 : $number == 'two' ? 2 : $number == 'three' ? 3 :\
    \ $number == 'four' ? 4 : $number == 'five' ? 5 : $number == 'six' ? 6 : $number\
    \ == 'seven' ? 7 : $number == 'eight' ? 8 : $number == 'nine' ? 9 : $number;\n\
    \    }, $numbers);\n    sort($numbers);\n    $numbers = array_map(function($number)\
    \ {\n        return $number == 0 ? 'zero' : $number == 1 ? 'one' : $number ==\
    \ 2 ? 'two' : $number == 3 ? 'three' : $number == 4 ? 'four' : $number == 5 ?\
    \ 'five' : $number == 6 ? 'six' : $number == 7 ? 'seven' : $number == 8 ? 'eight'\
    \ : $number == 9 ? 'nine' : $number;\n    }, $numbers);\n    return implode('\
    \ ', $numbers);\n}\n\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Unparenthesized `a ? b : c ? d : e` is not supported.\
    \ Use either `(a ? b : c) ? d : e` or `a ? b : (c ? d : e)` in /tmp/tmpo5zy0wqz.php\
    \ on line 10\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers('three one five')\n// 'one three\
    \ five'\nfunction sort_numbers($numbers) {\n    $numbers = explode(' ', $numbers);\n\
    \    $numbers = array_map(function($number) {\n        switch ($number) {\n  \
    \          case 'zero':\n                return 0;\n            case 'one':\n\
    \                return 1;\n            case 'two':\n                return 2;\n\
    \            case 'three':\n                return 3;\n            case 'four':\n\
    \                return 4;\n            case 'five':\n                return 5;\n\
    \            case 'six':\n                return 6;\n            case 'seven':\n\
    \                return 7;\n            case 'eight':\n                return\
    \ 8;\n            case 'nine':\n                return 9;\n        }\n    }, $numbers);\n\
    \    sort($numbers);\n    $numbers = array_map(function($number) {\n        switch\
    \ ($number) {\n            case 0:\n                return 'zero';\n         \
    \   case 1:\n                return 'one';\n            case 2:\n            \
    \    return 'two';\n            case 3:\n                return 'three';\n   \
    \         case 4:\n                return 'four';\n            case 5:\n     \
    \           return 'five';\n            case 6:\n                return 'six';\n\
    \            case 7:\n                return 'seven';\n            case 8:\n \
    \               return 'eight';\n            case 9:\n                return 'nine';\n\
    \        }\n    }, $numbers);\n    return implode(' ', $numbers);\n}\n\nfunction\
    \ candidate(...$args) {\n    return sort_numbers(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpa11e6e0h.php:66\n\
    Stack trace:\n#0 /tmp/tmpa11e6e0h.php(73): test()\n#1 {main}\n  thrown in /tmp/tmpa11e6e0h.php\
    \ on line 66\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers('three one five')\n// 'one three\
    \ five'\nfunction sort_numbers($numbers) {\n    $numbers = explode(' ', $numbers);\n\
    \    $numbers = array_map(function($number) {\n        return convert_number($number);\n\
    \    }, $numbers);\n    sort($numbers);\n    $numbers = array_map(function($number)\
    \ {\n        return convert_number($number);\n    }, $numbers);\n    return implode('\
    \ ', $numbers);\n}\n\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Error: Call to undefined function convert_number()\
    \ in /tmp/tmpgqpe6mb_.php:10\nStack trace:\n#0 [internal function]: {closure}()\n\
    #1 /tmp/tmpgqpe6mb_.php(11): array_map()\n#2 /tmp/tmpgqpe6mb_.php(20): sort_numbers()\n\
    #3 /tmp/tmpgqpe6mb_.php(24): candidate()\n#4 /tmp/tmpgqpe6mb_.php(31): test()\n\
    #5 {main}\n  thrown in /tmp/tmpgqpe6mb_.php on line 10\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers('three one five')\n// 'one three\
    \ five'\nfunction sort_numbers($numbers) {\n    $numbers = explode(' ', $numbers);\n\
    \    $numbers = array_map(function($number) {\n        return array_search($number,\
    \ ['zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine']);\n\
    \    }, $numbers);\n    sort($numbers);\n    $numbers = array_map(function($number)\
    \ {\n        return ['zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight', 'nine'][$number];\n    }, $numbers);\n    return implode(' ', $numbers);\n\
    }\n\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpc6pr7wgr.php:24\n\
    Stack trace:\n#0 /tmp/tmpc6pr7wgr.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpc6pr7wgr.php\
    \ on line 24\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers('three one five')\n// 'one three\
    \ five'\nfunction sort_numbers($numbers) {\n  $numbers = explode(' ', $numbers);\n\
    \  $numbers = array_map(function($number) {\n    return number_to_numeral($number);\n\
    \  }, $numbers);\n  sort($numbers);\n  $numbers = array_map(function($number)\
    \ {\n    return numeral_to_number($number);\n  }, $numbers);\n  return implode('\
    \ ', $numbers);\n}\n\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Error: Call to undefined function number_to_numeral()\
    \ in /tmp/tmp5bp9491u.php:10\nStack trace:\n#0 [internal function]: {closure}()\n\
    #1 /tmp/tmp5bp9491u.php(11): array_map()\n#2 /tmp/tmp5bp9491u.php(20): sort_numbers()\n\
    #3 /tmp/tmp5bp9491u.php(24): candidate()\n#4 /tmp/tmp5bp9491u.php(31): test()\n\
    #5 {main}\n  thrown in /tmp/tmp5bp9491u.php on line 10\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers('three one five')\n// 'one three\
    \ five'\nfunction sort_numbers($numbers) {\n    $numbers = explode(' ', $numbers);\n\
    \    $numbers = array_map(function($number) {\n        return array_search($number,\
    \ ['zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine']);\n\
    \    }, $numbers);\n    sort($numbers);\n    $numbers = array_map(function($number)\
    \ {\n        return ['zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight', 'nine'][$number];\n    }, $numbers);\n    return implode(' ', $numbers);\n\
    }\n\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpm2biwq28.php:24\n\
    Stack trace:\n#0 /tmp/tmpm2biwq28.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpm2biwq28.php\
    \ on line 24\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers('three one five')\n// 'one three\
    \ five'\nfunction sort_numbers($numbers) {\n    $numbers = explode(' ', $numbers);\n\
    \    $numbers = array_map(function($n) {\n        return [\n            'zero'\
    \ => 0,\n            'one' => 1,\n            'two' => 2,\n            'three'\
    \ => 3,\n            'four' => 4,\n            'five' => 5,\n            'six'\
    \ => 6,\n            'seven' => 7,\n            'eight' => 8,\n            'nine'\
    \ => 9,\n        ][$n];\n    }, $numbers);\n    sort($numbers);\n    $numbers\
    \ = array_map(function($n) {\n        return [\n            0 => 'zero',\n   \
    \         1 => 'one',\n            2 => 'two',\n            3 => 'three',\n  \
    \          4 => 'four',\n            5 => 'five',\n            6 => 'six',\n \
    \           7 => 'seven',\n            8 => 'eight',\n            9 => 'nine',\n\
    \        ][$n];\n    }, $numbers);\n    return implode(' ', $numbers);\n}\n\n\
    function candidate(...$args) {\n    return sort_numbers(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Warning:  Undefined array key \"\" in /tmp/tmpwr0a2icu.php on line\
    \ 21\nPHP Warning:  Undefined array key \"\" in /tmp/tmpwr0a2icu.php on line 36\n"
  exit_code: 0
  status: OK
- program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers('three one five')\n// 'one three\
    \ five'\nfunction sort_numbers($numbers) {\n    $numbers = explode(' ', $numbers);\n\
    \    $numbers = array_map(function($number) {\n        return number_to_int($number);\n\
    \    }, $numbers);\n    sort($numbers);\n    $numbers = array_map(function($number)\
    \ {\n        return int_to_number($number);\n    }, $numbers);\n    return implode('\
    \ ', $numbers);\n}\n\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Error: Call to undefined function number_to_int()\
    \ in /tmp/tmpbw3fcqwo.php:10\nStack trace:\n#0 [internal function]: {closure}()\n\
    #1 /tmp/tmpbw3fcqwo.php(11): array_map()\n#2 /tmp/tmpbw3fcqwo.php(20): sort_numbers()\n\
    #3 /tmp/tmpbw3fcqwo.php(24): candidate()\n#4 /tmp/tmpbw3fcqwo.php(31): test()\n\
    #5 {main}\n  thrown in /tmp/tmpbw3fcqwo.php on line 10\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers('three one five')\n// 'one three\
    \ five'\nfunction sort_numbers($numbers) {\n\t$numbers = explode(' ', $numbers);\n\
    \t$numbers = array_map(function($number) {\n\t\tswitch($number) {\n\t\t\tcase\
    \ 'zero':\n\t\t\t\treturn 0;\n\t\t\tcase 'one':\n\t\t\t\treturn 1;\n\t\t\tcase\
    \ 'two':\n\t\t\t\treturn 2;\n\t\t\tcase 'three':\n\t\t\t\treturn 3;\n\t\t\tcase\
    \ 'four':\n\t\t\t\treturn 4;\n\t\t\tcase 'five':\n\t\t\t\treturn 5;\n\t\t\tcase\
    \ 'six':\n\t\t\t\treturn 6;\n\t\t\tcase 'seven':\n\t\t\t\treturn 7;\n\t\t\tcase\
    \ 'eight':\n\t\t\t\treturn 8;\n\t\t\tcase 'nine':\n\t\t\t\treturn 9;\n\t\t}\n\t\
    }, $numbers);\n\tsort($numbers);\n\t$numbers = array_map(function($number) {\n\
    \t\tswitch($number) {\n\t\t\tcase 0:\n\t\t\t\treturn 'zero';\n\t\t\tcase 1:\n\t\
    \t\t\treturn 'one';\n\t\t\tcase 2:\n\t\t\t\treturn 'two';\n\t\t\tcase 3:\n\t\t\
    \t\treturn 'three';\n\t\t\tcase 4:\n\t\t\t\treturn 'four';\n\t\t\tcase 5:\n\t\t\
    \t\treturn 'five';\n\t\t\tcase 6:\n\t\t\t\treturn 'six';\n\t\t\tcase 7:\n\t\t\t\
    \treturn 'seven';\n\t\t\tcase 8:\n\t\t\t\treturn 'eight';\n\t\t\tcase 9:\n\t\t\
    \t\treturn 'nine';\n\t\t}\n\t}, $numbers);\n\treturn implode(' ', $numbers);\n\
    }\n\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmplcqc8_w5.php:66\n\
    Stack trace:\n#0 /tmp/tmplcqc8_w5.php(73): test()\n#1 {main}\n  thrown in /tmp/tmplcqc8_w5.php\
    \ on line 66\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers('three one five')\n// 'one three\
    \ five'\nfunction sort_numbers($numbers) {\n    $numbers = explode(' ', $numbers);\n\
    \    $numbers = array_map(function($number) {\n        return array_search($number,\
    \ ['zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine']);\n\
    \    }, $numbers);\n    sort($numbers);\n    $numbers = array_map(function($number)\
    \ {\n        return ['zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight', 'nine'][$number];\n    }, $numbers);\n    return implode(' ', $numbers);\n\
    }\n\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmprskk1j71.php:24\n\
    Stack trace:\n#0 /tmp/tmprskk1j71.php(31): test()\n#1 {main}\n  thrown in /tmp/tmprskk1j71.php\
    \ on line 24\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers('three one five')\n// 'one three\
    \ five'\nfunction sort_numbers($numbers) {\n  $numbers = explode(' ', $numbers);\n\
    \  $numbers = array_map(function($number) {\n    return number_to_numeral($number);\n\
    \  }, $numbers);\n  sort($numbers);\n  $numbers = array_map(function($number)\
    \ {\n    return numeral_to_number($number);\n  }, $numbers);\n  return implode('\
    \ ', $numbers);\n}\n\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Error: Call to undefined function number_to_numeral()\
    \ in /tmp/tmp99k5t4j2.php:10\nStack trace:\n#0 [internal function]: {closure}()\n\
    #1 /tmp/tmp99k5t4j2.php(11): array_map()\n#2 /tmp/tmp99k5t4j2.php(20): sort_numbers()\n\
    #3 /tmp/tmp99k5t4j2.php(24): candidate()\n#4 /tmp/tmp99k5t4j2.php(31): test()\n\
    #5 {main}\n  thrown in /tmp/tmp99k5t4j2.php on line 10\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers('three one five')\n// 'one three\
    \ five'\nfunction sort_numbers($numbers) {\n    $numbers = explode(' ', $numbers);\n\
    \    $numbers = array_map(function($number) {\n        return number_to_int($number);\n\
    \    }, $numbers);\n    sort($numbers);\n    $numbers = array_map(function($number)\
    \ {\n        return int_to_number($number);\n    }, $numbers);\n    return implode('\
    \ ', $numbers);\n}\n\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Error: Call to undefined function number_to_int()\
    \ in /tmp/tmpa7ugnrwk.php:10\nStack trace:\n#0 [internal function]: {closure}()\n\
    #1 /tmp/tmpa7ugnrwk.php(11): array_map()\n#2 /tmp/tmpa7ugnrwk.php(20): sort_numbers()\n\
    #3 /tmp/tmpa7ugnrwk.php(24): candidate()\n#4 /tmp/tmpa7ugnrwk.php(31): test()\n\
    #5 {main}\n  thrown in /tmp/tmpa7ugnrwk.php on line 10\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers('three one five')\n// 'one three\
    \ five'\nfunction sort_numbers($numbers) {\n    $numbers = explode(' ', $numbers);\n\
    \    $numbers = array_map(function($number) {\n        return number_to_digit($number);\n\
    \    }, $numbers);\n    sort($numbers);\n    $numbers = array_map(function($number)\
    \ {\n        return digit_to_number($number);\n    }, $numbers);\n    return implode('\
    \ ', $numbers);\n}\n\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Error: Call to undefined function number_to_digit()\
    \ in /tmp/tmp2zzub_yh.php:10\nStack trace:\n#0 [internal function]: {closure}()\n\
    #1 /tmp/tmp2zzub_yh.php(11): array_map()\n#2 /tmp/tmp2zzub_yh.php(20): sort_numbers()\n\
    #3 /tmp/tmp2zzub_yh.php(24): candidate()\n#4 /tmp/tmp2zzub_yh.php(31): test()\n\
    #5 {main}\n  thrown in /tmp/tmp2zzub_yh.php on line 10\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers('three one five')\n// 'one three\
    \ five'\nfunction sort_numbers($numbers) {\n    $numbers = explode(' ', $numbers);\n\
    \    $numbers = array_map(function($number) {\n        return ['number' => $number,\
    \ 'value' => number_to_value($number)];\n    }, $numbers);\n    usort($numbers,\
    \ function($a, $b) {\n        return $a['value'] - $b['value'];\n    });\n   \
    \ $numbers = array_map(function($number) {\n        return $number['number'];\n\
    \    }, $numbers);\n    return implode(' ', $numbers);\n}\n\nfunction candidate(...$args)\
    \ {\n    return sort_numbers(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"three\") !== \"three\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"three five nine\") !== \"three five nine\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four seven\
    \ nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Error: Call to undefined function number_to_value()\
    \ in /tmp/tmpc5m48pun.php:10\nStack trace:\n#0 [internal function]: {closure}()\n\
    #1 /tmp/tmpc5m48pun.php(11): array_map()\n#2 /tmp/tmpc5m48pun.php(22): sort_numbers()\n\
    #3 /tmp/tmpc5m48pun.php(26): candidate()\n#4 /tmp/tmpc5m48pun.php(33): test()\n\
    #5 {main}\n  thrown in /tmp/tmpc5m48pun.php on line 10\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers('three one five')\n// 'one three\
    \ five'\nfunction sort_numbers($numbers) {\n    $numbers = explode(' ', $numbers);\n\
    \    $numbers = array_map(function($number) {\n        return [\n            'number'\
    \ => $number,\n            'value' => str_replace(['zero', 'one', 'two', 'three',\
    \ 'four', 'five', 'six', 'seven', 'eight', 'nine'], [0, 1, 2, 3, 4, 5, 6, 7, 8,\
    \ 9], $number)\n        ];\n    }, $numbers);\n    usort($numbers, function($a,\
    \ $b) {\n        return $a['value'] - $b['value'];\n    });\n    return implode('\
    \ ', array_column($numbers, 'number'));\n}\n\nfunction candidate(...$args) {\n\
    \    return sort_numbers(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    \") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    three\") !== \"three\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    three five nine\") !== \"three five nine\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"five zero four seven nine eight\") !== \"zero four five\
    \ seven eight nine\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    six five four three two one zero\") !== \"zero one two three four five six\")\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers('three one five')\n// 'one three\
    \ five'\nfunction sort_numbers($numbers) {\n    $numbers = explode(' ', $numbers);\n\
    \    $numbers = array_map(function($number) {\n        return number_to_int($number);\n\
    \    }, $numbers);\n    sort($numbers);\n    $numbers = array_map(function($number)\
    \ {\n        return int_to_number($number);\n    }, $numbers);\n    return implode('\
    \ ', $numbers);\n}\n\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Error: Call to undefined function number_to_int()\
    \ in /tmp/tmpqmuok438.php:10\nStack trace:\n#0 [internal function]: {closure}()\n\
    #1 /tmp/tmpqmuok438.php(11): array_map()\n#2 /tmp/tmpqmuok438.php(20): sort_numbers()\n\
    #3 /tmp/tmpqmuok438.php(24): candidate()\n#4 /tmp/tmpqmuok438.php(31): test()\n\
    #5 {main}\n  thrown in /tmp/tmpqmuok438.php on line 10\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers('three one five')\n// 'one three\
    \ five'\nfunction sort_numbers($numbers) {\n    $numbers = explode(' ', $numbers);\n\
    \    $numbers = array_map(function($number) {\n        return array_search($number,\
    \ ['zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine']);\n\
    \    }, $numbers);\n    sort($numbers);\n    $numbers = array_map(function($number)\
    \ {\n        return ['zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight', 'nine'][$number];\n    }, $numbers);\n    return implode(' ', $numbers);\n\
    }\n\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpztb94jlc.php:24\n\
    Stack trace:\n#0 /tmp/tmpztb94jlc.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpztb94jlc.php\
    \ on line 24\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers('three one five')\n// 'one three\
    \ five'\nfunction sort_numbers($numbers) {\n    $numbers = explode(' ', $numbers);\n\
    \    $numbers = array_map(function($number) {\n        return [\n            'number'\
    \ => $number,\n            'value' => array_search($number, ['zero', 'one', 'two',\
    \ 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine'])\n        ];\n   \
    \ }, $numbers);\n    usort($numbers, function($a, $b) {\n        return $a['value']\
    \ - $b['value'];\n    });\n    $numbers = array_map(function($number) {\n    \
    \    return $number['number'];\n    }, $numbers);\n    return implode(' ', $numbers);\n\
    }\n\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers('three one five')\n// 'one three\
    \ five'\nfunction sort_numbers($numbers) {\n    $numbers = explode(' ', $numbers);\n\
    \    $numbers = array_map(function($number) {\n        return number_to_numeral($number);\n\
    \    }, $numbers);\n    sort($numbers);\n    $numbers = array_map(function($number)\
    \ {\n        return numeral_to_number($number);\n    }, $numbers);\n    return\
    \ implode(' ', $numbers);\n}\n\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Error: Call to undefined function number_to_numeral()\
    \ in /tmp/tmpwaewn_o4.php:10\nStack trace:\n#0 [internal function]: {closure}()\n\
    #1 /tmp/tmpwaewn_o4.php(11): array_map()\n#2 /tmp/tmpwaewn_o4.php(20): sort_numbers()\n\
    #3 /tmp/tmpwaewn_o4.php(24): candidate()\n#4 /tmp/tmpwaewn_o4.php(31): test()\n\
    #5 {main}\n  thrown in /tmp/tmpwaewn_o4.php on line 10\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers('three one five')\n// 'one three\
    \ five'\nfunction sort_numbers($numbers) {\n    $numbers = explode(' ', $numbers);\n\
    \    $numbers = array_map(function($number) {\n        return number_to_digit($number);\n\
    \    }, $numbers);\n    sort($numbers);\n    $numbers = array_map(function($number)\
    \ {\n        return digit_to_number($number);\n    }, $numbers);\n    return implode('\
    \ ', $numbers);\n}\n\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Error: Call to undefined function number_to_digit()\
    \ in /tmp/tmp9ns0bzf6.php:10\nStack trace:\n#0 [internal function]: {closure}()\n\
    #1 /tmp/tmp9ns0bzf6.php(11): array_map()\n#2 /tmp/tmp9ns0bzf6.php(20): sort_numbers()\n\
    #3 /tmp/tmp9ns0bzf6.php(24): candidate()\n#4 /tmp/tmp9ns0bzf6.php(31): test()\n\
    #5 {main}\n  thrown in /tmp/tmp9ns0bzf6.php on line 10\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers('three one five')\n// 'one three\
    \ five'\nfunction sort_numbers($numbers) {\n  $numbers = explode(' ', $numbers);\n\
    \  $numbers = array_map(function($number) {\n    return array_search($number,\
    \ ['zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine']);\n\
    \  }, $numbers);\n  sort($numbers);\n  $numbers = array_map(function($number)\
    \ {\n    return ['zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight', 'nine'][$number];\n  }, $numbers);\n  return implode(' ', $numbers);\n\
    }\n\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpiz1tbdp0.php:24\n\
    Stack trace:\n#0 /tmp/tmpiz1tbdp0.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpiz1tbdp0.php\
    \ on line 24\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers('three one five')\n// 'one three\
    \ five'\nfunction sort_numbers($numbers) {\n    $numbers = explode(' ', $numbers);\n\
    \    $numbers = array_map(function($number) {\n        return number_to_numeral($number);\n\
    \    }, $numbers);\n    sort($numbers);\n    $numbers = array_map(function($number)\
    \ {\n        return numeral_to_number($number);\n    }, $numbers);\n    return\
    \ implode(' ', $numbers);\n}\n\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Error: Call to undefined function number_to_numeral()\
    \ in /tmp/tmprsdfi0_6.php:10\nStack trace:\n#0 [internal function]: {closure}()\n\
    #1 /tmp/tmprsdfi0_6.php(11): array_map()\n#2 /tmp/tmprsdfi0_6.php(20): sort_numbers()\n\
    #3 /tmp/tmprsdfi0_6.php(24): candidate()\n#4 /tmp/tmprsdfi0_6.php(31): test()\n\
    #5 {main}\n  thrown in /tmp/tmprsdfi0_6.php on line 10\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers('three one five')\n// 'one three\
    \ five'\nfunction sort_numbers($numbers) {\n    $numbers_array = explode(' ',\
    \ $numbers);\n    $numbers_array = array_map('number_to_digit', $numbers_array);\n\
    \    sort($numbers_array);\n    $numbers_array = array_map('digit_to_number',\
    \ $numbers_array);\n    return implode(' ', $numbers_array);\n}\n\nfunction candidate(...$args)\
    \ {\n    return sort_numbers(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"three\") !== \"three\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"three five nine\") !== \"three five nine\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four seven\
    \ nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught TypeError: array_map(): Argument #1 ($callback)\
    \ must be a valid callback or null, function \"number_to_digit\" not found or\
    \ invalid function name in /tmp/tmp2s4734xk.php:9\nStack trace:\n#0 /tmp/tmp2s4734xk.php(9):\
    \ array_map()\n#1 /tmp/tmp2s4734xk.php(16): sort_numbers()\n#2 /tmp/tmp2s4734xk.php(20):\
    \ candidate()\n#3 /tmp/tmp2s4734xk.php(27): test()\n#4 {main}\n  thrown in /tmp/tmp2s4734xk.php\
    \ on line 9\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers('three one five')\n// 'one three\
    \ five'\nfunction sort_numbers($numbers) {\n    $numbers = explode(' ', $numbers);\n\
    \    $numbers = array_map(function($number) {\n        return array_search($number,\
    \ ['zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine']);\n\
    \    }, $numbers);\n    sort($numbers);\n    $numbers = array_map(function($number)\
    \ {\n        return ['zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight', 'nine'][$number];\n    }, $numbers);\n    return implode(' ', $numbers);\n\
    }\n\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpvh8jl9dl.php:24\n\
    Stack trace:\n#0 /tmp/tmpvh8jl9dl.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpvh8jl9dl.php\
    \ on line 24\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers('three one five')\n// 'one three\
    \ five'\nfunction sort_numbers($numbers) {\n    $numbers = explode(' ', $numbers);\n\
    \    $numbers = array_map(function($number) {\n        switch ($number) {\n  \
    \          case 'zero':\n                return 0;\n            case 'one':\n\
    \                return 1;\n            case 'two':\n                return 2;\n\
    \            case 'three':\n                return 3;\n            case 'four':\n\
    \                return 4;\n            case 'five':\n                return 5;\n\
    \            case 'six':\n                return 6;\n            case 'seven':\n\
    \                return 7;\n            case 'eight':\n                return\
    \ 8;\n            case 'nine':\n                return 9;\n        }\n    }, $numbers);\n\
    \    sort($numbers);\n    $numbers = array_map(function($number) {\n        switch\
    \ ($number) {\n            case 0:\n                return 'zero';\n         \
    \   case 1:\n                return 'one';\n            case 2:\n            \
    \    return 'two';\n            case 3:\n                return 'three';\n   \
    \         case 4:\n                return 'four';\n            case 5:\n     \
    \           return 'five';\n            case 6:\n                return 'six';\n\
    \            case 7:\n                return 'seven';\n            case 8:\n \
    \               return 'eight';\n            case 9:\n                return 'nine';\n\
    \        }\n    }, $numbers);\n    return implode(' ', $numbers);\n}\n\nfunction\
    \ candidate(...$args) {\n    return sort_numbers(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpx_1e5sg4.php:66\n\
    Stack trace:\n#0 /tmp/tmpx_1e5sg4.php(73): test()\n#1 {main}\n  thrown in /tmp/tmpx_1e5sg4.php\
    \ on line 66\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers('three one five')\n// 'one three\
    \ five'\nfunction sort_numbers($numbers) {\n  $numbers = explode(' ', $numbers);\n\
    \  $numbers = array_map(function($number) {\n    switch ($number) {\n      case\
    \ 'zero':\n        return 0;\n      case 'one':\n        return 1;\n      case\
    \ 'two':\n        return 2;\n      case 'three':\n        return 3;\n      case\
    \ 'four':\n        return 4;\n      case 'five':\n        return 5;\n      case\
    \ 'six':\n        return 6;\n      case 'seven':\n        return 7;\n      case\
    \ 'eight':\n        return 8;\n      case 'nine':\n        return 9;\n    }\n\
    \  }, $numbers);\n  sort($numbers);\n  $numbers = array_map(function($number)\
    \ {\n    switch ($number) {\n      case 0:\n        return 'zero';\n      case\
    \ 1:\n        return 'one';\n      case 2:\n        return 'two';\n      case\
    \ 3:\n        return 'three';\n      case 4:\n        return 'four';\n      case\
    \ 5:\n        return 'five';\n      case 6:\n        return 'six';\n      case\
    \ 7:\n        return 'seven';\n      case 8:\n        return 'eight';\n      case\
    \ 9:\n        return 'nine';\n    }\n  }, $numbers);\n  return implode(' ', $numbers);\n\
    }\n\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp5tedrkwt.php:66\n\
    Stack trace:\n#0 /tmp/tmp5tedrkwt.php(73): test()\n#1 {main}\n  thrown in /tmp/tmp5tedrkwt.php\
    \ on line 66\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers('three one five')\n// 'one three\
    \ five'\nfunction sort_numbers($numbers) {\n  $numbers = explode(' ', $numbers);\n\
    \  $numbers = array_map(function($number) {\n    return number_to_int($number);\n\
    \  }, $numbers);\n  sort($numbers);\n  $numbers = array_map(function($number)\
    \ {\n    return int_to_number($number);\n  }, $numbers);\n  return implode(' ',\
    \ $numbers);\n}\n\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Error: Call to undefined function number_to_int()\
    \ in /tmp/tmpo7d7ynsp.php:10\nStack trace:\n#0 [internal function]: {closure}()\n\
    #1 /tmp/tmpo7d7ynsp.php(11): array_map()\n#2 /tmp/tmpo7d7ynsp.php(20): sort_numbers()\n\
    #3 /tmp/tmpo7d7ynsp.php(24): candidate()\n#4 /tmp/tmpo7d7ynsp.php(31): test()\n\
    #5 {main}\n  thrown in /tmp/tmpo7d7ynsp.php on line 10\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers('three one five')\n// 'one three\
    \ five'\nfunction sort_numbers($numbers) {\n  $numbers = explode(' ', $numbers);\n\
    \  $numbers = array_map(function($number) {\n    return array_search($number,\
    \ ['zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine']);\n\
    \  }, $numbers);\n  sort($numbers);\n  $numbers = array_map(function($number)\
    \ {\n    return ['zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight', 'nine'][$number];\n  }, $numbers);\n  return implode(' ', $numbers);\n\
    }\n\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpo_wqqqx1.php:24\n\
    Stack trace:\n#0 /tmp/tmpo_wqqqx1.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpo_wqqqx1.php\
    \ on line 24\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers('three one five')\n// 'one three\
    \ five'\nfunction sort_numbers($numbers) {\n    $numbers = explode(' ', $numbers);\n\
    \    $numbers = array_map(function($number) {\n        $number = strtolower($number);\n\
    \        switch ($number) {\n            case 'zero':\n                return\
    \ 0;\n            case 'one':\n                return 1;\n            case 'two':\n\
    \                return 2;\n            case 'three':\n                return\
    \ 3;\n            case 'four':\n                return 4;\n            case 'five':\n\
    \                return 5;\n            case 'six':\n                return 6;\n\
    \            case 'seven':\n                return 7;\n            case 'eight':\n\
    \                return 8;\n            case 'nine':\n                return 9;\n\
    \            default:\n                return $number;\n        }\n    }, $numbers);\n\
    \    sort($numbers);\n    $numbers = array_map(function($number) {\n        switch\
    \ ($number) {\n            case 0:\n                return 'zero';\n         \
    \   case 1:\n                return 'one';\n            case 2:\n            \
    \    return 'two';\n            case 3:\n                return 'three';\n   \
    \         case 4:\n                return 'four';\n            case 5:\n     \
    \           return 'five';\n            case 6:\n                return 'six';\n\
    \            case 7:\n                return 'seven';\n            case 8:\n \
    \               return 'eight';\n            case 9:\n                return 'nine';\n\
    \            default:\n                return $number;\n        }\n    }, $numbers);\n\
    \    return implode(' ', $numbers);\n}\n\nfunction candidate(...$args) {\n   \
    \ return sort_numbers(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    \") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    three\") !== \"three\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    three five nine\") !== \"three five nine\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"five zero four seven nine eight\") !== \"zero four five\
    \ seven eight nine\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    six five four three two one zero\") !== \"zero one two three four five six\")\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers('three one five')\n// 'one three\
    \ five'\nfunction sort_numbers($numbers) {\n    $numbers = explode(' ', $numbers);\n\
    \    $numbers = array_map(function($number) {\n        switch ($number) {\n  \
    \          case 'zero':\n                return 0;\n            case 'one':\n\
    \                return 1;\n            case 'two':\n                return 2;\n\
    \            case 'three':\n                return 3;\n            case 'four':\n\
    \                return 4;\n            case 'five':\n                return 5;\n\
    \            case 'six':\n                return 6;\n            case 'seven':\n\
    \                return 7;\n            case 'eight':\n                return\
    \ 8;\n            case 'nine':\n                return 9;\n        }\n    }, $numbers);\n\
    \    sort($numbers);\n    $numbers = array_map(function($number) {\n        switch\
    \ ($number) {\n            case 0:\n                return 'zero';\n         \
    \   case 1:\n                return 'one';\n            case 2:\n            \
    \    return 'two';\n            case 3:\n                return 'three';\n   \
    \         case 4:\n                return 'four';\n            case 5:\n     \
    \           return 'five';\n            case 6:\n                return 'six';\n\
    \            case 7:\n                return 'seven';\n            case 8:\n \
    \               return 'eight';\n            case 9:\n                return 'nine';\n\
    \        }\n    }, $numbers);\n    return implode(' ', $numbers);\n}\n\nfunction\
    \ candidate(...$args) {\n    return sort_numbers(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmprp2k7tnp.php:66\n\
    Stack trace:\n#0 /tmp/tmprp2k7tnp.php(73): test()\n#1 {main}\n  thrown in /tmp/tmprp2k7tnp.php\
    \ on line 66\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers('three one five')\n// 'one three\
    \ five'\nfunction sort_numbers($numbers) {\n  $numbers = explode(' ', $numbers);\n\
    \  $numbers = array_map(function($number) {\n    return number_to_int($number);\n\
    \  }, $numbers);\n  sort($numbers);\n  $numbers = array_map(function($number)\
    \ {\n    return int_to_number($number);\n  }, $numbers);\n  return implode(' ',\
    \ $numbers);\n}\n\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Error: Call to undefined function number_to_int()\
    \ in /tmp/tmpmx9d1pvn.php:10\nStack trace:\n#0 [internal function]: {closure}()\n\
    #1 /tmp/tmpmx9d1pvn.php(11): array_map()\n#2 /tmp/tmpmx9d1pvn.php(20): sort_numbers()\n\
    #3 /tmp/tmpmx9d1pvn.php(24): candidate()\n#4 /tmp/tmpmx9d1pvn.php(31): test()\n\
    #5 {main}\n  thrown in /tmp/tmpmx9d1pvn.php on line 10\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers('three one five')\n// 'one three\
    \ five'\nfunction sort_numbers($numbers) {\n    $numbers = explode(' ', $numbers);\n\
    \    $numbers = array_map(function($number) {\n        return array_search($number,\
    \ ['zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine']);\n\
    \    }, $numbers);\n    sort($numbers);\n    $numbers = array_map(function($number)\
    \ {\n        return ['zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight', 'nine'][$number];\n    }, $numbers);\n    return implode(' ', $numbers);\n\
    }\n\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpdqt3za6g.php:24\n\
    Stack trace:\n#0 /tmp/tmpdqt3za6g.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpdqt3za6g.php\
    \ on line 24\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers('three one five')\n// 'one three\
    \ five'\nfunction sort_numbers($numbers) {\n    $numbers = explode(' ', $numbers);\n\
    \    $numbers = array_map(function($number) {\n        return strlen($number);\n\
    \    }, $numbers);\n    sort($numbers);\n    return implode(' ', $numbers);\n\
    }\n\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpjr8pt4l9.php:21\n\
    Stack trace:\n#0 /tmp/tmpjr8pt4l9.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpjr8pt4l9.php\
    \ on line 21\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers('three one five')\n// 'one three\
    \ five'\nfunction sort_numbers($numbers) {\n  $numbers = explode(' ', $numbers);\n\
    \  $numbers = array_map(function($number) {\n    return [\n      'number' => $number,\n\
    \      'value' => array_search($number, ['zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight', 'nine'])\n    ];\n  }, $numbers);\n  usort($numbers,\
    \ function($a, $b) {\n    return $a['value'] - $b['value'];\n  });\n  $numbers\
    \ = array_map(function($number) {\n    return $number['number'];\n  }, $numbers);\n\
    \  return implode(' ', $numbers);\n}\n\nfunction candidate(...$args) {\n    return\
    \ sort_numbers(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\"\
    ) !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"three\"\
    ) !== \"three\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    three five nine\") !== \"three five nine\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"five zero four seven nine eight\") !== \"zero four five\
    \ seven eight nine\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    six five four three two one zero\") !== \"zero one two three four five six\")\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers('three one five')\n// 'one three\
    \ five'\nfunction sort_numbers($numbers) {\n    $numbers = explode(' ', $numbers);\n\
    \    $numbers = array_map(function($number) {\n        return [\n            'number'\
    \ => $number,\n            'value' => array_search($number, [\n              \
    \  'zero',\n                'one',\n                'two',\n                'three',\n\
    \                'four',\n                'five',\n                'six',\n  \
    \              'seven',\n                'eight',\n                'nine'\n  \
    \          ])\n        ];\n    }, $numbers);\n    usort($numbers, function($a,\
    \ $b) {\n        return $a['value'] - $b['value'];\n    });\n    $numbers = array_map(function($number)\
    \ {\n        return $number['number'];\n    }, $numbers);\n    return implode('\
    \ ', $numbers);\n}\n\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers('three one five')\n// 'one three\
    \ five'\nfunction sort_numbers($numbers) {\n    $numbers = explode(' ', $numbers);\n\
    \    $numbers = array_map(function($number) {\n        return number_to_int($number);\n\
    \    }, $numbers);\n    sort($numbers);\n    $numbers = array_map(function($number)\
    \ {\n        return int_to_number($number);\n    }, $numbers);\n    return implode('\
    \ ', $numbers);\n}\n\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Error: Call to undefined function number_to_int()\
    \ in /tmp/tmpegjpbfqn.php:10\nStack trace:\n#0 [internal function]: {closure}()\n\
    #1 /tmp/tmpegjpbfqn.php(11): array_map()\n#2 /tmp/tmpegjpbfqn.php(20): sort_numbers()\n\
    #3 /tmp/tmpegjpbfqn.php(24): candidate()\n#4 /tmp/tmpegjpbfqn.php(31): test()\n\
    #5 {main}\n  thrown in /tmp/tmpegjpbfqn.php on line 10\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers('three one five')\n// 'one three\
    \ five'\nfunction sort_numbers($numbers) {\n    $numbers = explode(' ', $numbers);\n\
    \    $numbers = array_map(function($number) {\n        return number_to_numeral($number);\n\
    \    }, $numbers);\n    sort($numbers);\n    $numbers = array_map(function($number)\
    \ {\n        return numeral_to_number($number);\n    }, $numbers);\n    return\
    \ implode(' ', $numbers);\n}\n\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Error: Call to undefined function number_to_numeral()\
    \ in /tmp/tmpbhxq2c2f.php:10\nStack trace:\n#0 [internal function]: {closure}()\n\
    #1 /tmp/tmpbhxq2c2f.php(11): array_map()\n#2 /tmp/tmpbhxq2c2f.php(20): sort_numbers()\n\
    #3 /tmp/tmpbhxq2c2f.php(24): candidate()\n#4 /tmp/tmpbhxq2c2f.php(31): test()\n\
    #5 {main}\n  thrown in /tmp/tmpbhxq2c2f.php on line 10\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers('three one five')\n// 'one three\
    \ five'\nfunction sort_numbers($numbers) {\n    $numbers = explode(' ', $numbers);\n\
    \    $numbers = array_map(function($number) {\n        return array_search($number,\
    \ ['zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine']);\n\
    \    }, $numbers);\n    sort($numbers);\n    $numbers = array_map(function($number)\
    \ {\n        return ['zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight', 'nine'][$number];\n    }, $numbers);\n    return implode(' ', $numbers);\n\
    }\n\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmppzw3ikiv.php:24\n\
    Stack trace:\n#0 /tmp/tmppzw3ikiv.php(31): test()\n#1 {main}\n  thrown in /tmp/tmppzw3ikiv.php\
    \ on line 24\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers('three one five')\n// 'one three\
    \ five'\nfunction sort_numbers($numbers) {\n    $numbers = explode(' ', $numbers);\n\
    \    $numbers = array_map(function($number) {\n        return str_replace(['zero',\
    \ 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine'], [0,\
    \ 1, 2, 3, 4, 5, 6, 7, 8, 9], $number);\n    }, $numbers);\n    sort($numbers);\n\
    \    $numbers = array_map(function($number) {\n        return str_replace([0,\
    \ 1, 2, 3, 4, 5, 6, 7, 8, 9], ['zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight', 'nine'], $number);\n    }, $numbers);\n    return implode('\
    \ ', $numbers);\n}\n\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers('three one five')\n// 'one three\
    \ five'\nfunction sort_numbers($numbers) {\n    $numbers = explode(' ', $numbers);\n\
    \    $numbers = array_map(function($number) {\n        return number_to_int($number);\n\
    \    }, $numbers);\n    sort($numbers);\n    $numbers = array_map(function($number)\
    \ {\n        return int_to_number($number);\n    }, $numbers);\n    return implode('\
    \ ', $numbers);\n}\n\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Error: Call to undefined function number_to_int()\
    \ in /tmp/tmpi3pth_7d.php:10\nStack trace:\n#0 [internal function]: {closure}()\n\
    #1 /tmp/tmpi3pth_7d.php(11): array_map()\n#2 /tmp/tmpi3pth_7d.php(20): sort_numbers()\n\
    #3 /tmp/tmpi3pth_7d.php(24): candidate()\n#4 /tmp/tmpi3pth_7d.php(31): test()\n\
    #5 {main}\n  thrown in /tmp/tmpi3pth_7d.php on line 10\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers('three one five')\n// 'one three\
    \ five'\nfunction sort_numbers($numbers) {\n    $numbers = explode(' ', $numbers);\n\
    \    $numbers = array_map(function($number) {\n        return number_to_int($number);\n\
    \    }, $numbers);\n    sort($numbers);\n    $numbers = array_map(function($number)\
    \ {\n        return int_to_number($number);\n    }, $numbers);\n    return implode('\
    \ ', $numbers);\n}\n\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Error: Call to undefined function number_to_int()\
    \ in /tmp/tmpqlyjul02.php:10\nStack trace:\n#0 [internal function]: {closure}()\n\
    #1 /tmp/tmpqlyjul02.php(11): array_map()\n#2 /tmp/tmpqlyjul02.php(20): sort_numbers()\n\
    #3 /tmp/tmpqlyjul02.php(24): candidate()\n#4 /tmp/tmpqlyjul02.php(31): test()\n\
    #5 {main}\n  thrown in /tmp/tmpqlyjul02.php on line 10\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers('three one five')\n// 'one three\
    \ five'\nfunction sort_numbers($numbers) {\n    $numbers = explode(' ', $numbers);\n\
    \    $numbers = array_map(function($number) {\n        return number_to_numeral($number);\n\
    \    }, $numbers);\n    sort($numbers);\n    $numbers = array_map(function($number)\
    \ {\n        return numeral_to_number($number);\n    }, $numbers);\n    return\
    \ implode(' ', $numbers);\n}\n\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Error: Call to undefined function number_to_numeral()\
    \ in /tmp/tmp6zn2ghgw.php:10\nStack trace:\n#0 [internal function]: {closure}()\n\
    #1 /tmp/tmp6zn2ghgw.php(11): array_map()\n#2 /tmp/tmp6zn2ghgw.php(20): sort_numbers()\n\
    #3 /tmp/tmp6zn2ghgw.php(24): candidate()\n#4 /tmp/tmp6zn2ghgw.php(31): test()\n\
    #5 {main}\n  thrown in /tmp/tmp6zn2ghgw.php on line 10\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers('three one five')\n// 'one three\
    \ five'\nfunction sort_numbers($numbers) {\n    $numbers = explode(' ', $numbers);\n\
    \    $numbers = array_map(function($number) {\n        return number_to_int($number);\n\
    \    }, $numbers);\n    sort($numbers);\n    $numbers = array_map(function($number)\
    \ {\n        return int_to_number($number);\n    }, $numbers);\n    return implode('\
    \ ', $numbers);\n}\n\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Error: Call to undefined function number_to_int()\
    \ in /tmp/tmpg3b1jj_n.php:10\nStack trace:\n#0 [internal function]: {closure}()\n\
    #1 /tmp/tmpg3b1jj_n.php(11): array_map()\n#2 /tmp/tmpg3b1jj_n.php(20): sort_numbers()\n\
    #3 /tmp/tmpg3b1jj_n.php(24): candidate()\n#4 /tmp/tmpg3b1jj_n.php(31): test()\n\
    #5 {main}\n  thrown in /tmp/tmpg3b1jj_n.php on line 10\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers('three one five')\n// 'one three\
    \ five'\nfunction sort_numbers($numbers) {\n  $numbers = explode(' ', $numbers);\n\
    \  $numbers = array_map(function($number) {\n    return array_search($number,\
    \ ['zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine']);\n\
    \  }, $numbers);\n  sort($numbers);\n  $numbers = array_map(function($number)\
    \ {\n    return ['zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight', 'nine'][$number];\n  }, $numbers);\n  return implode(' ', $numbers);\n\
    }\n\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpzqrpkxve.php:24\n\
    Stack trace:\n#0 /tmp/tmpzqrpkxve.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpzqrpkxve.php\
    \ on line 24\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers('three one five')\n// 'one three\
    \ five'\nfunction sort_numbers($numbers) {\n    $numbers = explode(' ', $numbers);\n\
    \    $numbers = array_map(function($number) {\n        return number_to_digit($number);\n\
    \    }, $numbers);\n    sort($numbers);\n    $numbers = array_map(function($number)\
    \ {\n        return digit_to_number($number);\n    }, $numbers);\n    return implode('\
    \ ', $numbers);\n}\n\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Error: Call to undefined function number_to_digit()\
    \ in /tmp/tmp2ybid8y0.php:10\nStack trace:\n#0 [internal function]: {closure}()\n\
    #1 /tmp/tmp2ybid8y0.php(11): array_map()\n#2 /tmp/tmp2ybid8y0.php(20): sort_numbers()\n\
    #3 /tmp/tmp2ybid8y0.php(24): candidate()\n#4 /tmp/tmp2ybid8y0.php(31): test()\n\
    #5 {main}\n  thrown in /tmp/tmp2ybid8y0.php on line 10\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers('three one five')\n// 'one three\
    \ five'\nfunction sort_numbers($numbers) {\n    $numbers = explode(' ', $numbers);\n\
    \    $numbers = array_map(function($number) {\n        return array_search($number,\
    \ ['zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine']);\n\
    \    }, $numbers);\n    sort($numbers);\n    $numbers = array_map(function($number)\
    \ {\n        return ['zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight', 'nine'][$number];\n    }, $numbers);\n    return implode(' ', $numbers);\n\
    }\n\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpnqfg9u5o.php:24\n\
    Stack trace:\n#0 /tmp/tmpnqfg9u5o.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpnqfg9u5o.php\
    \ on line 24\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers('three one five')\n// 'one three\
    \ five'\nfunction sort_numbers($numbers) {\n    $numbers = explode(' ', $numbers);\n\
    \    $numbers = array_map(function($number) {\n        switch ($number) {\n  \
    \          case 'zero':\n                return 0;\n            case 'one':\n\
    \                return 1;\n            case 'two':\n                return 2;\n\
    \            case 'three':\n                return 3;\n            case 'four':\n\
    \                return 4;\n            case 'five':\n                return 5;\n\
    \            case 'six':\n                return 6;\n            case 'seven':\n\
    \                return 7;\n            case 'eight':\n                return\
    \ 8;\n            case 'nine':\n                return 9;\n        }\n    }, $numbers);\n\
    \    sort($numbers);\n    $numbers = array_map(function($number) {\n        switch\
    \ ($number) {\n            case 0:\n                return 'zero';\n         \
    \   case 1:\n                return 'one';\n            case 2:\n            \
    \    return 'two';\n            case 3:\n                return 'three';\n   \
    \         case 4:\n                return 'four';\n            case 5:\n     \
    \           return 'five';\n            case 6:\n                return 'six';\n\
    \            case 7:\n                return 'seven';\n            case 8:\n \
    \               return 'eight';\n            case 9:\n                return 'nine';\n\
    \        }\n    }, $numbers);\n    return implode(' ', $numbers);\n}\n\nfunction\
    \ candidate(...$args) {\n    return sort_numbers(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp4astyntb.php:66\n\
    Stack trace:\n#0 /tmp/tmp4astyntb.php(73): test()\n#1 {main}\n  thrown in /tmp/tmp4astyntb.php\
    \ on line 66\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers('three one five')\n// 'one three\
    \ five'\nfunction sort_numbers($numbers) {\n  $numbers = explode(' ', $numbers);\n\
    \  $numbers = array_map(function($number) {\n    return number_to_int($number);\n\
    \  }, $numbers);\n  sort($numbers);\n  $numbers = array_map(function($number)\
    \ {\n    return int_to_number($number);\n  }, $numbers);\n  return implode(' ',\
    \ $numbers);\n}\n\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Error: Call to undefined function number_to_int()\
    \ in /tmp/tmpusyay9f2.php:10\nStack trace:\n#0 [internal function]: {closure}()\n\
    #1 /tmp/tmpusyay9f2.php(11): array_map()\n#2 /tmp/tmpusyay9f2.php(20): sort_numbers()\n\
    #3 /tmp/tmpusyay9f2.php(24): candidate()\n#4 /tmp/tmpusyay9f2.php(31): test()\n\
    #5 {main}\n  thrown in /tmp/tmpusyay9f2.php on line 10\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers('three one five')\n// 'one three\
    \ five'\nfunction sort_numbers($numbers) {\n  $numbers = explode(' ', $numbers);\n\
    \  $numbers = array_map(function($number) {\n    return array_search($number,\
    \ ['zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine']);\n\
    \  }, $numbers);\n  sort($numbers);\n  $numbers = array_map(function($number)\
    \ {\n    return ['zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight', 'nine'][$number];\n  }, $numbers);\n  return implode(' ', $numbers);\n\
    }\n\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpn_r8z__6.php:24\n\
    Stack trace:\n#0 /tmp/tmpn_r8z__6.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpn_r8z__6.php\
    \ on line 24\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers('three one five')\n// 'one three\
    \ five'\nfunction sort_numbers($numbers) {\n    $numbers = explode(' ', $numbers);\n\
    \    $numbers = array_map(function($number) {\n        return array_search($number,\
    \ ['zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine']);\n\
    \    }, $numbers);\n    sort($numbers);\n    $numbers = array_map(function($number)\
    \ {\n        return ['zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight', 'nine'][$number];\n    }, $numbers);\n    return implode(' ', $numbers);\n\
    }\n\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpq24t3426.php:24\n\
    Stack trace:\n#0 /tmp/tmpq24t3426.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpq24t3426.php\
    \ on line 24\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers('three one five')\n// 'one three\
    \ five'\nfunction sort_numbers($numbers) {\n\t$numbers = explode(' ', $numbers);\n\
    \t$numbers = array_map(function($number) {\n\t\treturn array_search($number, array('zero',\
    \ 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine'));\n\t\
    }, $numbers);\n\tsort($numbers);\n\t$numbers = array_map(function($number) {\n\
    \t\treturn array('zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight', 'nine')[$number];\n\t}, $numbers);\n\treturn implode(' ', $numbers);\n\
    }\n\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpbg63l08f.php:24\n\
    Stack trace:\n#0 /tmp/tmpbg63l08f.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpbg63l08f.php\
    \ on line 24\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers('three one five')\n// 'one three\
    \ five'\nfunction sort_numbers($numbers) {\n  $numbers = explode(' ', $numbers);\n\
    \  $numbers = array_map(function($number) {\n    return [\n      'number' => $number,\n\
    \      'value' => array_search($number, ['zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight', 'nine'])\n    ];\n  }, $numbers);\n  usort($numbers,\
    \ function($a, $b) {\n    return $a['value'] - $b['value'];\n  });\n  $numbers\
    \ = array_map(function($number) {\n    return $number['number'];\n  }, $numbers);\n\
    \  return implode(' ', $numbers);\n}\n\nfunction candidate(...$args) {\n    return\
    \ sort_numbers(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\"\
    ) !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"three\"\
    ) !== \"three\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    three five nine\") !== \"three five nine\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"five zero four seven nine eight\") !== \"zero four five\
    \ seven eight nine\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    six five four three two one zero\") !== \"zero one two three four five six\")\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers('three one five')\n// 'one three\
    \ five'\nfunction sort_numbers($numbers) {\n  $numbers = explode(' ', $numbers);\n\
    \  $numbers = array_map(function($number) {\n    return strlen($number);\n  },\
    \ $numbers);\n  sort($numbers);\n  return implode(' ', $numbers);\n}\n\nfunction\
    \ candidate(...$args) {\n    return sort_numbers(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpgquqfhno.php:21\n\
    Stack trace:\n#0 /tmp/tmpgquqfhno.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpgquqfhno.php\
    \ on line 21\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers('three one five')\n// 'one three\
    \ five'\nfunction sort_numbers($numbers) {\n\t$numbers = explode(' ', $numbers);\n\
    \t$numbers = array_map(function($number) {\n\t\treturn number_to_numeral($number);\n\
    \t}, $numbers);\n\tsort($numbers);\n\t$numbers = array_map(function($number) {\n\
    \t\treturn numeral_to_number($number);\n\t}, $numbers);\n\treturn implode(' ',\
    \ $numbers);\n}\n\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Error: Call to undefined function number_to_numeral()\
    \ in /tmp/tmpzh6qkq_o.php:10\nStack trace:\n#0 [internal function]: {closure}()\n\
    #1 /tmp/tmpzh6qkq_o.php(11): array_map()\n#2 /tmp/tmpzh6qkq_o.php(20): sort_numbers()\n\
    #3 /tmp/tmpzh6qkq_o.php(24): candidate()\n#4 /tmp/tmpzh6qkq_o.php(31): test()\n\
    #5 {main}\n  thrown in /tmp/tmpzh6qkq_o.php on line 10\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers('three one five')\n// 'one three\
    \ five'\nfunction sort_numbers($numbers) {\n  $numbers = explode(' ', $numbers);\n\
    \  $numbers = array_map(function($number) {\n    return array_search($number,\
    \ ['zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine']);\n\
    \  }, $numbers);\n  sort($numbers);\n  $numbers = array_map(function($number)\
    \ {\n    return ['zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight', 'nine'][$number];\n  }, $numbers);\n  return implode(' ', $numbers);\n\
    }\n\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpnm2qwrba.php:24\n\
    Stack trace:\n#0 /tmp/tmpnm2qwrba.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpnm2qwrba.php\
    \ on line 24\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers('three one five')\n// 'one three\
    \ five'\nfunction sort_numbers($numbers) {\n    $numbers = explode(' ', $numbers);\n\
    \    $numbers = array_map(function($number) {\n        return number_to_int($number);\n\
    \    }, $numbers);\n    sort($numbers);\n    $numbers = array_map(function($number)\
    \ {\n        return int_to_number($number);\n    }, $numbers);\n    return implode('\
    \ ', $numbers);\n}\n\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Error: Call to undefined function number_to_int()\
    \ in /tmp/tmpjdq6xzjf.php:10\nStack trace:\n#0 [internal function]: {closure}()\n\
    #1 /tmp/tmpjdq6xzjf.php(11): array_map()\n#2 /tmp/tmpjdq6xzjf.php(20): sort_numbers()\n\
    #3 /tmp/tmpjdq6xzjf.php(24): candidate()\n#4 /tmp/tmpjdq6xzjf.php(31): test()\n\
    #5 {main}\n  thrown in /tmp/tmpjdq6xzjf.php on line 10\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers('three one five')\n// 'one three\
    \ five'\nfunction sort_numbers($numbers) {\n    $numbers = explode(' ', $numbers);\n\
    \    $numbers = array_map(function($number) {\n        return array_search($number,\
    \ ['zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine']);\n\
    \    }, $numbers);\n    sort($numbers);\n    $numbers = array_map(function($number)\
    \ {\n        return ['zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight', 'nine'][$number];\n    }, $numbers);\n    return implode(' ', $numbers);\n\
    }\n\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmporwk40en.php:24\n\
    Stack trace:\n#0 /tmp/tmporwk40en.php(31): test()\n#1 {main}\n  thrown in /tmp/tmporwk40en.php\
    \ on line 24\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers('three one five')\n// 'one three\
    \ five'\nfunction sort_numbers($numbers) {\n  $numbers = explode(' ', $numbers);\n\
    \  $numbers = array_map(function($number) {\n    return number_to_numeral($number);\n\
    \  }, $numbers);\n  sort($numbers);\n  $numbers = array_map(function($number)\
    \ {\n    return numeral_to_number($number);\n  }, $numbers);\n  return implode('\
    \ ', $numbers);\n}\n\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Error: Call to undefined function number_to_numeral()\
    \ in /tmp/tmpj_r64dtp.php:10\nStack trace:\n#0 [internal function]: {closure}()\n\
    #1 /tmp/tmpj_r64dtp.php(11): array_map()\n#2 /tmp/tmpj_r64dtp.php(20): sort_numbers()\n\
    #3 /tmp/tmpj_r64dtp.php(24): candidate()\n#4 /tmp/tmpj_r64dtp.php(31): test()\n\
    #5 {main}\n  thrown in /tmp/tmpj_r64dtp.php on line 10\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers('three one five')\n// 'one three\
    \ five'\nfunction sort_numbers($numbers) {\n    $numbers = explode(' ', $numbers);\n\
    \    $numbers = array_map(function($number) {\n        return array_search($number,\
    \ ['zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine']);\n\
    \    }, $numbers);\n    sort($numbers);\n    $numbers = array_map(function($number)\
    \ {\n        return ['zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight', 'nine'][$number];\n    }, $numbers);\n    return implode(' ', $numbers);\n\
    }\n\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp5jpyu8jz.php:24\n\
    Stack trace:\n#0 /tmp/tmp5jpyu8jz.php(31): test()\n#1 {main}\n  thrown in /tmp/tmp5jpyu8jz.php\
    \ on line 24\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers('three one five')\n// 'one three\
    \ five'\nfunction sort_numbers($numbers) {\n    $numbers = explode(' ', $numbers);\n\
    \    $numbers = array_map(function($number) {\n        return array_search($number,\
    \ ['zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine']);\n\
    \    }, $numbers);\n    sort($numbers);\n    $numbers = array_map(function($number)\
    \ {\n        return ['zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight', 'nine'][$number];\n    }, $numbers);\n    return implode(' ', $numbers);\n\
    }\n\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpoewi66x_.php:24\n\
    Stack trace:\n#0 /tmp/tmpoewi66x_.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpoewi66x_.php\
    \ on line 24\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers('three one five')\n// 'one three\
    \ five'\nfunction sort_numbers($numbers) {\n    $numbers = explode(' ', $numbers);\n\
    \    $numbers = array_map(function($number) {\n        return number_to_int($number);\n\
    \    }, $numbers);\n    sort($numbers);\n    $numbers = array_map(function($number)\
    \ {\n        return int_to_number($number);\n    }, $numbers);\n    return implode('\
    \ ', $numbers);\n}\n\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Error: Call to undefined function number_to_int()\
    \ in /tmp/tmpx7_cnwtz.php:10\nStack trace:\n#0 [internal function]: {closure}()\n\
    #1 /tmp/tmpx7_cnwtz.php(11): array_map()\n#2 /tmp/tmpx7_cnwtz.php(20): sort_numbers()\n\
    #3 /tmp/tmpx7_cnwtz.php(24): candidate()\n#4 /tmp/tmpx7_cnwtz.php(31): test()\n\
    #5 {main}\n  thrown in /tmp/tmpx7_cnwtz.php on line 10\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers('three one five')\n// 'one three\
    \ five'\nfunction sort_numbers($numbers) {\n    $numbers = explode(' ', $numbers);\n\
    \    $numbers = array_map(function($number) {\n        return number_to_int($number);\n\
    \    }, $numbers);\n    sort($numbers);\n    $numbers = array_map(function($number)\
    \ {\n        return int_to_number($number);\n    }, $numbers);\n    return implode('\
    \ ', $numbers);\n}\n\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Error: Call to undefined function number_to_int()\
    \ in /tmp/tmp8ce4xk70.php:10\nStack trace:\n#0 [internal function]: {closure}()\n\
    #1 /tmp/tmp8ce4xk70.php(11): array_map()\n#2 /tmp/tmp8ce4xk70.php(20): sort_numbers()\n\
    #3 /tmp/tmp8ce4xk70.php(24): candidate()\n#4 /tmp/tmp8ce4xk70.php(31): test()\n\
    #5 {main}\n  thrown in /tmp/tmp8ce4xk70.php on line 10\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers('three one five')\n// 'one three\
    \ five'\nfunction sort_numbers($numbers) {\n    $numbers = explode(' ', $numbers);\n\
    \    $numbers = array_map(function($number) {\n        return number_to_numeral($number);\n\
    \    }, $numbers);\n    sort($numbers);\n    $numbers = array_map(function($number)\
    \ {\n        return numeral_to_number($number);\n    }, $numbers);\n    return\
    \ implode(' ', $numbers);\n}\n\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Error: Call to undefined function number_to_numeral()\
    \ in /tmp/tmpqspsswab.php:10\nStack trace:\n#0 [internal function]: {closure}()\n\
    #1 /tmp/tmpqspsswab.php(11): array_map()\n#2 /tmp/tmpqspsswab.php(20): sort_numbers()\n\
    #3 /tmp/tmpqspsswab.php(24): candidate()\n#4 /tmp/tmpqspsswab.php(31): test()\n\
    #5 {main}\n  thrown in /tmp/tmpqspsswab.php on line 10\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers('three one five')\n// 'one three\
    \ five'\nfunction sort_numbers($numbers) {\n    $numbers = explode(' ', $numbers);\n\
    \    $numbers = array_map(function($number) {\n        return number_to_int($number);\n\
    \    }, $numbers);\n    sort($numbers);\n    $numbers = array_map(function($number)\
    \ {\n        return int_to_number($number);\n    }, $numbers);\n    return implode('\
    \ ', $numbers);\n}\n\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Error: Call to undefined function number_to_int()\
    \ in /tmp/tmp9jyoyiha.php:10\nStack trace:\n#0 [internal function]: {closure}()\n\
    #1 /tmp/tmp9jyoyiha.php(11): array_map()\n#2 /tmp/tmp9jyoyiha.php(20): sort_numbers()\n\
    #3 /tmp/tmp9jyoyiha.php(24): candidate()\n#4 /tmp/tmp9jyoyiha.php(31): test()\n\
    #5 {main}\n  thrown in /tmp/tmp9jyoyiha.php on line 10\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers('three one five')\n// 'one three\
    \ five'\nfunction sort_numbers($numbers) {\n  $numbers = explode(' ', $numbers);\n\
    \  $numbers = array_map(function($number) {\n    return number_to_digit($number);\n\
    \  }, $numbers);\n  sort($numbers);\n  $numbers = array_map(function($number)\
    \ {\n    return digit_to_number($number);\n  }, $numbers);\n  return implode('\
    \ ', $numbers);\n}\n\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Error: Call to undefined function number_to_digit()\
    \ in /tmp/tmp12xx_st4.php:10\nStack trace:\n#0 [internal function]: {closure}()\n\
    #1 /tmp/tmp12xx_st4.php(11): array_map()\n#2 /tmp/tmp12xx_st4.php(20): sort_numbers()\n\
    #3 /tmp/tmp12xx_st4.php(24): candidate()\n#4 /tmp/tmp12xx_st4.php(31): test()\n\
    #5 {main}\n  thrown in /tmp/tmp12xx_st4.php on line 10\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers('three one five')\n// 'one three\
    \ five'\nfunction sort_numbers($numbers) {\n    $numbers = explode(' ', $numbers);\n\
    \    $numbers = array_map(function($number) {\n        return strlen($number);\n\
    \    }, $numbers);\n    sort($numbers);\n    return implode(' ', $numbers);\n\
    }\n\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp5h2tkxa3.php:21\n\
    Stack trace:\n#0 /tmp/tmp5h2tkxa3.php(28): test()\n#1 {main}\n  thrown in /tmp/tmp5h2tkxa3.php\
    \ on line 21\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers('three one five')\n// 'one three\
    \ five'\nfunction sort_numbers($numbers) {\n    $numbers = explode(' ', $numbers);\n\
    \    $numbers = array_map(function($number) {\n        return array_search($number,\
    \ ['zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine']);\n\
    \    }, $numbers);\n    sort($numbers);\n    $numbers = array_map(function($number)\
    \ {\n        return ['zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight', 'nine'][$number];\n    }, $numbers);\n    return implode(' ', $numbers);\n\
    }\n\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmptjsm109o.php:24\n\
    Stack trace:\n#0 /tmp/tmptjsm109o.php(31): test()\n#1 {main}\n  thrown in /tmp/tmptjsm109o.php\
    \ on line 24\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers('three one five')\n// 'one three\
    \ five'\nfunction sort_numbers($numbers) {\n    $numbers = explode(' ', $numbers);\n\
    \    $numbers = array_map(function($number) {\n        return number_to_int($number);\n\
    \    }, $numbers);\n    sort($numbers);\n    $numbers = array_map(function($number)\
    \ {\n        return int_to_number($number);\n    }, $numbers);\n    return implode('\
    \ ', $numbers);\n}\n\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Error: Call to undefined function number_to_int()\
    \ in /tmp/tmpckw5uqmc.php:10\nStack trace:\n#0 [internal function]: {closure}()\n\
    #1 /tmp/tmpckw5uqmc.php(11): array_map()\n#2 /tmp/tmpckw5uqmc.php(20): sort_numbers()\n\
    #3 /tmp/tmpckw5uqmc.php(24): candidate()\n#4 /tmp/tmpckw5uqmc.php(31): test()\n\
    #5 {main}\n  thrown in /tmp/tmpckw5uqmc.php on line 10\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers('three one five')\n// 'one three\
    \ five'\nfunction sort_numbers($numbers) {\n  $number_map = array(\n    'zero'\
    \ => 0,\n    'one' => 1,\n    'two' => 2,\n    'three' => 3,\n    'four' => 4,\n\
    \    'five' => 5,\n    'six' => 6,\n    'seven' => 7,\n    'eight' => 8,\n   \
    \ 'nine' => 9\n  );\n  $numbers = explode(' ', $numbers);\n  $numbers = array_map(function($number)\
    \ use ($number_map) {\n    return $number_map[$number];\n  }, $numbers);\n  sort($numbers);\n\
    \  $numbers = array_map(function($number) use ($number_map) {\n    return array_search($number,\
    \ $number_map);\n  }, $numbers);\n  return implode(' ', $numbers);\n}\n\nfunction\
    \ candidate(...$args) {\n    return sort_numbers(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Warning:  Undefined array key \"\" in /tmp/tmp_iu49lt_.php on line\
    \ 22\nPHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp_iu49lt_.php:36\n\
    Stack trace:\n#0 /tmp/tmp_iu49lt_.php(43): test()\n#1 {main}\n  thrown in /tmp/tmp_iu49lt_.php\
    \ on line 36\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers('three one five')\n// 'one three\
    \ five'\nfunction sort_numbers($numbers) {\n    $numbers = explode(' ', $numbers);\n\
    \    $numbers = array_map(function($number) {\n        return [\n            'number'\
    \ => $number,\n            'value' => array_search($number, ['zero', 'one', 'two',\
    \ 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine'])\n        ];\n   \
    \ }, $numbers);\n    usort($numbers, function($a, $b) {\n        return $a['value']\
    \ - $b['value'];\n    });\n    $numbers = array_map(function($number) {\n    \
    \    return $number['number'];\n    }, $numbers);\n    return implode(' ', $numbers);\n\
    }\n\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers('three one five')\n// 'one three\
    \ five'\nfunction sort_numbers($numbers) {\n\t$numbers = explode(' ', $numbers);\n\
    \t$numbers = array_map(function($number) {\n\t\treturn array_search($number, ['zero',\
    \ 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine']);\n\t\
    }, $numbers);\n\tsort($numbers);\n\t$numbers = array_map(function($number) {\n\
    \t\treturn ['zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight',\
    \ 'nine'][$number];\n\t}, $numbers);\n\treturn implode(' ', $numbers);\n}\n\n\
    function candidate(...$args) {\n    return sort_numbers(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpuexdet1_.php:24\n\
    Stack trace:\n#0 /tmp/tmpuexdet1_.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpuexdet1_.php\
    \ on line 24\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers('three one five')\n// 'one three\
    \ five'\nfunction sort_numbers($numbers) {\n    $numbers = explode(' ', $numbers);\n\
    \    $numbers = array_map(function($number) {\n        return ['number' => $number,\
    \ 'value' => get_number_value($number)];\n    }, $numbers);\n    usort($numbers,\
    \ function($a, $b) {\n        return $a['value'] - $b['value'];\n    });\n   \
    \ $numbers = array_map(function($number) {\n        return $number['number'];\n\
    \    }, $numbers);\n    return implode(' ', $numbers);\n}\n\nfunction candidate(...$args)\
    \ {\n    return sort_numbers(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"three\") !== \"three\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"three five nine\") !== \"three five nine\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four seven\
    \ nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Error: Call to undefined function get_number_value()\
    \ in /tmp/tmpcui6540x.php:10\nStack trace:\n#0 [internal function]: {closure}()\n\
    #1 /tmp/tmpcui6540x.php(11): array_map()\n#2 /tmp/tmpcui6540x.php(22): sort_numbers()\n\
    #3 /tmp/tmpcui6540x.php(26): candidate()\n#4 /tmp/tmpcui6540x.php(33): test()\n\
    #5 {main}\n  thrown in /tmp/tmpcui6540x.php on line 10\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers('three one five')\n// 'one three\
    \ five'\nfunction sort_numbers($numbers) {\n    $numbers = explode(' ', $numbers);\n\
    \    $numbers = array_map(function($number) {\n        $numbers = array(\n   \
    \         'zero' => 0,\n            'one' => 1,\n            'two' => 2,\n   \
    \         'three' => 3,\n            'four' => 4,\n            'five' => 5,\n\
    \            'six' => 6,\n            'seven' => 7,\n            'eight' => 8,\n\
    \            'nine' => 9\n        );\n        return $numbers[$number];\n    },\
    \ $numbers);\n    sort($numbers);\n    $numbers = array_map(function($number)\
    \ {\n        $numbers = array(\n            0 => 'zero',\n            1 => 'one',\n\
    \            2 => 'two',\n            3 => 'three',\n            4 => 'four',\n\
    \            5 => 'five',\n            6 => 'six',\n            7 => 'seven',\n\
    \            8 => 'eight',\n            9 => 'nine'\n        );\n        return\
    \ $numbers[$number];\n    }, $numbers);\n    return implode(' ', $numbers);\n\
    }\n\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Warning:  Undefined array key \"\" in /tmp/tmppn7puxv4.php on line\
    \ 22\nPHP Warning:  Undefined array key \"\" in /tmp/tmppn7puxv4.php on line 38\n"
  exit_code: 0
  status: OK
- program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers('three one five')\n// 'one three\
    \ five'\nfunction sort_numbers($numbers) {\n    $numbers = explode(' ', $numbers);\n\
    \    $numbers = array_map(function($number) {\n        return array_search($number,\
    \ ['zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine']);\n\
    \    }, $numbers);\n    sort($numbers);\n    $numbers = array_map(function($number)\
    \ {\n        return ['zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight', 'nine'][$number];\n    }, $numbers);\n    return implode(' ', $numbers);\n\
    }\n\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpr0siireq.php:24\n\
    Stack trace:\n#0 /tmp/tmpr0siireq.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpr0siireq.php\
    \ on line 24\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers('three one five')\n// 'one three\
    \ five'\nfunction sort_numbers($numbers) {\n    $numbers = explode(' ', $numbers);\n\
    \    $numbers = array_map(function($number) {\n        return array_search($number,\
    \ ['zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine']);\n\
    \    }, $numbers);\n    sort($numbers);\n    $numbers = array_map(function($number)\
    \ {\n        return ['zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight', 'nine'][$number];\n    }, $numbers);\n    return implode(' ', $numbers);\n\
    }\n\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpq4yugdce.php:24\n\
    Stack trace:\n#0 /tmp/tmpq4yugdce.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpq4yugdce.php\
    \ on line 24\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers('three one five')\n// 'one three\
    \ five'\nfunction sort_numbers($numbers) {\n  $numbers = explode(' ', $numbers);\n\
    \  $numbers = array_map(function($number) {\n    return [$number, array_search($number,\
    \ ['zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine'])];\n\
    \  }, $numbers);\n  usort($numbers, function($a, $b) {\n    return $a[1] - $b[1];\n\
    \  });\n  return implode(' ', array_map(function($number) {\n    return $number[0];\n\
    \  }, $numbers));\n}\n\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers('three one five')\n// 'one three\
    \ five'\nfunction sort_numbers($numbers) {\n    $numbers = explode(' ', $numbers);\n\
    \    $numbers = array_map(function($number) {\n        return number_to_int($number);\n\
    \    }, $numbers);\n    sort($numbers);\n    $numbers = array_map(function($number)\
    \ {\n        return int_to_number($number);\n    }, $numbers);\n    return implode('\
    \ ', $numbers);\n}\n\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Error: Call to undefined function number_to_int()\
    \ in /tmp/tmpaesy9j2i.php:10\nStack trace:\n#0 [internal function]: {closure}()\n\
    #1 /tmp/tmpaesy9j2i.php(11): array_map()\n#2 /tmp/tmpaesy9j2i.php(20): sort_numbers()\n\
    #3 /tmp/tmpaesy9j2i.php(24): candidate()\n#4 /tmp/tmpaesy9j2i.php(31): test()\n\
    #5 {main}\n  thrown in /tmp/tmpaesy9j2i.php on line 10\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers('three one five')\n// 'one three\
    \ five'\nfunction sort_numbers($numbers) {\n    $numbers = explode(' ', $numbers);\n\
    \    $numbers = array_map(function($number) {\n        return [\n            'number'\
    \ => $number,\n            'value' => array_search($number, ['zero', 'one', 'two',\
    \ 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine'])\n        ];\n   \
    \ }, $numbers);\n    usort($numbers, function($a, $b) {\n        return $a['value']\
    \ - $b['value'];\n    });\n    $numbers = array_map(function($number) {\n    \
    \    return $number['number'];\n    }, $numbers);\n    return implode(' ', $numbers);\n\
    }\n\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers('three one five')\n// 'one three\
    \ five'\nfunction sort_numbers($numbers) {\n  $numbers = explode(' ', $numbers);\n\
    \  $numbers = array_map(function($number) {\n    return array_search($number,\
    \ ['zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine']);\n\
    \  }, $numbers);\n  sort($numbers);\n  $numbers = array_map(function($number)\
    \ {\n    return ['zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight', 'nine'][$number];\n  }, $numbers);\n  return implode(' ', $numbers);\n\
    }\n\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpr6gvaa37.php:24\n\
    Stack trace:\n#0 /tmp/tmpr6gvaa37.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpr6gvaa37.php\
    \ on line 24\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers('three one five')\n// 'one three\
    \ five'\nfunction sort_numbers($numbers) {\n    $numbers = explode(' ', $numbers);\n\
    \    $numbers = array_map(function($number) {\n        return array_search($number,\
    \ ['zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine']);\n\
    \    }, $numbers);\n    sort($numbers);\n    $numbers = array_map(function($number)\
    \ {\n        return ['zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight', 'nine'][$number];\n    }, $numbers);\n    return implode(' ', $numbers);\n\
    }\n\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpkcdmhi8f.php:24\n\
    Stack trace:\n#0 /tmp/tmpkcdmhi8f.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpkcdmhi8f.php\
    \ on line 24\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers('three one five')\n// 'one three\
    \ five'\nfunction sort_numbers($numbers) {\n  $numbers = explode(' ', $numbers);\n\
    \  $numbers = array_map(function($number) {\n    switch ($number) {\n      case\
    \ 'zero':\n        return 0;\n      case 'one':\n        return 1;\n      case\
    \ 'two':\n        return 2;\n      case 'three':\n        return 3;\n      case\
    \ 'four':\n        return 4;\n      case 'five':\n        return 5;\n      case\
    \ 'six':\n        return 6;\n      case 'seven':\n        return 7;\n      case\
    \ 'eight':\n        return 8;\n      case 'nine':\n        return 9;\n    }\n\
    \  }, $numbers);\n  sort($numbers);\n  $numbers = array_map(function($number)\
    \ {\n    switch ($number) {\n      case 0:\n        return 'zero';\n      case\
    \ 1:\n        return 'one';\n      case 2:\n        return 'two';\n      case\
    \ 3:\n        return 'three';\n      case 4:\n        return 'four';\n      case\
    \ 5:\n        return 'five';\n      case 6:\n        return 'six';\n      case\
    \ 7:\n        return 'seven';\n      case 8:\n        return 'eight';\n      case\
    \ 9:\n        return 'nine';\n    }\n  }, $numbers);\n  return implode(' ', $numbers);\n\
    }\n\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpa1rqlyl5.php:66\n\
    Stack trace:\n#0 /tmp/tmpa1rqlyl5.php(73): test()\n#1 {main}\n  thrown in /tmp/tmpa1rqlyl5.php\
    \ on line 66\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers('three one five')\n// 'one three\
    \ five'\nfunction sort_numbers($numbers) {\n    $numbers = explode(' ', $numbers);\n\
    \    $numbers = array_map(function($number) {\n        return str_replace(['zero',\
    \ 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine'], [0,\
    \ 1, 2, 3, 4, 5, 6, 7, 8, 9], $number);\n    }, $numbers);\n    sort($numbers);\n\
    \    $numbers = array_map(function($number) {\n        return str_replace([0,\
    \ 1, 2, 3, 4, 5, 6, 7, 8, 9], ['zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight', 'nine'], $number);\n    }, $numbers);\n    return implode('\
    \ ', $numbers);\n}\n\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers('three one five')\n// 'one three\
    \ five'\nfunction sort_numbers($numbers) {\n    $numbers = explode(' ', $numbers);\n\
    \    $numbers = array_map(function($number) {\n        return number_to_numeral($number);\n\
    \    }, $numbers);\n    sort($numbers);\n    $numbers = array_map(function($number)\
    \ {\n        return numeral_to_number($number);\n    }, $numbers);\n    return\
    \ implode(' ', $numbers);\n}\n\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Error: Call to undefined function number_to_numeral()\
    \ in /tmp/tmplwfcbxuz.php:10\nStack trace:\n#0 [internal function]: {closure}()\n\
    #1 /tmp/tmplwfcbxuz.php(11): array_map()\n#2 /tmp/tmplwfcbxuz.php(20): sort_numbers()\n\
    #3 /tmp/tmplwfcbxuz.php(24): candidate()\n#4 /tmp/tmplwfcbxuz.php(31): test()\n\
    #5 {main}\n  thrown in /tmp/tmplwfcbxuz.php on line 10\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers('three one five')\n// 'one three\
    \ five'\nfunction sort_numbers($numbers) {\n  $numbers = explode(' ', $numbers);\n\
    \  $numbers = array_map(function($number) {\n    return [\n      'value' => $number,\n\
    \      'key' => array_search($number, ['zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight', 'nine'])\n    ];\n  }, $numbers);\n  usort($numbers,\
    \ function($a, $b) {\n    return $a['key'] - $b['key'];\n  });\n  $numbers = array_map(function($number)\
    \ {\n    return $number['value'];\n  }, $numbers);\n  return implode(' ', $numbers);\n\
    }\n\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers('three one five')\n// 'one three\
    \ five'\nfunction sort_numbers($numbers) {\n    $numbers = explode(' ', $numbers);\n\
    \    $numbers = array_map(function($number) {\n        return [\n            'number'\
    \ => $number,\n            'value' => [\n                'zero' => 0,\n      \
    \          'one' => 1,\n                'two' => 2,\n                'three' =>\
    \ 3,\n                'four' => 4,\n                'five' => 5,\n           \
    \     'six' => 6,\n                'seven' => 7,\n                'eight' => 8,\n\
    \                'nine' => 9,\n            ][$number]\n        ];\n    }, $numbers);\n\
    \    usort($numbers, function($a, $b) {\n        return $a['value'] - $b['value'];\n\
    \    });\n    return implode(' ', array_map(function($number) {\n        return\
    \ $number['number'];\n    }, $numbers));\n}\n\nfunction candidate(...$args) {\n\
    \    return sort_numbers(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    \") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    three\") !== \"three\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    three five nine\") !== \"three five nine\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"five zero four seven nine eight\") !== \"zero four five\
    \ seven eight nine\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    six five four three two one zero\") !== \"zero one two three four five six\")\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Warning:  Undefined array key \"\" in /tmp/tmp0r703_nm.php on line\
    \ 23\n"
  exit_code: 0
  status: OK
- program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers('three one five')\n// 'one three\
    \ five'\nfunction sort_numbers($numbers) {\n    $numbers = explode(' ', $numbers);\n\
    \    $numbers = array_map(function($number) {\n        return number_to_int($number);\n\
    \    }, $numbers);\n    sort($numbers);\n    $numbers = array_map(function($number)\
    \ {\n        return int_to_number($number);\n    }, $numbers);\n    return implode('\
    \ ', $numbers);\n}\n\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Error: Call to undefined function number_to_int()\
    \ in /tmp/tmpu9895rij.php:10\nStack trace:\n#0 [internal function]: {closure}()\n\
    #1 /tmp/tmpu9895rij.php(11): array_map()\n#2 /tmp/tmpu9895rij.php(20): sort_numbers()\n\
    #3 /tmp/tmpu9895rij.php(24): candidate()\n#4 /tmp/tmpu9895rij.php(31): test()\n\
    #5 {main}\n  thrown in /tmp/tmpu9895rij.php on line 10\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers('three one five')\n// 'one three\
    \ five'\nfunction sort_numbers($numbers) {\n    $numbers = explode(' ', $numbers);\n\
    \    $numbers = array_map(function($number) {\n        return convert_number($number);\n\
    \    }, $numbers);\n    sort($numbers);\n    $numbers = array_map(function($number)\
    \ {\n        return convert_number($number);\n    }, $numbers);\n    return implode('\
    \ ', $numbers);\n}\n\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Error: Call to undefined function convert_number()\
    \ in /tmp/tmpnx6htz7c.php:10\nStack trace:\n#0 [internal function]: {closure}()\n\
    #1 /tmp/tmpnx6htz7c.php(11): array_map()\n#2 /tmp/tmpnx6htz7c.php(20): sort_numbers()\n\
    #3 /tmp/tmpnx6htz7c.php(24): candidate()\n#4 /tmp/tmpnx6htz7c.php(31): test()\n\
    #5 {main}\n  thrown in /tmp/tmpnx6htz7c.php on line 10\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers('three one five')\n// 'one three\
    \ five'\nfunction sort_numbers($numbers) {\n    $numbers = explode(' ', $numbers);\n\
    \    $numbers = array_map(function($number) {\n        return strlen($number);\n\
    \    }, $numbers);\n    sort($numbers);\n    return implode(' ', $numbers);\n\
    }\n\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpu2s9aywq.php:21\n\
    Stack trace:\n#0 /tmp/tmpu2s9aywq.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpu2s9aywq.php\
    \ on line 21\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers('three one five')\n// 'one three\
    \ five'\nfunction sort_numbers($numbers) {\n    $numbers = explode(' ', $numbers);\n\
    \    $numbers = array_map(function($number) {\n        return number_to_int($number);\n\
    \    }, $numbers);\n    sort($numbers);\n    $numbers = array_map(function($number)\
    \ {\n        return int_to_number($number);\n    }, $numbers);\n    return implode('\
    \ ', $numbers);\n}\n\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Error: Call to undefined function number_to_int()\
    \ in /tmp/tmpkz6m0fmk.php:10\nStack trace:\n#0 [internal function]: {closure}()\n\
    #1 /tmp/tmpkz6m0fmk.php(11): array_map()\n#2 /tmp/tmpkz6m0fmk.php(20): sort_numbers()\n\
    #3 /tmp/tmpkz6m0fmk.php(24): candidate()\n#4 /tmp/tmpkz6m0fmk.php(31): test()\n\
    #5 {main}\n  thrown in /tmp/tmpkz6m0fmk.php on line 10\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers('three one five')\n// 'one three\
    \ five'\nfunction sort_numbers($numbers) {\n    $numbers = explode(' ', $numbers);\n\
    \    $numbers = array_map(function($number) {\n        return number_to_int($number);\n\
    \    }, $numbers);\n    sort($numbers);\n    $numbers = array_map(function($number)\
    \ {\n        return int_to_number($number);\n    }, $numbers);\n    return implode('\
    \ ', $numbers);\n}\n\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Error: Call to undefined function number_to_int()\
    \ in /tmp/tmp9y58c3_a.php:10\nStack trace:\n#0 [internal function]: {closure}()\n\
    #1 /tmp/tmp9y58c3_a.php(11): array_map()\n#2 /tmp/tmp9y58c3_a.php(20): sort_numbers()\n\
    #3 /tmp/tmp9y58c3_a.php(24): candidate()\n#4 /tmp/tmp9y58c3_a.php(31): test()\n\
    #5 {main}\n  thrown in /tmp/tmp9y58c3_a.php on line 10\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers('three one five')\n// 'one three\
    \ five'\nfunction sort_numbers($numbers) {\n\t$numbers = explode(' ', $numbers);\n\
    \t$numbers = array_map(function($number) {\n\t\tswitch($number) {\n\t\t\tcase\
    \ 'zero':\n\t\t\t\treturn 0;\n\t\t\tcase 'one':\n\t\t\t\treturn 1;\n\t\t\tcase\
    \ 'two':\n\t\t\t\treturn 2;\n\t\t\tcase 'three':\n\t\t\t\treturn 3;\n\t\t\tcase\
    \ 'four':\n\t\t\t\treturn 4;\n\t\t\tcase 'five':\n\t\t\t\treturn 5;\n\t\t\tcase\
    \ 'six':\n\t\t\t\treturn 6;\n\t\t\tcase 'seven':\n\t\t\t\treturn 7;\n\t\t\tcase\
    \ 'eight':\n\t\t\t\treturn 8;\n\t\t\tcase 'nine':\n\t\t\t\treturn 9;\n\t\t}\n\t\
    }, $numbers);\n\tsort($numbers);\n\t$numbers = array_map(function($number) {\n\
    \t\tswitch($number) {\n\t\t\tcase 0:\n\t\t\t\treturn 'zero';\n\t\t\tcase 1:\n\t\
    \t\t\treturn 'one';\n\t\t\tcase 2:\n\t\t\t\treturn 'two';\n\t\t\tcase 3:\n\t\t\
    \t\treturn 'three';\n\t\t\tcase 4:\n\t\t\t\treturn 'four';\n\t\t\tcase 5:\n\t\t\
    \t\treturn 'five';\n\t\t\tcase 6:\n\t\t\t\treturn 'six';\n\t\t\tcase 7:\n\t\t\t\
    \treturn 'seven';\n\t\t\tcase 8:\n\t\t\t\treturn 'eight';\n\t\t\tcase 9:\n\t\t\
    \t\treturn 'nine';\n\t\t}\n\t}, $numbers);\n\treturn implode(' ', $numbers);\n\
    }\n\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmple1fdnlr.php:66\n\
    Stack trace:\n#0 /tmp/tmple1fdnlr.php(73): test()\n#1 {main}\n  thrown in /tmp/tmple1fdnlr.php\
    \ on line 66\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers('three one five')\n// 'one three\
    \ five'\nfunction sort_numbers($numbers) {\n    $numbers = explode(' ', $numbers);\n\
    \    $numbers = array_map(function($number) {\n        return array_search($number,\
    \ ['zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine']);\n\
    \    }, $numbers);\n    sort($numbers);\n    $numbers = array_map(function($number)\
    \ {\n        return ['zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight', 'nine'][$number];\n    }, $numbers);\n    return implode(' ', $numbers);\n\
    }\n\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmptz3w7yq4.php:24\n\
    Stack trace:\n#0 /tmp/tmptz3w7yq4.php(31): test()\n#1 {main}\n  thrown in /tmp/tmptz3w7yq4.php\
    \ on line 24\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers('three one five')\n// 'one three\
    \ five'\nfunction sort_numbers($numbers) {\n    $numbers = explode(' ', $numbers);\n\
    \    $numbers = array_map(function($number) {\n        return number_to_int($number);\n\
    \    }, $numbers);\n    sort($numbers);\n    $numbers = array_map(function($number)\
    \ {\n        return int_to_number($number);\n    }, $numbers);\n    return implode('\
    \ ', $numbers);\n}\n\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Error: Call to undefined function number_to_int()\
    \ in /tmp/tmp_ng2metw.php:10\nStack trace:\n#0 [internal function]: {closure}()\n\
    #1 /tmp/tmp_ng2metw.php(11): array_map()\n#2 /tmp/tmp_ng2metw.php(20): sort_numbers()\n\
    #3 /tmp/tmp_ng2metw.php(24): candidate()\n#4 /tmp/tmp_ng2metw.php(31): test()\n\
    #5 {main}\n  thrown in /tmp/tmp_ng2metw.php on line 10\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers('three one five')\n// 'one three\
    \ five'\nfunction sort_numbers($numbers) {\n    $numbers = explode(' ', $numbers);\n\
    \    $numbers = array_map(function($number) {\n        return array_search($number,\
    \ ['zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine']);\n\
    \    }, $numbers);\n    sort($numbers);\n    $numbers = array_map(function($number)\
    \ {\n        return ['zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight', 'nine'][$number];\n    }, $numbers);\n    return implode(' ', $numbers);\n\
    }\n\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp3wnxqg24.php:24\n\
    Stack trace:\n#0 /tmp/tmp3wnxqg24.php(31): test()\n#1 {main}\n  thrown in /tmp/tmp3wnxqg24.php\
    \ on line 24\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers('three one five')\n// 'one three\
    \ five'\nfunction sort_numbers($numbers) {\n  $numbers = explode(' ', $numbers);\n\
    \  $numbers = array_map(function($number) {\n    switch ($number) {\n      case\
    \ 'zero':\n        return 0;\n      case 'one':\n        return 1;\n      case\
    \ 'two':\n        return 2;\n      case 'three':\n        return 3;\n      case\
    \ 'four':\n        return 4;\n      case 'five':\n        return 5;\n      case\
    \ 'six':\n        return 6;\n      case 'seven':\n        return 7;\n      case\
    \ 'eight':\n        return 8;\n      case 'nine':\n        return 9;\n    }\n\
    \  }, $numbers);\n  sort($numbers);\n  $numbers = array_map(function($number)\
    \ {\n    switch ($number) {\n      case 0:\n        return 'zero';\n      case\
    \ 1:\n        return 'one';\n      case 2:\n        return 'two';\n      case\
    \ 3:\n        return 'three';\n      case 4:\n        return 'four';\n      case\
    \ 5:\n        return 'five';\n      case 6:\n        return 'six';\n      case\
    \ 7:\n        return 'seven';\n      case 8:\n        return 'eight';\n      case\
    \ 9:\n        return 'nine';\n    }\n  }, $numbers);\n  return implode(' ', $numbers);\n\
    }\n\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp2f4fywjw.php:66\n\
    Stack trace:\n#0 /tmp/tmp2f4fywjw.php(73): test()\n#1 {main}\n  thrown in /tmp/tmp2f4fywjw.php\
    \ on line 66\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers('three one five')\n// 'one three\
    \ five'\nfunction sort_numbers($numbers) {\n    $numbers = explode(' ', $numbers);\n\
    \    $numbers = array_map(function($number) {\n        return array_search($number,\
    \ ['zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine']);\n\
    \    }, $numbers);\n    sort($numbers);\n    $numbers = array_map(function($number)\
    \ {\n        return ['zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight', 'nine'][$number];\n    }, $numbers);\n    return implode(' ', $numbers);\n\
    }\n\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpu5q_pdpz.php:24\n\
    Stack trace:\n#0 /tmp/tmpu5q_pdpz.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpu5q_pdpz.php\
    \ on line 24\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers('three one five')\n// 'one three\
    \ five'\nfunction sort_numbers($numbers) {\n  $numbers = explode(' ', $numbers);\n\
    \  $numbers = array_map(function($number) {\n    return array_search($number,\
    \ array('zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight',\
    \ 'nine'));\n  }, $numbers);\n  sort($numbers);\n  $numbers = array_map(function($number)\
    \ {\n    return array('zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight', 'nine')[$number];\n  }, $numbers);\n  return implode(' ', $numbers);\n\
    }\n\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp20lozu6j.php:24\n\
    Stack trace:\n#0 /tmp/tmp20lozu6j.php(31): test()\n#1 {main}\n  thrown in /tmp/tmp20lozu6j.php\
    \ on line 24\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers('three one five')\n// 'one three\
    \ five'\nfunction sort_numbers($numbers) {\n    $numbers = explode(' ', $numbers);\n\
    \    $numbers = array_map(function($number) {\n        return array_search($number,\
    \ ['zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine']);\n\
    \    }, $numbers);\n    sort($numbers);\n    $numbers = array_map(function($number)\
    \ {\n        return ['zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight', 'nine'][$number];\n    }, $numbers);\n    return implode(' ', $numbers);\n\
    }\n\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmps8v1ewuh.php:24\n\
    Stack trace:\n#0 /tmp/tmps8v1ewuh.php(31): test()\n#1 {main}\n  thrown in /tmp/tmps8v1ewuh.php\
    \ on line 24\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers('three one five')\n// 'one three\
    \ five'\nfunction sort_numbers($numbers) {\n    $numbers = explode(' ', $numbers);\n\
    \    $numbers = array_map(function($number) {\n        return number_to_numeral($number);\n\
    \    }, $numbers);\n    sort($numbers);\n    $numbers = array_map(function($number)\
    \ {\n        return numeral_to_number($number);\n    }, $numbers);\n    return\
    \ implode(' ', $numbers);\n}\n\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Error: Call to undefined function number_to_numeral()\
    \ in /tmp/tmpwyx9g6pc.php:10\nStack trace:\n#0 [internal function]: {closure}()\n\
    #1 /tmp/tmpwyx9g6pc.php(11): array_map()\n#2 /tmp/tmpwyx9g6pc.php(20): sort_numbers()\n\
    #3 /tmp/tmpwyx9g6pc.php(24): candidate()\n#4 /tmp/tmpwyx9g6pc.php(31): test()\n\
    #5 {main}\n  thrown in /tmp/tmpwyx9g6pc.php on line 10\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers('three one five')\n// 'one three\
    \ five'\nfunction sort_numbers($numbers) {\n  $numbers = explode(' ', $numbers);\n\
    \  $numbers = array_map(function($number) {\n    return $number === 'zero' ? 0\
    \ : $number === 'one' ? 1 : $number === 'two' ? 2 : $number === 'three' ? 3 :\
    \ $number === 'four' ? 4 : $number === 'five' ? 5 : $number === 'six' ? 6 : $number\
    \ === 'seven' ? 7 : $number === 'eight' ? 8 : $number === 'nine' ? 9 : null;\n\
    \  }, $numbers);\n  sort($numbers);\n  $numbers = array_map(function($number)\
    \ {\n    return $number === 0 ? 'zero' : $number === 1 ? 'one' : $number === 2\
    \ ? 'two' : $number === 3 ? 'three' : $number === 4 ? 'four' : $number === 5 ?\
    \ 'five' : $number === 6 ? 'six' : $number === 7 ? 'seven' : $number === 8 ? 'eight'\
    \ : $number === 9 ? 'nine' : null;\n  }, $numbers);\n  return implode(' ', $numbers);\n\
    }\n\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Unparenthesized `a ? b : c ? d : e` is not supported.\
    \ Use either `(a ? b : c) ? d : e` or `a ? b : (c ? d : e)` in /tmp/tmpertp5j34.php\
    \ on line 10\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers('three one five')\n// 'one three\
    \ five'\nfunction sort_numbers($numbers) {\n  $numbers = explode(' ', $numbers);\n\
    \  $numbers = array_map(function($number) {\n    switch ($number) {\n      case\
    \ 'zero':\n        return 0;\n      case 'one':\n        return 1;\n      case\
    \ 'two':\n        return 2;\n      case 'three':\n        return 3;\n      case\
    \ 'four':\n        return 4;\n      case 'five':\n        return 5;\n      case\
    \ 'six':\n        return 6;\n      case 'seven':\n        return 7;\n      case\
    \ 'eight':\n        return 8;\n      case 'nine':\n        return 9;\n    }\n\
    \  }, $numbers);\n  sort($numbers);\n  $numbers = array_map(function($number)\
    \ {\n    switch ($number) {\n      case 0:\n        return 'zero';\n      case\
    \ 1:\n        return 'one';\n      case 2:\n        return 'two';\n      case\
    \ 3:\n        return 'three';\n      case 4:\n        return 'four';\n      case\
    \ 5:\n        return 'five';\n      case 6:\n        return 'six';\n      case\
    \ 7:\n        return 'seven';\n      case 8:\n        return 'eight';\n      case\
    \ 9:\n        return 'nine';\n    }\n  }, $numbers);\n  return implode(' ', $numbers);\n\
    }\n\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpxkcsw9ul.php:66\n\
    Stack trace:\n#0 /tmp/tmpxkcsw9ul.php(73): test()\n#1 {main}\n  thrown in /tmp/tmpxkcsw9ul.php\
    \ on line 66\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers('three one five')\n// 'one three\
    \ five'\nfunction sort_numbers($numbers) {\n    $numbers = explode(' ', $numbers);\n\
    \    $numbers = array_map(function($number) {\n        return array_search($number,\
    \ ['zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine']);\n\
    \    }, $numbers);\n    sort($numbers);\n    $numbers = array_map(function($number)\
    \ {\n        return ['zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight', 'nine'][$number];\n    }, $numbers);\n    return implode(' ', $numbers);\n\
    }\n\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp_0fknqj_.php:24\n\
    Stack trace:\n#0 /tmp/tmp_0fknqj_.php(31): test()\n#1 {main}\n  thrown in /tmp/tmp_0fknqj_.php\
    \ on line 24\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers('three one five')\n// 'one three\
    \ five'\nfunction sort_numbers($numbers) {\n  $numbers_array = explode(' ', $numbers);\n\
    \  $numbers_array = array_map('convert_to_number', $numbers_array);\n  sort($numbers_array);\n\
    \  $numbers_array = array_map('convert_to_string', $numbers_array);\n  return\
    \ implode(' ', $numbers_array);\n}\n\nfunction candidate(...$args) {\n    return\
    \ sort_numbers(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\"\
    ) !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"three\"\
    ) !== \"three\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    three five nine\") !== \"three five nine\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"five zero four seven nine eight\") !== \"zero four five\
    \ seven eight nine\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    six five four three two one zero\") !== \"zero one two three four five six\")\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught TypeError: array_map(): Argument #1 ($callback)\
    \ must be a valid callback or null, function \"convert_to_number\" not found or\
    \ invalid function name in /tmp/tmpfp09y8it.php:9\nStack trace:\n#0 /tmp/tmpfp09y8it.php(9):\
    \ array_map()\n#1 /tmp/tmpfp09y8it.php(16): sort_numbers()\n#2 /tmp/tmpfp09y8it.php(20):\
    \ candidate()\n#3 /tmp/tmpfp09y8it.php(27): test()\n#4 {main}\n  thrown in /tmp/tmpfp09y8it.php\
    \ on line 9\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers('three one five')\n// 'one three\
    \ five'\nfunction sort_numbers($numbers) {\n    $numbers = explode(' ', $numbers);\n\
    \    $numbers = array_map(function($number) {\n        return [\n            'number'\
    \ => $number,\n            'value' => array_search($number, ['zero', 'one', 'two',\
    \ 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine'])\n        ];\n   \
    \ }, $numbers);\n    usort($numbers, function($a, $b) {\n        return $a['value']\
    \ - $b['value'];\n    });\n    $numbers = array_map(function($number) {\n    \
    \    return $number['number'];\n    }, $numbers);\n    return implode(' ', $numbers);\n\
    }\n\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers('three one five')\n// 'one three\
    \ five'\nfunction sort_numbers($numbers) {\n    $numbers = explode(' ', $numbers);\n\
    \    $numbers = array_map(function($number) {\n        return convert_number($number);\n\
    \    }, $numbers);\n    sort($numbers);\n    $numbers = array_map(function($number)\
    \ {\n        return convert_number($number);\n    }, $numbers);\n    return implode('\
    \ ', $numbers);\n}\n\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Error: Call to undefined function convert_number()\
    \ in /tmp/tmpqc3_7_4u.php:10\nStack trace:\n#0 [internal function]: {closure}()\n\
    #1 /tmp/tmpqc3_7_4u.php(11): array_map()\n#2 /tmp/tmpqc3_7_4u.php(20): sort_numbers()\n\
    #3 /tmp/tmpqc3_7_4u.php(24): candidate()\n#4 /tmp/tmpqc3_7_4u.php(31): test()\n\
    #5 {main}\n  thrown in /tmp/tmpqc3_7_4u.php on line 10\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers('three one five')\n// 'one three\
    \ five'\nfunction sort_numbers($numbers) {\n  $numbers = explode(' ', $numbers);\n\
    \  $numbers = array_map(function($number) {\n    $number = strtolower($number);\n\
    \    switch ($number) {\n      case 'zero':\n        return 0;\n      case 'one':\n\
    \        return 1;\n      case 'two':\n        return 2;\n      case 'three':\n\
    \        return 3;\n      case 'four':\n        return 4;\n      case 'five':\n\
    \        return 5;\n      case 'six':\n        return 6;\n      case 'seven':\n\
    \        return 7;\n      case 'eight':\n        return 8;\n      case 'nine':\n\
    \        return 9;\n    }\n  }, $numbers);\n  sort($numbers);\n  $numbers = array_map(function($number)\
    \ {\n    switch ($number) {\n      case 0:\n        return 'zero';\n      case\
    \ 1:\n        return 'one';\n      case 2:\n        return 'two';\n      case\
    \ 3:\n        return 'three';\n      case 4:\n        return 'four';\n      case\
    \ 5:\n        return 'five';\n      case 6:\n        return 'six';\n      case\
    \ 7:\n        return 'seven';\n      case 8:\n        return 'eight';\n      case\
    \ 9:\n        return 'nine';\n    }\n  }, $numbers);\n  return implode(' ', $numbers);\n\
    }\n\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpiqgo2wme.php:67\n\
    Stack trace:\n#0 /tmp/tmpiqgo2wme.php(74): test()\n#1 {main}\n  thrown in /tmp/tmpiqgo2wme.php\
    \ on line 67\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers('three one five')\n// 'one three\
    \ five'\nfunction sort_numbers($numbers) {\n  $numbers = explode(' ', $numbers);\n\
    \  $numbers = array_map(function($number) {\n    switch ($number) {\n      case\
    \ 'zero':\n        return 0;\n      case 'one':\n        return 1;\n      case\
    \ 'two':\n        return 2;\n      case 'three':\n        return 3;\n      case\
    \ 'four':\n        return 4;\n      case 'five':\n        return 5;\n      case\
    \ 'six':\n        return 6;\n      case 'seven':\n        return 7;\n      case\
    \ 'eight':\n        return 8;\n      case 'nine':\n        return 9;\n    }\n\
    \  }, $numbers);\n  sort($numbers);\n  $numbers = array_map(function($number)\
    \ {\n    switch ($number) {\n      case 0:\n        return 'zero';\n      case\
    \ 1:\n        return 'one';\n      case 2:\n        return 'two';\n      case\
    \ 3:\n        return 'three';\n      case 4:\n        return 'four';\n      case\
    \ 5:\n        return 'five';\n      case 6:\n        return 'six';\n      case\
    \ 7:\n        return 'seven';\n      case 8:\n        return 'eight';\n      case\
    \ 9:\n        return 'nine';\n    }\n  }, $numbers);\n  return implode(' ', $numbers);\n\
    }\n\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpab9rlgwt.php:66\n\
    Stack trace:\n#0 /tmp/tmpab9rlgwt.php(73): test()\n#1 {main}\n  thrown in /tmp/tmpab9rlgwt.php\
    \ on line 66\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers('three one five')\n// 'one three\
    \ five'\nfunction sort_numbers($numbers) {\n    $numbers = explode(' ', $numbers);\n\
    \    $numbers = array_map(function($number) {\n        return number_to_int($number);\n\
    \    }, $numbers);\n    sort($numbers);\n    $numbers = array_map(function($number)\
    \ {\n        return int_to_number($number);\n    }, $numbers);\n    return implode('\
    \ ', $numbers);\n}\n\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Error: Call to undefined function number_to_int()\
    \ in /tmp/tmpepq8sovg.php:10\nStack trace:\n#0 [internal function]: {closure}()\n\
    #1 /tmp/tmpepq8sovg.php(11): array_map()\n#2 /tmp/tmpepq8sovg.php(20): sort_numbers()\n\
    #3 /tmp/tmpepq8sovg.php(24): candidate()\n#4 /tmp/tmpepq8sovg.php(31): test()\n\
    #5 {main}\n  thrown in /tmp/tmpepq8sovg.php on line 10\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers('three one five')\n// 'one three\
    \ five'\nfunction sort_numbers($numbers) {\n\t$numbers = explode(' ', $numbers);\n\
    \t$numbers = array_map(function($number) {\n\t\treturn number_to_numeral($number);\n\
    \t}, $numbers);\n\tsort($numbers);\n\t$numbers = array_map(function($number) {\n\
    \t\treturn numeral_to_number($number);\n\t}, $numbers);\n\treturn implode(' ',\
    \ $numbers);\n}\n\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Error: Call to undefined function number_to_numeral()\
    \ in /tmp/tmp2f27myb4.php:10\nStack trace:\n#0 [internal function]: {closure}()\n\
    #1 /tmp/tmp2f27myb4.php(11): array_map()\n#2 /tmp/tmp2f27myb4.php(20): sort_numbers()\n\
    #3 /tmp/tmp2f27myb4.php(24): candidate()\n#4 /tmp/tmp2f27myb4.php(31): test()\n\
    #5 {main}\n  thrown in /tmp/tmp2f27myb4.php on line 10\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers('three one five')\n// 'one three\
    \ five'\nfunction sort_numbers($numbers) {\n    $numbers = explode(' ', $numbers);\n\
    \    $numbers = array_map(function($number) {\n        return array_search($number,\
    \ ['zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine']);\n\
    \    }, $numbers);\n    sort($numbers);\n    $numbers = array_map(function($number)\
    \ {\n        return ['zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight', 'nine'][$number];\n    }, $numbers);\n    return implode(' ', $numbers);\n\
    }\n\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpamrwiug9.php:24\n\
    Stack trace:\n#0 /tmp/tmpamrwiug9.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpamrwiug9.php\
    \ on line 24\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers('three one five')\n// 'one three\
    \ five'\nfunction sort_numbers($numbers) {\n  $numbers = explode(' ', $numbers);\n\
    \  $numbers = array_map(function($number) {\n    return number_to_digit($number);\n\
    \  }, $numbers);\n  sort($numbers);\n  $numbers = array_map(function($number)\
    \ {\n    return digit_to_number($number);\n  }, $numbers);\n  return implode('\
    \ ', $numbers);\n}\n\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Error: Call to undefined function number_to_digit()\
    \ in /tmp/tmp3z1du24p.php:10\nStack trace:\n#0 [internal function]: {closure}()\n\
    #1 /tmp/tmp3z1du24p.php(11): array_map()\n#2 /tmp/tmp3z1du24p.php(20): sort_numbers()\n\
    #3 /tmp/tmp3z1du24p.php(24): candidate()\n#4 /tmp/tmp3z1du24p.php(31): test()\n\
    #5 {main}\n  thrown in /tmp/tmp3z1du24p.php on line 10\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers('three one five')\n// 'one three\
    \ five'\nfunction sort_numbers($numbers) {\n    $numbers = explode(' ', $numbers);\n\
    \    $numbers = array_map(function($number) {\n        return number_to_int($number);\n\
    \    }, $numbers);\n    sort($numbers);\n    $numbers = array_map(function($number)\
    \ {\n        return int_to_number($number);\n    }, $numbers);\n    return implode('\
    \ ', $numbers);\n}\n\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Error: Call to undefined function number_to_int()\
    \ in /tmp/tmpnbkz_6bg.php:10\nStack trace:\n#0 [internal function]: {closure}()\n\
    #1 /tmp/tmpnbkz_6bg.php(11): array_map()\n#2 /tmp/tmpnbkz_6bg.php(20): sort_numbers()\n\
    #3 /tmp/tmpnbkz_6bg.php(24): candidate()\n#4 /tmp/tmpnbkz_6bg.php(31): test()\n\
    #5 {main}\n  thrown in /tmp/tmpnbkz_6bg.php on line 10\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers('three one five')\n// 'one three\
    \ five'\nfunction sort_numbers($numbers) {\n    $numbers = explode(' ', $numbers);\n\
    \    $numbers = array_map(function($number) {\n        switch ($number) {\n  \
    \          case 'zero':\n                return 0;\n            case 'one':\n\
    \                return 1;\n            case 'two':\n                return 2;\n\
    \            case 'three':\n                return 3;\n            case 'four':\n\
    \                return 4;\n            case 'five':\n                return 5;\n\
    \            case 'six':\n                return 6;\n            case 'seven':\n\
    \                return 7;\n            case 'eight':\n                return\
    \ 8;\n            case 'nine':\n                return 9;\n        }\n    }, $numbers);\n\
    \    sort($numbers);\n    $numbers = array_map(function($number) {\n        switch\
    \ ($number) {\n            case 0:\n                return 'zero';\n         \
    \   case 1:\n                return 'one';\n            case 2:\n            \
    \    return 'two';\n            case 3:\n                return 'three';\n   \
    \         case 4:\n                return 'four';\n            case 5:\n     \
    \           return 'five';\n            case 6:\n                return 'six';\n\
    \            case 7:\n                return 'seven';\n            case 8:\n \
    \               return 'eight';\n            case 9:\n                return 'nine';\n\
    \        }\n    }, $numbers);\n    return implode(' ', $numbers);\n}\n\nfunction\
    \ candidate(...$args) {\n    return sort_numbers(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpgk4tx9ar.php:66\n\
    Stack trace:\n#0 /tmp/tmpgk4tx9ar.php(73): test()\n#1 {main}\n  thrown in /tmp/tmpgk4tx9ar.php\
    \ on line 66\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers('three one five')\n// 'one three\
    \ five'\nfunction sort_numbers($numbers) {\n    $numbers = explode(' ', $numbers);\n\
    \    $numbers = array_map(function($number) {\n        return number_to_int($number);\n\
    \    }, $numbers);\n    sort($numbers);\n    $numbers = array_map(function($number)\
    \ {\n        return int_to_number($number);\n    }, $numbers);\n    return implode('\
    \ ', $numbers);\n}\n\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Error: Call to undefined function number_to_int()\
    \ in /tmp/tmpza6sqint.php:10\nStack trace:\n#0 [internal function]: {closure}()\n\
    #1 /tmp/tmpza6sqint.php(11): array_map()\n#2 /tmp/tmpza6sqint.php(20): sort_numbers()\n\
    #3 /tmp/tmpza6sqint.php(24): candidate()\n#4 /tmp/tmpza6sqint.php(31): test()\n\
    #5 {main}\n  thrown in /tmp/tmpza6sqint.php on line 10\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers('three one five')\n// 'one three\
    \ five'\nfunction sort_numbers($numbers) {\n  $numbers_array = explode(' ', $numbers);\n\
    \  $numbers_array = array_map('number_to_numeral', $numbers_array);\n  sort($numbers_array);\n\
    \  $numbers_array = array_map('numeral_to_number', $numbers_array);\n  return\
    \ implode(' ', $numbers_array);\n}\n\nfunction candidate(...$args) {\n    return\
    \ sort_numbers(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\"\
    ) !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"three\"\
    ) !== \"three\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    three five nine\") !== \"three five nine\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"five zero four seven nine eight\") !== \"zero four five\
    \ seven eight nine\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    six five four three two one zero\") !== \"zero one two three four five six\")\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught TypeError: array_map(): Argument #1 ($callback)\
    \ must be a valid callback or null, function \"number_to_numeral\" not found or\
    \ invalid function name in /tmp/tmpqujrb9ih.php:9\nStack trace:\n#0 /tmp/tmpqujrb9ih.php(9):\
    \ array_map()\n#1 /tmp/tmpqujrb9ih.php(16): sort_numbers()\n#2 /tmp/tmpqujrb9ih.php(20):\
    \ candidate()\n#3 /tmp/tmpqujrb9ih.php(27): test()\n#4 {main}\n  thrown in /tmp/tmpqujrb9ih.php\
    \ on line 9\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers('three one five')\n// 'one three\
    \ five'\nfunction sort_numbers($numbers) {\n    $numbers = explode(' ', $numbers);\n\
    \    $numbers = array_map(function($number) {\n        return number_to_int($number);\n\
    \    }, $numbers);\n    sort($numbers);\n    $numbers = array_map(function($number)\
    \ {\n        return int_to_number($number);\n    }, $numbers);\n    return implode('\
    \ ', $numbers);\n}\n\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Error: Call to undefined function number_to_int()\
    \ in /tmp/tmp4n4rvjrt.php:10\nStack trace:\n#0 [internal function]: {closure}()\n\
    #1 /tmp/tmp4n4rvjrt.php(11): array_map()\n#2 /tmp/tmp4n4rvjrt.php(20): sort_numbers()\n\
    #3 /tmp/tmp4n4rvjrt.php(24): candidate()\n#4 /tmp/tmp4n4rvjrt.php(31): test()\n\
    #5 {main}\n  thrown in /tmp/tmp4n4rvjrt.php on line 10\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers('three one five')\n// 'one three\
    \ five'\nfunction sort_numbers($numbers) {\n    $numbers = explode(' ', $numbers);\n\
    \    $numbers = array_map(function($number) {\n        return $number == 'zero'\
    \ ? 0 : $number == 'one' ? 1 : $number == 'two' ? 2 : $number == 'three' ? 3 :\
    \ $number == 'four' ? 4 : $number == 'five' ? 5 : $number == 'six' ? 6 : $number\
    \ == 'seven' ? 7 : $number == 'eight' ? 8 : $number == 'nine' ? 9 : $number;\n\
    \    }, $numbers);\n    sort($numbers);\n    $numbers = array_map(function($number)\
    \ {\n        return $number == 0 ? 'zero' : $number == 1 ? 'one' : $number ==\
    \ 2 ? 'two' : $number == 3 ? 'three' : $number == 4 ? 'four' : $number == 5 ?\
    \ 'five' : $number == 6 ? 'six' : $number == 7 ? 'seven' : $number == 8 ? 'eight'\
    \ : $number == 9 ? 'nine' : $number;\n    }, $numbers);\n    return implode('\
    \ ', $numbers);\n}\n\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Unparenthesized `a ? b : c ? d : e` is not supported.\
    \ Use either `(a ? b : c) ? d : e` or `a ? b : (c ? d : e)` in /tmp/tmpnl9p__10.php\
    \ on line 10\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers('three one five')\n// 'one three\
    \ five'\nfunction sort_numbers($numbers) {\n    $numbers = explode(' ', $numbers);\n\
    \    $numbers = array_map(function($num) {\n        return [\n            'num'\
    \ => $num,\n            'val' => array_search($num, ['zero', 'one', 'two', 'three',\
    \ 'four', 'five', 'six', 'seven', 'eight', 'nine'])\n        ];\n    }, $numbers);\n\
    \    usort($numbers, function($a, $b) {\n        return $a['val'] - $b['val'];\n\
    \    });\n    $numbers = array_map(function($num) {\n        return $num['num'];\n\
    \    }, $numbers);\n    return implode(' ', $numbers);\n}\n\nfunction candidate(...$args)\
    \ {\n    return sort_numbers(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"three\") !== \"three\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"three five nine\") !== \"three five nine\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four seven\
    \ nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers('three one five')\n// 'one three\
    \ five'\nfunction sort_numbers($numbers) {\n    $numbers = explode(' ', $numbers);\n\
    \    $numbers = array_map(function($number) {\n        return number_to_int($number);\n\
    \    }, $numbers);\n    sort($numbers);\n    $numbers = array_map(function($number)\
    \ {\n        return int_to_number($number);\n    }, $numbers);\n    return implode('\
    \ ', $numbers);\n}\n\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Error: Call to undefined function number_to_int()\
    \ in /tmp/tmpg0hzg_r3.php:10\nStack trace:\n#0 [internal function]: {closure}()\n\
    #1 /tmp/tmpg0hzg_r3.php(11): array_map()\n#2 /tmp/tmpg0hzg_r3.php(20): sort_numbers()\n\
    #3 /tmp/tmpg0hzg_r3.php(24): candidate()\n#4 /tmp/tmpg0hzg_r3.php(31): test()\n\
    #5 {main}\n  thrown in /tmp/tmpg0hzg_r3.php on line 10\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers('three one five')\n// 'one three\
    \ five'\nfunction sort_numbers($numbers) {\n  $numbers = explode(' ', $numbers);\n\
    \  $numbers = array_map(function($number) {\n    return number_to_int($number);\n\
    \  }, $numbers);\n  sort($numbers);\n  $numbers = array_map(function($number)\
    \ {\n    return int_to_number($number);\n  }, $numbers);\n  return implode(' ',\
    \ $numbers);\n}\n\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Error: Call to undefined function number_to_int()\
    \ in /tmp/tmpz3bicl5m.php:10\nStack trace:\n#0 [internal function]: {closure}()\n\
    #1 /tmp/tmpz3bicl5m.php(11): array_map()\n#2 /tmp/tmpz3bicl5m.php(20): sort_numbers()\n\
    #3 /tmp/tmpz3bicl5m.php(24): candidate()\n#4 /tmp/tmpz3bicl5m.php(31): test()\n\
    #5 {main}\n  thrown in /tmp/tmpz3bicl5m.php on line 10\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers('three one five')\n// 'one three\
    \ five'\nfunction sort_numbers($numbers) {\n    $numbers = explode(' ', $numbers);\n\
    \    $numbers = array_map(function($number) {\n        switch ($number) {\n  \
    \          case 'zero':\n                return 0;\n            case 'one':\n\
    \                return 1;\n            case 'two':\n                return 2;\n\
    \            case 'three':\n                return 3;\n            case 'four':\n\
    \                return 4;\n            case 'five':\n                return 5;\n\
    \            case 'six':\n                return 6;\n            case 'seven':\n\
    \                return 7;\n            case 'eight':\n                return\
    \ 8;\n            case 'nine':\n                return 9;\n        }\n    }, $numbers);\n\
    \    sort($numbers);\n    $numbers = array_map(function($number) {\n        switch\
    \ ($number) {\n            case 0:\n                return 'zero';\n         \
    \   case 1:\n                return 'one';\n            case 2:\n            \
    \    return 'two';\n            case 3:\n                return 'three';\n   \
    \         case 4:\n                return 'four';\n            case 5:\n     \
    \           return 'five';\n            case 6:\n                return 'six';\n\
    \            case 7:\n                return 'seven';\n            case 8:\n \
    \               return 'eight';\n            case 9:\n                return 'nine';\n\
    \        }\n    }, $numbers);\n    return implode(' ', $numbers);\n}\n\nfunction\
    \ candidate(...$args) {\n    return sort_numbers(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpc47lalgc.php:66\n\
    Stack trace:\n#0 /tmp/tmpc47lalgc.php(73): test()\n#1 {main}\n  thrown in /tmp/tmpc47lalgc.php\
    \ on line 66\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers('three one five')\n// 'one three\
    \ five'\nfunction sort_numbers($numbers) {\n  $numbers = explode(' ', $numbers);\n\
    \  $numbers = array_map(function($number) {\n    return convert_number($number);\n\
    \  }, $numbers);\n  sort($numbers);\n  $numbers = array_map(function($number)\
    \ {\n    return convert_number($number);\n  }, $numbers);\n  return implode('\
    \ ', $numbers);\n}\n\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Error: Call to undefined function convert_number()\
    \ in /tmp/tmph9ley88d.php:10\nStack trace:\n#0 [internal function]: {closure}()\n\
    #1 /tmp/tmph9ley88d.php(11): array_map()\n#2 /tmp/tmph9ley88d.php(20): sort_numbers()\n\
    #3 /tmp/tmph9ley88d.php(24): candidate()\n#4 /tmp/tmph9ley88d.php(31): test()\n\
    #5 {main}\n  thrown in /tmp/tmph9ley88d.php on line 10\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers('three one five')\n// 'one three\
    \ five'\nfunction sort_numbers($numbers) {\n    $numbers = explode(' ', $numbers);\n\
    \    $numbers = array_map(function($number) {\n        return [\n            'number'\
    \ => $number,\n            'value' => get_number_value($number)\n        ];\n\
    \    }, $numbers);\n    usort($numbers, function($a, $b) {\n        return $a['value']\
    \ - $b['value'];\n    });\n    $numbers = array_map(function($number) {\n    \
    \    return $number['number'];\n    }, $numbers);\n    return implode(' ', $numbers);\n\
    }\n\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Error: Call to undefined function get_number_value()\
    \ in /tmp/tmpt_0mzh5e.php:12\nStack trace:\n#0 [internal function]: {closure}()\n\
    #1 /tmp/tmpt_0mzh5e.php(14): array_map()\n#2 /tmp/tmpt_0mzh5e.php(25): sort_numbers()\n\
    #3 /tmp/tmpt_0mzh5e.php(29): candidate()\n#4 /tmp/tmpt_0mzh5e.php(36): test()\n\
    #5 {main}\n  thrown in /tmp/tmpt_0mzh5e.php on line 12\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers('three one five')\n// 'one three\
    \ five'\nfunction sort_numbers($numbers) {\n    $numbers = explode(' ', $numbers);\n\
    \    $numbers = array_map(function($number) {\n        return number_to_numeral($number);\n\
    \    }, $numbers);\n    sort($numbers);\n    $numbers = array_map(function($number)\
    \ {\n        return numeral_to_number($number);\n    }, $numbers);\n    return\
    \ implode(' ', $numbers);\n}\n\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Error: Call to undefined function number_to_numeral()\
    \ in /tmp/tmpwxd084v7.php:10\nStack trace:\n#0 [internal function]: {closure}()\n\
    #1 /tmp/tmpwxd084v7.php(11): array_map()\n#2 /tmp/tmpwxd084v7.php(20): sort_numbers()\n\
    #3 /tmp/tmpwxd084v7.php(24): candidate()\n#4 /tmp/tmpwxd084v7.php(31): test()\n\
    #5 {main}\n  thrown in /tmp/tmpwxd084v7.php on line 10\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers('three one five')\n// 'one three\
    \ five'\nfunction sort_numbers($numbers) {\n    $numbers = explode(' ', $numbers);\n\
    \    $numbers = array_map(function($number) {\n        switch ($number) {\n  \
    \          case 'zero':\n                return 0;\n            case 'one':\n\
    \                return 1;\n            case 'two':\n                return 2;\n\
    \            case 'three':\n                return 3;\n            case 'four':\n\
    \                return 4;\n            case 'five':\n                return 5;\n\
    \            case 'six':\n                return 6;\n            case 'seven':\n\
    \                return 7;\n            case 'eight':\n                return\
    \ 8;\n            case 'nine':\n                return 9;\n        }\n    }, $numbers);\n\
    \    sort($numbers);\n    $numbers = array_map(function($number) {\n        switch\
    \ ($number) {\n            case 0:\n                return 'zero';\n         \
    \   case 1:\n                return 'one';\n            case 2:\n            \
    \    return 'two';\n            case 3:\n                return 'three';\n   \
    \         case 4:\n                return 'four';\n            case 5:\n     \
    \           return 'five';\n            case 6:\n                return 'six';\n\
    \            case 7:\n                return 'seven';\n            case 8:\n \
    \               return 'eight';\n            case 9:\n                return 'nine';\n\
    \        }\n    }, $numbers);\n    return implode(' ', $numbers);\n}\n\nfunction\
    \ candidate(...$args) {\n    return sort_numbers(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpv244vhbz.php:66\n\
    Stack trace:\n#0 /tmp/tmpv244vhbz.php(73): test()\n#1 {main}\n  thrown in /tmp/tmpv244vhbz.php\
    \ on line 66\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers('three one five')\n// 'one three\
    \ five'\nfunction sort_numbers($numbers) {\n    $numbers = explode(' ', $numbers);\n\
    \    $numbers = array_map(function($number) {\n        return number_to_numeral($number);\n\
    \    }, $numbers);\n    sort($numbers);\n    $numbers = array_map(function($number)\
    \ {\n        return numeral_to_number($number);\n    }, $numbers);\n    return\
    \ implode(' ', $numbers);\n}\n\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Error: Call to undefined function number_to_numeral()\
    \ in /tmp/tmp4zilhboy.php:10\nStack trace:\n#0 [internal function]: {closure}()\n\
    #1 /tmp/tmp4zilhboy.php(11): array_map()\n#2 /tmp/tmp4zilhboy.php(20): sort_numbers()\n\
    #3 /tmp/tmp4zilhboy.php(24): candidate()\n#4 /tmp/tmp4zilhboy.php(31): test()\n\
    #5 {main}\n  thrown in /tmp/tmp4zilhboy.php on line 10\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers('three one five')\n// 'one three\
    \ five'\nfunction sort_numbers($numbers) {\n  $numbers = explode(' ', $numbers);\n\
    \  $numbers = array_map(function($number) {\n    return [\n      'number' => $number,\n\
    \      'value' => array_search($number, ['zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight', 'nine'])\n    ];\n  }, $numbers);\n  usort($numbers,\
    \ function($a, $b) {\n    return $a['value'] - $b['value'];\n  });\n  $numbers\
    \ = array_map(function($number) {\n    return $number['number'];\n  }, $numbers);\n\
    \  return implode(' ', $numbers);\n}\n\nfunction candidate(...$args) {\n    return\
    \ sort_numbers(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\"\
    ) !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"three\"\
    ) !== \"three\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    three five nine\") !== \"three five nine\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"five zero four seven nine eight\") !== \"zero four five\
    \ seven eight nine\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    six five four three two one zero\") !== \"zero one two three four five six\")\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers('three one five')\n// 'one three\
    \ five'\nfunction sort_numbers($numbers) {\n  $numbers = explode(' ', $numbers);\n\
    \  $numbers = array_map(function($number) {\n    return array_search($number,\
    \ ['zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine']);\n\
    \  }, $numbers);\n  sort($numbers);\n  $numbers = array_map(function($number)\
    \ {\n    return ['zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight', 'nine'][$number];\n  }, $numbers);\n  return implode(' ', $numbers);\n\
    }\n\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp5k4snaqr.php:24\n\
    Stack trace:\n#0 /tmp/tmp5k4snaqr.php(31): test()\n#1 {main}\n  thrown in /tmp/tmp5k4snaqr.php\
    \ on line 24\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers('three one five')\n// 'one three\
    \ five'\nfunction sort_numbers($numbers) {\n  $number_map = array(\n    'zero'\
    \ => 0,\n    'one' => 1,\n    'two' => 2,\n    'three' => 3,\n    'four' => 4,\n\
    \    'five' => 5,\n    'six' => 6,\n    'seven' => 7,\n    'eight' => 8,\n   \
    \ 'nine' => 9\n  );\n  $numbers = explode(' ', $numbers);\n  $numbers = array_map(function($number)\
    \ use ($number_map) {\n    return $number_map[$number];\n  }, $numbers);\n  sort($numbers);\n\
    \  $numbers = array_map(function($number) use ($number_map) {\n    return array_search($number,\
    \ $number_map);\n  }, $numbers);\n  return implode(' ', $numbers);\n}\n\nfunction\
    \ candidate(...$args) {\n    return sort_numbers(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Warning:  Undefined array key \"\" in /tmp/tmpabttac_g.php on line\
    \ 22\nPHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpabttac_g.php:36\n\
    Stack trace:\n#0 /tmp/tmpabttac_g.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpabttac_g.php\
    \ on line 36\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers('three one five')\n// 'one three\
    \ five'\nfunction sort_numbers($numbers) {\n    $numbers = explode(' ', $numbers);\n\
    \    $numbers = array_map(function($number) {\n        return number_to_numeral($number);\n\
    \    }, $numbers);\n    sort($numbers);\n    $numbers = array_map(function($number)\
    \ {\n        return numeral_to_number($number);\n    }, $numbers);\n    return\
    \ implode(' ', $numbers);\n}\n\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Error: Call to undefined function number_to_numeral()\
    \ in /tmp/tmp6etb5wms.php:10\nStack trace:\n#0 [internal function]: {closure}()\n\
    #1 /tmp/tmp6etb5wms.php(11): array_map()\n#2 /tmp/tmp6etb5wms.php(20): sort_numbers()\n\
    #3 /tmp/tmp6etb5wms.php(24): candidate()\n#4 /tmp/tmp6etb5wms.php(31): test()\n\
    #5 {main}\n  thrown in /tmp/tmp6etb5wms.php on line 10\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers('three one five')\n// 'one three\
    \ five'\nfunction sort_numbers($numbers) {\n    $numbers = explode(' ', $numbers);\n\
    \    $numbers = array_map(function($number) {\n        return array_search($number,\
    \ ['zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine']);\n\
    \    }, $numbers);\n    sort($numbers);\n    $numbers = array_map(function($number)\
    \ {\n        return ['zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight', 'nine'][$number];\n    }, $numbers);\n    return implode(' ', $numbers);\n\
    }\n\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpoqlt2syi.php:24\n\
    Stack trace:\n#0 /tmp/tmpoqlt2syi.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpoqlt2syi.php\
    \ on line 24\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers('three one five')\n// 'one three\
    \ five'\nfunction sort_numbers($numbers) {\n    $numbers = explode(' ', $numbers);\n\
    \    $numbers = array_map(function($number) {\n        return number_to_int($number);\n\
    \    }, $numbers);\n    sort($numbers);\n    $numbers = array_map(function($number)\
    \ {\n        return int_to_number($number);\n    }, $numbers);\n    return implode('\
    \ ', $numbers);\n}\n\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Error: Call to undefined function number_to_int()\
    \ in /tmp/tmp0h_27_e9.php:10\nStack trace:\n#0 [internal function]: {closure}()\n\
    #1 /tmp/tmp0h_27_e9.php(11): array_map()\n#2 /tmp/tmp0h_27_e9.php(20): sort_numbers()\n\
    #3 /tmp/tmp0h_27_e9.php(24): candidate()\n#4 /tmp/tmp0h_27_e9.php(31): test()\n\
    #5 {main}\n  thrown in /tmp/tmp0h_27_e9.php on line 10\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers('three one five')\n// 'one three\
    \ five'\nfunction sort_numbers($numbers) {\n    $numbers = explode(' ', $numbers);\n\
    \    $numbers = array_map(function($number) {\n        return array_search($number,\
    \ ['zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine']);\n\
    \    }, $numbers);\n    sort($numbers);\n    $numbers = array_map(function($number)\
    \ {\n        return ['zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight', 'nine'][$number];\n    }, $numbers);\n    return implode(' ', $numbers);\n\
    }\n\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmphxagn_vx.php:24\n\
    Stack trace:\n#0 /tmp/tmphxagn_vx.php(31): test()\n#1 {main}\n  thrown in /tmp/tmphxagn_vx.php\
    \ on line 24\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers('three one five')\n// 'one three\
    \ five'\nfunction sort_numbers($numbers) {\n    $numbers = explode(' ', $numbers);\n\
    \    $numbers = array_map(function($number) {\n        return number_to_digit($number);\n\
    \    }, $numbers);\n    sort($numbers);\n    $numbers = array_map(function($number)\
    \ {\n        return digit_to_number($number);\n    }, $numbers);\n    return implode('\
    \ ', $numbers);\n}\n\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Error: Call to undefined function number_to_digit()\
    \ in /tmp/tmpie082ts8.php:10\nStack trace:\n#0 [internal function]: {closure}()\n\
    #1 /tmp/tmpie082ts8.php(11): array_map()\n#2 /tmp/tmpie082ts8.php(20): sort_numbers()\n\
    #3 /tmp/tmpie082ts8.php(24): candidate()\n#4 /tmp/tmpie082ts8.php(31): test()\n\
    #5 {main}\n  thrown in /tmp/tmpie082ts8.php on line 10\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers('three one five')\n// 'one three\
    \ five'\nfunction sort_numbers($numbers) {\n\t$numbers = explode(' ', $numbers);\n\
    \t$numbers = array_map(function($number) {\n\t\treturn array_search($number, ['zero',\
    \ 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine']);\n\t\
    }, $numbers);\n\tsort($numbers);\n\t$numbers = array_map(function($number) {\n\
    \t\treturn ['zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight',\
    \ 'nine'][$number];\n\t}, $numbers);\n\treturn implode(' ', $numbers);\n}\n\n\
    function candidate(...$args) {\n    return sort_numbers(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp73c9xl8i.php:24\n\
    Stack trace:\n#0 /tmp/tmp73c9xl8i.php(31): test()\n#1 {main}\n  thrown in /tmp/tmp73c9xl8i.php\
    \ on line 24\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers('three one five')\n// 'one three\
    \ five'\nfunction sort_numbers($numbers) {\n    $numbers = explode(' ', $numbers);\n\
    \    $numbers = array_map(function($number) {\n        return strlen($number);\n\
    \    }, $numbers);\n    sort($numbers);\n    return implode(' ', $numbers);\n\
    }\n\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpaumsux1b.php:21\n\
    Stack trace:\n#0 /tmp/tmpaumsux1b.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpaumsux1b.php\
    \ on line 21\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers('three one five')\n// 'one three\
    \ five'\nfunction sort_numbers($numbers) {\n    $numbers = explode(' ', $numbers);\n\
    \    $numbers = array_map(function($number) {\n        return number_to_digit($number);\n\
    \    }, $numbers);\n    sort($numbers);\n    $numbers = array_map(function($number)\
    \ {\n        return digit_to_number($number);\n    }, $numbers);\n    return implode('\
    \ ', $numbers);\n}\n\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Error: Call to undefined function number_to_digit()\
    \ in /tmp/tmp05ag683g.php:10\nStack trace:\n#0 [internal function]: {closure}()\n\
    #1 /tmp/tmp05ag683g.php(11): array_map()\n#2 /tmp/tmp05ag683g.php(20): sort_numbers()\n\
    #3 /tmp/tmp05ag683g.php(24): candidate()\n#4 /tmp/tmp05ag683g.php(31): test()\n\
    #5 {main}\n  thrown in /tmp/tmp05ag683g.php on line 10\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers('three one five')\n// 'one three\
    \ five'\nfunction sort_numbers($numbers) {\n    $numbers = explode(' ', $numbers);\n\
    \    $numbers = array_map(function($number) {\n        return number_to_int($number);\n\
    \    }, $numbers);\n    sort($numbers);\n    $numbers = array_map(function($number)\
    \ {\n        return int_to_number($number);\n    }, $numbers);\n    return implode('\
    \ ', $numbers);\n}\n\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Error: Call to undefined function number_to_int()\
    \ in /tmp/tmp5fhms92_.php:10\nStack trace:\n#0 [internal function]: {closure}()\n\
    #1 /tmp/tmp5fhms92_.php(11): array_map()\n#2 /tmp/tmp5fhms92_.php(20): sort_numbers()\n\
    #3 /tmp/tmp5fhms92_.php(24): candidate()\n#4 /tmp/tmp5fhms92_.php(31): test()\n\
    #5 {main}\n  thrown in /tmp/tmp5fhms92_.php on line 10\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers('three one five')\n// 'one three\
    \ five'\nfunction sort_numbers($numbers) {\n  $numbers = explode(' ', $numbers);\n\
    \  $numbers = array_map(function($number) {\n    return number_to_int($number);\n\
    \  }, $numbers);\n  sort($numbers);\n  $numbers = array_map(function($number)\
    \ {\n    return int_to_number($number);\n  }, $numbers);\n  return implode(' ',\
    \ $numbers);\n}\n\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Error: Call to undefined function number_to_int()\
    \ in /tmp/tmp5818k82d.php:10\nStack trace:\n#0 [internal function]: {closure}()\n\
    #1 /tmp/tmp5818k82d.php(11): array_map()\n#2 /tmp/tmp5818k82d.php(20): sort_numbers()\n\
    #3 /tmp/tmp5818k82d.php(24): candidate()\n#4 /tmp/tmp5818k82d.php(31): test()\n\
    #5 {main}\n  thrown in /tmp/tmp5818k82d.php on line 10\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers('three one five')\n// 'one three\
    \ five'\nfunction sort_numbers($numbers) {\n    $numbers = explode(' ', $numbers);\n\
    \    $numbers = array_map(function($number) {\n        return array_search($number,\
    \ ['zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine']);\n\
    \    }, $numbers);\n    sort($numbers);\n    $numbers = array_map(function($number)\
    \ {\n        return ['zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight', 'nine'][$number];\n    }, $numbers);\n    return implode(' ', $numbers);\n\
    }\n\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpg6gwv2_g.php:24\n\
    Stack trace:\n#0 /tmp/tmpg6gwv2_g.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpg6gwv2_g.php\
    \ on line 24\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers('three one five')\n// 'one three\
    \ five'\nfunction sort_numbers($numbers) {\n    $numbers = explode(' ', $numbers);\n\
    \    $numbers = array_map(function($number) {\n        switch ($number) {\n  \
    \          case 'zero':\n                return 0;\n            case 'one':\n\
    \                return 1;\n            case 'two':\n                return 2;\n\
    \            case 'three':\n                return 3;\n            case 'four':\n\
    \                return 4;\n            case 'five':\n                return 5;\n\
    \            case 'six':\n                return 6;\n            case 'seven':\n\
    \                return 7;\n            case 'eight':\n                return\
    \ 8;\n            case 'nine':\n                return 9;\n        }\n    }, $numbers);\n\
    \    sort($numbers);\n    $numbers = array_map(function($number) {\n        switch\
    \ ($number) {\n            case 0:\n                return 'zero';\n         \
    \   case 1:\n                return 'one';\n            case 2:\n            \
    \    return 'two';\n            case 3:\n                return 'three';\n   \
    \         case 4:\n                return 'four';\n            case 5:\n     \
    \           return 'five';\n            case 6:\n                return 'six';\n\
    \            case 7:\n                return 'seven';\n            case 8:\n \
    \               return 'eight';\n            case 9:\n                return 'nine';\n\
    \        }\n    }, $numbers);\n    return implode(' ', $numbers);\n}\n\nfunction\
    \ candidate(...$args) {\n    return sort_numbers(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpzzt8mzwy.php:66\n\
    Stack trace:\n#0 /tmp/tmpzzt8mzwy.php(73): test()\n#1 {main}\n  thrown in /tmp/tmpzzt8mzwy.php\
    \ on line 66\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers('three one five')\n// 'one three\
    \ five'\nfunction sort_numbers($numbers) {\n    $numbers = explode(' ', $numbers);\n\
    \    $numbers = array_map(function($number) {\n        switch ($number) {\n  \
    \          case 'zero':\n                return 0;\n            case 'one':\n\
    \                return 1;\n            case 'two':\n                return 2;\n\
    \            case 'three':\n                return 3;\n            case 'four':\n\
    \                return 4;\n            case 'five':\n                return 5;\n\
    \            case 'six':\n                return 6;\n            case 'seven':\n\
    \                return 7;\n            case 'eight':\n                return\
    \ 8;\n            case 'nine':\n                return 9;\n        }\n    }, $numbers);\n\
    \    sort($numbers);\n    $numbers = array_map(function($number) {\n        switch\
    \ ($number) {\n            case 0:\n                return 'zero';\n         \
    \   case 1:\n                return 'one';\n            case 2:\n            \
    \    return 'two';\n            case 3:\n                return 'three';\n   \
    \         case 4:\n                return 'four';\n            case 5:\n     \
    \           return 'five';\n            case 6:\n                return 'six';\n\
    \            case 7:\n                return 'seven';\n            case 8:\n \
    \               return 'eight';\n            case 9:\n                return 'nine';\n\
    \        }\n    }, $numbers);\n    return implode(' ', $numbers);\n}\n\nfunction\
    \ candidate(...$args) {\n    return sort_numbers(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmphqo8oa9u.php:66\n\
    Stack trace:\n#0 /tmp/tmphqo8oa9u.php(73): test()\n#1 {main}\n  thrown in /tmp/tmphqo8oa9u.php\
    \ on line 66\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers('three one five')\n// 'one three\
    \ five'\nfunction sort_numbers($numbers) {\n  $numbers = explode(' ', $numbers);\n\
    \  $numbers = array_map(function($number) {\n    switch($number) {\n      case\
    \ 'zero':\n        return 0;\n      case 'one':\n        return 1;\n      case\
    \ 'two':\n        return 2;\n      case 'three':\n        return 3;\n      case\
    \ 'four':\n        return 4;\n      case 'five':\n        return 5;\n      case\
    \ 'six':\n        return 6;\n      case 'seven':\n        return 7;\n      case\
    \ 'eight':\n        return 8;\n      case 'nine':\n        return 9;\n    }\n\
    \  }, $numbers);\n  sort($numbers);\n  $numbers = array_map(function($number)\
    \ {\n    switch($number) {\n      case 0:\n        return 'zero';\n      case\
    \ 1:\n        return 'one';\n      case 2:\n        return 'two';\n      case\
    \ 3:\n        return 'three';\n      case 4:\n        return 'four';\n      case\
    \ 5:\n        return 'five';\n      case 6:\n        return 'six';\n      case\
    \ 7:\n        return 'seven';\n      case 8:\n        return 'eight';\n      case\
    \ 9:\n        return 'nine';\n    }\n  }, $numbers);\n  return implode(' ', $numbers);\n\
    }\n\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpw3vywyt9.php:66\n\
    Stack trace:\n#0 /tmp/tmpw3vywyt9.php(73): test()\n#1 {main}\n  thrown in /tmp/tmpw3vywyt9.php\
    \ on line 66\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers('three one five')\n// 'one three\
    \ five'\nfunction sort_numbers($numbers) {\n    $numbers = explode(' ', $numbers);\n\
    \    $numbers = array_map(function($number) {\n        return $number == 'zero'\
    \ ? 0 : $number == 'one' ? 1 : $number == 'two' ? 2 : $number == 'three' ? 3 :\
    \ $number == 'four' ? 4 : $number == 'five' ? 5 : $number == 'six' ? 6 : $number\
    \ == 'seven' ? 7 : $number == 'eight' ? 8 : $number == 'nine' ? 9 : $number;\n\
    \    }, $numbers);\n    sort($numbers);\n    $numbers = array_map(function($number)\
    \ {\n        return $number == 0 ? 'zero' : $number == 1 ? 'one' : $number ==\
    \ 2 ? 'two' : $number == 3 ? 'three' : $number == 4 ? 'four' : $number == 5 ?\
    \ 'five' : $number == 6 ? 'six' : $number == 7 ? 'seven' : $number == 8 ? 'eight'\
    \ : $number == 9 ? 'nine' : $number;\n    }, $numbers);\n    return implode('\
    \ ', $numbers);\n}\n\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Unparenthesized `a ? b : c ? d : e` is not supported.\
    \ Use either `(a ? b : c) ? d : e` or `a ? b : (c ? d : e)` in /tmp/tmp_r50p6qd.php\
    \ on line 10\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers('three one five')\n// 'one three\
    \ five'\nfunction sort_numbers($numbers) {\n    $numbers = explode(' ', $numbers);\n\
    \    $numbers = array_map(function($number) {\n        return array_search($number,\
    \ ['zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine']);\n\
    \    }, $numbers);\n    sort($numbers);\n    $numbers = array_map(function($number)\
    \ {\n        return ['zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight', 'nine'][$number];\n    }, $numbers);\n    return implode(' ', $numbers);\n\
    }\n\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp60yz8xnv.php:24\n\
    Stack trace:\n#0 /tmp/tmp60yz8xnv.php(31): test()\n#1 {main}\n  thrown in /tmp/tmp60yz8xnv.php\
    \ on line 24\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers('three one five')\n// 'one three\
    \ five'\nfunction sort_numbers($numbers) {\n  $numbers = explode(' ', $numbers);\n\
    \  $numbers = array_map(function($number) {\n    return [\n      'number' => $number,\n\
    \      'value' => [\n        'zero' => 0,\n        'one' => 1,\n        'two'\
    \ => 2,\n        'three' => 3,\n        'four' => 4,\n        'five' => 5,\n \
    \       'six' => 6,\n        'seven' => 7,\n        'eight' => 8,\n        'nine'\
    \ => 9,\n      ][$number]\n    ];\n  }, $numbers);\n  usort($numbers, function($a,\
    \ $b) {\n    return $a['value'] - $b['value'];\n  });\n  return implode(' ', array_map(function($number)\
    \ {\n    return $number['number'];\n  }, $numbers));\n}\n\nfunction candidate(...$args)\
    \ {\n    return sort_numbers(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"three\") !== \"three\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"three five nine\") !== \"three five nine\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four seven\
    \ nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Warning:  Undefined array key \"\" in /tmp/tmp6vllyf31.php on line\
    \ 23\n"
  exit_code: 0
  status: OK
- program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers('three one five')\n// 'one three\
    \ five'\nfunction sort_numbers($numbers) {\n    $numbers = explode(' ', $numbers);\n\
    \    $numbers = array_map(function($number) {\n        switch ($number) {\n  \
    \          case 'zero':\n                return 0;\n            case 'one':\n\
    \                return 1;\n            case 'two':\n                return 2;\n\
    \            case 'three':\n                return 3;\n            case 'four':\n\
    \                return 4;\n            case 'five':\n                return 5;\n\
    \            case 'six':\n                return 6;\n            case 'seven':\n\
    \                return 7;\n            case 'eight':\n                return\
    \ 8;\n            case 'nine':\n                return 9;\n        }\n    }, $numbers);\n\
    \    sort($numbers);\n    $numbers = array_map(function($number) {\n        switch\
    \ ($number) {\n            case 0:\n                return 'zero';\n         \
    \   case 1:\n                return 'one';\n            case 2:\n            \
    \    return 'two';\n            case 3:\n                return 'three';\n   \
    \         case 4:\n                return 'four';\n            case 5:\n     \
    \           return 'five';\n            case 6:\n                return 'six';\n\
    \            case 7:\n                return 'seven';\n            case 8:\n \
    \               return 'eight';\n            case 9:\n                return 'nine';\n\
    \        }\n    }, $numbers);\n    return implode(' ', $numbers);\n}\n\nfunction\
    \ candidate(...$args) {\n    return sort_numbers(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpz1pl7vuv.php:66\n\
    Stack trace:\n#0 /tmp/tmpz1pl7vuv.php(73): test()\n#1 {main}\n  thrown in /tmp/tmpz1pl7vuv.php\
    \ on line 66\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers('three one five')\n// 'one three\
    \ five'\nfunction sort_numbers($numbers) {\n    $numbers = explode(' ', $numbers);\n\
    \    $numbers = array_map(function($number) {\n        return number_to_int($number);\n\
    \    }, $numbers);\n    sort($numbers);\n    $numbers = array_map(function($number)\
    \ {\n        return int_to_number($number);\n    }, $numbers);\n    return implode('\
    \ ', $numbers);\n}\n\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Error: Call to undefined function number_to_int()\
    \ in /tmp/tmpz0rkh24o.php:10\nStack trace:\n#0 [internal function]: {closure}()\n\
    #1 /tmp/tmpz0rkh24o.php(11): array_map()\n#2 /tmp/tmpz0rkh24o.php(20): sort_numbers()\n\
    #3 /tmp/tmpz0rkh24o.php(24): candidate()\n#4 /tmp/tmpz0rkh24o.php(31): test()\n\
    #5 {main}\n  thrown in /tmp/tmpz0rkh24o.php on line 10\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers('three one five')\n// 'one three\
    \ five'\nfunction sort_numbers($numbers) {\n    $numbers = explode(' ', $numbers);\n\
    \    $numbers = array_map(function($number) {\n        return number_to_int($number);\n\
    \    }, $numbers);\n    sort($numbers);\n    $numbers = array_map(function($number)\
    \ {\n        return int_to_number($number);\n    }, $numbers);\n    return implode('\
    \ ', $numbers);\n}\n\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Error: Call to undefined function number_to_int()\
    \ in /tmp/tmpdxq4c9s4.php:10\nStack trace:\n#0 [internal function]: {closure}()\n\
    #1 /tmp/tmpdxq4c9s4.php(11): array_map()\n#2 /tmp/tmpdxq4c9s4.php(20): sort_numbers()\n\
    #3 /tmp/tmpdxq4c9s4.php(24): candidate()\n#4 /tmp/tmpdxq4c9s4.php(31): test()\n\
    #5 {main}\n  thrown in /tmp/tmpdxq4c9s4.php on line 10\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers('three one five')\n// 'one three\
    \ five'\nfunction sort_numbers($numbers) {\n    $numbers = explode(' ', $numbers);\n\
    \    $numbers = array_map(function($number) {\n        return number_to_numeral($number);\n\
    \    }, $numbers);\n    sort($numbers);\n    $numbers = array_map(function($number)\
    \ {\n        return numeral_to_number($number);\n    }, $numbers);\n    return\
    \ implode(' ', $numbers);\n}\n\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Error: Call to undefined function number_to_numeral()\
    \ in /tmp/tmpq8n1yhl7.php:10\nStack trace:\n#0 [internal function]: {closure}()\n\
    #1 /tmp/tmpq8n1yhl7.php(11): array_map()\n#2 /tmp/tmpq8n1yhl7.php(20): sort_numbers()\n\
    #3 /tmp/tmpq8n1yhl7.php(24): candidate()\n#4 /tmp/tmpq8n1yhl7.php(31): test()\n\
    #5 {main}\n  thrown in /tmp/tmpq8n1yhl7.php on line 10\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers('three one five')\n// 'one three\
    \ five'\nfunction sort_numbers($numbers) {\n    $numbers = explode(' ', $numbers);\n\
    \    $numbers = array_map(function($number) {\n        return [\n            'number'\
    \ => $number,\n            'value' => [\n                'zero' => 0,\n      \
    \          'one' => 1,\n                'two' => 2,\n                'three' =>\
    \ 3,\n                'four' => 4,\n                'five' => 5,\n           \
    \     'six' => 6,\n                'seven' => 7,\n                'eight' => 8,\n\
    \                'nine' => 9,\n            ][$number]\n        ];\n    }, $numbers);\n\
    \    usort($numbers, function($a, $b) {\n        return $a['value'] - $b['value'];\n\
    \    });\n    return implode(' ', array_map(function($number) {\n        return\
    \ $number['number'];\n    }, $numbers));\n}\n\nfunction candidate(...$args) {\n\
    \    return sort_numbers(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    \") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    three\") !== \"three\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    three five nine\") !== \"three five nine\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"five zero four seven nine eight\") !== \"zero four five\
    \ seven eight nine\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    six five four three two one zero\") !== \"zero one two three four five six\")\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Warning:  Undefined array key \"\" in /tmp/tmps5jy7gzd.php on line\
    \ 23\n"
  exit_code: 0
  status: OK
- program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers('three one five')\n// 'one three\
    \ five'\nfunction sort_numbers($numbers) {\n    $numbers = explode(' ', $numbers);\n\
    \    $numbers = array_map(function($number) {\n        return array_search($number,\
    \ ['zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine']);\n\
    \    }, $numbers);\n    sort($numbers);\n    $numbers = array_map(function($number)\
    \ {\n        return ['zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight', 'nine'][$number];\n    }, $numbers);\n    return implode(' ', $numbers);\n\
    }\n\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmprqvapk3s.php:24\n\
    Stack trace:\n#0 /tmp/tmprqvapk3s.php(31): test()\n#1 {main}\n  thrown in /tmp/tmprqvapk3s.php\
    \ on line 24\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers('three one five')\n// 'one three\
    \ five'\nfunction sort_numbers($numbers) {\n  $numbers_array = explode(' ', $numbers);\n\
    \  $numbers_array = array_map('number_to_int', $numbers_array);\n  sort($numbers_array);\n\
    \  $numbers_array = array_map('int_to_number', $numbers_array);\n  return implode('\
    \ ', $numbers_array);\n}\n\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught TypeError: array_map(): Argument #1 ($callback)\
    \ must be a valid callback or null, function \"number_to_int\" not found or invalid\
    \ function name in /tmp/tmpv7ns_wgr.php:9\nStack trace:\n#0 /tmp/tmpv7ns_wgr.php(9):\
    \ array_map()\n#1 /tmp/tmpv7ns_wgr.php(16): sort_numbers()\n#2 /tmp/tmpv7ns_wgr.php(20):\
    \ candidate()\n#3 /tmp/tmpv7ns_wgr.php(27): test()\n#4 {main}\n  thrown in /tmp/tmpv7ns_wgr.php\
    \ on line 9\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers('three one five')\n// 'one three\
    \ five'\nfunction sort_numbers($numbers) {\n    $numbers = explode(' ', $numbers);\n\
    \    $numbers = array_map(function($number) {\n        return array_search($number,\
    \ ['zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine']);\n\
    \    }, $numbers);\n    sort($numbers);\n    $numbers = array_map(function($number)\
    \ {\n        return ['zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight', 'nine'][$number];\n    }, $numbers);\n    return implode(' ', $numbers);\n\
    }\n\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpkzh1sepg.php:24\n\
    Stack trace:\n#0 /tmp/tmpkzh1sepg.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpkzh1sepg.php\
    \ on line 24\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers('three one five')\n// 'one three\
    \ five'\nfunction sort_numbers($numbers) {\n    $numbers = explode(' ', $numbers);\n\
    \    $numbers = array_map(function($number) {\n        return number_to_numeral($number);\n\
    \    }, $numbers);\n    sort($numbers);\n    $numbers = array_map(function($number)\
    \ {\n        return numeral_to_number($number);\n    }, $numbers);\n    return\
    \ implode(' ', $numbers);\n}\n\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Error: Call to undefined function number_to_numeral()\
    \ in /tmp/tmpjx_ub9ml.php:10\nStack trace:\n#0 [internal function]: {closure}()\n\
    #1 /tmp/tmpjx_ub9ml.php(11): array_map()\n#2 /tmp/tmpjx_ub9ml.php(20): sort_numbers()\n\
    #3 /tmp/tmpjx_ub9ml.php(24): candidate()\n#4 /tmp/tmpjx_ub9ml.php(31): test()\n\
    #5 {main}\n  thrown in /tmp/tmpjx_ub9ml.php on line 10\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers('three one five')\n// 'one three\
    \ five'\nfunction sort_numbers($numbers) {\n    $numbers = explode(' ', $numbers);\n\
    \    $numbers = array_map(function($number) {\n        return [\n            'number'\
    \ => $number,\n            'value' => array_search($number, ['zero', 'one', 'two',\
    \ 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine'])\n        ];\n   \
    \ }, $numbers);\n    usort($numbers, function($a, $b) {\n        return $a['value']\
    \ - $b['value'];\n    });\n    $numbers = array_map(function($number) {\n    \
    \    return $number['number'];\n    }, $numbers);\n    return implode(' ', $numbers);\n\
    }\n\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers('three one five')\n// 'one three\
    \ five'\nfunction sort_numbers($numbers) {\n  $numbers = explode(' ', $numbers);\n\
    \  $numbers = array_map(function($number) {\n    return array_search($number,\
    \ ['zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine']);\n\
    \  }, $numbers);\n  sort($numbers);\n  $numbers = array_map(function($number)\
    \ {\n    return ['zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight', 'nine'][$number];\n  }, $numbers);\n  return implode(' ', $numbers);\n\
    }\n\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmprf8bwfkh.php:24\n\
    Stack trace:\n#0 /tmp/tmprf8bwfkh.php(31): test()\n#1 {main}\n  thrown in /tmp/tmprf8bwfkh.php\
    \ on line 24\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers('three one five')\n// 'one three\
    \ five'\nfunction sort_numbers($numbers) {\n  $number_map = array(\n    'zero'\
    \ => 0,\n    'one' => 1,\n    'two' => 2,\n    'three' => 3,\n    'four' => 4,\n\
    \    'five' => 5,\n    'six' => 6,\n    'seven' => 7,\n    'eight' => 8,\n   \
    \ 'nine' => 9\n  );\n  $numbers = explode(' ', $numbers);\n  $numbers = array_map(function($number)\
    \ use ($number_map) {\n    return $number_map[$number];\n  }, $numbers);\n  sort($numbers);\n\
    \  $numbers = array_map(function($number) use ($number_map) {\n    return array_search($number,\
    \ $number_map);\n  }, $numbers);\n  return implode(' ', $numbers);\n}\n\nfunction\
    \ candidate(...$args) {\n    return sort_numbers(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Warning:  Undefined array key \"\" in /tmp/tmp9az41ivj.php on line\
    \ 22\nPHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp9az41ivj.php:36\n\
    Stack trace:\n#0 /tmp/tmp9az41ivj.php(43): test()\n#1 {main}\n  thrown in /tmp/tmp9az41ivj.php\
    \ on line 36\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers('three one five')\n// 'one three\
    \ five'\nfunction sort_numbers($numbers) {\n    $numbers = explode(' ', $numbers);\n\
    \    $numbers = array_map(function($number) {\n        return [\n            'value'\
    \ => $number,\n            'number' => [\n                'zero' => 0,\n     \
    \           'one' => 1,\n                'two' => 2,\n                'three'\
    \ => 3,\n                'four' => 4,\n                'five' => 5,\n        \
    \        'six' => 6,\n                'seven' => 7,\n                'eight' =>\
    \ 8,\n                'nine' => 9,\n            ][$number]\n        ];\n    },\
    \ $numbers);\n    usort($numbers, function($a, $b) {\n        return $a['number']\
    \ - $b['number'];\n    });\n    return implode(' ', array_map(function($number)\
    \ {\n        return $number['value'];\n    }, $numbers));\n}\n\nfunction candidate(...$args)\
    \ {\n    return sort_numbers(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"three\") !== \"three\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"three five nine\") !== \"three five nine\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four seven\
    \ nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Warning:  Undefined array key \"\" in /tmp/tmpqvojjt9y.php on line\
    \ 23\n"
  exit_code: 0
  status: OK
- program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers('three one five')\n// 'one three\
    \ five'\nfunction sort_numbers($numbers) {\n  $numbers = explode(' ', $numbers);\n\
    \  $numbers = array_map(function($number) {\n    return $number == 'zero' ? 0\
    \ : $number == 'one' ? 1 : $number == 'two' ? 2 : $number == 'three' ? 3 : $number\
    \ == 'four' ? 4 : $number == 'five' ? 5 : $number == 'six' ? 6 : $number == 'seven'\
    \ ? 7 : $number == 'eight' ? 8 : $number == 'nine' ? 9 : $number;\n  }, $numbers);\n\
    \  sort($numbers);\n  $numbers = array_map(function($number) {\n    return $number\
    \ == 0 ? 'zero' : $number == 1 ? 'one' : $number == 2 ? 'two' : $number == 3 ?\
    \ 'three' : $number == 4 ? 'four' : $number == 5 ? 'five' : $number == 6 ? 'six'\
    \ : $number == 7 ? 'seven' : $number == 8 ? 'eight' : $number == 9 ? 'nine' :\
    \ $number;\n  }, $numbers);\n  return implode(' ', $numbers);\n}\n\nfunction candidate(...$args)\
    \ {\n    return sort_numbers(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(\"three\") !== \"three\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"three five nine\") !== \"three five nine\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four seven\
    \ nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Unparenthesized `a ? b : c ? d : e` is not supported.\
    \ Use either `(a ? b : c) ? d : e` or `a ? b : (c ? d : e)` in /tmp/tmp5zhbwne1.php\
    \ on line 10\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers('three one five')\n// 'one three\
    \ five'\nfunction sort_numbers($numbers) {\n    $numbers = explode(' ', $numbers);\n\
    \    $numbers = array_map(function($number) {\n        return array_search($number,\
    \ ['zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine']);\n\
    \    }, $numbers);\n    sort($numbers);\n    $numbers = array_map(function($number)\
    \ {\n        return ['zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight', 'nine'][$number];\n    }, $numbers);\n    return implode(' ', $numbers);\n\
    }\n\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp5nvckwc5.php:24\n\
    Stack trace:\n#0 /tmp/tmp5nvckwc5.php(31): test()\n#1 {main}\n  thrown in /tmp/tmp5nvckwc5.php\
    \ on line 24\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers('three one five')\n// 'one three\
    \ five'\nfunction sort_numbers($numbers) {\n    $numbers = explode(' ', $numbers);\n\
    \    $numbers = array_map(function($number) {\n        return array_search($number,\
    \ ['zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine']);\n\
    \    }, $numbers);\n    sort($numbers);\n    $numbers = array_map(function($number)\
    \ {\n        return ['zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight', 'nine'][$number];\n    }, $numbers);\n    return implode(' ', $numbers);\n\
    }\n\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpv9iwx32j.php:24\n\
    Stack trace:\n#0 /tmp/tmpv9iwx32j.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpv9iwx32j.php\
    \ on line 24\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers('three one five')\n// 'one three\
    \ five'\nfunction sort_numbers($numbers) {\n    $numbers_array = explode(' ',\
    \ $numbers);\n    $numbers_array = array_map('number_to_int', $numbers_array);\n\
    \    sort($numbers_array);\n    $numbers_array = array_map('int_to_number', $numbers_array);\n\
    \    return implode(' ', $numbers_array);\n}\n\nfunction candidate(...$args) {\n\
    \    return sort_numbers(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    \") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    three\") !== \"three\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    three five nine\") !== \"three five nine\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"five zero four seven nine eight\") !== \"zero four five\
    \ seven eight nine\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    six five four three two one zero\") !== \"zero one two three four five six\")\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught TypeError: array_map(): Argument #1 ($callback)\
    \ must be a valid callback or null, function \"number_to_int\" not found or invalid\
    \ function name in /tmp/tmpoqn43m7l.php:9\nStack trace:\n#0 /tmp/tmpoqn43m7l.php(9):\
    \ array_map()\n#1 /tmp/tmpoqn43m7l.php(16): sort_numbers()\n#2 /tmp/tmpoqn43m7l.php(20):\
    \ candidate()\n#3 /tmp/tmpoqn43m7l.php(27): test()\n#4 {main}\n  thrown in /tmp/tmpoqn43m7l.php\
    \ on line 9\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers('three one five')\n// 'one three\
    \ five'\nfunction sort_numbers($numbers) {\n\t// TODO: Implement me!\n}\n\nfunction\
    \ candidate(...$args) {\n    return sort_numbers(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp9zetlvvp.php:16\n\
    Stack trace:\n#0 /tmp/tmp9zetlvvp.php(23): test()\n#1 {main}\n  thrown in /tmp/tmp9zetlvvp.php\
    \ on line 16\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers('three one five')\n// 'one three\
    \ five'\nfunction sort_numbers($numbers) {\n    $numbers = explode(' ', $numbers);\n\
    \    $numbers = array_map(function($number) {\n        return $number == 'zero'\
    \ ? 0 : $number == 'one' ? 1 : $number == 'two' ? 2 : $number == 'three' ? 3 :\
    \ $number == 'four' ? 4 : $number == 'five' ? 5 : $number == 'six' ? 6 : $number\
    \ == 'seven' ? 7 : $number == 'eight' ? 8 : $number == 'nine' ? 9 : $number;\n\
    \    }, $numbers);\n    sort($numbers);\n    $numbers = array_map(function($number)\
    \ {\n        return $number == 0 ? 'zero' : $number == 1 ? 'one' : $number ==\
    \ 2 ? 'two' : $number == 3 ? 'three' : $number == 4 ? 'four' : $number == 5 ?\
    \ 'five' : $number == 6 ? 'six' : $number == 7 ? 'seven' : $number == 8 ? 'eight'\
    \ : $number == 9 ? 'nine' : $number;\n    }, $numbers);\n    return implode('\
    \ ', $numbers);\n}\n\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Unparenthesized `a ? b : c ? d : e` is not supported.\
    \ Use either `(a ? b : c) ? d : e` or `a ? b : (c ? d : e)` in /tmp/tmpns6mbs9x.php\
    \ on line 10\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers('three one five')\n// 'one three\
    \ five'\nfunction sort_numbers($numbers) {\n    $numbers = explode(' ', $numbers);\n\
    \    $numbers = array_map(function($number) {\n        switch ($number) {\n  \
    \          case 'zero':\n                return 0;\n            case 'one':\n\
    \                return 1;\n            case 'two':\n                return 2;\n\
    \            case 'three':\n                return 3;\n            case 'four':\n\
    \                return 4;\n            case 'five':\n                return 5;\n\
    \            case 'six':\n                return 6;\n            case 'seven':\n\
    \                return 7;\n            case 'eight':\n                return\
    \ 8;\n            case 'nine':\n                return 9;\n        }\n    }, $numbers);\n\
    \    sort($numbers);\n    $numbers = array_map(function($number) {\n        switch\
    \ ($number) {\n            case 0:\n                return 'zero';\n         \
    \   case 1:\n                return 'one';\n            case 2:\n            \
    \    return 'two';\n            case 3:\n                return 'three';\n   \
    \         case 4:\n                return 'four';\n            case 5:\n     \
    \           return 'five';\n            case 6:\n                return 'six';\n\
    \            case 7:\n                return 'seven';\n            case 8:\n \
    \               return 'eight';\n            case 9:\n                return 'nine';\n\
    \        }\n    }, $numbers);\n    return implode(' ', $numbers);\n}\n\nfunction\
    \ candidate(...$args) {\n    return sort_numbers(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpx46ru2nn.php:66\n\
    Stack trace:\n#0 /tmp/tmpx46ru2nn.php(73): test()\n#1 {main}\n  thrown in /tmp/tmpx46ru2nn.php\
    \ on line 66\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers('three one five')\n// 'one three\
    \ five'\nfunction sort_numbers($numbers) {\n    $numbers = explode(' ', $numbers);\n\
    \    $numbers = array_map(function($number) {\n        return array_search($number,\
    \ ['zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine']);\n\
    \    }, $numbers);\n    sort($numbers);\n    $numbers = array_map(function($number)\
    \ {\n        return ['zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight', 'nine'][$number];\n    }, $numbers);\n    return implode(' ', $numbers);\n\
    }\n\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmplq3oivd7.php:24\n\
    Stack trace:\n#0 /tmp/tmplq3oivd7.php(31): test()\n#1 {main}\n  thrown in /tmp/tmplq3oivd7.php\
    \ on line 24\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers('three one five')\n// 'one three\
    \ five'\nfunction sort_numbers($numbers) {\n  $numbers = explode(' ', $numbers);\n\
    \  $numbers = array_map(function($number) {\n    switch ($number) {\n      case\
    \ 'zero':\n        return 0;\n      case 'one':\n        return 1;\n      case\
    \ 'two':\n        return 2;\n      case 'three':\n        return 3;\n      case\
    \ 'four':\n        return 4;\n      case 'five':\n        return 5;\n      case\
    \ 'six':\n        return 6;\n      case 'seven':\n        return 7;\n      case\
    \ 'eight':\n        return 8;\n      case 'nine':\n        return 9;\n    }\n\
    \  }, $numbers);\n  sort($numbers);\n  $numbers = array_map(function($number)\
    \ {\n    switch ($number) {\n      case 0:\n        return 'zero';\n      case\
    \ 1:\n        return 'one';\n      case 2:\n        return 'two';\n      case\
    \ 3:\n        return 'three';\n      case 4:\n        return 'four';\n      case\
    \ 5:\n        return 'five';\n      case 6:\n        return 'six';\n      case\
    \ 7:\n        return 'seven';\n      case 8:\n        return 'eight';\n      case\
    \ 9:\n        return 'nine';\n    }\n  }, $numbers);\n  return implode(' ', $numbers);\n\
    }\n\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpznvpvmaj.php:66\n\
    Stack trace:\n#0 /tmp/tmpznvpvmaj.php(73): test()\n#1 {main}\n  thrown in /tmp/tmpznvpvmaj.php\
    \ on line 66\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers('three one five')\n// 'one three\
    \ five'\nfunction sort_numbers($numbers) {\n    $numbers = explode(' ', $numbers);\n\
    \    $numbers_map = array(\n        'zero' => 0,\n        'one' => 1,\n      \
    \  'two' => 2,\n        'three' => 3,\n        'four' => 4,\n        'five' =>\
    \ 5,\n        'six' => 6,\n        'seven' => 7,\n        'eight' => 8,\n    \
    \    'nine' => 9\n    );\n    $numbers_map_reverse = array_flip($numbers_map);\n\
    \    $numbers_sorted = array();\n    foreach ($numbers as $number) {\n       \
    \ $numbers_sorted[] = $numbers_map[$number];\n    }\n    sort($numbers_sorted);\n\
    \    foreach ($numbers_sorted as $key => $number) {\n        $numbers_sorted[$key]\
    \ = $numbers_map_reverse[$number];\n    }\n    return implode(' ', $numbers_sorted);\n\
    }\n\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Warning:  Undefined array key \"\" in /tmp/tmpj3h5e5zq.php on line\
    \ 24\nPHP Warning:  Undefined array key \"\" in /tmp/tmpj3h5e5zq.php on line 28\n"
  exit_code: 0
  status: OK
- program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers('three one five')\n// 'one three\
    \ five'\nfunction sort_numbers($numbers) {\n    $numbers = explode(' ', $numbers);\n\
    \    $numbers = array_map(function($number) {\n        return number_to_numeral($number);\n\
    \    }, $numbers);\n    sort($numbers);\n    $numbers = array_map(function($number)\
    \ {\n        return numeral_to_number($number);\n    }, $numbers);\n    return\
    \ implode(' ', $numbers);\n}\n\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Error: Call to undefined function number_to_numeral()\
    \ in /tmp/tmp_irfkbgi.php:10\nStack trace:\n#0 [internal function]: {closure}()\n\
    #1 /tmp/tmp_irfkbgi.php(11): array_map()\n#2 /tmp/tmp_irfkbgi.php(20): sort_numbers()\n\
    #3 /tmp/tmp_irfkbgi.php(24): candidate()\n#4 /tmp/tmp_irfkbgi.php(31): test()\n\
    #5 {main}\n  thrown in /tmp/tmp_irfkbgi.php on line 10\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers('three one five')\n// 'one three\
    \ five'\nfunction sort_numbers($numbers) {\n  $numbers = explode(' ', $numbers);\n\
    \  $numbers = array_map(function($number) {\n    switch ($number) {\n      case\
    \ 'zero':\n        return 0;\n      case 'one':\n        return 1;\n      case\
    \ 'two':\n        return 2;\n      case 'three':\n        return 3;\n      case\
    \ 'four':\n        return 4;\n      case 'five':\n        return 5;\n      case\
    \ 'six':\n        return 6;\n      case 'seven':\n        return 7;\n      case\
    \ 'eight':\n        return 8;\n      case 'nine':\n        return 9;\n    }\n\
    \  }, $numbers);\n  sort($numbers);\n  $numbers = array_map(function($number)\
    \ {\n    switch ($number) {\n      case 0:\n        return 'zero';\n      case\
    \ 1:\n        return 'one';\n      case 2:\n        return 'two';\n      case\
    \ 3:\n        return 'three';\n      case 4:\n        return 'four';\n      case\
    \ 5:\n        return 'five';\n      case 6:\n        return 'six';\n      case\
    \ 7:\n        return 'seven';\n      case 8:\n        return 'eight';\n      case\
    \ 9:\n        return 'nine';\n    }\n  }, $numbers);\n  return implode(' ', $numbers);\n\
    }\n\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpb8ebashk.php:66\n\
    Stack trace:\n#0 /tmp/tmpb8ebashk.php(73): test()\n#1 {main}\n  thrown in /tmp/tmpb8ebashk.php\
    \ on line 66\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers('three one five')\n// 'one three\
    \ five'\nfunction sort_numbers($numbers) {\n    $numbers = explode(' ', $numbers);\n\
    \    $numbers = array_map(function($number) {\n        return number_to_int($number);\n\
    \    }, $numbers);\n    sort($numbers);\n    $numbers = array_map(function($number)\
    \ {\n        return int_to_number($number);\n    }, $numbers);\n    return implode('\
    \ ', $numbers);\n}\n\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Error: Call to undefined function number_to_int()\
    \ in /tmp/tmphuev31dr.php:10\nStack trace:\n#0 [internal function]: {closure}()\n\
    #1 /tmp/tmphuev31dr.php(11): array_map()\n#2 /tmp/tmphuev31dr.php(20): sort_numbers()\n\
    #3 /tmp/tmphuev31dr.php(24): candidate()\n#4 /tmp/tmphuev31dr.php(31): test()\n\
    #5 {main}\n  thrown in /tmp/tmphuev31dr.php on line 10\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers('three one five')\n// 'one three\
    \ five'\nfunction sort_numbers($numbers) {\n    $numbers = explode(' ', $numbers);\n\
    \    $numbers = array_map(function($number) {\n        return $number == 'zero'\
    \ ? 0 : $number == 'one' ? 1 : $number == 'two' ? 2 : $number == 'three' ? 3 :\
    \ $number == 'four' ? 4 : $number == 'five' ? 5 : $number == 'six' ? 6 : $number\
    \ == 'seven' ? 7 : $number == 'eight' ? 8 : $number == 'nine' ? 9 : $number;\n\
    \    }, $numbers);\n    sort($numbers);\n    $numbers = array_map(function($number)\
    \ {\n        return $number == 0 ? 'zero' : $number == 1 ? 'one' : $number ==\
    \ 2 ? 'two' : $number == 3 ? 'three' : $number == 4 ? 'four' : $number == 5 ?\
    \ 'five' : $number == 6 ? 'six' : $number == 7 ? 'seven' : $number == 8 ? 'eight'\
    \ : $number == 9 ? 'nine' : $number;\n    }, $numbers);\n    return implode('\
    \ ', $numbers);\n}\n\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Unparenthesized `a ? b : c ? d : e` is not supported.\
    \ Use either `(a ? b : c) ? d : e` or `a ? b : (c ? d : e)` in /tmp/tmp9kblebu3.php\
    \ on line 10\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers('three one five')\n// 'one three\
    \ five'\nfunction sort_numbers($numbers) {\n  $numbers = explode(' ', $numbers);\n\
    \  $numbers = array_map(function($number) {\n    return array_search($number,\
    \ ['zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine']);\n\
    \  }, $numbers);\n  sort($numbers);\n  $numbers = array_map(function($number)\
    \ {\n    return ['zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight', 'nine'][$number];\n  }, $numbers);\n  return implode(' ', $numbers);\n\
    }\n\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpw6nnhc33.php:24\n\
    Stack trace:\n#0 /tmp/tmpw6nnhc33.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpw6nnhc33.php\
    \ on line 24\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers('three one five')\n// 'one three\
    \ five'\nfunction sort_numbers($numbers) {\n    $numbers = explode(' ', $numbers);\n\
    \    $numbers = array_map(function($number) {\n        return array_search($number,\
    \ array('zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight',\
    \ 'nine'));\n    }, $numbers);\n    sort($numbers);\n    $numbers = array_map(function($number)\
    \ {\n        return array('zero', 'one', 'two', 'three', 'four', 'five', 'six',\
    \ 'seven', 'eight', 'nine')[$number];\n    }, $numbers);\n    return implode('\
    \ ', $numbers);\n}\n\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmplb55nmr8.php:24\n\
    Stack trace:\n#0 /tmp/tmplb55nmr8.php(31): test()\n#1 {main}\n  thrown in /tmp/tmplb55nmr8.php\
    \ on line 24\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers('three one five')\n// 'one three\
    \ five'\nfunction sort_numbers($numbers) {\n  $numbers = explode(' ', $numbers);\n\
    \  $numbers = array_map(function($number) {\n    return [\n      'number' => $number,\n\
    \      'value' => array_search($number, ['zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight', 'nine'])\n    ];\n  }, $numbers);\n  usort($numbers,\
    \ function($a, $b) {\n    return $a['value'] - $b['value'];\n  });\n  $numbers\
    \ = array_map(function($number) {\n    return $number['number'];\n  }, $numbers);\n\
    \  return implode(' ', $numbers);\n}\n\nfunction candidate(...$args) {\n    return\
    \ sort_numbers(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\"\
    ) !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"three\"\
    ) !== \"three\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    three five nine\") !== \"three five nine\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"five zero four seven nine eight\") !== \"zero four five\
    \ seven eight nine\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    six five four three two one zero\") !== \"zero one two three four five six\")\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers('three one five')\n// 'one three\
    \ five'\nfunction sort_numbers($numbers) {\n    $numbers = explode(' ', $numbers);\n\
    \    $numbers = array_map(function($number) {\n        return number_to_digit($number);\n\
    \    }, $numbers);\n    sort($numbers);\n    $numbers = array_map(function($number)\
    \ {\n        return digit_to_number($number);\n    }, $numbers);\n    return implode('\
    \ ', $numbers);\n}\n\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Error: Call to undefined function number_to_digit()\
    \ in /tmp/tmpmno75kox.php:10\nStack trace:\n#0 [internal function]: {closure}()\n\
    #1 /tmp/tmpmno75kox.php(11): array_map()\n#2 /tmp/tmpmno75kox.php(20): sort_numbers()\n\
    #3 /tmp/tmpmno75kox.php(24): candidate()\n#4 /tmp/tmpmno75kox.php(31): test()\n\
    #5 {main}\n  thrown in /tmp/tmpmno75kox.php on line 10\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers('three one five')\n// 'one three\
    \ five'\nfunction sort_numbers($numbers) {\n  $numbers = explode(' ', $numbers);\n\
    \  $numbers = array_map(function($number) {\n    return array_search($number,\
    \ ['zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine']);\n\
    \  }, $numbers);\n  sort($numbers);\n  $numbers = array_map(function($number)\
    \ {\n    return ['zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight', 'nine'][$number];\n  }, $numbers);\n  return implode(' ', $numbers);\n\
    }\n\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp4ckkh_wf.php:24\n\
    Stack trace:\n#0 /tmp/tmp4ckkh_wf.php(31): test()\n#1 {main}\n  thrown in /tmp/tmp4ckkh_wf.php\
    \ on line 24\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers('three one five')\n// 'one three\
    \ five'\nfunction sort_numbers($numbers) {\n    $numbers = explode(' ', $numbers);\n\
    \    $numbers = array_map(function($number) {\n        switch ($number) {\n  \
    \          case 'zero':\n                return 0;\n            case 'one':\n\
    \                return 1;\n            case 'two':\n                return 2;\n\
    \            case 'three':\n                return 3;\n            case 'four':\n\
    \                return 4;\n            case 'five':\n                return 5;\n\
    \            case 'six':\n                return 6;\n            case 'seven':\n\
    \                return 7;\n            case 'eight':\n                return\
    \ 8;\n            case 'nine':\n                return 9;\n        }\n    }, $numbers);\n\
    \    sort($numbers);\n    $numbers = array_map(function($number) {\n        switch\
    \ ($number) {\n            case 0:\n                return 'zero';\n         \
    \   case 1:\n                return 'one';\n            case 2:\n            \
    \    return 'two';\n            case 3:\n                return 'three';\n   \
    \         case 4:\n                return 'four';\n            case 5:\n     \
    \           return 'five';\n            case 6:\n                return 'six';\n\
    \            case 7:\n                return 'seven';\n            case 8:\n \
    \               return 'eight';\n            case 9:\n                return 'nine';\n\
    \        }\n    }, $numbers);\n    return implode(' ', $numbers);\n}\n\nfunction\
    \ candidate(...$args) {\n    return sort_numbers(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpnkdv565j.php:66\n\
    Stack trace:\n#0 /tmp/tmpnkdv565j.php(73): test()\n#1 {main}\n  thrown in /tmp/tmpnkdv565j.php\
    \ on line 66\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers('three one five')\n// 'one three\
    \ five'\nfunction sort_numbers($numbers) {\n    $numbers = explode(' ', $numbers);\n\
    \    $numbers = array_map(function($number) {\n        $number = strtolower($number);\n\
    \        switch ($number) {\n            case 'zero':\n                return\
    \ 0;\n            case 'one':\n                return 1;\n            case 'two':\n\
    \                return 2;\n            case 'three':\n                return\
    \ 3;\n            case 'four':\n                return 4;\n            case 'five':\n\
    \                return 5;\n            case 'six':\n                return 6;\n\
    \            case 'seven':\n                return 7;\n            case 'eight':\n\
    \                return 8;\n            case 'nine':\n                return 9;\n\
    \            default:\n                return 0;\n        }\n    }, $numbers);\n\
    \    sort($numbers);\n    $numbers = array_map(function($number) {\n        switch\
    \ ($number) {\n            case 0:\n                return 'zero';\n         \
    \   case 1:\n                return 'one';\n            case 2:\n            \
    \    return 'two';\n            case 3:\n                return 'three';\n   \
    \         case 4:\n                return 'four';\n            case 5:\n     \
    \           return 'five';\n            case 6:\n                return 'six';\n\
    \            case 7:\n                return 'seven';\n            case 8:\n \
    \               return 'eight';\n            case 9:\n                return 'nine';\n\
    \            default:\n                return 'zero';\n        }\n    }, $numbers);\n\
    \    return implode(' ', $numbers);\n}\n\nfunction candidate(...$args) {\n   \
    \ return sort_numbers(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    \") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    three\") !== \"three\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    three five nine\") !== \"three five nine\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"five zero four seven nine eight\") !== \"zero four five\
    \ seven eight nine\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    six five four three two one zero\") !== \"zero one two three four five six\")\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpm_5dpq3f.php:71\n\
    Stack trace:\n#0 /tmp/tmpm_5dpq3f.php(78): test()\n#1 {main}\n  thrown in /tmp/tmpm_5dpq3f.php\
    \ on line 71\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers('three one five')\n// 'one three\
    \ five'\nfunction sort_numbers($numbers) {\n    $numbers = explode(' ', $numbers);\n\
    \    $numbers = array_map(function($number) {\n        return [\n            'zero'\
    \ => 0,\n            'one' => 1,\n            'two' => 2,\n            'three'\
    \ => 3,\n            'four' => 4,\n            'five' => 5,\n            'six'\
    \ => 6,\n            'seven' => 7,\n            'eight' => 8,\n            'nine'\
    \ => 9,\n        ][$number];\n    }, $numbers);\n    sort($numbers);\n    return\
    \ implode(' ', $numbers);\n}\n\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Warning:  Undefined array key \"\" in /tmp/tmppda5_akw.php on line\
    \ 21\nPHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmppda5_akw.php:33\n\
    Stack trace:\n#0 /tmp/tmppda5_akw.php(39): test()\n#1 {main}\n  thrown in /tmp/tmppda5_akw.php\
    \ on line 33\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers('three one five')\n// 'one three\
    \ five'\nfunction sort_numbers($numbers) {\n    $numbers = explode(' ', $numbers);\n\
    \    $numbers = array_map(function($number) {\n        return array_search($number,\
    \ array('zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight',\
    \ 'nine'));\n    }, $numbers);\n    sort($numbers);\n    $numbers = array_map(function($number)\
    \ {\n        return array('zero', 'one', 'two', 'three', 'four', 'five', 'six',\
    \ 'seven', 'eight', 'nine')[$number];\n    }, $numbers);\n    return implode('\
    \ ', $numbers);\n}\n\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpxmk79ems.php:24\n\
    Stack trace:\n#0 /tmp/tmpxmk79ems.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpxmk79ems.php\
    \ on line 24\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers('three one five')\n// 'one three\
    \ five'\nfunction sort_numbers($numbers) {\n    $numbers = explode(' ', $numbers);\n\
    \    $numbers = array_map(function($number) {\n        return number_to_int($number);\n\
    \    }, $numbers);\n    sort($numbers);\n    $numbers = array_map(function($number)\
    \ {\n        return int_to_number($number);\n    }, $numbers);\n    return implode('\
    \ ', $numbers);\n}\n\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Error: Call to undefined function number_to_int()\
    \ in /tmp/tmpybvz3jzs.php:10\nStack trace:\n#0 [internal function]: {closure}()\n\
    #1 /tmp/tmpybvz3jzs.php(11): array_map()\n#2 /tmp/tmpybvz3jzs.php(20): sort_numbers()\n\
    #3 /tmp/tmpybvz3jzs.php(24): candidate()\n#4 /tmp/tmpybvz3jzs.php(31): test()\n\
    #5 {main}\n  thrown in /tmp/tmpybvz3jzs.php on line 10\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers('three one five')\n// 'one three\
    \ five'\nfunction sort_numbers($numbers) {\n    $numbers = explode(' ', $numbers);\n\
    \    $numbers = array_map(function($number) {\n        switch ($number) {\n  \
    \          case 'zero':\n                return 0;\n            case 'one':\n\
    \                return 1;\n            case 'two':\n                return 2;\n\
    \            case 'three':\n                return 3;\n            case 'four':\n\
    \                return 4;\n            case 'five':\n                return 5;\n\
    \            case 'six':\n                return 6;\n            case 'seven':\n\
    \                return 7;\n            case 'eight':\n                return\
    \ 8;\n            case 'nine':\n                return 9;\n        }\n    }, $numbers);\n\
    \    sort($numbers);\n    $numbers = array_map(function($number) {\n        switch\
    \ ($number) {\n            case 0:\n                return 'zero';\n         \
    \   case 1:\n                return 'one';\n            case 2:\n            \
    \    return 'two';\n            case 3:\n                return 'three';\n   \
    \         case 4:\n                return 'four';\n            case 5:\n     \
    \           return 'five';\n            case 6:\n                return 'six';\n\
    \            case 7:\n                return 'seven';\n            case 8:\n \
    \               return 'eight';\n            case 9:\n                return 'nine';\n\
    \        }\n    }, $numbers);\n    return implode(' ', $numbers);\n}\n\nfunction\
    \ candidate(...$args) {\n    return sort_numbers(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpt5460m1z.php:66\n\
    Stack trace:\n#0 /tmp/tmpt5460m1z.php(73): test()\n#1 {main}\n  thrown in /tmp/tmpt5460m1z.php\
    \ on line 66\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers('three one five')\n// 'one three\
    \ five'\nfunction sort_numbers($numbers) {\n    $numbers = explode(' ', $numbers);\n\
    \    $numbers = array_map(function($number) {\n        return number_to_numeral($number);\n\
    \    }, $numbers);\n    sort($numbers);\n    $numbers = array_map(function($number)\
    \ {\n        return numeral_to_number($number);\n    }, $numbers);\n    return\
    \ implode(' ', $numbers);\n}\n\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Error: Call to undefined function number_to_numeral()\
    \ in /tmp/tmpmfrlimpw.php:10\nStack trace:\n#0 [internal function]: {closure}()\n\
    #1 /tmp/tmpmfrlimpw.php(11): array_map()\n#2 /tmp/tmpmfrlimpw.php(20): sort_numbers()\n\
    #3 /tmp/tmpmfrlimpw.php(24): candidate()\n#4 /tmp/tmpmfrlimpw.php(31): test()\n\
    #5 {main}\n  thrown in /tmp/tmpmfrlimpw.php on line 10\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers('three one five')\n// 'one three\
    \ five'\nfunction sort_numbers($numbers) {\n    $numbers = explode(' ', $numbers);\n\
    \    $numbers = array_map(function($number) {\n        return array_search($number,\
    \ ['zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine']);\n\
    \    }, $numbers);\n    sort($numbers);\n    $numbers = array_map(function($number)\
    \ {\n        return ['zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight', 'nine'][$number];\n    }, $numbers);\n    return implode(' ', $numbers);\n\
    }\n\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp1gt_7dnp.php:24\n\
    Stack trace:\n#0 /tmp/tmp1gt_7dnp.php(31): test()\n#1 {main}\n  thrown in /tmp/tmp1gt_7dnp.php\
    \ on line 24\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers('three one five')\n// 'one three\
    \ five'\nfunction sort_numbers($numbers) {\n  $numbers = explode(' ', $numbers);\n\
    \  $numbers = array_map(function($number) {\n    return array_search($number,\
    \ ['zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine']);\n\
    \  }, $numbers);\n  sort($numbers);\n  $numbers = array_map(function($number)\
    \ {\n    return ['zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight', 'nine'][$number];\n  }, $numbers);\n  return implode(' ', $numbers);\n\
    }\n\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpdua1tzu3.php:24\n\
    Stack trace:\n#0 /tmp/tmpdua1tzu3.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpdua1tzu3.php\
    \ on line 24\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers('three one five')\n// 'one three\
    \ five'\nfunction sort_numbers($numbers) {\n    $numbers = explode(' ', $numbers);\n\
    \    $numbers = array_map(function($number) {\n        switch ($number) {\n  \
    \          case 'zero':\n                return 0;\n            case 'one':\n\
    \                return 1;\n            case 'two':\n                return 2;\n\
    \            case 'three':\n                return 3;\n            case 'four':\n\
    \                return 4;\n            case 'five':\n                return 5;\n\
    \            case 'six':\n                return 6;\n            case 'seven':\n\
    \                return 7;\n            case 'eight':\n                return\
    \ 8;\n            case 'nine':\n                return 9;\n        }\n    }, $numbers);\n\
    \    sort($numbers);\n    $numbers = array_map(function($number) {\n        switch\
    \ ($number) {\n            case 0:\n                return 'zero';\n         \
    \   case 1:\n                return 'one';\n            case 2:\n            \
    \    return 'two';\n            case 3:\n                return 'three';\n   \
    \         case 4:\n                return 'four';\n            case 5:\n     \
    \           return 'five';\n            case 6:\n                return 'six';\n\
    \            case 7:\n                return 'seven';\n            case 8:\n \
    \               return 'eight';\n            case 9:\n                return 'nine';\n\
    \        }\n    }, $numbers);\n    return implode(' ', $numbers);\n}\n\nfunction\
    \ candidate(...$args) {\n    return sort_numbers(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpxdz_3kb1.php:66\n\
    Stack trace:\n#0 /tmp/tmpxdz_3kb1.php(73): test()\n#1 {main}\n  thrown in /tmp/tmpxdz_3kb1.php\
    \ on line 66\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers('three one five')\n// 'one three\
    \ five'\nfunction sort_numbers($numbers) {\n    $numbers = explode(' ', $numbers);\n\
    \    $numbers = array_map(function($number) {\n        return str_replace(['zero',\
    \ 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine'],\n \
    \                          [0, 1, 2, 3, 4, 5, 6, 7, 8, 9],\n                 \
    \          $number);\n    }, $numbers);\n    sort($numbers);\n    $numbers = array_map(function($number)\
    \ {\n        return str_replace([0, 1, 2, 3, 4, 5, 6, 7, 8, 9],\n            \
    \               ['zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight', 'nine'],\n                           $number);\n    }, $numbers);\n\
    \    return implode(' ', $numbers);\n}\n\nfunction candidate(...$args) {\n   \
    \ return sort_numbers(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    \") !== \"\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    three\") !== \"three\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    three five nine\") !== \"three five nine\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"five zero four seven nine eight\") !== \"zero four five\
    \ seven eight nine\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    six five four three two one zero\") !== \"zero one two three four five six\")\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers('three one five')\n// 'one three\
    \ five'\nfunction sort_numbers($numbers) {\n    $numbers = explode(' ', $numbers);\n\
    \    $numbers = array_map(function($number) {\n        return number_to_int($number);\n\
    \    }, $numbers);\n    sort($numbers);\n    $numbers = array_map(function($number)\
    \ {\n        return int_to_number($number);\n    }, $numbers);\n    return implode('\
    \ ', $numbers);\n}\n\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Error: Call to undefined function number_to_int()\
    \ in /tmp/tmpzji6k784.php:10\nStack trace:\n#0 [internal function]: {closure}()\n\
    #1 /tmp/tmpzji6k784.php(11): array_map()\n#2 /tmp/tmpzji6k784.php(20): sort_numbers()\n\
    #3 /tmp/tmpzji6k784.php(24): candidate()\n#4 /tmp/tmpzji6k784.php(31): test()\n\
    #5 {main}\n  thrown in /tmp/tmpzji6k784.php on line 10\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers('three one five')\n// 'one three\
    \ five'\nfunction sort_numbers($numbers) {\n  $numbers = explode(' ', $numbers);\n\
    \  $numbers = array_map(function($number) {\n    return array_search($number,\
    \ ['zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine']);\n\
    \  }, $numbers);\n  sort($numbers);\n  $numbers = array_map(function($number)\
    \ {\n    return ['zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight', 'nine'][$number];\n  }, $numbers);\n  return implode(' ', $numbers);\n\
    }\n\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpf72kjzby.php:24\n\
    Stack trace:\n#0 /tmp/tmpf72kjzby.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpf72kjzby.php\
    \ on line 24\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Input is a space-delimited string of numberals from 'zero' to\
    \ 'nine'.\n// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n// Return the string with numbers sorted\
    \ from smallest to largest\n// >>> sort_numbers('three one five')\n// 'one three\
    \ five'\nfunction sort_numbers($numbers) {\n  $numbers = explode(' ', $numbers);\n\
    \  $numbers = array_map(function($number) {\n    return array_search($number,\
    \ ['zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine']);\n\
    \  }, $numbers);\n  sort($numbers);\n  $numbers = array_map(function($number)\
    \ {\n    return ['zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
    \ 'eight', 'nine'][$number];\n  }, $numbers);\n  return implode(' ', $numbers);\n\
    }\n\nfunction candidate(...$args) {\n    return sort_numbers(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"\") !== \"\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three\") !== \"three\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"three five nine\") !== \"three five nine\"\
    ) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"five zero four\
    \ seven nine eight\") !== \"zero four five seven eight nine\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(\"six five four three two one zero\") !==\
    \ \"zero one two three four five six\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp13w8cvpl.php:24\n\
    Stack trace:\n#0 /tmp/tmp13w8cvpl.php(31): test()\n#1 {main}\n  thrown in /tmp/tmp13w8cvpl.php\
    \ on line 24\n"
  exit_code: 255
  status: Exception

name: HumanEval_130_tri
language: php
results:
- program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    // tri(3) = [1, 3, 2, 8]\nfunction tri($n) {\n  $result = [];\n  for ($i = 0;\
    \ $i <= $n; $i++) {\n    if ($i === 0) {\n      $result[] = 1;\n    } else if\
    \ ($i === 1) {\n      $result[] = 3;\n    } else if ($i === 2) {\n      $result[]\
    \ = 2;\n    } else if ($i % 2 === 0) {\n      $result[] = 1 + ($i / 2);\n    }\
    \ else {\n      $result[] = $result[$i - 1] + $result[$i - 2] + $result[$i + 1];\n\
    \    }\n  }\n  return $result;\n}\n\nfunction candidate(...$args) {\n    return\
    \ tri(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3) !== array(1,\
    \ 3, 2, 8)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !==\
    \ array(1, 3, 2, 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5)\
    \ !== array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1,\
    \ 3, 2, 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(9) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24,\
    \ 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Warning:  Undefined array key 4 in /tmp/tmpbmif3s8i.php on line 29\n\
    PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpbmif3s8i.php:40\n\
    Stack trace:\n#0 /tmp/tmpbmif3s8i.php(52): test()\n#1 {main}\n  thrown in /tmp/tmpbmif3s8i.php\
    \ on line 40\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    // tri(3) = [1, 3, 2, 8]\nfunction tri($n) {\n    $result = [];\n    for ($i =\
    \ 0; $i <= $n; $i++) {\n        if ($i == 0) {\n            $result[] = 1;\n \
    \       } elseif ($i == 1) {\n            $result[] = 3;\n        } elseif ($i\
    \ == 2) {\n            $result[] = 2;\n        } elseif ($i % 2 == 0) {\n    \
    \        $result[] = 1 + $i / 2;\n        } else {\n            $result[] = $result[$i\
    \ - 1] + $result[$i - 2] + $result[$i + 1];\n        }\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return tri(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(3) !== array(1, 3, 2, 8)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4) !== array(1, 3, 2, 8, 3)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5) !== array(1, 3, 2, 8, 3,\
    \ 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== array(1,\
    \ 3, 2, 8, 3, 15, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(9) !== array(1, 3, 2, 8, 3,\
    \ 15, 4, 24, 5, 35)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120,\
    \ 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0) !== array(1))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !== array(1,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Warning:  Undefined array key 4 in /tmp/tmpazteo6zl.php on line 29\n\
    PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpazteo6zl.php:40\n\
    Stack trace:\n#0 /tmp/tmpazteo6zl.php(52): test()\n#1 {main}\n  thrown in /tmp/tmpazteo6zl.php\
    \ on line 40\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    // tri(3) = [1, 3, 2, 8]\nfunction tri($n) {\n    $result = [];\n    for ($i =\
    \ 0; $i <= $n; $i++) {\n        if ($i == 0) {\n            $result[] = 1;\n \
    \       } elseif ($i == 1) {\n            $result[] = 3;\n        } elseif ($i\
    \ == 2) {\n            $result[] = 2;\n        } elseif ($i % 2 == 0) {\n    \
    \        $result[] = 1 + ($i / 2);\n        } else {\n            $result[] =\
    \ $result[$i - 1] + $result[$i - 2] + $result[$i + 1];\n        }\n    }\n   \
    \ return $result;\n}\n\nfunction candidate(...$args) {\n    return tri(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3) !== array(1, 3, 2, 8)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(4) !== array(1, 3, 2,\
    \ 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !==\
    \ array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1, 3, 2,\
    \ 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35, 6, 48,\
    \ 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Warning:  Undefined array key 4 in /tmp/tmpklgpmziw.php on line 29\n\
    PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpklgpmziw.php:40\n\
    Stack trace:\n#0 /tmp/tmpklgpmziw.php(52): test()\n#1 {main}\n  thrown in /tmp/tmpklgpmziw.php\
    \ on line 40\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    // tri(3) = [1, 3, 2, 8]\nfunction tri($n) {\n    $result = [];\n    for ($i =\
    \ 0; $i <= $n; $i++) {\n        if ($i == 0) {\n            $result[] = 1;\n \
    \       } elseif ($i == 1) {\n            $result[] = 3;\n        } elseif ($i\
    \ == 2) {\n            $result[] = 2;\n        } elseif ($i % 2 == 0) {\n    \
    \        $result[] = 1 + $i / 2;\n        } else {\n            $result[] = $result[$i\
    \ - 1] + $result[$i - 2] + $result[$i + 1];\n        }\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return tri(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(3) !== array(1, 3, 2, 8)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4) !== array(1, 3, 2, 8, 3)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5) !== array(1, 3, 2, 8, 3,\
    \ 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== array(1,\
    \ 3, 2, 8, 3, 15, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(9) !== array(1, 3, 2, 8, 3,\
    \ 15, 4, 24, 5, 35)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120,\
    \ 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0) !== array(1))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !== array(1,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Warning:  Undefined array key 4 in /tmp/tmphmxt__fs.php on line 29\n\
    PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmphmxt__fs.php:40\n\
    Stack trace:\n#0 /tmp/tmphmxt__fs.php(52): test()\n#1 {main}\n  thrown in /tmp/tmphmxt__fs.php\
    \ on line 40\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    // tri(3) = [1, 3, 2, 8]\nfunction tri($n) {\n    $result = [];\n    for ($i =\
    \ 0; $i <= $n; $i++) {\n        if ($i == 0) {\n            $result[] = 1;\n \
    \       } else if ($i == 1) {\n            $result[] = 3;\n        } else if ($i\
    \ == 2) {\n            $result[] = 2;\n        } else if ($i % 2 == 0) {\n   \
    \         $result[] = 1 + $i / 2;\n        } else {\n            $result[] = $result[$i\
    \ - 1] + $result[$i - 2] + $result[$i + 1];\n        }\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return tri(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(3) !== array(1, 3, 2, 8)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4) !== array(1, 3, 2, 8, 3)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5) !== array(1, 3, 2, 8, 3,\
    \ 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== array(1,\
    \ 3, 2, 8, 3, 15, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(9) !== array(1, 3, 2, 8, 3,\
    \ 15, 4, 24, 5, 35)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120,\
    \ 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0) !== array(1))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !== array(1,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Warning:  Undefined array key 4 in /tmp/tmpor9yqman.php on line 29\n\
    PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpor9yqman.php:40\n\
    Stack trace:\n#0 /tmp/tmpor9yqman.php(52): test()\n#1 {main}\n  thrown in /tmp/tmpor9yqman.php\
    \ on line 40\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    // tri(3) = [1, 3, 2, 8]\nfunction tri($n) {\n    $result = [];\n    for ($i =\
    \ 0; $i <= $n; $i++) {\n        if ($i == 0) {\n            $result[] = 1;\n \
    \       } else if ($i == 1) {\n            $result[] = 3;\n        } else if ($i\
    \ == 2) {\n            $result[] = 2;\n        } else if ($i % 2 == 0) {\n   \
    \         $result[] = 1 + ($i / 2);\n        } else {\n            $result[] =\
    \ $result[$i - 1] + $result[$i - 2] + $result[$i + 1];\n        }\n    }\n   \
    \ return $result;\n}\n\nprint_r(tri(3));\nfunction candidate(...$args) {\n   \
    \ return tri(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3) !==\
    \ array(1, 3, 2, 8)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(1, 3, 2, 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5) !== array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1,\
    \ 3, 2, 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(9) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24,\
    \ 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "Array\n(\n    [0] => 1\n    [1] => 3\n    [2] => 2\n    [3] => 5\n)\n"
  stderr: "PHP Warning:  Undefined array key 4 in /tmp/tmp2b79rw59.php on line 29\n\
    PHP Warning:  Undefined array key 4 in /tmp/tmp2b79rw59.php on line 29\nPHP Fatal\
    \ error:  Uncaught Exception: Test failed! in /tmp/tmp2b79rw59.php:41\nStack trace:\n\
    #0 /tmp/tmp2b79rw59.php(53): test()\n#1 {main}\n  thrown in /tmp/tmp2b79rw59.php\
    \ on line 41\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    // tri(3) = [1, 3, 2, 8]\nfunction tri($n) {\n    $result = [];\n    for ($i =\
    \ 0; $i <= $n; $i++) {\n        if ($i == 0) {\n            $result[] = 1;\n \
    \       } elseif ($i == 1) {\n            $result[] = 3;\n        } elseif ($i\
    \ == 2) {\n            $result[] = 2;\n        } elseif ($i % 2 == 0) {\n    \
    \        $result[] = 1 + ($i / 2);\n        } else {\n            $result[] =\
    \ $result[$i - 1] + $result[$i - 2] + $result[$i + 1];\n        }\n    }\n   \
    \ return $result;\n}\n\nfunction candidate(...$args) {\n    return tri(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3) !== array(1, 3, 2, 8)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(4) !== array(1, 3, 2,\
    \ 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !==\
    \ array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1, 3, 2,\
    \ 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35, 6, 48,\
    \ 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Warning:  Undefined array key 4 in /tmp/tmpqjkcsq8f.php on line 29\n\
    PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpqjkcsq8f.php:40\n\
    Stack trace:\n#0 /tmp/tmpqjkcsq8f.php(52): test()\n#1 {main}\n  thrown in /tmp/tmpqjkcsq8f.php\
    \ on line 40\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    // tri(3) = [1, 3, 2, 8]\nfunction tri($n) {\n    $result = [];\n    for ($i =\
    \ 0; $i <= $n; $i++) {\n        if ($i == 0) {\n            $result[] = 1;\n \
    \       } else if ($i == 1) {\n            $result[] = 3;\n        } else if ($i\
    \ == 2) {\n            $result[] = 2;\n        } else if ($i % 2 == 0) {\n   \
    \         $result[] = 1 + $i / 2;\n        } else {\n            $result[] = $result[$i\
    \ - 1] + $result[$i - 2] + $result[$i + 1];\n        }\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return tri(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(3) !== array(1, 3, 2, 8)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4) !== array(1, 3, 2, 8, 3)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5) !== array(1, 3, 2, 8, 3,\
    \ 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== array(1,\
    \ 3, 2, 8, 3, 15, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(9) !== array(1, 3, 2, 8, 3,\
    \ 15, 4, 24, 5, 35)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120,\
    \ 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0) !== array(1))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !== array(1,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Warning:  Undefined array key 4 in /tmp/tmp8dmtwj61.php on line 29\n\
    PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp8dmtwj61.php:40\n\
    Stack trace:\n#0 /tmp/tmp8dmtwj61.php(52): test()\n#1 {main}\n  thrown in /tmp/tmp8dmtwj61.php\
    \ on line 40\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    // tri(3) = [1, 3, 2, 8]\nfunction tri($n) {\n    $result = [];\n    for ($i =\
    \ 0; $i <= $n; $i++) {\n        if ($i == 0) {\n            $result[] = 1;\n \
    \       } else if ($i == 1) {\n            $result[] = 3;\n        } else if ($i\
    \ == 2) {\n            $result[] = 2;\n        } else if ($i % 2 == 0) {\n   \
    \         $result[] = 1 + $i / 2;\n        } else {\n            $result[] = $result[$i\
    \ - 1] + $result[$i - 2] + $result[$i + 1];\n        }\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return tri(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(3) !== array(1, 3, 2, 8)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4) !== array(1, 3, 2, 8, 3)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5) !== array(1, 3, 2, 8, 3,\
    \ 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== array(1,\
    \ 3, 2, 8, 3, 15, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(9) !== array(1, 3, 2, 8, 3,\
    \ 15, 4, 24, 5, 35)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120,\
    \ 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0) !== array(1))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !== array(1,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Warning:  Undefined array key 4 in /tmp/tmp3qiif32g.php on line 29\n\
    PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp3qiif32g.php:40\n\
    Stack trace:\n#0 /tmp/tmp3qiif32g.php(52): test()\n#1 {main}\n  thrown in /tmp/tmp3qiif32g.php\
    \ on line 40\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    // tri(3) = [1, 3, 2, 8]\nfunction tri($n) {\n    $arr = [1, 3, 2];\n    for ($i\
    \ = 3; $i <= $n; $i++) {\n        if ($i % 2 == 0) {\n            $arr[] = 1 +\
    \ $i / 2;\n        } else {\n            $arr[] = $arr[$i - 1] + $arr[$i - 2]\
    \ + $arr[$i + 1];\n        }\n    }\n    return $arr;\n}\nprint_r(tri(3));\nfunction\
    \ candidate(...$args) {\n    return tri(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(3) !== array(1, 3, 2, 8)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== array(1, 3, 2, 8, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5) !== array(1, 3, 2, 8, 3, 15)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(6) !== array(1, 3, 2,\
    \ 8, 3, 15, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(9) !== array(1, 3, 2, 8, 3,\
    \ 15, 4, 24, 5, 35)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120,\
    \ 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0) !== array(1))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !== array(1,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "Array\n(\n    [0] => 1\n    [1] => 3\n    [2] => 2\n    [3] => 5\n)\n"
  stderr: "PHP Warning:  Undefined array key 4 in /tmp/tmpvc2ua7o1.php on line 23\n\
    PHP Warning:  Undefined array key 4 in /tmp/tmpvc2ua7o1.php on line 23\nPHP Fatal\
    \ error:  Uncaught Exception: Test failed! in /tmp/tmpvc2ua7o1.php:34\nStack trace:\n\
    #0 /tmp/tmpvc2ua7o1.php(46): test()\n#1 {main}\n  thrown in /tmp/tmpvc2ua7o1.php\
    \ on line 34\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    // tri(3) = [1, 3, 2, 8]\nfunction tri($n) {\n  $arr = [1, 3, 2];\n  for ($i =\
    \ 3; $i <= $n; $i++) {\n    if ($i % 2 == 0) {\n      $arr[] = 1 + $i / 2;\n \
    \   } else {\n      $arr[] = $arr[$i - 1] + $arr[$i - 2] + $arr[$i + 1];\n   \
    \ }\n  }\n  return $arr;\n}\n\nfunction candidate(...$args) {\n    return tri(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3) !== array(1, 3, 2, 8)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(4) !== array(1, 3, 2,\
    \ 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !==\
    \ array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1, 3, 2,\
    \ 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35, 6, 48,\
    \ 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Warning:  Undefined array key 4 in /tmp/tmpt2ygnemp.php on line 23\n\
    PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpt2ygnemp.php:34\n\
    Stack trace:\n#0 /tmp/tmpt2ygnemp.php(46): test()\n#1 {main}\n  thrown in /tmp/tmpt2ygnemp.php\
    \ on line 34\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    // tri(3) = [1, 3, 2, 8]\nfunction tri($n) {\n  $arr = [1, 3, 2];\n  for ($i =\
    \ 3; $i <= $n; $i++) {\n    if ($i % 2 == 0) {\n      $arr[] = 1 + $i / 2;\n \
    \   } else {\n      $arr[] = $arr[$i - 1] + $arr[$i - 2] + $arr[$i + 1];\n   \
    \ }\n  }\n  return $arr;\n}\n\nfunction candidate(...$args) {\n    return tri(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3) !== array(1, 3, 2, 8)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(4) !== array(1, 3, 2,\
    \ 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !==\
    \ array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1, 3, 2,\
    \ 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35, 6, 48,\
    \ 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Warning:  Undefined array key 4 in /tmp/tmpedvs1slz.php on line 23\n\
    PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpedvs1slz.php:34\n\
    Stack trace:\n#0 /tmp/tmpedvs1slz.php(46): test()\n#1 {main}\n  thrown in /tmp/tmpedvs1slz.php\
    \ on line 34\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    // tri(3) = [1, 3, 2, 8]\nfunction tri($n) {\n  if ($n == 0) {\n    return [];\n\
    \  }\n  if ($n == 1) {\n    return [1];\n  }\n  if ($n == 2) {\n    return [1,\
    \ 3];\n  }\n  $arr = [1, 3, 2];\n  for ($i = 3; $i <= $n; $i++) {\n    if ($i\
    \ % 2 == 0) {\n      $arr[] = 1 + $i / 2;\n    } else {\n      $arr[] = $arr[$i\
    \ - 1] + $arr[$i - 2] + $arr[$i + 1];\n    }\n  }\n  return $arr;\n}\n\nfunction\
    \ candidate(...$args) {\n    return tri(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(3) !== array(1, 3, 2, 8)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== array(1, 3, 2, 8, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5) !== array(1, 3, 2, 8, 3, 15)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(6) !== array(1, 3, 2,\
    \ 8, 3, 15, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(9) !== array(1, 3, 2, 8, 3,\
    \ 15, 4, 24, 5, 35)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120,\
    \ 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0) !== array(1))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !== array(1,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Warning:  Undefined array key 4 in /tmp/tmpiqxvvjq3.php on line 32\n\
    PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpiqxvvjq3.php:43\n\
    Stack trace:\n#0 /tmp/tmpiqxvvjq3.php(55): test()\n#1 {main}\n  thrown in /tmp/tmpiqxvvjq3.php\
    \ on line 43\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    // tri(3) = [1, 3, 2, 8]\nfunction tri($n) {\n  $result = [];\n  for ($i = 0;\
    \ $i <= $n; $i++) {\n    if ($i === 0) {\n      $result[] = 1;\n    } elseif ($i\
    \ === 1) {\n      $result[] = 3;\n    } elseif ($i === 2) {\n      $result[] =\
    \ 2;\n    } elseif ($i % 2 === 0) {\n      $result[] = 1 + $i / 2;\n    } else\
    \ {\n      $result[] = $result[$i - 1] + $result[$i - 2] + $result[$i + 1];\n\
    \    }\n  }\n  return $result;\n}\n\nfunction candidate(...$args) {\n    return\
    \ tri(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3) !== array(1,\
    \ 3, 2, 8)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !==\
    \ array(1, 3, 2, 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5)\
    \ !== array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1,\
    \ 3, 2, 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(9) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24,\
    \ 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Warning:  Undefined array key 4 in /tmp/tmp7lom416e.php on line 29\n\
    PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp7lom416e.php:40\n\
    Stack trace:\n#0 /tmp/tmp7lom416e.php(52): test()\n#1 {main}\n  thrown in /tmp/tmp7lom416e.php\
    \ on line 40\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    // tri(3) = [1, 3, 2, 8]\nfunction tri($n) {\n    $arr = [1, 3, 2];\n    for ($i\
    \ = 3; $i <= $n; $i++) {\n        if ($i % 2 == 0) {\n            $arr[] = 1 +\
    \ $i / 2;\n        } else {\n            $arr[] = $arr[$i - 1] + $arr[$i - 2]\
    \ + $arr[$i + 1];\n        }\n    }\n    return $arr;\n}\n\nfunction candidate(...$args)\
    \ {\n    return tri(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3)\
    \ !== array(1, 3, 2, 8)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(1, 3, 2, 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5) !== array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1,\
    \ 3, 2, 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(9) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24,\
    \ 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Warning:  Undefined array key 4 in /tmp/tmplcj55b9f.php on line 23\n\
    PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmplcj55b9f.php:34\n\
    Stack trace:\n#0 /tmp/tmplcj55b9f.php(46): test()\n#1 {main}\n  thrown in /tmp/tmplcj55b9f.php\
    \ on line 34\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    // tri(3) = [1, 3, 2, 8]\nfunction tri($n) {\n    $arr = [1, 3, 2];\n    for ($i\
    \ = 3; $i <= $n; $i++) {\n        if ($i % 2 == 0) {\n            $arr[] = 1 +\
    \ $i / 2;\n        } else {\n            $arr[] = $arr[$i - 1] + $arr[$i - 2]\
    \ + $arr[$i + 1];\n        }\n    }\n    return $arr;\n}\n\nfunction candidate(...$args)\
    \ {\n    return tri(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3)\
    \ !== array(1, 3, 2, 8)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(1, 3, 2, 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5) !== array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1,\
    \ 3, 2, 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(9) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24,\
    \ 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Warning:  Undefined array key 4 in /tmp/tmp880ib6w2.php on line 23\n\
    PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp880ib6w2.php:34\n\
    Stack trace:\n#0 /tmp/tmp880ib6w2.php(46): test()\n#1 {main}\n  thrown in /tmp/tmp880ib6w2.php\
    \ on line 34\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    // tri(3) = [1, 3, 2, 8]\nfunction tri($n) {\n  $result = [];\n  for ($i = 0;\
    \ $i <= $n; $i++) {\n    if ($i === 0) {\n      $result[] = 1;\n    } else if\
    \ ($i === 1) {\n      $result[] = 3;\n    } else if ($i === 2) {\n      $result[]\
    \ = 2;\n    } else if ($i % 2 === 0) {\n      $result[] = 1 + $i / 2;\n    } else\
    \ {\n      $result[] = $result[$i - 1] + $result[$i - 2] + $result[$i + 1];\n\
    \    }\n  }\n  return $result;\n}\n\nfunction candidate(...$args) {\n    return\
    \ tri(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3) !== array(1,\
    \ 3, 2, 8)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !==\
    \ array(1, 3, 2, 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5)\
    \ !== array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1,\
    \ 3, 2, 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(9) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24,\
    \ 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Warning:  Undefined array key 4 in /tmp/tmpdopxa8ws.php on line 29\n\
    PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpdopxa8ws.php:40\n\
    Stack trace:\n#0 /tmp/tmpdopxa8ws.php(52): test()\n#1 {main}\n  thrown in /tmp/tmpdopxa8ws.php\
    \ on line 40\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    // tri(3) = [1, 3, 2, 8]\nfunction tri($n) {\n  $result = [];\n  for ($i = 0;\
    \ $i <= $n; $i++) {\n    if ($i == 0) {\n      $result[] = 1;\n    } else if ($i\
    \ == 1) {\n      $result[] = 3;\n    } else if ($i == 2) {\n      $result[] =\
    \ 2;\n    } else if ($i % 2 == 0) {\n      $result[] = 1 + ($i / 2);\n    } else\
    \ {\n      $result[] = $result[$i - 1] + $result[$i - 2] + $result[$i + 1];\n\
    \    }\n  }\n  return $result;\n}\n\nfunction candidate(...$args) {\n    return\
    \ tri(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3) !== array(1,\
    \ 3, 2, 8)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !==\
    \ array(1, 3, 2, 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5)\
    \ !== array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1,\
    \ 3, 2, 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(9) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24,\
    \ 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Warning:  Undefined array key 4 in /tmp/tmp2j5t9i8q.php on line 29\n\
    PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp2j5t9i8q.php:40\n\
    Stack trace:\n#0 /tmp/tmp2j5t9i8q.php(52): test()\n#1 {main}\n  thrown in /tmp/tmp2j5t9i8q.php\
    \ on line 40\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    // tri(3) = [1, 3, 2, 8]\nfunction tri($n) {\n  $result = [];\n  for ($i = 0;\
    \ $i <= $n; $i++) {\n    if ($i === 0) {\n      $result[] = 1;\n    } elseif ($i\
    \ === 1) {\n      $result[] = 3;\n    } elseif ($i === 2) {\n      $result[] =\
    \ 2;\n    } elseif ($i % 2 === 0) {\n      $result[] = 1 + ($i / 2);\n    } else\
    \ {\n      $result[] = $result[$i - 1] + $result[$i - 2] + $result[$i + 1];\n\
    \    }\n  }\n  return $result;\n}\n\nfunction candidate(...$args) {\n    return\
    \ tri(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3) !== array(1,\
    \ 3, 2, 8)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !==\
    \ array(1, 3, 2, 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5)\
    \ !== array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1,\
    \ 3, 2, 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(9) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24,\
    \ 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Warning:  Undefined array key 4 in /tmp/tmpio9mm4el.php on line 29\n\
    PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpio9mm4el.php:40\n\
    Stack trace:\n#0 /tmp/tmpio9mm4el.php(52): test()\n#1 {main}\n  thrown in /tmp/tmpio9mm4el.php\
    \ on line 40\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    // tri(3) = [1, 3, 2, 8]\nfunction tri($n) {\n    $result = [];\n    for ($i =\
    \ 0; $i <= $n; $i++) {\n        if ($i === 0) {\n            $result[] = 1;\n\
    \        } else if ($i === 1) {\n            $result[] = 3;\n        } else if\
    \ ($i === 2) {\n            $result[] = 2;\n        } else if ($i % 2 === 0) {\n\
    \            $result[] = 1 + ($i / 2);\n        } else {\n            $result[]\
    \ = $result[$i - 1] + $result[$i - 2] + $result[$i + 1];\n        }\n    }\n \
    \   return $result;\n}\n\nfunction candidate(...$args) {\n    return tri(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3) !== array(1, 3, 2, 8)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(4) !== array(1, 3, 2,\
    \ 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !==\
    \ array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1, 3, 2,\
    \ 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35, 6, 48,\
    \ 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Warning:  Undefined array key 4 in /tmp/tmp_jx2zeb6.php on line 29\n\
    PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp_jx2zeb6.php:40\n\
    Stack trace:\n#0 /tmp/tmp_jx2zeb6.php(52): test()\n#1 {main}\n  thrown in /tmp/tmp_jx2zeb6.php\
    \ on line 40\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    // tri(3) = [1, 3, 2, 8]\nfunction tri($n) {\n    $result = [];\n    for ($i =\
    \ 0; $i <= $n; $i++) {\n        if ($i == 0) {\n            $result[] = 1;\n \
    \       } elseif ($i == 1) {\n            $result[] = 3;\n        } elseif ($i\
    \ == 2) {\n            $result[] = 2;\n        } elseif ($i % 2 == 0) {\n    \
    \        $result[] = 1 + ($i / 2);\n        } else {\n            $result[] =\
    \ $result[$i - 1] + $result[$i - 2] + $result[$i + 1];\n        }\n    }\n   \
    \ return $result;\n}\n\nfunction candidate(...$args) {\n    return tri(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3) !== array(1, 3, 2, 8)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(4) !== array(1, 3, 2,\
    \ 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !==\
    \ array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1, 3, 2,\
    \ 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35, 6, 48,\
    \ 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Warning:  Undefined array key 4 in /tmp/tmpb76dd2fz.php on line 29\n\
    PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpb76dd2fz.php:40\n\
    Stack trace:\n#0 /tmp/tmpb76dd2fz.php(52): test()\n#1 {main}\n  thrown in /tmp/tmpb76dd2fz.php\
    \ on line 40\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    // tri(3) = [1, 3, 2, 8]\nfunction tri($n) {\n  $result = [];\n  for ($i = 0;\
    \ $i <= $n; $i++) {\n    if ($i === 0) {\n      $result[] = 1;\n    } elseif ($i\
    \ === 1) {\n      $result[] = 3;\n    } elseif ($i === 2) {\n      $result[] =\
    \ 2;\n    } elseif ($i % 2 === 0) {\n      $result[] = 1 + $i / 2;\n    } else\
    \ {\n      $result[] = $result[$i - 1] + $result[$i - 2] + $result[$i + 1];\n\
    \    }\n  }\n  return $result;\n}\n\nfunction candidate(...$args) {\n    return\
    \ tri(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3) !== array(1,\
    \ 3, 2, 8)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !==\
    \ array(1, 3, 2, 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5)\
    \ !== array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1,\
    \ 3, 2, 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(9) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24,\
    \ 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Warning:  Undefined array key 4 in /tmp/tmpsr4qsxz3.php on line 29\n\
    PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpsr4qsxz3.php:40\n\
    Stack trace:\n#0 /tmp/tmpsr4qsxz3.php(52): test()\n#1 {main}\n  thrown in /tmp/tmpsr4qsxz3.php\
    \ on line 40\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    // tri(3) = [1, 3, 2, 8]\nfunction tri($n) {\n    if ($n == 0) {\n        return\
    \ [1];\n    }\n    if ($n == 1) {\n        return [1, 3];\n    }\n    if ($n ==\
    \ 2) {\n        return [1, 3, 2];\n    }\n    $result = [1, 3, 2];\n    for ($i\
    \ = 3; $i <= $n; $i++) {\n        if ($i % 2 == 0) {\n            $result[] =\
    \ 1 + $i / 2;\n        } else {\n            $result[] = $result[$i - 1] + $result[$i\
    \ - 2] + $result[$i + 1];\n        }\n    }\n    return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return tri(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(3) !== array(1, 3, 2, 8)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== array(1, 3, 2, 8, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5) !== array(1, 3, 2, 8, 3, 15)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(6) !== array(1, 3, 2,\
    \ 8, 3, 15, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(9) !== array(1, 3, 2, 8, 3,\
    \ 15, 4, 24, 5, 35)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120,\
    \ 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0) !== array(1))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !== array(1,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Warning:  Undefined array key 4 in /tmp/tmpcwpk7lgz.php on line 32\n\
    PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpcwpk7lgz.php:43\n\
    Stack trace:\n#0 /tmp/tmpcwpk7lgz.php(55): test()\n#1 {main}\n  thrown in /tmp/tmpcwpk7lgz.php\
    \ on line 43\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    // tri(3) = [1, 3, 2, 8]\nfunction tri($n) {\n  $result = [];\n  for ($i = 0;\
    \ $i <= $n; $i++) {\n    if ($i == 0) {\n      $result[] = 1;\n    } elseif ($i\
    \ == 1) {\n      $result[] = 3;\n    } elseif ($i == 2) {\n      $result[] = 2;\n\
    \    } elseif ($i % 2 == 0) {\n      $result[] = 1 + $i / 2;\n    } else {\n \
    \     $result[] = $result[$i - 1] + $result[$i - 2] + $result[$i + 1];\n    }\n\
    \  }\n  return $result;\n}\n\nfunction candidate(...$args) {\n    return tri(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3) !== array(1, 3, 2, 8)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(4) !== array(1, 3, 2,\
    \ 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !==\
    \ array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1, 3, 2,\
    \ 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35, 6, 48,\
    \ 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Warning:  Undefined array key 4 in /tmp/tmp_xjr2jud.php on line 29\n\
    PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp_xjr2jud.php:40\n\
    Stack trace:\n#0 /tmp/tmp_xjr2jud.php(52): test()\n#1 {main}\n  thrown in /tmp/tmp_xjr2jud.php\
    \ on line 40\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    // tri(3) = [1, 3, 2, 8]\nfunction tri($n) {\n    $result = [];\n    for ($i =\
    \ 0; $i <= $n; $i++) {\n        if ($i == 0) {\n            $result[] = 1;\n \
    \       } elseif ($i == 1) {\n            $result[] = 3;\n        } elseif ($i\
    \ == 2) {\n            $result[] = 2;\n        } elseif ($i % 2 == 0) {\n    \
    \        $result[] = 1 + $i / 2;\n        } else {\n            $result[] = $result[$i\
    \ - 1] + $result[$i - 2] + $result[$i + 1];\n        }\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return tri(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(3) !== array(1, 3, 2, 8)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4) !== array(1, 3, 2, 8, 3)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5) !== array(1, 3, 2, 8, 3,\
    \ 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== array(1,\
    \ 3, 2, 8, 3, 15, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(9) !== array(1, 3, 2, 8, 3,\
    \ 15, 4, 24, 5, 35)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120,\
    \ 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0) !== array(1))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !== array(1,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Warning:  Undefined array key 4 in /tmp/tmp3vu63p0b.php on line 29\n\
    PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp3vu63p0b.php:40\n\
    Stack trace:\n#0 /tmp/tmp3vu63p0b.php(52): test()\n#1 {main}\n  thrown in /tmp/tmp3vu63p0b.php\
    \ on line 40\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    // tri(3) = [1, 3, 2, 8]\nfunction tri($n) {\n  $result = [];\n  for ($i = 0;\
    \ $i <= $n; $i++) {\n    if ($i === 0) {\n      $result[] = 1;\n    } else if\
    \ ($i === 1) {\n      $result[] = 3;\n    } else if ($i === 2) {\n      $result[]\
    \ = 2;\n    } else if ($i % 2 === 0) {\n      $result[] = 1 + $i / 2;\n    } else\
    \ {\n      $result[] = $result[$i - 1] + $result[$i - 2] + $result[$i + 1];\n\
    \    }\n  }\n  return $result;\n}\n\nfunction candidate(...$args) {\n    return\
    \ tri(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3) !== array(1,\
    \ 3, 2, 8)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !==\
    \ array(1, 3, 2, 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5)\
    \ !== array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1,\
    \ 3, 2, 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(9) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24,\
    \ 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Warning:  Undefined array key 4 in /tmp/tmp_7k6alin.php on line 29\n\
    PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp_7k6alin.php:40\n\
    Stack trace:\n#0 /tmp/tmp_7k6alin.php(52): test()\n#1 {main}\n  thrown in /tmp/tmp_7k6alin.php\
    \ on line 40\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    // tri(3) = [1, 3, 2, 8]\nfunction tri($n) {\n  $result = [];\n  for ($i = 0;\
    \ $i <= $n; $i++) {\n    if ($i == 0) {\n      $result[] = 1;\n    } else if ($i\
    \ == 1) {\n      $result[] = 3;\n    } else if ($i == 2) {\n      $result[] =\
    \ 2;\n    } else if ($i % 2 == 0) {\n      $result[] = 1 + $i / 2;\n    } else\
    \ {\n      $result[] = $result[$i - 1] + $result[$i - 2] + $result[$i + 1];\n\
    \    }\n  }\n  return $result;\n}\n\nfunction candidate(...$args) {\n    return\
    \ tri(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3) !== array(1,\
    \ 3, 2, 8)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !==\
    \ array(1, 3, 2, 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5)\
    \ !== array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1,\
    \ 3, 2, 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(9) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24,\
    \ 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Warning:  Undefined array key 4 in /tmp/tmpa98bpjb2.php on line 29\n\
    PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpa98bpjb2.php:40\n\
    Stack trace:\n#0 /tmp/tmpa98bpjb2.php(52): test()\n#1 {main}\n  thrown in /tmp/tmpa98bpjb2.php\
    \ on line 40\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    // tri(3) = [1, 3, 2, 8]\nfunction tri($n) {\n  $result = [];\n  for ($i = 0;\
    \ $i <= $n; $i++) {\n    if ($i === 0) {\n      $result[] = 1;\n    } else if\
    \ ($i === 1) {\n      $result[] = 3;\n    } else if ($i === 2) {\n      $result[]\
    \ = 2;\n    } else if ($i % 2 === 0) {\n      $result[] = 1 + ($i / 2);\n    }\
    \ else {\n      $result[] = $result[$i - 1] + $result[$i - 2] + $result[$i + 1];\n\
    \    }\n  }\n  return $result;\n}\n\nfunction candidate(...$args) {\n    return\
    \ tri(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3) !== array(1,\
    \ 3, 2, 8)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !==\
    \ array(1, 3, 2, 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5)\
    \ !== array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1,\
    \ 3, 2, 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(9) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24,\
    \ 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Warning:  Undefined array key 4 in /tmp/tmp7szizhws.php on line 29\n\
    PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp7szizhws.php:40\n\
    Stack trace:\n#0 /tmp/tmp7szizhws.php(52): test()\n#1 {main}\n  thrown in /tmp/tmp7szizhws.php\
    \ on line 40\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    // tri(3) = [1, 3, 2, 8]\nfunction tri($n) {\n  $arr = [1, 3, 2];\n  for ($i =\
    \ 3; $i <= $n; $i++) {\n    if ($i % 2 == 0) {\n      $arr[] = 1 + $i / 2;\n \
    \   } else {\n      $arr[] = $arr[$i - 1] + $arr[$i - 2] + $arr[$i + 1];\n   \
    \ }\n  }\n  return $arr;\n}\n\nfunction candidate(...$args) {\n    return tri(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3) !== array(1, 3, 2, 8)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(4) !== array(1, 3, 2,\
    \ 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !==\
    \ array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1, 3, 2,\
    \ 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35, 6, 48,\
    \ 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Warning:  Undefined array key 4 in /tmp/tmp7kvt192_.php on line 23\n\
    PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp7kvt192_.php:34\n\
    Stack trace:\n#0 /tmp/tmp7kvt192_.php(46): test()\n#1 {main}\n  thrown in /tmp/tmp7kvt192_.php\
    \ on line 34\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    // tri(3) = [1, 3, 2, 8]\nfunction tri($n) {\n  $result = [];\n  for ($i = 0;\
    \ $i <= $n; $i++) {\n    if ($i === 0) {\n      $result[] = 1;\n    } else if\
    \ ($i === 1) {\n      $result[] = 3;\n    } else if ($i === 2) {\n      $result[]\
    \ = 2;\n    } else if ($i % 2 === 0) {\n      $result[] = 1 + ($i / 2);\n    }\
    \ else {\n      $result[] = $result[$i - 1] + $result[$i - 2] + $result[$i + 1];\n\
    \    }\n  }\n  return $result;\n}\n\nfunction candidate(...$args) {\n    return\
    \ tri(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3) !== array(1,\
    \ 3, 2, 8)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !==\
    \ array(1, 3, 2, 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5)\
    \ !== array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1,\
    \ 3, 2, 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(9) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24,\
    \ 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Warning:  Undefined array key 4 in /tmp/tmppseh81gs.php on line 29\n\
    PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmppseh81gs.php:40\n\
    Stack trace:\n#0 /tmp/tmppseh81gs.php(52): test()\n#1 {main}\n  thrown in /tmp/tmppseh81gs.php\
    \ on line 40\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    // tri(3) = [1, 3, 2, 8]\nfunction tri($n) {\n    $result = [];\n    for ($i =\
    \ 0; $i <= $n; $i++) {\n        if ($i == 0) {\n            $result[] = 1;\n \
    \       } elseif ($i == 1) {\n            $result[] = 3;\n        } elseif ($i\
    \ == 2) {\n            $result[] = 2;\n        } elseif ($i % 2 == 0) {\n    \
    \        $result[] = 1 + $i / 2;\n        } else {\n            $result[] = $result[$i\
    \ - 1] + $result[$i - 2] + $result[$i + 1];\n        }\n    }\n    return $result;\n\
    }\nprint_r(tri(3));\nfunction candidate(...$args) {\n    return tri(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3) !== array(1, 3, 2, 8)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(4) !== array(1, 3, 2,\
    \ 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !==\
    \ array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1, 3, 2,\
    \ 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35, 6, 48,\
    \ 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "Array\n(\n    [0] => 1\n    [1] => 3\n    [2] => 2\n    [3] => 5\n)\n"
  stderr: "PHP Warning:  Undefined array key 4 in /tmp/tmp8l19cac2.php on line 29\n\
    PHP Warning:  Undefined array key 4 in /tmp/tmp8l19cac2.php on line 29\nPHP Fatal\
    \ error:  Uncaught Exception: Test failed! in /tmp/tmp8l19cac2.php:40\nStack trace:\n\
    #0 /tmp/tmp8l19cac2.php(52): test()\n#1 {main}\n  thrown in /tmp/tmp8l19cac2.php\
    \ on line 40\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    // tri(3) = [1, 3, 2, 8]\nfunction tri($n) {\n  if ($n == 0) {\n    return [1];\n\
    \  }\n  if ($n == 1) {\n    return [1, 3];\n  }\n  if ($n == 2) {\n    return\
    \ [1, 3, 2];\n  }\n  $arr = [1, 3, 2];\n  for ($i = 3; $i <= $n; $i++) {\n   \
    \ if ($i % 2 == 0) {\n      $arr[] = 1 + $i / 2;\n    } else {\n      $arr[] =\
    \ $arr[$i - 1] + $arr[$i - 2] + $arr[$i + 1];\n    }\n  }\n  return $arr;\n}\n\
    \nprint_r(tri(3));\nfunction candidate(...$args) {\n    return tri(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3) !== array(1, 3, 2, 8)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(4) !== array(1, 3, 2,\
    \ 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !==\
    \ array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1, 3, 2,\
    \ 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35, 6, 48,\
    \ 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "Array\n(\n    [0] => 1\n    [1] => 3\n    [2] => 2\n    [3] => 5\n)\n"
  stderr: "PHP Warning:  Undefined array key 4 in /tmp/tmprk3mxya7.php on line 32\n\
    PHP Warning:  Undefined array key 4 in /tmp/tmprk3mxya7.php on line 32\nPHP Fatal\
    \ error:  Uncaught Exception: Test failed! in /tmp/tmprk3mxya7.php:44\nStack trace:\n\
    #0 /tmp/tmprk3mxya7.php(56): test()\n#1 {main}\n  thrown in /tmp/tmprk3mxya7.php\
    \ on line 44\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    // tri(3) = [1, 3, 2, 8]\nfunction tri($n) {\n    $result = [];\n    for ($i =\
    \ 0; $i <= $n; $i++) {\n        if ($i == 0) {\n            $result[] = 1;\n \
    \       } elseif ($i == 1) {\n            $result[] = 3;\n        } elseif ($i\
    \ == 2) {\n            $result[] = 2;\n        } elseif ($i % 2 == 0) {\n    \
    \        $result[] = 1 + $i / 2;\n        } else {\n            $result[] = $result[$i\
    \ - 1] + $result[$i - 2] + $result[$i + 1];\n        }\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return tri(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(3) !== array(1, 3, 2, 8)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4) !== array(1, 3, 2, 8, 3)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5) !== array(1, 3, 2, 8, 3,\
    \ 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== array(1,\
    \ 3, 2, 8, 3, 15, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(9) !== array(1, 3, 2, 8, 3,\
    \ 15, 4, 24, 5, 35)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120,\
    \ 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0) !== array(1))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !== array(1,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Warning:  Undefined array key 4 in /tmp/tmp8aaaldbu.php on line 29\n\
    PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp8aaaldbu.php:40\n\
    Stack trace:\n#0 /tmp/tmp8aaaldbu.php(52): test()\n#1 {main}\n  thrown in /tmp/tmp8aaaldbu.php\
    \ on line 40\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    // tri(3) = [1, 3, 2, 8]\nfunction tri($n) {\n  $arr = [];\n  for ($i = 0; $i\
    \ <= $n; $i++) {\n    if ($i == 0) {\n      $arr[] = 1;\n    } else if ($i ==\
    \ 1) {\n      $arr[] = 3;\n    } else if ($i == 2) {\n      $arr[] = 2;\n    }\
    \ else if ($i % 2 == 0) {\n      $arr[] = 1 + $i / 2;\n    } else {\n      $arr[]\
    \ = $arr[$i - 1] + $arr[$i - 2] + $arr[$i + 1];\n    }\n  }\n  return $arr;\n\
    }\n\nfunction candidate(...$args) {\n    return tri(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(3) !== array(1, 3, 2, 8)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4) !== array(1, 3, 2, 8, 3)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5) !== array(1, 3, 2, 8, 3,\
    \ 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== array(1,\
    \ 3, 2, 8, 3, 15, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(9) !== array(1, 3, 2, 8, 3,\
    \ 15, 4, 24, 5, 35)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120,\
    \ 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0) !== array(1))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !== array(1,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Warning:  Undefined array key 4 in /tmp/tmptrgp8kxc.php on line 29\n\
    PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmptrgp8kxc.php:40\n\
    Stack trace:\n#0 /tmp/tmptrgp8kxc.php(52): test()\n#1 {main}\n  thrown in /tmp/tmptrgp8kxc.php\
    \ on line 40\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    // tri(3) = [1, 3, 2, 8]\nfunction tri($n) {\n    $result = [];\n    for ($i =\
    \ 0; $i <= $n; $i++) {\n        if ($i == 0) {\n            $result[] = 1;\n \
    \       } elseif ($i == 1) {\n            $result[] = 3;\n        } elseif ($i\
    \ == 2) {\n            $result[] = 2;\n        } elseif ($i % 2 == 0) {\n    \
    \        $result[] = 1 + $i / 2;\n        } else {\n            $result[] = $result[$i\
    \ - 1] + $result[$i - 2] + $result[$i + 1];\n        }\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return tri(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(3) !== array(1, 3, 2, 8)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4) !== array(1, 3, 2, 8, 3)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5) !== array(1, 3, 2, 8, 3,\
    \ 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== array(1,\
    \ 3, 2, 8, 3, 15, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(9) !== array(1, 3, 2, 8, 3,\
    \ 15, 4, 24, 5, 35)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120,\
    \ 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0) !== array(1))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !== array(1,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Warning:  Undefined array key 4 in /tmp/tmpk2v8c0zt.php on line 29\n\
    PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpk2v8c0zt.php:40\n\
    Stack trace:\n#0 /tmp/tmpk2v8c0zt.php(52): test()\n#1 {main}\n  thrown in /tmp/tmpk2v8c0zt.php\
    \ on line 40\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    // tri(3) = [1, 3, 2, 8]\nfunction tri($n) {\n    $arr = [1, 3, 2];\n    for ($i\
    \ = 3; $i <= $n; $i++) {\n        if ($i % 2 == 0) {\n            $arr[] = 1 +\
    \ $i / 2;\n        } else {\n            $arr[] = $arr[$i - 1] + $arr[$i - 2]\
    \ + $arr[$i + 1];\n        }\n    }\n    return $arr;\n}\n\nfunction candidate(...$args)\
    \ {\n    return tri(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3)\
    \ !== array(1, 3, 2, 8)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(1, 3, 2, 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5) !== array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1,\
    \ 3, 2, 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(9) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24,\
    \ 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Warning:  Undefined array key 4 in /tmp/tmpv3z63wn_.php on line 23\n\
    PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpv3z63wn_.php:34\n\
    Stack trace:\n#0 /tmp/tmpv3z63wn_.php(46): test()\n#1 {main}\n  thrown in /tmp/tmpv3z63wn_.php\
    \ on line 34\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    // tri(3) = [1, 3, 2, 8]\nfunction tri($n) {\n    $result = [];\n    for ($i =\
    \ 0; $i <= $n; $i++) {\n        if ($i == 0) {\n            $result[] = 1;\n \
    \       } elseif ($i == 1) {\n            $result[] = 3;\n        } elseif ($i\
    \ == 2) {\n            $result[] = 2;\n        } elseif ($i % 2 == 0) {\n    \
    \        $result[] = 1 + $i / 2;\n        } else {\n            $result[] = $result[$i\
    \ - 1] + $result[$i - 2] + $result[$i + 1];\n        }\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return tri(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(3) !== array(1, 3, 2, 8)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4) !== array(1, 3, 2, 8, 3)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5) !== array(1, 3, 2, 8, 3,\
    \ 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== array(1,\
    \ 3, 2, 8, 3, 15, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(9) !== array(1, 3, 2, 8, 3,\
    \ 15, 4, 24, 5, 35)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120,\
    \ 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0) !== array(1))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !== array(1,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Warning:  Undefined array key 4 in /tmp/tmpi7sov8zj.php on line 29\n\
    PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpi7sov8zj.php:40\n\
    Stack trace:\n#0 /tmp/tmpi7sov8zj.php(52): test()\n#1 {main}\n  thrown in /tmp/tmpi7sov8zj.php\
    \ on line 40\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    // tri(3) = [1, 3, 2, 8]\nfunction tri($n) {\n  $arr = [1, 3, 2];\n  if ($n ==\
    \ 0) {\n    return [];\n  }\n  if ($n == 1) {\n    return [1];\n  }\n  if ($n\
    \ == 2) {\n    return [1, 3];\n  }\n  if ($n == 3) {\n    return [1, 3, 2];\n\
    \  }\n  for ($i = 3; $i <= $n; $i++) {\n    if ($i % 2 == 0) {\n      $arr[] =\
    \ 1 + $i / 2;\n    } else {\n      $arr[] = $arr[$i - 1] + $arr[$i - 2] + $arr[$i\
    \ + 1];\n    }\n  }\n  return $arr;\n}\n\nfunction candidate(...$args) {\n   \
    \ return tri(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3) !==\
    \ array(1, 3, 2, 8)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(1, 3, 2, 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5) !== array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1,\
    \ 3, 2, 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(9) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24,\
    \ 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpstiv62xs.php:46\n\
    Stack trace:\n#0 /tmp/tmpstiv62xs.php(58): test()\n#1 {main}\n  thrown in /tmp/tmpstiv62xs.php\
    \ on line 46\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    // tri(3) = [1, 3, 2, 8]\nfunction tri($n) {\n  $result = [];\n  for ($i = 0;\
    \ $i <= $n; $i++) {\n    if ($i == 0) {\n      $result[] = 1;\n    } elseif ($i\
    \ == 1) {\n      $result[] = 3;\n    } elseif ($i == 2) {\n      $result[] = 2;\n\
    \    } elseif ($i % 2 == 0) {\n      $result[] = 1 + $i / 2;\n    } else {\n \
    \     $result[] = $result[$i - 1] + $result[$i - 2] + $result[$i + 1];\n    }\n\
    \  }\n  return $result;\n}\n\nfunction candidate(...$args) {\n    return tri(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3) !== array(1, 3, 2, 8)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(4) !== array(1, 3, 2,\
    \ 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !==\
    \ array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1, 3, 2,\
    \ 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35, 6, 48,\
    \ 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Warning:  Undefined array key 4 in /tmp/tmpsy6hhi3i.php on line 29\n\
    PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpsy6hhi3i.php:40\n\
    Stack trace:\n#0 /tmp/tmpsy6hhi3i.php(52): test()\n#1 {main}\n  thrown in /tmp/tmpsy6hhi3i.php\
    \ on line 40\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    // tri(3) = [1, 3, 2, 8]\nfunction tri($n) {\n    $result = [];\n    for ($i =\
    \ 0; $i <= $n; $i++) {\n        if ($i == 0) {\n            $result[] = 1;\n \
    \       } elseif ($i == 1) {\n            $result[] = 3;\n        } elseif ($i\
    \ == 2) {\n            $result[] = 2;\n        } elseif ($i % 2 == 0) {\n    \
    \        $result[] = 1 + ($i / 2);\n        } else {\n            $result[] =\
    \ $result[$i - 1] + $result[$i - 2] + $result[$i + 1];\n        }\n    }\n   \
    \ return $result;\n}\n\nfunction candidate(...$args) {\n    return tri(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3) !== array(1, 3, 2, 8)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(4) !== array(1, 3, 2,\
    \ 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !==\
    \ array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1, 3, 2,\
    \ 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35, 6, 48,\
    \ 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Warning:  Undefined array key 4 in /tmp/tmpet9vlwv3.php on line 29\n\
    PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpet9vlwv3.php:40\n\
    Stack trace:\n#0 /tmp/tmpet9vlwv3.php(52): test()\n#1 {main}\n  thrown in /tmp/tmpet9vlwv3.php\
    \ on line 40\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    // tri(3) = [1, 3, 2, 8]\nfunction tri($n) {\n  $result = [];\n  for ($i = 0;\
    \ $i <= $n; $i++) {\n    if ($i == 0) {\n      $result[] = 1;\n    } elseif ($i\
    \ == 1) {\n      $result[] = 3;\n    } elseif ($i == 2) {\n      $result[] = 2;\n\
    \    } elseif ($i % 2 == 0) {\n      $result[] = 1 + ($i / 2);\n    } else {\n\
    \      $result[] = $result[$i - 1] + $result[$i - 2] + $result[$i + 1];\n    }\n\
    \  }\n  return $result;\n}\n\nfunction candidate(...$args) {\n    return tri(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3) !== array(1, 3, 2, 8)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(4) !== array(1, 3, 2,\
    \ 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !==\
    \ array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1, 3, 2,\
    \ 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35, 6, 48,\
    \ 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Warning:  Undefined array key 4 in /tmp/tmp8jfio78r.php on line 29\n\
    PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp8jfio78r.php:40\n\
    Stack trace:\n#0 /tmp/tmp8jfio78r.php(52): test()\n#1 {main}\n  thrown in /tmp/tmp8jfio78r.php\
    \ on line 40\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    // tri(3) = [1, 3, 2, 8]\nfunction tri($n) {\n  $arr = [];\n  for ($i = 0; $i\
    \ <= $n; $i++) {\n    if ($i == 0) {\n      $arr[] = 1;\n    } else if ($i ==\
    \ 1) {\n      $arr[] = 3;\n    } else if ($i == 2) {\n      $arr[] = 2;\n    }\
    \ else if ($i % 2 == 0) {\n      $arr[] = 1 + $i / 2;\n    } else {\n      $arr[]\
    \ = $arr[$i - 1] + $arr[$i - 2] + $arr[$i + 1];\n    }\n  }\n  return $arr;\n\
    }\nprint_r(tri(3));\nfunction candidate(...$args) {\n    return tri(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3) !== array(1, 3, 2, 8)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(4) !== array(1, 3, 2,\
    \ 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !==\
    \ array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1, 3, 2,\
    \ 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35, 6, 48,\
    \ 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "Array\n(\n    [0] => 1\n    [1] => 3\n    [2] => 2\n    [3] => 5\n)\n"
  stderr: "PHP Warning:  Undefined array key 4 in /tmp/tmpy3vik0bn.php on line 29\n\
    PHP Warning:  Undefined array key 4 in /tmp/tmpy3vik0bn.php on line 29\nPHP Fatal\
    \ error:  Uncaught Exception: Test failed! in /tmp/tmpy3vik0bn.php:40\nStack trace:\n\
    #0 /tmp/tmpy3vik0bn.php(52): test()\n#1 {main}\n  thrown in /tmp/tmpy3vik0bn.php\
    \ on line 40\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    // tri(3) = [1, 3, 2, 8]\nfunction tri($n) {\n    if ($n == 0) {\n        return\
    \ [1];\n    }\n    if ($n == 1) {\n        return [1, 3];\n    }\n    if ($n ==\
    \ 2) {\n        return [1, 3, 2];\n    }\n    $result = [1, 3, 2];\n    for ($i\
    \ = 3; $i <= $n; $i++) {\n        if ($i % 2 == 0) {\n            $result[] =\
    \ 1 + $i / 2;\n        } else {\n            $result[] = $result[$i - 1] + $result[$i\
    \ - 2] + $result[$i + 1];\n        }\n    }\n    return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return tri(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(3) !== array(1, 3, 2, 8)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== array(1, 3, 2, 8, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5) !== array(1, 3, 2, 8, 3, 15)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(6) !== array(1, 3, 2,\
    \ 8, 3, 15, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(9) !== array(1, 3, 2, 8, 3,\
    \ 15, 4, 24, 5, 35)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120,\
    \ 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0) !== array(1))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !== array(1,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Warning:  Undefined array key 4 in /tmp/tmpdpkj084i.php on line 32\n\
    PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpdpkj084i.php:43\n\
    Stack trace:\n#0 /tmp/tmpdpkj084i.php(55): test()\n#1 {main}\n  thrown in /tmp/tmpdpkj084i.php\
    \ on line 43\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    // tri(3) = [1, 3, 2, 8]\nfunction tri($n) {\n    $result = [];\n    for ($i =\
    \ 0; $i <= $n; $i++) {\n        if ($i === 0) {\n            $result[] = 1;\n\
    \        } else if ($i === 1) {\n            $result[] = 3;\n        } else if\
    \ ($i === 2) {\n            $result[] = 2;\n        } else if ($i % 2 === 0) {\n\
    \            $result[] = 1 + $i / 2;\n        } else {\n            $result[]\
    \ = $result[$i - 1] + $result[$i - 2] + $result[$i + 1];\n        }\n    }\n \
    \   return $result;\n}\n\nfunction candidate(...$args) {\n    return tri(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3) !== array(1, 3, 2, 8)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(4) !== array(1, 3, 2,\
    \ 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !==\
    \ array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1, 3, 2,\
    \ 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35, 6, 48,\
    \ 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Warning:  Undefined array key 4 in /tmp/tmpxiwz6vu5.php on line 29\n\
    PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpxiwz6vu5.php:40\n\
    Stack trace:\n#0 /tmp/tmpxiwz6vu5.php(52): test()\n#1 {main}\n  thrown in /tmp/tmpxiwz6vu5.php\
    \ on line 40\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    // tri(3) = [1, 3, 2, 8]\nfunction tri($n) {\n    $result = [];\n    for ($i =\
    \ 0; $i <= $n; $i++) {\n        if ($i === 0) {\n            $result[] = 1;\n\
    \        } elseif ($i === 1) {\n            $result[] = 3;\n        } elseif ($i\
    \ === 2) {\n            $result[] = 2;\n        } elseif ($i % 2 === 0) {\n  \
    \          $result[] = 1 + $i / 2;\n        } else {\n            $result[] =\
    \ $result[$i - 1] + $result[$i - 2] + $result[$i + 1];\n        }\n    }\n   \
    \ return $result;\n}\n\nfunction candidate(...$args) {\n    return tri(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3) !== array(1, 3, 2, 8)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(4) !== array(1, 3, 2,\
    \ 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !==\
    \ array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1, 3, 2,\
    \ 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35, 6, 48,\
    \ 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Warning:  Undefined array key 4 in /tmp/tmpwnmhqbrn.php on line 29\n\
    PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpwnmhqbrn.php:40\n\
    Stack trace:\n#0 /tmp/tmpwnmhqbrn.php(52): test()\n#1 {main}\n  thrown in /tmp/tmpwnmhqbrn.php\
    \ on line 40\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    // tri(3) = [1, 3, 2, 8]\nfunction tri($n) {\n    $arr = [1, 3, 2];\n    for ($i\
    \ = 3; $i <= $n; $i++) {\n        if ($i % 2 == 0) {\n            $arr[] = 1 +\
    \ $i / 2;\n        } else {\n            $arr[] = $arr[$i - 1] + $arr[$i - 2]\
    \ + $arr[$i + 1];\n        }\n    }\n    return $arr;\n}\n\nfunction candidate(...$args)\
    \ {\n    return tri(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3)\
    \ !== array(1, 3, 2, 8)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(1, 3, 2, 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5) !== array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1,\
    \ 3, 2, 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(9) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24,\
    \ 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Warning:  Undefined array key 4 in /tmp/tmpwdy7t6xt.php on line 23\n\
    PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpwdy7t6xt.php:34\n\
    Stack trace:\n#0 /tmp/tmpwdy7t6xt.php(46): test()\n#1 {main}\n  thrown in /tmp/tmpwdy7t6xt.php\
    \ on line 34\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    // tri(3) = [1, 3, 2, 8]\nfunction tri($n) {\n    $arr = [1, 3, 2];\n    for ($i\
    \ = 3; $i <= $n; $i++) {\n        if ($i % 2 == 0) {\n            $arr[] = 1 +\
    \ ($i / 2);\n        } else {\n            $arr[] = $arr[$i - 1] + $arr[$i - 2]\
    \ + $arr[$i + 1];\n        }\n    }\n    return $arr;\n}\n\nfunction candidate(...$args)\
    \ {\n    return tri(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3)\
    \ !== array(1, 3, 2, 8)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(1, 3, 2, 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5) !== array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1,\
    \ 3, 2, 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(9) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24,\
    \ 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Warning:  Undefined array key 4 in /tmp/tmpzpqd9zoh.php on line 23\n\
    PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpzpqd9zoh.php:34\n\
    Stack trace:\n#0 /tmp/tmpzpqd9zoh.php(46): test()\n#1 {main}\n  thrown in /tmp/tmpzpqd9zoh.php\
    \ on line 34\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    // tri(3) = [1, 3, 2, 8]\nfunction tri($n) {\n  $result = [];\n  for ($i = 0;\
    \ $i <= $n; $i++) {\n    if ($i === 0) {\n      $result[] = 1;\n    } else if\
    \ ($i === 1) {\n      $result[] = 3;\n    } else if ($i === 2) {\n      $result[]\
    \ = 2;\n    } else if ($i % 2 === 0) {\n      $result[] = 1 + $i / 2;\n    } else\
    \ {\n      $result[] = $result[$i - 1] + $result[$i - 2] + $result[$i + 1];\n\
    \    }\n  }\n  return $result;\n}\n\nfunction candidate(...$args) {\n    return\
    \ tri(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3) !== array(1,\
    \ 3, 2, 8)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !==\
    \ array(1, 3, 2, 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5)\
    \ !== array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1,\
    \ 3, 2, 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(9) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24,\
    \ 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Warning:  Undefined array key 4 in /tmp/tmppee1vqkq.php on line 29\n\
    PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmppee1vqkq.php:40\n\
    Stack trace:\n#0 /tmp/tmppee1vqkq.php(52): test()\n#1 {main}\n  thrown in /tmp/tmppee1vqkq.php\
    \ on line 40\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    // tri(3) = [1, 3, 2, 8]\nfunction tri($n) {\n    $result = [];\n    for ($i =\
    \ 0; $i <= $n; $i++) {\n        if ($i == 0) {\n            $result[] = 1;\n \
    \       } elseif ($i == 1) {\n            $result[] = 3;\n        } elseif ($i\
    \ == 2) {\n            $result[] = 2;\n        } elseif ($i % 2 == 0) {\n    \
    \        $result[] = 1 + $i / 2;\n        } else {\n            $result[] = $result[$i\
    \ - 1] + $result[$i - 2] + $result[$i + 1];\n        }\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return tri(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(3) !== array(1, 3, 2, 8)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4) !== array(1, 3, 2, 8, 3)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5) !== array(1, 3, 2, 8, 3,\
    \ 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== array(1,\
    \ 3, 2, 8, 3, 15, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(9) !== array(1, 3, 2, 8, 3,\
    \ 15, 4, 24, 5, 35)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120,\
    \ 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0) !== array(1))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !== array(1,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Warning:  Undefined array key 4 in /tmp/tmpkl0wvp8c.php on line 29\n\
    PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpkl0wvp8c.php:40\n\
    Stack trace:\n#0 /tmp/tmpkl0wvp8c.php(52): test()\n#1 {main}\n  thrown in /tmp/tmpkl0wvp8c.php\
    \ on line 40\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    // tri(3) = [1, 3, 2, 8]\nfunction tri($n) {\n    $result = [];\n    for ($i =\
    \ 0; $i <= $n; $i++) {\n        if ($i == 0) {\n            $result[] = 1;\n \
    \       } elseif ($i == 1) {\n            $result[] = 3;\n        } elseif ($i\
    \ == 2) {\n            $result[] = 2;\n        } elseif ($i % 2 == 0) {\n    \
    \        $result[] = 1 + $i / 2;\n        } else {\n            $result[] = $result[$i\
    \ - 1] + $result[$i - 2] + $result[$i + 1];\n        }\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return tri(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(3) !== array(1, 3, 2, 8)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4) !== array(1, 3, 2, 8, 3)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5) !== array(1, 3, 2, 8, 3,\
    \ 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== array(1,\
    \ 3, 2, 8, 3, 15, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(9) !== array(1, 3, 2, 8, 3,\
    \ 15, 4, 24, 5, 35)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120,\
    \ 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0) !== array(1))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !== array(1,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Warning:  Undefined array key 4 in /tmp/tmp2m2ze457.php on line 29\n\
    PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp2m2ze457.php:40\n\
    Stack trace:\n#0 /tmp/tmp2m2ze457.php(52): test()\n#1 {main}\n  thrown in /tmp/tmp2m2ze457.php\
    \ on line 40\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    // tri(3) = [1, 3, 2, 8]\nfunction tri($n) {\n    $result = [];\n    $result[0]\
    \ = 1;\n    $result[1] = 3;\n    $result[2] = 2;\n    for ($i = 3; $i <= $n; $i++)\
    \ {\n        if ($i % 2 == 0) {\n            $result[$i] = 1 + $i / 2;\n     \
    \   } else {\n            $result[$i] = $result[$i - 1] + $result[$i - 2] + $result[$i\
    \ + 1];\n        }\n    }\n    return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return tri(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3)\
    \ !== array(1, 3, 2, 8)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(1, 3, 2, 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5) !== array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1,\
    \ 3, 2, 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(9) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24,\
    \ 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Warning:  Undefined array key 4 in /tmp/tmpdu9ghrf4.php on line 26\n\
    PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpdu9ghrf4.php:37\n\
    Stack trace:\n#0 /tmp/tmpdu9ghrf4.php(49): test()\n#1 {main}\n  thrown in /tmp/tmpdu9ghrf4.php\
    \ on line 37\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    // tri(3) = [1, 3, 2, 8]\nfunction tri($n) {\n    $result = [1, 3, 2];\n    for\
    \ ($i = 3; $i <= $n; $i++) {\n        if ($i % 2 == 0) {\n            $result[]\
    \ = 1 + ($i / 2);\n        } else {\n            $result[] = $result[$i - 1] +\
    \ $result[$i - 2] + $result[$i + 1];\n        }\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return tri(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(3) !== array(1, 3, 2, 8)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4) !== array(1, 3, 2, 8, 3)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5) !== array(1, 3, 2, 8, 3,\
    \ 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== array(1,\
    \ 3, 2, 8, 3, 15, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(9) !== array(1, 3, 2, 8, 3,\
    \ 15, 4, 24, 5, 35)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120,\
    \ 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0) !== array(1))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !== array(1,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Warning:  Undefined array key 4 in /tmp/tmp2vkeao3a.php on line 23\n\
    PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp2vkeao3a.php:34\n\
    Stack trace:\n#0 /tmp/tmp2vkeao3a.php(46): test()\n#1 {main}\n  thrown in /tmp/tmp2vkeao3a.php\
    \ on line 34\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    // tri(3) = [1, 3, 2, 8]\nfunction tri($n) {\n    $arr = [1, 3, 2];\n    for ($i\
    \ = 3; $i <= $n; $i++) {\n        if ($i % 2 == 0) {\n            $arr[] = 1 +\
    \ $i / 2;\n        } else {\n            $arr[] = $arr[$i - 1] + $arr[$i - 2]\
    \ + $arr[$i + 1];\n        }\n    }\n    return $arr;\n}\n\nfunction candidate(...$args)\
    \ {\n    return tri(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3)\
    \ !== array(1, 3, 2, 8)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(1, 3, 2, 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5) !== array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1,\
    \ 3, 2, 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(9) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24,\
    \ 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Warning:  Undefined array key 4 in /tmp/tmp0mmobh0t.php on line 23\n\
    PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp0mmobh0t.php:34\n\
    Stack trace:\n#0 /tmp/tmp0mmobh0t.php(46): test()\n#1 {main}\n  thrown in /tmp/tmp0mmobh0t.php\
    \ on line 34\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    // tri(3) = [1, 3, 2, 8]\nfunction tri($n) {\n    $result = [1, 3, 2];\n    for\
    \ ($i = 3; $i <= $n; $i++) {\n        if ($i % 2 == 0) {\n            $result[]\
    \ = 1 + $i / 2;\n        } else {\n            $result[] = $result[$i - 1] + $result[$i\
    \ - 2] + $result[$i + 1];\n        }\n    }\n    return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return tri(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(3) !== array(1, 3, 2, 8)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== array(1, 3, 2, 8, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5) !== array(1, 3, 2, 8, 3, 15)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(6) !== array(1, 3, 2,\
    \ 8, 3, 15, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(9) !== array(1, 3, 2, 8, 3,\
    \ 15, 4, 24, 5, 35)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120,\
    \ 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0) !== array(1))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !== array(1,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Warning:  Undefined array key 4 in /tmp/tmprts36jqz.php on line 23\n\
    PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmprts36jqz.php:34\n\
    Stack trace:\n#0 /tmp/tmprts36jqz.php(46): test()\n#1 {main}\n  thrown in /tmp/tmprts36jqz.php\
    \ on line 34\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    // tri(3) = [1, 3, 2, 8]\nfunction tri($n) {\n    $result = [];\n    for ($i =\
    \ 0; $i <= $n; $i++) {\n        if ($i == 0) {\n            $result[] = 1;\n \
    \       } elseif ($i == 1) {\n            $result[] = 3;\n        } elseif ($i\
    \ == 2) {\n            $result[] = 2;\n        } elseif ($i % 2 == 0) {\n    \
    \        $result[] = 1 + $i / 2;\n        } else {\n            $result[] = $result[$i\
    \ - 1] + $result[$i - 2] + $result[$i + 1];\n        }\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return tri(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(3) !== array(1, 3, 2, 8)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4) !== array(1, 3, 2, 8, 3)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5) !== array(1, 3, 2, 8, 3,\
    \ 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== array(1,\
    \ 3, 2, 8, 3, 15, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(9) !== array(1, 3, 2, 8, 3,\
    \ 15, 4, 24, 5, 35)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120,\
    \ 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0) !== array(1))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !== array(1,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Warning:  Undefined array key 4 in /tmp/tmpi1d6f554.php on line 29\n\
    PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpi1d6f554.php:40\n\
    Stack trace:\n#0 /tmp/tmpi1d6f554.php(52): test()\n#1 {main}\n  thrown in /tmp/tmpi1d6f554.php\
    \ on line 40\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    // tri(3) = [1, 3, 2, 8]\nfunction tri($n) {\n  $arr = [1, 3, 2];\n  if ($n ==\
    \ 0) {\n    return [];\n  }\n  if ($n == 1) {\n    return [1];\n  }\n  if ($n\
    \ == 2) {\n    return [1, 3];\n  }\n  if ($n == 3) {\n    return [1, 3, 2];\n\
    \  }\n  for ($i = 3; $i <= $n; $i++) {\n    if ($i % 2 == 0) {\n      $arr[] =\
    \ 1 + $i / 2;\n    } else {\n      $arr[] = $arr[$i - 1] + $arr[$i - 2] + $arr[$i\
    \ + 1];\n    }\n  }\n  return $arr;\n}\n\necho \"<pre>\";\nprint_r(tri(3));\n\
    echo \"</pre>\";\nfunction candidate(...$args) {\n    return tri(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3) !== array(1, 3, 2, 8)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(4) !== array(1, 3, 2,\
    \ 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !==\
    \ array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1, 3, 2,\
    \ 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35, 6, 48,\
    \ 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "<pre>Array\n(\n    [0] => 1\n    [1] => 3\n    [2] => 2\n)\n</pre>"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpcfw7zca6.php:49\n\
    Stack trace:\n#0 /tmp/tmpcfw7zca6.php(61): test()\n#1 {main}\n  thrown in /tmp/tmpcfw7zca6.php\
    \ on line 49\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    // tri(3) = [1, 3, 2, 8]\nfunction tri($n) {\n    $arr = [1, 3, 2];\n    for ($i\
    \ = 3; $i <= $n; $i++) {\n        if ($i % 2 == 0) {\n            $arr[] = 1 +\
    \ $i / 2;\n        } else {\n            $arr[] = $arr[$i - 1] + $arr[$i - 2]\
    \ + $arr[$i + 1];\n        }\n    }\n    return $arr;\n}\n\nfunction candidate(...$args)\
    \ {\n    return tri(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3)\
    \ !== array(1, 3, 2, 8)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(1, 3, 2, 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5) !== array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1,\
    \ 3, 2, 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(9) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24,\
    \ 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Warning:  Undefined array key 4 in /tmp/tmpar6vw0m0.php on line 23\n\
    PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpar6vw0m0.php:34\n\
    Stack trace:\n#0 /tmp/tmpar6vw0m0.php(46): test()\n#1 {main}\n  thrown in /tmp/tmpar6vw0m0.php\
    \ on line 34\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    // tri(3) = [1, 3, 2, 8]\nfunction tri($n) {\n    $result = [];\n    for ($i =\
    \ 0; $i <= $n; $i++) {\n        if ($i == 0) {\n            $result[] = 1;\n \
    \       } elseif ($i == 1) {\n            $result[] = 3;\n        } elseif ($i\
    \ == 2) {\n            $result[] = 2;\n        } elseif ($i % 2 == 0) {\n    \
    \        $result[] = 1 + $i / 2;\n        } else {\n            $result[] = $result[$i\
    \ - 1] + $result[$i - 2] + $result[$i + 1];\n        }\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return tri(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(3) !== array(1, 3, 2, 8)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4) !== array(1, 3, 2, 8, 3)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5) !== array(1, 3, 2, 8, 3,\
    \ 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== array(1,\
    \ 3, 2, 8, 3, 15, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(9) !== array(1, 3, 2, 8, 3,\
    \ 15, 4, 24, 5, 35)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120,\
    \ 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0) !== array(1))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !== array(1,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Warning:  Undefined array key 4 in /tmp/tmpynyhng1o.php on line 29\n\
    PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpynyhng1o.php:40\n\
    Stack trace:\n#0 /tmp/tmpynyhng1o.php(52): test()\n#1 {main}\n  thrown in /tmp/tmpynyhng1o.php\
    \ on line 40\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    // tri(3) = [1, 3, 2, 8]\nfunction tri($n) {\n  $arr = [1, 3, 2];\n  for ($i =\
    \ 3; $i <= $n; $i++) {\n    if ($i % 2 == 0) {\n      $arr[] = 1 + $i / 2;\n \
    \   } else {\n      $arr[] = $arr[$i - 1] + $arr[$i - 2] + $arr[$i + 1];\n   \
    \ }\n  }\n  return $arr;\n}\n\nfunction candidate(...$args) {\n    return tri(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3) !== array(1, 3, 2, 8)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(4) !== array(1, 3, 2,\
    \ 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !==\
    \ array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1, 3, 2,\
    \ 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35, 6, 48,\
    \ 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Warning:  Undefined array key 4 in /tmp/tmpefextck5.php on line 23\n\
    PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpefextck5.php:34\n\
    Stack trace:\n#0 /tmp/tmpefextck5.php(46): test()\n#1 {main}\n  thrown in /tmp/tmpefextck5.php\
    \ on line 34\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    // tri(3) = [1, 3, 2, 8]\nfunction tri($n) {\n    $arr = [];\n    for ($i = 0;\
    \ $i <= $n; $i++) {\n        if ($i == 0) {\n            $arr[] = 1;\n       \
    \ } else if ($i == 1) {\n            $arr[] = 3;\n        } else if ($i == 2)\
    \ {\n            $arr[] = 2;\n        } else if ($i % 2 == 0) {\n            $arr[]\
    \ = 1 + $i / 2;\n        } else {\n            $arr[] = $arr[$i - 1] + $arr[$i\
    \ - 2] + $arr[$i + 1];\n        }\n    }\n    return $arr;\n}\n\nfunction candidate(...$args)\
    \ {\n    return tri(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3)\
    \ !== array(1, 3, 2, 8)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(1, 3, 2, 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5) !== array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1,\
    \ 3, 2, 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(9) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24,\
    \ 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Warning:  Undefined array key 4 in /tmp/tmpnjzg6zpi.php on line 29\n\
    PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpnjzg6zpi.php:40\n\
    Stack trace:\n#0 /tmp/tmpnjzg6zpi.php(52): test()\n#1 {main}\n  thrown in /tmp/tmpnjzg6zpi.php\
    \ on line 40\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    // tri(3) = [1, 3, 2, 8]\nfunction tri($n) {\n    $arr = [];\n    for ($i = 0;\
    \ $i <= $n; $i++) {\n        if ($i == 0) {\n            $arr[] = 1;\n       \
    \ } else if ($i == 1) {\n            $arr[] = 3;\n        } else if ($i == 2)\
    \ {\n            $arr[] = 2;\n        } else if ($i % 2 == 0) {\n            $arr[]\
    \ = 1 + ($i / 2);\n        } else {\n            $arr[] = $arr[$i - 1] + $arr[$i\
    \ - 2] + $arr[$i + 1];\n        }\n    }\n    return $arr;\n}\n\nfunction candidate(...$args)\
    \ {\n    return tri(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3)\
    \ !== array(1, 3, 2, 8)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(1, 3, 2, 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5) !== array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1,\
    \ 3, 2, 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(9) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24,\
    \ 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Warning:  Undefined array key 4 in /tmp/tmpe3y_37gt.php on line 29\n\
    PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpe3y_37gt.php:40\n\
    Stack trace:\n#0 /tmp/tmpe3y_37gt.php(52): test()\n#1 {main}\n  thrown in /tmp/tmpe3y_37gt.php\
    \ on line 40\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    // tri(3) = [1, 3, 2, 8]\nfunction tri($n) {\n    $arr = [1, 3, 2];\n    for ($i\
    \ = 3; $i <= $n; $i++) {\n        if ($i % 2 == 0) {\n            $arr[] = 1 +\
    \ $i / 2;\n        } else {\n            $arr[] = $arr[$i - 1] + $arr[$i - 2]\
    \ + $arr[$i + 1];\n        }\n    }\n    return $arr;\n}\n\nfunction candidate(...$args)\
    \ {\n    return tri(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3)\
    \ !== array(1, 3, 2, 8)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(1, 3, 2, 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5) !== array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1,\
    \ 3, 2, 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(9) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24,\
    \ 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Warning:  Undefined array key 4 in /tmp/tmp1s5hdokr.php on line 23\n\
    PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp1s5hdokr.php:34\n\
    Stack trace:\n#0 /tmp/tmp1s5hdokr.php(46): test()\n#1 {main}\n  thrown in /tmp/tmp1s5hdokr.php\
    \ on line 34\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    // tri(3) = [1, 3, 2, 8]\nfunction tri($n) {\n    $result = [];\n    for ($i =\
    \ 0; $i <= $n; $i++) {\n        if ($i == 0) {\n            $result[] = 1;\n \
    \       } elseif ($i == 1) {\n            $result[] = 3;\n        } elseif ($i\
    \ == 2) {\n            $result[] = 2;\n        } elseif ($i % 2 == 0) {\n    \
    \        $result[] = 1 + $i / 2;\n        } else {\n            $result[] = $result[$i\
    \ - 1] + $result[$i - 2] + $result[$i + 1];\n        }\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return tri(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(3) !== array(1, 3, 2, 8)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4) !== array(1, 3, 2, 8, 3)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5) !== array(1, 3, 2, 8, 3,\
    \ 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== array(1,\
    \ 3, 2, 8, 3, 15, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(9) !== array(1, 3, 2, 8, 3,\
    \ 15, 4, 24, 5, 35)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120,\
    \ 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0) !== array(1))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !== array(1,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Warning:  Undefined array key 4 in /tmp/tmp_41nabyd.php on line 29\n\
    PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp_41nabyd.php:40\n\
    Stack trace:\n#0 /tmp/tmp_41nabyd.php(52): test()\n#1 {main}\n  thrown in /tmp/tmp_41nabyd.php\
    \ on line 40\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    // tri(3) = [1, 3, 2, 8]\nfunction tri($n) {\n    $result = [];\n    for ($i =\
    \ 0; $i <= $n; $i++) {\n        if ($i === 0) {\n            $result[] = 1;\n\
    \        } elseif ($i === 1) {\n            $result[] = 3;\n        } elseif ($i\
    \ === 2) {\n            $result[] = 2;\n        } elseif ($i % 2 === 0) {\n  \
    \          $result[] = 1 + $i / 2;\n        } else {\n            $result[] =\
    \ $result[$i - 1] + $result[$i - 2] + $result[$i + 1];\n        }\n    }\n   \
    \ return $result;\n}\n\nfunction candidate(...$args) {\n    return tri(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3) !== array(1, 3, 2, 8)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(4) !== array(1, 3, 2,\
    \ 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !==\
    \ array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1, 3, 2,\
    \ 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35, 6, 48,\
    \ 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Warning:  Undefined array key 4 in /tmp/tmpaqpytqck.php on line 29\n\
    PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpaqpytqck.php:40\n\
    Stack trace:\n#0 /tmp/tmpaqpytqck.php(52): test()\n#1 {main}\n  thrown in /tmp/tmpaqpytqck.php\
    \ on line 40\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    // tri(3) = [1, 3, 2, 8]\nfunction tri($n) {\n    $result = [];\n    for ($i =\
    \ 0; $i <= $n; $i++) {\n        if ($i == 0) {\n            $result[] = 1;\n \
    \       } else if ($i == 1) {\n            $result[] = 3;\n        } else if ($i\
    \ == 2) {\n            $result[] = 2;\n        } else if ($i % 2 == 0) {\n   \
    \         $result[] = 1 + $i / 2;\n        } else {\n            $result[] = $result[$i\
    \ - 1] + $result[$i - 2] + $result[$i + 1];\n        }\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return tri(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(3) !== array(1, 3, 2, 8)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4) !== array(1, 3, 2, 8, 3)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5) !== array(1, 3, 2, 8, 3,\
    \ 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== array(1,\
    \ 3, 2, 8, 3, 15, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(9) !== array(1, 3, 2, 8, 3,\
    \ 15, 4, 24, 5, 35)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120,\
    \ 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0) !== array(1))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !== array(1,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Warning:  Undefined array key 4 in /tmp/tmp5k0981si.php on line 29\n\
    PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp5k0981si.php:40\n\
    Stack trace:\n#0 /tmp/tmp5k0981si.php(52): test()\n#1 {main}\n  thrown in /tmp/tmp5k0981si.php\
    \ on line 40\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    // tri(3) = [1, 3, 2, 8]\nfunction tri($n) {\n  $result = [];\n  for ($i = 0;\
    \ $i <= $n; $i++) {\n    $result[] = tri_recursive($i);\n  }\n  return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return tri(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(3) !== array(1, 3, 2, 8)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4) !== array(1, 3, 2, 8, 3)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5) !== array(1, 3, 2, 8, 3,\
    \ 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== array(1,\
    \ 3, 2, 8, 3, 15, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(9) !== array(1, 3, 2, 8, 3,\
    \ 15, 4, 24, 5, 35)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120,\
    \ 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0) !== array(1))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !== array(1,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Error: Call to undefined function tri_recursive()\
    \ in /tmp/tmpym0ztuet.php:20\nStack trace:\n#0 /tmp/tmpym0ztuet.php(26): tri()\n\
    #1 /tmp/tmpym0ztuet.php(30): candidate()\n#2 /tmp/tmpym0ztuet.php(42): test()\n\
    #3 {main}\n  thrown in /tmp/tmpym0ztuet.php on line 20\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    // tri(3) = [1, 3, 2, 8]\nfunction tri($n) {\n  $result = [];\n  for ($i = 0;\
    \ $i <= $n; $i++) {\n    if ($i === 0) {\n      $result[] = 1;\n    } else if\
    \ ($i === 1) {\n      $result[] = 3;\n    } else if ($i === 2) {\n      $result[]\
    \ = 2;\n    } else if ($i % 2 === 0) {\n      $result[] = 1 + $i / 2;\n    } else\
    \ {\n      $result[] = $result[$i - 1] + $result[$i - 2] + $result[$i + 1];\n\
    \    }\n  }\n  return $result;\n}\n\nfunction candidate(...$args) {\n    return\
    \ tri(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3) !== array(1,\
    \ 3, 2, 8)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !==\
    \ array(1, 3, 2, 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5)\
    \ !== array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1,\
    \ 3, 2, 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(9) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24,\
    \ 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Warning:  Undefined array key 4 in /tmp/tmp48owr319.php on line 29\n\
    PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp48owr319.php:40\n\
    Stack trace:\n#0 /tmp/tmp48owr319.php(52): test()\n#1 {main}\n  thrown in /tmp/tmp48owr319.php\
    \ on line 40\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    // tri(3) = [1, 3, 2, 8]\nfunction tri($n) {\n    $result = [];\n    for ($i =\
    \ 0; $i <= $n; $i++) {\n        if ($i == 0) {\n            $result[] = 1;\n \
    \       } elseif ($i == 1) {\n            $result[] = 3;\n        } elseif ($i\
    \ == 2) {\n            $result[] = 2;\n        } elseif ($i % 2 == 0) {\n    \
    \        $result[] = 1 + $i / 2;\n        } else {\n            $result[] = $result[$i\
    \ - 1] + $result[$i - 2] + $result[$i + 1];\n        }\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return tri(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(3) !== array(1, 3, 2, 8)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4) !== array(1, 3, 2, 8, 3)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5) !== array(1, 3, 2, 8, 3,\
    \ 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== array(1,\
    \ 3, 2, 8, 3, 15, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(9) !== array(1, 3, 2, 8, 3,\
    \ 15, 4, 24, 5, 35)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120,\
    \ 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0) !== array(1))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !== array(1,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Warning:  Undefined array key 4 in /tmp/tmp9sywz50f.php on line 29\n\
    PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp9sywz50f.php:40\n\
    Stack trace:\n#0 /tmp/tmp9sywz50f.php(52): test()\n#1 {main}\n  thrown in /tmp/tmp9sywz50f.php\
    \ on line 40\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    // tri(3) = [1, 3, 2, 8]\nfunction tri($n) {\n  $arr = [1, 3, 2];\n  for ($i =\
    \ 3; $i <= $n; $i++) {\n    if ($i % 2 == 0) {\n      $arr[] = 1 + $i / 2;\n \
    \   } else {\n      $arr[] = $arr[$i - 1] + $arr[$i - 2] + $arr[$i + 1];\n   \
    \ }\n  }\n  return $arr;\n}\n\nfunction candidate(...$args) {\n    return tri(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3) !== array(1, 3, 2, 8)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(4) !== array(1, 3, 2,\
    \ 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !==\
    \ array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1, 3, 2,\
    \ 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35, 6, 48,\
    \ 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Warning:  Undefined array key 4 in /tmp/tmphgkij91l.php on line 23\n\
    PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmphgkij91l.php:34\n\
    Stack trace:\n#0 /tmp/tmphgkij91l.php(46): test()\n#1 {main}\n  thrown in /tmp/tmphgkij91l.php\
    \ on line 34\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    // tri(3) = [1, 3, 2, 8]\nfunction tri($n) {\n    $result = [];\n    for ($i =\
    \ 0; $i <= $n; $i++) {\n        if ($i == 0) {\n            $result[] = 1;\n \
    \       } elseif ($i == 1) {\n            $result[] = 3;\n        } elseif ($i\
    \ == 2) {\n            $result[] = 2;\n        } elseif ($i % 2 == 0) {\n    \
    \        $result[] = 1 + $i / 2;\n        } else {\n            $result[] = $result[$i\
    \ - 1] + $result[$i - 2] + $result[$i + 1];\n        }\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return tri(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(3) !== array(1, 3, 2, 8)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4) !== array(1, 3, 2, 8, 3)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5) !== array(1, 3, 2, 8, 3,\
    \ 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== array(1,\
    \ 3, 2, 8, 3, 15, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(9) !== array(1, 3, 2, 8, 3,\
    \ 15, 4, 24, 5, 35)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120,\
    \ 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0) !== array(1))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !== array(1,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Warning:  Undefined array key 4 in /tmp/tmp9iznb09y.php on line 29\n\
    PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp9iznb09y.php:40\n\
    Stack trace:\n#0 /tmp/tmp9iznb09y.php(52): test()\n#1 {main}\n  thrown in /tmp/tmp9iznb09y.php\
    \ on line 40\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    // tri(3) = [1, 3, 2, 8]\nfunction tri($n) {\n  $result = [];\n  for ($i = 0;\
    \ $i <= $n; $i++) {\n    if ($i == 0) {\n      $result[] = 1;\n    } else if ($i\
    \ == 1) {\n      $result[] = 3;\n    } else if ($i == 2) {\n      $result[] =\
    \ 2;\n    } else if ($i % 2 == 0) {\n      $result[] = 1 + $i / 2;\n    } else\
    \ {\n      $result[] = $result[$i - 1] + $result[$i - 2] + $result[$i + 1];\n\
    \    }\n  }\n  return $result;\n}\n\nfunction candidate(...$args) {\n    return\
    \ tri(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3) !== array(1,\
    \ 3, 2, 8)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !==\
    \ array(1, 3, 2, 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5)\
    \ !== array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1,\
    \ 3, 2, 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(9) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24,\
    \ 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Warning:  Undefined array key 4 in /tmp/tmpjmjn1kkl.php on line 29\n\
    PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpjmjn1kkl.php:40\n\
    Stack trace:\n#0 /tmp/tmpjmjn1kkl.php(52): test()\n#1 {main}\n  thrown in /tmp/tmpjmjn1kkl.php\
    \ on line 40\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    // tri(3) = [1, 3, 2, 8]\nfunction tri($n) {\n    $result = [];\n    for ($i =\
    \ 0; $i <= $n; $i++) {\n        if ($i == 0) {\n            $result[] = 1;\n \
    \       } elseif ($i == 1) {\n            $result[] = 3;\n        } elseif ($i\
    \ == 2) {\n            $result[] = 2;\n        } elseif ($i % 2 == 0) {\n    \
    \        $result[] = 1 + $i / 2;\n        } else {\n            $result[] = $result[$i\
    \ - 1] + $result[$i - 2] + $result[$i + 1];\n        }\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return tri(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(3) !== array(1, 3, 2, 8)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4) !== array(1, 3, 2, 8, 3)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5) !== array(1, 3, 2, 8, 3,\
    \ 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== array(1,\
    \ 3, 2, 8, 3, 15, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(9) !== array(1, 3, 2, 8, 3,\
    \ 15, 4, 24, 5, 35)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120,\
    \ 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0) !== array(1))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !== array(1,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Warning:  Undefined array key 4 in /tmp/tmpkmr4zgpa.php on line 29\n\
    PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpkmr4zgpa.php:40\n\
    Stack trace:\n#0 /tmp/tmpkmr4zgpa.php(52): test()\n#1 {main}\n  thrown in /tmp/tmpkmr4zgpa.php\
    \ on line 40\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    // tri(3) = [1, 3, 2, 8]\nfunction tri($n) {\n    $result = [];\n    for ($i =\
    \ 0; $i <= $n; $i++) {\n        if ($i == 0) {\n            $result[] = 1;\n \
    \       } elseif ($i == 1) {\n            $result[] = 3;\n        } elseif ($i\
    \ == 2) {\n            $result[] = 2;\n        } elseif ($i % 2 == 0) {\n    \
    \        $result[] = 1 + $i / 2;\n        } else {\n            $result[] = $result[$i\
    \ - 1] + $result[$i - 2] + $result[$i + 1];\n        }\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return tri(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(3) !== array(1, 3, 2, 8)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4) !== array(1, 3, 2, 8, 3)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5) !== array(1, 3, 2, 8, 3,\
    \ 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== array(1,\
    \ 3, 2, 8, 3, 15, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(9) !== array(1, 3, 2, 8, 3,\
    \ 15, 4, 24, 5, 35)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120,\
    \ 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0) !== array(1))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !== array(1,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Warning:  Undefined array key 4 in /tmp/tmpnkxkxxx2.php on line 29\n\
    PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpnkxkxxx2.php:40\n\
    Stack trace:\n#0 /tmp/tmpnkxkxxx2.php(52): test()\n#1 {main}\n  thrown in /tmp/tmpnkxkxxx2.php\
    \ on line 40\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    // tri(3) = [1, 3, 2, 8]\nfunction tri($n) {\n  $arr = [1, 3, 2];\n  if ($n ==\
    \ 0) {\n    return [1];\n  } else if ($n == 1) {\n    return [1, 3];\n  } else\
    \ if ($n == 2) {\n    return [1, 3, 2];\n  } else {\n    for ($i = 3; $i <= $n;\
    \ $i++) {\n      if ($i % 2 == 0) {\n        $arr[] = 1 + ($i / 2);\n      } else\
    \ {\n        $arr[] = $arr[$i - 1] + $arr[$i - 2] + $arr[$i + 1];\n      }\n \
    \   }\n  }\n  return $arr;\n}\nprint_r(tri(3));\nfunction candidate(...$args)\
    \ {\n    return tri(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3)\
    \ !== array(1, 3, 2, 8)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(1, 3, 2, 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5) !== array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1,\
    \ 3, 2, 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(9) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24,\
    \ 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "Array\n(\n    [0] => 1\n    [1] => 3\n    [2] => 2\n    [3] => 5\n)\n"
  stderr: "PHP Warning:  Undefined array key 4 in /tmp/tmpubr6x12t.php on line 30\n\
    PHP Warning:  Undefined array key 4 in /tmp/tmpubr6x12t.php on line 30\nPHP Fatal\
    \ error:  Uncaught Exception: Test failed! in /tmp/tmpubr6x12t.php:42\nStack trace:\n\
    #0 /tmp/tmpubr6x12t.php(54): test()\n#1 {main}\n  thrown in /tmp/tmpubr6x12t.php\
    \ on line 42\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    // tri(3) = [1, 3, 2, 8]\nfunction tri($n) {\n    $arr = [];\n    for ($i = 0;\
    \ $i <= $n; $i++) {\n        if ($i == 0) {\n            $arr[] = 1;\n       \
    \ } elseif ($i == 1) {\n            $arr[] = 3;\n        } elseif ($i == 2) {\n\
    \            $arr[] = 2;\n        } elseif ($i % 2 == 0) {\n            $arr[]\
    \ = 1 + ($i / 2);\n        } else {\n            $arr[] = $arr[$i - 1] + $arr[$i\
    \ - 2] + $arr[$i + 1];\n        }\n    }\n    return $arr;\n}\n\nfunction candidate(...$args)\
    \ {\n    return tri(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3)\
    \ !== array(1, 3, 2, 8)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(1, 3, 2, 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5) !== array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1,\
    \ 3, 2, 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(9) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24,\
    \ 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Warning:  Undefined array key 4 in /tmp/tmpux_fn13z.php on line 29\n\
    PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpux_fn13z.php:40\n\
    Stack trace:\n#0 /tmp/tmpux_fn13z.php(52): test()\n#1 {main}\n  thrown in /tmp/tmpux_fn13z.php\
    \ on line 40\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    // tri(3) = [1, 3, 2, 8]\nfunction tri($n) {\n  $tribonacci = [1, 3, 2];\n  for\
    \ ($i = 3; $i <= $n; $i++) {\n    $tribonacci[$i] = $tribonacci[$i - 1] + $tribonacci[$i\
    \ - 2] + $tribonacci[$i - 3];\n  }\n  return $tribonacci;\n}\n\nfunction candidate(...$args)\
    \ {\n    return tri(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3)\
    \ !== array(1, 3, 2, 8)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(1, 3, 2, 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5) !== array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1,\
    \ 3, 2, 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(9) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24,\
    \ 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpwglgxhgh.php:30\n\
    Stack trace:\n#0 /tmp/tmpwglgxhgh.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpwglgxhgh.php\
    \ on line 30\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    // tri(3) = [1, 3, 2, 8]\nfunction tri($n) {\n  $result = [];\n  for ($i = 0;\
    \ $i <= $n; $i++) {\n    if ($i === 0) {\n      $result[] = 1;\n    } else if\
    \ ($i === 1) {\n      $result[] = 3;\n    } else if ($i === 2) {\n      $result[]\
    \ = 2;\n    } else if ($i % 2 === 0) {\n      $result[] = 1 + ($i / 2);\n    }\
    \ else {\n      $result[] = $result[$i - 1] + $result[$i - 2] + $result[$i + 1];\n\
    \    }\n  }\n  return $result;\n}\n\nfunction candidate(...$args) {\n    return\
    \ tri(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3) !== array(1,\
    \ 3, 2, 8)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !==\
    \ array(1, 3, 2, 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5)\
    \ !== array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1,\
    \ 3, 2, 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(9) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24,\
    \ 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Warning:  Undefined array key 4 in /tmp/tmpxeio10b6.php on line 29\n\
    PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpxeio10b6.php:40\n\
    Stack trace:\n#0 /tmp/tmpxeio10b6.php(52): test()\n#1 {main}\n  thrown in /tmp/tmpxeio10b6.php\
    \ on line 40\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    // tri(3) = [1, 3, 2, 8]\nfunction tri($n) {\n    $result = [];\n    for ($i =\
    \ 0; $i <= $n; $i++) {\n        if ($i === 0) {\n            $result[] = 1;\n\
    \        } elseif ($i === 1) {\n            $result[] = 3;\n        } elseif ($i\
    \ === 2) {\n            $result[] = 2;\n        } elseif ($i % 2 === 0) {\n  \
    \          $result[] = 1 + $i / 2;\n        } else {\n            $result[] =\
    \ $result[$i - 1] + $result[$i - 2] + $result[$i + 1];\n        }\n    }\n   \
    \ return $result;\n}\n\nfunction candidate(...$args) {\n    return tri(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3) !== array(1, 3, 2, 8)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(4) !== array(1, 3, 2,\
    \ 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !==\
    \ array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1, 3, 2,\
    \ 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35, 6, 48,\
    \ 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Warning:  Undefined array key 4 in /tmp/tmp_c_s_mlf.php on line 29\n\
    PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp_c_s_mlf.php:40\n\
    Stack trace:\n#0 /tmp/tmp_c_s_mlf.php(52): test()\n#1 {main}\n  thrown in /tmp/tmp_c_s_mlf.php\
    \ on line 40\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    // tri(3) = [1, 3, 2, 8]\nfunction tri($n) {\n    $arr = [];\n    for ($i = 0;\
    \ $i <= $n; $i++) {\n        if ($i == 0) {\n            $arr[] = 1;\n       \
    \ } elseif ($i == 1) {\n            $arr[] = 3;\n        } elseif ($i == 2) {\n\
    \            $arr[] = 2;\n        } elseif ($i % 2 == 0) {\n            $arr[]\
    \ = 1 + $i / 2;\n        } else {\n            $arr[] = $arr[$i - 1] + $arr[$i\
    \ - 2] + $arr[$i + 1];\n        }\n    }\n    return $arr;\n}\n\nfunction candidate(...$args)\
    \ {\n    return tri(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3)\
    \ !== array(1, 3, 2, 8)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(1, 3, 2, 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5) !== array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1,\
    \ 3, 2, 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(9) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24,\
    \ 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Warning:  Undefined array key 4 in /tmp/tmplpub38d3.php on line 29\n\
    PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmplpub38d3.php:40\n\
    Stack trace:\n#0 /tmp/tmplpub38d3.php(52): test()\n#1 {main}\n  thrown in /tmp/tmplpub38d3.php\
    \ on line 40\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    // tri(3) = [1, 3, 2, 8]\nfunction tri($n) {\n    if ($n == 0) {\n        return\
    \ [1];\n    }\n    if ($n == 1) {\n        return [1, 3];\n    }\n    if ($n ==\
    \ 2) {\n        return [1, 3, 2];\n    }\n    $arr = [1, 3, 2];\n    for ($i =\
    \ 3; $i <= $n; $i++) {\n        if ($i % 2 == 0) {\n            $arr[] = 1 + $i\
    \ / 2;\n        } else {\n            $arr[] = $arr[$i - 1] + $arr[$i - 2] + $arr[$i\
    \ + 1];\n        }\n    }\n    return $arr;\n}\n\nfunction candidate(...$args)\
    \ {\n    return tri(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3)\
    \ !== array(1, 3, 2, 8)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(1, 3, 2, 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5) !== array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1,\
    \ 3, 2, 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(9) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24,\
    \ 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Warning:  Undefined array key 4 in /tmp/tmpm3qa1mzd.php on line 32\n\
    PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpm3qa1mzd.php:43\n\
    Stack trace:\n#0 /tmp/tmpm3qa1mzd.php(55): test()\n#1 {main}\n  thrown in /tmp/tmpm3qa1mzd.php\
    \ on line 43\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    // tri(3) = [1, 3, 2, 8]\nfunction tri($n) {\n  $result = [];\n  for ($i = 0;\
    \ $i <= $n; $i++) {\n    if ($i == 0) {\n      $result[] = 1;\n    } else if ($i\
    \ == 1) {\n      $result[] = 3;\n    } else if ($i == 2) {\n      $result[] =\
    \ 2;\n    } else if ($i % 2 == 0) {\n      $result[] = 1 + $i / 2;\n    } else\
    \ {\n      $result[] = $result[$i - 1] + $result[$i - 2] + $result[$i + 1];\n\
    \    }\n  }\n  return $result;\n}\n\nfunction candidate(...$args) {\n    return\
    \ tri(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3) !== array(1,\
    \ 3, 2, 8)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !==\
    \ array(1, 3, 2, 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5)\
    \ !== array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1,\
    \ 3, 2, 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(9) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24,\
    \ 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Warning:  Undefined array key 4 in /tmp/tmpbaol5utd.php on line 29\n\
    PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpbaol5utd.php:40\n\
    Stack trace:\n#0 /tmp/tmpbaol5utd.php(52): test()\n#1 {main}\n  thrown in /tmp/tmpbaol5utd.php\
    \ on line 40\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    // tri(3) = [1, 3, 2, 8]\nfunction tri($n) {\n    $arr = [1, 3, 2];\n    for ($i\
    \ = 3; $i <= $n; $i++) {\n        if ($i % 2 == 0) {\n            $arr[] = 1 +\
    \ $i / 2;\n        } else {\n            $arr[] = $arr[$i - 1] + $arr[$i - 2]\
    \ + $arr[$i + 1];\n        }\n    }\n    return $arr;\n}\n\nfunction candidate(...$args)\
    \ {\n    return tri(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3)\
    \ !== array(1, 3, 2, 8)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(1, 3, 2, 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5) !== array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1,\
    \ 3, 2, 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(9) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24,\
    \ 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Warning:  Undefined array key 4 in /tmp/tmph43wouzm.php on line 23\n\
    PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmph43wouzm.php:34\n\
    Stack trace:\n#0 /tmp/tmph43wouzm.php(46): test()\n#1 {main}\n  thrown in /tmp/tmph43wouzm.php\
    \ on line 34\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    // tri(3) = [1, 3, 2, 8]\nfunction tri($n) {\n    $arr = [1, 3, 2];\n    for ($i\
    \ = 3; $i <= $n; $i++) {\n        if ($i % 2 == 0) {\n            $arr[] = 1 +\
    \ $i / 2;\n        } else {\n            $arr[] = $arr[$i - 1] + $arr[$i - 2]\
    \ + $arr[$i + 1];\n        }\n    }\n    return $arr;\n}\n\necho '<pre>';\nprint_r(tri(3));\n\
    echo '</pre>';\nfunction candidate(...$args) {\n    return tri(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(3) !== array(1, 3, 2, 8)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(4) !== array(1, 3, 2,\
    \ 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !==\
    \ array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1, 3, 2,\
    \ 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35, 6, 48,\
    \ 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "<pre>Array\n(\n    [0] => 1\n    [1] => 3\n    [2] => 2\n    [3] => 5\n\
    )\n</pre>"
  stderr: "PHP Warning:  Undefined array key 4 in /tmp/tmpnba116qt.php on line 23\n\
    PHP Warning:  Undefined array key 4 in /tmp/tmpnba116qt.php on line 23\nPHP Fatal\
    \ error:  Uncaught Exception: Test failed! in /tmp/tmpnba116qt.php:37\nStack trace:\n\
    #0 /tmp/tmpnba116qt.php(49): test()\n#1 {main}\n  thrown in /tmp/tmpnba116qt.php\
    \ on line 37\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    // tri(3) = [1, 3, 2, 8]\nfunction tri($n) {\n    $arr = [1, 3, 2];\n    for ($i\
    \ = 3; $i <= $n; $i++) {\n        if ($i % 2 == 0) {\n            $arr[] = 1 +\
    \ $i / 2;\n        } else {\n            $arr[] = $arr[$i - 1] + $arr[$i - 2]\
    \ + $arr[$i + 1];\n        }\n    }\n    return $arr;\n}\n\nfunction candidate(...$args)\
    \ {\n    return tri(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3)\
    \ !== array(1, 3, 2, 8)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(1, 3, 2, 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5) !== array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1,\
    \ 3, 2, 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(9) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24,\
    \ 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Warning:  Undefined array key 4 in /tmp/tmp__92rme5.php on line 23\n\
    PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp__92rme5.php:34\n\
    Stack trace:\n#0 /tmp/tmp__92rme5.php(46): test()\n#1 {main}\n  thrown in /tmp/tmp__92rme5.php\
    \ on line 34\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    // tri(3) = [1, 3, 2, 8]\nfunction tri($n) {\n    $result = [];\n    for ($i =\
    \ 0; $i <= $n; $i++) {\n        if ($i == 0) {\n            $result[] = 1;\n \
    \       } else if ($i == 1) {\n            $result[] = 3;\n        } else if ($i\
    \ == 2) {\n            $result[] = 2;\n        } else if ($i % 2 == 0) {\n   \
    \         $result[] = 1 + ($i / 2);\n        } else {\n            $result[] =\
    \ $result[$i - 1] + $result[$i - 2] + $result[$i + 1];\n        }\n    }\n   \
    \ return $result;\n}\n\nfunction candidate(...$args) {\n    return tri(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3) !== array(1, 3, 2, 8)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(4) !== array(1, 3, 2,\
    \ 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !==\
    \ array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1, 3, 2,\
    \ 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35, 6, 48,\
    \ 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Warning:  Undefined array key 4 in /tmp/tmpbzwmwni6.php on line 29\n\
    PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpbzwmwni6.php:40\n\
    Stack trace:\n#0 /tmp/tmpbzwmwni6.php(52): test()\n#1 {main}\n  thrown in /tmp/tmpbzwmwni6.php\
    \ on line 40\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    // tri(3) = [1, 3, 2, 8]\nfunction tri($n) {\n    $result = [];\n    for ($i =\
    \ 0; $i <= $n; $i++) {\n        if ($i == 0) {\n            $result[] = 1;\n \
    \       } elseif ($i == 1) {\n            $result[] = 3;\n        } elseif ($i\
    \ == 2) {\n            $result[] = 2;\n        } elseif ($i % 2 == 0) {\n    \
    \        $result[] = 1 + ($i / 2);\n        } else {\n            $result[] =\
    \ $result[$i - 1] + $result[$i - 2] + $result[$i + 1];\n        }\n    }\n   \
    \ return $result;\n}\n\nfunction candidate(...$args) {\n    return tri(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3) !== array(1, 3, 2, 8)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(4) !== array(1, 3, 2,\
    \ 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !==\
    \ array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1, 3, 2,\
    \ 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35, 6, 48,\
    \ 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Warning:  Undefined array key 4 in /tmp/tmpy6e3rwb4.php on line 29\n\
    PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpy6e3rwb4.php:40\n\
    Stack trace:\n#0 /tmp/tmpy6e3rwb4.php(52): test()\n#1 {main}\n  thrown in /tmp/tmpy6e3rwb4.php\
    \ on line 40\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    // tri(3) = [1, 3, 2, 8]\nfunction tri($n) {\n  $arr = [];\n  for ($i = 0; $i\
    \ <= $n; $i++) {\n    if ($i === 0) {\n      $arr[] = 1;\n    } elseif ($i ===\
    \ 1) {\n      $arr[] = 3;\n    } elseif ($i === 2) {\n      $arr[] = 2;\n    }\
    \ elseif ($i % 2 === 0) {\n      $arr[] = 1 + ($i / 2);\n    } else {\n      $arr[]\
    \ = $arr[$i - 1] + $arr[$i - 2] + $arr[$i + 1];\n    }\n  }\n  return $arr;\n\
    }\n\nfunction candidate(...$args) {\n    return tri(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(3) !== array(1, 3, 2, 8)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4) !== array(1, 3, 2, 8, 3)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5) !== array(1, 3, 2, 8, 3,\
    \ 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== array(1,\
    \ 3, 2, 8, 3, 15, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(9) !== array(1, 3, 2, 8, 3,\
    \ 15, 4, 24, 5, 35)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120,\
    \ 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0) !== array(1))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !== array(1,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Warning:  Undefined array key 4 in /tmp/tmpin4jzhyl.php on line 29\n\
    PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpin4jzhyl.php:40\n\
    Stack trace:\n#0 /tmp/tmpin4jzhyl.php(52): test()\n#1 {main}\n  thrown in /tmp/tmpin4jzhyl.php\
    \ on line 40\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    // tri(3) = [1, 3, 2, 8]\nfunction tri($n) {\n    $result = [1, 3, 2];\n    for\
    \ ($i = 3; $i <= $n; $i++) {\n        $result[] = $i % 2 == 0 ? 1 + $i / 2 : $result[$i\
    \ - 1] + $result[$i - 2] + $result[$i + 1];\n    }\n    return $result;\n}\n\n\
    function candidate(...$args) {\n    return tri(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(3) !== array(1, 3, 2, 8)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4) !== array(1, 3, 2, 8, 3)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5) !== array(1, 3, 2, 8, 3,\
    \ 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== array(1,\
    \ 3, 2, 8, 3, 15, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(9) !== array(1, 3, 2, 8, 3,\
    \ 15, 4, 24, 5, 35)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120,\
    \ 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0) !== array(1))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !== array(1,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Warning:  Undefined array key 4 in /tmp/tmp80i5nkux.php on line 20\n\
    PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp80i5nkux.php:30\n\
    Stack trace:\n#0 /tmp/tmp80i5nkux.php(42): test()\n#1 {main}\n  thrown in /tmp/tmp80i5nkux.php\
    \ on line 30\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    // tri(3) = [1, 3, 2, 8]\nfunction tri($n) {\n  $arr = [];\n  for ($i = 0; $i\
    \ <= $n; $i++) {\n    if ($i == 0) {\n      $arr[] = 1;\n    } elseif ($i == 1)\
    \ {\n      $arr[] = 3;\n    } elseif ($i == 2) {\n      $arr[] = 2;\n    } elseif\
    \ ($i % 2 == 0) {\n      $arr[] = 1 + ($i / 2);\n    } else {\n      $arr[] =\
    \ $arr[$i - 1] + $arr[$i - 2] + $arr[$i + 1];\n    }\n  }\n  return $arr;\n}\n\
    \nfunction candidate(...$args) {\n    return tri(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(3) !== array(1, 3, 2, 8)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4) !== array(1, 3, 2, 8, 3)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5) !== array(1, 3, 2, 8, 3,\
    \ 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== array(1,\
    \ 3, 2, 8, 3, 15, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(9) !== array(1, 3, 2, 8, 3,\
    \ 15, 4, 24, 5, 35)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120,\
    \ 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0) !== array(1))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !== array(1,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Warning:  Undefined array key 4 in /tmp/tmpims5759a.php on line 29\n\
    PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpims5759a.php:40\n\
    Stack trace:\n#0 /tmp/tmpims5759a.php(52): test()\n#1 {main}\n  thrown in /tmp/tmpims5759a.php\
    \ on line 40\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    // tri(3) = [1, 3, 2, 8]\nfunction tri($n) {\n    $tri = [1, 3, 2];\n    for ($i\
    \ = 3; $i <= $n; $i++) {\n        $tri[$i] = $i % 2 == 0 ? 1 + $i / 2 : $tri[$i\
    \ - 1] + $tri[$i - 2] + $tri[$i + 1];\n    }\n    return $tri;\n}\n\nfunction\
    \ candidate(...$args) {\n    return tri(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(3) !== array(1, 3, 2, 8)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== array(1, 3, 2, 8, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5) !== array(1, 3, 2, 8, 3, 15)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(6) !== array(1, 3, 2,\
    \ 8, 3, 15, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(9) !== array(1, 3, 2, 8, 3,\
    \ 15, 4, 24, 5, 35)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120,\
    \ 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0) !== array(1))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !== array(1,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Warning:  Undefined array key 4 in /tmp/tmpz4moe_o3.php on line 20\n\
    PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpz4moe_o3.php:30\n\
    Stack trace:\n#0 /tmp/tmpz4moe_o3.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpz4moe_o3.php\
    \ on line 30\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    // tri(3) = [1, 3, 2, 8]\nfunction tri($n) {\n    $result = [];\n    for ($i =\
    \ 0; $i <= $n; $i++) {\n        if ($i == 0) {\n            $result[] = 1;\n \
    \       } elseif ($i == 1) {\n            $result[] = 3;\n        } elseif ($i\
    \ == 2) {\n            $result[] = 2;\n        } elseif ($i % 2 == 0) {\n    \
    \        $result[] = 1 + $i / 2;\n        } else {\n            $result[] = $result[$i\
    \ - 1] + $result[$i - 2] + $result[$i + 1];\n        }\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return tri(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(3) !== array(1, 3, 2, 8)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4) !== array(1, 3, 2, 8, 3)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5) !== array(1, 3, 2, 8, 3,\
    \ 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== array(1,\
    \ 3, 2, 8, 3, 15, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(9) !== array(1, 3, 2, 8, 3,\
    \ 15, 4, 24, 5, 35)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120,\
    \ 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0) !== array(1))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !== array(1,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Warning:  Undefined array key 4 in /tmp/tmp479z4jbq.php on line 29\n\
    PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp479z4jbq.php:40\n\
    Stack trace:\n#0 /tmp/tmp479z4jbq.php(52): test()\n#1 {main}\n  thrown in /tmp/tmp479z4jbq.php\
    \ on line 40\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    // tri(3) = [1, 3, 2, 8]\nfunction tri($n) {\n  if ($n == 0) {\n    return [];\n\
    \  }\n  if ($n == 1) {\n    return [1];\n  }\n  if ($n == 2) {\n    return [1,\
    \ 3];\n  }\n  if ($n == 3) {\n    return [1, 3, 2];\n  }\n  $result = [1, 3, 2];\n\
    \  for ($i = 3; $i < $n; $i++) {\n    if ($i % 2 == 0) {\n      $result[] = 1\
    \ + $i / 2;\n    } else {\n      $result[] = $result[$i - 1] + $result[$i - 2]\
    \ + $result[$i + 1];\n    }\n  }\n  return $result;\n}\n\nfunction candidate(...$args)\
    \ {\n    return tri(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3)\
    \ !== array(1, 3, 2, 8)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(1, 3, 2, 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5) !== array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1,\
    \ 3, 2, 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(9) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24,\
    \ 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmphe30tp56.php:46\n\
    Stack trace:\n#0 /tmp/tmphe30tp56.php(58): test()\n#1 {main}\n  thrown in /tmp/tmphe30tp56.php\
    \ on line 46\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    // tri(3) = [1, 3, 2, 8]\nfunction tri($n) {\n  $arr = [1, 3, 2];\n  for ($i =\
    \ 3; $i <= $n; $i++) {\n    if ($i % 2 == 0) {\n      $arr[] = 1 + $i / 2;\n \
    \   } else {\n      $arr[] = $arr[$i - 1] + $arr[$i - 2] + $arr[$i + 1];\n   \
    \ }\n  }\n  return $arr;\n}\n\nfunction candidate(...$args) {\n    return tri(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3) !== array(1, 3, 2, 8)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(4) !== array(1, 3, 2,\
    \ 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !==\
    \ array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1, 3, 2,\
    \ 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35, 6, 48,\
    \ 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Warning:  Undefined array key 4 in /tmp/tmp91j10cvq.php on line 23\n\
    PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp91j10cvq.php:34\n\
    Stack trace:\n#0 /tmp/tmp91j10cvq.php(46): test()\n#1 {main}\n  thrown in /tmp/tmp91j10cvq.php\
    \ on line 34\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    // tri(3) = [1, 3, 2, 8]\nfunction tri($n) {\n  $arr = [1, 3, 2];\n  for ($i =\
    \ 3; $i <= $n; $i++) {\n    if ($i % 2 == 0) {\n      $arr[] = 1 + ($i / 2);\n\
    \    } else {\n      $arr[] = $arr[$i - 1] + $arr[$i - 2] + $arr[$i + 1];\n  \
    \  }\n  }\n  return $arr;\n}\n\nfunction candidate(...$args) {\n    return tri(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3) !== array(1, 3, 2, 8)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(4) !== array(1, 3, 2,\
    \ 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !==\
    \ array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1, 3, 2,\
    \ 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35, 6, 48,\
    \ 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Warning:  Undefined array key 4 in /tmp/tmp2i6zy0hf.php on line 23\n\
    PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp2i6zy0hf.php:34\n\
    Stack trace:\n#0 /tmp/tmp2i6zy0hf.php(46): test()\n#1 {main}\n  thrown in /tmp/tmp2i6zy0hf.php\
    \ on line 34\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    // tri(3) = [1, 3, 2, 8]\nfunction tri($n) {\n    $result = [];\n    for ($i =\
    \ 0; $i <= $n; $i++) {\n        if ($i == 0) {\n            $result[] = 1;\n \
    \       } elseif ($i == 1) {\n            $result[] = 3;\n        } elseif ($i\
    \ == 2) {\n            $result[] = 2;\n        } elseif ($i % 2 == 0) {\n    \
    \        $result[] = 1 + $i / 2;\n        } else {\n            $result[] = $result[$i\
    \ - 1] + $result[$i - 2] + $result[$i + 1];\n        }\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return tri(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(3) !== array(1, 3, 2, 8)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4) !== array(1, 3, 2, 8, 3)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5) !== array(1, 3, 2, 8, 3,\
    \ 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== array(1,\
    \ 3, 2, 8, 3, 15, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(9) !== array(1, 3, 2, 8, 3,\
    \ 15, 4, 24, 5, 35)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120,\
    \ 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0) !== array(1))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !== array(1,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Warning:  Undefined array key 4 in /tmp/tmpe3qzinu4.php on line 29\n\
    PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpe3qzinu4.php:40\n\
    Stack trace:\n#0 /tmp/tmpe3qzinu4.php(52): test()\n#1 {main}\n  thrown in /tmp/tmpe3qzinu4.php\
    \ on line 40\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    // tri(3) = [1, 3, 2, 8]\nfunction tri($n) {\n  $result = [];\n  for ($i = 0;\
    \ $i <= $n; $i++) {\n    if ($i == 0) {\n      $result[] = 1;\n    } elseif ($i\
    \ == 1) {\n      $result[] = 3;\n    } elseif ($i == 2) {\n      $result[] = 2;\n\
    \    } elseif ($i % 2 == 0) {\n      $result[] = 1 + $i / 2;\n    } else {\n \
    \     $result[] = $result[$i - 1] + $result[$i - 2] + $result[$i + 1];\n    }\n\
    \  }\n  return $result;\n}\n\nfunction candidate(...$args) {\n    return tri(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3) !== array(1, 3, 2, 8)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(4) !== array(1, 3, 2,\
    \ 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !==\
    \ array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1, 3, 2,\
    \ 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35, 6, 48,\
    \ 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Warning:  Undefined array key 4 in /tmp/tmpqaesdqz1.php on line 29\n\
    PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpqaesdqz1.php:40\n\
    Stack trace:\n#0 /tmp/tmpqaesdqz1.php(52): test()\n#1 {main}\n  thrown in /tmp/tmpqaesdqz1.php\
    \ on line 40\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    // tri(3) = [1, 3, 2, 8]\nfunction tri($n) {\n  $result = [];\n  for ($i = 0;\
    \ $i <= $n; $i++) {\n    if ($i == 0) {\n      $result[] = 1;\n    } else if ($i\
    \ == 1) {\n      $result[] = 3;\n    } else if ($i == 2) {\n      $result[] =\
    \ 2;\n    } else if ($i % 2 == 0) {\n      $result[] = 1 + $i / 2;\n    } else\
    \ {\n      $result[] = $result[$i - 1] + $result[$i - 2] + $result[$i + 1];\n\
    \    }\n  }\n  return $result;\n}\n\nfunction candidate(...$args) {\n    return\
    \ tri(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3) !== array(1,\
    \ 3, 2, 8)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !==\
    \ array(1, 3, 2, 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5)\
    \ !== array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1,\
    \ 3, 2, 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(9) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24,\
    \ 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Warning:  Undefined array key 4 in /tmp/tmpqwhqeod1.php on line 29\n\
    PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpqwhqeod1.php:40\n\
    Stack trace:\n#0 /tmp/tmpqwhqeod1.php(52): test()\n#1 {main}\n  thrown in /tmp/tmpqwhqeod1.php\
    \ on line 40\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    // tri(3) = [1, 3, 2, 8]\nfunction tri($n) {\n  $result = [];\n  for ($i = 0;\
    \ $i <= $n; $i++) {\n    if ($i === 0) {\n      $result[] = 1;\n    } else if\
    \ ($i === 1) {\n      $result[] = 3;\n    } else if ($i === 2) {\n      $result[]\
    \ = 2;\n    } else if ($i % 2 === 0) {\n      $result[] = 1 + ($i / 2);\n    }\
    \ else {\n      $result[] = $result[$i - 1] + $result[$i - 2] + $result[$i + 1];\n\
    \    }\n  }\n  return $result;\n}\n\nfunction candidate(...$args) {\n    return\
    \ tri(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3) !== array(1,\
    \ 3, 2, 8)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !==\
    \ array(1, 3, 2, 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5)\
    \ !== array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1,\
    \ 3, 2, 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(9) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24,\
    \ 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Warning:  Undefined array key 4 in /tmp/tmpc2setedo.php on line 29\n\
    PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpc2setedo.php:40\n\
    Stack trace:\n#0 /tmp/tmpc2setedo.php(52): test()\n#1 {main}\n  thrown in /tmp/tmpc2setedo.php\
    \ on line 40\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    // tri(3) = [1, 3, 2, 8]\nfunction tri($n) {\n    $result = [1, 3, 2];\n    for\
    \ ($i = 3; $i <= $n; $i++) {\n        $result[] = ($i % 2 == 0) ? 1 + $i / 2 :\
    \ $result[$i - 1] + $result[$i - 2] + $result[$i + 1];\n    }\n    return $result;\n\
    }\n\necho \"<pre>\";\nprint_r(tri(3));\necho \"</pre>\";\nfunction candidate(...$args)\
    \ {\n    return tri(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3)\
    \ !== array(1, 3, 2, 8)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(1, 3, 2, 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5) !== array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1,\
    \ 3, 2, 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(9) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24,\
    \ 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "<pre>Array\n(\n    [0] => 1\n    [1] => 3\n    [2] => 2\n    [3] => 5\n\
    )\n</pre>"
  stderr: "PHP Warning:  Undefined array key 4 in /tmp/tmpxlernpcl.php on line 20\n\
    PHP Warning:  Undefined array key 4 in /tmp/tmpxlernpcl.php on line 20\nPHP Fatal\
    \ error:  Uncaught Exception: Test failed! in /tmp/tmpxlernpcl.php:33\nStack trace:\n\
    #0 /tmp/tmpxlernpcl.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpxlernpcl.php\
    \ on line 33\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    // tri(3) = [1, 3, 2, 8]\nfunction tri($n) {\n    $result = [];\n    for ($i =\
    \ 0; $i <= $n; $i++) {\n        if ($i == 0) {\n            $result[] = 1;\n \
    \       } elseif ($i == 1) {\n            $result[] = 3;\n        } elseif ($i\
    \ == 2) {\n            $result[] = 2;\n        } elseif ($i % 2 == 0) {\n    \
    \        $result[] = 1 + $i / 2;\n        } else {\n            $result[] = $result[$i\
    \ - 1] + $result[$i - 2] + $result[$i + 1];\n        }\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return tri(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(3) !== array(1, 3, 2, 8)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4) !== array(1, 3, 2, 8, 3)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5) !== array(1, 3, 2, 8, 3,\
    \ 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== array(1,\
    \ 3, 2, 8, 3, 15, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(9) !== array(1, 3, 2, 8, 3,\
    \ 15, 4, 24, 5, 35)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120,\
    \ 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0) !== array(1))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !== array(1,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Warning:  Undefined array key 4 in /tmp/tmpqja8lglw.php on line 29\n\
    PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpqja8lglw.php:40\n\
    Stack trace:\n#0 /tmp/tmpqja8lglw.php(52): test()\n#1 {main}\n  thrown in /tmp/tmpqja8lglw.php\
    \ on line 40\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    // tri(3) = [1, 3, 2, 8]\nfunction tri($n) {\n    $arr = [1, 3, 2];\n    for ($i\
    \ = 3; $i <= $n; $i++) {\n        if ($i % 2 == 0) {\n            $arr[] = 1 +\
    \ $i / 2;\n        } else {\n            $arr[] = $arr[$i - 1] + $arr[$i - 2]\
    \ + $arr[$i + 1];\n        }\n    }\n    return $arr;\n}\n\nfunction candidate(...$args)\
    \ {\n    return tri(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3)\
    \ !== array(1, 3, 2, 8)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(1, 3, 2, 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5) !== array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1,\
    \ 3, 2, 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(9) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24,\
    \ 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Warning:  Undefined array key 4 in /tmp/tmpjk3hwbcs.php on line 23\n\
    PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpjk3hwbcs.php:34\n\
    Stack trace:\n#0 /tmp/tmpjk3hwbcs.php(46): test()\n#1 {main}\n  thrown in /tmp/tmpjk3hwbcs.php\
    \ on line 34\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    // tri(3) = [1, 3, 2, 8]\nfunction tri($n) {\n    $result = [];\n    for ($i =\
    \ 0; $i <= $n; $i++) {\n        if ($i == 0) {\n            $result[] = 1;\n \
    \       } elseif ($i == 1) {\n            $result[] = 3;\n        } elseif ($i\
    \ == 2) {\n            $result[] = 2;\n        } elseif ($i % 2 == 0) {\n    \
    \        $result[] = 1 + $i / 2;\n        } else {\n            $result[] = $result[$i\
    \ - 1] + $result[$i - 2] + $result[$i + 1];\n        }\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return tri(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(3) !== array(1, 3, 2, 8)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4) !== array(1, 3, 2, 8, 3)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5) !== array(1, 3, 2, 8, 3,\
    \ 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== array(1,\
    \ 3, 2, 8, 3, 15, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(9) !== array(1, 3, 2, 8, 3,\
    \ 15, 4, 24, 5, 35)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120,\
    \ 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0) !== array(1))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !== array(1,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Warning:  Undefined array key 4 in /tmp/tmp0jumftmf.php on line 29\n\
    PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp0jumftmf.php:40\n\
    Stack trace:\n#0 /tmp/tmp0jumftmf.php(52): test()\n#1 {main}\n  thrown in /tmp/tmp0jumftmf.php\
    \ on line 40\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    // tri(3) = [1, 3, 2, 8]\nfunction tri($n) {\n    $arr = [1, 3, 2];\n    for ($i\
    \ = 0; $i < $n; $i++) {\n        if ($i % 2 == 0) {\n            $arr[] = 1 +\
    \ $i / 2;\n        } else {\n            $arr[] = $arr[$i - 1] + $arr[$i - 2]\
    \ + $arr[$i + 1];\n        }\n    }\n    return $arr;\n}\n\necho \"<pre>\";\n\
    print_r(tri(3));\necho \"</pre>\";\nfunction candidate(...$args) {\n    return\
    \ tri(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3) !== array(1,\
    \ 3, 2, 8)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !==\
    \ array(1, 3, 2, 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5)\
    \ !== array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1,\
    \ 3, 2, 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(9) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24,\
    \ 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "<pre>Array\n(\n    [0] => 1\n    [1] => 3\n    [2] => 2\n    [3] => 1\n\
    \    [4] => 3\n    [5] => 2\n)\n</pre>"
  stderr: "PHP Warning:  Undefined array key -1 in /tmp/tmp_7mh8s6e.php on line 23\n\
    PHP Warning:  Undefined array key -1 in /tmp/tmp_7mh8s6e.php on line 23\nPHP Fatal\
    \ error:  Uncaught Exception: Test failed! in /tmp/tmp_7mh8s6e.php:37\nStack trace:\n\
    #0 /tmp/tmp_7mh8s6e.php(49): test()\n#1 {main}\n  thrown in /tmp/tmp_7mh8s6e.php\
    \ on line 37\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    // tri(3) = [1, 3, 2, 8]\nfunction tri($n) {\n    $result = [];\n    for ($i =\
    \ 0; $i <= $n; $i++) {\n        if ($i == 0) {\n            $result[] = 1;\n \
    \       } else if ($i == 1) {\n            $result[] = 3;\n        } else if ($i\
    \ == 2) {\n            $result[] = 2;\n        } else if ($i % 2 == 0) {\n   \
    \         $result[] = 1 + ($i / 2);\n        } else {\n            $result[] =\
    \ $result[$i - 1] + $result[$i - 2] + $result[$i + 1];\n        }\n    }\n   \
    \ return $result;\n}\n\nfunction candidate(...$args) {\n    return tri(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3) !== array(1, 3, 2, 8)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(4) !== array(1, 3, 2,\
    \ 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !==\
    \ array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1, 3, 2,\
    \ 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35, 6, 48,\
    \ 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Warning:  Undefined array key 4 in /tmp/tmp6tlrxaz0.php on line 29\n\
    PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp6tlrxaz0.php:40\n\
    Stack trace:\n#0 /tmp/tmp6tlrxaz0.php(52): test()\n#1 {main}\n  thrown in /tmp/tmp6tlrxaz0.php\
    \ on line 40\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    // tri(3) = [1, 3, 2, 8]\nfunction tri($n) {\n    $result = [];\n    for ($i =\
    \ 0; $i <= $n; $i++) {\n        if ($i == 0) {\n            $result[] = 1;\n \
    \       } elseif ($i == 1) {\n            $result[] = 3;\n        } elseif ($i\
    \ == 2) {\n            $result[] = 2;\n        } elseif ($i % 2 == 0) {\n    \
    \        $result[] = 1 + ($i / 2);\n        } else {\n            $result[] =\
    \ $result[$i - 1] + $result[$i - 2] + $result[$i + 1];\n        }\n    }\n   \
    \ return $result;\n}\n\nfunction candidate(...$args) {\n    return tri(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3) !== array(1, 3, 2, 8)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(4) !== array(1, 3, 2,\
    \ 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !==\
    \ array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1, 3, 2,\
    \ 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35, 6, 48,\
    \ 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Warning:  Undefined array key 4 in /tmp/tmpzjkr3ddx.php on line 29\n\
    PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpzjkr3ddx.php:40\n\
    Stack trace:\n#0 /tmp/tmpzjkr3ddx.php(52): test()\n#1 {main}\n  thrown in /tmp/tmpzjkr3ddx.php\
    \ on line 40\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    // tri(3) = [1, 3, 2, 8]\nfunction tri($n) {\n    $arr = [];\n    for ($i = 0;\
    \ $i <= $n; $i++) {\n        if ($i == 0) {\n            $arr[] = 1;\n       \
    \ } elseif ($i == 1) {\n            $arr[] = 3;\n        } elseif ($i == 2) {\n\
    \            $arr[] = 2;\n        } elseif ($i % 2 == 0) {\n            $arr[]\
    \ = 1 + $i / 2;\n        } else {\n            $arr[] = $arr[$i - 1] + $arr[$i\
    \ - 2] + $arr[$i + 1];\n        }\n    }\n    return $arr;\n}\n\nfunction candidate(...$args)\
    \ {\n    return tri(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3)\
    \ !== array(1, 3, 2, 8)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(1, 3, 2, 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5) !== array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1,\
    \ 3, 2, 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(9) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24,\
    \ 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Warning:  Undefined array key 4 in /tmp/tmp6nk_7h5g.php on line 29\n\
    PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp6nk_7h5g.php:40\n\
    Stack trace:\n#0 /tmp/tmp6nk_7h5g.php(52): test()\n#1 {main}\n  thrown in /tmp/tmp6nk_7h5g.php\
    \ on line 40\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    // tri(3) = [1, 3, 2, 8]\nfunction tri($n) {\n    $result = [];\n    for ($i =\
    \ 0; $i <= $n; $i++) {\n        if ($i == 0) {\n            $result[] = 1;\n \
    \       } elseif ($i == 1) {\n            $result[] = 3;\n        } elseif ($i\
    \ == 2) {\n            $result[] = 2;\n        } elseif ($i % 2 == 0) {\n    \
    \        $result[] = 1 + $i / 2;\n        } else {\n            $result[] = $result[$i\
    \ - 1] + $result[$i - 2] + $result[$i + 1];\n        }\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return tri(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(3) !== array(1, 3, 2, 8)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4) !== array(1, 3, 2, 8, 3)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5) !== array(1, 3, 2, 8, 3,\
    \ 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== array(1,\
    \ 3, 2, 8, 3, 15, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(9) !== array(1, 3, 2, 8, 3,\
    \ 15, 4, 24, 5, 35)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120,\
    \ 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0) !== array(1))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !== array(1,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Warning:  Undefined array key 4 in /tmp/tmpvt39mq7d.php on line 29\n\
    PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpvt39mq7d.php:40\n\
    Stack trace:\n#0 /tmp/tmpvt39mq7d.php(52): test()\n#1 {main}\n  thrown in /tmp/tmpvt39mq7d.php\
    \ on line 40\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    // tri(3) = [1, 3, 2, 8]\nfunction tri($n) {\n    $result = [];\n    for ($i =\
    \ 0; $i <= $n; $i++) {\n        if ($i == 0) {\n            $result[] = 1;\n \
    \       } elseif ($i == 1) {\n            $result[] = 3;\n        } elseif ($i\
    \ == 2) {\n            $result[] = 2;\n        } elseif ($i % 2 == 0) {\n    \
    \        $result[] = 1 + $i / 2;\n        } else {\n            $result[] = $result[$i\
    \ - 1] + $result[$i - 2] + $result[$i + 1];\n        }\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return tri(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(3) !== array(1, 3, 2, 8)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4) !== array(1, 3, 2, 8, 3)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5) !== array(1, 3, 2, 8, 3,\
    \ 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== array(1,\
    \ 3, 2, 8, 3, 15, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(9) !== array(1, 3, 2, 8, 3,\
    \ 15, 4, 24, 5, 35)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120,\
    \ 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0) !== array(1))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !== array(1,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Warning:  Undefined array key 4 in /tmp/tmpsb0tcfh0.php on line 29\n\
    PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpsb0tcfh0.php:40\n\
    Stack trace:\n#0 /tmp/tmpsb0tcfh0.php(52): test()\n#1 {main}\n  thrown in /tmp/tmpsb0tcfh0.php\
    \ on line 40\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    // tri(3) = [1, 3, 2, 8]\nfunction tri($n) {\n  $arr = [];\n  for ($i = 0; $i\
    \ <= $n; $i++) {\n    if ($i == 0) {\n      $arr[] = 1;\n    } elseif ($i == 1)\
    \ {\n      $arr[] = 3;\n    } elseif ($i == 2) {\n      $arr[] = 2;\n    } elseif\
    \ ($i % 2 == 0) {\n      $arr[] = 1 + ($i / 2);\n    } else {\n      $arr[] =\
    \ $arr[$i - 1] + $arr[$i - 2] + $arr[$i + 1];\n    }\n  }\n  return $arr;\n}\n\
    function candidate(...$args) {\n    return tri(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(3) !== array(1, 3, 2, 8)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4) !== array(1, 3, 2, 8, 3)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5) !== array(1, 3, 2, 8, 3,\
    \ 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== array(1,\
    \ 3, 2, 8, 3, 15, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(9) !== array(1, 3, 2, 8, 3,\
    \ 15, 4, 24, 5, 35)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120,\
    \ 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0) !== array(1))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !== array(1,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Warning:  Undefined array key 4 in /tmp/tmp3thn0a2r.php on line 29\n\
    PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp3thn0a2r.php:39\n\
    Stack trace:\n#0 /tmp/tmp3thn0a2r.php(51): test()\n#1 {main}\n  thrown in /tmp/tmp3thn0a2r.php\
    \ on line 39\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    // tri(3) = [1, 3, 2, 8]\nfunction tri($n) {\n    $result = [];\n    for ($i =\
    \ 0; $i <= $n; $i++) {\n        if ($i == 0) {\n            $result[] = 1;\n \
    \       } else if ($i == 1) {\n            $result[] = 3;\n        } else if ($i\
    \ == 2) {\n            $result[] = 2;\n        } else if ($i % 2 == 0) {\n   \
    \         $result[] = 1 + $i / 2;\n        } else {\n            $result[] = $result[$i\
    \ - 1] + $result[$i - 2] + $result[$i + 1];\n        }\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return tri(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(3) !== array(1, 3, 2, 8)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4) !== array(1, 3, 2, 8, 3)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5) !== array(1, 3, 2, 8, 3,\
    \ 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== array(1,\
    \ 3, 2, 8, 3, 15, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(9) !== array(1, 3, 2, 8, 3,\
    \ 15, 4, 24, 5, 35)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120,\
    \ 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0) !== array(1))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !== array(1,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Warning:  Undefined array key 4 in /tmp/tmp4yr031d1.php on line 29\n\
    PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp4yr031d1.php:40\n\
    Stack trace:\n#0 /tmp/tmp4yr031d1.php(52): test()\n#1 {main}\n  thrown in /tmp/tmp4yr031d1.php\
    \ on line 40\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    // tri(3) = [1, 3, 2, 8]\nfunction tri($n) {\n  $arr = [1, 3, 2];\n  for ($i =\
    \ 3; $i <= $n; $i++) {\n    if ($i % 2 == 0) {\n      $arr[] = 1 + ($i / 2);\n\
    \    } else {\n      $arr[] = $arr[$i - 1] + $arr[$i - 2] + $arr[$i + 1];\n  \
    \  }\n  }\n  return $arr;\n}\n\nfunction candidate(...$args) {\n    return tri(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3) !== array(1, 3, 2, 8)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(4) !== array(1, 3, 2,\
    \ 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !==\
    \ array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1, 3, 2,\
    \ 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35, 6, 48,\
    \ 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Warning:  Undefined array key 4 in /tmp/tmpv_j7gl_v.php on line 23\n\
    PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpv_j7gl_v.php:34\n\
    Stack trace:\n#0 /tmp/tmpv_j7gl_v.php(46): test()\n#1 {main}\n  thrown in /tmp/tmpv_j7gl_v.php\
    \ on line 34\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    // tri(3) = [1, 3, 2, 8]\nfunction tri($n) {\n    $result = [];\n    for ($i =\
    \ 0; $i <= $n; $i++) {\n        if ($i == 0) {\n            $result[] = 1;\n \
    \       } elseif ($i == 1) {\n            $result[] = 3;\n        } elseif ($i\
    \ == 2) {\n            $result[] = 2;\n        } elseif ($i % 2 == 0) {\n    \
    \        $result[] = 1 + ($i / 2);\n        } else {\n            $result[] =\
    \ $result[$i - 1] + $result[$i - 2] + $result[$i + 1];\n        }\n    }\n   \
    \ return $result;\n}\n\nfunction candidate(...$args) {\n    return tri(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3) !== array(1, 3, 2, 8)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(4) !== array(1, 3, 2,\
    \ 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !==\
    \ array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1, 3, 2,\
    \ 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35, 6, 48,\
    \ 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Warning:  Undefined array key 4 in /tmp/tmpl8f29_m6.php on line 29\n\
    PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpl8f29_m6.php:40\n\
    Stack trace:\n#0 /tmp/tmpl8f29_m6.php(52): test()\n#1 {main}\n  thrown in /tmp/tmpl8f29_m6.php\
    \ on line 40\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    // tri(3) = [1, 3, 2, 8]\nfunction tri($n) {\n    $result = [];\n    for ($i =\
    \ 0; $i <= $n; $i++) {\n        if ($i == 0) {\n            $result[] = 1;\n \
    \       } else if ($i == 1) {\n            $result[] = 3;\n        } else if ($i\
    \ == 2) {\n            $result[] = 2;\n        } else if ($i % 2 == 0) {\n   \
    \         $result[] = 1 + ($i / 2);\n        } else {\n            $result[] =\
    \ $result[$i - 1] + $result[$i - 2] + $result[$i + 1];\n        }\n    }\n   \
    \ return $result;\n}\n\nfunction candidate(...$args) {\n    return tri(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3) !== array(1, 3, 2, 8)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(4) !== array(1, 3, 2,\
    \ 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !==\
    \ array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1, 3, 2,\
    \ 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35, 6, 48,\
    \ 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Warning:  Undefined array key 4 in /tmp/tmp2lg6h3v4.php on line 29\n\
    PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp2lg6h3v4.php:40\n\
    Stack trace:\n#0 /tmp/tmp2lg6h3v4.php(52): test()\n#1 {main}\n  thrown in /tmp/tmp2lg6h3v4.php\
    \ on line 40\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    // tri(3) = [1, 3, 2, 8]\nfunction tri($n) {\n    $result = [];\n    for ($i =\
    \ 0; $i <= $n; $i++) {\n        if ($i == 0) {\n            $result[] = 1;\n \
    \       } elseif ($i == 1) {\n            $result[] = 3;\n        } elseif ($i\
    \ == 2) {\n            $result[] = 2;\n        } elseif ($i % 2 == 0) {\n    \
    \        $result[] = 1 + $i / 2;\n        } else {\n            $result[] = $result[$i\
    \ - 1] + $result[$i - 2] + $result[$i + 1];\n        }\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return tri(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(3) !== array(1, 3, 2, 8)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4) !== array(1, 3, 2, 8, 3)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5) !== array(1, 3, 2, 8, 3,\
    \ 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== array(1,\
    \ 3, 2, 8, 3, 15, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(9) !== array(1, 3, 2, 8, 3,\
    \ 15, 4, 24, 5, 35)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120,\
    \ 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0) !== array(1))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !== array(1,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Warning:  Undefined array key 4 in /tmp/tmpc802wkqv.php on line 29\n\
    PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpc802wkqv.php:40\n\
    Stack trace:\n#0 /tmp/tmpc802wkqv.php(52): test()\n#1 {main}\n  thrown in /tmp/tmpc802wkqv.php\
    \ on line 40\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    // tri(3) = [1, 3, 2, 8]\nfunction tri($n) {\n    $arr = [1, 3, 2];\n    for ($i\
    \ = 3; $i <= $n; $i++) {\n        if ($i % 2 == 0) {\n            $arr[] = 1 +\
    \ $i / 2;\n        } else {\n            $arr[] = $arr[$i - 1] + $arr[$i - 2]\
    \ + $arr[$i + 1];\n        }\n    }\n    return $arr;\n}\n\nfunction candidate(...$args)\
    \ {\n    return tri(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3)\
    \ !== array(1, 3, 2, 8)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(1, 3, 2, 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5) !== array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1,\
    \ 3, 2, 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(9) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24,\
    \ 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Warning:  Undefined array key 4 in /tmp/tmpcu6w0jy8.php on line 23\n\
    PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpcu6w0jy8.php:34\n\
    Stack trace:\n#0 /tmp/tmpcu6w0jy8.php(46): test()\n#1 {main}\n  thrown in /tmp/tmpcu6w0jy8.php\
    \ on line 34\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    // tri(3) = [1, 3, 2, 8]\nfunction tri($n) {\n    $result = [];\n    for ($i =\
    \ 0; $i <= $n; $i++) {\n        if ($i == 0) {\n            $result[] = 1;\n \
    \       } else if ($i == 1) {\n            $result[] = 3;\n        } else if ($i\
    \ == 2) {\n            $result[] = 2;\n        } else if ($i % 2 == 0) {\n   \
    \         $result[] = 1 + $i / 2;\n        } else {\n            $result[] = $result[$i\
    \ - 1] + $result[$i - 2] + $result[$i + 1];\n        }\n    }\n    return $result;\n\
    }\nprint_r(tri(3));\nfunction candidate(...$args) {\n    return tri(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3) !== array(1, 3, 2, 8)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(4) !== array(1, 3, 2,\
    \ 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !==\
    \ array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1, 3, 2,\
    \ 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35, 6, 48,\
    \ 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "Array\n(\n    [0] => 1\n    [1] => 3\n    [2] => 2\n    [3] => 5\n)\n"
  stderr: "PHP Warning:  Undefined array key 4 in /tmp/tmpx6trv_vk.php on line 29\n\
    PHP Warning:  Undefined array key 4 in /tmp/tmpx6trv_vk.php on line 29\nPHP Fatal\
    \ error:  Uncaught Exception: Test failed! in /tmp/tmpx6trv_vk.php:40\nStack trace:\n\
    #0 /tmp/tmpx6trv_vk.php(52): test()\n#1 {main}\n  thrown in /tmp/tmpx6trv_vk.php\
    \ on line 40\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    // tri(3) = [1, 3, 2, 8]\nfunction tri($n) {\n  $arr = [];\n  for ($i = 0; $i\
    \ <= $n; $i++) {\n    if ($i == 0) {\n      $arr[] = 1;\n    } else if ($i ==\
    \ 1) {\n      $arr[] = 3;\n    } else if ($i == 2) {\n      $arr[] = 2;\n    }\
    \ else if ($i % 2 == 0) {\n      $arr[] = 1 + $i / 2;\n    } else {\n      $arr[]\
    \ = $arr[$i - 1] + $arr[$i - 2] + $arr[$i + 1];\n    }\n  }\n  return $arr;\n\
    }\n\nfunction candidate(...$args) {\n    return tri(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(3) !== array(1, 3, 2, 8)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4) !== array(1, 3, 2, 8, 3)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5) !== array(1, 3, 2, 8, 3,\
    \ 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== array(1,\
    \ 3, 2, 8, 3, 15, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(9) !== array(1, 3, 2, 8, 3,\
    \ 15, 4, 24, 5, 35)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120,\
    \ 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0) !== array(1))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !== array(1,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Warning:  Undefined array key 4 in /tmp/tmpxepwxv0v.php on line 29\n\
    PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpxepwxv0v.php:40\n\
    Stack trace:\n#0 /tmp/tmpxepwxv0v.php(52): test()\n#1 {main}\n  thrown in /tmp/tmpxepwxv0v.php\
    \ on line 40\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    // tri(3) = [1, 3, 2, 8]\nfunction tri($n) {\n    $result = [];\n    for ($i =\
    \ 0; $i <= $n; $i++) {\n        if ($i == 0) {\n            $result[] = 1;\n \
    \       } elseif ($i == 1) {\n            $result[] = 3;\n        } elseif ($i\
    \ == 2) {\n            $result[] = 2;\n        } elseif ($i % 2 == 0) {\n    \
    \        $result[] = 1 + $i / 2;\n        } else {\n            $result[] = $result[$i\
    \ - 1] + $result[$i - 2] + $result[$i + 1];\n        }\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return tri(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(3) !== array(1, 3, 2, 8)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4) !== array(1, 3, 2, 8, 3)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5) !== array(1, 3, 2, 8, 3,\
    \ 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== array(1,\
    \ 3, 2, 8, 3, 15, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(9) !== array(1, 3, 2, 8, 3,\
    \ 15, 4, 24, 5, 35)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120,\
    \ 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0) !== array(1))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !== array(1,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Warning:  Undefined array key 4 in /tmp/tmpjhxsn601.php on line 29\n\
    PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpjhxsn601.php:40\n\
    Stack trace:\n#0 /tmp/tmpjhxsn601.php(52): test()\n#1 {main}\n  thrown in /tmp/tmpjhxsn601.php\
    \ on line 40\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    // tri(3) = [1, 3, 2, 8]\nfunction tri($n) {\n  $arr = [];\n  for ($i = 0; $i\
    \ <= $n; $i++) {\n    if ($i == 0) {\n      $arr[] = 1;\n    } else if ($i ==\
    \ 1) {\n      $arr[] = 3;\n    } else if ($i == 2) {\n      $arr[] = 2;\n    }\
    \ else if ($i % 2 == 0) {\n      $arr[] = 1 + $i / 2;\n    } else {\n      $arr[]\
    \ = $arr[$i - 1] + $arr[$i - 2] + $arr[$i + 1];\n    }\n  }\n  return $arr;\n\
    }\n\nfunction candidate(...$args) {\n    return tri(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(3) !== array(1, 3, 2, 8)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4) !== array(1, 3, 2, 8, 3)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5) !== array(1, 3, 2, 8, 3,\
    \ 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== array(1,\
    \ 3, 2, 8, 3, 15, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(9) !== array(1, 3, 2, 8, 3,\
    \ 15, 4, 24, 5, 35)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120,\
    \ 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0) !== array(1))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !== array(1,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Warning:  Undefined array key 4 in /tmp/tmp_oxmz10y.php on line 29\n\
    PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp_oxmz10y.php:40\n\
    Stack trace:\n#0 /tmp/tmp_oxmz10y.php(52): test()\n#1 {main}\n  thrown in /tmp/tmp_oxmz10y.php\
    \ on line 40\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    // tri(3) = [1, 3, 2, 8]\nfunction tri($n) {\n    $result = [1, 3, 2];\n    for\
    \ ($i = 3; $i <= $n; $i++) {\n        $result[] = $i % 2 === 0 ? 1 + $i / 2 :\
    \ $result[$i - 1] + $result[$i - 2] + $result[$i + 1];\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return tri(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(3) !== array(1, 3, 2, 8)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4) !== array(1, 3, 2, 8, 3)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5) !== array(1, 3, 2, 8, 3,\
    \ 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== array(1,\
    \ 3, 2, 8, 3, 15, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(9) !== array(1, 3, 2, 8, 3,\
    \ 15, 4, 24, 5, 35)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120,\
    \ 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0) !== array(1))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !== array(1,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Warning:  Undefined array key 4 in /tmp/tmpwfhrf70h.php on line 20\n\
    PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpwfhrf70h.php:30\n\
    Stack trace:\n#0 /tmp/tmpwfhrf70h.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpwfhrf70h.php\
    \ on line 30\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    // tri(3) = [1, 3, 2, 8]\nfunction tri($n) {\n    $result = [];\n    for ($i =\
    \ 0; $i <= $n; $i++) {\n        if ($i === 0) {\n            $result[] = 1;\n\
    \        } else if ($i === 1) {\n            $result[] = 3;\n        } else if\
    \ ($i === 2) {\n            $result[] = 2;\n        } else if ($i % 2 === 0) {\n\
    \            $result[] = 1 + $i / 2;\n        } else {\n            $result[]\
    \ = $result[$i - 1] + $result[$i - 2] + $result[$i + 1];\n        }\n    }\n \
    \   return $result;\n}\n\nfunction candidate(...$args) {\n    return tri(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3) !== array(1, 3, 2, 8)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(4) !== array(1, 3, 2,\
    \ 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !==\
    \ array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1, 3, 2,\
    \ 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35, 6, 48,\
    \ 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Warning:  Undefined array key 4 in /tmp/tmp3elfc0cf.php on line 29\n\
    PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp3elfc0cf.php:40\n\
    Stack trace:\n#0 /tmp/tmp3elfc0cf.php(52): test()\n#1 {main}\n  thrown in /tmp/tmp3elfc0cf.php\
    \ on line 40\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    // tri(3) = [1, 3, 2, 8]\nfunction tri($n) {\n    $result = [];\n    for ($i =\
    \ 0; $i <= $n; $i++) {\n        if ($i === 0) {\n            $result[] = 1;\n\
    \        } elseif ($i === 1) {\n            $result[] = 3;\n        } elseif ($i\
    \ === 2) {\n            $result[] = 2;\n        } elseif ($i % 2 === 0) {\n  \
    \          $result[] = 1 + $i / 2;\n        } else {\n            $result[] =\
    \ $result[$i - 1] + $result[$i - 2] + $result[$i + 1];\n        }\n    }\n   \
    \ return $result;\n}\n\nfunction candidate(...$args) {\n    return tri(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3) !== array(1, 3, 2, 8)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(4) !== array(1, 3, 2,\
    \ 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !==\
    \ array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1, 3, 2,\
    \ 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35, 6, 48,\
    \ 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Warning:  Undefined array key 4 in /tmp/tmpu0fz3bt9.php on line 29\n\
    PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpu0fz3bt9.php:40\n\
    Stack trace:\n#0 /tmp/tmpu0fz3bt9.php(52): test()\n#1 {main}\n  thrown in /tmp/tmpu0fz3bt9.php\
    \ on line 40\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    // tri(3) = [1, 3, 2, 8]\nfunction tri($n) {\n    $result = [];\n    for ($i =\
    \ 0; $i <= $n; $i++) {\n        if ($i == 0) {\n            $result[] = 1;\n \
    \       } elseif ($i == 1) {\n            $result[] = 3;\n        } elseif ($i\
    \ == 2) {\n            $result[] = 2;\n        } elseif ($i % 2 == 0) {\n    \
    \        $result[] = 1 + ($i / 2);\n        } else {\n            $result[] =\
    \ $result[$i - 1] + $result[$i - 2] + $result[$i + 1];\n        }\n    }\n   \
    \ return $result;\n}\n\nfunction candidate(...$args) {\n    return tri(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3) !== array(1, 3, 2, 8)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(4) !== array(1, 3, 2,\
    \ 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !==\
    \ array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1, 3, 2,\
    \ 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35, 6, 48,\
    \ 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Warning:  Undefined array key 4 in /tmp/tmpu5w8fbps.php on line 29\n\
    PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpu5w8fbps.php:40\n\
    Stack trace:\n#0 /tmp/tmpu5w8fbps.php(52): test()\n#1 {main}\n  thrown in /tmp/tmpu5w8fbps.php\
    \ on line 40\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    // tri(3) = [1, 3, 2, 8]\nfunction tri($n) {\n  $arr = [1, 3, 2];\n  for ($i =\
    \ 3; $i <= $n; $i++) {\n    if ($i % 2 == 0) {\n      $arr[] = 1 + $i / 2;\n \
    \   } else {\n      $arr[] = $arr[$i - 1] + $arr[$i - 2] + $arr[$i + 1];\n   \
    \ }\n  }\n  return $arr;\n}\n\necho '<pre>';\nprint_r(tri(3));\necho '</pre>';\n\
    \nfunction candidate(...$args) {\n    return tri(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(3) !== array(1, 3, 2, 8)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4) !== array(1, 3, 2, 8, 3)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5) !== array(1, 3, 2, 8, 3,\
    \ 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== array(1,\
    \ 3, 2, 8, 3, 15, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(9) !== array(1, 3, 2, 8, 3,\
    \ 15, 4, 24, 5, 35)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120,\
    \ 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0) !== array(1))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !== array(1,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "<pre>Array\n(\n    [0] => 1\n    [1] => 3\n    [2] => 2\n    [3] => 5\n\
    )\n</pre>"
  stderr: "PHP Warning:  Undefined array key 4 in /tmp/tmp5lu3lshq.php on line 23\n\
    PHP Warning:  Undefined array key 4 in /tmp/tmp5lu3lshq.php on line 23\nPHP Fatal\
    \ error:  Uncaught Exception: Test failed! in /tmp/tmp5lu3lshq.php:38\nStack trace:\n\
    #0 /tmp/tmp5lu3lshq.php(50): test()\n#1 {main}\n  thrown in /tmp/tmp5lu3lshq.php\
    \ on line 38\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    // tri(3) = [1, 3, 2, 8]\nfunction tri($n) {\n    $result = [];\n    for ($i =\
    \ 0; $i <= $n; $i++) {\n        if ($i == 0) {\n            $result[] = 1;\n \
    \       } elseif ($i == 1) {\n            $result[] = 3;\n        } elseif ($i\
    \ == 2) {\n            $result[] = 2;\n        } elseif ($i % 2 == 0) {\n    \
    \        $result[] = 1 + $i / 2;\n        } else {\n            $result[] = $result[$i\
    \ - 1] + $result[$i - 2] + $result[$i + 1];\n        }\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return tri(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(3) !== array(1, 3, 2, 8)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4) !== array(1, 3, 2, 8, 3)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5) !== array(1, 3, 2, 8, 3,\
    \ 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== array(1,\
    \ 3, 2, 8, 3, 15, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(9) !== array(1, 3, 2, 8, 3,\
    \ 15, 4, 24, 5, 35)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120,\
    \ 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0) !== array(1))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !== array(1,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Warning:  Undefined array key 4 in /tmp/tmp1dud_jzn.php on line 29\n\
    PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp1dud_jzn.php:40\n\
    Stack trace:\n#0 /tmp/tmp1dud_jzn.php(52): test()\n#1 {main}\n  thrown in /tmp/tmp1dud_jzn.php\
    \ on line 40\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    // tri(3) = [1, 3, 2, 8]\nfunction tri($n) {\n    $result = [];\n    for ($i =\
    \ 0; $i <= $n; $i++) {\n        if ($i == 0) {\n            $result[] = 1;\n \
    \       } elseif ($i == 1) {\n            $result[] = 3;\n        } elseif ($i\
    \ == 2) {\n            $result[] = 2;\n        } elseif ($i % 2 == 0) {\n    \
    \        $result[] = 1 + $i / 2;\n        } else {\n            $result[] = $result[$i\
    \ - 1] + $result[$i - 2] + $result[$i + 1];\n        }\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return tri(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(3) !== array(1, 3, 2, 8)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4) !== array(1, 3, 2, 8, 3)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5) !== array(1, 3, 2, 8, 3,\
    \ 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== array(1,\
    \ 3, 2, 8, 3, 15, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(9) !== array(1, 3, 2, 8, 3,\
    \ 15, 4, 24, 5, 35)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120,\
    \ 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0) !== array(1))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !== array(1,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Warning:  Undefined array key 4 in /tmp/tmpcloy83vz.php on line 29\n\
    PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpcloy83vz.php:40\n\
    Stack trace:\n#0 /tmp/tmpcloy83vz.php(52): test()\n#1 {main}\n  thrown in /tmp/tmpcloy83vz.php\
    \ on line 40\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    // tri(3) = [1, 3, 2, 8]\nfunction tri($n) {\n    $result = [];\n    for ($i =\
    \ 0; $i <= $n; $i++) {\n        if ($i === 0) {\n            $result[] = 1;\n\
    \        } elseif ($i === 1) {\n            $result[] = 3;\n        } elseif ($i\
    \ === 2) {\n            $result[] = 2;\n        } elseif ($i % 2 === 0) {\n  \
    \          $result[] = 1 + $i / 2;\n        } else {\n            $result[] =\
    \ $result[$i - 1] + $result[$i - 2] + $result[$i + 1];\n        }\n    }\n   \
    \ return $result;\n}\n\nfunction candidate(...$args) {\n    return tri(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3) !== array(1, 3, 2, 8)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(4) !== array(1, 3, 2,\
    \ 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !==\
    \ array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1, 3, 2,\
    \ 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35, 6, 48,\
    \ 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Warning:  Undefined array key 4 in /tmp/tmpyi7eho7l.php on line 29\n\
    PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpyi7eho7l.php:40\n\
    Stack trace:\n#0 /tmp/tmpyi7eho7l.php(52): test()\n#1 {main}\n  thrown in /tmp/tmpyi7eho7l.php\
    \ on line 40\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    // tri(3) = [1, 3, 2, 8]\nfunction tri($n) {\n  $result = [];\n  for ($i = 0;\
    \ $i <= $n; $i++) {\n    if ($i === 0) {\n      $result[] = 1;\n    } elseif ($i\
    \ === 1) {\n      $result[] = 3;\n    } elseif ($i === 2) {\n      $result[] =\
    \ 2;\n    } elseif ($i % 2 === 0) {\n      $result[] = 1 + ($i / 2);\n    } else\
    \ {\n      $result[] = $result[$i - 1] + $result[$i - 2] + $result[$i + 1];\n\
    \    }\n  }\n  return $result;\n}\n\nfunction candidate(...$args) {\n    return\
    \ tri(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3) !== array(1,\
    \ 3, 2, 8)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !==\
    \ array(1, 3, 2, 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5)\
    \ !== array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1,\
    \ 3, 2, 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(9) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24,\
    \ 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Warning:  Undefined array key 4 in /tmp/tmpgjv1w4ez.php on line 29\n\
    PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpgjv1w4ez.php:40\n\
    Stack trace:\n#0 /tmp/tmpgjv1w4ez.php(52): test()\n#1 {main}\n  thrown in /tmp/tmpgjv1w4ez.php\
    \ on line 40\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    // tri(3) = [1, 3, 2, 8]\nfunction tri($n) {\n    $result = [];\n    for ($i =\
    \ 0; $i <= $n; $i++) {\n        if ($i == 0) {\n            $result[] = 1;\n \
    \       } else if ($i == 1) {\n            $result[] = 3;\n        } else if ($i\
    \ == 2) {\n            $result[] = 2;\n        } else if ($i % 2 == 0) {\n   \
    \         $result[] = 1 + $i / 2;\n        } else {\n            $result[] = $result[$i\
    \ - 1] + $result[$i - 2] + $result[$i + 1];\n        }\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return tri(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(3) !== array(1, 3, 2, 8)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4) !== array(1, 3, 2, 8, 3)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5) !== array(1, 3, 2, 8, 3,\
    \ 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== array(1,\
    \ 3, 2, 8, 3, 15, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(9) !== array(1, 3, 2, 8, 3,\
    \ 15, 4, 24, 5, 35)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120,\
    \ 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0) !== array(1))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !== array(1,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Warning:  Undefined array key 4 in /tmp/tmpyu96ein0.php on line 29\n\
    PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpyu96ein0.php:40\n\
    Stack trace:\n#0 /tmp/tmpyu96ein0.php(52): test()\n#1 {main}\n  thrown in /tmp/tmpyu96ein0.php\
    \ on line 40\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    // tri(3) = [1, 3, 2, 8]\nfunction tri($n) {\n  $result = [];\n  for ($i = 0;\
    \ $i <= $n; $i++) {\n    if ($i === 0) {\n      $result[] = 1;\n    } else if\
    \ ($i === 1) {\n      $result[] = 3;\n    } else if ($i === 2) {\n      $result[]\
    \ = 2;\n    } else if ($i % 2 === 0) {\n      $result[] = 1 + ($i / 2);\n    }\
    \ else {\n      $result[] = $result[$i - 1] + $result[$i - 2] + $result[$i + 1];\n\
    \    }\n  }\n  return $result;\n}\n\nfunction candidate(...$args) {\n    return\
    \ tri(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3) !== array(1,\
    \ 3, 2, 8)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !==\
    \ array(1, 3, 2, 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5)\
    \ !== array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1,\
    \ 3, 2, 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(9) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24,\
    \ 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Warning:  Undefined array key 4 in /tmp/tmpqfmcfaw4.php on line 29\n\
    PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpqfmcfaw4.php:40\n\
    Stack trace:\n#0 /tmp/tmpqfmcfaw4.php(52): test()\n#1 {main}\n  thrown in /tmp/tmpqfmcfaw4.php\
    \ on line 40\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    // tri(3) = [1, 3, 2, 8]\nfunction tri($n) {\n    $arr = [1, 3, 2];\n    for ($i\
    \ = 3; $i <= $n; $i++) {\n        if ($i % 2 == 0) {\n            $arr[] = 1 +\
    \ $i / 2;\n        } else {\n            $arr[] = $arr[$i - 1] + $arr[$i - 2]\
    \ + $arr[$i + 1];\n        }\n    }\n    return $arr;\n}\n\nfunction candidate(...$args)\
    \ {\n    return tri(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3)\
    \ !== array(1, 3, 2, 8)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(1, 3, 2, 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5) !== array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1,\
    \ 3, 2, 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(9) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24,\
    \ 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Warning:  Undefined array key 4 in /tmp/tmp8wv1iesy.php on line 23\n\
    PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp8wv1iesy.php:34\n\
    Stack trace:\n#0 /tmp/tmp8wv1iesy.php(46): test()\n#1 {main}\n  thrown in /tmp/tmp8wv1iesy.php\
    \ on line 34\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    // tri(3) = [1, 3, 2, 8]\nfunction tri($n) {\n    $result = [];\n    for ($i =\
    \ 0; $i <= $n; $i++) {\n        if ($i == 0) {\n            $result[] = 1;\n \
    \       } elseif ($i == 1) {\n            $result[] = 3;\n        } elseif ($i\
    \ == 2) {\n            $result[] = 2;\n        } elseif ($i % 2 == 0) {\n    \
    \        $result[] = 1 + $i / 2;\n        } else {\n            $result[] = $result[$i\
    \ - 1] + $result[$i - 2] + $result[$i + 1];\n        }\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return tri(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(3) !== array(1, 3, 2, 8)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4) !== array(1, 3, 2, 8, 3)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5) !== array(1, 3, 2, 8, 3,\
    \ 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== array(1,\
    \ 3, 2, 8, 3, 15, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(9) !== array(1, 3, 2, 8, 3,\
    \ 15, 4, 24, 5, 35)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120,\
    \ 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0) !== array(1))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !== array(1,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Warning:  Undefined array key 4 in /tmp/tmp21cwbl03.php on line 29\n\
    PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp21cwbl03.php:40\n\
    Stack trace:\n#0 /tmp/tmp21cwbl03.php(52): test()\n#1 {main}\n  thrown in /tmp/tmp21cwbl03.php\
    \ on line 40\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    // tri(3) = [1, 3, 2, 8]\nfunction tri($n) {\n  $arr = [];\n  for ($i = 0; $i\
    \ <= $n; $i++) {\n    if ($i == 0) {\n      $arr[] = 1;\n    } else if ($i ==\
    \ 1) {\n      $arr[] = 3;\n    } else if ($i == 2) {\n      $arr[] = 2;\n    }\
    \ else if ($i % 2 == 0) {\n      $arr[] = 1 + ($i / 2);\n    } else {\n      $arr[]\
    \ = $arr[$i - 1] + $arr[$i - 2] + $arr[$i + 1];\n    }\n  }\n  return $arr;\n\
    }\n\nfunction candidate(...$args) {\n    return tri(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(3) !== array(1, 3, 2, 8)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4) !== array(1, 3, 2, 8, 3)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5) !== array(1, 3, 2, 8, 3,\
    \ 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== array(1,\
    \ 3, 2, 8, 3, 15, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(9) !== array(1, 3, 2, 8, 3,\
    \ 15, 4, 24, 5, 35)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120,\
    \ 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0) !== array(1))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !== array(1,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Warning:  Undefined array key 4 in /tmp/tmp3r1v034v.php on line 29\n\
    PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp3r1v034v.php:40\n\
    Stack trace:\n#0 /tmp/tmp3r1v034v.php(52): test()\n#1 {main}\n  thrown in /tmp/tmp3r1v034v.php\
    \ on line 40\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    // tri(3) = [1, 3, 2, 8]\nfunction tri($n) {\n  $arr = [1, 3, 2];\n  for ($i =\
    \ 3; $i <= $n; $i++) {\n    if ($i % 2 == 0) {\n      $arr[] = 1 + ($i / 2);\n\
    \    } else {\n      $arr[] = $arr[$i - 1] + $arr[$i - 2] + $arr[$i + 1];\n  \
    \  }\n  }\n  return $arr;\n}\n\nfunction candidate(...$args) {\n    return tri(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3) !== array(1, 3, 2, 8)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(4) !== array(1, 3, 2,\
    \ 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !==\
    \ array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1, 3, 2,\
    \ 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35, 6, 48,\
    \ 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Warning:  Undefined array key 4 in /tmp/tmpi_eamrm0.php on line 23\n\
    PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpi_eamrm0.php:34\n\
    Stack trace:\n#0 /tmp/tmpi_eamrm0.php(46): test()\n#1 {main}\n  thrown in /tmp/tmpi_eamrm0.php\
    \ on line 34\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    // tri(3) = [1, 3, 2, 8]\nfunction tri($n) {\n  $arr = [];\n  for ($i = 0; $i\
    \ <= $n; $i++) {\n    if ($i == 0) {\n      $arr[] = 1;\n    } else if ($i ==\
    \ 1) {\n      $arr[] = 3;\n    } else if ($i == 2) {\n      $arr[] = 2;\n    }\
    \ else if ($i % 2 == 0) {\n      $arr[] = 1 + $i / 2;\n    } else {\n      $arr[]\
    \ = $arr[$i - 1] + $arr[$i - 2] + $arr[$i + 1];\n    }\n  }\n  return $arr;\n\
    }\n\nfunction candidate(...$args) {\n    return tri(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(3) !== array(1, 3, 2, 8)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4) !== array(1, 3, 2, 8, 3)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5) !== array(1, 3, 2, 8, 3,\
    \ 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== array(1,\
    \ 3, 2, 8, 3, 15, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(9) !== array(1, 3, 2, 8, 3,\
    \ 15, 4, 24, 5, 35)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120,\
    \ 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0) !== array(1))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !== array(1,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Warning:  Undefined array key 4 in /tmp/tmp_dv8l3mk.php on line 29\n\
    PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp_dv8l3mk.php:40\n\
    Stack trace:\n#0 /tmp/tmp_dv8l3mk.php(52): test()\n#1 {main}\n  thrown in /tmp/tmp_dv8l3mk.php\
    \ on line 40\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    // tri(3) = [1, 3, 2, 8]\nfunction tri($n) {\n    $result = [];\n    for ($i =\
    \ 0; $i <= $n; $i++) {\n        if ($i == 0) {\n            $result[] = 1;\n \
    \       } elseif ($i == 1) {\n            $result[] = 3;\n        } elseif ($i\
    \ == 2) {\n            $result[] = 2;\n        } elseif ($i % 2 == 0) {\n    \
    \        $result[] = 1 + $i / 2;\n        } else {\n            $result[] = $result[$i\
    \ - 1] + $result[$i - 2] + $result[$i + 1];\n        }\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return tri(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(3) !== array(1, 3, 2, 8)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4) !== array(1, 3, 2, 8, 3)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5) !== array(1, 3, 2, 8, 3,\
    \ 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== array(1,\
    \ 3, 2, 8, 3, 15, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(9) !== array(1, 3, 2, 8, 3,\
    \ 15, 4, 24, 5, 35)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120,\
    \ 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0) !== array(1))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !== array(1,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Warning:  Undefined array key 4 in /tmp/tmp5aumpe9l.php on line 29\n\
    PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp5aumpe9l.php:40\n\
    Stack trace:\n#0 /tmp/tmp5aumpe9l.php(52): test()\n#1 {main}\n  thrown in /tmp/tmp5aumpe9l.php\
    \ on line 40\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    // tri(3) = [1, 3, 2, 8]\nfunction tri($n) {\n    $result = [];\n    for ($i =\
    \ 0; $i <= $n; $i++) {\n        if ($i == 0) {\n            $result[] = 1;\n \
    \       } elseif ($i == 1) {\n            $result[] = 3;\n        } elseif ($i\
    \ == 2) {\n            $result[] = 2;\n        } elseif ($i % 2 == 0) {\n    \
    \        $result[] = 1 + $i / 2;\n        } else {\n            $result[] = $result[$i\
    \ - 1] + $result[$i - 2] + $result[$i + 1];\n        }\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return tri(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(3) !== array(1, 3, 2, 8)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4) !== array(1, 3, 2, 8, 3)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5) !== array(1, 3, 2, 8, 3,\
    \ 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== array(1,\
    \ 3, 2, 8, 3, 15, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(9) !== array(1, 3, 2, 8, 3,\
    \ 15, 4, 24, 5, 35)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120,\
    \ 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0) !== array(1))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !== array(1,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Warning:  Undefined array key 4 in /tmp/tmp7zt014er.php on line 29\n\
    PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp7zt014er.php:40\n\
    Stack trace:\n#0 /tmp/tmp7zt014er.php(52): test()\n#1 {main}\n  thrown in /tmp/tmp7zt014er.php\
    \ on line 40\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    // tri(3) = [1, 3, 2, 8]\nfunction tri($n) {\n    $result = [];\n    for ($i =\
    \ 0; $i <= $n; $i++) {\n        if ($i == 0) {\n            $result[] = 1;\n \
    \       } elseif ($i == 1) {\n            $result[] = 3;\n        } elseif ($i\
    \ == 2) {\n            $result[] = 2;\n        } elseif ($i % 2 == 0) {\n    \
    \        $result[] = 1 + $i / 2;\n        } else {\n            $result[] = $result[$i\
    \ - 1] + $result[$i - 2] + $result[$i + 1];\n        }\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return tri(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(3) !== array(1, 3, 2, 8)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4) !== array(1, 3, 2, 8, 3)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5) !== array(1, 3, 2, 8, 3,\
    \ 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== array(1,\
    \ 3, 2, 8, 3, 15, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(9) !== array(1, 3, 2, 8, 3,\
    \ 15, 4, 24, 5, 35)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120,\
    \ 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0) !== array(1))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !== array(1,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Warning:  Undefined array key 4 in /tmp/tmp7ay9uhwl.php on line 29\n\
    PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp7ay9uhwl.php:40\n\
    Stack trace:\n#0 /tmp/tmp7ay9uhwl.php(52): test()\n#1 {main}\n  thrown in /tmp/tmp7ay9uhwl.php\
    \ on line 40\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    // tri(3) = [1, 3, 2, 8]\nfunction tri($n) {\n    if ($n == 0) {\n        return\
    \ [1];\n    }\n    if ($n == 1) {\n        return [1, 3];\n    }\n    if ($n ==\
    \ 2) {\n        return [1, 3, 2];\n    }\n    $arr = [1, 3, 2];\n    for ($i =\
    \ 3; $i <= $n; $i++) {\n        if ($i % 2 == 0) {\n            $arr[] = 1 + $i\
    \ / 2;\n        } else {\n            $arr[] = $arr[$i - 1] + $arr[$i - 2] + $arr[$i\
    \ + 1];\n        }\n    }\n    return $arr;\n}\n\nfunction candidate(...$args)\
    \ {\n    return tri(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3)\
    \ !== array(1, 3, 2, 8)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(1, 3, 2, 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5) !== array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1,\
    \ 3, 2, 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(9) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24,\
    \ 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Warning:  Undefined array key 4 in /tmp/tmpwmuh8mcq.php on line 32\n\
    PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpwmuh8mcq.php:43\n\
    Stack trace:\n#0 /tmp/tmpwmuh8mcq.php(55): test()\n#1 {main}\n  thrown in /tmp/tmpwmuh8mcq.php\
    \ on line 43\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    // tri(3) = [1, 3, 2, 8]\nfunction tri($n) {\n    $arr = [1, 3, 2];\n    for ($i\
    \ = 3; $i <= $n; $i++) {\n        if ($i % 2 == 0) {\n            $arr[] = 1 +\
    \ $i / 2;\n        } else {\n            $arr[] = $arr[$i - 1] + $arr[$i - 2]\
    \ + $arr[$i + 1];\n        }\n    }\n    return $arr;\n}\n\nfunction candidate(...$args)\
    \ {\n    return tri(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3)\
    \ !== array(1, 3, 2, 8)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(1, 3, 2, 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5) !== array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1,\
    \ 3, 2, 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(9) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24,\
    \ 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Warning:  Undefined array key 4 in /tmp/tmpa7_zkt79.php on line 23\n\
    PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpa7_zkt79.php:34\n\
    Stack trace:\n#0 /tmp/tmpa7_zkt79.php(46): test()\n#1 {main}\n  thrown in /tmp/tmpa7_zkt79.php\
    \ on line 34\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    // tri(3) = [1, 3, 2, 8]\nfunction tri($n) {\n    $arr = [1, 3, 2];\n    for ($i\
    \ = 3; $i <= $n; $i++) {\n        if ($i % 2 == 0) {\n            $arr[] = 1 +\
    \ $i / 2;\n        } else {\n            $arr[] = $arr[$i - 1] + $arr[$i - 2]\
    \ + $arr[$i + 1];\n        }\n    }\n    return $arr;\n}\n\nfunction candidate(...$args)\
    \ {\n    return tri(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3)\
    \ !== array(1, 3, 2, 8)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(1, 3, 2, 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5) !== array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1,\
    \ 3, 2, 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(9) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24,\
    \ 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Warning:  Undefined array key 4 in /tmp/tmpqc1lnh_m.php on line 23\n\
    PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpqc1lnh_m.php:34\n\
    Stack trace:\n#0 /tmp/tmpqc1lnh_m.php(46): test()\n#1 {main}\n  thrown in /tmp/tmpqc1lnh_m.php\
    \ on line 34\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    // tri(3) = [1, 3, 2, 8]\nfunction tri($n) {\n    $result = [];\n    for ($i =\
    \ 0; $i <= $n; $i++) {\n        if ($i == 0) {\n            $result[] = 1;\n \
    \       } elseif ($i == 1) {\n            $result[] = 3;\n        } elseif ($i\
    \ == 2) {\n            $result[] = 2;\n        } elseif ($i % 2 == 0) {\n    \
    \        $result[] = 1 + $i / 2;\n        } else {\n            $result[] = $result[$i\
    \ - 1] + $result[$i - 2] + $result[$i + 1];\n        }\n    }\n    return $result;\n\
    }\nprint_r(tri(3));\nfunction candidate(...$args) {\n    return tri(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3) !== array(1, 3, 2, 8)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(4) !== array(1, 3, 2,\
    \ 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !==\
    \ array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1, 3, 2,\
    \ 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35, 6, 48,\
    \ 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "Array\n(\n    [0] => 1\n    [1] => 3\n    [2] => 2\n    [3] => 5\n)\n"
  stderr: "PHP Warning:  Undefined array key 4 in /tmp/tmpq04nfxzf.php on line 29\n\
    PHP Warning:  Undefined array key 4 in /tmp/tmpq04nfxzf.php on line 29\nPHP Fatal\
    \ error:  Uncaught Exception: Test failed! in /tmp/tmpq04nfxzf.php:40\nStack trace:\n\
    #0 /tmp/tmpq04nfxzf.php(52): test()\n#1 {main}\n  thrown in /tmp/tmpq04nfxzf.php\
    \ on line 40\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    // tri(3) = [1, 3, 2, 8]\nfunction tri($n) {\n    $result = [];\n    for ($i =\
    \ 0; $i <= $n; $i++) {\n        if ($i == 0) {\n            $result[] = 1;\n \
    \       } else if ($i == 1) {\n            $result[] = 3;\n        } else if ($i\
    \ == 2) {\n            $result[] = 2;\n        } else if ($i % 2 == 0) {\n   \
    \         $result[] = 1 + ($i / 2);\n        } else {\n            $result[] =\
    \ $result[$i - 1] + $result[$i - 2] + $result[$i + 1];\n        }\n    }\n   \
    \ return $result;\n}\n\nfunction candidate(...$args) {\n    return tri(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3) !== array(1, 3, 2, 8)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(4) !== array(1, 3, 2,\
    \ 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !==\
    \ array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1, 3, 2,\
    \ 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35, 6, 48,\
    \ 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Warning:  Undefined array key 4 in /tmp/tmp6u8p6z35.php on line 29\n\
    PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp6u8p6z35.php:40\n\
    Stack trace:\n#0 /tmp/tmp6u8p6z35.php(52): test()\n#1 {main}\n  thrown in /tmp/tmp6u8p6z35.php\
    \ on line 40\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    // tri(3) = [1, 3, 2, 8]\nfunction tri($n) {\n  $arr = [1, 3, 2];\n  for ($i =\
    \ 3; $i <= $n; $i++) {\n    if ($i % 2 == 0) {\n      $arr[] = 1 + ($i / 2);\n\
    \    } else {\n      $arr[] = $arr[$i - 1] + $arr[$i - 2] + $arr[$i + 1];\n  \
    \  }\n  }\n  return $arr;\n}\n\nfunction candidate(...$args) {\n    return tri(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3) !== array(1, 3, 2, 8)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(4) !== array(1, 3, 2,\
    \ 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !==\
    \ array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1, 3, 2,\
    \ 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35, 6, 48,\
    \ 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Warning:  Undefined array key 4 in /tmp/tmpwopfs3yz.php on line 23\n\
    PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpwopfs3yz.php:34\n\
    Stack trace:\n#0 /tmp/tmpwopfs3yz.php(46): test()\n#1 {main}\n  thrown in /tmp/tmpwopfs3yz.php\
    \ on line 34\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    // tri(3) = [1, 3, 2, 8]\nfunction tri($n) {\n  $arr = [];\n  for ($i = 0; $i\
    \ <= $n; $i++) {\n    if ($i == 0) {\n      $arr[] = 1;\n    } else if ($i ==\
    \ 1) {\n      $arr[] = 3;\n    } else if ($i == 2) {\n      $arr[] = 2;\n    }\
    \ else if ($i % 2 == 0) {\n      $arr[] = 1 + ($i / 2);\n    } else {\n      $arr[]\
    \ = $arr[$i - 1] + $arr[$i - 2] + $arr[$i + 1];\n    }\n  }\n  return $arr;\n\
    }\n\nfunction candidate(...$args) {\n    return tri(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(3) !== array(1, 3, 2, 8)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4) !== array(1, 3, 2, 8, 3)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5) !== array(1, 3, 2, 8, 3,\
    \ 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== array(1,\
    \ 3, 2, 8, 3, 15, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(9) !== array(1, 3, 2, 8, 3,\
    \ 15, 4, 24, 5, 35)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120,\
    \ 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0) !== array(1))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !== array(1,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Warning:  Undefined array key 4 in /tmp/tmpit7ge2lg.php on line 29\n\
    PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpit7ge2lg.php:40\n\
    Stack trace:\n#0 /tmp/tmpit7ge2lg.php(52): test()\n#1 {main}\n  thrown in /tmp/tmpit7ge2lg.php\
    \ on line 40\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    // tri(3) = [1, 3, 2, 8]\nfunction tri($n) {\n    $arr = [1, 3, 2];\n    if ($n\
    \ == 0) {\n        return [1];\n    }\n    if ($n == 1) {\n        return [1,\
    \ 3];\n    }\n    if ($n == 2) {\n        return [1, 3, 2];\n    }\n    for ($i\
    \ = 3; $i <= $n; $i++) {\n        if ($i % 2 == 0) {\n            $arr[] = 1 +\
    \ ($i / 2);\n        } else {\n            $arr[] = $arr[$i - 1] + $arr[$i - 2]\
    \ + $arr[$i + 1];\n        }\n    }\n    return $arr;\n}\nprint_r(tri(3));\nfunction\
    \ candidate(...$args) {\n    return tri(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(3) !== array(1, 3, 2, 8)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== array(1, 3, 2, 8, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5) !== array(1, 3, 2, 8, 3, 15)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(6) !== array(1, 3, 2,\
    \ 8, 3, 15, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(9) !== array(1, 3, 2, 8, 3,\
    \ 15, 4, 24, 5, 35)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120,\
    \ 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0) !== array(1))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !== array(1,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "Array\n(\n    [0] => 1\n    [1] => 3\n    [2] => 2\n    [3] => 5\n)\n"
  stderr: "PHP Warning:  Undefined array key 4 in /tmp/tmp0otpqm18.php on line 32\n\
    PHP Warning:  Undefined array key 4 in /tmp/tmp0otpqm18.php on line 32\nPHP Fatal\
    \ error:  Uncaught Exception: Test failed! in /tmp/tmp0otpqm18.php:43\nStack trace:\n\
    #0 /tmp/tmp0otpqm18.php(55): test()\n#1 {main}\n  thrown in /tmp/tmp0otpqm18.php\
    \ on line 43\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    // tri(3) = [1, 3, 2, 8]\nfunction tri($n) {\n  $result = [];\n  for ($i = 0;\
    \ $i <= $n; $i++) {\n    if ($i === 0) {\n      $result[] = 1;\n    } elseif ($i\
    \ === 1) {\n      $result[] = 3;\n    } elseif ($i === 2) {\n      $result[] =\
    \ 2;\n    } elseif ($i % 2 === 0) {\n      $result[] = 1 + ($i / 2);\n    } else\
    \ {\n      $result[] = $result[$i - 1] + $result[$i - 2] + $result[$i + 1];\n\
    \    }\n  }\n  return $result;\n}\n\nfunction candidate(...$args) {\n    return\
    \ tri(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3) !== array(1,\
    \ 3, 2, 8)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !==\
    \ array(1, 3, 2, 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5)\
    \ !== array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1,\
    \ 3, 2, 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(9) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24,\
    \ 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Warning:  Undefined array key 4 in /tmp/tmpyk76k0mx.php on line 29\n\
    PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpyk76k0mx.php:40\n\
    Stack trace:\n#0 /tmp/tmpyk76k0mx.php(52): test()\n#1 {main}\n  thrown in /tmp/tmpyk76k0mx.php\
    \ on line 40\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    // tri(3) = [1, 3, 2, 8]\nfunction tri($n) {\n    $result = [];\n    for ($i =\
    \ 0; $i <= $n; $i++) {\n        if ($i == 0) {\n            $result[] = 1;\n \
    \       } elseif ($i == 1) {\n            $result[] = 3;\n        } elseif ($i\
    \ == 2) {\n            $result[] = 2;\n        } elseif ($i % 2 == 0) {\n    \
    \        $result[] = 1 + ($i / 2);\n        } else {\n            $result[] =\
    \ $result[$i - 1] + $result[$i - 2] + $result[$i + 1];\n        }\n    }\n   \
    \ return $result;\n}\n\nfunction candidate(...$args) {\n    return tri(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3) !== array(1, 3, 2, 8)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(4) !== array(1, 3, 2,\
    \ 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !==\
    \ array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1, 3, 2,\
    \ 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35, 6, 48,\
    \ 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Warning:  Undefined array key 4 in /tmp/tmpmpnetl0h.php on line 29\n\
    PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpmpnetl0h.php:40\n\
    Stack trace:\n#0 /tmp/tmpmpnetl0h.php(52): test()\n#1 {main}\n  thrown in /tmp/tmpmpnetl0h.php\
    \ on line 40\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    // tri(3) = [1, 3, 2, 8]\nfunction tri($n) {\n  $result = [];\n  for ($i = 0;\
    \ $i <= $n; $i++) {\n    if ($i === 0) {\n      $result[] = 1;\n    } else if\
    \ ($i === 1) {\n      $result[] = 3;\n    } else if ($i === 2) {\n      $result[]\
    \ = 2;\n    } else if ($i % 2 === 0) {\n      $result[] = 1 + ($i / 2);\n    }\
    \ else {\n      $result[] = $result[$i - 1] + $result[$i - 2] + $result[$i + 1];\n\
    \    }\n  }\n  return $result;\n}\n\nfunction candidate(...$args) {\n    return\
    \ tri(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3) !== array(1,\
    \ 3, 2, 8)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !==\
    \ array(1, 3, 2, 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5)\
    \ !== array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1,\
    \ 3, 2, 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(9) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24,\
    \ 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Warning:  Undefined array key 4 in /tmp/tmpnouknkb6.php on line 29\n\
    PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpnouknkb6.php:40\n\
    Stack trace:\n#0 /tmp/tmpnouknkb6.php(52): test()\n#1 {main}\n  thrown in /tmp/tmpnouknkb6.php\
    \ on line 40\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    // tri(3) = [1, 3, 2, 8]\nfunction tri($n) {\n  $arr = [];\n  for ($i = 0; $i\
    \ <= $n; $i++) {\n    if ($i == 0) {\n      $arr[] = 1;\n    } elseif ($i == 1)\
    \ {\n      $arr[] = 3;\n    } elseif ($i == 2) {\n      $arr[] = 2;\n    } elseif\
    \ ($i % 2 == 0) {\n      $arr[] = 1 + ($i / 2);\n    } else {\n      $arr[] =\
    \ $arr[$i - 1] + $arr[$i - 2] + $arr[$i + 1];\n    }\n  }\n  return $arr;\n}\n\
    function candidate(...$args) {\n    return tri(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(3) !== array(1, 3, 2, 8)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4) !== array(1, 3, 2, 8, 3)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5) !== array(1, 3, 2, 8, 3,\
    \ 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== array(1,\
    \ 3, 2, 8, 3, 15, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(9) !== array(1, 3, 2, 8, 3,\
    \ 15, 4, 24, 5, 35)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120,\
    \ 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0) !== array(1))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !== array(1,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Warning:  Undefined array key 4 in /tmp/tmpd0gkwgz1.php on line 29\n\
    PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpd0gkwgz1.php:39\n\
    Stack trace:\n#0 /tmp/tmpd0gkwgz1.php(51): test()\n#1 {main}\n  thrown in /tmp/tmpd0gkwgz1.php\
    \ on line 39\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    // tri(3) = [1, 3, 2, 8]\nfunction tri($n) {\n    $result = [];\n    for ($i =\
    \ 0; $i <= $n; $i++) {\n        if ($i == 0) {\n            $result[] = 1;\n \
    \       } elseif ($i == 1) {\n            $result[] = 3;\n        } elseif ($i\
    \ == 2) {\n            $result[] = 2;\n        } elseif ($i % 2 == 0) {\n    \
    \        $result[] = 1 + $i / 2;\n        } else {\n            $result[] = $result[$i\
    \ - 1] + $result[$i - 2] + $result[$i + 1];\n        }\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return tri(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(3) !== array(1, 3, 2, 8)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4) !== array(1, 3, 2, 8, 3)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5) !== array(1, 3, 2, 8, 3,\
    \ 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== array(1,\
    \ 3, 2, 8, 3, 15, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(9) !== array(1, 3, 2, 8, 3,\
    \ 15, 4, 24, 5, 35)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120,\
    \ 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0) !== array(1))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !== array(1,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Warning:  Undefined array key 4 in /tmp/tmpe5jo8_th.php on line 29\n\
    PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpe5jo8_th.php:40\n\
    Stack trace:\n#0 /tmp/tmpe5jo8_th.php(52): test()\n#1 {main}\n  thrown in /tmp/tmpe5jo8_th.php\
    \ on line 40\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    // tri(3) = [1, 3, 2, 8]\nfunction tri($n) {\n    $arr = [];\n    for ($i = 0;\
    \ $i <= $n; $i++) {\n        if ($i == 0) {\n            $arr[] = 1;\n       \
    \ } else if ($i == 1) {\n            $arr[] = 3;\n        } else if ($i == 2)\
    \ {\n            $arr[] = 2;\n        } else if ($i % 2 == 0) {\n            $arr[]\
    \ = 1 + $i / 2;\n        } else {\n            $arr[] = $arr[$i - 1] + $arr[$i\
    \ - 2] + $arr[$i + 1];\n        }\n    }\n    return $arr;\n}\n\nfunction candidate(...$args)\
    \ {\n    return tri(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3)\
    \ !== array(1, 3, 2, 8)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(1, 3, 2, 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5) !== array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1,\
    \ 3, 2, 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(9) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24,\
    \ 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Warning:  Undefined array key 4 in /tmp/tmpi0nzqqd1.php on line 29\n\
    PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpi0nzqqd1.php:40\n\
    Stack trace:\n#0 /tmp/tmpi0nzqqd1.php(52): test()\n#1 {main}\n  thrown in /tmp/tmpi0nzqqd1.php\
    \ on line 40\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    // tri(3) = [1, 3, 2, 8]\nfunction tri($n) {\n    $arr = [];\n    for ($i = 0;\
    \ $i <= $n; $i++) {\n        if ($i == 0) {\n            $arr[] = 1;\n       \
    \ } elseif ($i == 1) {\n            $arr[] = 3;\n        } elseif ($i == 2) {\n\
    \            $arr[] = 2;\n        } elseif ($i % 2 == 0) {\n            $arr[]\
    \ = 1 + $i / 2;\n        } else {\n            $arr[] = $arr[$i - 1] + $arr[$i\
    \ - 2] + $arr[$i + 1];\n        }\n    }\n    return $arr;\n}\n\nfunction candidate(...$args)\
    \ {\n    return tri(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3)\
    \ !== array(1, 3, 2, 8)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(1, 3, 2, 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5) !== array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1,\
    \ 3, 2, 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(9) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24,\
    \ 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Warning:  Undefined array key 4 in /tmp/tmpskfeeckc.php on line 29\n\
    PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpskfeeckc.php:40\n\
    Stack trace:\n#0 /tmp/tmpskfeeckc.php(52): test()\n#1 {main}\n  thrown in /tmp/tmpskfeeckc.php\
    \ on line 40\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    // tri(3) = [1, 3, 2, 8]\nfunction tri($n) {\n    $result = [];\n    for ($i =\
    \ 0; $i <= $n; $i++) {\n        if ($i == 0) {\n            $result[] = 1;\n \
    \       } else if ($i == 1) {\n            $result[] = 3;\n        } else if ($i\
    \ == 2) {\n            $result[] = 2;\n        } else if ($i % 2 == 0) {\n   \
    \         $result[] = 1 + ($i / 2);\n        } else {\n            $result[] =\
    \ $result[$i - 1] + $result[$i - 2] + $result[$i + 1];\n        }\n    }\n   \
    \ return $result;\n}\n\nfunction candidate(...$args) {\n    return tri(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3) !== array(1, 3, 2, 8)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(4) !== array(1, 3, 2,\
    \ 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !==\
    \ array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1, 3, 2,\
    \ 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35, 6, 48,\
    \ 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Warning:  Undefined array key 4 in /tmp/tmp96wwl9or.php on line 29\n\
    PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp96wwl9or.php:40\n\
    Stack trace:\n#0 /tmp/tmp96wwl9or.php(52): test()\n#1 {main}\n  thrown in /tmp/tmp96wwl9or.php\
    \ on line 40\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    // tri(3) = [1, 3, 2, 8]\nfunction tri($n) {\n  $arr = [1, 3, 2];\n  for ($i =\
    \ 3; $i <= $n; $i++) {\n    if ($i % 2 == 0) {\n      $arr[] = 1 + $i / 2;\n \
    \   } else {\n      $arr[] = $arr[$i - 1] + $arr[$i - 2] + $arr[$i + 1];\n   \
    \ }\n  }\n  return $arr;\n}\n\necho \"<pre>\";\nprint_r(tri(3));\necho \"</pre>\"\
    ;\nfunction candidate(...$args) {\n    return tri(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(3) !== array(1, 3, 2, 8)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4) !== array(1, 3, 2, 8, 3)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5) !== array(1, 3, 2, 8, 3,\
    \ 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== array(1,\
    \ 3, 2, 8, 3, 15, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(9) !== array(1, 3, 2, 8, 3,\
    \ 15, 4, 24, 5, 35)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120,\
    \ 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0) !== array(1))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !== array(1,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "<pre>Array\n(\n    [0] => 1\n    [1] => 3\n    [2] => 2\n    [3] => 5\n\
    )\n</pre>"
  stderr: "PHP Warning:  Undefined array key 4 in /tmp/tmpl662ivb9.php on line 23\n\
    PHP Warning:  Undefined array key 4 in /tmp/tmpl662ivb9.php on line 23\nPHP Fatal\
    \ error:  Uncaught Exception: Test failed! in /tmp/tmpl662ivb9.php:37\nStack trace:\n\
    #0 /tmp/tmpl662ivb9.php(49): test()\n#1 {main}\n  thrown in /tmp/tmpl662ivb9.php\
    \ on line 37\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    // tri(3) = [1, 3, 2, 8]\nfunction tri($n) {\n    $result = [];\n    for ($i =\
    \ 0; $i <= $n; $i++) {\n        if ($i == 0) {\n            $result[] = 1;\n \
    \       } elseif ($i == 1) {\n            $result[] = 3;\n        } elseif ($i\
    \ == 2) {\n            $result[] = 2;\n        } elseif ($i % 2 == 0) {\n    \
    \        $result[] = 1 + $i / 2;\n        } else {\n            $result[] = $result[$i\
    \ - 1] + $result[$i - 2] + $result[$i + 1];\n        }\n    }\n    return $result;\n\
    }\nprint_r(tri(3));\nfunction candidate(...$args) {\n    return tri(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3) !== array(1, 3, 2, 8)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(4) !== array(1, 3, 2,\
    \ 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !==\
    \ array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1, 3, 2,\
    \ 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35, 6, 48,\
    \ 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "Array\n(\n    [0] => 1\n    [1] => 3\n    [2] => 2\n    [3] => 5\n)\n"
  stderr: "PHP Warning:  Undefined array key 4 in /tmp/tmpprmctqxt.php on line 29\n\
    PHP Warning:  Undefined array key 4 in /tmp/tmpprmctqxt.php on line 29\nPHP Fatal\
    \ error:  Uncaught Exception: Test failed! in /tmp/tmpprmctqxt.php:40\nStack trace:\n\
    #0 /tmp/tmpprmctqxt.php(52): test()\n#1 {main}\n  thrown in /tmp/tmpprmctqxt.php\
    \ on line 40\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    // tri(3) = [1, 3, 2, 8]\nfunction tri($n) {\n    $result = [];\n    for ($i =\
    \ 0; $i <= $n; $i++) {\n        if ($i == 0) {\n            $result[] = 1;\n \
    \       } elseif ($i == 1) {\n            $result[] = 3;\n        } elseif ($i\
    \ == 2) {\n            $result[] = 2;\n        } elseif ($i % 2 == 0) {\n    \
    \        $result[] = 1 + $i / 2;\n        } else {\n            $result[] = $result[$i\
    \ - 1] + $result[$i - 2] + $result[$i + 1];\n        }\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return tri(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(3) !== array(1, 3, 2, 8)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4) !== array(1, 3, 2, 8, 3)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5) !== array(1, 3, 2, 8, 3,\
    \ 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== array(1,\
    \ 3, 2, 8, 3, 15, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(9) !== array(1, 3, 2, 8, 3,\
    \ 15, 4, 24, 5, 35)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120,\
    \ 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0) !== array(1))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !== array(1,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Warning:  Undefined array key 4 in /tmp/tmpt8b3ja_l.php on line 29\n\
    PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpt8b3ja_l.php:40\n\
    Stack trace:\n#0 /tmp/tmpt8b3ja_l.php(52): test()\n#1 {main}\n  thrown in /tmp/tmpt8b3ja_l.php\
    \ on line 40\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    // tri(3) = [1, 3, 2, 8]\nfunction tri($n) {\n    $result = [];\n    for ($i =\
    \ 0; $i <= $n; $i++) {\n        if ($i == 0) {\n            $result[] = 1;\n \
    \       } elseif ($i == 1) {\n            $result[] = 3;\n        } elseif ($i\
    \ == 2) {\n            $result[] = 2;\n        } elseif ($i % 2 == 0) {\n    \
    \        $result[] = 1 + $i / 2;\n        } else {\n            $result[] = $result[$i\
    \ - 1] + $result[$i - 2] + $result[$i + 1];\n        }\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return tri(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(3) !== array(1, 3, 2, 8)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4) !== array(1, 3, 2, 8, 3)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5) !== array(1, 3, 2, 8, 3,\
    \ 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== array(1,\
    \ 3, 2, 8, 3, 15, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(9) !== array(1, 3, 2, 8, 3,\
    \ 15, 4, 24, 5, 35)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120,\
    \ 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0) !== array(1))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !== array(1,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Warning:  Undefined array key 4 in /tmp/tmp7qiavcpi.php on line 29\n\
    PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp7qiavcpi.php:40\n\
    Stack trace:\n#0 /tmp/tmp7qiavcpi.php(52): test()\n#1 {main}\n  thrown in /tmp/tmp7qiavcpi.php\
    \ on line 40\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    // tri(3) = [1, 3, 2, 8]\nfunction tri($n) {\n    $result = [];\n    $result[0]\
    \ = 1;\n    $result[1] = 3;\n    $result[2] = 2;\n    for ($i = 3; $i <= $n; $i++)\
    \ {\n        if ($i % 2 == 0) {\n            $result[$i] = 1 + $i / 2;\n     \
    \   } else {\n            $result[$i] = $result[$i - 1] + $result[$i - 2] + $result[$i\
    \ + 1];\n        }\n    }\n    return $result;\n}\nprint_r(tri(3));\nfunction\
    \ candidate(...$args) {\n    return tri(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(3) !== array(1, 3, 2, 8)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== array(1, 3, 2, 8, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5) !== array(1, 3, 2, 8, 3, 15)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(6) !== array(1, 3, 2,\
    \ 8, 3, 15, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(9) !== array(1, 3, 2, 8, 3,\
    \ 15, 4, 24, 5, 35)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120,\
    \ 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0) !== array(1))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !== array(1,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "Array\n(\n    [0] => 1\n    [1] => 3\n    [2] => 2\n    [3] => 5\n)\n"
  stderr: "PHP Warning:  Undefined array key 4 in /tmp/tmpye55t17c.php on line 26\n\
    PHP Warning:  Undefined array key 4 in /tmp/tmpye55t17c.php on line 26\nPHP Fatal\
    \ error:  Uncaught Exception: Test failed! in /tmp/tmpye55t17c.php:37\nStack trace:\n\
    #0 /tmp/tmpye55t17c.php(49): test()\n#1 {main}\n  thrown in /tmp/tmpye55t17c.php\
    \ on line 37\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    // tri(3) = [1, 3, 2, 8]\nfunction tri($n) {\n    $result = [];\n    for ($i =\
    \ 0; $i <= $n; $i++) {\n        if ($i == 0) {\n            $result[] = 1;\n \
    \       } elseif ($i == 1) {\n            $result[] = 3;\n        } elseif ($i\
    \ == 2) {\n            $result[] = 2;\n        } elseif ($i % 2 == 0) {\n    \
    \        $result[] = 1 + $i / 2;\n        } else {\n            $result[] = $result[$i\
    \ - 1] + $result[$i - 2] + $result[$i + 1];\n        }\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return tri(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(3) !== array(1, 3, 2, 8)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4) !== array(1, 3, 2, 8, 3)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5) !== array(1, 3, 2, 8, 3,\
    \ 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== array(1,\
    \ 3, 2, 8, 3, 15, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(9) !== array(1, 3, 2, 8, 3,\
    \ 15, 4, 24, 5, 35)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120,\
    \ 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0) !== array(1))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !== array(1,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Warning:  Undefined array key 4 in /tmp/tmpnlsxjtdv.php on line 29\n\
    PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpnlsxjtdv.php:40\n\
    Stack trace:\n#0 /tmp/tmpnlsxjtdv.php(52): test()\n#1 {main}\n  thrown in /tmp/tmpnlsxjtdv.php\
    \ on line 40\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    // tri(3) = [1, 3, 2, 8]\nfunction tri($n) {\n    $arr = [];\n    for ($i = 0;\
    \ $i <= $n; $i++) {\n        if ($i == 0) {\n            $arr[] = 1;\n       \
    \ } elseif ($i == 1) {\n            $arr[] = 3;\n        } elseif ($i == 2) {\n\
    \            $arr[] = 2;\n        } elseif ($i % 2 == 0) {\n            $arr[]\
    \ = 1 + $i / 2;\n        } else {\n            $arr[] = $arr[$i - 1] + $arr[$i\
    \ - 2] + $arr[$i + 1];\n        }\n    }\n    return $arr;\n}\n\nfunction candidate(...$args)\
    \ {\n    return tri(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3)\
    \ !== array(1, 3, 2, 8)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(1, 3, 2, 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5) !== array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1,\
    \ 3, 2, 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(9) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24,\
    \ 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Warning:  Undefined array key 4 in /tmp/tmp3wlig4vm.php on line 29\n\
    PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp3wlig4vm.php:40\n\
    Stack trace:\n#0 /tmp/tmp3wlig4vm.php(52): test()\n#1 {main}\n  thrown in /tmp/tmp3wlig4vm.php\
    \ on line 40\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    // tri(3) = [1, 3, 2, 8]\nfunction tri($n) {\n    $result = [];\n    for ($i =\
    \ 0; $i <= $n; $i++) {\n        if ($i == 0) {\n            $result[] = 1;\n \
    \       } elseif ($i == 1) {\n            $result[] = 3;\n        } elseif ($i\
    \ == 2) {\n            $result[] = 2;\n        } elseif ($i % 2 == 0) {\n    \
    \        $result[] = 1 + $i / 2;\n        } else {\n            $result[] = $result[$i\
    \ - 1] + $result[$i - 2] + $result[$i + 1];\n        }\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return tri(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(3) !== array(1, 3, 2, 8)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4) !== array(1, 3, 2, 8, 3)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5) !== array(1, 3, 2, 8, 3,\
    \ 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== array(1,\
    \ 3, 2, 8, 3, 15, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(9) !== array(1, 3, 2, 8, 3,\
    \ 15, 4, 24, 5, 35)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120,\
    \ 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0) !== array(1))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !== array(1,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Warning:  Undefined array key 4 in /tmp/tmpcifgbb7l.php on line 29\n\
    PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpcifgbb7l.php:40\n\
    Stack trace:\n#0 /tmp/tmpcifgbb7l.php(52): test()\n#1 {main}\n  thrown in /tmp/tmpcifgbb7l.php\
    \ on line 40\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    // tri(3) = [1, 3, 2, 8]\nfunction tri($n) {\n  $result = [];\n  for ($i = 0;\
    \ $i <= $n; $i++) {\n    if ($i == 0) {\n      $result[] = 1;\n    } else if ($i\
    \ == 1) {\n      $result[] = 3;\n    } else if ($i == 2) {\n      $result[] =\
    \ 2;\n    } else if ($i % 2 == 0) {\n      $result[] = 1 + $i / 2;\n    } else\
    \ {\n      $result[] = $result[$i - 1] + $result[$i - 2] + $result[$i + 1];\n\
    \    }\n  }\n  return $result;\n}\n\nfunction candidate(...$args) {\n    return\
    \ tri(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3) !== array(1,\
    \ 3, 2, 8)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !==\
    \ array(1, 3, 2, 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5)\
    \ !== array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1,\
    \ 3, 2, 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(9) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24,\
    \ 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Warning:  Undefined array key 4 in /tmp/tmp_lx8m1bd.php on line 29\n\
    PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp_lx8m1bd.php:40\n\
    Stack trace:\n#0 /tmp/tmp_lx8m1bd.php(52): test()\n#1 {main}\n  thrown in /tmp/tmp_lx8m1bd.php\
    \ on line 40\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    // tri(3) = [1, 3, 2, 8]\nfunction tri($n) {\n  $result = [];\n  for ($i = 0;\
    \ $i <= $n; $i++) {\n    if ($i === 0) {\n      $result[] = 1;\n    } else if\
    \ ($i === 1) {\n      $result[] = 3;\n    } else if ($i === 2) {\n      $result[]\
    \ = 2;\n    } else if ($i % 2 === 0) {\n      $result[] = 1 + ($i / 2);\n    }\
    \ else {\n      $result[] = $result[$i - 1] + $result[$i - 2] + $result[$i + 1];\n\
    \    }\n  }\n  return $result;\n}\n\nfunction candidate(...$args) {\n    return\
    \ tri(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3) !== array(1,\
    \ 3, 2, 8)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !==\
    \ array(1, 3, 2, 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5)\
    \ !== array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1,\
    \ 3, 2, 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(9) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24,\
    \ 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Warning:  Undefined array key 4 in /tmp/tmpd5e1ixob.php on line 29\n\
    PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpd5e1ixob.php:40\n\
    Stack trace:\n#0 /tmp/tmpd5e1ixob.php(52): test()\n#1 {main}\n  thrown in /tmp/tmpd5e1ixob.php\
    \ on line 40\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    // tri(3) = [1, 3, 2, 8]\nfunction tri($n) {\n  $result = [];\n  for ($i = 0;\
    \ $i <= $n; $i++) {\n    if ($i === 0) {\n      $result[] = 1;\n    } else if\
    \ ($i === 1) {\n      $result[] = 3;\n    } else if ($i === 2) {\n      $result[]\
    \ = 2;\n    } else if ($i % 2 === 0) {\n      $result[] = 1 + $i / 2;\n    } else\
    \ {\n      $result[] = $result[$i - 1] + $result[$i - 2] + $result[$i + 1];\n\
    \    }\n  }\n  return $result;\n}\n\nfunction candidate(...$args) {\n    return\
    \ tri(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3) !== array(1,\
    \ 3, 2, 8)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !==\
    \ array(1, 3, 2, 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5)\
    \ !== array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1,\
    \ 3, 2, 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(9) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24,\
    \ 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Warning:  Undefined array key 4 in /tmp/tmpa_hb7294.php on line 29\n\
    PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpa_hb7294.php:40\n\
    Stack trace:\n#0 /tmp/tmpa_hb7294.php(52): test()\n#1 {main}\n  thrown in /tmp/tmpa_hb7294.php\
    \ on line 40\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    // tri(3) = [1, 3, 2, 8]\nfunction tri($n) {\n    $result = [];\n    for ($i =\
    \ 0; $i <= $n; $i++) {\n        if ($i == 0) {\n            $result[] = 1;\n \
    \       } elseif ($i == 1) {\n            $result[] = 3;\n        } elseif ($i\
    \ == 2) {\n            $result[] = 2;\n        } elseif ($i % 2 == 0) {\n    \
    \        $result[] = 1 + $i / 2;\n        } else {\n            $result[] = $result[$i\
    \ - 1] + $result[$i - 2] + $result[$i + 1];\n        }\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return tri(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(3) !== array(1, 3, 2, 8)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4) !== array(1, 3, 2, 8, 3)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5) !== array(1, 3, 2, 8, 3,\
    \ 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== array(1,\
    \ 3, 2, 8, 3, 15, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(9) !== array(1, 3, 2, 8, 3,\
    \ 15, 4, 24, 5, 35)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120,\
    \ 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0) !== array(1))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !== array(1,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Warning:  Undefined array key 4 in /tmp/tmpyza2w691.php on line 29\n\
    PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpyza2w691.php:40\n\
    Stack trace:\n#0 /tmp/tmpyza2w691.php(52): test()\n#1 {main}\n  thrown in /tmp/tmpyza2w691.php\
    \ on line 40\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    // tri(3) = [1, 3, 2, 8]\nfunction tri($n) {\n    $result = [];\n    for ($i =\
    \ 0; $i <= $n; $i++) {\n        if ($i == 0) {\n            $result[] = 1;\n \
    \       } elseif ($i == 1) {\n            $result[] = 3;\n        } elseif ($i\
    \ == 2) {\n            $result[] = 2;\n        } elseif ($i % 2 == 0) {\n    \
    \        $result[] = 1 + $i / 2;\n        } else {\n            $result[] = $result[$i\
    \ - 1] + $result[$i - 2] + $result[$i + 1];\n        }\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return tri(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(3) !== array(1, 3, 2, 8)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4) !== array(1, 3, 2, 8, 3)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5) !== array(1, 3, 2, 8, 3,\
    \ 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== array(1,\
    \ 3, 2, 8, 3, 15, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(9) !== array(1, 3, 2, 8, 3,\
    \ 15, 4, 24, 5, 35)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120,\
    \ 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0) !== array(1))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !== array(1,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Warning:  Undefined array key 4 in /tmp/tmpmytk_o7z.php on line 29\n\
    PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpmytk_o7z.php:40\n\
    Stack trace:\n#0 /tmp/tmpmytk_o7z.php(52): test()\n#1 {main}\n  thrown in /tmp/tmpmytk_o7z.php\
    \ on line 40\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    // tri(3) = [1, 3, 2, 8]\nfunction tri($n) {\n  $arr = [];\n  for ($i = 0; $i\
    \ <= $n; $i++) {\n    if ($i == 0) {\n      $arr[] = 1;\n    } else if ($i ==\
    \ 1) {\n      $arr[] = 3;\n    } else if ($i == 2) {\n      $arr[] = 2;\n    }\
    \ else if ($i % 2 == 0) {\n      $arr[] = 1 + $i / 2;\n    } else {\n      $arr[]\
    \ = $arr[$i - 1] + $arr[$i - 2] + $arr[$i + 1];\n    }\n  }\n  return $arr;\n\
    }\n\nfunction candidate(...$args) {\n    return tri(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(3) !== array(1, 3, 2, 8)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4) !== array(1, 3, 2, 8, 3)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5) !== array(1, 3, 2, 8, 3,\
    \ 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== array(1,\
    \ 3, 2, 8, 3, 15, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(9) !== array(1, 3, 2, 8, 3,\
    \ 15, 4, 24, 5, 35)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120,\
    \ 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0) !== array(1))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !== array(1,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Warning:  Undefined array key 4 in /tmp/tmpy5wus5gi.php on line 29\n\
    PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpy5wus5gi.php:40\n\
    Stack trace:\n#0 /tmp/tmpy5wus5gi.php(52): test()\n#1 {main}\n  thrown in /tmp/tmpy5wus5gi.php\
    \ on line 40\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    // tri(3) = [1, 3, 2, 8]\nfunction tri($n) {\n    if ($n == 0) {\n        return\
    \ [1];\n    }\n    if ($n == 1) {\n        return [1, 3];\n    }\n    if ($n ==\
    \ 2) {\n        return [1, 3, 2];\n    }\n    $result = [1, 3, 2];\n    for ($i\
    \ = 3; $i <= $n; $i++) {\n        if ($i % 2 == 0) {\n            $result[] =\
    \ 1 + $i / 2;\n        } else {\n            $result[] = $result[$i - 1] + $result[$i\
    \ - 2] + $result[$i + 1];\n        }\n    }\n    return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return tri(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(3) !== array(1, 3, 2, 8)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== array(1, 3, 2, 8, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5) !== array(1, 3, 2, 8, 3, 15)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(6) !== array(1, 3, 2,\
    \ 8, 3, 15, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(9) !== array(1, 3, 2, 8, 3,\
    \ 15, 4, 24, 5, 35)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120,\
    \ 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0) !== array(1))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !== array(1,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Warning:  Undefined array key 4 in /tmp/tmpfai1fo30.php on line 32\n\
    PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpfai1fo30.php:43\n\
    Stack trace:\n#0 /tmp/tmpfai1fo30.php(55): test()\n#1 {main}\n  thrown in /tmp/tmpfai1fo30.php\
    \ on line 43\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    // tri(3) = [1, 3, 2, 8]\nfunction tri($n) {\n  $arr = [];\n  for ($i = 0; $i\
    \ <= $n; $i++) {\n    if ($i == 0) {\n      $arr[] = 1;\n    } elseif ($i == 1)\
    \ {\n      $arr[] = 3;\n    } elseif ($i == 2) {\n      $arr[] = 2;\n    } elseif\
    \ ($i % 2 == 0) {\n      $arr[] = 1 + $i / 2;\n    } else {\n      $arr[] = $arr[$i\
    \ - 1] + $arr[$i - 2] + $arr[$i + 1];\n    }\n  }\n  return $arr;\n}\n\nfunction\
    \ candidate(...$args) {\n    return tri(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(3) !== array(1, 3, 2, 8)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(4) !== array(1, 3, 2, 8, 3)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(5) !== array(1, 3, 2, 8, 3, 15)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(6) !== array(1, 3, 2,\
    \ 8, 3, 15, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(9) !== array(1, 3, 2, 8, 3,\
    \ 15, 4, 24, 5, 35)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120,\
    \ 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0) !== array(1))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !== array(1,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Warning:  Undefined array key 4 in /tmp/tmp3rx475cg.php on line 29\n\
    PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp3rx475cg.php:40\n\
    Stack trace:\n#0 /tmp/tmp3rx475cg.php(52): test()\n#1 {main}\n  thrown in /tmp/tmp3rx475cg.php\
    \ on line 40\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    // tri(3) = [1, 3, 2, 8]\nfunction tri($n) {\n    $result = [];\n    for ($i =\
    \ 0; $i <= $n; $i++) {\n        if ($i == 0) {\n            $result[] = 1;\n \
    \       } elseif ($i == 1) {\n            $result[] = 3;\n        } elseif ($i\
    \ == 2) {\n            $result[] = 2;\n        } elseif ($i % 2 == 0) {\n    \
    \        $result[] = 1 + $i / 2;\n        } else {\n            $result[] = $result[$i\
    \ - 1] + $result[$i - 2] + $result[$i + 1];\n        }\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return tri(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(3) !== array(1, 3, 2, 8)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4) !== array(1, 3, 2, 8, 3)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5) !== array(1, 3, 2, 8, 3,\
    \ 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== array(1,\
    \ 3, 2, 8, 3, 15, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(9) !== array(1, 3, 2, 8, 3,\
    \ 15, 4, 24, 5, 35)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120,\
    \ 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0) !== array(1))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !== array(1,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Warning:  Undefined array key 4 in /tmp/tmphlblm8nr.php on line 29\n\
    PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmphlblm8nr.php:40\n\
    Stack trace:\n#0 /tmp/tmphlblm8nr.php(52): test()\n#1 {main}\n  thrown in /tmp/tmphlblm8nr.php\
    \ on line 40\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    // tri(3) = [1, 3, 2, 8]\nfunction tri($n) {\n  $arr = [];\n  for ($i = 0; $i\
    \ <= $n; $i++) {\n    if ($i == 0) {\n      $arr[] = 1;\n    } else if ($i ==\
    \ 1) {\n      $arr[] = 3;\n    } else if ($i == 2) {\n      $arr[] = 2;\n    }\
    \ else if ($i % 2 == 0) {\n      $arr[] = 1 + $i / 2;\n    } else {\n      $arr[]\
    \ = $arr[$i - 1] + $arr[$i - 2] + $arr[$i + 1];\n    }\n  }\n  return $arr;\n\
    }\n\nfunction candidate(...$args) {\n    return tri(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(3) !== array(1, 3, 2, 8)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4) !== array(1, 3, 2, 8, 3)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5) !== array(1, 3, 2, 8, 3,\
    \ 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== array(1,\
    \ 3, 2, 8, 3, 15, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(9) !== array(1, 3, 2, 8, 3,\
    \ 15, 4, 24, 5, 35)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120,\
    \ 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0) !== array(1))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !== array(1,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Warning:  Undefined array key 4 in /tmp/tmpp6j_u53b.php on line 29\n\
    PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpp6j_u53b.php:40\n\
    Stack trace:\n#0 /tmp/tmpp6j_u53b.php(52): test()\n#1 {main}\n  thrown in /tmp/tmpp6j_u53b.php\
    \ on line 40\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    // tri(3) = [1, 3, 2, 8]\nfunction tri($n) {\n    $arr = [1, 3, 2];\n    if ($n\
    \ == 0) {\n        return [];\n    }\n    if ($n == 1) {\n        return [1];\n\
    \    }\n    if ($n == 2) {\n        return [1, 3];\n    }\n    if ($n == 3) {\n\
    \        return [1, 3, 2];\n    }\n    for ($i = 4; $i <= $n; $i++) {\n      \
    \  if ($i % 2 == 0) {\n            $arr[] = 1 + $i / 2;\n        } else {\n  \
    \          $arr[] = $arr[$i - 1] + $arr[$i - 2] + $arr[$i + 1];\n        }\n \
    \   }\n    return $arr;\n}\n\nfunction candidate(...$args) {\n    return tri(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3) !== array(1, 3, 2, 8)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(4) !== array(1, 3, 2,\
    \ 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !==\
    \ array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1, 3, 2,\
    \ 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35, 6, 48,\
    \ 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpirlymtjj.php:46\n\
    Stack trace:\n#0 /tmp/tmpirlymtjj.php(58): test()\n#1 {main}\n  thrown in /tmp/tmpirlymtjj.php\
    \ on line 46\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    // tri(3) = [1, 3, 2, 8]\nfunction tri($n) {\n  $result = [];\n  for ($i = 0;\
    \ $i <= $n; $i++) {\n    if ($i == 0) {\n      $result[] = 1;\n    } else if ($i\
    \ == 1) {\n      $result[] = 3;\n    } else if ($i == 2) {\n      $result[] =\
    \ 2;\n    } else if ($i % 2 == 0) {\n      $result[] = 1 + $i / 2;\n    } else\
    \ {\n      $result[] = $result[$i - 1] + $result[$i - 2] + $result[$i + 1];\n\
    \    }\n  }\n  return $result;\n}\n\nfunction candidate(...$args) {\n    return\
    \ tri(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3) !== array(1,\
    \ 3, 2, 8)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !==\
    \ array(1, 3, 2, 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5)\
    \ !== array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1,\
    \ 3, 2, 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(9) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24,\
    \ 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Warning:  Undefined array key 4 in /tmp/tmp98gf3lby.php on line 29\n\
    PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp98gf3lby.php:40\n\
    Stack trace:\n#0 /tmp/tmp98gf3lby.php(52): test()\n#1 {main}\n  thrown in /tmp/tmp98gf3lby.php\
    \ on line 40\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    // tri(3) = [1, 3, 2, 8]\nfunction tri($n) {\n    $result = [];\n    for ($i =\
    \ 0; $i <= $n; $i++) {\n        if ($i == 0) {\n            $result[] = 1;\n \
    \       } elseif ($i == 1) {\n            $result[] = 3;\n        } elseif ($i\
    \ == 2) {\n            $result[] = 2;\n        } elseif ($i % 2 == 0) {\n    \
    \        $result[] = 1 + $i / 2;\n        } else {\n            $result[] = $result[$i\
    \ - 1] + $result[$i - 2] + $result[$i + 1];\n        }\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return tri(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(3) !== array(1, 3, 2, 8)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4) !== array(1, 3, 2, 8, 3)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5) !== array(1, 3, 2, 8, 3,\
    \ 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== array(1,\
    \ 3, 2, 8, 3, 15, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(9) !== array(1, 3, 2, 8, 3,\
    \ 15, 4, 24, 5, 35)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120,\
    \ 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0) !== array(1))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !== array(1,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Warning:  Undefined array key 4 in /tmp/tmpnqjpcp10.php on line 29\n\
    PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpnqjpcp10.php:40\n\
    Stack trace:\n#0 /tmp/tmpnqjpcp10.php(52): test()\n#1 {main}\n  thrown in /tmp/tmpnqjpcp10.php\
    \ on line 40\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    // tri(3) = [1, 3, 2, 8]\nfunction tri($n) {\n    $result = [];\n    for ($i =\
    \ 0; $i <= $n; $i++) {\n        if ($i == 0) {\n            $result[] = 1;\n \
    \       } else if ($i == 1) {\n            $result[] = 3;\n        } else if ($i\
    \ == 2) {\n            $result[] = 2;\n        } else if ($i % 2 == 0) {\n   \
    \         $result[] = 1 + $i / 2;\n        } else {\n            $result[] = $result[$i\
    \ - 1] + $result[$i - 2] + $result[$i + 1];\n        }\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return tri(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(3) !== array(1, 3, 2, 8)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4) !== array(1, 3, 2, 8, 3)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5) !== array(1, 3, 2, 8, 3,\
    \ 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== array(1,\
    \ 3, 2, 8, 3, 15, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(9) !== array(1, 3, 2, 8, 3,\
    \ 15, 4, 24, 5, 35)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120,\
    \ 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0) !== array(1))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !== array(1,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Warning:  Undefined array key 4 in /tmp/tmp32mt6z8d.php on line 29\n\
    PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp32mt6z8d.php:40\n\
    Stack trace:\n#0 /tmp/tmp32mt6z8d.php(52): test()\n#1 {main}\n  thrown in /tmp/tmp32mt6z8d.php\
    \ on line 40\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    // tri(3) = [1, 3, 2, 8]\nfunction tri($n) {\n    $result = [];\n    for ($i =\
    \ 0; $i <= $n; $i++) {\n        if ($i == 0) {\n            $result[] = 1;\n \
    \       } else if ($i == 1) {\n            $result[] = 3;\n        } else if ($i\
    \ == 2) {\n            $result[] = 2;\n        } else if ($i % 2 == 0) {\n   \
    \         $result[] = 1 + $i / 2;\n        } else {\n            $result[] = $result[$i\
    \ - 1] + $result[$i - 2] + $result[$i + 1];\n        }\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return tri(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(3) !== array(1, 3, 2, 8)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4) !== array(1, 3, 2, 8, 3)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5) !== array(1, 3, 2, 8, 3,\
    \ 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== array(1,\
    \ 3, 2, 8, 3, 15, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(9) !== array(1, 3, 2, 8, 3,\
    \ 15, 4, 24, 5, 35)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120,\
    \ 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0) !== array(1))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !== array(1,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Warning:  Undefined array key 4 in /tmp/tmp2bt2yvju.php on line 29\n\
    PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp2bt2yvju.php:40\n\
    Stack trace:\n#0 /tmp/tmp2bt2yvju.php(52): test()\n#1 {main}\n  thrown in /tmp/tmp2bt2yvju.php\
    \ on line 40\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    // tri(3) = [1, 3, 2, 8]\nfunction tri($n) {\n  $result = [];\n  for ($i = 0;\
    \ $i <= $n; $i++) {\n    if ($i === 0) {\n      $result[] = 1;\n    } else if\
    \ ($i === 1) {\n      $result[] = 3;\n    } else if ($i === 2) {\n      $result[]\
    \ = 2;\n    } else if ($i % 2 === 0) {\n      $result[] = 1 + $i / 2;\n    } else\
    \ {\n      $result[] = $result[$i - 1] + $result[$i - 2] + $result[$i + 1];\n\
    \    }\n  }\n  return $result;\n}\n\nfunction candidate(...$args) {\n    return\
    \ tri(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3) !== array(1,\
    \ 3, 2, 8)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !==\
    \ array(1, 3, 2, 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5)\
    \ !== array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1,\
    \ 3, 2, 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(9) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24,\
    \ 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Warning:  Undefined array key 4 in /tmp/tmpwmaqew_b.php on line 29\n\
    PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpwmaqew_b.php:40\n\
    Stack trace:\n#0 /tmp/tmpwmaqew_b.php(52): test()\n#1 {main}\n  thrown in /tmp/tmpwmaqew_b.php\
    \ on line 40\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    // tri(3) = [1, 3, 2, 8]\nfunction tri($n) {\n  $result = [];\n  for ($i = 0;\
    \ $i <= $n; $i++) {\n    if ($i === 0) {\n      $result[] = 1;\n    } elseif ($i\
    \ === 1) {\n      $result[] = 3;\n    } elseif ($i === 2) {\n      $result[] =\
    \ 2;\n    } elseif ($i % 2 === 0) {\n      $result[] = 1 + ($i / 2);\n    } else\
    \ {\n      $result[] = $result[$i - 1] + $result[$i - 2] + $result[$i + 1];\n\
    \    }\n  }\n  return $result;\n}\n\nfunction candidate(...$args) {\n    return\
    \ tri(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3) !== array(1,\
    \ 3, 2, 8)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !==\
    \ array(1, 3, 2, 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5)\
    \ !== array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1,\
    \ 3, 2, 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(9) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24,\
    \ 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Warning:  Undefined array key 4 in /tmp/tmpbbeqkl02.php on line 29\n\
    PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpbbeqkl02.php:40\n\
    Stack trace:\n#0 /tmp/tmpbbeqkl02.php(52): test()\n#1 {main}\n  thrown in /tmp/tmpbbeqkl02.php\
    \ on line 40\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    // tri(3) = [1, 3, 2, 8]\nfunction tri($n) {\n  $result = [];\n  for ($i = 0;\
    \ $i <= $n; $i++) {\n    if ($i == 0) {\n      $result[] = 1;\n    } else if ($i\
    \ == 1) {\n      $result[] = 3;\n    } else if ($i == 2) {\n      $result[] =\
    \ 2;\n    } else if ($i % 2 == 0) {\n      $result[] = 1 + $i / 2;\n    } else\
    \ {\n      $result[] = $result[$i - 1] + $result[$i - 2] + $result[$i + 1];\n\
    \    }\n  }\n  return $result;\n}\n\nfunction candidate(...$args) {\n    return\
    \ tri(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3) !== array(1,\
    \ 3, 2, 8)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !==\
    \ array(1, 3, 2, 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5)\
    \ !== array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1,\
    \ 3, 2, 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(9) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24,\
    \ 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Warning:  Undefined array key 4 in /tmp/tmpj8hi3k9d.php on line 29\n\
    PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpj8hi3k9d.php:40\n\
    Stack trace:\n#0 /tmp/tmpj8hi3k9d.php(52): test()\n#1 {main}\n  thrown in /tmp/tmpj8hi3k9d.php\
    \ on line 40\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    // tri(3) = [1, 3, 2, 8]\nfunction tri($n) {\n    $result = [];\n    for ($i =\
    \ 0; $i <= $n; $i++) {\n        if ($i == 0) {\n            $result[] = 1;\n \
    \       } elseif ($i == 1) {\n            $result[] = 3;\n        } elseif ($i\
    \ == 2) {\n            $result[] = 2;\n        } elseif ($i % 2 == 0) {\n    \
    \        $result[] = 1 + ($i / 2);\n        } else {\n            $result[] =\
    \ $result[$i - 1] + $result[$i - 2] + $result[$i + 1];\n        }\n    }\n   \
    \ return $result;\n}\n\nfunction candidate(...$args) {\n    return tri(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3) !== array(1, 3, 2, 8)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(4) !== array(1, 3, 2,\
    \ 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !==\
    \ array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1, 3, 2,\
    \ 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35, 6, 48,\
    \ 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Warning:  Undefined array key 4 in /tmp/tmp99619uny.php on line 29\n\
    PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp99619uny.php:40\n\
    Stack trace:\n#0 /tmp/tmp99619uny.php(52): test()\n#1 {main}\n  thrown in /tmp/tmp99619uny.php\
    \ on line 40\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    // tri(3) = [1, 3, 2, 8]\nfunction tri($n) {\n  $result = [];\n  for ($i = 0;\
    \ $i <= $n; $i++) {\n    if ($i === 0) {\n      $result[] = 1;\n    } else if\
    \ ($i === 1) {\n      $result[] = 3;\n    } else if ($i === 2) {\n      $result[]\
    \ = 2;\n    } else if ($i % 2 === 0) {\n      $result[] = 1 + $i / 2;\n    } else\
    \ {\n      $result[] = $result[$i - 1] + $result[$i - 2] + $result[$i + 1];\n\
    \    }\n  }\n  return $result;\n}\n\nfunction candidate(...$args) {\n    return\
    \ tri(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3) !== array(1,\
    \ 3, 2, 8)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !==\
    \ array(1, 3, 2, 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5)\
    \ !== array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1,\
    \ 3, 2, 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(9) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24,\
    \ 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Warning:  Undefined array key 4 in /tmp/tmptsv9d1tz.php on line 29\n\
    PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmptsv9d1tz.php:40\n\
    Stack trace:\n#0 /tmp/tmptsv9d1tz.php(52): test()\n#1 {main}\n  thrown in /tmp/tmptsv9d1tz.php\
    \ on line 40\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    // tri(3) = [1, 3, 2, 8]\nfunction tri($n) {\n  $arr = [1, 3, 2];\n  for ($i =\
    \ 3; $i <= $n; $i++) {\n    if ($i % 2 == 0) {\n      $arr[] = 1 + ($i / 2);\n\
    \    } else {\n      $arr[] = $arr[$i - 1] + $arr[$i - 2] + $arr[$i + 1];\n  \
    \  }\n  }\n  return $arr;\n}\n\nfunction candidate(...$args) {\n    return tri(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3) !== array(1, 3, 2, 8)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(4) !== array(1, 3, 2,\
    \ 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !==\
    \ array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1, 3, 2,\
    \ 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35, 6, 48,\
    \ 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Warning:  Undefined array key 4 in /tmp/tmp8cp346oa.php on line 23\n\
    PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp8cp346oa.php:34\n\
    Stack trace:\n#0 /tmp/tmp8cp346oa.php(46): test()\n#1 {main}\n  thrown in /tmp/tmp8cp346oa.php\
    \ on line 34\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    // tri(3) = [1, 3, 2, 8]\nfunction tri($n) {\n  $result = [];\n  for ($i = 0;\
    \ $i <= $n; $i++) {\n    if ($i == 0) {\n      $result[] = 1;\n    } else if ($i\
    \ == 1) {\n      $result[] = 3;\n    } else if ($i == 2) {\n      $result[] =\
    \ 2;\n    } else if ($i % 2 == 0) {\n      $result[] = 1 + $i / 2;\n    } else\
    \ {\n      $result[] = $result[$i - 1] + $result[$i - 2] + $result[$i + 1];\n\
    \    }\n  }\n  return $result;\n}\n\nfunction candidate(...$args) {\n    return\
    \ tri(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3) !== array(1,\
    \ 3, 2, 8)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !==\
    \ array(1, 3, 2, 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5)\
    \ !== array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1,\
    \ 3, 2, 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(9) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24,\
    \ 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Warning:  Undefined array key 4 in /tmp/tmpbo42yxk0.php on line 29\n\
    PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpbo42yxk0.php:40\n\
    Stack trace:\n#0 /tmp/tmpbo42yxk0.php(52): test()\n#1 {main}\n  thrown in /tmp/tmpbo42yxk0.php\
    \ on line 40\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    // tri(3) = [1, 3, 2, 8]\nfunction tri($n) {\n  $result = [];\n  for ($i = 0;\
    \ $i <= $n; $i++) {\n    if ($i === 0) {\n      $result[] = 1;\n    } else if\
    \ ($i === 1) {\n      $result[] = 3;\n    } else if ($i === 2) {\n      $result[]\
    \ = 2;\n    } else if ($i % 2 === 0) {\n      $result[] = 1 + ($i / 2);\n    }\
    \ else {\n      $result[] = $result[$i - 1] + $result[$i - 2] + $result[$i + 1];\n\
    \    }\n  }\n  return $result;\n}\n\nfunction candidate(...$args) {\n    return\
    \ tri(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3) !== array(1,\
    \ 3, 2, 8)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !==\
    \ array(1, 3, 2, 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5)\
    \ !== array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1,\
    \ 3, 2, 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(9) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24,\
    \ 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Warning:  Undefined array key 4 in /tmp/tmpeteru8gt.php on line 29\n\
    PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpeteru8gt.php:40\n\
    Stack trace:\n#0 /tmp/tmpeteru8gt.php(52): test()\n#1 {main}\n  thrown in /tmp/tmpeteru8gt.php\
    \ on line 40\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    // tri(3) = [1, 3, 2, 8]\nfunction tri($n) {\n    $result = [];\n    for ($i =\
    \ 0; $i <= $n; $i++) {\n        if ($i == 0) {\n            $result[] = 1;\n \
    \       } elseif ($i == 1) {\n            $result[] = 3;\n        } elseif ($i\
    \ == 2) {\n            $result[] = 2;\n        } elseif ($i % 2 == 0) {\n    \
    \        $result[] = 1 + $i / 2;\n        } else {\n            $result[] = $result[$i\
    \ - 1] + $result[$i - 2] + $result[$i + 1];\n        }\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return tri(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(3) !== array(1, 3, 2, 8)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4) !== array(1, 3, 2, 8, 3)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5) !== array(1, 3, 2, 8, 3,\
    \ 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== array(1,\
    \ 3, 2, 8, 3, 15, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(9) !== array(1, 3, 2, 8, 3,\
    \ 15, 4, 24, 5, 35)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120,\
    \ 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0) !== array(1))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !== array(1,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Warning:  Undefined array key 4 in /tmp/tmpkp839jxu.php on line 29\n\
    PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpkp839jxu.php:40\n\
    Stack trace:\n#0 /tmp/tmpkp839jxu.php(52): test()\n#1 {main}\n  thrown in /tmp/tmpkp839jxu.php\
    \ on line 40\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    // tri(3) = [1, 3, 2, 8]\nfunction tri($n) {\n  $result = [];\n  for ($i = 0;\
    \ $i <= $n; $i++) {\n    if ($i == 0) {\n      $result[] = 1;\n    } else if ($i\
    \ == 1) {\n      $result[] = 3;\n    } else if ($i == 2) {\n      $result[] =\
    \ 2;\n    } else if ($i % 2 == 0) {\n      $result[] = 1 + $i / 2;\n    } else\
    \ {\n      $result[] = $result[$i - 1] + $result[$i - 2] + $result[$i + 1];\n\
    \    }\n  }\n  return $result;\n}\n\nfunction candidate(...$args) {\n    return\
    \ tri(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3) !== array(1,\
    \ 3, 2, 8)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !==\
    \ array(1, 3, 2, 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5)\
    \ !== array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1,\
    \ 3, 2, 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(9) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24,\
    \ 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Warning:  Undefined array key 4 in /tmp/tmpuvt0b1n8.php on line 29\n\
    PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpuvt0b1n8.php:40\n\
    Stack trace:\n#0 /tmp/tmpuvt0b1n8.php(52): test()\n#1 {main}\n  thrown in /tmp/tmpuvt0b1n8.php\
    \ on line 40\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    // tri(3) = [1, 3, 2, 8]\nfunction tri($n) {\n    $arr = [1, 3, 2];\n    if ($n\
    \ == 0) {\n        return [1];\n    } elseif ($n == 1) {\n        return [1, 3];\n\
    \    } elseif ($n == 2) {\n        return [1, 3, 2];\n    } else {\n        for\
    \ ($i = 3; $i <= $n; $i++) {\n            if ($i % 2 == 0) {\n               \
    \ $arr[] = 1 + $i / 2;\n            } else {\n                $arr[] = $arr[$i\
    \ - 1] + $arr[$i - 2] + $arr[$i + 1];\n            }\n        }\n    }\n    return\
    \ $arr;\n}\n\nfunction candidate(...$args) {\n    return tri(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(3) !== array(1, 3, 2, 8)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(4) !== array(1, 3, 2, 8, 3))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !== array(1,\
    \ 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6)\
    \ !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(8) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(9) !== array(1,\
    \ 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35, 6, 48, 7, 63,\
    \ 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(0) !== array(1)) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(1) !== array(1, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Warning:  Undefined array key 4 in /tmp/tmpr8hoyg21.php on line 30\n\
    PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpr8hoyg21.php:42\n\
    Stack trace:\n#0 /tmp/tmpr8hoyg21.php(54): test()\n#1 {main}\n  thrown in /tmp/tmpr8hoyg21.php\
    \ on line 42\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    // tri(3) = [1, 3, 2, 8]\nfunction tri($n) {\n    $result = [];\n    for ($i =\
    \ 0; $i <= $n; $i++) {\n        if ($i == 0) {\n            $result[] = 1;\n \
    \       } else if ($i == 1) {\n            $result[] = 3;\n        } else if ($i\
    \ == 2) {\n            $result[] = 2;\n        } else if ($i % 2 == 0) {\n   \
    \         $result[] = 1 + $i / 2;\n        } else {\n            $result[] = $result[$i\
    \ - 1] + $result[$i - 2] + $result[$i + 1];\n        }\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return tri(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(3) !== array(1, 3, 2, 8)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4) !== array(1, 3, 2, 8, 3)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5) !== array(1, 3, 2, 8, 3,\
    \ 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== array(1,\
    \ 3, 2, 8, 3, 15, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(9) !== array(1, 3, 2, 8, 3,\
    \ 15, 4, 24, 5, 35)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120,\
    \ 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0) !== array(1))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !== array(1,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Warning:  Undefined array key 4 in /tmp/tmpkyyhtm0p.php on line 29\n\
    PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpkyyhtm0p.php:40\n\
    Stack trace:\n#0 /tmp/tmpkyyhtm0p.php(52): test()\n#1 {main}\n  thrown in /tmp/tmpkyyhtm0p.php\
    \ on line 40\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    // tri(3) = [1, 3, 2, 8]\nfunction tri($n) {\n  $result = [];\n  for ($i = 0;\
    \ $i <= $n; $i++) {\n    if ($i == 0) {\n      $result[] = 1;\n    } else if ($i\
    \ == 1) {\n      $result[] = 3;\n    } else if ($i == 2) {\n      $result[] =\
    \ 2;\n    } else if ($i % 2 == 0) {\n      $result[] = 1 + $i / 2;\n    } else\
    \ {\n      $result[] = $result[$i - 1] + $result[$i - 2] + $result[$i + 1];\n\
    \    }\n  }\n  return $result;\n}\n\nfunction candidate(...$args) {\n    return\
    \ tri(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3) !== array(1,\
    \ 3, 2, 8)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !==\
    \ array(1, 3, 2, 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5)\
    \ !== array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1,\
    \ 3, 2, 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(9) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24,\
    \ 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Warning:  Undefined array key 4 in /tmp/tmpk00_x_wa.php on line 29\n\
    PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpk00_x_wa.php:40\n\
    Stack trace:\n#0 /tmp/tmpk00_x_wa.php(52): test()\n#1 {main}\n  thrown in /tmp/tmpk00_x_wa.php\
    \ on line 40\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    // tri(3) = [1, 3, 2, 8]\nfunction tri($n) {\n  $result = [];\n  for ($i = 0;\
    \ $i <= $n; $i++) {\n    if ($i === 0) {\n      $result[] = 1;\n    } else if\
    \ ($i === 1) {\n      $result[] = 3;\n    } else if ($i === 2) {\n      $result[]\
    \ = 2;\n    } else if ($i % 2 === 0) {\n      $result[] = 1 + $i / 2;\n    } else\
    \ {\n      $result[] = $result[$i - 1] + $result[$i - 2] + $result[$i + 1];\n\
    \    }\n  }\n  return $result;\n}\n\nfunction candidate(...$args) {\n    return\
    \ tri(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3) !== array(1,\
    \ 3, 2, 8)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !==\
    \ array(1, 3, 2, 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5)\
    \ !== array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1,\
    \ 3, 2, 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(9) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24,\
    \ 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Warning:  Undefined array key 4 in /tmp/tmpl63h7gb8.php on line 29\n\
    PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpl63h7gb8.php:40\n\
    Stack trace:\n#0 /tmp/tmpl63h7gb8.php(52): test()\n#1 {main}\n  thrown in /tmp/tmpl63h7gb8.php\
    \ on line 40\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    // tri(3) = [1, 3, 2, 8]\nfunction tri($n) {\n  $result = [];\n  for ($i = 0;\
    \ $i <= $n; $i++) {\n    if ($i === 0) {\n      $result[] = 1;\n    } else if\
    \ ($i === 1) {\n      $result[] = 3;\n    } else if ($i === 2) {\n      $result[]\
    \ = 2;\n    } else if ($i % 2 === 0) {\n      $result[] = 1 + $i / 2;\n    } else\
    \ {\n      $result[] = $result[$i - 1] + $result[$i - 2] + $result[$i + 1];\n\
    \    }\n  }\n  return $result;\n}\n\necho tri(3);\nfunction candidate(...$args)\
    \ {\n    return tri(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3)\
    \ !== array(1, 3, 2, 8)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(1, 3, 2, 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5) !== array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1,\
    \ 3, 2, 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(9) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24,\
    \ 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: Array
  stderr: "PHP Warning:  Undefined array key 4 in /tmp/tmptdmg8m3c.php on line 29\n\
    PHP Warning:  Array to string conversion in /tmp/tmptdmg8m3c.php on line 35\n\
    PHP Warning:  Undefined array key 4 in /tmp/tmptdmg8m3c.php on line 29\nPHP Fatal\
    \ error:  Uncaught Exception: Test failed! in /tmp/tmptdmg8m3c.php:41\nStack trace:\n\
    #0 /tmp/tmptdmg8m3c.php(53): test()\n#1 {main}\n  thrown in /tmp/tmptdmg8m3c.php\
    \ on line 41\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    // tri(3) = [1, 3, 2, 8]\nfunction tri($n) {\n  $result = [];\n  for ($i = 0;\
    \ $i <= $n; $i++) {\n    if ($i == 0) {\n      $result[] = 1;\n    } elseif ($i\
    \ == 1) {\n      $result[] = 3;\n    } elseif ($i == 2) {\n      $result[] = 2;\n\
    \    } elseif ($i % 2 == 0) {\n      $result[] = 1 + $i / 2;\n    } else {\n \
    \     $result[] = $result[$i - 1] + $result[$i - 2] + $result[$i + 1];\n    }\n\
    \  }\n  return $result;\n}\n\nfunction candidate(...$args) {\n    return tri(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3) !== array(1, 3, 2, 8)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(4) !== array(1, 3, 2,\
    \ 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !==\
    \ array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1, 3, 2,\
    \ 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35, 6, 48,\
    \ 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Warning:  Undefined array key 4 in /tmp/tmp_0cuzddm.php on line 29\n\
    PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp_0cuzddm.php:40\n\
    Stack trace:\n#0 /tmp/tmp_0cuzddm.php(52): test()\n#1 {main}\n  thrown in /tmp/tmp_0cuzddm.php\
    \ on line 40\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    // tri(3) = [1, 3, 2, 8]\nfunction tri($n) {\n    $arr = [1, 3, 2];\n    for ($i\
    \ = 3; $i <= $n; $i++) {\n        if ($i % 2 == 0) {\n            $arr[] = 1 +\
    \ $i / 2;\n        } else {\n            $arr[] = $arr[$i - 1] + $arr[$i - 2]\
    \ + $arr[$i + 1];\n        }\n    }\n    return $arr;\n}\n\nfunction candidate(...$args)\
    \ {\n    return tri(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3)\
    \ !== array(1, 3, 2, 8)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(1, 3, 2, 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5) !== array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1,\
    \ 3, 2, 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(9) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24,\
    \ 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Warning:  Undefined array key 4 in /tmp/tmpyi_9n75b.php on line 23\n\
    PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpyi_9n75b.php:34\n\
    Stack trace:\n#0 /tmp/tmpyi_9n75b.php(46): test()\n#1 {main}\n  thrown in /tmp/tmpyi_9n75b.php\
    \ on line 34\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    // tri(3) = [1, 3, 2, 8]\nfunction tri($n) {\n    $arr = [1, 3, 2];\n    for ($i\
    \ = 3; $i <= $n; $i++) {\n        if ($i % 2 == 0) {\n            $arr[] = 1 +\
    \ $i / 2;\n        } else {\n            $arr[] = $arr[$i - 1] + $arr[$i - 2]\
    \ + $arr[$i + 1];\n        }\n    }\n    return $arr;\n}\n\nfunction candidate(...$args)\
    \ {\n    return tri(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3)\
    \ !== array(1, 3, 2, 8)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== array(1, 3, 2, 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(5) !== array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1,\
    \ 3, 2, 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(9) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24,\
    \ 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Warning:  Undefined array key 4 in /tmp/tmp2y68lnr9.php on line 23\n\
    PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp2y68lnr9.php:34\n\
    Stack trace:\n#0 /tmp/tmp2y68lnr9.php(46): test()\n#1 {main}\n  thrown in /tmp/tmp2y68lnr9.php\
    \ on line 34\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    // tri(3) = [1, 3, 2, 8]\nfunction tri($n) {\n    $result = [];\n    for ($i =\
    \ 0; $i <= $n; $i++) {\n        if ($i === 0) {\n            $result[] = 1;\n\
    \        } elseif ($i === 1) {\n            $result[] = 3;\n        } elseif ($i\
    \ === 2) {\n            $result[] = 2;\n        } elseif ($i % 2 === 0) {\n  \
    \          $result[] = 1 + ($i / 2);\n        } else {\n            $result[]\
    \ = $result[$i - 1] + $result[$i - 2] + $result[$i + 1];\n        }\n    }\n \
    \   return $result;\n}\n\nfunction candidate(...$args) {\n    return tri(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3) !== array(1, 3, 2, 8)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(4) !== array(1, 3, 2,\
    \ 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !==\
    \ array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1, 3, 2,\
    \ 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35, 6, 48,\
    \ 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Warning:  Undefined array key 4 in /tmp/tmpam86xpao.php on line 29\n\
    PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpam86xpao.php:40\n\
    Stack trace:\n#0 /tmp/tmpam86xpao.php(52): test()\n#1 {main}\n  thrown in /tmp/tmpam86xpao.php\
    \ on line 40\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    // tri(3) = [1, 3, 2, 8]\nfunction tri($n) {\n    $result = [];\n    for ($i =\
    \ 0; $i <= $n; $i++) {\n        if ($i == 0) {\n            $result[] = 1;\n \
    \       } elseif ($i == 1) {\n            $result[] = 3;\n        } elseif ($i\
    \ == 2) {\n            $result[] = 2;\n        } elseif ($i % 2 == 0) {\n    \
    \        $result[] = 1 + ($i / 2);\n        } else {\n            $result[] =\
    \ $result[$i - 1] + $result[$i - 2] + $result[$i + 1];\n        }\n    }\n   \
    \ return $result;\n}\n\nfunction candidate(...$args) {\n    return tri(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3) !== array(1, 3, 2, 8)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(4) !== array(1, 3, 2,\
    \ 8, 3)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(5) !==\
    \ array(1, 3, 2, 8, 3, 15)) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(6) !== array(1, 3, 2, 8, 3, 15, 4)) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(7) !== array(1, 3, 2, 8, 3, 15, 4, 24)) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(8) !== array(1, 3, 2,\
    \ 8, 3, 15, 4, 24, 5)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(9)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(20) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35, 6, 48,\
    \ 7, 63, 8, 80, 9, 99, 10, 120, 11)) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(0) !== array(1)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1) !== array(1, 3)) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Warning:  Undefined array key 4 in /tmp/tmpwsdh_pji.php on line 29\n\
    PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpwsdh_pji.php:40\n\
    Stack trace:\n#0 /tmp/tmpwsdh_pji.php(52): test()\n#1 {main}\n  thrown in /tmp/tmpwsdh_pji.php\
    \ on line 40\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    // tri(3) = [1, 3, 2, 8]\nfunction tri($n) {\n    $result = [];\n    for ($i =\
    \ 0; $i <= $n; $i++) {\n        if ($i == 0) {\n            $result[] = 1;\n \
    \       } elseif ($i == 1) {\n            $result[] = 3;\n        } elseif ($i\
    \ == 2) {\n            $result[] = 2;\n        } elseif ($i % 2 == 0) {\n    \
    \        $result[] = 1 + $i / 2;\n        } else {\n            $result[] = $result[$i\
    \ - 1] + $result[$i - 2] + $result[$i + 1];\n        }\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return tri(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(3) !== array(1, 3, 2, 8)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4) !== array(1, 3, 2, 8, 3)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5) !== array(1, 3, 2, 8, 3,\
    \ 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== array(1,\
    \ 3, 2, 8, 3, 15, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(9) !== array(1, 3, 2, 8, 3,\
    \ 15, 4, 24, 5, 35)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120,\
    \ 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0) !== array(1))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !== array(1,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Warning:  Undefined array key 4 in /tmp/tmpc8uakusq.php on line 29\n\
    PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpc8uakusq.php:40\n\
    Stack trace:\n#0 /tmp/tmpc8uakusq.php(52): test()\n#1 {main}\n  thrown in /tmp/tmpc8uakusq.php\
    \ on line 40\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    // tri(3) = [1, 3, 2, 8]\nfunction tri($n) {\n    $result = [];\n    for ($i =\
    \ 0; $i <= $n; $i++) {\n        if ($i == 0) {\n            $result[] = 1;\n \
    \       } elseif ($i == 1) {\n            $result[] = 3;\n        } elseif ($i\
    \ == 2) {\n            $result[] = 2;\n        } elseif ($i % 2 == 0) {\n    \
    \        $result[] = 1 + $i / 2;\n        } else {\n            $result[] = $result[$i\
    \ - 1] + $result[$i - 2] + $result[$i + 1];\n        }\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return tri(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(3) !== array(1, 3, 2, 8)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4) !== array(1, 3, 2, 8, 3)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5) !== array(1, 3, 2, 8, 3,\
    \ 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== array(1,\
    \ 3, 2, 8, 3, 15, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(9) !== array(1, 3, 2, 8, 3,\
    \ 15, 4, 24, 5, 35)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120,\
    \ 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0) !== array(1))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !== array(1,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Warning:  Undefined array key 4 in /tmp/tmpyvdl2ltv.php on line 29\n\
    PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpyvdl2ltv.php:40\n\
    Stack trace:\n#0 /tmp/tmpyvdl2ltv.php(52): test()\n#1 {main}\n  thrown in /tmp/tmpyvdl2ltv.php\
    \ on line 40\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Everyone knows Fibonacci sequence, it was studied deeply by\
    \ mathematicians in \n// the last couple centuries. However, what people don't\
    \ know is Tribonacci sequence.\n// Tribonacci sequence is defined by the recurrence:\n\
    // tri(1) = 3\n// tri(n) = 1 + n / 2, if n is even.\n// tri(n) =  tri(n - 1) +\
    \ tri(n - 2) + tri(n + 1), if n is odd.\n// For example:\n// tri(2) = 1 + (2 /\
    \ 2) = 2\n// tri(4) = 3\n// tri(3) = tri(2) + tri(1) + tri(4)\n// = 2 + 3 + 3\
    \ = 8 \n// You are given a non-negative integer number n, you have to a return\
    \ a list of the \n// first n + 1 numbers of the Tribonacci sequence.\n// Examples:\n\
    // tri(3) = [1, 3, 2, 8]\nfunction tri($n) {\n    $result = [];\n    for ($i =\
    \ 0; $i <= $n; $i++) {\n        if ($i == 0) {\n            $result[] = 1;\n \
    \       } elseif ($i == 1) {\n            $result[] = 3;\n        } elseif ($i\
    \ == 2) {\n            $result[] = 2;\n        } elseif ($i % 2 == 0) {\n    \
    \        $result[] = 1 + $i / 2;\n        } else {\n            $result[] = $result[$i\
    \ - 1] + $result[$i - 2] + $result[$i + 1];\n        }\n    }\n    return $result;\n\
    }\n\nfunction candidate(...$args) {\n    return tri(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(3) !== array(1, 3, 2, 8)) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(4) !== array(1, 3, 2, 8, 3)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(5) !== array(1, 3, 2, 8, 3,\
    \ 15)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6) !== array(1,\
    \ 3, 2, 8, 3, 15, 4)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24)) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(8) !== array(1, 3, 2, 8, 3, 15, 4, 24, 5)) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(9) !== array(1, 3, 2, 8, 3,\
    \ 15, 4, 24, 5, 35)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(20)\
    \ !== array(1, 3, 2, 8, 3, 15, 4, 24, 5, 35, 6, 48, 7, 63, 8, 80, 9, 99, 10, 120,\
    \ 11)) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0) !== array(1))\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(1) !== array(1,\
    \ 3)) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Warning:  Undefined array key 4 in /tmp/tmp5kzdnhar.php on line 29\n\
    PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp5kzdnhar.php:40\n\
    Stack trace:\n#0 /tmp/tmp5kzdnhar.php(52): test()\n#1 {main}\n  thrown in /tmp/tmp5kzdnhar.php\
    \ on line 40\n"
  exit_code: 255
  status: Exception

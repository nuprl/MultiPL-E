name: HumanEval_155_even_odd_count
language: php
prompt: "<?php\n// Given an integer. return a tuple that has the number of even and\
  \ odd digits respectively.\n// Example:\n// even_odd_count(-12) ==> (1, 1)\n// even_odd_count(123)\
  \ ==> (1, 2)\nfunction even_odd_count($num) {\n"
tests: "function candidate(...$args) {\n    return even_odd_count(...$args);\n}\n\n\
  function test(): void {\n    if (candidate(7) !== array(0, 1)) { throw new Exception(\"\
  Test failed!\"); }\n    if (candidate(-78) !== array(1, 1)) { throw new Exception(\"\
  Test failed!\"); }\n    if (candidate(3452) !== array(2, 2)) { throw new Exception(\"\
  Test failed!\"); }\n    if (candidate(346211) !== array(3, 3)) { throw new Exception(\"\
  Test failed!\"); }\n    if (candidate(-345821) !== array(3, 3)) { throw new Exception(\"\
  Test failed!\"); }\n    if (candidate(-2) !== array(1, 0)) { throw new Exception(\"\
  Test failed!\"); }\n    if (candidate(-45347) !== array(2, 3)) { throw new Exception(\"\
  Test failed!\"); }\n    if (candidate(0) !== array(1, 0)) { throw new Exception(\"\
  Test failed!\"); }\n}\n\ntest();"
completions: ["    $even = 0;\n    $odd = 0;\n    $num = abs($num);\n    while ($num\
    \ > 0) {\n        $digit = $num % 10;\n        if ($digit % 2 == 0) {\n      \
    \      $even++;\n        } else {\n            $odd++;\n        }\n        $num\
    \ = floor($num / 10);\n    }\n    return array($even, $odd);\n}\n", "    $even\
    \ = 0;\n    $odd = 0;\n    $num = abs($num);\n    while ($num > 0) {\n       \
    \ $digit = $num % 10;\n        if ($digit % 2 == 0) {\n            $even++;\n\
    \        } else {\n            $odd++;\n        }\n        $num = (int)($num /\
    \ 10);\n    }\n    return [$even, $odd];\n}\n", "    $even = 0;\n    $odd = 0;\n\
    \    $num = abs($num);\n    while ($num > 0) {\n        $digit = $num % 10;\n\
    \        if ($digit % 2 == 0) {\n            $even++;\n        } else {\n    \
    \        $odd++;\n        }\n        $num = floor($num / 10);\n    }\n    return\
    \ array($even, $odd);\n}\n", "    $even = 0;\n    $odd = 0;\n    $num = abs($num);\n\
    \    while ($num > 0) {\n        $digit = $num % 10;\n        if ($digit % 2 ==\
    \ 0) {\n            $even++;\n        } else {\n            $odd++;\n        }\n\
    \        $num = floor($num / 10);\n    }\n    return [$even, $odd];\n}\n", " \
    \   $even = 0;\n    $odd = 0;\n    $num = abs($num);\n    while ($num > 0) {\n\
    \        $digit = $num % 10;\n        if ($digit % 2 == 0) {\n            $even++;\n\
    \        } else {\n            $odd++;\n        }\n        $num = floor($num /\
    \ 10);\n    }\n    return array($even, $odd);\n}\n", "    $even = 0;\n    $odd\
    \ = 0;\n    $num = abs($num);\n    while ($num > 0) {\n        $digit = $num %\
    \ 10;\n        if ($digit % 2 == 0) {\n            $even++;\n        } else {\n\
    \            $odd++;\n        }\n        $num = floor($num / 10);\n    }\n   \
    \ return array($even, $odd);\n}\n", "    $even = 0;\n    $odd = 0;\n    $num =\
    \ abs($num);\n    while ($num > 0) {\n        $digit = $num % 10;\n        if\
    \ ($digit % 2 == 0) {\n            $even++;\n        } else {\n            $odd++;\n\
    \        }\n        $num = intval($num / 10);\n    }\n    return array($even,\
    \ $odd);\n}\n", "    $even = 0;\n    $odd = 0;\n    $num = abs($num);\n    while\
    \ ($num > 0) {\n        $digit = $num % 10;\n        if ($digit % 2 == 0) {\n\
    \            $even++;\n        } else {\n            $odd++;\n        }\n    \
    \    $num = floor($num / 10);\n    }\n    return array($even, $odd);\n}\necho\
    \ \"<pre>\";\nprint_r(even_odd_count(-12));\necho \"</pre>\";\necho \"<pre>\"\
    ;\nprint_r(even_odd_count(123));\necho \"</pre>\";", "  $even = 0;\n  $odd = 0;\n\
    \  $num = abs($num);\n  while ($num > 0) {\n    $digit = $num % 10;\n    if ($digit\
    \ % 2 == 0) {\n      $even++;\n    } else {\n      $odd++;\n    }\n    $num =\
    \ ($num - $digit) / 10;\n  }\n  return array($even, $odd);\n}\n", "    $even =\
    \ 0;\n    $odd = 0;\n    $num = abs($num);\n    while ($num > 0) {\n        $digit\
    \ = $num % 10;\n        if ($digit % 2 == 0) {\n            $even++;\n       \
    \ } else {\n            $odd++;\n        }\n        $num = floor($num / 10);\n\
    \    }\n    return array($even, $odd);\n}\n", "    $even = 0;\n    $odd = 0;\n\
    \    $num = abs($num);\n    while ($num > 0) {\n        $digit = $num % 10;\n\
    \        if ($digit % 2 == 0) {\n            $even++;\n        } else {\n    \
    \        $odd++;\n        }\n        $num = floor($num / 10);\n    }\n    return\
    \ [$even, $odd];\n}\n", "    $even = 0;\n    $odd = 0;\n    $num = abs($num);\n\
    \    while ($num > 0) {\n        $digit = $num % 10;\n        if ($digit % 2 ==\
    \ 0) {\n            $even++;\n        } else {\n            $odd++;\n        }\n\
    \        $num = floor($num / 10);\n    }\n    return [$even, $odd];\n}\n", " \
    \   $even = 0;\n    $odd = 0;\n    $num = abs($num);\n    while ($num > 0) {\n\
    \        $digit = $num % 10;\n        if ($digit % 2 == 0) {\n            $even++;\n\
    \        } else {\n            $odd++;\n        }\n        $num = floor($num /\
    \ 10);\n    }\n    return array($even, $odd);\n}\n", "    $even = 0;\n    $odd\
    \ = 0;\n    $num = abs($num);\n    while ($num > 0) {\n        $digit = $num %\
    \ 10;\n        if ($digit % 2 == 0) {\n            $even++;\n        } else {\n\
    \            $odd++;\n        }\n        $num = floor($num / 10);\n    }\n   \
    \ return [$even, $odd];\n}\n", "    $even = 0;\n    $odd = 0;\n    $num = abs($num);\n\
    \    while ($num > 0) {\n        $digit = $num % 10;\n        if ($digit % 2 ==\
    \ 0) {\n            $even++;\n        } else {\n            $odd++;\n        }\n\
    \        $num = floor($num / 10);\n    }\n    return array($even, $odd);\n}\n",
  "    $even = 0;\n    $odd = 0;\n    $num = abs($num);\n    while ($num > 0) {\n\
    \        $rem = $num % 10;\n        if ($rem % 2 == 0) {\n            $even++;\n\
    \        } else {\n            $odd++;\n        }\n        $num = floor($num /\
    \ 10);\n    }\n    return array($even, $odd);\n}\n", "    $even = 0;\n    $odd\
    \ = 0;\n    $num = abs($num);\n    while ($num > 0) {\n        $remainder = $num\
    \ % 10;\n        if ($remainder % 2 == 0) {\n            $even++;\n        } else\
    \ {\n            $odd++;\n        }\n        $num = floor($num / 10);\n    }\n\
    \    return array($even, $odd);\n}\n", "    $even = 0;\n    $odd = 0;\n    $num\
    \ = abs($num);\n    while ($num > 0) {\n        $digit = $num % 10;\n        if\
    \ ($digit % 2 == 0) {\n            $even++;\n        } else {\n            $odd++;\n\
    \        }\n        $num = floor($num / 10);\n    }\n    return array($even, $odd);\n\
    }\n", "    $even = 0;\n    $odd = 0;\n    $num = abs($num);\n    while ($num >\
    \ 0) {\n        $digit = $num % 10;\n        if ($digit % 2 == 0) {\n        \
    \    $even++;\n        } else {\n            $odd++;\n        }\n        $num\
    \ = intval($num / 10);\n    }\n    return array($even, $odd);\n}\n", "    $even\
    \ = 0;\n    $odd = 0;\n    $num = abs($num);\n    while ($num > 0) {\n       \
    \ $digit = $num % 10;\n        if ($digit % 2 == 0) {\n            $even++;\n\
    \        } else {\n            $odd++;\n        }\n        $num = intval($num\
    \ / 10);\n    }\n    return array($even, $odd);\n}\n", "    $even = 0;\n    $odd\
    \ = 0;\n    $num = abs($num);\n    while ($num > 0) {\n        $digit = $num %\
    \ 10;\n        if ($digit % 2 == 0) {\n            $even++;\n        } else {\n\
    \            $odd++;\n        }\n        $num = floor($num / 10);\n    }\n   \
    \ return array($even, $odd);\n}\n", "    $even = 0;\n    $odd = 0;\n    $num =\
    \ abs($num);\n    while ($num > 0) {\n        $digit = $num % 10;\n        if\
    \ ($digit % 2 == 0) {\n            $even++;\n        } else {\n            $odd++;\n\
    \        }\n        $num = floor($num / 10);\n    }\n    return [$even, $odd];\n\
    }\n", "    $even = 0;\n    $odd = 0;\n    $num = abs($num);\n    while ($num >\
    \ 0) {\n        $digit = $num % 10;\n        if ($digit % 2 == 0) {\n        \
    \    $even++;\n        } else {\n            $odd++;\n        }\n        $num\
    \ = floor($num / 10);\n    }\n    return array($even, $odd);\n}", "    $even =\
    \ 0;\n    $odd = 0;\n    $num = abs($num);\n    while ($num > 0) {\n        $digit\
    \ = $num % 10;\n        if ($digit % 2 == 0) {\n            $even++;\n       \
    \ } else {\n            $odd++;\n        }\n        $num = floor($num / 10);\n\
    \    }\n    return array($even, $odd);\n}\n", "    $even = 0;\n    $odd = 0;\n\
    \    $num = abs($num);\n    while ($num > 0) {\n        $digit = $num % 10;\n\
    \        if ($digit % 2 == 0) {\n            $even++;\n        } else {\n    \
    \        $odd++;\n        }\n        $num = intval($num / 10);\n    }\n    return\
    \ [$even, $odd];\n}\n", "    $even = 0;\n    $odd = 0;\n    $num = abs($num);\n\
    \    while ($num > 0) {\n        $digit = $num % 10;\n        if ($digit % 2 ==\
    \ 0) {\n            $even++;\n        } else {\n            $odd++;\n        }\n\
    \        $num = floor($num / 10);\n    }\n    return array($even, $odd);\n}\n",
  "    $even = 0;\n    $odd = 0;\n    $num = abs($num);\n    while ($num > 0) {\n\
    \        $digit = $num % 10;\n        if ($digit % 2 == 0) {\n            $even++;\n\
    \        } else {\n            $odd++;\n        }\n        $num = floor($num /\
    \ 10);\n    }\n    return array($even, $odd);\n}\n", "    $even = 0;\n    $odd\
    \ = 0;\n    $num = abs($num);\n    while ($num > 0) {\n        $digit = $num %\
    \ 10;\n        if ($digit % 2 == 0) {\n            $even++;\n        } else {\n\
    \            $odd++;\n        }\n        $num = (int)($num / 10);\n    }\n   \
    \ return [$even, $odd];\n}\n", "    $even = 0;\n    $odd = 0;\n    $num = abs($num);\n\
    \    while ($num > 0) {\n        $digit = $num % 10;\n        if ($digit % 2 ==\
    \ 0) {\n            $even++;\n        } else {\n            $odd++;\n        }\n\
    \        $num = floor($num / 10);\n    }\n    return array($even, $odd);\n}\n",
  "    $even = 0;\n    $odd = 0;\n    $num = abs($num);\n    while ($num > 0) {\n\
    \        $digit = $num % 10;\n        if ($digit % 2 == 0) {\n            $even++;\n\
    \        } else {\n            $odd++;\n        }\n        $num = floor($num /\
    \ 10);\n    }\n    return array($even, $odd);\n}\n", "    $even = 0;\n    $odd\
    \ = 0;\n    $num = abs($num);\n    while ($num > 0) {\n        $digit = $num %\
    \ 10;\n        if ($digit % 2 == 0) {\n            $even++;\n        } else {\n\
    \            $odd++;\n        }\n        $num = floor($num / 10);\n    }\n   \
    \ return [$even, $odd];\n}\n", "    $even = 0;\n    $odd = 0;\n    $num = abs($num);\n\
    \    while ($num > 0) {\n        $digit = $num % 10;\n        if ($digit % 2 ==\
    \ 0) {\n            $even++;\n        } else {\n            $odd++;\n        }\n\
    \        $num = floor($num / 10);\n    }\n    return array($even, $odd);\n}\n",
  "    $even = 0;\n    $odd = 0;\n    $num = abs($num);\n    while ($num > 0) {\n\
    \        $remainder = $num % 10;\n        if ($remainder % 2 == 0) {\n       \
    \     $even++;\n        } else {\n            $odd++;\n        }\n        $num\
    \ = floor($num / 10);\n    }\n    return array($even, $odd);\n}\n", "    $even\
    \ = 0;\n    $odd = 0;\n    $num = abs($num);\n    while ($num > 0) {\n       \
    \ $digit = $num % 10;\n        if ($digit % 2 == 0) {\n            $even++;\n\
    \        } else {\n            $odd++;\n        }\n        $num = floor($num /\
    \ 10);\n    }\n    return array($even, $odd);\n}\n", "  $even = 0;\n  $odd = 0;\n\
    \  $num = abs($num);\n  while ($num > 0) {\n    $digit = $num % 10;\n    if ($digit\
    \ % 2 == 0) {\n      $even++;\n    } else {\n      $odd++;\n    }\n    $num =\
    \ floor($num / 10);\n  }\n  return array($even, $odd);\n}\n", "    $even = 0;\n\
    \    $odd = 0;\n    $num = abs($num);\n    while ($num > 0) {\n        $digit\
    \ = $num % 10;\n        if ($digit % 2 == 0) {\n            $even++;\n       \
    \ } else {\n            $odd++;\n        }\n        $num = floor($num / 10);\n\
    \    }\n    return array($even, $odd);\n}\n", "    $even = 0;\n    $odd = 0;\n\
    \    $num = abs($num);\n    while ($num > 0) {\n        $digit = $num % 10;\n\
    \        if ($digit % 2 == 0) {\n            $even++;\n        } else {\n    \
    \        $odd++;\n        }\n        $num = floor($num / 10);\n    }\n    return\
    \ [$even, $odd];\n}\n", "    $even = 0;\n    $odd = 0;\n    $num = abs($num);\n\
    \    while ($num > 0) {\n        $digit = $num % 10;\n        if ($digit % 2 ==\
    \ 0) {\n            $even++;\n        } else {\n            $odd++;\n        }\n\
    \        $num = floor($num / 10);\n    }\n    return array($even, $odd);\n}\n",
  "    $even = 0;\n    $odd = 0;\n    $num = abs($num);\n    while ($num > 0) {\n\
    \        $digit = $num % 10;\n        if ($digit % 2 == 0) {\n            $even++;\n\
    \        } else {\n            $odd++;\n        }\n        $num = floor($num /\
    \ 10);\n    }\n    return array($even, $odd);\n}\n", "  $even = 0;\n  $odd = 0;\n\
    \  $num = abs($num);\n  while ($num > 0) {\n    $digit = $num % 10;\n    if ($digit\
    \ % 2 == 0) {\n      $even++;\n    } else {\n      $odd++;\n    }\n    $num =\
    \ floor($num / 10);\n  }\n  return array($even, $odd);\n}\n", "    $even = 0;\n\
    \    $odd = 0;\n    $num = abs($num);\n    while ($num > 0) {\n        $digit\
    \ = $num % 10;\n        if ($digit % 2 == 0) {\n            $even++;\n       \
    \ } else {\n            $odd++;\n        }\n        $num = ($num - $digit) / 10;\n\
    \    }\n    return array($even, $odd);\n}\n", "    $even = 0;\n    $odd = 0;\n\
    \    $num = abs($num);\n    while ($num > 0) {\n        $digit = $num % 10;\n\
    \        if ($digit % 2 == 0) {\n            $even++;\n        } else {\n    \
    \        $odd++;\n        }\n        $num = floor($num / 10);\n    }\n    return\
    \ array($even, $odd);\n}\n", "    $even = 0;\n    $odd = 0;\n    $num = abs($num);\n\
    \    while ($num > 0) {\n        $digit = $num % 10;\n        if ($digit % 2 ==\
    \ 0) {\n            $even++;\n        } else {\n            $odd++;\n        }\n\
    \        $num = floor($num / 10);\n    }\n    return array($even, $odd);\n}",
  "    $even = 0;\n    $odd = 0;\n    $num = abs($num);\n    while ($num > 0) {\n\
    \        $digit = $num % 10;\n        if ($digit % 2 == 0) {\n            $even++;\n\
    \        } else {\n            $odd++;\n        }\n        $num = (int)($num /\
    \ 10);\n    }\n    return [$even, $odd];\n}\n", "    $even = 0;\n    $odd = 0;\n\
    \    $num = abs($num);\n    while ($num > 0) {\n        $digit = $num % 10;\n\
    \        if ($digit % 2 == 0) {\n            $even++;\n        } else {\n    \
    \        $odd++;\n        }\n        $num = floor($num / 10);\n    }\n    return\
    \ array($even, $odd);\n}\n", "  $even = 0;\n  $odd = 0;\n  $num = abs($num);\n\
    \  while ($num > 0) {\n    $digit = $num % 10;\n    if ($digit % 2 == 0) {\n \
    \     $even++;\n    } else {\n      $odd++;\n    }\n    $num = floor($num / 10);\n\
    \  }\n  return array($even, $odd);\n}\n", "    $even = 0;\n    $odd = 0;\n   \
    \ $num = abs($num);\n    while ($num > 0) {\n        $digit = $num % 10;\n   \
    \     if ($digit % 2 == 0) {\n            $even++;\n        } else {\n       \
    \     $odd++;\n        }\n        $num = floor($num / 10);\n    }\n    return\
    \ array($even, $odd);\n}\n", "    $even = 0;\n    $odd = 0;\n    $num = abs($num);\n\
    \    while ($num > 0) {\n        $digit = $num % 10;\n        if ($digit % 2 ==\
    \ 0) {\n            $even++;\n        } else {\n            $odd++;\n        }\n\
    \        $num = floor($num / 10);\n    }\n    return [$even, $odd];\n}\n\necho\
    \ \"even_odd_count(-12) ==> \";\nvar_dump(even_odd_count(-12));\necho \"even_odd_count(123)\
    \ ==> \";\nvar_dump(even_odd_count(123));\necho \"even_odd_count(0) ==> \";\n\
    var_dump(even_odd_count(0));\necho \"even_odd_count(1) ==> \";\nvar_dump(even_odd_count(1));\n\
    echo \"even_odd_count(2) ==> \";\nvar_dump(even_odd_count(2));\necho \"even_odd_count(3)\
    \ ==> \";\nvar_dump(even_odd_count(3));\necho \"even_odd_count(4) ==> \";\nvar_dump(even_odd_count(4));\n\
    echo \"even_odd_count(5) ==> \";\nvar_dump(even_odd_count(5));\necho \"even_odd_count(6)\
    \ ==> \";\nvar_dump(even_odd_count(6));\necho \"even_odd_count(7) ==> \";\nvar_dump(even_odd_count(7));\n\
    echo \"even_odd_count(8) ==> \";\nvar_dump(even_odd_count(8));\necho \"even_odd_count(9)\
    \ ==> \";\nvar_dump(even_odd_count(9));\necho \"even_odd_count(10) ==> \";\nvar_dump(even_odd_count(10));\n\
    echo \"even_odd_count(11) ==> \";\nvar_dump(even_odd_count(11));\necho \"even_odd_count(12)\
    \ ==> \";\nvar_dump(even_", "    $even = 0;\n    $odd = 0;\n    $num = abs($num);\n\
    \    while ($num > 0) {\n        $digit = $num % 10;\n        if ($digit % 2 ==\
    \ 0) {\n            $even++;\n        } else {\n            $odd++;\n        }\n\
    \        $num = floor($num / 10);\n    }\n    return array($even, $odd);\n}\n",
  "    $even = 0;\n    $odd = 0;\n    $num = abs($num);\n    while ($num > 0) {\n\
    \        $digit = $num % 10;\n        if ($digit % 2 == 0) {\n            $even++;\n\
    \        } else {\n            $odd++;\n        }\n        $num = floor($num /\
    \ 10);\n    }\n    return array($even, $odd);\n}\n", "    $even = 0;\n    $odd\
    \ = 0;\n    $num = abs($num);\n    while ($num > 0) {\n        $digit = $num %\
    \ 10;\n        if ($digit % 2 == 0) {\n            $even++;\n        } else {\n\
    \            $odd++;\n        }\n        $num = floor($num / 10);\n    }\n   \
    \ return array($even, $odd);\n}\n", "    $even = 0;\n    $odd = 0;\n    $num =\
    \ abs($num);\n    while ($num > 0) {\n        $digit = $num % 10;\n        if\
    \ ($digit % 2 == 0) {\n            $even++;\n        } else {\n            $odd++;\n\
    \        }\n        $num = floor($num / 10);\n    }\n    return array($even, $odd);\n\
    }\n", "    $even = 0;\n    $odd = 0;\n    $num = abs($num);\n    while ($num >\
    \ 0) {\n        $digit = $num % 10;\n        if ($digit % 2 == 0) {\n        \
    \    $even++;\n        } else {\n            $odd++;\n        }\n        $num\
    \ = floor($num / 10);\n    }\n    return array($even, $odd);\n}\n", "    $even\
    \ = 0;\n    $odd = 0;\n    $num = abs($num);\n    while ($num > 0) {\n       \
    \ $digit = $num % 10;\n        if ($digit % 2 == 0) {\n            $even++;\n\
    \        } else {\n            $odd++;\n        }\n        $num = floor($num /\
    \ 10);\n    }\n    return [$even, $odd];\n}\n", "\t$even = 0;\n\t$odd = 0;\n\t\
    $num = abs($num);\n\twhile ($num > 0) {\n\t\t$digit = $num % 10;\n\t\tif ($digit\
    \ % 2 == 0) {\n\t\t\t$even++;\n\t\t} else {\n\t\t\t$odd++;\n\t\t}\n\t\t$num =\
    \ floor($num / 10);\n\t}\n\treturn array($even, $odd);\n}\n", "    $even = 0;\n\
    \    $odd = 0;\n    $num = abs($num);\n    while ($num > 0) {\n        $digit\
    \ = $num % 10;\n        if ($digit % 2 == 0) {\n            $even++;\n       \
    \ } else {\n            $odd++;\n        }\n        $num = floor($num / 10);\n\
    \    }\n    return array($even, $odd);\n}\n", "    $even = 0;\n    $odd = 0;\n\
    \    $num = abs($num);\n    while ($num > 0) {\n        $digit = $num % 10;\n\
    \        if ($digit % 2 == 0) {\n            $even++;\n        } else {\n    \
    \        $odd++;\n        }\n        $num = floor($num / 10);\n    }\n    return\
    \ array($even, $odd);\n}\n", "    $even = 0;\n    $odd = 0;\n    $num = abs($num);\n\
    \    while ($num > 0) {\n        $digit = $num % 10;\n        if ($digit % 2 ==\
    \ 0) {\n            $even++;\n        } else {\n            $odd++;\n        }\n\
    \        $num = floor($num / 10);\n    }\n    return [$even, $odd];\n}\n", " \
    \   $even = 0;\n    $odd = 0;\n    $num = abs($num);\n    while ($num > 0) {\n\
    \        $digit = $num % 10;\n        if ($digit % 2 == 0) {\n            $even++;\n\
    \        } else {\n            $odd++;\n        }\n        $num = floor($num /\
    \ 10);\n    }\n    return array($even, $odd);\n}\n", "    $even = 0;\n    $odd\
    \ = 0;\n    $num = abs($num);\n    while ($num > 0) {\n        $digit = $num %\
    \ 10;\n        if ($digit % 2 == 0) {\n            $even++;\n        } else {\n\
    \            $odd++;\n        }\n        $num = floor($num / 10);\n    }\n   \
    \ return array($even, $odd);\n}\n", "    $even = 0;\n    $odd = 0;\n    $num =\
    \ abs($num);\n    while ($num > 0) {\n        $digit = $num % 10;\n        if\
    \ ($digit % 2 == 0) {\n            $even++;\n        } else {\n            $odd++;\n\
    \        }\n        $num = floor($num / 10);\n    }\n    return array($even, $odd);\n\
    }\n", "    $even = 0;\n    $odd = 0;\n    $num = abs($num);\n    while ($num >\
    \ 0) {\n        $digit = $num % 10;\n        if ($digit % 2 == 0) {\n        \
    \    $even++;\n        } else {\n            $odd++;\n        }\n        $num\
    \ = floor($num / 10);\n    }\n    return array($even, $odd);\n}\n", "    $even\
    \ = 0;\n    $odd = 0;\n    $num = abs($num);\n    while ($num > 0) {\n       \
    \ $digit = $num % 10;\n        if ($digit % 2 == 0) {\n            $even++;\n\
    \        } else {\n            $odd++;\n        }\n        $num = floor($num /\
    \ 10);\n    }\n    return array($even, $odd);\n}\n", "    $even = 0;\n    $odd\
    \ = 0;\n    $num = abs($num);\n    while ($num > 0) {\n        $digit = $num %\
    \ 10;\n        if ($digit % 2 == 0) {\n            $even++;\n        } else {\n\
    \            $odd++;\n        }\n        $num = floor($num / 10);\n    }\n   \
    \ return array($even, $odd);\n}\n", "    $even = 0;\n    $odd = 0;\n    $num =\
    \ abs($num);\n    while ($num > 0) {\n        $digit = $num % 10;\n        if\
    \ ($digit % 2 == 0) {\n            $even++;\n        } else {\n            $odd++;\n\
    \        }\n        $num = floor($num / 10);\n    }\n    return [$even, $odd];\n\
    }\n", "    $even = 0;\n    $odd = 0;\n    $num = abs($num);\n    while ($num >\
    \ 0) {\n        $digit = $num % 10;\n        if ($digit % 2 == 0) {\n        \
    \    $even++;\n        } else {\n            $odd++;\n        }\n        $num\
    \ = floor($num / 10);\n    }\n    return [$even, $odd];\n}\n", "    $even = 0;\n\
    \    $odd = 0;\n    $num = abs($num);\n    while ($num > 0) {\n        $digit\
    \ = $num % 10;\n        if ($digit % 2 == 0) {\n            $even++;\n       \
    \ } else {\n            $odd++;\n        }\n        $num = floor($num / 10);\n\
    \    }\n    return array($even, $odd);\n}\n", "    $even = 0;\n    $odd = 0;\n\
    \    $num = abs($num);\n    while ($num > 0) {\n        $digit = $num % 10;\n\
    \        if ($digit % 2 == 0) {\n            $even++;\n        } else {\n    \
    \        $odd++;\n        }\n        $num = floor($num / 10);\n    }\n    return\
    \ array($even, $odd);\n}\n", "    $even = 0;\n    $odd = 0;\n    $num = abs($num);\n\
    \    while ($num > 0) {\n        $digit = $num % 10;\n        if ($digit % 2 ==\
    \ 0) {\n            $even++;\n        } else {\n            $odd++;\n        }\n\
    \        $num = (int)($num / 10);\n    }\n    return array($even, $odd);\n}\n",
  "    $even = 0;\n    $odd = 0;\n    $num = abs($num);\n    while ($num > 0) {\n\
    \        $digit = $num % 10;\n        if ($digit % 2 == 0) {\n            $even++;\n\
    \        } else {\n            $odd++;\n        }\n        $num = floor($num /\
    \ 10);\n    }\n    return array($even, $odd);\n}\n", "  $even = 0;\n  $odd = 0;\n\
    \  $num = abs($num);\n  while ($num > 0) {\n    $digit = $num % 10;\n    if ($digit\
    \ % 2 == 0) {\n      $even++;\n    } else {\n      $odd++;\n    }\n    $num =\
    \ floor($num / 10);\n  }\n  return array($even, $odd);\n}\n", "    $even = 0;\n\
    \    $odd = 0;\n    $num = abs($num);\n    while ($num != 0) {\n        $digit\
    \ = $num % 10;\n        if ($digit % 2 == 0) {\n            $even++;\n       \
    \ } else {\n            $odd++;\n        }\n        $num = floor($num / 10);\n\
    \    }\n    return array($even, $odd);\n}\n", "    $even = 0;\n    $odd = 0;\n\
    \    $num = abs($num);\n    while ($num > 0) {\n        $digit = $num % 10;\n\
    \        if ($digit % 2 == 0) {\n            $even++;\n        } else {\n    \
    \        $odd++;\n        }\n        $num = floor($num / 10);\n    }\n    return\
    \ [$even, $odd];\n}\n", "    $even = 0;\n    $odd = 0;\n    $num = abs($num);\n\
    \    while ($num > 0) {\n        $digit = $num % 10;\n        if ($digit % 2 ==\
    \ 0) {\n            $even++;\n        } else {\n            $odd++;\n        }\n\
    \        $num = floor($num / 10);\n    }\n    return array($even, $odd);\n}\n",
  "    $even = 0;\n    $odd = 0;\n    $num = abs($num);\n    while ($num > 0) {\n\
    \        $digit = $num % 10;\n        if ($digit % 2 == 0) {\n            $even++;\n\
    \        } else {\n            $odd++;\n        }\n        $num = floor($num /\
    \ 10);\n    }\n    return array($even, $odd);\n}\n", "    $even = 0;\n    $odd\
    \ = 0;\n    $num = abs($num);\n    while ($num > 0) {\n        $digit = $num %\
    \ 10;\n        if ($digit % 2 == 0) {\n            $even++;\n        } else {\n\
    \            $odd++;\n        }\n        $num = floor($num / 10);\n    }\n   \
    \ return array($even, $odd);\n}\n", "    $even = 0;\n    $odd = 0;\n    $num =\
    \ abs($num);\n    while ($num > 0) {\n        $digit = $num % 10;\n        if\
    \ ($digit % 2 == 0) {\n            $even++;\n        } else {\n            $odd++;\n\
    \        }\n        $num = floor($num / 10);\n    }\n    return [$even, $odd];\n\
    }\n", "  $even = 0;\n  $odd = 0;\n  $num = abs($num);\n  while ($num > 0) {\n\
    \    $digit = $num % 10;\n    if ($digit % 2 == 0) {\n      $even++;\n    } else\
    \ {\n      $odd++;\n    }\n    $num = floor($num / 10);\n  }\n  return array($even,\
    \ $odd);\n}\n", "    $even = 0;\n    $odd = 0;\n    $num = abs($num);\n    while\
    \ ($num > 0) {\n        $digit = $num % 10;\n        if ($digit % 2 == 0) {\n\
    \            $even++;\n        } else {\n            $odd++;\n        }\n    \
    \    $num = floor($num / 10);\n    }\n    return array($even, $odd);\n}\n", " \
    \   $even = 0;\n    $odd = 0;\n    $num = abs($num);\n    while ($num > 0) {\n\
    \        $digit = $num % 10;\n        if ($digit % 2 == 0) {\n            $even++;\n\
    \        } else {\n            $odd++;\n        }\n        $num = floor($num /\
    \ 10);\n    }\n    return array($even, $odd);\n}\n", "    $even = 0;\n    $odd\
    \ = 0;\n    $num = abs($num);\n    while ($num > 0) {\n        $digit = $num %\
    \ 10;\n        if ($digit % 2 == 0) {\n            $even++;\n        } else {\n\
    \            $odd++;\n        }\n        $num = floor($num / 10);\n    }\n   \
    \ return array($even, $odd);\n}\n", "    $even = 0;\n    $odd = 0;\n    $num =\
    \ abs($num);\n    while ($num > 0) {\n        $digit = $num % 10;\n        if\
    \ ($digit % 2 == 0) {\n            $even++;\n        } else {\n            $odd++;\n\
    \        }\n        $num = floor($num / 10);\n    }\n    return array($even, $odd);\n\
    }\n", "    $even = 0;\n    $odd = 0;\n    $num = abs($num);\n    while ($num >\
    \ 0) {\n        $digit = $num % 10;\n        if ($digit % 2 == 0) {\n        \
    \    $even++;\n        } else {\n            $odd++;\n        }\n        $num\
    \ = floor($num / 10);\n    }\n    return array($even, $odd);\n}\n", "    $even\
    \ = 0;\n    $odd = 0;\n    $num = abs($num);\n    while ($num > 0) {\n       \
    \ $digit = $num % 10;\n        if ($digit % 2 == 0) {\n            $even++;\n\
    \        } else {\n            $odd++;\n        }\n        $num = floor($num /\
    \ 10);\n    }\n    return [$even, $odd];\n}\n", "    $even = 0;\n    $odd = 0;\n\
    \    $num = abs($num);\n    while ($num > 0) {\n        $digit = $num % 10;\n\
    \        if ($digit % 2 == 0) {\n            $even++;\n        } else {\n    \
    \        $odd++;\n        }\n        $num = floor($num / 10);\n    }\n    return\
    \ array($even, $odd);\n}\n", "  $even = 0;\n  $odd = 0;\n  $num = abs($num);\n\
    \  while ($num > 0) {\n    $digit = $num % 10;\n    if ($digit % 2 == 0) {\n \
    \     $even++;\n    } else {\n      $odd++;\n    }\n    $num = floor($num / 10);\n\
    \  }\n  return array($even, $odd);\n}\n", "  $even = 0;\n  $odd = 0;\n  $num =\
    \ abs($num);\n  while ($num > 0) {\n    $digit = $num % 10;\n    if ($digit %\
    \ 2 == 0) {\n      $even++;\n    } else {\n      $odd++;\n    }\n    $num = floor($num\
    \ / 10);\n  }\n  return array($even, $odd);\n}\n", "    $even = 0;\n    $odd =\
    \ 0;\n    $num = abs($num);\n    while ($num > 0) {\n        $digit = $num % 10;\n\
    \        if ($digit % 2 == 0) {\n            $even++;\n        } else {\n    \
    \        $odd++;\n        }\n        $num = floor($num / 10);\n    }\n    return\
    \ array($even, $odd);\n}\n", "    $even = 0;\n    $odd = 0;\n    $num = abs($num);\n\
    \    while ($num > 0) {\n        $digit = $num % 10;\n        if ($digit % 2 ==\
    \ 0) {\n            $even++;\n        } else {\n            $odd++;\n        }\n\
    \        $num = floor($num / 10);\n    }\n    return [$even, $odd];\n}\n", " \
    \   $even = 0;\n    $odd = 0;\n    $num = abs($num);\n    while ($num > 0) {\n\
    \        $digit = $num % 10;\n        if ($digit % 2 == 0) {\n            $even++;\n\
    \        } else {\n            $odd++;\n        }\n        $num = floor($num /\
    \ 10);\n    }\n    return array($even, $odd);\n}\n", "    $even = 0;\n    $odd\
    \ = 0;\n    $num = abs($num);\n    while ($num > 0) {\n        $digit = $num %\
    \ 10;\n        if ($digit % 2 == 0) {\n            $even++;\n        } else {\n\
    \            $odd++;\n        }\n        $num = floor($num / 10);\n    }\n   \
    \ return [$even, $odd];\n}\n", "  $even = 0;\n  $odd = 0;\n  $num = abs($num);\n\
    \  while ($num > 0) {\n    $digit = $num % 10;\n    if ($digit % 2 == 0) {\n \
    \     $even++;\n    } else {\n      $odd++;\n    }\n    $num = floor($num / 10);\n\
    \  }\n  return array($even, $odd);\n}\n", "  $even = 0;\n  $odd = 0;\n  $num =\
    \ abs($num);\n  while ($num > 0) {\n    $digit = $num % 10;\n    if ($digit %\
    \ 2 == 0) {\n      $even++;\n    } else {\n      $odd++;\n    }\n    $num = floor($num\
    \ / 10);\n  }\n  return array($even, $odd);\n}\n", "    $even = 0;\n    $odd =\
    \ 0;\n    $num = abs($num);\n    while ($num > 0) {\n        $digit = $num % 10;\n\
    \        if ($digit % 2 == 0) {\n            $even++;\n        } else {\n    \
    \        $odd++;\n        }\n        $num = floor($num / 10);\n    }\n    return\
    \ [$even, $odd];\n}\n", "  $even = 0;\n  $odd = 0;\n  $num = abs($num);\n  while\
    \ ($num > 0) {\n    $digit = $num % 10;\n    if ($digit % 2 == 0) {\n      $even++;\n\
    \    } else {\n      $odd++;\n    }\n    $num = floor($num / 10);\n  }\n  return\
    \ [$even, $odd];\n}\n", "    $even = 0;\n    $odd = 0;\n    $num = abs($num);\n\
    \    while ($num > 0) {\n        $digit = $num % 10;\n        if ($digit % 2 ==\
    \ 0) {\n            $even++;\n        } else {\n            $odd++;\n        }\n\
    \        $num = floor($num / 10);\n    }\n    return array($even, $odd);\n}\n",
  "    $even = 0;\n    $odd = 0;\n    $num = abs($num);\n    while ($num > 0) {\n\
    \        $digit = $num % 10;\n        if ($digit % 2 == 0) {\n            $even++;\n\
    \        } else {\n            $odd++;\n        }\n        $num = floor($num /\
    \ 10);\n    }\n    return [$even, $odd];\n}\n", "    $even = 0;\n    $odd = 0;\n\
    \    $num = abs($num);\n    while ($num > 0) {\n        $digit = $num % 10;\n\
    \        if ($digit % 2 == 0) {\n            $even++;\n        } else {\n    \
    \        $odd++;\n        }\n        $num = floor($num / 10);\n    }\n    return\
    \ array($even, $odd);\n}\n", "    $even = 0;\n    $odd = 0;\n    $num = abs($num);\n\
    \    while ($num > 0) {\n        $digit = $num % 10;\n        if ($digit % 2 ==\
    \ 0) {\n            $even++;\n        } else {\n            $odd++;\n        }\n\
    \        $num = floor($num / 10);\n    }\n    return [$even, $odd];\n}\n", " \
    \   $even = 0;\n    $odd = 0;\n    $num = abs($num);\n    while ($num > 0) {\n\
    \        $digit = $num % 10;\n        if ($digit % 2 == 0) {\n            $even++;\n\
    \        } else {\n            $odd++;\n        }\n        $num = ($num - $digit)\
    \ / 10;\n    }\n    return array($even, $odd);\n}\n", "    $even = 0;\n    $odd\
    \ = 0;\n    $num = abs($num);\n    while ($num > 0) {\n        $digit = $num %\
    \ 10;\n        if ($digit % 2 == 0) {\n            $even++;\n        } else {\n\
    \            $odd++;\n        }\n        $num = floor($num / 10);\n    }\n   \
    \ return array($even, $odd);\n}\n", "    $even = 0;\n    $odd = 0;\n    $num =\
    \ abs($num);\n    while ($num > 0) {\n        $digit = $num % 10;\n        if\
    \ ($digit % 2 == 0) {\n            $even++;\n        } else {\n            $odd++;\n\
    \        }\n        $num = floor($num / 10);\n    }\n    return [$even, $odd];\n\
    }\n\necho '<pre>';\nprint_r(even_odd_count(-12));\necho '</pre>';\n\necho '<pre>';\n\
    print_r(even_odd_count(123));\necho '</pre>';", "    $even = 0;\n    $odd = 0;\n\
    \    $num = abs($num);\n    while ($num > 0) {\n        $digit = $num % 10;\n\
    \        if ($digit % 2 == 0) {\n            $even++;\n        } else {\n    \
    \        $odd++;\n        }\n        $num = floor($num / 10);\n    }\n    return\
    \ [$even, $odd];\n}\n", "    $even = 0;\n    $odd = 0;\n    $num = abs($num);\n\
    \    while ($num > 0) {\n        $digit = $num % 10;\n        if ($digit % 2 ==\
    \ 0) {\n            $even++;\n        } else {\n            $odd++;\n        }\n\
    \        $num = floor($num / 10);\n    }\n    return [$even, $odd];\n}\n", " \
    \   $even = 0;\n    $odd = 0;\n    $num = abs($num);\n    while ($num > 0) {\n\
    \        $digit = $num % 10;\n        if ($digit % 2 == 0) {\n            $even++;\n\
    \        } else {\n            $odd++;\n        }\n        $num = floor($num /\
    \ 10);\n    }\n    return array($even, $odd);\n}\n", "    $even = 0;\n    $odd\
    \ = 0;\n    $num = abs($num);\n    while ($num > 0) {\n        $digit = $num %\
    \ 10;\n        if ($digit % 2 == 0) {\n            $even++;\n        } else {\n\
    \            $odd++;\n        }\n        $num = floor($num / 10);\n    }\n   \
    \ return array($even, $odd);\n}\n", "    $even = 0;\n    $odd = 0;\n    $num =\
    \ abs($num);\n    while ($num > 0) {\n        $digit = $num % 10;\n        if\
    \ ($digit % 2 == 0) {\n            $even++;\n        } else {\n            $odd++;\n\
    \        }\n        $num = floor($num / 10);\n    }\n    return [$even, $odd];\n\
    }\n\necho \"even_odd_count(-12) ==> \";\nvar_dump(even_odd_count(-12));\necho\
    \ \"even_odd_count(123) ==> \";\nvar_dump(even_odd_count(123));\necho \"even_odd_count(0)\
    \ ==> \";\nvar_dump(even_odd_count(0));\necho \"even_odd_count(123456789) ==>\
    \ \";\nvar_dump(even_odd_count(123456789));\necho \"even_odd_count(12345678901234567890)\
    \ ==> \";\nvar_dump(even_odd_count(12345678901234567890));", "  $even = 0;\n \
    \ $odd = 0;\n  $num = abs($num);\n  while ($num > 0) {\n    $digit = $num % 10;\n\
    \    if ($digit % 2 == 0) {\n      $even++;\n    } else {\n      $odd++;\n   \
    \ }\n    $num = floor($num / 10);\n  }\n  return array($even, $odd);\n}\n\necho\
    \ \"even_odd_count(-12) ==> \";\nvar_dump(even_odd_count(-12));\necho \"even_odd_count(123)\
    \ ==> \";\nvar_dump(even_odd_count(123));", "    $even = 0;\n    $odd = 0;\n \
    \   $num = abs($num);\n    while ($num > 0) {\n        $digit = $num % 10;\n \
    \       if ($digit % 2 == 0) {\n            $even++;\n        } else {\n     \
    \       $odd++;\n        }\n        $num = floor($num / 10);\n    }\n    return\
    \ array($even, $odd);\n}\n", "    $even = 0;\n    $odd = 0;\n    $num = abs($num);\n\
    \    while ($num > 0) {\n        $digit = $num % 10;\n        if ($digit % 2 ==\
    \ 0) {\n            $even++;\n        } else {\n            $odd++;\n        }\n\
    \        $num = floor($num / 10);\n    }\n    return array($even, $odd);\n}\n",
  "    $even = 0;\n    $odd = 0;\n    $num = abs($num);\n    while ($num > 0) {\n\
    \        $digit = $num % 10;\n        if ($digit % 2 == 0) {\n            $even++;\n\
    \        } else {\n            $odd++;\n        }\n        $num = floor($num /\
    \ 10);\n    }\n    return [$even, $odd];\n}\necho even_odd_count(-12)[0] . ' '\
    \ . even_odd_count(-12)[1] . PHP_EOL;\necho even_odd_count(123)[0] . ' ' . even_odd_count(123)[1]\
    \ . PHP_EOL;\n", "    $even = 0;\n    $odd = 0;\n    $num = abs($num);\n    while\
    \ ($num > 0) {\n        $digit = $num % 10;\n        if ($digit % 2 == 0) {\n\
    \            $even++;\n        } else {\n            $odd++;\n        }\n    \
    \    $num = floor($num / 10);\n    }\n    return array($even, $odd);\n}\n", " \
    \   $even = 0;\n    $odd = 0;\n    $num = abs($num);\n    while ($num > 0) {\n\
    \        $digit = $num % 10;\n        if ($digit % 2 == 0) {\n            $even++;\n\
    \        } else {\n            $odd++;\n        }\n        $num = ($num - $digit)\
    \ / 10;\n    }\n    return [$even, $odd];\n}\n", "    $even = 0;\n    $odd = 0;\n\
    \    $num = abs($num);\n    while ($num > 0) {\n        $digit = $num % 10;\n\
    \        if ($digit % 2 == 0) {\n            $even++;\n        } else {\n    \
    \        $odd++;\n        }\n        $num = floor($num / 10);\n    }\n    return\
    \ [$even, $odd];\n}\n", "    $even = 0;\n    $odd = 0;\n    $num = abs($num);\n\
    \    while ($num > 0) {\n        $digit = $num % 10;\n        if ($digit % 2 ==\
    \ 0) {\n            $even++;\n        } else {\n            $odd++;\n        }\n\
    \        $num = (int)($num / 10);\n    }\n    return array($even, $odd);\n}\n",
  "    $even = 0;\n    $odd = 0;\n    $num = abs($num);\n    while ($num > 0) {\n\
    \        $digit = $num % 10;\n        if ($digit % 2 == 0) {\n            $even++;\n\
    \        } else {\n            $odd++;\n        }\n        $num = floor($num /\
    \ 10);\n    }\n    return array($even, $odd);\n}\n", "    $even = 0;\n    $odd\
    \ = 0;\n    $num = abs($num);\n    while ($num > 0) {\n        $digit = $num %\
    \ 10;\n        if ($digit % 2 == 0) {\n            $even++;\n        } else {\n\
    \            $odd++;\n        }\n        $num = floor($num / 10);\n    }\n   \
    \ return array($even, $odd);\n}\n", "    $even = 0;\n    $odd = 0;\n    $num =\
    \ abs($num);\n    while ($num > 0) {\n        $digit = $num % 10;\n        if\
    \ ($digit % 2 == 0) {\n            $even++;\n        } else {\n            $odd++;\n\
    \        }\n        $num = floor($num / 10);\n    }\n    return array($even, $odd);\n\
    }\n", "    $even = 0;\n    $odd = 0;\n    $num = abs($num);\n    while ($num >\
    \ 0) {\n        $digit = $num % 10;\n        if ($digit % 2 == 0) {\n        \
    \    $even++;\n        } else {\n            $odd++;\n        }\n        $num\
    \ = floor($num / 10);\n    }\n    return [$even, $odd];\n}\n", "    $even = 0;\n\
    \    $odd = 0;\n    $num = abs($num);\n    while ($num > 0) {\n        $digit\
    \ = $num % 10;\n        if ($digit % 2 == 0) {\n            $even++;\n       \
    \ } else {\n            $odd++;\n        }\n        $num = floor($num / 10);\n\
    \    }\n    return array($even, $odd);\n}\n", "    $even = 0;\n    $odd = 0;\n\
    \    $num = abs($num);\n    while ($num > 0) {\n        $digit = $num % 10;\n\
    \        if ($digit % 2 == 0) {\n            $even++;\n        } else {\n    \
    \        $odd++;\n        }\n        $num = floor($num / 10);\n    }\n    return\
    \ array($even, $odd);\n}\n", "    $even = 0;\n    $odd = 0;\n    $num = abs($num);\n\
    \    while ($num > 0) {\n        $digit = $num % 10;\n        if ($digit % 2 ==\
    \ 0) {\n            $even++;\n        } else {\n            $odd++;\n        }\n\
    \        $num = floor($num / 10);\n    }\n    return array($even, $odd);\n}\n\
    echo even_odd_count(-12) . \"\\n\";\necho even_odd_count(123) . \"\\n\";", " \
    \   $even = 0;\n    $odd = 0;\n    $num = abs($num);\n    while ($num > 0) {\n\
    \        $digit = $num % 10;\n        if ($digit % 2 == 0) {\n            $even++;\n\
    \        } else {\n            $odd++;\n        }\n        $num = floor($num /\
    \ 10);\n    }\n    return [$even, $odd];\n}\n", "    $even = 0;\n    $odd = 0;\n\
    \    $num = abs($num);\n    while ($num > 0) {\n        $digit = $num % 10;\n\
    \        if ($digit % 2 == 0) {\n            $even++;\n        } else {\n    \
    \        $odd++;\n        }\n        $num = (int)($num / 10);\n    }\n    return\
    \ array($even, $odd);\n}\n", "    $even = 0;\n    $odd = 0;\n    $num = abs($num);\n\
    \    while ($num > 0) {\n        $digit = $num % 10;\n        if ($digit % 2 ==\
    \ 0) {\n            $even++;\n        } else {\n            $odd++;\n        }\n\
    \        $num = floor($num / 10);\n    }\n    return array($even, $odd);\n}\n",
  "    $even = 0;\n    $odd = 0;\n    $num = abs($num);\n    while ($num > 0) {\n\
    \        $digit = $num % 10;\n        if ($digit % 2 == 0) {\n            $even++;\n\
    \        } else {\n            $odd++;\n        }\n        $num = floor($num /\
    \ 10);\n    }\n    return [$even, $odd];\n}\n", "    $even = 0;\n    $odd = 0;\n\
    \    $num = abs($num);\n    while ($num > 0) {\n        $digit = $num % 10;\n\
    \        if ($digit % 2 == 0) {\n            $even++;\n        } else {\n    \
    \        $odd++;\n        }\n        $num = floor($num / 10);\n    }\n    return\
    \ [$even, $odd];\n}\n", "  $even = 0;\n  $odd = 0;\n  $num = abs($num);\n  while\
    \ ($num > 0) {\n    $digit = $num % 10;\n    if ($digit % 2 == 0) {\n      $even++;\n\
    \    } else {\n      $odd++;\n    }\n    $num = floor($num / 10);\n  }\n  return\
    \ array($even, $odd);\n}\n", "    $even = 0;\n    $odd = 0;\n    $num = abs($num);\n\
    \    while ($num > 0) {\n        $digit = $num % 10;\n        if ($digit % 2 ==\
    \ 0) {\n            $even++;\n        } else {\n            $odd++;\n        }\n\
    \        $num = floor($num / 10);\n    }\n    return [$even, $odd];\n}\necho even_odd_count(-12)[0]\
    \ . \" \" . even_odd_count(-12)[1] . \"\\n\";\necho even_odd_count(123)[0] . \"\
    \ \" . even_odd_count(123)[1] . \"\\n\";", "    $even = 0;\n    $odd = 0;\n  \
    \  $num = abs($num);\n    while ($num > 0) {\n        $digit = $num % 10;\n  \
    \      if ($digit % 2 == 0) {\n            $even++;\n        } else {\n      \
    \      $odd++;\n        }\n        $num = floor($num / 10);\n    }\n    return\
    \ [$even, $odd];\n}\n", "  $even = 0;\n  $odd = 0;\n  $num = abs($num);\n  while\
    \ ($num > 0) {\n    $digit = $num % 10;\n    if ($digit % 2 == 0) {\n      $even++;\n\
    \    } else {\n      $odd++;\n    }\n    $num = floor($num / 10);\n  }\n  return\
    \ array($even, $odd);\n}\n", "  $even = 0;\n  $odd = 0;\n  $num = abs($num);\n\
    \  while ($num > 0) {\n    $digit = $num % 10;\n    if ($digit % 2 == 0) {\n \
    \     $even++;\n    } else {\n      $odd++;\n    }\n    $num = floor($num / 10);\n\
    \  }\n  return array($even, $odd);\n}\n", "    $even = 0;\n    $odd = 0;\n   \
    \ $num = abs($num);\n    while ($num > 0) {\n        $digit = $num % 10;\n   \
    \     if ($digit % 2 == 0) {\n            $even++;\n        } else {\n       \
    \     $odd++;\n        }\n        $num = floor($num / 10);\n    }\n    return\
    \ array($even, $odd);\n}\n", "    $even = 0;\n    $odd = 0;\n    $num = abs($num);\n\
    \    while ($num > 0) {\n        $digit = $num % 10;\n        if ($digit % 2 ==\
    \ 0) {\n            $even++;\n        } else {\n            $odd++;\n        }\n\
    \        $num = floor($num / 10);\n    }\n    return array($even, $odd);\n}\n",
  "    $even = 0;\n    $odd = 0;\n    $num = abs($num);\n    while ($num > 0) {\n\
    \        $digit = $num % 10;\n        if ($digit % 2 == 0) {\n            $even++;\n\
    \        } else {\n            $odd++;\n        }\n        $num = intval($num\
    \ / 10);\n    }\n    return array($even, $odd);\n}\n", "    $even = 0;\n    $odd\
    \ = 0;\n    $num = abs($num);\n    while ($num > 0) {\n        $digit = $num %\
    \ 10;\n        if ($digit % 2 == 0) {\n            $even++;\n        } else {\n\
    \            $odd++;\n        }\n        $num = floor($num / 10);\n    }\n   \
    \ return [$even, $odd];\n}\n", "    $even = 0;\n    $odd = 0;\n    $num = abs($num);\n\
    \    while ($num > 0) {\n        $digit = $num % 10;\n        if ($digit % 2 ==\
    \ 0) {\n            $even++;\n        } else {\n            $odd++;\n        }\n\
    \        $num = floor($num / 10);\n    }\n    return [$even, $odd];\n}\n", " \
    \ $even = 0;\n  $odd = 0;\n  $num = abs($num);\n  while ($num > 0) {\n    $digit\
    \ = $num % 10;\n    if ($digit % 2 == 0) {\n      $even++;\n    } else {\n   \
    \   $odd++;\n    }\n    $num = floor($num / 10);\n  }\n  return array($even, $odd);\n\
    }\n", "    $even = 0;\n    $odd = 0;\n    $num = abs($num);\n    while ($num >\
    \ 0) {\n        $digit = $num % 10;\n        if ($digit % 2 == 0) {\n        \
    \    $even++;\n        } else {\n            $odd++;\n        }\n        $num\
    \ = (int)($num / 10);\n    }\n    return array($even, $odd);\n}\n", "  $even =\
    \ 0;\n  $odd = 0;\n  $num = abs($num);\n  while ($num > 0) {\n    $digit = $num\
    \ % 10;\n    if ($digit % 2 == 0) {\n      $even++;\n    } else {\n      $odd++;\n\
    \    }\n    $num = floor($num / 10);\n  }\n  return array($even, $odd);\n}\n",
  "    $even = 0;\n    $odd = 0;\n    $num = abs($num);\n    while ($num > 0) {\n\
    \        $digit = $num % 10;\n        if ($digit % 2 == 0) {\n            $even++;\n\
    \        } else {\n            $odd++;\n        }\n        $num = floor($num /\
    \ 10);\n    }\n    return array($even, $odd);\n}\n", "    $even = 0;\n    $odd\
    \ = 0;\n    $num = abs($num);\n    while ($num > 0) {\n        $digit = $num %\
    \ 10;\n        if ($digit % 2 == 0) {\n            $even++;\n        } else {\n\
    \            $odd++;\n        }\n        $num = floor($num / 10);\n    }\n   \
    \ return [$even, $odd];\n}\n", "    $even = 0;\n    $odd = 0;\n    $num = abs($num);\n\
    \    while ($num > 0) {\n        $digit = $num % 10;\n        if ($digit % 2 ==\
    \ 0) {\n            $even++;\n        } else {\n            $odd++;\n        }\n\
    \        $num = floor($num / 10);\n    }\n    return [$even, $odd];\n}\n", " \
    \   $even = 0;\n    $odd = 0;\n    $num = abs($num);\n    while ($num > 0) {\n\
    \        $digit = $num % 10;\n        if ($digit % 2 == 0) {\n            $even++;\n\
    \        } else {\n            $odd++;\n        }\n        $num = floor($num /\
    \ 10);\n    }\n    return [$even, $odd];\n}\n", "    $even = 0;\n    $odd = 0;\n\
    \    $num = abs($num);\n    while ($num > 0) {\n        $digit = $num % 10;\n\
    \        if ($digit % 2 == 0) {\n            $even++;\n        } else {\n    \
    \        $odd++;\n        }\n        $num = floor($num / 10);\n    }\n    return\
    \ [$even, $odd];\n}\n\necho even_odd_count(-12)[0] . ' ' . even_odd_count(-12)[1]\
    \ . PHP_EOL;\necho even_odd_count(123)[0] . ' ' . even_odd_count(123)[1] . PHP_EOL;",
  "    $even = 0;\n    $odd = 0;\n    $num = abs($num);\n    while ($num > 0) {\n\
    \        $digit = $num % 10;\n        if ($digit % 2 == 0) {\n            $even++;\n\
    \        } else {\n            $odd++;\n        }\n        $num = floor($num /\
    \ 10);\n    }\n    return array($even, $odd);\n}\n", "    $even = 0;\n    $odd\
    \ = 0;\n    $num = abs($num);\n    while ($num > 0) {\n        $digit = $num %\
    \ 10;\n        if ($digit % 2 == 0) {\n            $even++;\n        } else {\n\
    \            $odd++;\n        }\n        $num = floor($num / 10);\n    }\n   \
    \ return array($even, $odd);\n}\n", "    $even = 0;\n    $odd = 0;\n    $num =\
    \ abs($num);\n    while ($num > 0) {\n        $digit = $num % 10;\n        if\
    \ ($digit % 2 == 0) {\n            $even++;\n        } else {\n            $odd++;\n\
    \        }\n        $num = floor($num / 10);\n    }\n    return array($even, $odd);\n\
    }\n", "    $even = 0;\n    $odd = 0;\n    $num = abs($num);\n    while ($num >\
    \ 0) {\n        $digit = $num % 10;\n        if ($digit % 2 == 0) {\n        \
    \    $even++;\n        } else {\n            $odd++;\n        }\n        $num\
    \ = floor($num / 10);\n    }\n    return [$even, $odd];\n}\n", "    $even = 0;\n\
    \    $odd = 0;\n    $num = abs($num);\n    while ($num > 0) {\n        $digit\
    \ = $num % 10;\n        if ($digit % 2 == 0) {\n            $even++;\n       \
    \ } else {\n            $odd++;\n        }\n        $num = floor($num / 10);\n\
    \    }\n    return array($even, $odd);\n}\n", "    $even = 0;\n    $odd = 0;\n\
    \    $num = abs($num);\n    while ($num > 0) {\n        $digit = $num % 10;\n\
    \        if ($digit % 2 == 0) {\n            $even++;\n        } else {\n    \
    \        $odd++;\n        }\n        $num = floor($num / 10);\n    }\n    return\
    \ array($even, $odd);\n}\n", "    $even = 0;\n    $odd = 0;\n    $num = abs($num);\n\
    \    while ($num > 0) {\n        $digit = $num % 10;\n        if ($digit % 2 ==\
    \ 0) {\n            $even++;\n        } else {\n            $odd++;\n        }\n\
    \        $num = floor($num / 10);\n    }\n    return array($even, $odd);\n}\n",
  "    $even = 0;\n    $odd = 0;\n    $num = abs($num);\n    while ($num > 0) {\n\
    \        $digit = $num % 10;\n        if ($digit % 2 == 0) {\n            $even++;\n\
    \        } else {\n            $odd++;\n        }\n        $num = floor($num /\
    \ 10);\n    }\n    return [$even, $odd];\n}\n", "    $even = 0;\n    $odd = 0;\n\
    \    $num = abs($num);\n    $num = (string)$num;\n    for ($i = 0; $i < strlen($num);\
    \ $i++) {\n        if ($num[$i] % 2 == 0) {\n            $even++;\n        } else\
    \ {\n            $odd++;\n        }\n    }\n    return [$even, $odd];\n}\n", " \
    \   $even = 0;\n    $odd = 0;\n    $num = abs($num);\n    while ($num > 0) {\n\
    \        $digit = $num % 10;\n        if ($digit % 2 == 0) {\n            $even++;\n\
    \        } else {\n            $odd++;\n        }\n        $num = floor($num /\
    \ 10);\n    }\n    return array($even, $odd);\n}\n", "    $even = 0;\n    $odd\
    \ = 0;\n    $num = abs($num);\n    while ($num > 0) {\n        $digit = $num %\
    \ 10;\n        if ($digit % 2 == 0) {\n            $even++;\n        } else {\n\
    \            $odd++;\n        }\n        $num = floor($num / 10);\n    }\n   \
    \ return [$even, $odd];\n}\n", "    $even = 0;\n    $odd = 0;\n    $num = abs($num);\n\
    \    while ($num > 0) {\n        $digit = $num % 10;\n        if ($digit % 2 ==\
    \ 0) {\n            $even++;\n        } else {\n            $odd++;\n        }\n\
    \        $num = floor($num / 10);\n    }\n    return array($even, $odd);\n}\n",
  "    $even = 0;\n    $odd = 0;\n    $num = abs($num);\n    while ($num > 0) {\n\
    \        $digit = $num % 10;\n        if ($digit % 2 == 0) {\n            $even++;\n\
    \        } else {\n            $odd++;\n        }\n        $num = floor($num /\
    \ 10);\n    }\n    return array($even, $odd);\n}\n", "    $even = 0;\n    $odd\
    \ = 0;\n    $num = abs($num);\n    while ($num > 0) {\n        $digit = $num %\
    \ 10;\n        if ($digit % 2 == 0) {\n            $even++;\n        } else {\n\
    \            $odd++;\n        }\n        $num = floor($num / 10);\n    }\n   \
    \ return array($even, $odd);\n}\n", "    $even = 0;\n    $odd = 0;\n    $num =\
    \ abs($num);\n    while ($num > 0) {\n        $digit = $num % 10;\n        if\
    \ ($digit % 2 == 0) {\n            $even++;\n        } else {\n            $odd++;\n\
    \        }\n        $num = (int)($num / 10);\n    }\n    return [$even, $odd];\n\
    }\necho \"even_odd_count(-12) ==> \";\nvar_dump(even_odd_count(-12));\necho \"\
    even_odd_count(123) ==> \";\nvar_dump(even_odd_count(123));", "    $even = 0;\n\
    \    $odd = 0;\n    $num = abs($num);\n    while ($num > 0) {\n        $digit\
    \ = $num % 10;\n        if ($digit % 2 == 0) {\n            $even++;\n       \
    \ } else {\n            $odd++;\n        }\n        $num = floor($num / 10);\n\
    \    }\n    return [$even, $odd];\n}\n", "    $even = 0;\n    $odd = 0;\n    $num\
    \ = abs($num);\n    while ($num > 0) {\n        $digit = $num % 10;\n        if\
    \ ($digit % 2 == 0) {\n            $even++;\n        } else {\n            $odd++;\n\
    \        }\n        $num = floor($num / 10);\n    }\n    return array($even, $odd);\n\
    }\n", "    $even = 0;\n    $odd = 0;\n    $num = abs($num);\n    while ($num >\
    \ 0) {\n        $digit = $num % 10;\n        if ($digit % 2 == 0) {\n        \
    \    $even++;\n        } else {\n            $odd++;\n        }\n        $num\
    \ = floor($num / 10);\n    }\n    return array($even, $odd);\n}\n", "    $even\
    \ = 0;\n    $odd = 0;\n    $num = abs($num);\n    while ($num > 0) {\n       \
    \ $digit = $num % 10;\n        if ($digit % 2 == 0) {\n            $even++;\n\
    \        } else {\n            $odd++;\n        }\n        $num = floor($num /\
    \ 10);\n    }\n    return array($even, $odd);\n}\n", "    $even = 0;\n    $odd\
    \ = 0;\n    $num = abs($num);\n    while ($num > 0) {\n        $remainder = $num\
    \ % 10;\n        if ($remainder % 2 == 0) {\n            $even++;\n        } else\
    \ {\n            $odd++;\n        }\n        $num = floor($num / 10);\n    }\n\
    \    return array($even, $odd);\n}\necho '<pre>';\nprint_r(even_odd_count(-12));\n\
    echo '</pre>';\n", "    $even = 0;\n    $odd = 0;\n    $num = abs($num);\n   \
    \ while ($num > 0) {\n        $digit = $num % 10;\n        if ($digit % 2 == 0)\
    \ {\n            $even++;\n        } else {\n            $odd++;\n        }\n\
    \        $num = floor($num / 10);\n    }\n    return array($even, $odd);\n}\n",
  "    $even = 0;\n    $odd = 0;\n    $num = abs($num);\n    while ($num > 0) {\n\
    \        $digit = $num % 10;\n        if ($digit % 2 == 0) {\n            $even++;\n\
    \        } else {\n            $odd++;\n        }\n        $num = floor($num /\
    \ 10);\n    }\n    return [$even, $odd];\n}\n", "  $even = 0;\n  $odd = 0;\n \
    \ $num = abs($num);\n  while ($num > 0) {\n    $digit = $num % 10;\n    if ($digit\
    \ % 2 == 0) {\n      $even++;\n    } else {\n      $odd++;\n    }\n    $num =\
    \ floor($num / 10);\n  }\n  return [$even, $odd];\n}\n", "  $even = 0;\n  $odd\
    \ = 0;\n  $num = abs($num);\n  while ($num > 0) {\n    $digit = $num % 10;\n \
    \   if ($digit % 2 == 0) {\n      $even++;\n    } else {\n      $odd++;\n    }\n\
    \    $num = floor($num / 10);\n  }\n  return array($even, $odd);\n}\n", "    $even\
    \ = 0;\n    $odd = 0;\n    $num = abs($num);\n    while ($num > 0) {\n       \
    \ $digit = $num % 10;\n        if ($digit % 2 == 0) {\n            $even++;\n\
    \        } else {\n            $odd++;\n        }\n        $num = floor($num /\
    \ 10);\n    }\n    return array($even, $odd);\n}\n", "    $even = 0;\n    $odd\
    \ = 0;\n    $num = abs($num);\n    while ($num > 0) {\n        $lastDigit = $num\
    \ % 10;\n        if ($lastDigit % 2 == 0) {\n            $even++;\n        } else\
    \ {\n            $odd++;\n        }\n        $num = floor($num / 10);\n    }\n\
    \    return [$even, $odd];\n}\n", "    $even = 0;\n    $odd = 0;\n    $num = abs($num);\n\
    \    while ($num > 0) {\n        $remainder = $num % 10;\n        if ($remainder\
    \ % 2 == 0) {\n            $even++;\n        } else {\n            $odd++;\n \
    \       }\n        $num = floor($num / 10);\n    }\n    return array($even, $odd);\n\
    }\n", "    $even = 0;\n    $odd = 0;\n    $num = abs($num);\n    while ($num >\
    \ 0) {\n        $digit = $num % 10;\n        if ($digit % 2 == 0) {\n        \
    \    $even++;\n        } else {\n            $odd++;\n        }\n        $num\
    \ = (int)($num / 10);\n    }\n    return [$even, $odd];\n}\n", "    $even = 0;\n\
    \    $odd = 0;\n    $num = abs($num);\n    while ($num > 0) {\n        $digit\
    \ = $num % 10;\n        if ($digit % 2 == 0) {\n            $even++;\n       \
    \ } else {\n            $odd++;\n        }\n        $num = floor($num / 10);\n\
    \    }\n    return array($even, $odd);\n}\n", "    $even = 0;\n    $odd = 0;\n\
    \    $num = abs($num);\n    while ($num > 0) {\n        $digit = $num % 10;\n\
    \        if ($digit % 2 == 0) {\n            $even++;\n        } else {\n    \
    \        $odd++;\n        }\n        $num = floor($num / 10);\n    }\n    return\
    \ [$even, $odd];\n}\n", "    $even = 0;\n    $odd = 0;\n    $num = abs($num);\n\
    \    while ($num > 0) {\n        $remainder = $num % 10;\n        if ($remainder\
    \ % 2 == 0) {\n            $even++;\n        } else {\n            $odd++;\n \
    \       }\n        $num = floor($num / 10);\n    }\n    return array($even, $odd);\n\
    }\n", "  $even = 0;\n  $odd = 0;\n  $num = abs($num);\n  while ($num > 0) {\n\
    \    $digit = $num % 10;\n    if ($digit % 2 == 0) {\n      $even++;\n    } else\
    \ {\n      $odd++;\n    }\n    $num = floor($num / 10);\n  }\n  return [$even,\
    \ $odd];\n}\n", "    $even = 0;\n    $odd = 0;\n    $num = abs($num);\n    while\
    \ ($num > 0) {\n        $digit = $num % 10;\n        if ($digit % 2 == 0) {\n\
    \            $even++;\n        } else {\n            $odd++;\n        }\n    \
    \    $num = floor($num / 10);\n    }\n    return array($even, $odd);\n}\n", " \
    \   $even = 0;\n    $odd = 0;\n    $num = abs($num);\n    while ($num > 0) {\n\
    \        $digit = $num % 10;\n        if ($digit % 2 == 0) {\n            $even++;\n\
    \        } else {\n            $odd++;\n        }\n        $num = floor($num /\
    \ 10);\n    }\n    return [$even, $odd];\n}\n", "    $even = 0;\n    $odd = 0;\n\
    \    $num = abs($num);\n    while ($num > 0) {\n        $digit = $num % 10;\n\
    \        if ($digit % 2 == 0) {\n            $even++;\n        } else {\n    \
    \        $odd++;\n        }\n        $num = floor($num / 10);\n    }\n    return\
    \ [$even, $odd];\n}\n", "    $even = 0;\n    $odd = 0;\n    $num = abs($num);\n\
    \    while ($num > 0) {\n        $digit = $num % 10;\n        if ($digit % 2 ==\
    \ 0) {\n            $even++;\n        } else {\n            $odd++;\n        }\n\
    \        $num = floor($num / 10);\n    }\n    return array($even, $odd);\n}\n",
  "  $even = 0;\n  $odd = 0;\n  $num = abs($num);\n  while ($num > 0) {\n    $digit\
    \ = $num % 10;\n    if ($digit % 2 == 0) {\n      $even++;\n    } else {\n   \
    \   $odd++;\n    }\n    $num = floor($num / 10);\n  }\n  return array($even, $odd);\n\
    }\n", "    $even = 0;\n    $odd = 0;\n    $num = abs($num);\n    while ($num >\
    \ 0) {\n        $digit = $num % 10;\n        if ($digit % 2 == 0) {\n        \
    \    $even++;\n        } else {\n            $odd++;\n        }\n        $num\
    \ = floor($num / 10);\n    }\n    return [$even, $odd];\n}\n", "    $even = 0;\n\
    \    $odd = 0;\n    $num = abs($num);\n    while ($num > 0) {\n        $digit\
    \ = $num % 10;\n        if ($digit % 2 == 0) {\n            $even++;\n       \
    \ } else {\n            $odd++;\n        }\n        $num = floor($num / 10);\n\
    \    }\n    return array($even, $odd);\n}\necho \"<pre>\";\nprint_r(even_odd_count(-12));\n\
    echo \"</pre>\";\n\necho \"<pre>\";\nprint_r(even_odd_count(123));\necho \"</pre>\"\
    ;\n", "    $even = 0;\n    $odd = 0;\n    $num = abs($num);\n    while ($num >\
    \ 0) {\n        $digit = $num % 10;\n        if ($digit % 2 == 0) {\n        \
    \    $even++;\n        } else {\n            $odd++;\n        }\n        $num\
    \ = floor($num / 10);\n    }\n    return [$even, $odd];\n}\n", "    $even = 0;\n\
    \    $odd = 0;\n    $num = abs($num);\n    while ($num > 0) {\n        $digit\
    \ = $num % 10;\n        if ($digit % 2 == 0) {\n            $even++;\n       \
    \ } else {\n            $odd++;\n        }\n        $num = floor($num / 10);\n\
    \    }\n    return [$even, $odd];\n}\n", "  $even = 0;\n  $odd = 0;\n  $num =\
    \ abs($num);\n  while ($num > 0) {\n    $digit = $num % 10;\n    if ($digit %\
    \ 2 == 0) {\n      $even++;\n    } else {\n      $odd++;\n    }\n    $num = floor($num\
    \ / 10);\n  }\n  return array($even, $odd);\n}\n\necho \"even_odd_count(-12) ==>\
    \ \";\nvar_dump(even_odd_count(-12));\necho \"even_odd_count(123) ==> \";\nvar_dump(even_odd_count(123));",
  "    $even = 0;\n    $odd = 0;\n    $num = abs($num);\n    while ($num > 0) {\n\
    \        $digit = $num % 10;\n        if ($digit % 2 == 0) {\n            $even++;\n\
    \        } else {\n            $odd++;\n        }\n        $num = floor($num /\
    \ 10);\n    }\n    return array($even, $odd);\n}\n", "    $even = 0;\n    $odd\
    \ = 0;\n    $num = abs($num);\n    while ($num > 0) {\n        $digit = $num %\
    \ 10;\n        if ($digit % 2 == 0) {\n            $even++;\n        } else {\n\
    \            $odd++;\n        }\n        $num = floor($num / 10);\n    }\n   \
    \ return array($even, $odd);\n}\n", "    $even = 0;\n    $odd = 0;\n    $num =\
    \ abs($num);\n    while ($num > 0) {\n        $digit = $num % 10;\n        if\
    \ ($digit % 2 == 0) {\n            $even++;\n        } else {\n            $odd++;\n\
    \        }\n        $num = (int)($num / 10);\n    }\n    return array($even, $odd);\n\
    }\n", "    $even = 0;\n    $odd = 0;\n    $num = abs($num);\n    while ($num >\
    \ 0) {\n        $digit = $num % 10;\n        if ($digit % 2 == 0) {\n        \
    \    $even++;\n        } else {\n            $odd++;\n        }\n        $num\
    \ = floor($num / 10);\n    }\n    return array($even, $odd);\n}\n", "    $even\
    \ = 0;\n    $odd = 0;\n    $num = abs($num);\n    while ($num > 0) {\n       \
    \ $digit = $num % 10;\n        if ($digit % 2 == 0) {\n            $even++;\n\
    \        } else {\n            $odd++;\n        }\n        $num = floor($num /\
    \ 10);\n    }\n    return array($even, $odd);\n}\n", "    $even = 0;\n    $odd\
    \ = 0;\n    $num = abs($num);\n    while ($num > 0) {\n        $digit = $num %\
    \ 10;\n        if ($digit % 2 == 0) {\n            $even++;\n        } else {\n\
    \            $odd++;\n        }\n        $num = floor($num / 10);\n    }\n   \
    \ return array($even, $odd);\n}\n", "    $even = 0;\n    $odd = 0;\n    $num =\
    \ abs($num);\n    while ($num > 0) {\n        $digit = $num % 10;\n        if\
    \ ($digit % 2 == 0) {\n            $even++;\n        } else {\n            $odd++;\n\
    \        }\n        $num = floor($num / 10);\n    }\n    return array($even, $odd);\n\
    }\n", "  $even = 0;\n  $odd = 0;\n  $num = abs($num);\n  while ($num > 0) {\n\
    \    $digit = $num % 10;\n    if ($digit % 2 == 0) {\n      $even++;\n    } else\
    \ {\n      $odd++;\n    }\n    $num = floor($num / 10);\n  }\n  return array($even,\
    \ $odd);\n}\n\necho \"even_odd_count(-12) ==> \";\nvar_dump(even_odd_count(-12));\n\
    echo \"even_odd_count(123) ==> \";\nvar_dump(even_odd_count(123));", "  $even\
    \ = 0;\n  $odd = 0;\n  $num = abs($num);\n  while ($num > 0) {\n    $digit = $num\
    \ % 10;\n    if ($digit % 2 == 0) {\n      $even++;\n    } else {\n      $odd++;\n\
    \    }\n    $num = floor($num / 10);\n  }\n  return array($even, $odd);\n}\n",
  "  $even = 0;\n  $odd = 0;\n  $num = abs($num);\n  while ($num > 0) {\n    $digit\
    \ = $num % 10;\n    if ($digit % 2 == 0) {\n      $even++;\n    } else {\n   \
    \   $odd++;\n    }\n    $num = floor($num / 10);\n  }\n  return array($even, $odd);\n\
    }\n", "  $even = 0;\n  $odd = 0;\n  $num = abs($num);\n  while ($num > 0) {\n\
    \    $digit = $num % 10;\n    if ($digit % 2 == 0) {\n      $even++;\n    } else\
    \ {\n      $odd++;\n    }\n    $num = floor($num / 10);\n  }\n  return array($even,\
    \ $odd);\n}\n", "    $even = 0;\n    $odd = 0;\n    $num = abs($num);\n    while\
    \ ($num > 0) {\n        $digit = $num % 10;\n        if ($digit % 2 == 0) {\n\
    \            $even++;\n        } else {\n            $odd++;\n        }\n    \
    \    $num = floor($num / 10);\n    }\n    return array($even, $odd);\n}\n", " \
    \   $even = 0;\n    $odd = 0;\n    $num = abs($num);\n    while ($num > 0) {\n\
    \        $digit = $num % 10;\n        if ($digit % 2 == 0) {\n            $even++;\n\
    \        } else {\n            $odd++;\n        }\n        $num = floor($num /\
    \ 10);\n    }\n    return array($even, $odd);\n}\n"]
stop_tokens:
- "\nfunction"
- "\n?>"
- "\n//"
- "\n#"

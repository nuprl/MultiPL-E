name: HumanEval_24_largest_divisor
language: php
results:
- program: "<?php\n// For a given number n, find the largest number that divides n\
    \ evenly, smaller than n\n// >>> largest_divisor(15)\n// 5\nfunction largest_divisor($n)\
    \ {\n    $i = $n - 1;\n    while ($i > 0) {\n        if ($n % $i == 0) {\n   \
    \         return $i;\n        }\n        $i--;\n    }\n}\n\nfunction candidate(...$args)\
    \ {\n    return largest_divisor(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(3) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 50)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(49) !== 7) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// For a given number n, find the largest number that divides n\
    \ evenly, smaller than n\n// >>> largest_divisor(15)\n// 5\nfunction largest_divisor($n)\
    \ {\n    for ($i = $n - 1; $i > 0; $i--) {\n        if ($n % $i == 0) {\n    \
    \        return $i;\n        }\n    }\n}\n\nfunction candidate(...$args) {\n \
    \   return largest_divisor(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 5)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 50) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(49) !== 7) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// For a given number n, find the largest number that divides n\
    \ evenly, smaller than n\n// >>> largest_divisor(15)\n// 5\nfunction largest_divisor($n)\
    \ {\n    for ($i = $n - 1; $i > 0; $i--) {\n        if ($n % $i == 0) {\n    \
    \        return $i;\n        }\n    }\n}\n\nfunction candidate(...$args) {\n \
    \   return largest_divisor(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 5)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 50) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(49) !== 7) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// For a given number n, find the largest number that divides n\
    \ evenly, smaller than n\n// >>> largest_divisor(15)\n// 5\nfunction largest_divisor($n)\
    \ {\n    for ($i = $n - 1; $i > 0; $i--) {\n        if ($n % $i == 0) {\n    \
    \        return $i;\n        }\n    }\n}\n\nfunction candidate(...$args) {\n \
    \   return largest_divisor(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 5)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 50) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(49) !== 7) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// For a given number n, find the largest number that divides n\
    \ evenly, smaller than n\n// >>> largest_divisor(15)\n// 5\nfunction largest_divisor($n)\
    \ {\n    for ($i = $n - 1; $i > 0; $i--) {\n        if ($n % $i == 0) {\n    \
    \        return $i;\n        }\n    }\n}\n\nfunction candidate(...$args) {\n \
    \   return largest_divisor(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 5)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 50) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(49) !== 7) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// For a given number n, find the largest number that divides n\
    \ evenly, smaller than n\n// >>> largest_divisor(15)\n// 5\nfunction largest_divisor($n)\
    \ {\n    for ($i = $n - 1; $i > 0; $i--) {\n        if ($n % $i == 0) {\n    \
    \        return $i;\n        }\n    }\n}\n\nfunction candidate(...$args) {\n \
    \   return largest_divisor(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 5)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 50) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(49) !== 7) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// For a given number n, find the largest number that divides n\
    \ evenly, smaller than n\n// >>> largest_divisor(15)\n// 5\nfunction largest_divisor($n)\
    \ {\n    $divisor = $n - 1;\n    while ($n % $divisor != 0) {\n        $divisor--;\n\
    \    }\n    return $divisor;\n}\n\nfunction candidate(...$args) {\n    return\
    \ largest_divisor(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 5)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 50) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(49) !== 7) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// For a given number n, find the largest number that divides n\
    \ evenly, smaller than n\n// >>> largest_divisor(15)\n// 5\nfunction largest_divisor($n)\
    \ {\n    for ($i = $n - 1; $i > 0; $i--) {\n        if ($n % $i == 0) {\n    \
    \        return $i;\n        }\n    }\n}\n\nfunction candidate(...$args) {\n \
    \   return largest_divisor(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 5)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 50) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(49) !== 7) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// For a given number n, find the largest number that divides n\
    \ evenly, smaller than n\n// >>> largest_divisor(15)\n// 5\nfunction largest_divisor($n)\
    \ {\n    $i = $n - 1;\n    while ($i > 0) {\n        if ($n % $i == 0) {\n   \
    \         return $i;\n        }\n        $i--;\n    }\n}\n\nfunction candidate(...$args)\
    \ {\n    return largest_divisor(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(3) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 50)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(49) !== 7) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// For a given number n, find the largest number that divides n\
    \ evenly, smaller than n\n// >>> largest_divisor(15)\n// 5\nfunction largest_divisor($n)\
    \ {\n    for ($i = $n - 1; $i > 0; $i--) {\n        if ($n % $i == 0) {\n    \
    \        return $i;\n        }\n    }\n}\n\nfunction candidate(...$args) {\n \
    \   return largest_divisor(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 5)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 50) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(49) !== 7) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// For a given number n, find the largest number that divides n\
    \ evenly, smaller than n\n// >>> largest_divisor(15)\n// 5\nfunction largest_divisor($n)\
    \ {\n    $i = $n - 1;\n    while ($i > 0) {\n        if ($n % $i == 0) {\n   \
    \         return $i;\n        }\n        $i--;\n    }\n}\n\nfunction candidate(...$args)\
    \ {\n    return largest_divisor(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(3) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 50)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(49) !== 7) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// For a given number n, find the largest number that divides n\
    \ evenly, smaller than n\n// >>> largest_divisor(15)\n// 5\nfunction largest_divisor($n)\
    \ {\n    $divisor = $n - 1;\n    while ($n % $divisor != 0) {\n        $divisor--;\n\
    \    }\n    return $divisor;\n}\n\nfunction candidate(...$args) {\n    return\
    \ largest_divisor(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 5)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 50) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(49) !== 7) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// For a given number n, find the largest number that divides n\
    \ evenly, smaller than n\n// >>> largest_divisor(15)\n// 5\nfunction largest_divisor($n)\
    \ {\n  for ($i = $n - 1; $i > 0; $i--) {\n    if ($n % $i == 0) {\n      return\
    \ $i;\n    }\n  }\n}\n\nfunction candidate(...$args) {\n    return largest_divisor(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100) !== 50) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(49) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// For a given number n, find the largest number that divides n\
    \ evenly, smaller than n\n// >>> largest_divisor(15)\n// 5\nfunction largest_divisor($n)\
    \ {\n  $largest_divisor = 1;\n  for ($i = 2; $i < $n; $i++) {\n    if ($n % $i\
    \ == 0) {\n      $largest_divisor = $i;\n    }\n  }\n  return $largest_divisor;\n\
    }\n\nfunction candidate(...$args) {\n    return largest_divisor(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(3) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100) !== 50) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(49) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// For a given number n, find the largest number that divides n\
    \ evenly, smaller than n\n// >>> largest_divisor(15)\n// 5\nfunction largest_divisor($n)\
    \ {\n    for ($i = $n - 1; $i > 0; $i--) {\n        if ($n % $i == 0) {\n    \
    \        return $i;\n        }\n    }\n}\n\nfunction candidate(...$args) {\n \
    \   return largest_divisor(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 5)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 50) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(49) !== 7) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// For a given number n, find the largest number that divides n\
    \ evenly, smaller than n\n// >>> largest_divisor(15)\n// 5\nfunction largest_divisor($n)\
    \ {\n    for ($i = $n - 1; $i > 0; $i--) {\n        if ($n % $i == 0) {\n    \
    \        return $i;\n        }\n    }\n}\n\nfunction candidate(...$args) {\n \
    \   return largest_divisor(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 5)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 50) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(49) !== 7) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// For a given number n, find the largest number that divides n\
    \ evenly, smaller than n\n// >>> largest_divisor(15)\n// 5\nfunction largest_divisor($n)\
    \ {\n    for ($i = $n - 1; $i > 0; $i--) {\n        if ($n % $i == 0) {\n    \
    \        return $i;\n        }\n    }\n}\n\nfunction candidate(...$args) {\n \
    \   return largest_divisor(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 5)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 50) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(49) !== 7) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// For a given number n, find the largest number that divides n\
    \ evenly, smaller than n\n// >>> largest_divisor(15)\n// 5\nfunction largest_divisor($n)\
    \ {\n    $divisor = $n - 1;\n    while ($n % $divisor != 0) {\n        $divisor--;\n\
    \    }\n    return $divisor;\n}\n\nfunction candidate(...$args) {\n    return\
    \ largest_divisor(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 5)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 50) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(49) !== 7) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// For a given number n, find the largest number that divides n\
    \ evenly, smaller than n\n// >>> largest_divisor(15)\n// 5\nfunction largest_divisor($n)\
    \ {\n    for ($i = $n - 1; $i > 0; $i--) {\n        if ($n % $i == 0) {\n    \
    \        return $i;\n        }\n    }\n}\n\nfunction candidate(...$args) {\n \
    \   return largest_divisor(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 5)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 50) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(49) !== 7) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// For a given number n, find the largest number that divides n\
    \ evenly, smaller than n\n// >>> largest_divisor(15)\n// 5\nfunction largest_divisor($n)\
    \ {\n    $i = $n - 1;\n    while ($i > 0) {\n        if ($n % $i == 0) {\n   \
    \         return $i;\n        }\n        $i--;\n    }\n}\n\nfunction candidate(...$args)\
    \ {\n    return largest_divisor(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(3) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 50)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(49) !== 7) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// For a given number n, find the largest number that divides n\
    \ evenly, smaller than n\n// >>> largest_divisor(15)\n// 5\nfunction largest_divisor($n)\
    \ {\n    for ($i = $n - 1; $i > 0; $i--) {\n        if ($n % $i == 0) {\n    \
    \        return $i;\n        }\n    }\n}\n\nfunction candidate(...$args) {\n \
    \   return largest_divisor(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 5)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 50) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(49) !== 7) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// For a given number n, find the largest number that divides n\
    \ evenly, smaller than n\n// >>> largest_divisor(15)\n// 5\nfunction largest_divisor($n)\
    \ {\n    for ($i = $n - 1; $i > 0; $i--) {\n        if ($n % $i == 0) {\n    \
    \        return $i;\n        }\n    }\n}\n\nfunction candidate(...$args) {\n \
    \   return largest_divisor(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 5)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 50) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(49) !== 7) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// For a given number n, find the largest number that divides n\
    \ evenly, smaller than n\n// >>> largest_divisor(15)\n// 5\nfunction largest_divisor($n)\
    \ {\n    for ($i = $n - 1; $i > 0; $i--) {\n        if ($n % $i == 0) {\n    \
    \        return $i;\n        }\n    }\n}\n\nfunction candidate(...$args) {\n \
    \   return largest_divisor(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 5)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 50) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(49) !== 7) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// For a given number n, find the largest number that divides n\
    \ evenly, smaller than n\n// >>> largest_divisor(15)\n// 5\nfunction largest_divisor($n)\
    \ {\n    for ($i = $n - 1; $i > 0; $i--) {\n        if ($n % $i == 0) {\n    \
    \        return $i;\n        }\n    }\n}\n\nfunction candidate(...$args) {\n \
    \   return largest_divisor(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 5)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 50) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(49) !== 7) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// For a given number n, find the largest number that divides n\
    \ evenly, smaller than n\n// >>> largest_divisor(15)\n// 5\nfunction largest_divisor($n)\
    \ {\n    $divisor = $n - 1;\n    while ($n % $divisor != 0) {\n        $divisor--;\n\
    \    }\n    return $divisor;\n}\n\nfunction candidate(...$args) {\n    return\
    \ largest_divisor(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 5)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 50) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(49) !== 7) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// For a given number n, find the largest number that divides n\
    \ evenly, smaller than n\n// >>> largest_divisor(15)\n// 5\nfunction largest_divisor($n)\
    \ {\n    $i = $n - 1;\n    while ($i > 0) {\n        if ($n % $i == 0) {\n   \
    \         return $i;\n        }\n        $i--;\n    }\n}\n\nfunction candidate(...$args)\
    \ {\n    return largest_divisor(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(3) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 50)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(49) !== 7) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// For a given number n, find the largest number that divides n\
    \ evenly, smaller than n\n// >>> largest_divisor(15)\n// 5\nfunction largest_divisor($n)\
    \ {\n    $i = $n - 1;\n    while ($i > 0) {\n        if ($n % $i == 0) {\n   \
    \         return $i;\n        }\n        $i--;\n    }\n}\n\nfunction candidate(...$args)\
    \ {\n    return largest_divisor(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(3) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 50)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(49) !== 7) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// For a given number n, find the largest number that divides n\
    \ evenly, smaller than n\n// >>> largest_divisor(15)\n// 5\nfunction largest_divisor($n)\
    \ {\n    for ($i = $n - 1; $i > 0; $i--) {\n        if ($n % $i == 0) {\n    \
    \        return $i;\n        }\n    }\n}\n\nfunction candidate(...$args) {\n \
    \   return largest_divisor(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 5)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 50) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(49) !== 7) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// For a given number n, find the largest number that divides n\
    \ evenly, smaller than n\n// >>> largest_divisor(15)\n// 5\nfunction largest_divisor($n)\
    \ {\n  $i = $n - 1;\n  while ($i > 0) {\n    if ($n % $i == 0) {\n      return\
    \ $i;\n    }\n    $i--;\n  }\n}\n\nfunction candidate(...$args) {\n    return\
    \ largest_divisor(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 5)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 50) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(49) !== 7) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// For a given number n, find the largest number that divides n\
    \ evenly, smaller than n\n// >>> largest_divisor(15)\n// 5\nfunction largest_divisor($n)\
    \ {\n    for ($i = $n - 1; $i > 0; $i--) {\n        if ($n % $i == 0) {\n    \
    \        return $i;\n        }\n    }\n}\n\nfunction candidate(...$args) {\n \
    \   return largest_divisor(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 5)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 50) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(49) !== 7) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// For a given number n, find the largest number that divides n\
    \ evenly, smaller than n\n// >>> largest_divisor(15)\n// 5\nfunction largest_divisor($n)\
    \ {\n\t$i = $n - 1;\n\twhile ($i > 0) {\n\t\tif ($n % $i == 0) {\n\t\t\treturn\
    \ $i;\n\t\t}\n\t\t$i--;\n\t}\n}\n\nfunction candidate(...$args) {\n    return\
    \ largest_divisor(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 5)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 50) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(49) !== 7) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// For a given number n, find the largest number that divides n\
    \ evenly, smaller than n\n// >>> largest_divisor(15)\n// 5\nfunction largest_divisor($n)\
    \ {\n    $largest = 0;\n    for ($i = 1; $i < $n; $i++) {\n        if ($n % $i\
    \ == 0) {\n            $largest = $i;\n        }\n    }\n    return $largest;\n\
    }\n\nfunction candidate(...$args) {\n    return largest_divisor(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(3) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100) !== 50) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(49) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// For a given number n, find the largest number that divides n\
    \ evenly, smaller than n\n// >>> largest_divisor(15)\n// 5\nfunction largest_divisor($n)\
    \ {\n    for ($i = $n - 1; $i > 0; $i--) {\n        if ($n % $i == 0) {\n    \
    \        return $i;\n        }\n    }\n}\n\nfunction candidate(...$args) {\n \
    \   return largest_divisor(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 5)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 50) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(49) !== 7) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// For a given number n, find the largest number that divides n\
    \ evenly, smaller than n\n// >>> largest_divisor(15)\n// 5\nfunction largest_divisor($n)\
    \ {\n    $i = $n - 1;\n    while ($i > 0) {\n        if ($n % $i == 0) {\n   \
    \         return $i;\n        }\n        $i--;\n    }\n}\n\nfunction candidate(...$args)\
    \ {\n    return largest_divisor(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(3) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 50)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(49) !== 7) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// For a given number n, find the largest number that divides n\
    \ evenly, smaller than n\n// >>> largest_divisor(15)\n// 5\nfunction largest_divisor($n)\
    \ {\n\t$divisor = $n - 1;\n\twhile ($n % $divisor != 0) {\n\t\t$divisor--;\n\t\
    }\n\treturn $divisor;\n}\n\nfunction candidate(...$args) {\n    return largest_divisor(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100) !== 50) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(49) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// For a given number n, find the largest number that divides n\
    \ evenly, smaller than n\n// >>> largest_divisor(15)\n// 5\nfunction largest_divisor($n)\
    \ {\n    $i = $n - 1;\n    while ($i > 0) {\n        if ($n % $i == 0) {\n   \
    \         return $i;\n        }\n        $i--;\n    }\n}\n\nfunction candidate(...$args)\
    \ {\n    return largest_divisor(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(3) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 50)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(49) !== 7) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// For a given number n, find the largest number that divides n\
    \ evenly, smaller than n\n// >>> largest_divisor(15)\n// 5\nfunction largest_divisor($n)\
    \ {\n    $i = $n - 1;\n    while ($i > 0) {\n        if ($n % $i == 0) {\n   \
    \         return $i;\n        }\n        $i--;\n    }\n}\n\nfunction candidate(...$args)\
    \ {\n    return largest_divisor(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(3) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 50)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(49) !== 7) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// For a given number n, find the largest number that divides n\
    \ evenly, smaller than n\n// >>> largest_divisor(15)\n// 5\nfunction largest_divisor($n)\
    \ {\n\tfor ($i = $n - 1; $i > 0; $i--) {\n\t\tif ($n % $i == 0) {\n\t\t\treturn\
    \ $i;\n\t\t}\n\t}\n}\n\nfunction candidate(...$args) {\n    return largest_divisor(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100) !== 50) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(49) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// For a given number n, find the largest number that divides n\
    \ evenly, smaller than n\n// >>> largest_divisor(15)\n// 5\nfunction largest_divisor($n)\
    \ {\n    $i = $n - 1;\n    while ($i > 0) {\n        if ($n % $i == 0) {\n   \
    \         return $i;\n        }\n        $i--;\n    }\n}\n\nfunction candidate(...$args)\
    \ {\n    return largest_divisor(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(3) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 50)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(49) !== 7) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// For a given number n, find the largest number that divides n\
    \ evenly, smaller than n\n// >>> largest_divisor(15)\n// 5\nfunction largest_divisor($n)\
    \ {\n    for ($i = $n - 1; $i > 0; $i--) {\n        if ($n % $i == 0) {\n    \
    \        return $i;\n        }\n    }\n}\n\nfunction candidate(...$args) {\n \
    \   return largest_divisor(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 5)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 50) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(49) !== 7) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// For a given number n, find the largest number that divides n\
    \ evenly, smaller than n\n// >>> largest_divisor(15)\n// 5\nfunction largest_divisor($n)\
    \ {\n    $i = $n - 1;\n    while ($i > 0) {\n        if ($n % $i == 0) {\n   \
    \         return $i;\n        }\n        $i--;\n    }\n}\n\nfunction candidate(...$args)\
    \ {\n    return largest_divisor(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(3) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 50)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(49) !== 7) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// For a given number n, find the largest number that divides n\
    \ evenly, smaller than n\n// >>> largest_divisor(15)\n// 5\nfunction largest_divisor($n)\
    \ {\n\tfor ($i = $n - 1; $i > 0; $i--) {\n\t\tif ($n % $i == 0) {\n\t\t\treturn\
    \ $i;\n\t\t}\n\t}\n}\n\nfunction candidate(...$args) {\n    return largest_divisor(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100) !== 50) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(49) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// For a given number n, find the largest number that divides n\
    \ evenly, smaller than n\n// >>> largest_divisor(15)\n// 5\nfunction largest_divisor($n)\
    \ {\n    for ($i = $n - 1; $i > 0; $i--) {\n        if ($n % $i == 0) {\n    \
    \        return $i;\n        }\n    }\n}\n\nfunction candidate(...$args) {\n \
    \   return largest_divisor(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 5)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 50) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(49) !== 7) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// For a given number n, find the largest number that divides n\
    \ evenly, smaller than n\n// >>> largest_divisor(15)\n// 5\nfunction largest_divisor($n)\
    \ {\n    $divisor = $n - 1;\n    while ($n % $divisor != 0) {\n        $divisor\
    \ -= 1;\n    }\n    return $divisor;\n}\n\nfunction candidate(...$args) {\n  \
    \  return largest_divisor(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 5)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 50) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(49) !== 7) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// For a given number n, find the largest number that divides n\
    \ evenly, smaller than n\n// >>> largest_divisor(15)\n// 5\nfunction largest_divisor($n)\
    \ {\n    for ($i = $n - 1; $i > 0; $i--) {\n        if ($n % $i == 0) {\n    \
    \        return $i;\n        }\n    }\n}\n\nfunction candidate(...$args) {\n \
    \   return largest_divisor(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 5)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 50) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(49) !== 7) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// For a given number n, find the largest number that divides n\
    \ evenly, smaller than n\n// >>> largest_divisor(15)\n// 5\nfunction largest_divisor($n)\
    \ {\n    for ($i = $n - 1; $i > 0; $i--) {\n        if ($n % $i == 0) {\n    \
    \        return $i;\n        }\n    }\n}\n\nfunction candidate(...$args) {\n \
    \   return largest_divisor(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 5)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 50) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(49) !== 7) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// For a given number n, find the largest number that divides n\
    \ evenly, smaller than n\n// >>> largest_divisor(15)\n// 5\nfunction largest_divisor($n)\
    \ {\n  $i = $n - 1;\n  while ($i > 0) {\n    if ($n % $i == 0) {\n      return\
    \ $i;\n    }\n    $i--;\n  }\n}\n\nfunction candidate(...$args) {\n    return\
    \ largest_divisor(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 5)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 50) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(49) !== 7) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// For a given number n, find the largest number that divides n\
    \ evenly, smaller than n\n// >>> largest_divisor(15)\n// 5\nfunction largest_divisor($n)\
    \ {\n    $i = $n - 1;\n    while ($i > 0) {\n        if ($n % $i == 0) {\n   \
    \         return $i;\n        }\n        $i--;\n    }\n}\n\nfunction candidate(...$args)\
    \ {\n    return largest_divisor(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(3) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 50)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(49) !== 7) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// For a given number n, find the largest number that divides n\
    \ evenly, smaller than n\n// >>> largest_divisor(15)\n// 5\nfunction largest_divisor($n)\
    \ {\n    $i = $n - 1;\n    while ($i > 0) {\n        if ($n % $i == 0) {\n   \
    \         return $i;\n        }\n        $i--;\n    }\n}\n\nfunction candidate(...$args)\
    \ {\n    return largest_divisor(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(3) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 50)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(49) !== 7) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// For a given number n, find the largest number that divides n\
    \ evenly, smaller than n\n// >>> largest_divisor(15)\n// 5\nfunction largest_divisor($n)\
    \ {\n    for ($i = $n - 1; $i > 0; $i--) {\n        if ($n % $i == 0) {\n    \
    \        return $i;\n        }\n    }\n}\n\nfunction candidate(...$args) {\n \
    \   return largest_divisor(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 5)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 50) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(49) !== 7) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// For a given number n, find the largest number that divides n\
    \ evenly, smaller than n\n// >>> largest_divisor(15)\n// 5\nfunction largest_divisor($n)\
    \ {\n    for ($i = $n - 1; $i > 0; $i--) {\n        if ($n % $i == 0) {\n    \
    \        return $i;\n        }\n    }\n}\n\nfunction candidate(...$args) {\n \
    \   return largest_divisor(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 5)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 50) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(49) !== 7) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// For a given number n, find the largest number that divides n\
    \ evenly, smaller than n\n// >>> largest_divisor(15)\n// 5\nfunction largest_divisor($n)\
    \ {\n    for ($i = $n - 1; $i > 0; $i--) {\n        if ($n % $i == 0) {\n    \
    \        return $i;\n        }\n    }\n}\n\nfunction candidate(...$args) {\n \
    \   return largest_divisor(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 5)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 50) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(49) !== 7) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// For a given number n, find the largest number that divides n\
    \ evenly, smaller than n\n// >>> largest_divisor(15)\n// 5\nfunction largest_divisor($n)\
    \ {\n    $i = $n - 1;\n    while ($i > 0) {\n        if ($n % $i == 0) {\n   \
    \         return $i;\n        }\n        $i--;\n    }\n}\n\nfunction candidate(...$args)\
    \ {\n    return largest_divisor(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(3) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 50)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(49) !== 7) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// For a given number n, find the largest number that divides n\
    \ evenly, smaller than n\n// >>> largest_divisor(15)\n// 5\nfunction largest_divisor($n)\
    \ {\n    $i = $n - 1;\n    while ($i > 0) {\n        if ($n % $i == 0) {\n   \
    \         return $i;\n        }\n        $i--;\n    }\n}\n\nfunction candidate(...$args)\
    \ {\n    return largest_divisor(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(3) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 50)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(49) !== 7) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// For a given number n, find the largest number that divides n\
    \ evenly, smaller than n\n// >>> largest_divisor(15)\n// 5\nfunction largest_divisor($n)\
    \ {\n    $i = $n - 1;\n    while ($i > 0) {\n        if ($n % $i == 0) {\n   \
    \         return $i;\n        }\n        $i--;\n    }\n}\n\nfunction candidate(...$args)\
    \ {\n    return largest_divisor(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(3) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 50)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(49) !== 7) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// For a given number n, find the largest number that divides n\
    \ evenly, smaller than n\n// >>> largest_divisor(15)\n// 5\nfunction largest_divisor($n)\
    \ {\n\tfor ($i = $n - 1; $i > 0; $i--) {\n\t\tif ($n % $i == 0) {\n\t\t\treturn\
    \ $i;\n\t\t}\n\t}\n}\n\nfunction candidate(...$args) {\n    return largest_divisor(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100) !== 50) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(49) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// For a given number n, find the largest number that divides n\
    \ evenly, smaller than n\n// >>> largest_divisor(15)\n// 5\nfunction largest_divisor($n)\
    \ {\n    for ($i = $n - 1; $i > 0; $i--) {\n        if ($n % $i == 0) {\n    \
    \        return $i;\n        }\n    }\n}\n\nfunction candidate(...$args) {\n \
    \   return largest_divisor(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 5)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 50) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(49) !== 7) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// For a given number n, find the largest number that divides n\
    \ evenly, smaller than n\n// >>> largest_divisor(15)\n// 5\nfunction largest_divisor($n)\
    \ {\n    $largest_divisor = 1;\n    for ($i = 2; $i < $n; $i++) {\n        if\
    \ ($n % $i == 0) {\n            $largest_divisor = $i;\n        }\n    }\n   \
    \ return $largest_divisor;\n}\n\nfunction candidate(...$args) {\n    return largest_divisor(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100) !== 50) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(49) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// For a given number n, find the largest number that divides n\
    \ evenly, smaller than n\n// >>> largest_divisor(15)\n// 5\nfunction largest_divisor($n)\
    \ {\n    for ($i = $n - 1; $i > 0; $i--) {\n        if ($n % $i == 0) {\n    \
    \        return $i;\n        }\n    }\n}\n\nfunction candidate(...$args) {\n \
    \   return largest_divisor(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 5)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 50) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(49) !== 7) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// For a given number n, find the largest number that divides n\
    \ evenly, smaller than n\n// >>> largest_divisor(15)\n// 5\nfunction largest_divisor($n)\
    \ {\n    $divisor = $n - 1;\n    while ($n % $divisor != 0) {\n        $divisor--;\n\
    \    }\n    return $divisor;\n}\n\nfunction candidate(...$args) {\n    return\
    \ largest_divisor(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 5)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 50) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(49) !== 7) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// For a given number n, find the largest number that divides n\
    \ evenly, smaller than n\n// >>> largest_divisor(15)\n// 5\nfunction largest_divisor($n)\
    \ {\n    $i = $n - 1;\n    while ($i > 0) {\n        if ($n % $i == 0) {\n   \
    \         return $i;\n        }\n        $i--;\n    }\n}\n\nfunction candidate(...$args)\
    \ {\n    return largest_divisor(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(3) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 50)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(49) !== 7) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// For a given number n, find the largest number that divides n\
    \ evenly, smaller than n\n// >>> largest_divisor(15)\n// 5\nfunction largest_divisor($n)\
    \ {\n    for ($i = $n - 1; $i > 0; $i--) {\n        if ($n % $i == 0) {\n    \
    \        return $i;\n        }\n    }\n}\n\nfunction candidate(...$args) {\n \
    \   return largest_divisor(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 5)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 50) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(49) !== 7) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// For a given number n, find the largest number that divides n\
    \ evenly, smaller than n\n// >>> largest_divisor(15)\n// 5\nfunction largest_divisor($n)\
    \ {\n    $i = $n - 1;\n    while ($i > 0) {\n        if ($n % $i == 0) {\n   \
    \         return $i;\n        }\n        $i--;\n    }\n}\n\nfunction candidate(...$args)\
    \ {\n    return largest_divisor(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(3) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 50)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(49) !== 7) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// For a given number n, find the largest number that divides n\
    \ evenly, smaller than n\n// >>> largest_divisor(15)\n// 5\nfunction largest_divisor($n)\
    \ {\n    $i = $n - 1;\n    while ($i > 0) {\n        if ($n % $i == 0) {\n   \
    \         return $i;\n        }\n        $i--;\n    }\n}\n\nfunction candidate(...$args)\
    \ {\n    return largest_divisor(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(3) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 50)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(49) !== 7) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// For a given number n, find the largest number that divides n\
    \ evenly, smaller than n\n// >>> largest_divisor(15)\n// 5\nfunction largest_divisor($n)\
    \ {\n    $i = $n - 1;\n    while ($i > 0) {\n        if ($n % $i == 0) {\n   \
    \         return $i;\n        }\n        $i--;\n    }\n}\n\nfunction candidate(...$args)\
    \ {\n    return largest_divisor(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(3) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 50)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(49) !== 7) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// For a given number n, find the largest number that divides n\
    \ evenly, smaller than n\n// >>> largest_divisor(15)\n// 5\nfunction largest_divisor($n)\
    \ {\n    for ($i = $n - 1; $i > 0; $i--) {\n        if ($n % $i == 0) {\n    \
    \        return $i;\n        }\n    }\n}\n\nfunction candidate(...$args) {\n \
    \   return largest_divisor(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 5)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 50) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(49) !== 7) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// For a given number n, find the largest number that divides n\
    \ evenly, smaller than n\n// >>> largest_divisor(15)\n// 5\nfunction largest_divisor($n)\
    \ {\n    for ($i = $n - 1; $i > 0; $i--) {\n        if ($n % $i == 0) {\n    \
    \        return $i;\n        }\n    }\n}\n\nfunction candidate(...$args) {\n \
    \   return largest_divisor(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 5)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 50) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(49) !== 7) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// For a given number n, find the largest number that divides n\
    \ evenly, smaller than n\n// >>> largest_divisor(15)\n// 5\nfunction largest_divisor($n)\
    \ {\n  $i = $n - 1;\n  while ($i > 0) {\n    if ($n % $i == 0) {\n      return\
    \ $i;\n    }\n    $i--;\n  }\n}\n\nfunction candidate(...$args) {\n    return\
    \ largest_divisor(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 5)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 50) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(49) !== 7) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// For a given number n, find the largest number that divides n\
    \ evenly, smaller than n\n// >>> largest_divisor(15)\n// 5\nfunction largest_divisor($n)\
    \ {\n    $i = $n - 1;\n    while ($i > 0) {\n        if ($n % $i == 0) {\n   \
    \         return $i;\n        }\n        $i--;\n    }\n}\n\nfunction candidate(...$args)\
    \ {\n    return largest_divisor(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(3) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 50)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(49) !== 7) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// For a given number n, find the largest number that divides n\
    \ evenly, smaller than n\n// >>> largest_divisor(15)\n// 5\nfunction largest_divisor($n)\
    \ {\n    for ($i = $n - 1; $i > 0; $i--) {\n        if ($n % $i == 0) {\n    \
    \        return $i;\n        }\n    }\n}\n\nfunction candidate(...$args) {\n \
    \   return largest_divisor(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 5)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 50) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(49) !== 7) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// For a given number n, find the largest number that divides n\
    \ evenly, smaller than n\n// >>> largest_divisor(15)\n// 5\nfunction largest_divisor($n)\
    \ {\n    for ($i = $n - 1; $i > 0; $i--) {\n        if ($n % $i == 0) {\n    \
    \        return $i;\n        }\n    }\n}\n\nfunction candidate(...$args) {\n \
    \   return largest_divisor(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 5)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 50) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(49) !== 7) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// For a given number n, find the largest number that divides n\
    \ evenly, smaller than n\n// >>> largest_divisor(15)\n// 5\nfunction largest_divisor($n)\
    \ {\n    $i = $n - 1;\n    while ($i > 0) {\n        if ($n % $i == 0) {\n   \
    \         return $i;\n        }\n        $i--;\n    }\n}\necho largest_divisor(15)\
    \ . \"\\n\";\n\nfunction candidate(...$args) {\n    return largest_divisor(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100) !== 50) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(49) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  stdout: "5\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// For a given number n, find the largest number that divides n\
    \ evenly, smaller than n\n// >>> largest_divisor(15)\n// 5\nfunction largest_divisor($n)\
    \ {\n    $i = $n - 1;\n    while ($i > 0) {\n        if ($n % $i == 0) {\n   \
    \         return $i;\n        }\n        $i--;\n    }\n}\n\nfunction candidate(...$args)\
    \ {\n    return largest_divisor(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(3) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 50)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(49) !== 7) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// For a given number n, find the largest number that divides n\
    \ evenly, smaller than n\n// >>> largest_divisor(15)\n// 5\nfunction largest_divisor($n)\
    \ {\n    $largest_divisor = 1;\n    for ($i = 2; $i < $n; $i++) {\n        if\
    \ ($n % $i == 0) {\n            $largest_divisor = $i;\n        }\n    }\n   \
    \ return $largest_divisor;\n}\n\nfunction candidate(...$args) {\n    return largest_divisor(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100) !== 50) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(49) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// For a given number n, find the largest number that divides n\
    \ evenly, smaller than n\n// >>> largest_divisor(15)\n// 5\nfunction largest_divisor($n)\
    \ {\n    $i = $n - 1;\n    while ($i > 0) {\n        if ($n % $i == 0) {\n   \
    \         return $i;\n        }\n        $i--;\n    }\n}\n\nfunction candidate(...$args)\
    \ {\n    return largest_divisor(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(3) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 50)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(49) !== 7) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// For a given number n, find the largest number that divides n\
    \ evenly, smaller than n\n// >>> largest_divisor(15)\n// 5\nfunction largest_divisor($n)\
    \ {\n    for ($i = $n - 1; $i > 0; $i--) {\n        if ($n % $i == 0) {\n    \
    \        return $i;\n        }\n    }\n}\n\nfunction candidate(...$args) {\n \
    \   return largest_divisor(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 5)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 50) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(49) !== 7) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// For a given number n, find the largest number that divides n\
    \ evenly, smaller than n\n// >>> largest_divisor(15)\n// 5\nfunction largest_divisor($n)\
    \ {\n    $i = $n - 1;\n    while ($i > 0) {\n        if ($n % $i == 0) {\n   \
    \         return $i;\n        }\n        $i--;\n    }\n}\n\nfunction candidate(...$args)\
    \ {\n    return largest_divisor(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(3) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 50)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(49) !== 7) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// For a given number n, find the largest number that divides n\
    \ evenly, smaller than n\n// >>> largest_divisor(15)\n// 5\nfunction largest_divisor($n)\
    \ {\n    for ($i = $n - 1; $i > 0; $i--) {\n        if ($n % $i == 0) {\n    \
    \        return $i;\n        }\n    }\n}\n\nfunction candidate(...$args) {\n \
    \   return largest_divisor(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 5)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 50) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(49) !== 7) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// For a given number n, find the largest number that divides n\
    \ evenly, smaller than n\n// >>> largest_divisor(15)\n// 5\nfunction largest_divisor($n)\
    \ {\n    for ($i = $n - 1; $i > 0; $i--) {\n        if ($n % $i == 0) {\n    \
    \        return $i;\n        }\n    }\n}\n\nfunction candidate(...$args) {\n \
    \   return largest_divisor(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 5)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 50) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(49) !== 7) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// For a given number n, find the largest number that divides n\
    \ evenly, smaller than n\n// >>> largest_divisor(15)\n// 5\nfunction largest_divisor($n)\
    \ {\n    $i = $n - 1;\n    while ($i > 0) {\n        if ($n % $i == 0) {\n   \
    \         return $i;\n        }\n        $i--;\n    }\n}\n\nfunction candidate(...$args)\
    \ {\n    return largest_divisor(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(3) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 50)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(49) !== 7) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// For a given number n, find the largest number that divides n\
    \ evenly, smaller than n\n// >>> largest_divisor(15)\n// 5\nfunction largest_divisor($n)\
    \ {\n    $i = $n - 1;\n    while ($i > 0) {\n        if ($n % $i == 0) {\n   \
    \         return $i;\n        }\n        $i--;\n    }\n}\n\nfunction candidate(...$args)\
    \ {\n    return largest_divisor(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(3) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 50)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(49) !== 7) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// For a given number n, find the largest number that divides n\
    \ evenly, smaller than n\n// >>> largest_divisor(15)\n// 5\nfunction largest_divisor($n)\
    \ {\n    $i = $n - 1;\n    while ($i > 0) {\n        if ($n % $i == 0) {\n   \
    \         return $i;\n        }\n        $i--;\n    }\n}\n\nfunction candidate(...$args)\
    \ {\n    return largest_divisor(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(3) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 50)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(49) !== 7) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// For a given number n, find the largest number that divides n\
    \ evenly, smaller than n\n// >>> largest_divisor(15)\n// 5\nfunction largest_divisor($n)\
    \ {\n    $i = $n - 1;\n    while ($i > 0) {\n        if ($n % $i == 0) {\n   \
    \         return $i;\n        }\n        $i--;\n    }\n}\n\nfunction candidate(...$args)\
    \ {\n    return largest_divisor(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(3) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 50)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(49) !== 7) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// For a given number n, find the largest number that divides n\
    \ evenly, smaller than n\n// >>> largest_divisor(15)\n// 5\nfunction largest_divisor($n)\
    \ {\n\tfor ($i = $n - 1; $i > 0; $i--) {\n\t\tif ($n % $i == 0) {\n\t\t\treturn\
    \ $i;\n\t\t}\n\t}\n}\n\nfunction candidate(...$args) {\n    return largest_divisor(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100) !== 50) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(49) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// For a given number n, find the largest number that divides n\
    \ evenly, smaller than n\n// >>> largest_divisor(15)\n// 5\nfunction largest_divisor($n)\
    \ {\n    $i = $n - 1;\n    while ($i > 0) {\n        if ($n % $i == 0) {\n   \
    \         return $i;\n        }\n        $i--;\n    }\n}\n\nfunction candidate(...$args)\
    \ {\n    return largest_divisor(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(3) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 50)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(49) !== 7) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// For a given number n, find the largest number that divides n\
    \ evenly, smaller than n\n// >>> largest_divisor(15)\n// 5\nfunction largest_divisor($n)\
    \ {\n    $i = $n - 1;\n    while ($i > 0) {\n        if ($n % $i == 0) {\n   \
    \         return $i;\n        }\n        $i--;\n    }\n}\n\nfunction candidate(...$args)\
    \ {\n    return largest_divisor(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(3) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 50)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(49) !== 7) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// For a given number n, find the largest number that divides n\
    \ evenly, smaller than n\n// >>> largest_divisor(15)\n// 5\nfunction largest_divisor($n)\
    \ {\n    for ($i = $n - 1; $i > 0; $i--) {\n        if ($n % $i == 0) {\n    \
    \        return $i;\n        }\n    }\n}\n\nfunction candidate(...$args) {\n \
    \   return largest_divisor(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 5)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 50) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(49) !== 7) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// For a given number n, find the largest number that divides n\
    \ evenly, smaller than n\n// >>> largest_divisor(15)\n// 5\nfunction largest_divisor($n)\
    \ {\n    for ($i = $n - 1; $i > 0; $i--) {\n        if ($n % $i == 0) {\n    \
    \        return $i;\n        }\n    }\n}\n\nfunction candidate(...$args) {\n \
    \   return largest_divisor(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 5)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 50) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(49) !== 7) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// For a given number n, find the largest number that divides n\
    \ evenly, smaller than n\n// >>> largest_divisor(15)\n// 5\nfunction largest_divisor($n)\
    \ {\n    $largest_divisor = 1;\n    for ($i = 2; $i < $n; $i++) {\n        if\
    \ ($n % $i == 0) {\n            $largest_divisor = $i;\n        }\n    }\n   \
    \ return $largest_divisor;\n}\necho largest_divisor(15);\necho \"\\n\";\n\nfunction\
    \ candidate(...$args) {\n    return largest_divisor(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(3) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(7) !== 1) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(10) !== 5) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(100) !== 50) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(49) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "5\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// For a given number n, find the largest number that divides n\
    \ evenly, smaller than n\n// >>> largest_divisor(15)\n// 5\nfunction largest_divisor($n)\
    \ {\n    for ($i = $n - 1; $i > 0; $i--) {\n        if ($n % $i == 0) {\n    \
    \        return $i;\n        }\n    }\n}\n\nfunction candidate(...$args) {\n \
    \   return largest_divisor(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 5)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 50) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(49) !== 7) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// For a given number n, find the largest number that divides n\
    \ evenly, smaller than n\n// >>> largest_divisor(15)\n// 5\nfunction largest_divisor($n)\
    \ {\n    $i = $n - 1;\n    while ($i > 0) {\n        if ($n % $i == 0) {\n   \
    \         return $i;\n        }\n        $i--;\n    }\n}\n\nfunction candidate(...$args)\
    \ {\n    return largest_divisor(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(3) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 50)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(49) !== 7) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// For a given number n, find the largest number that divides n\
    \ evenly, smaller than n\n// >>> largest_divisor(15)\n// 5\nfunction largest_divisor($n)\
    \ {\n    for ($i = $n - 1; $i > 0; $i--) {\n        if ($n % $i == 0) {\n    \
    \        return $i;\n        }\n    }\n}\n\nfunction candidate(...$args) {\n \
    \   return largest_divisor(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 5)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 50) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(49) !== 7) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// For a given number n, find the largest number that divides n\
    \ evenly, smaller than n\n// >>> largest_divisor(15)\n// 5\nfunction largest_divisor($n)\
    \ {\n    $i = $n - 1;\n    while ($i > 0) {\n        if ($n % $i == 0) {\n   \
    \         return $i;\n        }\n        $i--;\n    }\n}\n\nfunction candidate(...$args)\
    \ {\n    return largest_divisor(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(3) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 50)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(49) !== 7) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// For a given number n, find the largest number that divides n\
    \ evenly, smaller than n\n// >>> largest_divisor(15)\n// 5\nfunction largest_divisor($n)\
    \ {\n  for ($i = $n - 1; $i > 0; $i--) {\n    if ($n % $i == 0) {\n      return\
    \ $i;\n    }\n  }\n}\n\nfunction candidate(...$args) {\n    return largest_divisor(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100) !== 50) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(49) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// For a given number n, find the largest number that divides n\
    \ evenly, smaller than n\n// >>> largest_divisor(15)\n// 5\nfunction largest_divisor($n)\
    \ {\n    $i = $n - 1;\n    while ($i > 0) {\n        if ($n % $i == 0) {\n   \
    \         return $i;\n        }\n        $i--;\n    }\n}\n\nfunction candidate(...$args)\
    \ {\n    return largest_divisor(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(3) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 50)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(49) !== 7) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// For a given number n, find the largest number that divides n\
    \ evenly, smaller than n\n// >>> largest_divisor(15)\n// 5\nfunction largest_divisor($n)\
    \ {\n    $largest_divisor = 1;\n    for ($i = 2; $i < $n; $i++) {\n        if\
    \ ($n % $i == 0) {\n            $largest_divisor = $i;\n        }\n    }\n   \
    \ return $largest_divisor;\n}\n\nfunction candidate(...$args) {\n    return largest_divisor(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100) !== 50) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(49) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// For a given number n, find the largest number that divides n\
    \ evenly, smaller than n\n// >>> largest_divisor(15)\n// 5\nfunction largest_divisor($n)\
    \ {\n    $i = $n - 1;\n    while ($i > 0) {\n        if ($n % $i == 0) {\n   \
    \         return $i;\n        }\n        $i--;\n    }\n}\n\nfunction candidate(...$args)\
    \ {\n    return largest_divisor(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(3) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 50)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(49) !== 7) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// For a given number n, find the largest number that divides n\
    \ evenly, smaller than n\n// >>> largest_divisor(15)\n// 5\nfunction largest_divisor($n)\
    \ {\n  for ($i = $n - 1; $i > 0; $i--) {\n    if ($n % $i == 0) {\n      return\
    \ $i;\n    }\n  }\n}\n\nfunction candidate(...$args) {\n    return largest_divisor(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100) !== 50) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(49) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// For a given number n, find the largest number that divides n\
    \ evenly, smaller than n\n// >>> largest_divisor(15)\n// 5\nfunction largest_divisor($n)\
    \ {\n    $i = $n - 1;\n    while ($i > 0) {\n        if ($n % $i == 0) {\n   \
    \         return $i;\n        }\n        $i--;\n    }\n}\n\nfunction candidate(...$args)\
    \ {\n    return largest_divisor(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(3) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 50)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(49) !== 7) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// For a given number n, find the largest number that divides n\
    \ evenly, smaller than n\n// >>> largest_divisor(15)\n// 5\nfunction largest_divisor($n)\
    \ {\n    $i = $n - 1;\n    while ($i > 0) {\n        if ($n % $i == 0) {\n   \
    \         return $i;\n        }\n        $i--;\n    }\n}\n\nfunction candidate(...$args)\
    \ {\n    return largest_divisor(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(3) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 50)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(49) !== 7) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// For a given number n, find the largest number that divides n\
    \ evenly, smaller than n\n// >>> largest_divisor(15)\n// 5\nfunction largest_divisor($n)\
    \ {\n    $largest_divisor = 1;\n    for ($i = 2; $i < $n; $i++) {\n        if\
    \ ($n % $i == 0) {\n            $largest_divisor = $i;\n        }\n    }\n   \
    \ return $largest_divisor;\n}\n\nfunction candidate(...$args) {\n    return largest_divisor(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100) !== 50) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(49) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// For a given number n, find the largest number that divides n\
    \ evenly, smaller than n\n// >>> largest_divisor(15)\n// 5\nfunction largest_divisor($n)\
    \ {\n    $i = $n - 1;\n    while ($i > 0) {\n        if ($n % $i == 0) {\n   \
    \         return $i;\n        }\n        $i--;\n    }\n}\n\nfunction candidate(...$args)\
    \ {\n    return largest_divisor(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(3) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 50)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(49) !== 7) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// For a given number n, find the largest number that divides n\
    \ evenly, smaller than n\n// >>> largest_divisor(15)\n// 5\nfunction largest_divisor($n)\
    \ {\n    $i = $n - 1;\n    while ($i > 0) {\n        if ($n % $i == 0) {\n   \
    \         return $i;\n        }\n        $i--;\n    }\n}\n\nfunction candidate(...$args)\
    \ {\n    return largest_divisor(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(3) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 50)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(49) !== 7) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// For a given number n, find the largest number that divides n\
    \ evenly, smaller than n\n// >>> largest_divisor(15)\n// 5\nfunction largest_divisor($n)\
    \ {\n    $i = $n - 1;\n    while ($i > 0) {\n        if ($n % $i == 0) {\n   \
    \         return $i;\n        }\n        $i--;\n    }\n}\n\nfunction candidate(...$args)\
    \ {\n    return largest_divisor(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(3) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 50)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(49) !== 7) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// For a given number n, find the largest number that divides n\
    \ evenly, smaller than n\n// >>> largest_divisor(15)\n// 5\nfunction largest_divisor($n)\
    \ {\n    $i = $n - 1;\n    while ($i > 0) {\n        if ($n % $i == 0) {\n   \
    \         return $i;\n        }\n        $i--;\n    }\n}\n\nfunction candidate(...$args)\
    \ {\n    return largest_divisor(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(3) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 50)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(49) !== 7) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// For a given number n, find the largest number that divides n\
    \ evenly, smaller than n\n// >>> largest_divisor(15)\n// 5\nfunction largest_divisor($n)\
    \ {\n    for ($i = $n - 1; $i > 0; $i--) {\n        if ($n % $i == 0) {\n    \
    \        return $i;\n        }\n    }\n}\n\nfunction candidate(...$args) {\n \
    \   return largest_divisor(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 5)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 50) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(49) !== 7) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// For a given number n, find the largest number that divides n\
    \ evenly, smaller than n\n// >>> largest_divisor(15)\n// 5\nfunction largest_divisor($n)\
    \ {\n    $i = $n - 1;\n    while ($i > 0) {\n        if ($n % $i == 0) {\n   \
    \         return $i;\n        }\n        $i--;\n    }\n}\n\nfunction candidate(...$args)\
    \ {\n    return largest_divisor(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(3) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 50)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(49) !== 7) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// For a given number n, find the largest number that divides n\
    \ evenly, smaller than n\n// >>> largest_divisor(15)\n// 5\nfunction largest_divisor($n)\
    \ {\n    $i = $n - 1;\n    while ($i > 0) {\n        if ($n % $i == 0) {\n   \
    \         return $i;\n        }\n        $i--;\n    }\n}\n\nfunction candidate(...$args)\
    \ {\n    return largest_divisor(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(3) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 50)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(49) !== 7) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// For a given number n, find the largest number that divides n\
    \ evenly, smaller than n\n// >>> largest_divisor(15)\n// 5\nfunction largest_divisor($n)\
    \ {\n    $divisor = $n - 1;\n    while ($n % $divisor != 0) {\n        $divisor\
    \ -= 1;\n    }\n    return $divisor;\n}\n\nfunction candidate(...$args) {\n  \
    \  return largest_divisor(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 5)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 50) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(49) !== 7) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// For a given number n, find the largest number that divides n\
    \ evenly, smaller than n\n// >>> largest_divisor(15)\n// 5\nfunction largest_divisor($n)\
    \ {\n    $i = $n - 1;\n    while ($i > 0) {\n        if ($n % $i == 0) {\n   \
    \         return $i;\n        }\n        $i--;\n    }\n}\n\nfunction candidate(...$args)\
    \ {\n    return largest_divisor(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(3) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 50)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(49) !== 7) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// For a given number n, find the largest number that divides n\
    \ evenly, smaller than n\n// >>> largest_divisor(15)\n// 5\nfunction largest_divisor($n)\
    \ {\n    $i = $n - 1;\n    while ($i > 0) {\n        if ($n % $i == 0) {\n   \
    \         return $i;\n        }\n        $i--;\n    }\n}\n\nfunction candidate(...$args)\
    \ {\n    return largest_divisor(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(3) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 50)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(49) !== 7) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// For a given number n, find the largest number that divides n\
    \ evenly, smaller than n\n// >>> largest_divisor(15)\n// 5\nfunction largest_divisor($n)\
    \ {\n    $divisor = $n - 1;\n    while ($n % $divisor != 0) {\n        $divisor--;\n\
    \    }\n    return $divisor;\n}\n\nfunction candidate(...$args) {\n    return\
    \ largest_divisor(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 5)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 50) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(49) !== 7) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// For a given number n, find the largest number that divides n\
    \ evenly, smaller than n\n// >>> largest_divisor(15)\n// 5\nfunction largest_divisor($n)\
    \ {\n  for ($i = $n - 1; $i > 0; $i--) {\n    if ($n % $i == 0) {\n      return\
    \ $i;\n    }\n  }\n}\n\nfunction candidate(...$args) {\n    return largest_divisor(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100) !== 50) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(49) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// For a given number n, find the largest number that divides n\
    \ evenly, smaller than n\n// >>> largest_divisor(15)\n// 5\nfunction largest_divisor($n)\
    \ {\n    $i = $n - 1;\n    while ($i > 0) {\n        if ($n % $i == 0) {\n   \
    \         return $i;\n        }\n        $i--;\n    }\n}\n\nfunction candidate(...$args)\
    \ {\n    return largest_divisor(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(3) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 50)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(49) !== 7) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// For a given number n, find the largest number that divides n\
    \ evenly, smaller than n\n// >>> largest_divisor(15)\n// 5\nfunction largest_divisor($n)\
    \ {\n    $i = $n - 1;\n    while ($i > 0) {\n        if ($n % $i == 0) {\n   \
    \         return $i;\n        }\n        $i--;\n    }\n}\n\nfunction candidate(...$args)\
    \ {\n    return largest_divisor(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(3) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 50)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(49) !== 7) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// For a given number n, find the largest number that divides n\
    \ evenly, smaller than n\n// >>> largest_divisor(15)\n// 5\nfunction largest_divisor($n)\
    \ {\n    $i = $n - 1;\n    while ($i > 0) {\n        if ($n % $i == 0) {\n   \
    \         return $i;\n        }\n        $i--;\n    }\n}\n\nfunction candidate(...$args)\
    \ {\n    return largest_divisor(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(3) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 50)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(49) !== 7) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// For a given number n, find the largest number that divides n\
    \ evenly, smaller than n\n// >>> largest_divisor(15)\n// 5\nfunction largest_divisor($n)\
    \ {\n    for ($i = $n - 1; $i > 0; $i--) {\n        if ($n % $i == 0) {\n    \
    \        return $i;\n        }\n    }\n}\n\nfunction candidate(...$args) {\n \
    \   return largest_divisor(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 5)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 50) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(49) !== 7) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// For a given number n, find the largest number that divides n\
    \ evenly, smaller than n\n// >>> largest_divisor(15)\n// 5\nfunction largest_divisor($n)\
    \ {\n\t$i = $n - 1;\n\twhile ($i > 0) {\n\t\tif ($n % $i == 0) {\n\t\t\treturn\
    \ $i;\n\t\t}\n\t\t$i--;\n\t}\n}\n\nfunction candidate(...$args) {\n    return\
    \ largest_divisor(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 5)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 50) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(49) !== 7) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// For a given number n, find the largest number that divides n\
    \ evenly, smaller than n\n// >>> largest_divisor(15)\n// 5\nfunction largest_divisor($n)\
    \ {\n    $i = $n - 1;\n    while ($i > 0) {\n        if ($n % $i == 0) {\n   \
    \         return $i;\n        }\n        $i--;\n    }\n}\n\nfunction candidate(...$args)\
    \ {\n    return largest_divisor(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(3) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 50)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(49) !== 7) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// For a given number n, find the largest number that divides n\
    \ evenly, smaller than n\n// >>> largest_divisor(15)\n// 5\nfunction largest_divisor($n)\
    \ {\n    $i = $n - 1;\n    while ($i > 0) {\n        if ($n % $i == 0) {\n   \
    \         return $i;\n        }\n        $i--;\n    }\n}\n\nfunction candidate(...$args)\
    \ {\n    return largest_divisor(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(3) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 50)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(49) !== 7) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// For a given number n, find the largest number that divides n\
    \ evenly, smaller than n\n// >>> largest_divisor(15)\n// 5\nfunction largest_divisor($n)\
    \ {\n    for ($i = $n - 1; $i > 0; $i--) {\n        if ($n % $i == 0) {\n    \
    \        return $i;\n        }\n    }\n}\n\nfunction candidate(...$args) {\n \
    \   return largest_divisor(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 5)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 50) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(49) !== 7) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// For a given number n, find the largest number that divides n\
    \ evenly, smaller than n\n// >>> largest_divisor(15)\n// 5\nfunction largest_divisor($n)\
    \ {\n    $i = $n - 1;\n    while ($i > 0) {\n        if ($n % $i == 0) {\n   \
    \         return $i;\n        }\n        $i--;\n    }\n}\n\nfunction candidate(...$args)\
    \ {\n    return largest_divisor(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(3) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 50)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(49) !== 7) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// For a given number n, find the largest number that divides n\
    \ evenly, smaller than n\n// >>> largest_divisor(15)\n// 5\nfunction largest_divisor($n)\
    \ {\n    $divisor = $n - 1;\n    while ($n % $divisor != 0) {\n        $divisor--;\n\
    \    }\n    return $divisor;\n}\n\nfunction candidate(...$args) {\n    return\
    \ largest_divisor(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 5)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 50) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(49) !== 7) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// For a given number n, find the largest number that divides n\
    \ evenly, smaller than n\n// >>> largest_divisor(15)\n// 5\nfunction largest_divisor($n)\
    \ {\n    $divisor = $n - 1;\n    while ($n % $divisor != 0) {\n        $divisor--;\n\
    \    }\n    return $divisor;\n}\n\nfunction candidate(...$args) {\n    return\
    \ largest_divisor(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 5)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 50) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(49) !== 7) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// For a given number n, find the largest number that divides n\
    \ evenly, smaller than n\n// >>> largest_divisor(15)\n// 5\nfunction largest_divisor($n)\
    \ {\n    for ($i = $n - 1; $i > 0; $i--) {\n        if ($n % $i == 0) {\n    \
    \        return $i;\n        }\n    }\n}\n\nfunction candidate(...$args) {\n \
    \   return largest_divisor(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 5)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 50) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(49) !== 7) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// For a given number n, find the largest number that divides n\
    \ evenly, smaller than n\n// >>> largest_divisor(15)\n// 5\nfunction largest_divisor($n)\
    \ {\n\tfor ($i = $n - 1; $i > 0; $i--) {\n\t\tif ($n % $i == 0) {\n\t\t\treturn\
    \ $i;\n\t\t}\n\t}\n}\n\nfunction candidate(...$args) {\n    return largest_divisor(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100) !== 50) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(49) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// For a given number n, find the largest number that divides n\
    \ evenly, smaller than n\n// >>> largest_divisor(15)\n// 5\nfunction largest_divisor($n)\
    \ {\n\tfor ($i = $n - 1; $i > 0; $i--) {\n\t\tif ($n % $i == 0) {\n\t\t\treturn\
    \ $i;\n\t\t}\n\t}\n}\n\nfunction candidate(...$args) {\n    return largest_divisor(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100) !== 50) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(49) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// For a given number n, find the largest number that divides n\
    \ evenly, smaller than n\n// >>> largest_divisor(15)\n// 5\nfunction largest_divisor($n)\
    \ {\n    for ($i = $n - 1; $i > 0; $i--) {\n        if ($n % $i == 0) {\n    \
    \        return $i;\n        }\n    }\n}\n\nfunction candidate(...$args) {\n \
    \   return largest_divisor(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 5)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 50) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(49) !== 7) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// For a given number n, find the largest number that divides n\
    \ evenly, smaller than n\n// >>> largest_divisor(15)\n// 5\nfunction largest_divisor($n)\
    \ {\n    $i = $n - 1;\n    while ($i > 0) {\n        if ($n % $i == 0) {\n   \
    \         return $i;\n        }\n        $i--;\n    }\n}\n\nfunction candidate(...$args)\
    \ {\n    return largest_divisor(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(3) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 50)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(49) !== 7) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// For a given number n, find the largest number that divides n\
    \ evenly, smaller than n\n// >>> largest_divisor(15)\n// 5\nfunction largest_divisor($n)\
    \ {\n\tfor ($i = $n - 1; $i > 0; $i--) {\n\t\tif ($n % $i == 0) {\n\t\t\treturn\
    \ $i;\n\t\t}\n\t}\n}\n\nfunction candidate(...$args) {\n    return largest_divisor(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100) !== 50) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(49) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// For a given number n, find the largest number that divides n\
    \ evenly, smaller than n\n// >>> largest_divisor(15)\n// 5\nfunction largest_divisor($n)\
    \ {\n    for ($i = $n - 1; $i > 0; $i--) {\n        if ($n % $i == 0) {\n    \
    \        return $i;\n        }\n    }\n}\n\nfunction candidate(...$args) {\n \
    \   return largest_divisor(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 5)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 50) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(49) !== 7) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// For a given number n, find the largest number that divides n\
    \ evenly, smaller than n\n// >>> largest_divisor(15)\n// 5\nfunction largest_divisor($n)\
    \ {\n    $i = $n - 1;\n    while ($i > 0) {\n        if ($n % $i == 0) {\n   \
    \         return $i;\n        }\n        $i--;\n    }\n}\n\nfunction candidate(...$args)\
    \ {\n    return largest_divisor(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(3) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 50)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(49) !== 7) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// For a given number n, find the largest number that divides n\
    \ evenly, smaller than n\n// >>> largest_divisor(15)\n// 5\nfunction largest_divisor($n)\
    \ {\n    for ($i = $n - 1; $i > 0; $i--) {\n        if ($n % $i == 0) {\n    \
    \        return $i;\n        }\n    }\n}\n\nfunction candidate(...$args) {\n \
    \   return largest_divisor(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 5)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 50) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(49) !== 7) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// For a given number n, find the largest number that divides n\
    \ evenly, smaller than n\n// >>> largest_divisor(15)\n// 5\nfunction largest_divisor($n)\
    \ {\n    for ($i = $n - 1; $i > 0; $i--) {\n        if ($n % $i == 0) {\n    \
    \        return $i;\n        }\n    }\n}\n\nfunction candidate(...$args) {\n \
    \   return largest_divisor(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 5)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 50) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(49) !== 7) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// For a given number n, find the largest number that divides n\
    \ evenly, smaller than n\n// >>> largest_divisor(15)\n// 5\nfunction largest_divisor($n)\
    \ {\n\t$i = $n - 1;\n\twhile ($i > 0) {\n\t\tif ($n % $i == 0) {\n\t\t\treturn\
    \ $i;\n\t\t}\n\t\t$i--;\n\t}\n}\n\nfunction candidate(...$args) {\n    return\
    \ largest_divisor(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 5)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 50) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(49) !== 7) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// For a given number n, find the largest number that divides n\
    \ evenly, smaller than n\n// >>> largest_divisor(15)\n// 5\nfunction largest_divisor($n)\
    \ {\n    $i = $n - 1;\n    while ($i > 0) {\n        if ($n % $i == 0) {\n   \
    \         return $i;\n        }\n        $i--;\n    }\n}\n\nfunction candidate(...$args)\
    \ {\n    return largest_divisor(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(3) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 50)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(49) !== 7) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// For a given number n, find the largest number that divides n\
    \ evenly, smaller than n\n// >>> largest_divisor(15)\n// 5\nfunction largest_divisor($n)\
    \ {\n    for ($i = $n - 1; $i > 0; $i--) {\n        if ($n % $i == 0) {\n    \
    \        return $i;\n        }\n    }\n}\n\nfunction candidate(...$args) {\n \
    \   return largest_divisor(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 5)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 50) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(49) !== 7) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// For a given number n, find the largest number that divides n\
    \ evenly, smaller than n\n// >>> largest_divisor(15)\n// 5\nfunction largest_divisor($n)\
    \ {\n    $i = $n - 1;\n    while ($i > 0) {\n        if ($n % $i == 0) {\n   \
    \         return $i;\n        }\n        $i--;\n    }\n}\n\nfunction candidate(...$args)\
    \ {\n    return largest_divisor(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(3) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 50)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(49) !== 7) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// For a given number n, find the largest number that divides n\
    \ evenly, smaller than n\n// >>> largest_divisor(15)\n// 5\nfunction largest_divisor($n)\
    \ {\n    $i = $n - 1;\n    while ($i > 0) {\n        if ($n % $i == 0) {\n   \
    \         return $i;\n        }\n        $i--;\n    }\n}\n\nfunction candidate(...$args)\
    \ {\n    return largest_divisor(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(3) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 50)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(49) !== 7) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// For a given number n, find the largest number that divides n\
    \ evenly, smaller than n\n// >>> largest_divisor(15)\n// 5\nfunction largest_divisor($n)\
    \ {\n    $largest_divisor = 1;\n    for ($i = 1; $i < $n; $i++) {\n        if\
    \ ($n % $i == 0) {\n            $largest_divisor = $i;\n        }\n    }\n   \
    \ return $largest_divisor;\n}\n\nfunction candidate(...$args) {\n    return largest_divisor(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100) !== 50) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(49) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// For a given number n, find the largest number that divides n\
    \ evenly, smaller than n\n// >>> largest_divisor(15)\n// 5\nfunction largest_divisor($n)\
    \ {\n    for ($i = $n - 1; $i > 0; $i--) {\n        if ($n % $i == 0) {\n    \
    \        return $i;\n        }\n    }\n}\n\nfunction candidate(...$args) {\n \
    \   return largest_divisor(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 5)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 50) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(49) !== 7) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// For a given number n, find the largest number that divides n\
    \ evenly, smaller than n\n// >>> largest_divisor(15)\n// 5\nfunction largest_divisor($n)\
    \ {\n    for ($i = $n - 1; $i > 0; $i--) {\n        if ($n % $i == 0) {\n    \
    \        return $i;\n        }\n    }\n}\n\nfunction candidate(...$args) {\n \
    \   return largest_divisor(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 5)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 50) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(49) !== 7) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// For a given number n, find the largest number that divides n\
    \ evenly, smaller than n\n// >>> largest_divisor(15)\n// 5\nfunction largest_divisor($n)\
    \ {\n    $i = $n - 1;\n    while ($i > 0) {\n        if ($n % $i == 0) {\n   \
    \         return $i;\n        }\n        $i--;\n    }\n}\n\nfunction candidate(...$args)\
    \ {\n    return largest_divisor(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(3) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 50)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(49) !== 7) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// For a given number n, find the largest number that divides n\
    \ evenly, smaller than n\n// >>> largest_divisor(15)\n// 5\nfunction largest_divisor($n)\
    \ {\n    $divisor = $n - 1;\n    while ($n % $divisor != 0) {\n        $divisor--;\n\
    \    }\n    return $divisor;\n}\n\nfunction candidate(...$args) {\n    return\
    \ largest_divisor(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 5)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 50) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(49) !== 7) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// For a given number n, find the largest number that divides n\
    \ evenly, smaller than n\n// >>> largest_divisor(15)\n// 5\nfunction largest_divisor($n)\
    \ {\n    $i = $n - 1;\n    while ($i > 0) {\n        if ($n % $i == 0) {\n   \
    \         return $i;\n        }\n        $i--;\n    }\n}\n\nfunction candidate(...$args)\
    \ {\n    return largest_divisor(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(3) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 50)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(49) !== 7) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// For a given number n, find the largest number that divides n\
    \ evenly, smaller than n\n// >>> largest_divisor(15)\n// 5\nfunction largest_divisor($n)\
    \ {\n  $i = $n - 1;\n  while ($i > 0) {\n    if ($n % $i == 0) {\n      return\
    \ $i;\n    }\n    $i--;\n  }\n}\n\nfunction candidate(...$args) {\n    return\
    \ largest_divisor(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 5)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 50) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(49) !== 7) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// For a given number n, find the largest number that divides n\
    \ evenly, smaller than n\n// >>> largest_divisor(15)\n// 5\nfunction largest_divisor($n)\
    \ {\n    for ($i = $n - 1; $i > 0; $i--) {\n        if ($n % $i == 0) {\n    \
    \        return $i;\n        }\n    }\n}\n\nfunction candidate(...$args) {\n \
    \   return largest_divisor(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 5)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 50) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(49) !== 7) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// For a given number n, find the largest number that divides n\
    \ evenly, smaller than n\n// >>> largest_divisor(15)\n// 5\nfunction largest_divisor($n)\
    \ {\n    $i = $n - 1;\n    while ($i > 0) {\n        if ($n % $i == 0) {\n   \
    \         return $i;\n        }\n        $i--;\n    }\n}\n\nfunction candidate(...$args)\
    \ {\n    return largest_divisor(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(3) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 50)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(49) !== 7) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// For a given number n, find the largest number that divides n\
    \ evenly, smaller than n\n// >>> largest_divisor(15)\n// 5\nfunction largest_divisor($n)\
    \ {\n  $i = $n - 1;\n  while ($i > 0) {\n    if ($n % $i == 0) {\n      return\
    \ $i;\n    }\n    $i--;\n  }\n}\n\nfunction candidate(...$args) {\n    return\
    \ largest_divisor(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 5)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 50) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(49) !== 7) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// For a given number n, find the largest number that divides n\
    \ evenly, smaller than n\n// >>> largest_divisor(15)\n// 5\nfunction largest_divisor($n)\
    \ {\n    $i = $n - 1;\n    while ($i > 0) {\n        if ($n % $i == 0) {\n   \
    \         return $i;\n        }\n        $i--;\n    }\n}\n\nfunction candidate(...$args)\
    \ {\n    return largest_divisor(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(3) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 50)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(49) !== 7) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// For a given number n, find the largest number that divides n\
    \ evenly, smaller than n\n// >>> largest_divisor(15)\n// 5\nfunction largest_divisor($n)\
    \ {\n    for ($i = $n - 1; $i > 0; $i--) {\n        if ($n % $i == 0) {\n    \
    \        return $i;\n        }\n    }\n}\n\nfunction candidate(...$args) {\n \
    \   return largest_divisor(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 5)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 50) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(49) !== 7) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// For a given number n, find the largest number that divides n\
    \ evenly, smaller than n\n// >>> largest_divisor(15)\n// 5\nfunction largest_divisor($n)\
    \ {\n    $divisor = $n - 1;\n    while ($n % $divisor != 0) {\n        $divisor--;\n\
    \    }\n    return $divisor;\n}\n\nfunction candidate(...$args) {\n    return\
    \ largest_divisor(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 5)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 50) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(49) !== 7) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// For a given number n, find the largest number that divides n\
    \ evenly, smaller than n\n// >>> largest_divisor(15)\n// 5\nfunction largest_divisor($n)\
    \ {\n    $i = $n - 1;\n    while ($i > 0) {\n        if ($n % $i == 0) {\n   \
    \         return $i;\n        }\n        $i--;\n    }\n}\n\nfunction candidate(...$args)\
    \ {\n    return largest_divisor(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(3) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 50)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(49) !== 7) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// For a given number n, find the largest number that divides n\
    \ evenly, smaller than n\n// >>> largest_divisor(15)\n// 5\nfunction largest_divisor($n)\
    \ {\n    // your code here\n    $divisor = $n - 1;\n    while ($n % $divisor !=\
    \ 0) {\n        $divisor--;\n    }\n    return $divisor;\n}\n\nfunction candidate(...$args)\
    \ {\n    return largest_divisor(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(3) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 50)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(49) !== 7) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// For a given number n, find the largest number that divides n\
    \ evenly, smaller than n\n// >>> largest_divisor(15)\n// 5\nfunction largest_divisor($n)\
    \ {\n    $i = $n - 1;\n    while ($i > 0) {\n        if ($n % $i == 0) {\n   \
    \         return $i;\n        }\n        $i--;\n    }\n}\n\nfunction candidate(...$args)\
    \ {\n    return largest_divisor(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(3) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 50)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(49) !== 7) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// For a given number n, find the largest number that divides n\
    \ evenly, smaller than n\n// >>> largest_divisor(15)\n// 5\nfunction largest_divisor($n)\
    \ {\n    $i = $n - 1;\n    while ($i > 0) {\n        if ($n % $i == 0) {\n   \
    \         return $i;\n        }\n        $i--;\n    }\n}\n\nfunction candidate(...$args)\
    \ {\n    return largest_divisor(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(3) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 50)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(49) !== 7) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// For a given number n, find the largest number that divides n\
    \ evenly, smaller than n\n// >>> largest_divisor(15)\n// 5\nfunction largest_divisor($n)\
    \ {\n    $i = $n - 1;\n    while ($i > 0) {\n        if ($n % $i == 0) {\n   \
    \         return $i;\n        }\n        $i--;\n    }\n}\n\nfunction candidate(...$args)\
    \ {\n    return largest_divisor(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(3) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 50)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(49) !== 7) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// For a given number n, find the largest number that divides n\
    \ evenly, smaller than n\n// >>> largest_divisor(15)\n// 5\nfunction largest_divisor($n)\
    \ {\n\t$largest_divisor = 1;\n\tfor ($i = 2; $i < $n; $i++) {\n\t\tif ($n % $i\
    \ == 0) {\n\t\t\t$largest_divisor = $i;\n\t\t}\n\t}\n\treturn $largest_divisor;\n\
    }\n\nfunction candidate(...$args) {\n    return largest_divisor(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(3) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100) !== 50) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(49) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// For a given number n, find the largest number that divides n\
    \ evenly, smaller than n\n// >>> largest_divisor(15)\n// 5\nfunction largest_divisor($n)\
    \ {\n    for ($i = $n - 1; $i > 0; $i--) {\n        if ($n % $i == 0) {\n    \
    \        return $i;\n        }\n    }\n}\n\nfunction candidate(...$args) {\n \
    \   return largest_divisor(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 5)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 50) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(49) !== 7) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// For a given number n, find the largest number that divides n\
    \ evenly, smaller than n\n// >>> largest_divisor(15)\n// 5\nfunction largest_divisor($n)\
    \ {\n  $i = $n - 1;\n  while ($i > 0) {\n    if ($n % $i == 0) {\n      return\
    \ $i;\n    }\n    $i--;\n  }\n}\n\nfunction candidate(...$args) {\n    return\
    \ largest_divisor(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 5)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 50) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(49) !== 7) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// For a given number n, find the largest number that divides n\
    \ evenly, smaller than n\n// >>> largest_divisor(15)\n// 5\nfunction largest_divisor($n)\
    \ {\n\tfor ($i = $n - 1; $i > 0; $i--) {\n\t\tif ($n % $i == 0) {\n\t\t\treturn\
    \ $i;\n\t\t}\n\t}\n}\n\nfunction candidate(...$args) {\n    return largest_divisor(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100) !== 50) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(49) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// For a given number n, find the largest number that divides n\
    \ evenly, smaller than n\n// >>> largest_divisor(15)\n// 5\nfunction largest_divisor($n)\
    \ {\n    $i = $n - 1;\n    while ($i > 0) {\n        if ($n % $i == 0) {\n   \
    \         return $i;\n        }\n        $i--;\n    }\n}\n\nfunction candidate(...$args)\
    \ {\n    return largest_divisor(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(3) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 50)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(49) !== 7) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// For a given number n, find the largest number that divides n\
    \ evenly, smaller than n\n// >>> largest_divisor(15)\n// 5\nfunction largest_divisor($n)\
    \ {\n    $i = $n - 1;\n    while ($i > 0) {\n        if ($n % $i == 0) {\n   \
    \         return $i;\n        }\n        $i--;\n    }\n}\n\nfunction candidate(...$args)\
    \ {\n    return largest_divisor(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(3) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 50)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(49) !== 7) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// For a given number n, find the largest number that divides n\
    \ evenly, smaller than n\n// >>> largest_divisor(15)\n// 5\nfunction largest_divisor($n)\
    \ {\n  $i = $n - 1;\n  while ($i > 0) {\n    if ($n % $i == 0) {\n      return\
    \ $i;\n    }\n    $i--;\n  }\n}\n\nfunction candidate(...$args) {\n    return\
    \ largest_divisor(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 5)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 50) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(49) !== 7) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// For a given number n, find the largest number that divides n\
    \ evenly, smaller than n\n// >>> largest_divisor(15)\n// 5\nfunction largest_divisor($n)\
    \ {\n    for ($i = $n - 1; $i > 0; $i--) {\n        if ($n % $i == 0) {\n    \
    \        return $i;\n        }\n    }\n}\n\nfunction candidate(...$args) {\n \
    \   return largest_divisor(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 5)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 50) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(49) !== 7) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// For a given number n, find the largest number that divides n\
    \ evenly, smaller than n\n// >>> largest_divisor(15)\n// 5\nfunction largest_divisor($n)\
    \ {\n    $i = $n - 1;\n    while ($i > 0) {\n        if ($n % $i == 0) {\n   \
    \         return $i;\n        }\n        $i--;\n    }\n}\n\nfunction candidate(...$args)\
    \ {\n    return largest_divisor(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(3) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 50)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(49) !== 7) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// For a given number n, find the largest number that divides n\
    \ evenly, smaller than n\n// >>> largest_divisor(15)\n// 5\nfunction largest_divisor($n)\
    \ {\n    $i = $n - 1;\n    while ($i > 0) {\n        if ($n % $i == 0) {\n   \
    \         return $i;\n        }\n        $i--;\n    }\n}\n\nfunction candidate(...$args)\
    \ {\n    return largest_divisor(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(3) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 50)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(49) !== 7) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// For a given number n, find the largest number that divides n\
    \ evenly, smaller than n\n// >>> largest_divisor(15)\n// 5\nfunction largest_divisor($n)\
    \ {\n    $i = $n - 1;\n    while ($i > 0) {\n        if ($n % $i == 0) {\n   \
    \         return $i;\n        }\n        $i--;\n    }\n}\n\nfunction candidate(...$args)\
    \ {\n    return largest_divisor(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(3) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 50)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(49) !== 7) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// For a given number n, find the largest number that divides n\
    \ evenly, smaller than n\n// >>> largest_divisor(15)\n// 5\nfunction largest_divisor($n)\
    \ {\n\t$i = $n - 1;\n\twhile ($i > 0) {\n\t\tif ($n % $i == 0) {\n\t\t\treturn\
    \ $i;\n\t\t}\n\t\t$i--;\n\t}\n}\n\nfunction candidate(...$args) {\n    return\
    \ largest_divisor(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 5)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 50) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(49) !== 7) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// For a given number n, find the largest number that divides n\
    \ evenly, smaller than n\n// >>> largest_divisor(15)\n// 5\nfunction largest_divisor($n)\
    \ {\n    for ($i = $n - 1; $i > 0; $i--) {\n        if ($n % $i == 0) {\n    \
    \        return $i;\n        }\n    }\n}\n\nfunction candidate(...$args) {\n \
    \   return largest_divisor(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 5)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 50) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(49) !== 7) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// For a given number n, find the largest number that divides n\
    \ evenly, smaller than n\n// >>> largest_divisor(15)\n// 5\nfunction largest_divisor($n)\
    \ {\n    for ($i = $n - 1; $i > 0; $i--) {\n        if ($n % $i == 0) {\n    \
    \        return $i;\n        }\n    }\n}\n\nfunction candidate(...$args) {\n \
    \   return largest_divisor(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 5)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 50) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(49) !== 7) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// For a given number n, find the largest number that divides n\
    \ evenly, smaller than n\n// >>> largest_divisor(15)\n// 5\nfunction largest_divisor($n)\
    \ {\n    $i = $n - 1;\n    while ($i > 0) {\n        if ($n % $i == 0) {\n   \
    \         return $i;\n        }\n        $i--;\n    }\n}\n\nfunction candidate(...$args)\
    \ {\n    return largest_divisor(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(3) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 50)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(49) !== 7) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// For a given number n, find the largest number that divides n\
    \ evenly, smaller than n\n// >>> largest_divisor(15)\n// 5\nfunction largest_divisor($n)\
    \ {\n    $largest = 0;\n    for ($i = 1; $i < $n; $i++) {\n        if ($n % $i\
    \ == 0) {\n            $largest = $i;\n        }\n    }\n    return $largest;\n\
    }\n\nfunction candidate(...$args) {\n    return largest_divisor(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(3) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100) !== 50) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(49) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// For a given number n, find the largest number that divides n\
    \ evenly, smaller than n\n// >>> largest_divisor(15)\n// 5\nfunction largest_divisor($n)\
    \ {\n    $i = $n - 1;\n    while ($i > 0) {\n        if ($n % $i == 0) {\n   \
    \         return $i;\n        }\n        $i--;\n    }\n}\n\nfunction candidate(...$args)\
    \ {\n    return largest_divisor(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(3) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 50)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(49) !== 7) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// For a given number n, find the largest number that divides n\
    \ evenly, smaller than n\n// >>> largest_divisor(15)\n// 5\nfunction largest_divisor($n)\
    \ {\n    for ($i = $n - 1; $i > 0; $i--) {\n        if ($n % $i == 0) {\n    \
    \        return $i;\n        }\n    }\n}\n\nfunction candidate(...$args) {\n \
    \   return largest_divisor(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 5)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 50) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(49) !== 7) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// For a given number n, find the largest number that divides n\
    \ evenly, smaller than n\n// >>> largest_divisor(15)\n// 5\nfunction largest_divisor($n)\
    \ {\n  $i = $n - 1;\n  while ($i > 0) {\n    if ($n % $i == 0) {\n      return\
    \ $i;\n    }\n    $i -= 1;\n  }\n}\n\nfunction candidate(...$args) {\n    return\
    \ largest_divisor(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 5)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 50) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(49) !== 7) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// For a given number n, find the largest number that divides n\
    \ evenly, smaller than n\n// >>> largest_divisor(15)\n// 5\nfunction largest_divisor($n)\
    \ {\n    $i = $n - 1;\n    while ($i > 0) {\n        if ($n % $i == 0) {\n   \
    \         return $i;\n        }\n        $i--;\n    }\n}\n\nfunction candidate(...$args)\
    \ {\n    return largest_divisor(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(3) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 50)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(49) !== 7) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// For a given number n, find the largest number that divides n\
    \ evenly, smaller than n\n// >>> largest_divisor(15)\n// 5\nfunction largest_divisor($n)\
    \ {\n    $i = $n - 1;\n    while ($i > 0) {\n        if ($n % $i == 0) {\n   \
    \         return $i;\n        }\n        $i--;\n    }\n}\n\nfunction candidate(...$args)\
    \ {\n    return largest_divisor(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(3) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 50)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(49) !== 7) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// For a given number n, find the largest number that divides n\
    \ evenly, smaller than n\n// >>> largest_divisor(15)\n// 5\nfunction largest_divisor($n)\
    \ {\n    $i = $n - 1;\n    while ($i > 0) {\n        if ($n % $i == 0) {\n   \
    \         return $i;\n        }\n        $i--;\n    }\n}\n\nfunction candidate(...$args)\
    \ {\n    return largest_divisor(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(3) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 50)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(49) !== 7) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// For a given number n, find the largest number that divides n\
    \ evenly, smaller than n\n// >>> largest_divisor(15)\n// 5\nfunction largest_divisor($n)\
    \ {\n    $i = $n - 1;\n    while ($i > 0) {\n        if ($n % $i == 0) {\n   \
    \         return $i;\n        }\n        $i--;\n    }\n}\n\nfunction candidate(...$args)\
    \ {\n    return largest_divisor(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(3) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 50)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(49) !== 7) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// For a given number n, find the largest number that divides n\
    \ evenly, smaller than n\n// >>> largest_divisor(15)\n// 5\nfunction largest_divisor($n)\
    \ {\n\t$i = $n - 1;\n\twhile ($i > 0) {\n\t\tif ($n % $i == 0) {\n\t\t\treturn\
    \ $i;\n\t\t}\n\t\t$i--;\n\t}\n}\n\nfunction candidate(...$args) {\n    return\
    \ largest_divisor(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 5)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 50) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(49) !== 7) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// For a given number n, find the largest number that divides n\
    \ evenly, smaller than n\n// >>> largest_divisor(15)\n// 5\nfunction largest_divisor($n)\
    \ {\n    $divisor = $n - 1;\n    while ($n % $divisor != 0) {\n        $divisor--;\n\
    \    }\n    return $divisor;\n}\n\nfunction candidate(...$args) {\n    return\
    \ largest_divisor(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 5)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 50) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(49) !== 7) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// For a given number n, find the largest number that divides n\
    \ evenly, smaller than n\n// >>> largest_divisor(15)\n// 5\nfunction largest_divisor($n)\
    \ {\n    $divisor = $n - 1;\n    while ($n % $divisor != 0) {\n        $divisor--;\n\
    \    }\n    return $divisor;\n}\n\nfunction candidate(...$args) {\n    return\
    \ largest_divisor(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 5)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 50) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(49) !== 7) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// For a given number n, find the largest number that divides n\
    \ evenly, smaller than n\n// >>> largest_divisor(15)\n// 5\nfunction largest_divisor($n)\
    \ {\n    $i = $n - 1;\n    while ($i > 0) {\n        if ($n % $i == 0) {\n   \
    \         return $i;\n        }\n        $i--;\n    }\n}\n\nfunction candidate(...$args)\
    \ {\n    return largest_divisor(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(3) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 50)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(49) !== 7) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// For a given number n, find the largest number that divides n\
    \ evenly, smaller than n\n// >>> largest_divisor(15)\n// 5\nfunction largest_divisor($n)\
    \ {\n    $i = $n - 1;\n    while ($i > 0) {\n        if ($n % $i == 0) {\n   \
    \         return $i;\n        }\n        $i--;\n    }\n}\n\nfunction candidate(...$args)\
    \ {\n    return largest_divisor(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(3) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 50)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(49) !== 7) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// For a given number n, find the largest number that divides n\
    \ evenly, smaller than n\n// >>> largest_divisor(15)\n// 5\nfunction largest_divisor($n)\
    \ {\n    $largest_divisor = 1;\n    for ($i = 2; $i < $n; $i++) {\n        if\
    \ ($n % $i == 0) {\n            $largest_divisor = $i;\n        }\n    }\n   \
    \ return $largest_divisor;\n}\n\nfunction candidate(...$args) {\n    return largest_divisor(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100) !== 50) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(49) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// For a given number n, find the largest number that divides n\
    \ evenly, smaller than n\n// >>> largest_divisor(15)\n// 5\nfunction largest_divisor($n)\
    \ {\n    $largest_divisor = 1;\n    for ($i = 2; $i < $n; $i++) {\n        if\
    \ ($n % $i == 0) {\n            $largest_divisor = $i;\n        }\n    }\n   \
    \ return $largest_divisor;\n}\n\nfunction candidate(...$args) {\n    return largest_divisor(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100) !== 50) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(49) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// For a given number n, find the largest number that divides n\
    \ evenly, smaller than n\n// >>> largest_divisor(15)\n// 5\nfunction largest_divisor($n)\
    \ {\n    $i = $n - 1;\n    while ($i > 0) {\n        if ($n % $i == 0) {\n   \
    \         return $i;\n        }\n        $i--;\n    }\n}\n\nfunction candidate(...$args)\
    \ {\n    return largest_divisor(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(3) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 50)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(49) !== 7) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// For a given number n, find the largest number that divides n\
    \ evenly, smaller than n\n// >>> largest_divisor(15)\n// 5\nfunction largest_divisor($n)\
    \ {\n    for ($i = $n - 1; $i > 0; $i--) {\n        if ($n % $i == 0) {\n    \
    \        return $i;\n        }\n    }\n}\n\nfunction candidate(...$args) {\n \
    \   return largest_divisor(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 5)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 50) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(49) !== 7) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// For a given number n, find the largest number that divides n\
    \ evenly, smaller than n\n// >>> largest_divisor(15)\n// 5\nfunction largest_divisor($n)\
    \ {\n    $i = $n - 1;\n    while ($i > 0) {\n        if ($n % $i == 0) {\n   \
    \         return $i;\n        }\n        $i--;\n    }\n}\n\nfunction candidate(...$args)\
    \ {\n    return largest_divisor(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(3) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 50)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(49) !== 7) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// For a given number n, find the largest number that divides n\
    \ evenly, smaller than n\n// >>> largest_divisor(15)\n// 5\nfunction largest_divisor($n)\
    \ {\n    $i = $n - 1;\n    while ($i > 0) {\n        if ($n % $i == 0) {\n   \
    \         return $i;\n        }\n        $i--;\n    }\n}\n\nfunction candidate(...$args)\
    \ {\n    return largest_divisor(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(3) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 50)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(49) !== 7) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// For a given number n, find the largest number that divides n\
    \ evenly, smaller than n\n// >>> largest_divisor(15)\n// 5\nfunction largest_divisor($n)\
    \ {\n    $i = $n - 1;\n    while ($i > 0) {\n        if ($n % $i == 0) {\n   \
    \         return $i;\n        }\n        $i--;\n    }\n}\n\nfunction candidate(...$args)\
    \ {\n    return largest_divisor(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(3) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 50)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(49) !== 7) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// For a given number n, find the largest number that divides n\
    \ evenly, smaller than n\n// >>> largest_divisor(15)\n// 5\nfunction largest_divisor($n)\
    \ {\n    $i = $n - 1;\n    while ($i > 0) {\n        if ($n % $i == 0) {\n   \
    \         return $i;\n        }\n        $i--;\n    }\n}\n\nfunction candidate(...$args)\
    \ {\n    return largest_divisor(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(3) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 50)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(49) !== 7) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// For a given number n, find the largest number that divides n\
    \ evenly, smaller than n\n// >>> largest_divisor(15)\n// 5\nfunction largest_divisor($n)\
    \ {\n    for ($i = $n - 1; $i > 0; $i--) {\n        if ($n % $i == 0) {\n    \
    \        return $i;\n        }\n    }\n}\n\nfunction candidate(...$args) {\n \
    \   return largest_divisor(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 5)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 50) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(49) !== 7) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// For a given number n, find the largest number that divides n\
    \ evenly, smaller than n\n// >>> largest_divisor(15)\n// 5\nfunction largest_divisor($n)\
    \ {\n    for ($i = $n - 1; $i > 0; $i--) {\n        if ($n % $i == 0) {\n    \
    \        return $i;\n        }\n    }\n}\n\nfunction candidate(...$args) {\n \
    \   return largest_divisor(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 5)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 50) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(49) !== 7) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// For a given number n, find the largest number that divides n\
    \ evenly, smaller than n\n// >>> largest_divisor(15)\n// 5\nfunction largest_divisor($n)\
    \ {\n    $i = $n - 1;\n    while ($i > 0) {\n        if ($n % $i == 0) {\n   \
    \         return $i;\n        }\n        $i--;\n    }\n}\n\nfunction candidate(...$args)\
    \ {\n    return largest_divisor(...$args);\n}\n\nfunction test(): void {\n   \
    \ if (candidate(3) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !==\
    \ 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 50)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(49) !== 7) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// For a given number n, find the largest number that divides n\
    \ evenly, smaller than n\n// >>> largest_divisor(15)\n// 5\nfunction largest_divisor($n)\
    \ {\n  for ($i = $n - 1; $i > 0; $i--) {\n    if ($n % $i == 0) {\n      return\
    \ $i;\n    }\n  }\n}\n\nfunction candidate(...$args) {\n    return largest_divisor(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(3) !== 1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7) !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(10) !== 5) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(100) !== 50) { throw new Exception(\"Test failed!\"); }\n \
    \   if (candidate(49) !== 7) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// For a given number n, find the largest number that divides n\
    \ evenly, smaller than n\n// >>> largest_divisor(15)\n// 5\nfunction largest_divisor($n)\
    \ {\n    $divisor = $n - 1;\n    while ($n % $divisor != 0) {\n        $divisor--;\n\
    \    }\n    return $divisor;\n}\n\nfunction candidate(...$args) {\n    return\
    \ largest_divisor(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 5)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 50) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(49) !== 7) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// For a given number n, find the largest number that divides n\
    \ evenly, smaller than n\n// >>> largest_divisor(15)\n// 5\nfunction largest_divisor($n)\
    \ {\n    for ($i = $n - 1; $i > 0; $i--) {\n        if ($n % $i == 0) {\n    \
    \        return $i;\n        }\n    }\n}\n\nfunction candidate(...$args) {\n \
    \   return largest_divisor(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 5)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 50) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(49) !== 7) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// For a given number n, find the largest number that divides n\
    \ evenly, smaller than n\n// >>> largest_divisor(15)\n// 5\nfunction largest_divisor($n)\
    \ {\n    for ($i = $n - 1; $i > 0; $i--) {\n        if ($n % $i == 0) {\n    \
    \        return $i;\n        }\n    }\n}\n\nfunction candidate(...$args) {\n \
    \   return largest_divisor(...$args);\n}\n\nfunction test(): void {\n    if (candidate(3)\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7) !==\
    \ 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 5)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(100) !== 50) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(49) !== 7) { throw\
    \ new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK

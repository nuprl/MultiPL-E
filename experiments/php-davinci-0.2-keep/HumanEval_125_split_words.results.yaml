name: HumanEval_125_split_words
language: php
results:
- program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // split_words(\"Hello world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"\
    Hello,world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"abcdef\") ==\
    \ 3\nfunction split_words($txt) {\n    if (strpos($txt, ' ') !== false) {\n  \
    \      return explode(' ', $txt);\n    } elseif (strpos($txt, ',') !== false)\
    \ {\n        return explode(',', $txt);\n    } else {\n        $count = 0;\n \
    \       for ($i = 0; $i < strlen($txt); $i++) {\n            if (ord($txt[$i])\
    \ % 2 !== 0) {\n                $count++;\n            }\n        }\n        return\
    \ $count;\n    }\n}\n\nfunction candidate(...$args) {\n    return split_words(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world!\") !== array(\"\
    Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"\
    world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world\
    \ !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpmtztl469.php:35\n\
    Stack trace:\n#0 /tmp/tmpmtztl469.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpmtztl469.php\
    \ on line 35\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // split_words(\"Hello world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"\
    Hello,world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"abcdef\") ==\
    \ 3\nfunction split_words($txt) {\n    $result = [];\n    if (strpos($txt, ' ')\
    \ !== false) {\n        $result = explode(' ', $txt);\n    } elseif (strpos($txt,\
    \ ',') !== false) {\n        $result = explode(',', $txt);\n    } else {\n   \
    \     $result = strlen(preg_replace('/[^a-z]/', '', $txt)) % 2 == 0 ? 0 : 1;\n\
    \    }\n    return $result;\n}\necho '<pre>';\nprint_r(split_words(\"Hello world!\"\
    ));\necho '</pre>';\necho '<pre>';\nprint_r(split_words(\"Hello,world!\"));\n\
    echo '</pre>';\necho '<pre>';\nprint_r(split_words(\"abcdef\"));\necho '</pre>';\n\
    function candidate(...$args) {\n    return split_words(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"Hello world!\") !== array(\"Hello\", \"\
    world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,world!\"\
    ) !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"world,!\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world !\"\
    ) !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: "<pre>Array\n(\n    [0] => Hello\n    [1] => world!\n)\n</pre><pre>Array\n\
    (\n    [0] => Hello\n    [1] => world!\n)\n</pre><pre>0</pre>"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpslmjws6_.php:38\n\
    Stack trace:\n#0 /tmp/tmpslmjws6_.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpslmjws6_.php\
    \ on line 38\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // split_words(\"Hello world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"\
    Hello,world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"abcdef\") ==\
    \ 3\nfunction split_words($txt) {\n    $arr = [];\n    if (strpos($txt, ' ') !==\
    \ false) {\n        $arr = explode(' ', $txt);\n    } elseif (strpos($txt, ',')\
    \ !== false) {\n        $arr = explode(',', $txt);\n    } else {\n        $arr\
    \ = str_split($txt);\n        $arr = array_filter($arr, function ($v) {\n    \
    \        return ord($v) % 2 === 1;\n        });\n        $arr = count($arr);\n\
    \    }\n    return $arr;\n}\n\nfunction candidate(...$args) {\n    return split_words(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world!\") !== array(\"\
    Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"\
    world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world\
    \ !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpwfx1gqoj.php:35\n\
    Stack trace:\n#0 /tmp/tmpwfx1gqoj.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpwfx1gqoj.php\
    \ on line 35\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // split_words(\"Hello world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"\
    Hello,world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"abcdef\") ==\
    \ 3\nfunction split_words($txt) {\n    $result = [];\n    if (strpos($txt, ' ')\
    \ !== false) {\n        $result = explode(' ', $txt);\n    } elseif (strpos($txt,\
    \ ',') !== false) {\n        $result = explode(',', $txt);\n    } else {\n   \
    \     $result = count(array_filter(str_split($txt), function ($v) {\n        \
    \    return ord($v) % 2 !== 0;\n        }));\n    }\n    return $result;\n}\n\n\
    function candidate(...$args) {\n    return split_words(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"Hello world!\") !== array(\"Hello\", \"\
    world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,world!\"\
    ) !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"world,!\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world !\"\
    ) !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpk1kujpgf.php:33\n\
    Stack trace:\n#0 /tmp/tmpk1kujpgf.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpk1kujpgf.php\
    \ on line 33\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // split_words(\"Hello world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"\
    Hello,world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"abcdef\") ==\
    \ 3\nfunction split_words($txt) {\n    $arr = str_split($txt);\n    $arr_1 = [];\n\
    \    $arr_2 = [];\n    $arr_3 = [];\n    $arr_4 = [];\n    $arr_5 = [];\n    $arr_6\
    \ = [];\n    $arr_7 = [];\n    $arr_8 = [];\n    $arr_9 = [];\n    $arr_10 = [];\n\
    \    $arr_11 = [];\n    $arr_12 = [];\n    $arr_13 = [];\n    $arr_14 = [];\n\
    \    $arr_15 = [];\n    $arr_16 = [];\n    $arr_17 = [];\n    $arr_18 = [];\n\
    \    $arr_19 = [];\n    $arr_20 = [];\n    $arr_21 = [];\n    $arr_22 = [];\n\
    \    $arr_23 = [];\n    $arr_24 = [];\n    $arr_25 = [];\n    $arr_26 = [];\n\
    \    $arr_27 = [];\n    $arr_28 = [];\n    $arr_29 = [];\n    $arr_30 = [];\n\
    \    $arr_31 = [];\n    $arr_32 = [];\n    $arr_33 = [];\n    $arr_34 = [];\n\
    \    $arr_35 = [];\n    $arr_36 = [];\n    $arr_37 = [];\n    $arr_38 = [];\n\
    \    $arr_39 = [];\n    $arr_40 = [];\n    $arr_41 = [];\n    $arr_42 = [];\n\
    \    $arr_43 = [];\n    $arr_44 = [];\n    $arr_45 = [];\n    $arr_46 = [];\n\
    \    $arr_47 = [];\n    $arr_48 = [];\n    $arr_49 = [];\n    $arr_50 = [];\n\
    \    $arr_51 = [];\n    $arr_52 = [];\n    $arr_53 = [];\n    $arr_54 = [];\n\
    \    $arr_55 = [];\n    $arr_56 = [];\n    $arr_57 = [];\n    $arr_58 = [];\n\
    \    $arr_59 = [];\n    $arr_60 = [];\n    $arr_61 = [];\n    $arr_62 = [];\n\
    \    $arr_\nfunction candidate(...$args) {\n    return split_words(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world!\") !== array(\"\
    Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"\
    world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world\
    \ !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Parse error:  syntax error, unexpected token \"function\" in /tmp/tmpi55ceyfe.php\
    \ on line 74\n"
  exit_code: 255
  status: SyntaxError
- program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // split_words(\"Hello world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"\
    Hello,world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"abcdef\") ==\
    \ 3\nfunction split_words($txt) {\n    $words = explode(\" \", $txt);\n    if\
    \ (count($words) > 1) {\n        return $words;\n    }\n    $words = explode(\"\
    ,\", $txt);\n    if (count($words) > 1) {\n        return $words;\n    }\n   \
    \ $count = 0;\n    for ($i = 0; $i < strlen($txt); $i++) {\n        if (ord($txt[$i])\
    \ % 2 == 1) {\n            $count++;\n        }\n    }\n    return $count;\n}\n\
    echo split_words(\"Hello world!\");\necho \"<br>\";\necho split_words(\"Hello,world!\"\
    );\necho \"<br>\";\necho split_words(\"abcdef\");\nfunction candidate(...$args)\
    \ {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\"\
    ) !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\"\
    , \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\"\
    ) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\"\
    ) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: Array<br>Array<br>3
  stderr: "PHP Warning:  Array to string conversion in /tmp/tmpzw6j3w6t.php on line\
    \ 26\nPHP Warning:  Array to string conversion in /tmp/tmpzw6j3w6t.php on line\
    \ 28\nPHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpzw6j3w6t.php:41\n\
    Stack trace:\n#0 /tmp/tmpzw6j3w6t.php(46): test()\n#1 {main}\n  thrown in /tmp/tmpzw6j3w6t.php\
    \ on line 41\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // split_words(\"Hello world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"\
    Hello,world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"abcdef\") ==\
    \ 3\nfunction split_words($txt) {\n    $result = [];\n    if (strpos($txt, ' ')\
    \ !== false) {\n        $result = explode(' ', $txt);\n    } elseif (strpos($txt,\
    \ ',') !== false) {\n        $result = explode(',', $txt);\n    } else {\n   \
    \     $count = 0;\n        for ($i = 0; $i < strlen($txt); $i++) {\n         \
    \   if (ord($txt[$i]) % 2 !== 0) {\n                $count++;\n            }\n\
    \        }\n        $result = $count;\n    }\n    return $result;\n}\necho '<pre>';\n\
    print_r(split_words(\"Hello world!\"));\necho '</pre>';\necho '<pre>';\nprint_r(split_words(\"\
    Hello,world!\"));\necho '</pre>';\necho '<pre>';\nprint_r(split_words(\"abcdef\"\
    ));\necho '</pre>';\nfunction candidate(...$args) {\n    return split_words(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world!\") !== array(\"\
    Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"\
    world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world\
    \ !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: "<pre>Array\n(\n    [0] => Hello\n    [1] => world!\n)\n</pre><pre>Array\n\
    (\n    [0] => Hello\n    [1] => world!\n)\n</pre><pre>3</pre>"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp6u11disa.php:45\n\
    Stack trace:\n#0 /tmp/tmp6u11disa.php(50): test()\n#1 {main}\n  thrown in /tmp/tmp6u11disa.php\
    \ on line 45\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // split_words(\"Hello world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"\
    Hello,world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"abcdef\") ==\
    \ 3\nfunction split_words($txt) {\n    if (strpos($txt, ' ') !== false) {\n  \
    \      return explode(' ', $txt);\n    } elseif (strpos($txt, ',') !== false)\
    \ {\n        return explode(',', $txt);\n    } else {\n        $count = 0;\n \
    \       for ($i = 0; $i < strlen($txt); $i++) {\n            if (ord($txt[$i])\
    \ % 2 !== 0) {\n                $count++;\n            }\n        }\n        return\
    \ $count;\n    }\n}\necho split_words(\"Hello world!\");\necho '<br>';\necho split_words(\"\
    Hello,world!\");\necho '<br>';\necho split_words(\"abcdef\");\necho '<br>';\n\
    echo split_words(\"abcdef,ghijkl\");\necho '<br>';\necho split_words(\"abcdef\
    \ ghijkl\");\necho '<br>';\necho split_words(\"abcdef,ghijkl mnopqr\");\necho\
    \ '<br>';\necho split_words(\"abcdef,ghijkl mnopqr,stuvwx\");\necho '<br>';\n\
    echo split_words(\"abcdef,ghijkl mnopqr,stuvwx yz\");\necho '<br>';\necho split_words(\"\
    abcdef,ghijkl mnopqr,stuvwx yz,\");\necho '<br>';\necho split_words(\"abcdef,ghijkl\
    \ mnopqr,stuvwx yz,12345\");\necho '<br>';\necho split_words(\"abcdef,ghijkl mnopqr,stuvwx\
    \ yz,12345 67890\");\necho '<br>';\necho split_words(\"abcdef,ghijkl mnopqr,stuvwx\
    \ yz,12345 67890,\");\necho '<br>';\necho split_words(\"abcdef,ghijkl mnopqr,stuvwx\
    \ yz,12345 67890,ABCDE\");\necho '<br>';\necho split_words(\"abcdef,ghijkl mnopqr,stuvwx\
    \ yz,12345 67890\nfunction candidate(...$args) {\n    return split_words(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world!\") !== array(\"\
    Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"\
    world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world\
    \ !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Parse error:  syntax error, unexpected identifier \"Hello\", expecting\
    \ \")\" in /tmp/tmpoa0wcj04.php on line 56\n"
  exit_code: 255
  status: SyntaxError
- program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // split_words(\"Hello world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"\
    Hello,world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"abcdef\") ==\
    \ 3\nfunction split_words($txt) {\n    $result = [];\n    $txt = str_replace(',',\
    \ ' ', $txt);\n    $txt = str_replace('!', '', $txt);\n    $result = explode('\
    \ ', $txt);\n    if (count($result) == 1) {\n        $result = [];\n        for\
    \ ($i = 0; $i < strlen($txt); $i++) {\n            if ($i % 2 == 0) {\n      \
    \          $result[] = $txt[$i];\n            }\n        }\n    }\n    return\
    \ $result;\n}\n\necho '<pre>';\nprint_r(split_words(\"Hello world!\"));\necho\
    \ '</pre>';\n\necho '<pre>';\nprint_r(split_words(\"Hello,world!\"));\necho '</pre>';\n\
    \necho '<pre>';\nprint_r(split_words(\"abcdef\"));\necho '</pre>';\nfunction candidate(...$args)\
    \ {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\"\
    ) !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\"\
    , \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\"\
    ) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\"\
    ) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "<pre>Array\n(\n    [0] => Hello\n    [1] => world\n)\n</pre><pre>Array\n\
    (\n    [0] => Hello\n    [1] => world\n)\n</pre><pre>Array\n(\n    [0] => a\n\
    \    [1] => c\n    [2] => e\n)\n</pre>"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp9xk08qvb.php:41\n\
    Stack trace:\n#0 /tmp/tmp9xk08qvb.php(51): test()\n#1 {main}\n  thrown in /tmp/tmp9xk08qvb.php\
    \ on line 41\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // split_words(\"Hello world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"\
    Hello,world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"abcdef\") ==\
    \ 3\nfunction split_words($txt) {\n    if (strpos($txt, ' ') !== false) {\n  \
    \      return explode(' ', $txt);\n    } elseif (strpos($txt, ',') !== false)\
    \ {\n        return explode(',', $txt);\n    } else {\n        $count = 0;\n \
    \       for ($i = 0; $i < strlen($txt); $i++) {\n            if (ord($txt[$i])\
    \ % 2 != 0) {\n                $count++;\n            }\n        }\n        return\
    \ $count;\n    }\n}\necho split_words(\"Hello world!\");\necho \"<br>\";\necho\
    \ split_words(\"Hello,world!\");\necho \"<br>\";\necho split_words(\"abcdef\"\
    );\necho \"<br>\";\necho split_words(\"abcdefghijklmnopqrstuvwxyz\");\necho \"\
    <br>\";\necho split_words(\"abcdefghijklmnopqrstuvwxyz,abcdefghijklmnopqrstuvwxyz\"\
    );\necho \"<br>\";\necho split_words(\"abcdefghijklmnopqrstuvwxyz abcdefghijklmnopqrstuvwxyz\"\
    );\necho \"<br>\";\necho split_words(\"abcdefghijklmnopqrstuvwxyz,abcdefghijklmnopqrstuvwxyz\
    \ abcdefghijklmnopqrstuvwxyz\");\necho \"<br>\";\necho split_words(\"abcdefghijklmnopqrstuvwxyz\
    \ abcdefghijklmnopqrstuvwxyz,abcdefghijklmnopqrstuvwxyz\");\necho \"<br>\";\n\
    echo split_words(\"abcdefghijklmnopqrstuvwxyz,abcdefghijklmnopqrstuvwxyz abcdefghijklmnopqrstuvwxyz,abcdefghijklmnopqrstuvwxyz\"\
    );\necho \"<br>\";\necho split_words(\"abcdefghijklmnopqrstuvwxyz abcdefghijklmnopqrstuvwxyz,abcdefghijkl\n\
    function candidate(...$args) {\n    return split_words(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"Hello world!\") !== array(\"Hello\", \"\
    world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,world!\"\
    ) !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"world,!\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world !\"\
    ) !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Parse error:  syntax error, unexpected identifier \"Hello\", expecting\
    \ \")\" in /tmp/tmpe1s07siq.php on line 48\n"
  exit_code: 255
  status: SyntaxError
- program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // split_words(\"Hello world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"\
    Hello,world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"abcdef\") ==\
    \ 3\nfunction split_words($txt) {\n    if(strpos($txt, ' ') !== false) {\n   \
    \     return explode(' ', $txt);\n    } elseif(strpos($txt, ',') !== false) {\n\
    \        return explode(',', $txt);\n    } else {\n        $odd = 0;\n       \
    \ for($i = 0; $i < strlen($txt); $i++) {\n            if(ord($txt[$i]) % 2 !==\
    \ 0) {\n                $odd++;\n            }\n        }\n        return $odd;\n\
    \    }\n}\necho split_words(\"Hello world!\");\necho '<br>';\necho split_words(\"\
    Hello,world!\");\necho '<br>';\necho split_words(\"abcdef\");\nfunction candidate(...$args)\
    \ {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\"\
    ) !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\"\
    , \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\"\
    ) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\"\
    ) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: Array<br>Array<br>3
  stderr: "PHP Warning:  Array to string conversion in /tmp/tmppjeq1l0y.php on line\
    \ 24\nPHP Warning:  Array to string conversion in /tmp/tmppjeq1l0y.php on line\
    \ 26\nPHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmppjeq1l0y.php:39\n\
    Stack trace:\n#0 /tmp/tmppjeq1l0y.php(44): test()\n#1 {main}\n  thrown in /tmp/tmppjeq1l0y.php\
    \ on line 39\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // split_words(\"Hello world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"\
    Hello,world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"abcdef\") ==\
    \ 3\nfunction split_words($txt) {\n    $result = [];\n    $txt = str_replace('\
    \ ', ',', $txt);\n    $txt = str_replace(',,', ',', $txt);\n    $txt = str_replace(',,',\
    \ ',', $txt);\n    $txt = str_replace(',,', ',', $txt);\n    $txt = str_replace(',,',\
    \ ',', $txt);\n    $txt = str_replace(',,', ',', $txt);\n    $txt = str_replace(',,',\
    \ ',', $txt);\n    $txt = str_replace(',,', ',', $txt);\n    $txt = str_replace(',,',\
    \ ',', $txt);\n    $txt = str_replace(',,', ',', $txt);\n    $txt = str_replace(',,',\
    \ ',', $txt);\n    $txt = str_replace(',,', ',', $txt);\n    $txt = str_replace(',,',\
    \ ',', $txt);\n    $txt = str_replace(',,', ',', $txt);\n    $txt = str_replace(',,',\
    \ ',', $txt);\n    $txt = str_replace(',,', ',', $txt);\n    $txt = str_replace(',,',\
    \ ',', $txt);\n    $txt = str_replace(',,', ',', $txt);\n    $txt = str_replace(',,',\
    \ ',', $txt);\n    $txt = str_replace(',,', ',', $txt);\n    $txt = str_replace(',,',\
    \ ',', $txt);\n    $txt = str_replace(',,', ',', $txt);\n    $txt = str_replace(',,',\
    \ ',', $txt);\n    $txt = str_replace(',,', ',', $txt);\n    $txt = str_replace(',,',\
    \ ',', $txt);\n    $txt = str_replace(',,', ',', $txt);\n    $txt = str_replace(',,',\
    \ ',', $txt);\n    $txt = str_replace(',,', ',', $txt);\n    $txt = str_replace(',,',\
    \ ',', $txt);\n    $txt = str_replace(',,', ',', $\nfunction candidate(...$args)\
    \ {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\"\
    ) !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\"\
    , \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\"\
    ) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\"\
    ) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Parse error:  syntax error, unexpected token \"function\", expecting\
    \ variable or \"{\" or \"$\" in /tmp/tmpgh7thzg5.php on line 41\n"
  exit_code: 255
  status: SyntaxError
- program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // split_words(\"Hello world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"\
    Hello,world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"abcdef\") ==\
    \ 3\nfunction split_words($txt) {\n    if (strpos($txt, ' ') !== false) {\n  \
    \      return explode(' ', $txt);\n    } elseif (strpos($txt, ',') !== false)\
    \ {\n        return explode(',', $txt);\n    } else {\n        $count = 0;\n \
    \       for ($i = 0; $i < strlen($txt); $i++) {\n            if (ord($txt[$i])\
    \ % 2 !== 0) {\n                $count++;\n            }\n        }\n        return\
    \ $count;\n    }\n}\necho split_words(\"Hello world!\") . PHP_EOL;\necho split_words(\"\
    Hello,world!\") . PHP_EOL;\necho split_words(\"abcdef\") . PHP_EOL;\nfunction\
    \ candidate(...$args) {\n    return split_words(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"Hello world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,world!\"\
    ) !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"world,!\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world !\"\
    ) !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: "Array\nArray\n3\n"
  stderr: "PHP Warning:  Array to string conversion in /tmp/tmp1tcgktd5.php on line\
    \ 24\nPHP Warning:  Array to string conversion in /tmp/tmp1tcgktd5.php on line\
    \ 25\nPHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp1tcgktd5.php:37\n\
    Stack trace:\n#0 /tmp/tmp1tcgktd5.php(42): test()\n#1 {main}\n  thrown in /tmp/tmp1tcgktd5.php\
    \ on line 37\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // split_words(\"Hello world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"\
    Hello,world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"abcdef\") ==\
    \ 3\nfunction split_words($txt) {\n\t$txt = str_replace(\",\", \" \", $txt);\n\
    \t$txt = str_replace(\"!\", \" \", $txt);\n\t$txt = str_replace(\".\", \" \",\
    \ $txt);\n\t$txt = str_replace(\";\", \" \", $txt);\n\t$txt = str_replace(\":\"\
    , \" \", $txt);\n\t$txt = str_replace(\"?\", \" \", $txt);\n\t$txt = str_replace(\"\
    -\", \" \", $txt);\n\t$txt = str_replace(\"_\", \" \", $txt);\n\t$txt = str_replace(\"\
    (\", \" \", $txt);\n\t$txt = str_replace(\")\", \" \", $txt);\n\t$txt = str_replace(\"\
    [\", \" \", $txt);\n\t$txt = str_replace(\"]\", \" \", $txt);\n\t$txt = str_replace(\"\
    {\", \" \", $txt);\n\t$txt = str_replace(\"}\", \" \", $txt);\n\t$txt = str_replace(\"\
    /\", \" \", $txt);\n\t$txt = str_replace(\"\\\\\", \" \", $txt);\n\t$txt = str_replace(\"\
    |\", \" \", $txt);\n\t$txt = str_replace(\"+\", \" \", $txt);\n\t$txt = str_replace(\"\
    =\", \" \", $txt);\n\t$txt = str_replace(\"*\", \" \", $txt);\n\t$txt = str_replace(\"\
    &\", \" \", $txt);\n\t$txt = str_replace(\"^\", \" \", $txt);\n\t$txt = str_replace(\"\
    %\", \" \", $txt);\n\t$txt = str_replace(\"$\", \" \", $txt);\n\t$txt = str_replace(\"\
    #\", \" \", $txt);\n\t$txt = str_replace(\"@\", \" \", $txt);\n\t$txt = str_replace(\"\
    ~\", \" \", $txt);\n\t$txt = str_replace(\"`\", \" \", $txt);\n\t$txt = str_replace(\"\
    '\", \" \", $txt);\n\t$txt = str_replace(\"\\\"\", \" \", $txt);\n\t$txt = str_replace(\"\
    <\", \" \", $txt);\n\t$txt = str_replace(\">\", \" \", $txt);\n\t$\nfunction candidate(...$args)\
    \ {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\"\
    ) !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\"\
    , \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\"\
    ) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\"\
    ) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Parse error:  syntax error, unexpected token \"function\", expecting\
    \ variable or \"{\" or \"$\" in /tmp/tmprodv17x4.php on line 43\n"
  exit_code: 255
  status: SyntaxError
- program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // split_words(\"Hello world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"\
    Hello,world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"abcdef\") ==\
    \ 3\nfunction split_words($txt) {\n\t$txt = str_replace(\",\", \" \", $txt);\n\
    \t$txt = str_replace(\"!\", \" \", $txt);\n\t$txt = str_replace(\"?\", \" \",\
    \ $txt);\n\t$txt = str_replace(\".\", \" \", $txt);\n\t$txt = str_replace(\";\"\
    , \" \", $txt);\n\t$txt = str_replace(\":\", \" \", $txt);\n\t$txt = str_replace(\"\
    -\", \" \", $txt);\n\t$txt = str_replace(\"_\", \" \", $txt);\n\t$txt = str_replace(\"\
    '\", \" \", $txt);\n\t$txt = str_replace(\"\\\"\", \" \", $txt);\n\t$txt = str_replace(\"\
    (\", \" \", $txt);\n\t$txt = str_replace(\")\", \" \", $txt);\n\t$txt = str_replace(\"\
    [\", \" \", $txt);\n\t$txt = str_replace(\"]\", \" \", $txt);\n\t$txt = str_replace(\"\
    {\", \" \", $txt);\n\t$txt = str_replace(\"}\", \" \", $txt);\n\t$txt = str_replace(\"\
    /\", \" \", $txt);\n\t$txt = str_replace(\"\\\\\", \" \", $txt);\n\t$txt = str_replace(\"\
    *\", \" \", $txt);\n\t$txt = str_replace(\"+\", \" \", $txt);\n\t$txt = str_replace(\"\
    =\", \" \", $txt);\n\t$txt = str_replace(\"&\", \" \", $txt);\n\t$txt = str_replace(\"\
    %\", \" \", $txt);\n\t$txt = str_replace(\"$\", \" \", $txt);\n\t$txt = str_replace(\"\
    #\", \" \", $txt);\n\t$txt = str_replace(\"@\", \" \", $txt);\n\t$txt = str_replace(\"\
    ^\", \" \", $txt);\n\t$txt = str_replace(\"~\", \" \", $txt);\n\t$txt = str_replace(\"\
    `\", \" \", $txt);\n\t$txt = str_replace(\"|\", \" \", $txt);\n\t$txt = str_replace(\"\
    <\", \" \", $txt);\n\t$txt = str_replace(\">\", \" \", $txt);\n\t$\nfunction candidate(...$args)\
    \ {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\"\
    ) !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\"\
    , \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\"\
    ) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\"\
    ) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Parse error:  syntax error, unexpected token \"function\", expecting\
    \ variable or \"{\" or \"$\" in /tmp/tmp349ktond.php on line 43\n"
  exit_code: 255
  status: SyntaxError
- program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // split_words(\"Hello world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"\
    Hello,world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"abcdef\") ==\
    \ 3\nfunction split_words($txt) {\n    $split_txt = preg_split('/[\\s,]+/', $txt);\n\
    \    if (count($split_txt) > 1) {\n        return $split_txt;\n    } else {\n\
    \        $split_txt = preg_split('//', $txt, -1, PREG_SPLIT_NO_EMPTY);\n     \
    \   $count = 0;\n        foreach ($split_txt as $letter) {\n            if (ord($letter)\
    \ % 2 != 0) {\n                $count++;\n            }\n        }\n        return\
    \ $count;\n    }\n}\necho split_words(\"Hello world!\");\necho \"<br>\";\necho\
    \ split_words(\"Hello,world!\");\necho \"<br>\";\necho split_words(\"abcdef\"\
    );\nfunction candidate(...$args) {\n    return split_words(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"Hello world!\") !== array(\"Hello\", \"\
    world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,world!\"\
    ) !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"world,!\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world !\"\
    ) !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: Array<br>Array<br>3
  stderr: "PHP Warning:  Array to string conversion in /tmp/tmpbvta2i89.php on line\
    \ 24\nPHP Warning:  Array to string conversion in /tmp/tmpbvta2i89.php on line\
    \ 26\nPHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpbvta2i89.php:36\n\
    Stack trace:\n#0 /tmp/tmpbvta2i89.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpbvta2i89.php\
    \ on line 36\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // split_words(\"Hello world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"\
    Hello,world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"abcdef\") ==\
    \ 3\nfunction split_words($txt) {\n    $result = [];\n    if (strpos($txt, ' ')\
    \ !== false) {\n        $result = explode(' ', $txt);\n    } elseif (strpos($txt,\
    \ ',') !== false) {\n        $result = explode(',', $txt);\n    } else {\n   \
    \     $count = 0;\n        for ($i = 0; $i < strlen($txt); $i++) {\n         \
    \   if (ord($txt[$i]) % 2 === 1) {\n                $count++;\n            }\n\
    \        }\n        $result = $count;\n    }\n    return $result;\n}\necho '<pre>';\n\
    print_r(split_words(\"Hello world!\"));\necho '</pre>';\necho '<pre>';\nprint_r(split_words(\"\
    Hello,world!\"));\necho '</pre>';\necho '<pre>';\nprint_r(split_words(\"abcdef\"\
    ));\necho '</pre>';\nfunction candidate(...$args) {\n    return split_words(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world!\") !== array(\"\
    Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"\
    world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world\
    \ !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: "<pre>Array\n(\n    [0] => Hello\n    [1] => world!\n)\n</pre><pre>Array\n\
    (\n    [0] => Hello\n    [1] => world!\n)\n</pre><pre>3</pre>"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpcy_pezgu.php:45\n\
    Stack trace:\n#0 /tmp/tmpcy_pezgu.php(50): test()\n#1 {main}\n  thrown in /tmp/tmpcy_pezgu.php\
    \ on line 45\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // split_words(\"Hello world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"\
    Hello,world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"abcdef\") ==\
    \ 3\nfunction split_words($txt) {\n    $txt = trim($txt);\n    if (strpos($txt,\
    \ ' ') !== false) {\n        return explode(' ', $txt);\n    } elseif (strpos($txt,\
    \ ',') !== false) {\n        return explode(',', $txt);\n    } else {\n      \
    \  $count = 0;\n        for ($i = 0; $i < strlen($txt); $i++) {\n            if\
    \ (ord($txt[$i]) % 2 !== 0) {\n                $count++;\n            }\n    \
    \    }\n        return $count;\n    }\n}\n\nfunction candidate(...$args) {\n \
    \   return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\"\
    ) !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\"\
    , \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\"\
    ) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\"\
    ) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp0spy_7ry.php:36\n\
    Stack trace:\n#0 /tmp/tmp0spy_7ry.php(41): test()\n#1 {main}\n  thrown in /tmp/tmp0spy_7ry.php\
    \ on line 36\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // split_words(\"Hello world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"\
    Hello,world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"abcdef\") ==\
    \ 3\nfunction split_words($txt) {\n    if (strpos($txt, ' ') !== false) {\n  \
    \      return explode(' ', $txt);\n    } elseif (strpos($txt, ',') !== false)\
    \ {\n        return explode(',', $txt);\n    } else {\n        $count = 0;\n \
    \       for ($i = 0; $i < strlen($txt); $i++) {\n            if ($i % 2 == 0 &&\
    \ ord($txt[$i]) >= 97 && ord($txt[$i]) <= 122) {\n                $count++;\n\
    \            }\n        }\n        return $count;\n    }\n}\n\nfunction candidate(...$args)\
    \ {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\"\
    ) !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\"\
    , \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\"\
    ) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\"\
    ) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp0o4fkf9l.php:35\n\
    Stack trace:\n#0 /tmp/tmp0o4fkf9l.php(40): test()\n#1 {main}\n  thrown in /tmp/tmp0o4fkf9l.php\
    \ on line 35\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // split_words(\"Hello world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"\
    Hello,world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"abcdef\") ==\
    \ 3\nfunction split_words($txt) {\n    if (strpos($txt, ' ') !== false) {\n  \
    \      return explode(' ', $txt);\n    } elseif (strpos($txt, ',') !== false)\
    \ {\n        return explode(',', $txt);\n    } else {\n        $count = 0;\n \
    \       for ($i = 0; $i < strlen($txt); $i++) {\n            if (ord($txt[$i])\
    \ % 2 !== 0) {\n                $count++;\n            }\n        }\n        return\
    \ $count;\n    }\n}\necho split_words(\"Hello world!\") . '<br>';\necho split_words(\"\
    Hello,world!\") . '<br>';\necho split_words(\"abcdef\") . '<br>';\necho split_words(\"\
    abcdefg\") . '<br>';\necho split_words(\"abcdefgh\") . '<br>';\necho split_words(\"\
    abcdefghi\") . '<br>';\necho split_words(\"abcdefghij\") . '<br>';\necho split_words(\"\
    abcdefghijk\") . '<br>';\necho split_words(\"abcdefghijkl\") . '<br>';\necho split_words(\"\
    abcdefghijklm\") . '<br>';\necho split_words(\"abcdefghijklmn\") . '<br>';\necho\
    \ split_words(\"abcdefghijklmno\") . '<br>';\necho split_words(\"abcdefghijklmnop\"\
    ) . '<br>';\necho split_words(\"abcdefghijklmnopq\") . '<br>';\necho split_words(\"\
    abcdefghijklmnopqr\") . '<br>';\necho split_words(\"abcdefghijklmnopqrs\") . '<br>';\n\
    echo split_words(\"abcdefghijklmnopqrst\") . '<br>';\necho split_words(\"abcdefghijklmnopqrstu\"\
    ) . '<br>';\necho split_words(\"abcdefghijklmnopqrstuv\") . '<br>';\necho split_words(\"\
    abcdefghijklmnopqrstuvw\") . '<\nfunction candidate(...$args) {\n    return split_words(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world!\") !== array(\"\
    Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"\
    world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world\
    \ !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Parse error:  syntax error, unexpected string content \"<\" in /tmp/tmp7c9gy8xz.php\
    \ on line 43\n"
  exit_code: 255
  status: SyntaxError
- program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // split_words(\"Hello world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"\
    Hello,world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"abcdef\") ==\
    \ 3\nfunction split_words($txt) {\n    if (strpos($txt, ' ') !== false) {\n  \
    \      return explode(' ', $txt);\n    } elseif (strpos($txt, ',') !== false)\
    \ {\n        return explode(',', $txt);\n    } else {\n        $count = 0;\n \
    \       for ($i = 0; $i < strlen($txt); $i++) {\n            if (ord($txt[$i])\
    \ % 2 !== 0) {\n                $count++;\n            }\n        }\n        return\
    \ $count;\n    }\n}\n\nfunction candidate(...$args) {\n    return split_words(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world!\") !== array(\"\
    Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"\
    world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world\
    \ !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpdyjagjki.php:35\n\
    Stack trace:\n#0 /tmp/tmpdyjagjki.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpdyjagjki.php\
    \ on line 35\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // split_words(\"Hello world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"\
    Hello,world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"abcdef\") ==\
    \ 3\nfunction split_words($txt) {\n  if (strpos($txt, ' ') !== false) {\n    return\
    \ explode(' ', $txt);\n  } elseif (strpos($txt, ',') !== false) {\n    return\
    \ explode(',', $txt);\n  } else {\n    $count = 0;\n    for ($i = 0; $i < strlen($txt);\
    \ $i++) {\n      if (ord($txt[$i]) % 2 != 0) {\n        $count++;\n      }\n \
    \   }\n    return $count;\n  }\n}\necho split_words(\"Hello world!\");\necho '<br>';\n\
    echo split_words(\"Hello,world!\");\necho '<br>';\necho split_words(\"abcdef\"\
    );\necho '<br>';\necho split_words(\"abcdef,ghijkl\");\necho '<br>';\necho split_words(\"\
    abcdef ghijkl\");\necho '<br>';\necho split_words(\"abcdef ghijkl,mnopqr\");\n\
    echo '<br>';\necho split_words(\"abcdef ghijkl,mnopqr stuvwx\");\necho '<br>';\n\
    echo split_words(\"abcdef ghijkl,mnopqr stuvwx yz\");\necho '<br>';\necho split_words(\"\
    abcdef ghijkl,mnopqr stuvwx yz,12345\");\necho '<br>';\necho split_words(\"abcdef\
    \ ghijkl,mnopqr stuvwx yz,12345 67890\");\necho '<br>';\necho split_words(\"abcdef\
    \ ghijkl,mnopqr stuvwx yz,12345 67890 ABCDE\");\necho '<br>';\necho split_words(\"\
    abcdef ghijkl,mnopqr stuvwx yz,12345 67890 ABCDE FGHIJ\");\necho '<br>';\necho\
    \ split_words(\"abcdef ghijkl,mnopqr stuvwx yz,12345 67890 ABCDE FGHIJ KLMNO\"\
    );\necho '<br>';\necho split_words(\"abcdef ghijkl,mnopqr stuvwx yz,12345 67890\
    \ ABCDE\nfunction candidate(...$args) {\n    return split_words(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(\"Hello world!\") !== array(\"Hello\"\
    , \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"\
    world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world\
    \ !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Parse error:  syntax error, unexpected identifier \"Hello\", expecting\
    \ \")\" in /tmp/tmpucu883uu.php on line 56\n"
  exit_code: 255
  status: SyntaxError
- program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // split_words(\"Hello world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"\
    Hello,world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"abcdef\") ==\
    \ 3\nfunction split_words($txt) {\n    $arr = str_split($txt);\n    $arr1 = [];\n\
    \    $arr2 = [];\n    $arr3 = [];\n    $arr4 = [];\n    $arr5 = [];\n    $arr6\
    \ = [];\n    $arr7 = [];\n    $arr8 = [];\n    $arr9 = [];\n    $arr10 = [];\n\
    \    $arr11 = [];\n    $arr12 = [];\n    $arr13 = [];\n    $arr14 = [];\n    $arr15\
    \ = [];\n    $arr16 = [];\n    $arr17 = [];\n    $arr18 = [];\n    $arr19 = [];\n\
    \    $arr20 = [];\n    $arr21 = [];\n    $arr22 = [];\n    $arr23 = [];\n    $arr24\
    \ = [];\n    $arr25 = [];\n    $arr26 = [];\n    $arr27 = [];\n    $arr28 = [];\n\
    \    $arr29 = [];\n    $arr30 = [];\n    $arr31 = [];\n    $arr32 = [];\n    $arr33\
    \ = [];\n    $arr34 = [];\n    $arr35 = [];\n    $arr36 = [];\n    $arr37 = [];\n\
    \    $arr38 = [];\n    $arr39 = [];\n    $arr40 = [];\n    $arr41 = [];\n    $arr42\
    \ = [];\n    $arr43 = [];\n    $arr44 = [];\n    $arr45 = [];\n    $arr46 = [];\n\
    \    $arr47 = [];\n    $arr48 = [];\n    $arr49 = [];\n    $arr50 = [];\n    $arr51\
    \ = [];\n    $arr52 = [];\n    $arr53 = [];\n    $arr54 = [];\n    $arr55 = [];\n\
    \    $arr56 = [];\n    $arr57 = [];\n    $arr58 = [];\n    $arr59 = [];\n    $arr60\
    \ = [];\n    $arr61 = [];\n    $arr62 = [];\n    $arr63 = [];\n    $arr64 = [];\n\
    \    $arr65 = [];\n    $arr66 = [];\n    $arr67 = [];\n    $arr68 = [];\n    $arr69\
    \ = [];\n    $arr70 = [];\n    $arr71 = [];\n    $arr\nfunction candidate(...$args)\
    \ {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\"\
    ) !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\"\
    , \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\"\
    ) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\"\
    ) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Parse error:  syntax error, unexpected token \"function\" in /tmp/tmpr9r9yj6d.php\
    \ on line 83\n"
  exit_code: 255
  status: SyntaxError
- program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // split_words(\"Hello world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"\
    Hello,world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"abcdef\") ==\
    \ 3\nfunction split_words($txt) {\n    $arr = str_split($txt);\n    $arr2 = [];\n\
    \    $arr3 = [];\n    $arr4 = [];\n    $arr5 = [];\n    $arr6 = [];\n    $arr7\
    \ = [];\n    $arr8 = [];\n    $arr9 = [];\n    $arr10 = [];\n    $arr11 = [];\n\
    \    $arr12 = [];\n    $arr13 = [];\n    $arr14 = [];\n    $arr15 = [];\n    $arr16\
    \ = [];\n    $arr17 = [];\n    $arr18 = [];\n    $arr19 = [];\n    $arr20 = [];\n\
    \    $arr21 = [];\n    $arr22 = [];\n    $arr23 = [];\n    $arr24 = [];\n    $arr25\
    \ = [];\n    $arr26 = [];\n    $arr27 = [];\n    $arr28 = [];\n    $arr29 = [];\n\
    \    $arr30 = [];\n    $arr31 = [];\n    $arr32 = [];\n    $arr33 = [];\n    $arr34\
    \ = [];\n    $arr35 = [];\n    $arr36 = [];\n    $arr37 = [];\n    $arr38 = [];\n\
    \    $arr39 = [];\n    $arr40 = [];\n    $arr41 = [];\n    $arr42 = [];\n    $arr43\
    \ = [];\n    $arr44 = [];\n    $arr45 = [];\n    $arr46 = [];\n    $arr47 = [];\n\
    \    $arr48 = [];\n    $arr49 = [];\n    $arr50 = [];\n    $arr51 = [];\n    $arr52\
    \ = [];\n    $arr53 = [];\n    $arr54 = [];\n    $arr55 = [];\n    $arr56 = [];\n\
    \    $arr57 = [];\n    $arr58 = [];\n    $arr59 = [];\n    $arr60 = [];\n    $arr61\
    \ = [];\n    $arr62 = [];\n    $arr63 = [];\n    $arr64 = [];\n    $arr65 = [];\n\
    \    $arr66 = [];\n    $arr67 = [];\n    $arr68 = [];\n    $arr69 = [];\n    $arr70\
    \ = [];\n    $arr71 = [];\n    $arr72 = [];\n    $arr\nfunction candidate(...$args)\
    \ {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\"\
    ) !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\"\
    , \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\"\
    ) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\"\
    ) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Parse error:  syntax error, unexpected token \"function\" in /tmp/tmpk6e6dgem.php\
    \ on line 83\n"
  exit_code: 255
  status: SyntaxError
- program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // split_words(\"Hello world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"\
    Hello,world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"abcdef\") ==\
    \ 3\nfunction split_words($txt) {\n    if (strpos($txt, ' ') !== false) {\n  \
    \      return explode(' ', $txt);\n    } elseif (strpos($txt, ',') !== false)\
    \ {\n        return explode(',', $txt);\n    } else {\n        $count = 0;\n \
    \       for ($i = 0; $i < strlen($txt); $i++) {\n            if (ord($txt[$i])\
    \ % 2 !== 0) {\n                $count++;\n            }\n        }\n        return\
    \ $count;\n    }\n}\necho split_words(\"Hello world!\");\necho '<br>';\necho split_words(\"\
    Hello,world!\");\necho '<br>';\necho split_words(\"abcdef\");\necho '<br>';\n\
    echo split_words(\"abcdef,ghijkl\");\necho '<br>';\necho split_words(\"abcdef,ghijkl,mnopqr\"\
    );\necho '<br>';\necho split_words(\"abcdef,ghijkl,mnopqr,stuvwx\");\necho '<br>';\n\
    echo split_words(\"abcdef,ghijkl,mnopqr,stuvwx,yz\");\necho '<br>';\necho split_words(\"\
    abcdef,ghijkl,mnopqr,stuvwx,yz,\");\necho '<br>';\necho split_words(\"abcdef,ghijkl,mnopqr,stuvwx,yz,,\"\
    );\necho '<br>';\necho split_words(\"abcdef,ghijkl,mnopqr,stuvwx,yz,,,\");\necho\
    \ '<br>';\necho split_words(\"abcdef,ghijkl,mnopqr,stuvwx,yz,,,,\");\necho '<br>';\n\
    echo split_words(\"abcdef,ghijkl,mnopqr,stuvwx,yz,,,,,\");\necho '<br>';\necho\
    \ split_words(\"abcdef,ghijkl,mnopqr,stuvwx,yz,,,,,,\");\necho '<br>';\necho split_words(\"\
    abcdef,ghijkl,mnopqr,stuvwx,yz,,,,,,,\");\necho '\nfunction candidate(...$args)\
    \ {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\"\
    ) !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\"\
    , \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\"\
    ) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\"\
    ) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Parse error:  syntax error, unexpected string content \"\" in /tmp/tmp268mpw0w.php\
    \ on line 51\n"
  exit_code: 255
  status: SyntaxError
- program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // split_words(\"Hello world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"\
    Hello,world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"abcdef\") ==\
    \ 3\nfunction split_words($txt) {\n    $arr = str_split($txt);\n    $arr2 = [];\n\
    \    $arr3 = [];\n    $arr4 = [];\n    $arr5 = [];\n    $arr6 = [];\n    $arr7\
    \ = [];\n    foreach ($arr as $key => $value) {\n        if ($value == \" \")\
    \ {\n            $arr2[] = $key;\n        }\n        if ($value == \",\") {\n\
    \            $arr3[] = $key;\n        }\n    }\n    if (count($arr2) == 0 && count($arr3)\
    \ == 0) {\n        foreach ($arr as $key => $value) {\n            $arr4[] = ord($value);\n\
    \        }\n        foreach ($arr4 as $key => $value) {\n            if ($value\
    \ % 2 != 0) {\n                $arr5[] = $value;\n            }\n        }\n \
    \       return count($arr5);\n    }\n    if (count($arr2) == 0 && count($arr3)\
    \ != 0) {\n        foreach ($arr3 as $key => $value) {\n            $arr6[] =\
    \ substr($txt, $value, 1);\n        }\n        foreach ($arr6 as $key => $value)\
    \ {\n            $arr7[] = str_replace($value, \" \", $txt);\n        }\n    \
    \    return explode(\" \", $arr7[0]);\n    }\n    if (count($arr2) != 0 && count($arr3)\
    \ == 0) {\n        return explode(\" \", $txt);\n    }\n}\nprint_r(split_words(\"\
    Hello world!\"));\necho \"<br>\";\nprint_r(split_words(\"Hello,world!\"));\necho\
    \ \"<br>\";\nprint_r(split_words(\"abcdef\"));\necho \"<br>\";\nprint_r(split_words(\"\
    abcdefghijklmnopqrstuvwxyz\"));\necho \"<br>\";\nprint_r(split_words(\"abcdefghijklmnopqrstuvwxyz,abcdefghijklmnopqrstuvwxyz\"\
    ));\necho \"<br>\";\nprint_r(split_words(\"abcdefghijklmnopqr\nfunction candidate(...$args)\
    \ {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\"\
    ) !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\"\
    , \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\"\
    ) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\"\
    ) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Parse error:  syntax error, unexpected identifier \"Hello\", expecting\
    \ \")\" in /tmp/tmpjnbk6k91.php on line 65\n"
  exit_code: 255
  status: SyntaxError
- program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // split_words(\"Hello world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"\
    Hello,world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"abcdef\") ==\
    \ 3\nfunction split_words($txt) {\n    $txt = str_replace(\"!\", \"\", $txt);\n\
    \    $txt = str_replace(\"?\", \"\", $txt);\n    $txt = str_replace(\".\", \"\"\
    , $txt);\n    $txt = str_replace(\",\", \"\", $txt);\n    $txt = str_replace(\"\
    ;\", \"\", $txt);\n    $txt = str_replace(\":\", \"\", $txt);\n    $txt = str_replace(\"\
    -\", \"\", $txt);\n    $txt = str_replace(\"_\", \"\", $txt);\n    $txt = str_replace(\"\
    '\", \"\", $txt);\n    $txt = str_replace(\"\\\"\", \"\", $txt);\n    $txt = str_replace(\"\
    (\", \"\", $txt);\n    $txt = str_replace(\")\", \"\", $txt);\n    $txt = str_replace(\"\
    [\", \"\", $txt);\n    $txt = str_replace(\"]\", \"\", $txt);\n    $txt = str_replace(\"\
    {\", \"\", $txt);\n    $txt = str_replace(\"}\", \"\", $txt);\n    $txt = str_replace(\"\
    /\", \"\", $txt);\n    $txt = str_replace(\"\\\\\", \"\", $txt);\n    $txt = str_replace(\"\
    |\", \"\", $txt);\n    $txt = str_replace(\"+\", \"\", $txt);\n    $txt = str_replace(\"\
    =\", \"\", $txt);\n    $txt = str_replace(\"*\", \"\", $txt);\n    $txt = str_replace(\"\
    &\", \"\", $txt);\n    $txt = str_replace(\"^\", \"\", $txt);\n    $txt = str_replace(\"\
    %\", \"\", $txt);\n    $txt = str_replace(\"$\", \"\", $txt);\n    $txt = str_replace(\"\
    #\", \"\", $txt);\n    $txt = str_replace(\"@\", \"\", $txt);\n    $txt = str_replace(\"\
    `\", \"\", $txt);\n    $txt = str_replace(\"~\", \"\", $txt);\n    $txt = str_replace(\"\
    <\", \"\", $txt);\n    $txt = str_replace(\">\", \"\", $txt);\n    $\nfunction\
    \ candidate(...$args) {\n    return split_words(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"Hello world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,world!\"\
    ) !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"world,!\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world !\"\
    ) !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Parse error:  syntax error, unexpected token \"function\", expecting\
    \ variable or \"{\" or \"$\" in /tmp/tmppy40a7aw.php on line 43\n"
  exit_code: 255
  status: SyntaxError
- program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // split_words(\"Hello world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"\
    Hello,world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"abcdef\") ==\
    \ 3\nfunction split_words($txt) {\n  if (strpos($txt, ' ') !== false) {\n    return\
    \ explode(' ', $txt);\n  } elseif (strpos($txt, ',') !== false) {\n    return\
    \ explode(',', $txt);\n  } else {\n    $count = 0;\n    for ($i = 0; $i < strlen($txt);\
    \ $i++) {\n      if (ord($txt[$i]) % 2 === 1) {\n        $count++;\n      }\n\
    \    }\n    return $count;\n  }\n}\necho split_words('Hello world!');\necho split_words('Hello,world!');\n\
    echo split_words('abcdef');\nfunction candidate(...$args) {\n    return split_words(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world!\") !== array(\"\
    Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"\
    world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world\
    \ !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: ArrayArray3
  stderr: "PHP Warning:  Array to string conversion in /tmp/tmpaar4x6aj.php on line\
    \ 24\nPHP Warning:  Array to string conversion in /tmp/tmpaar4x6aj.php on line\
    \ 25\nPHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpaar4x6aj.php:37\n\
    Stack trace:\n#0 /tmp/tmpaar4x6aj.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpaar4x6aj.php\
    \ on line 37\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // split_words(\"Hello world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"\
    Hello,world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"abcdef\") ==\
    \ 3\nfunction split_words($txt) {\n  if (strpos($txt, ' ') !== false) {\n    return\
    \ explode(' ', $txt);\n  } elseif (strpos($txt, ',') !== false) {\n    return\
    \ explode(',', $txt);\n  } else {\n    $count = 0;\n    for ($i = 0; $i < strlen($txt);\
    \ $i++) {\n      if (ord($txt[$i]) % 2 !== 0) {\n        $count++;\n      }\n\
    \    }\n    return $count;\n  }\n}\necho split_words('Hello world!');\necho '<br>';\n\
    echo split_words('Hello,world!');\necho '<br>';\necho split_words('abcdef');\n\
    echo '<br>';\necho split_words('abcdef,ghijkl');\necho '<br>';\necho split_words('abcdef\
    \ ghijkl');\necho '<br>';\necho split_words('abcdef ghijkl,mnopqr');\necho '<br>';\n\
    echo split_words('abcdef ghijkl,mnopqr stuvwx');\necho '<br>';\necho split_words('abcdef\
    \ ghijkl,mnopqr stuvwx,yz');\necho '<br>';\necho split_words('abcdef ghijkl,mnopqr\
    \ stuvwx,yz abcdef');\necho '<br>';\necho split_words('abcdef ghijkl,mnopqr stuvwx,yz\
    \ abcdef,ghijkl');\necho '<br>';\necho split_words('abcdef ghijkl,mnopqr stuvwx,yz\
    \ abcdef,ghijkl mnopqr');\necho '<br>';\necho split_words('abcdef ghijkl,mnopqr\
    \ stuvwx,yz abcdef,ghijkl mnopqr,stuvwx');\necho '<br>';\necho split_words('abcdef\
    \ ghijkl,mnopqr stuvwx,yz abcdef,ghijkl mnopqr,stuvwx yz');\necho '<br>';\necho\
    \ split_words('abcdef ghijkl,mnop\nfunction candidate(...$args) {\n    return\
    \ split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hello\
    \ world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\")) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\"\
    ) !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\"\
    , \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\"\
    ) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\"\
    ) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Parse error:  syntax error, unexpected string content \"abcdef ghijkl,mnop\"\
    \ in /tmp/tmpsz06yuaz.php on line 50\n"
  exit_code: 255
  status: SyntaxError
- program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // split_words(\"Hello world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"\
    Hello,world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"abcdef\") ==\
    \ 3\nfunction split_words($txt) {\n    $txt = str_replace(',', ' ', $txt);\n \
    \   $txt = str_replace('!', ' ', $txt);\n    $txt = str_replace('?', ' ', $txt);\n\
    \    $txt = str_replace('.', ' ', $txt);\n    $txt = str_replace('-', ' ', $txt);\n\
    \    $txt = str_replace('_', ' ', $txt);\n    $txt = str_replace('(', ' ', $txt);\n\
    \    $txt = str_replace(')', ' ', $txt);\n    $txt = str_replace('[', ' ', $txt);\n\
    \    $txt = str_replace(']', ' ', $txt);\n    $txt = str_replace('{', ' ', $txt);\n\
    \    $txt = str_replace('}', ' ', $txt);\n    $txt = str_replace('\"', ' ', $txt);\n\
    \    $txt = str_replace(\"'\", ' ', $txt);\n    $txt = str_replace('/', ' ', $txt);\n\
    \    $txt = str_replace('\\\\', ' ', $txt);\n    $txt = str_replace('|', ' ',\
    \ $txt);\n    $txt = str_replace('+', ' ', $txt);\n    $txt = str_replace('=',\
    \ ' ', $txt);\n    $txt = str_replace('*', ' ', $txt);\n    $txt = str_replace('&',\
    \ ' ', $txt);\n    $txt = str_replace('^', ' ', $txt);\n    $txt = str_replace('%',\
    \ ' ', $txt);\n    $txt = str_replace('$', ' ', $txt);\n    $txt = str_replace('#',\
    \ ' ', $txt);\n    $txt = str_replace('@', ' ', $txt);\n    $txt = str_replace('!',\
    \ ' ', $txt);\n    $txt = str_replace('~', ' ', $txt);\n    $txt = str_replace('`',\
    \ ' ', $txt);\n    $txt = str_replace('<', ' ', $txt);\n    $txt = str_replace('>',\
    \ ' ', $txt);\n    $txt = str_replace(':', ' ', $txt);\nfunction candidate(...$args)\
    \ {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\"\
    ) !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\"\
    , \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\"\
    ) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\"\
    ) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Parse error:  Unclosed '{' on line 9 in /tmp/tmpxrzldjzg.php on line\
    \ 57\n"
  exit_code: 255
  status: SyntaxError
- program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // split_words(\"Hello world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"\
    Hello,world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"abcdef\") ==\
    \ 3\nfunction split_words($txt) {\n    $txt = str_replace(',', ' ', $txt);\n \
    \   $txt = str_replace('!', ' ', $txt);\n    $txt = str_replace('?', ' ', $txt);\n\
    \    $txt = str_replace('.', ' ', $txt);\n    $txt = str_replace('-', ' ', $txt);\n\
    \    $txt = str_replace('_', ' ', $txt);\n    $txt = str_replace('(', ' ', $txt);\n\
    \    $txt = str_replace(')', ' ', $txt);\n    $txt = str_replace('[', ' ', $txt);\n\
    \    $txt = str_replace(']', ' ', $txt);\n    $txt = str_replace('{', ' ', $txt);\n\
    \    $txt = str_replace('}', ' ', $txt);\n    $txt = str_replace('\"', ' ', $txt);\n\
    \    $txt = str_replace(\"'\", ' ', $txt);\n    $txt = str_replace('/', ' ', $txt);\n\
    \    $txt = str_replace('\\\\', ' ', $txt);\n    $txt = str_replace('|', ' ',\
    \ $txt);\n    $txt = str_replace('+', ' ', $txt);\n    $txt = str_replace('=',\
    \ ' ', $txt);\n    $txt = str_replace('*', ' ', $txt);\n    $txt = str_replace('&',\
    \ ' ', $txt);\n    $txt = str_replace('^', ' ', $txt);\n    $txt = str_replace('%',\
    \ ' ', $txt);\n    $txt = str_replace('$', ' ', $txt);\n    $txt = str_replace('#',\
    \ ' ', $txt);\n    $txt = str_replace('@', ' ', $txt);\n    $txt = str_replace('!',\
    \ ' ', $txt);\n    $txt = str_replace('~', ' ', $txt);\n    $txt = str_replace('`',\
    \ ' ', $txt);\n    $txt = str_replace(';', ' ', $txt);\n    $txt = str_replace(':',\
    \ ' ', $txt);\n    $txt = str_replace('<', ' ', $txt);\nfunction candidate(...$args)\
    \ {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\"\
    ) !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\"\
    , \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\"\
    ) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\"\
    ) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Parse error:  Unclosed '{' on line 9 in /tmp/tmpi96sdfvt.php on line\
    \ 57\n"
  exit_code: 255
  status: SyntaxError
- program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // split_words(\"Hello world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"\
    Hello,world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"abcdef\") ==\
    \ 3\nfunction split_words($txt) {\n    if (strpos($txt, ' ') !== false) {\n  \
    \      return explode(' ', $txt);\n    } elseif (strpos($txt, ',') !== false)\
    \ {\n        return explode(',', $txt);\n    } else {\n        $count = 0;\n \
    \       for ($i = 0; $i < strlen($txt); $i++) {\n            if ($i % 2 == 0 &&\
    \ ctype_lower($txt[$i])) {\n                $count++;\n            }\n       \
    \ }\n        return $count;\n    }\n}\necho split_words(\"Hello world!\");\necho\
    \ \"<br>\";\necho split_words(\"Hello,world!\");\necho \"<br>\";\necho split_words(\"\
    abcdef\");\necho \"<br>\";\necho split_words(\"abcdefghijklmnopqrstuvwxyz\");\n\
    echo \"<br>\";\necho split_words(\"abcdefghijklmnopqrstuvwxyz,abcdefghijklmnopqrstuvwxyz\"\
    );\necho \"<br>\";\necho split_words(\"abcdefghijklmnopqrstuvwxyz abcdefghijklmnopqrstuvwxyz\"\
    );\necho \"<br>\";\necho split_words(\"abcdefghijklmnopqrstuvwxyz,abcdefghijklmnopqrstuvwxyz\
    \ abcdefghijklmnopqrstuvwxyz\");\necho \"<br>\";\necho split_words(\"abcdefghijklmnopqrstuvwxyz\
    \ abcdefghijklmnopqrstuvwxyz,abcdefghijklmnopqrstuvwxyz\");\necho \"<br>\";\n\
    echo split_words(\"abcdefghijklmnopqrstuvwxyz,abcdefghijklmnopqrstuvwxyz abcdefghijklmnopqrstuvwxyz,abcdefghijklmnopqrstuvwxyz\"\
    );\necho \"<br>\";\necho split_words(\"abcdefghijklmnopqrstuvwxyz abcdefghijklmnopqrstuvwxyz,\n\
    function candidate(...$args) {\n    return split_words(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"Hello world!\") !== array(\"Hello\", \"\
    world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,world!\"\
    ) !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"world,!\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world !\"\
    ) !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Parse error:  syntax error, unexpected identifier \"Hello\", expecting\
    \ \")\" in /tmp/tmp3qbypsmd.php on line 48\n"
  exit_code: 255
  status: SyntaxError
- program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // split_words(\"Hello world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"\
    Hello,world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"abcdef\") ==\
    \ 3\nfunction split_words($txt) {\n\tif (strpos($txt, ' ') !== false) {\n\t\t\
    return explode(' ', $txt);\n\t} elseif (strpos($txt, ',') !== false) {\n\t\treturn\
    \ explode(',', $txt);\n\t} else {\n\t\t$count = 0;\n\t\tfor ($i = 0; $i < strlen($txt);\
    \ $i++) {\n\t\t\tif (ord($txt[$i]) % 2 != 0) {\n\t\t\t\t$count++;\n\t\t\t}\n\t\
    \t}\n\t\treturn $count;\n\t}\n}\necho split_words(\"Hello world!\");\necho '<br>';\n\
    echo split_words(\"Hello,world!\");\necho '<br>';\necho split_words(\"abcdef\"\
    );\nfunction candidate(...$args) {\n    return split_words(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"Hello world!\") !== array(\"Hello\", \"\
    world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,world!\"\
    ) !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"world,!\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world !\"\
    ) !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: Array<br>Array<br>3
  stderr: "PHP Warning:  Array to string conversion in /tmp/tmp0jw26x6h.php on line\
    \ 24\nPHP Warning:  Array to string conversion in /tmp/tmp0jw26x6h.php on line\
    \ 26\nPHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp0jw26x6h.php:39\n\
    Stack trace:\n#0 /tmp/tmp0jw26x6h.php(44): test()\n#1 {main}\n  thrown in /tmp/tmp0jw26x6h.php\
    \ on line 39\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // split_words(\"Hello world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"\
    Hello,world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"abcdef\") ==\
    \ 3\nfunction split_words($txt) {\n    if (strpos($txt, ' ') !== false) {\n  \
    \      return explode(' ', $txt);\n    } elseif (strpos($txt, ',') !== false)\
    \ {\n        return explode(',', $txt);\n    } else {\n        $count = 0;\n \
    \       for ($i = 0; $i < strlen($txt); $i++) {\n            if (ord($txt[$i])\
    \ % 2 !== 0) {\n                $count++;\n            }\n        }\n        return\
    \ $count;\n    }\n}\necho split_words(\"Hello world!\") . '<br>';\necho split_words(\"\
    Hello,world!\") . '<br>';\necho split_words(\"abcdef\") . '<br>';\n\nfunction\
    \ candidate(...$args) {\n    return split_words(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"Hello world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,world!\"\
    ) !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"world,!\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world !\"\
    ) !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: Array<br>Array<br>3<br>
  stderr: "PHP Warning:  Array to string conversion in /tmp/tmpz1ztb5da.php on line\
    \ 24\nPHP Warning:  Array to string conversion in /tmp/tmpz1ztb5da.php on line\
    \ 25\nPHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpz1ztb5da.php:38\n\
    Stack trace:\n#0 /tmp/tmpz1ztb5da.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpz1ztb5da.php\
    \ on line 38\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // split_words(\"Hello world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"\
    Hello,world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"abcdef\") ==\
    \ 3\nfunction split_words($txt) {\n    if (strpos($txt, ' ') !== false) {\n  \
    \      return explode(' ', $txt);\n    } elseif (strpos($txt, ',') !== false)\
    \ {\n        return explode(',', $txt);\n    } else {\n        $count = 0;\n \
    \       for ($i = 0; $i < strlen($txt); $i++) {\n            if ($i % 2 === 0\
    \ && strtolower($txt[$i]) === $txt[$i]) {\n                $count++;\n       \
    \     }\n        }\n        return $count;\n    }\n}\necho split_words(\"Hello\
    \ world!\") . '<br>';\necho split_words(\"Hello,world!\") . '<br>';\necho split_words(\"\
    abcdef\") . '<br>';\necho split_words(\"abcdef,ghijkl\") . '<br>';\necho split_words(\"\
    abcdef,ghijkl,mnopqr\") . '<br>';\necho split_words(\"abcdef,ghijkl,mnopqr,stuvwx\"\
    ) . '<br>';\necho split_words(\"abcdef,ghijkl,mnopqr,stuvwx,yz\") . '<br>';\n\
    echo split_words(\"abcdef,ghijkl,mnopqr,stuvwx,yz,ABCDEF\") . '<br>';\necho split_words(\"\
    abcdef,ghijkl,mnopqr,stuvwx,yz,ABCDEF,GHIJKL\") . '<br>';\necho split_words(\"\
    abcdef,ghijkl,mnopqr,stuvwx,yz,ABCDEF,GHIJKL,MNOPQR\") . '<br>';\necho split_words(\"\
    abcdef,ghijkl,mnopqr,stuvwx,yz,ABCDEF,GHIJKL,MNOPQR,STUVWX\") . '<br>';\necho\
    \ split_words(\"abcdef,ghijkl,mnopqr,stuvwx,yz,ABCDEF,GHIJKL,MNOPQR,STUVWX,YZ\"\
    ) . '<br>';\necho split_words(\"abcdef,ghijkl,\nfunction candidate(...$args) {\n\
    \    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\"\
    ) !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\"\
    , \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\"\
    ) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\"\
    ) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Parse error:  syntax error, unexpected identifier \"Hello\", expecting\
    \ \")\" in /tmp/tmplikz4qd2.php on line 42\n"
  exit_code: 255
  status: SyntaxError
- program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // split_words(\"Hello world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"\
    Hello,world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"abcdef\") ==\
    \ 3\nfunction split_words($txt) {\n  if (strpos($txt, ' ') !== false) {\n    return\
    \ explode(' ', $txt);\n  } elseif (strpos($txt, ',') !== false) {\n    return\
    \ explode(',', $txt);\n  } else {\n    $count = 0;\n    for ($i = 0; $i < strlen($txt);\
    \ $i++) {\n      if (ord($txt[$i]) % 2 !== 0) {\n        $count++;\n      }\n\
    \    }\n    return $count;\n  }\n}\necho split_words('Hello world!');\necho '<br>';\n\
    echo split_words('Hello,world!');\necho '<br>';\necho split_words('abcdef');\n\
    echo '<br>';\necho split_words('abcdef,ghijkl');\necho '<br>';\necho split_words('abcdef,ghijkl\
    \ mnopqrst');\necho '<br>';\necho split_words('abcdef,ghijkl mnopqrst uvwxyz');\n\
    echo '<br>';\necho split_words('abcdef,ghijkl mnopqrst uvwxyz,ABCDEF');\necho\
    \ '<br>';\necho split_words('abcdef,ghijkl mnopqrst uvwxyz,ABCDEF GHIJKL');\n\
    echo '<br>';\necho split_words('abcdef,ghijkl mnopqrst uvwxyz,ABCDEF GHIJKL MNOPQRST');\n\
    echo '<br>';\necho split_words('abcdef,ghijkl mnopqrst uvwxyz,ABCDEF GHIJKL MNOPQRST\
    \ UVWXYZ');\necho '<br>';\necho split_words('abcdef,ghijkl mnopqrst uvwxyz,ABCDEF\
    \ GHIJKL MNOPQRST UVWXYZ,abcdef');\necho '<br>';\necho split_words('abcdef,ghijkl\
    \ mnopqrst uvwxyz,ABCDEF GHIJKL MNOPQRST UVWXYZ,abcdef ghijkl\nfunction candidate(...$args)\
    \ {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\"\
    ) !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\"\
    , \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\"\
    ) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\"\
    ) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Parse error:  syntax error, unexpected string content \"abcdef,ghijkl\
    \ mnopqrst uvwxyz,...\" in /tmp/tmpwqtbajsp.php on line 46\n"
  exit_code: 255
  status: SyntaxError
- program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // split_words(\"Hello world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"\
    Hello,world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"abcdef\") ==\
    \ 3\nfunction split_words($txt) {\n    if (strpos($txt, ' ') !== false) {\n  \
    \      return explode(' ', $txt);\n    } elseif (strpos($txt, ',') !== false)\
    \ {\n        return explode(',', $txt);\n    } else {\n        $count = 0;\n \
    \       for ($i = 0; $i < strlen($txt); $i++) {\n            if (ord($txt[$i])\
    \ % 2 !== 0) {\n                $count++;\n            }\n        }\n        return\
    \ $count;\n    }\n}\necho split_words(\"Hello world!\");\necho '<br>';\necho split_words(\"\
    Hello,world!\");\necho '<br>';\necho split_words(\"abcdef\");\necho '<br>';\n\
    echo split_words(\"abcdef,ghijkl\");\necho '<br>';\necho split_words(\"abcdef\
    \ ghijkl\");\necho '<br>';\necho split_words(\"abcdef,ghijkl,mnopqr\");\necho\
    \ '<br>';\necho split_words(\"abcdef ghijkl mnopqr\");\necho '<br>';\necho split_words(\"\
    abcdef,ghijkl mnopqr\");\necho '<br>';\necho split_words(\"abcdef ghijkl,mnopqr\"\
    );\necho '<br>';\necho split_words(\"abcdef,ghijkl,mnopqr,stuvwx\");\necho '<br>';\n\
    echo split_words(\"abcdef ghijkl mnopqr stuvwx\");\necho '<br>';\necho split_words(\"\
    abcdef,ghijkl mnopqr stuvwx\");\necho '<br>';\necho split_words(\"abcdef ghijkl,mnopqr\
    \ stuvwx\");\necho '<br>';\necho split_words(\"abcdef,ghijkl,mnopqr stuvwx\");\n\
    echo '<br>';\necho split_words(\"abcdef ghijkl,mnopqr,stuvwx\");\necho '<br>';\n\
    echo split_words(\"abcdef,ghijkl mnopqr,stuvwx\");\necho '<br>';\n\nfunction candidate(...$args)\
    \ {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\"\
    ) !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\"\
    , \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\"\
    ) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\"\
    ) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: Array<br>Array<br>3<br>Array<br>Array<br>Array<br>Array<br>Array<br>Array<br>Array<br>Array<br>Array<br>Array<br>Array<br>Array<br>Array<br>
  stderr: "PHP Warning:  Array to string conversion in /tmp/tmp4l_67sn7.php on line\
    \ 24\nPHP Warning:  Array to string conversion in /tmp/tmp4l_67sn7.php on line\
    \ 26\nPHP Warning:  Array to string conversion in /tmp/tmp4l_67sn7.php on line\
    \ 30\nPHP Warning:  Array to string conversion in /tmp/tmp4l_67sn7.php on line\
    \ 32\nPHP Warning:  Array to string conversion in /tmp/tmp4l_67sn7.php on line\
    \ 34\nPHP Warning:  Array to string conversion in /tmp/tmp4l_67sn7.php on line\
    \ 36\nPHP Warning:  Array to string conversion in /tmp/tmp4l_67sn7.php on line\
    \ 38\nPHP Warning:  Array to string conversion in /tmp/tmp4l_67sn7.php on line\
    \ 40\nPHP Warning:  Array to string conversion in /tmp/tmp4l_67sn7.php on line\
    \ 42\nPHP Warning:  Array to string conversion in /tmp/tmp4l_67sn7.php on line\
    \ 44\nPHP Warning:  Array to string conversion in /tmp/tmp4l_67sn7.php on line\
    \ 46\nPHP Warning:  Array to string conversion in /tmp/tmp4l_67sn7.php on line\
    \ 48\nPHP Warning:  Array to string conversion in /tmp/tmp4l_67sn7.php on line\
    \ 50\nPHP Warning:  Array to string conversion in /tmp/tmp4l_67sn7.php on line\
    \ 52\nPHP Warning:  Array to string conversion in /tmp/tmp4l_67sn7.php on line\
    \ 54\nPHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp4l_67sn7.php:67\n\
    Stack trace:\n#0 /tmp/tmp4l_67sn7.php(72): test()\n#1 {main}\n  thrown in /tmp/tmp4l_67sn7.php\
    \ on line 67\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // split_words(\"Hello world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"\
    Hello,world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"abcdef\") ==\
    \ 3\nfunction split_words($txt) {\n    if (strpos($txt, ' ') !== false) {\n  \
    \      return explode(' ', $txt);\n    } elseif (strpos($txt, ',') !== false)\
    \ {\n        return explode(',', $txt);\n    } else {\n        $count = 0;\n \
    \       for ($i = 0; $i < strlen($txt); $i++) {\n            if (ord($txt[$i])\
    \ % 2 !== 0) {\n                $count++;\n            }\n        }\n        return\
    \ $count;\n    }\n}\necho split_words(\"Hello world!\");\necho '<br>';\necho split_words(\"\
    Hello,world!\");\necho '<br>';\necho split_words(\"abcdef\");\nfunction candidate(...$args)\
    \ {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\"\
    ) !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\"\
    , \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\"\
    ) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\"\
    ) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: Array<br>Array<br>3
  stderr: "PHP Warning:  Array to string conversion in /tmp/tmpjufcps7j.php on line\
    \ 24\nPHP Warning:  Array to string conversion in /tmp/tmpjufcps7j.php on line\
    \ 26\nPHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpjufcps7j.php:39\n\
    Stack trace:\n#0 /tmp/tmpjufcps7j.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpjufcps7j.php\
    \ on line 39\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // split_words(\"Hello world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"\
    Hello,world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"abcdef\") ==\
    \ 3\nfunction split_words($txt) {\n    if (strpos($txt, ' ') !== false) {\n  \
    \      return explode(' ', $txt);\n    } elseif (strpos($txt, ',') !== false)\
    \ {\n        return explode(',', $txt);\n    } else {\n        $count = 0;\n \
    \       for ($i = 0; $i < strlen($txt); $i++) {\n            if ($i % 2 == 0 &&\
    \ ord($txt[$i]) >= 97 && ord($txt[$i]) <= 122) {\n                $count++;\n\
    \            }\n        }\n        return $count;\n    }\n}\necho split_words(\"\
    Hello world!\");\necho '<br>';\necho split_words(\"Hello,world!\");\necho '<br>';\n\
    echo split_words(\"abcdef\");\necho '<br>';\necho split_words(\"abcdef,ghijkl\"\
    );\necho '<br>';\necho split_words(\"abcdef ghijkl\");\necho '<br>';\necho split_words(\"\
    abcdef,ghijkl mnopqr\");\necho '<br>';\necho split_words(\"abcdef,ghijkl mnopqr,stuvwx\"\
    );\necho '<br>';\necho split_words(\"abcdef,ghijkl mnopqr,stuvwx yz\");\necho\
    \ '<br>';\necho split_words(\"abcdef,ghijkl mnopqr,stuvwx yz,ABCDEF\");\necho\
    \ '<br>';\necho split_words(\"abcdef,ghijkl mnopqr,stuvwx yz,ABCDEF GHIJKL\");\n\
    echo '<br>';\necho split_words(\"abcdef,ghijkl mnopqr,stuvwx yz,ABCDEF GHIJKL\
    \ MNO\");\necho '<br>';\necho split_words(\"abcdef,ghijkl mnopqr,stuvwx yz,ABCDEF\
    \ GHIJKL MNO PQR\");\necho '<br>';\necho split_words(\"abcdef,ghijkl mnopqr,stuvwx\
    \ yz,ABCDEF GHIJKL MNO PQR STU\");\necho '<\nfunction candidate(...$args) {\n\
    \    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\"\
    ) !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\"\
    , \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\"\
    ) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\"\
    ) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Parse error:  syntax error, unexpected string content \"<\" in /tmp/tmp79ob_5zv.php\
    \ on line 49\n"
  exit_code: 255
  status: SyntaxError
- program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // split_words(\"Hello world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"\
    Hello,world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"abcdef\") ==\
    \ 3\nfunction split_words($txt) {\n    if (strpos($txt, ' ') !== false) {\n  \
    \      return explode(' ', $txt);\n    } elseif (strpos($txt, ',') !== false)\
    \ {\n        return explode(',', $txt);\n    } else {\n        $count = 0;\n \
    \       for ($i = 0; $i < strlen($txt); $i++) {\n            if (ord($txt[$i])\
    \ % 2 !== 0) {\n                $count++;\n            }\n        }\n        return\
    \ $count;\n    }\n}\necho split_words(\"Hello world!\") . '<br>';\necho split_words(\"\
    Hello,world!\") . '<br>';\necho split_words(\"abcdef\") . '<br>';\necho split_words(\"\
    abcdef,ghijkl\") . '<br>';\necho split_words(\"abcdef ghijkl\") . '<br>';\necho\
    \ split_words(\"abcdef ghijkl,mnopqr\") . '<br>';\necho split_words(\"abcdef ghijkl,mnopqr\
    \ stuvwx\") . '<br>';\necho split_words(\"abcdef ghijkl,mnopqr stuvwx yz\") .\
    \ '<br>';\necho split_words(\"abcdef ghijkl,mnopqr stuvwx yz,ABCDEF\") . '<br>';\n\
    echo split_words(\"abcdef ghijkl,mnopqr stuvwx yz,ABCDEF GHIJKL\") . '<br>';\n\
    echo split_words(\"abcdef ghijkl,mnopqr stuvwx yz,ABCDEF GHIJKL,MNOPQR\") . '<br>';\n\
    echo split_words(\"abcdef ghijkl,mnopqr stuvwx yz,ABCDEF GHIJKL,MNOPQR STUVWX\"\
    ) . '<br>';\necho split_words(\"abcdef ghijkl,mnopqr stuvwx yz,ABCDEF GHIJKL,MNOPQR\
    \ STUVWX YZ\") . '<br>';\necho split_words(\"abcdef ghijkl,mnopqr stuvwx yz,ABCDEF\
    \ GHIJK\nfunction candidate(...$args) {\n    return split_words(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(\"Hello world!\") !== array(\"Hello\"\
    , \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"\
    world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world\
    \ !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Parse error:  syntax error, unexpected identifier \"Hello\", expecting\
    \ \")\" in /tmp/tmp2n1bewv4.php on line 43\n"
  exit_code: 255
  status: SyntaxError
- program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // split_words(\"Hello world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"\
    Hello,world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"abcdef\") ==\
    \ 3\nfunction split_words($txt) {\n    $words = preg_split('/[\\s,]+/', $txt);\n\
    \    if (count($words) == 1) {\n        $letters = str_split($txt);\n        $odds\
    \ = array_filter($letters, function($letter) {\n            return ord($letter)\
    \ % 2 == 1;\n        });\n        return count($odds);\n    }\n    return $words;\n\
    }\necho \"<pre>\";\nprint_r(split_words(\"Hello world!\"));\necho \"</pre>\";\n\
    echo \"<pre>\";\nprint_r(split_words(\"Hello,world!\"));\necho \"</pre>\";\necho\
    \ \"<pre>\";\nprint_r(split_words(\"abcdef\"));\necho \"</pre>\";\nfunction candidate(...$args)\
    \ {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\"\
    ) !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\"\
    , \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\"\
    ) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\"\
    ) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "<pre>Array\n(\n    [0] => Hello\n    [1] => world!\n)\n</pre><pre>Array\n\
    (\n    [0] => Hello\n    [1] => world!\n)\n</pre><pre>3</pre>"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp8xwvszer.php:36\n\
    Stack trace:\n#0 /tmp/tmp8xwvszer.php(44): test()\n#1 {main}\n  thrown in /tmp/tmp8xwvszer.php\
    \ on line 36\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // split_words(\"Hello world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"\
    Hello,world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"abcdef\") ==\
    \ 3\nfunction split_words($txt) {\n    $arr = [];\n    if (strpos($txt, ' ') !==\
    \ false) {\n        $arr = explode(' ', $txt);\n    } elseif (strpos($txt, ',')\
    \ !== false) {\n        $arr = explode(',', $txt);\n    } else {\n        $arr\
    \ = str_split($txt);\n        $arr = array_filter($arr, function ($item) {\n \
    \           return ord($item) % 2 !== 0;\n        });\n        $arr = count($arr);\n\
    \    }\n    return $arr;\n}\n\nfunction candidate(...$args) {\n    return split_words(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world!\") !== array(\"\
    Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"\
    world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world\
    \ !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpum7th2w9.php:35\n\
    Stack trace:\n#0 /tmp/tmpum7th2w9.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpum7th2w9.php\
    \ on line 35\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // split_words(\"Hello world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"\
    Hello,world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"abcdef\") ==\
    \ 3\nfunction split_words($txt) {\n    $txt = str_replace(',', ' ', $txt);\n \
    \   $txt = str_replace('!', ' ', $txt);\n    $txt = str_replace('?', ' ', $txt);\n\
    \    $txt = str_replace('.', ' ', $txt);\n    $txt = str_replace(';', ' ', $txt);\n\
    \    $txt = str_replace(':', ' ', $txt);\n    $txt = str_replace('-', ' ', $txt);\n\
    \    $txt = str_replace('_', ' ', $txt);\n    $txt = str_replace('(', ' ', $txt);\n\
    \    $txt = str_replace(')', ' ', $txt);\n    $txt = str_replace('[', ' ', $txt);\n\
    \    $txt = str_replace(']', ' ', $txt);\n    $txt = str_replace('{', ' ', $txt);\n\
    \    $txt = str_replace('}', ' ', $txt);\n    $txt = str_replace('\"', ' ', $txt);\n\
    \    $txt = str_replace(\"'\", ' ', $txt);\n    $txt = str_replace('/', ' ', $txt);\n\
    \    $txt = str_replace('\\\\', ' ', $txt);\n    $txt = str_replace('|', ' ',\
    \ $txt);\n    $txt = str_replace('+', ' ', $txt);\n    $txt = str_replace('=',\
    \ ' ', $txt);\n    $txt = str_replace('*', ' ', $txt);\n    $txt = str_replace('&',\
    \ ' ', $txt);\n    $txt = str_replace('^', ' ', $txt);\n    $txt = str_replace('%',\
    \ ' ', $txt);\n    $txt = str_replace('$', ' ', $txt);\n    $txt = str_replace('#',\
    \ ' ', $txt);\n    $txt = str_replace('@', ' ', $txt);\n    $txt = str_replace('~',\
    \ ' ', $txt);\n    $txt = str_replace('`', ' ', $txt);\n    $txt = str_replace('<',\
    \ ' ', $txt);\n    $txt = str_replace('>', ' ', $txt);\nfunction candidate(...$args)\
    \ {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\"\
    ) !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\"\
    , \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\"\
    ) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\"\
    ) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Parse error:  Unclosed '{' on line 9 in /tmp/tmpmzqpr7ct.php on line\
    \ 57\n"
  exit_code: 255
  status: SyntaxError
- program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // split_words(\"Hello world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"\
    Hello,world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"abcdef\") ==\
    \ 3\nfunction split_words($txt) {\n  $arr = str_split($txt);\n  $arr1 = [];\n\
    \  $arr2 = [];\n  $arr3 = [];\n  $arr4 = [];\n  $arr5 = [];\n  $arr6 = [];\n \
    \ $arr7 = [];\n  $arr8 = [];\n  $arr9 = [];\n  $arr10 = [];\n  $arr11 = [];\n\
    \  $arr12 = [];\n  $arr13 = [];\n  $arr14 = [];\n  $arr15 = [];\n  $arr16 = [];\n\
    \  $arr17 = [];\n  $arr18 = [];\n  $arr19 = [];\n  $arr20 = [];\n  $arr21 = [];\n\
    \  $arr22 = [];\n  $arr23 = [];\n  $arr24 = [];\n  $arr25 = [];\n  $arr26 = [];\n\
    \  $arr27 = [];\n  $arr28 = [];\n  $arr29 = [];\n  $arr30 = [];\n  $arr31 = [];\n\
    \  $arr32 = [];\n  $arr33 = [];\n  $arr34 = [];\n  $arr35 = [];\n  $arr36 = [];\n\
    \  $arr37 = [];\n  $arr38 = [];\n  $arr39 = [];\n  $arr40 = [];\n  $arr41 = [];\n\
    \  $arr42 = [];\n  $arr43 = [];\n  $arr44 = [];\n  $arr45 = [];\n  $arr46 = [];\n\
    \  $arr47 = [];\n  $arr48 = [];\n  $arr49 = [];\n  $arr50 = [];\n  $arr51 = [];\n\
    \  $arr52 = [];\n  $arr53 = [];\n  $arr54 = [];\n  $arr55 = [];\n  $arr56 = [];\n\
    \  $arr57 = [];\n  $arr58 = [];\n  $arr59 = [];\n  $arr60 = [];\n  $arr61 = [];\n\
    \  $arr62 = [];\n  $arr63 = [];\n  $arr64 = [];\n  $arr65 = [];\n  $arr66 = [];\n\
    \  $arr67 = [];\n  $arr68 = [];\n  $arr69 = [];\n  $arr70 = [];\n  $arr71 = [];\n\
    \  $arr\nfunction candidate(...$args) {\n    return split_words(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(\"Hello world!\") !== array(\"Hello\"\
    , \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"\
    world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world\
    \ !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Parse error:  syntax error, unexpected token \"function\" in /tmp/tmprqlnujow.php\
    \ on line 83\n"
  exit_code: 255
  status: SyntaxError
- program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // split_words(\"Hello world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"\
    Hello,world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"abcdef\") ==\
    \ 3\nfunction split_words($txt) {\n\tif(strpos($txt, ' ') !== false) {\n\t\treturn\
    \ explode(' ', $txt);\n\t} elseif(strpos($txt, ',') !== false) {\n\t\treturn explode(',',\
    \ $txt);\n\t} else {\n\t\t$odd = 0;\n\t\tfor($i = 0; $i < strlen($txt); $i++)\
    \ {\n\t\t\tif(ord($txt[$i]) % 2 !== 0) {\n\t\t\t\t$odd++;\n\t\t\t}\n\t\t}\n\t\t\
    return $odd;\n\t}\n}\necho split_words(\"Hello world!\");\necho \"<br>\";\necho\
    \ split_words(\"Hello,world!\");\necho \"<br>\";\necho split_words(\"abcdef\"\
    );\necho \"<br>\";\nfunction candidate(...$args) {\n    return split_words(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world!\") !== array(\"\
    Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"\
    world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world\
    \ !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: Array<br>Array<br>3<br>
  stderr: "PHP Warning:  Array to string conversion in /tmp/tmpx9izri9o.php on line\
    \ 24\nPHP Warning:  Array to string conversion in /tmp/tmpx9izri9o.php on line\
    \ 26\nPHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpx9izri9o.php:40\n\
    Stack trace:\n#0 /tmp/tmpx9izri9o.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpx9izri9o.php\
    \ on line 40\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // split_words(\"Hello world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"\
    Hello,world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"abcdef\") ==\
    \ 3\nfunction split_words($txt) {\n    $arr = str_split($txt);\n    $arr1 = [];\n\
    \    $arr2 = [];\n    $arr3 = [];\n    $arr4 = [];\n    $arr5 = [];\n    $arr6\
    \ = [];\n    $arr7 = [];\n    $arr8 = [];\n    $arr9 = [];\n    $arr10 = [];\n\
    \    $arr11 = [];\n    $arr12 = [];\n    $arr13 = [];\n    $arr14 = [];\n    $arr15\
    \ = [];\n    $arr16 = [];\n    $arr17 = [];\n    $arr18 = [];\n    $arr19 = [];\n\
    \    $arr20 = [];\n    $arr21 = [];\n    $arr22 = [];\n    $arr23 = [];\n    $arr24\
    \ = [];\n    $arr25 = [];\n    $arr26 = [];\n    $arr27 = [];\n    $arr28 = [];\n\
    \    $arr29 = [];\n    $arr30 = [];\n    $arr31 = [];\n    $arr32 = [];\n    $arr33\
    \ = [];\n    $arr34 = [];\n    $arr35 = [];\n    $arr36 = [];\n    $arr37 = [];\n\
    \    $arr38 = [];\n    $arr39 = [];\n    $arr40 = [];\n    $arr41 = [];\n    $arr42\
    \ = [];\n    $arr43 = [];\n    $arr44 = [];\n    $arr45 = [];\n    $arr46 = [];\n\
    \    $arr47 = [];\n    $arr48 = [];\n    $arr49 = [];\n    $arr50 = [];\n    $arr51\
    \ = [];\n    $arr52 = [];\n    $arr53 = [];\n    $arr54 = [];\n    $arr55 = [];\n\
    \    $arr56 = [];\n    $arr57 = [];\n    $arr58 = [];\n    $arr59 = [];\n    $arr60\
    \ = [];\n    $arr61 = [];\n    $arr62 = [];\n    $arr63 = [];\n    $arr64 = [];\n\
    \    $arr65 = [];\n    $arr66 = [];\n    $arr67 = [];\n    $arr68 = [];\n    $arr69\
    \ = [];\n    $arr70 = [];\n    $arr71 = [];\n    $arr\nfunction candidate(...$args)\
    \ {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\"\
    ) !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\"\
    , \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\"\
    ) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\"\
    ) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Parse error:  syntax error, unexpected token \"function\" in /tmp/tmp2oe_uh0c.php\
    \ on line 83\n"
  exit_code: 255
  status: SyntaxError
- program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // split_words(\"Hello world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"\
    Hello,world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"abcdef\") ==\
    \ 3\nfunction split_words($txt) {\n    if (strpos($txt, ' ') !== false) {\n  \
    \      return explode(' ', $txt);\n    } else if (strpos($txt, ',') !== false)\
    \ {\n        return explode(',', $txt);\n    } else {\n        $count = 0;\n \
    \       for ($i = 0; $i < strlen($txt); $i++) {\n            if ($i % 2 == 0 &&\
    \ ord($txt[$i]) >= 97 && ord($txt[$i]) <= 122) {\n                $count++;\n\
    \            }\n        }\n        return $count;\n    }\n}\n\nfunction candidate(...$args)\
    \ {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\"\
    ) !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\"\
    , \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\"\
    ) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\"\
    ) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmprq2eh656.php:35\n\
    Stack trace:\n#0 /tmp/tmprq2eh656.php(40): test()\n#1 {main}\n  thrown in /tmp/tmprq2eh656.php\
    \ on line 35\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // split_words(\"Hello world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"\
    Hello,world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"abcdef\") ==\
    \ 3\nfunction split_words($txt) {\n    if (strpos($txt, ' ') !== false) {\n  \
    \      return explode(' ', $txt);\n    } elseif (strpos($txt, ',') !== false)\
    \ {\n        return explode(',', $txt);\n    } else {\n        $count = 0;\n \
    \       for ($i = 0; $i < strlen($txt); $i++) {\n            if (ord($txt[$i])\
    \ % 2 !== 0) {\n                $count++;\n            }\n        }\n        return\
    \ $count;\n    }\n}\n\necho split_words(\"Hello world!\");\necho \"<br>\";\necho\
    \ split_words(\"Hello,world!\");\necho \"<br>\";\necho split_words(\"abcdef\"\
    );\nfunction candidate(...$args) {\n    return split_words(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"Hello world!\") !== array(\"Hello\", \"\
    world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,world!\"\
    ) !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"world,!\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world !\"\
    ) !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: Array<br>Array<br>3
  stderr: "PHP Warning:  Array to string conversion in /tmp/tmpxz0ga9v4.php on line\
    \ 25\nPHP Warning:  Array to string conversion in /tmp/tmpxz0ga9v4.php on line\
    \ 27\nPHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpxz0ga9v4.php:40\n\
    Stack trace:\n#0 /tmp/tmpxz0ga9v4.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpxz0ga9v4.php\
    \ on line 40\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // split_words(\"Hello world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"\
    Hello,world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"abcdef\") ==\
    \ 3\nfunction split_words($txt) {\n    $txt = str_replace(',', ' ', $txt);\n \
    \   $arr = explode(' ', $txt);\n    if (count($arr) > 1) {\n        return $arr;\n\
    \    } else {\n        $count = 0;\n        for ($i = 0; $i < strlen($txt); $i++)\
    \ {\n            if (ord($txt[$i]) % 2 == 1) {\n                $count++;\n  \
    \          }\n        }\n        return $count;\n    }\n}\necho split_words(\"\
    Hello world!\");\necho '<br>';\necho split_words(\"Hello,world!\");\necho '<br>';\n\
    echo split_words(\"abcdef\");\necho '<br>';\necho split_words(\"abcdef,ghijkl\"\
    );\necho '<br>';\necho split_words(\"abcdef,ghijkl,mnopqr\");\necho '<br>';\n\
    echo split_words(\"abcdef,ghijkl,mnopqr,stuvwx\");\necho '<br>';\necho split_words(\"\
    abcdef,ghijkl,mnopqr,stuvwx,yz\");\necho '<br>';\necho split_words(\"abcdef,ghijkl,mnopqr,stuvwx,yz,12345\"\
    );\necho '<br>';\necho split_words(\"abcdef,ghijkl,mnopqr,stuvwx,yz,12345,67890\"\
    );\necho '<br>';\necho split_words(\"abcdef,ghijkl,mnopqr,stuvwx,yz,12345,67890,ABCDE\"\
    );\necho '<br>';\necho split_words(\"abcdef,ghijkl,mnopqr,stuvwx,yz,12345,67890,ABCDE,FGHIJ\"\
    );\necho '<br>';\necho split_words(\"abcdef,ghijkl,mnopqr,stuvwx,yz,12345,67890,ABCDE,FGHIJ,KLMNO\"\
    );\necho '<br>';\necho split_words(\"abcdef,ghijkl,mnopqr,stuvwx,yz,12345,67890,ABCDE,FGHIJ,\n\
    function candidate(...$args) {\n    return split_words(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"Hello world!\") !== array(\"Hello\", \"\
    world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,world!\"\
    ) !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"world,!\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world !\"\
    ) !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Parse error:  syntax error, unexpected identifier \"Hello\", expecting\
    \ \")\" in /tmp/tmpzow1tedo.php on line 54\n"
  exit_code: 255
  status: SyntaxError
- program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // split_words(\"Hello world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"\
    Hello,world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"abcdef\") ==\
    \ 3\nfunction split_words($txt) {\n    $txt = str_replace(\",\", \" \", $txt);\n\
    \    $txt = str_replace(\"!\", \" \", $txt);\n    $txt = str_replace(\"?\", \"\
    \ \", $txt);\n    $txt = str_replace(\".\", \" \", $txt);\n    $txt = str_replace(\"\
    ;\", \" \", $txt);\n    $txt = str_replace(\":\", \" \", $txt);\n    $txt = str_replace(\"\
    -\", \" \", $txt);\n    $txt = str_replace(\"_\", \" \", $txt);\n    $txt = str_replace(\"\
    '\", \" \", $txt);\n    $txt = str_replace(\"\\\"\", \" \", $txt);\n    $txt =\
    \ str_replace(\"(\", \" \", $txt);\n    $txt = str_replace(\")\", \" \", $txt);\n\
    \    $txt = str_replace(\"[\", \" \", $txt);\n    $txt = str_replace(\"]\", \"\
    \ \", $txt);\n    $txt = str_replace(\"{\", \" \", $txt);\n    $txt = str_replace(\"\
    }\", \" \", $txt);\n    $txt = str_replace(\"/\", \" \", $txt);\n    $txt = str_replace(\"\
    \\\\\", \" \", $txt);\n    $txt = str_replace(\"|\", \" \", $txt);\n    $txt =\
    \ str_replace(\"+\", \" \", $txt);\n    $txt = str_replace(\"=\", \" \", $txt);\n\
    \    $txt = str_replace(\"*\", \" \", $txt);\n    $txt = str_replace(\"&\", \"\
    \ \", $txt);\n    $txt = str_replace(\"^\", \" \", $txt);\n    $txt = str_replace(\"\
    %\", \" \", $txt);\n    $txt = str_replace(\"$\", \" \", $txt);\n    $txt = str_replace(\"\
    #\", \" \", $txt);\n    $txt = str_replace(\"@\", \" \", $txt);\n    $txt = str_replace(\"\
    ~\", \" \", $txt);\n    $txt = str_replace(\"`\", \" \", $txt);\n    $txt = str_replace(\"\
    <\", \" \", $txt);\n    $txt = str_replace(\">\", \" \", $txt);\n    $\nfunction\
    \ candidate(...$args) {\n    return split_words(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"Hello world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,world!\"\
    ) !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"world,!\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world !\"\
    ) !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Parse error:  syntax error, unexpected token \"function\", expecting\
    \ variable or \"{\" or \"$\" in /tmp/tmp_ty0if42.php on line 43\n"
  exit_code: 255
  status: SyntaxError
- program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // split_words(\"Hello world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"\
    Hello,world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"abcdef\") ==\
    \ 3\nfunction split_words($txt) {\n    if (strpos($txt, ' ') !== false) {\n  \
    \      return explode(' ', $txt);\n    } elseif (strpos($txt, ',') !== false)\
    \ {\n        return explode(',', $txt);\n    } else {\n        $count = 0;\n \
    \       for ($i = 0; $i < strlen($txt); $i++) {\n            if (ord($txt[$i])\
    \ % 2 == 1) {\n                $count++;\n            }\n        }\n        return\
    \ $count;\n    }\n}\n\nfunction candidate(...$args) {\n    return split_words(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world!\") !== array(\"\
    Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"\
    world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world\
    \ !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp1hchlzen.php:35\n\
    Stack trace:\n#0 /tmp/tmp1hchlzen.php(40): test()\n#1 {main}\n  thrown in /tmp/tmp1hchlzen.php\
    \ on line 35\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // split_words(\"Hello world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"\
    Hello,world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"abcdef\") ==\
    \ 3\nfunction split_words($txt) {\n    if (strpos($txt, ' ') !== false) {\n  \
    \      return explode(' ', $txt);\n    } elseif (strpos($txt, ',') !== false)\
    \ {\n        return explode(',', $txt);\n    } else {\n        $odd = 0;\n   \
    \     for ($i = 0; $i < strlen($txt); $i++) {\n            if (ord($txt[$i]) %\
    \ 2 !== 0) {\n                $odd++;\n            }\n        }\n        return\
    \ $odd;\n    }\n}\n\nfunction candidate(...$args) {\n    return split_words(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world!\") !== array(\"\
    Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"\
    world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world\
    \ !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpg775bvkm.php:35\n\
    Stack trace:\n#0 /tmp/tmpg775bvkm.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpg775bvkm.php\
    \ on line 35\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // split_words(\"Hello world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"\
    Hello,world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"abcdef\") ==\
    \ 3\nfunction split_words($txt) {\n    $arr = str_split($txt);\n    $newArr =\
    \ [];\n    $odd = [];\n    $even = [];\n    $result = [];\n    for ($i = 0; $i\
    \ < count($arr); $i++) {\n        if ($arr[$i] == \" \") {\n            $newArr[]\
    \ = $arr[$i];\n        } else if ($arr[$i] == \",\") {\n            $newArr[]\
    \ = $arr[$i];\n        } else {\n            $newArr[] = ord($arr[$i]);\n    \
    \    }\n    }\n    for ($i = 0; $i < count($newArr); $i++) {\n        if ($newArr[$i]\
    \ % 2 == 0) {\n            $even[] = $newArr[$i];\n        } else {\n        \
    \    $odd[] = $newArr[$i];\n        }\n    }\n    if (count($newArr) == count($odd))\
    \ {\n        return count($odd);\n    } else if (count($newArr) == count($even))\
    \ {\n        return count($even);\n    } else {\n        for ($i = 0; $i < count($newArr);\
    \ $i++) {\n            if ($newArr[$i] == \" \") {\n                $result[]\
    \ = $newArr[$i];\n            } else if ($newArr[$i] == \",\") {\n           \
    \     $result[] = $newArr[$i];\n            } else {\n                $result[]\
    \ = chr($newArr[$i]);\n            }\n        }\n        return $result;\n   \
    \ }\n}\necho \"<pre>\";\nprint_r(split_words(\"Hello world!\"));\necho \"</pre>\"\
    ;\necho \"<pre>\";\nprint_r(split_words(\"Hello,world!\"));\necho \"</pre>\";\n\
    echo \"<pre>\";\nprint_r(split_words(\"abcdef\"));\necho \"</pre>\";\nfunction\
    \ candidate(...$args) {\n    return split_words(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"Hello world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,world!\"\
    ) !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"world,!\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world !\"\
    ) !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: <pre>
  stderr: "PHP Fatal error:  Uncaught TypeError: Unsupported operand types: string\
    \ % int in /tmp/tmphi1uy3lr.php:25\nStack trace:\n#0 /tmp/tmphi1uy3lr.php(49):\
    \ split_words()\n#1 {main}\n  thrown in /tmp/tmphi1uy3lr.php on line 25\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // split_words(\"Hello world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"\
    Hello,world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"abcdef\") ==\
    \ 3\nfunction split_words($txt) {\n    $split = explode(\" \", $txt);\n    if\
    \ (count($split) == 1) {\n        $split = explode(\",\", $txt);\n        if (count($split)\
    \ == 1) {\n            $split = str_split($txt);\n            $odd = 0;\n    \
    \        foreach ($split as $letter) {\n                if (ord($letter) % 2 !=\
    \ 0) {\n                    $odd++;\n                }\n            }\n      \
    \      return $odd;\n        }\n    }\n    return $split;\n}\necho \"<pre>\";\n\
    print_r(split_words(\"Hello world!\"));\necho \"</pre>\";\necho \"<pre>\";\nprint_r(split_words(\"\
    Hello,world!\"));\necho \"</pre>\";\necho \"<pre>\";\nprint_r(split_words(\"abcdef\"\
    ));\necho \"</pre>\";\nfunction candidate(...$args) {\n    return split_words(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world!\") !== array(\"\
    Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"\
    world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world\
    \ !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: "<pre>Array\n(\n    [0] => Hello\n    [1] => world!\n)\n</pre><pre>Array\n\
    (\n    [0] => Hello\n    [1] => world!\n)\n</pre><pre>3</pre>"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpsa5ml8yf.php:45\n\
    Stack trace:\n#0 /tmp/tmpsa5ml8yf.php(50): test()\n#1 {main}\n  thrown in /tmp/tmpsa5ml8yf.php\
    \ on line 45\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // split_words(\"Hello world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"\
    Hello,world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"abcdef\") ==\
    \ 3\nfunction split_words($txt) {\n    if (strpos($txt, ' ') !== false) {\n  \
    \      return explode(' ', $txt);\n    } elseif (strpos($txt, ',') !== false)\
    \ {\n        return explode(',', $txt);\n    } else {\n        $count = 0;\n \
    \       for ($i = 0; $i < strlen($txt); $i++) {\n            if (ord($txt[$i])\
    \ % 2 !== 0) {\n                $count++;\n            }\n        }\n        return\
    \ $count;\n    }\n}\necho split_words(\"Hello world!\");\necho '<br>';\necho split_words(\"\
    Hello,world!\");\necho '<br>';\necho split_words(\"abcdef\");\nfunction candidate(...$args)\
    \ {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\"\
    ) !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\"\
    , \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\"\
    ) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\"\
    ) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: Array<br>Array<br>3
  stderr: "PHP Warning:  Array to string conversion in /tmp/tmp0r85hhkz.php on line\
    \ 24\nPHP Warning:  Array to string conversion in /tmp/tmp0r85hhkz.php on line\
    \ 26\nPHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp0r85hhkz.php:39\n\
    Stack trace:\n#0 /tmp/tmp0r85hhkz.php(44): test()\n#1 {main}\n  thrown in /tmp/tmp0r85hhkz.php\
    \ on line 39\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // split_words(\"Hello world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"\
    Hello,world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"abcdef\") ==\
    \ 3\nfunction split_words($txt) {\n    if (strpos($txt, ' ') !== false) {\n  \
    \      return explode(' ', $txt);\n    } elseif (strpos($txt, ',') !== false)\
    \ {\n        return explode(',', $txt);\n    } else {\n        $count = 0;\n \
    \       for ($i = 0; $i < strlen($txt); $i++) {\n            if (ord($txt[$i])\
    \ % 2 == 1) {\n                $count++;\n            }\n        }\n        return\
    \ $count;\n    }\n}\n\necho split_words(\"Hello world!\");\necho \"<br>\";\necho\
    \ split_words(\"Hello,world!\");\necho \"<br>\";\necho split_words(\"abcdef\"\
    );\necho \"<br>\";\necho split_words(\"abcdefg\");\necho \"<br>\";\necho split_words(\"\
    abcdefgh\");\necho \"<br>\";\necho split_words(\"abcdefghi\");\necho \"<br>\"\
    ;\necho split_words(\"abcdefghij\");\necho \"<br>\";\necho split_words(\"abcdefghijk\"\
    );\necho \"<br>\";\necho split_words(\"abcdefghijkl\");\necho \"<br>\";\necho\
    \ split_words(\"abcdefghijklm\");\necho \"<br>\";\necho split_words(\"abcdefghijklmn\"\
    );\necho \"<br>\";\necho split_words(\"abcdefghijklmno\");\necho \"<br>\";\necho\
    \ split_words(\"abcdefghijklmnop\");\necho \"<br>\";\necho split_words(\"abcdefghijklmnopq\"\
    );\necho \"<br>\";\necho split_words(\"abcdefghijklmnopqr\");\necho \"<br>\";\n\
    echo split_words(\"abcdefghijklmnopqrs\");\necho \"<br>\";\necho split_words(\"\
    abcdefghijklmnopqrst\");\necho \"<br>\";\necho split_words(\"abcdefghijklmnopqrstu\"\
    );\necho \"<br>\";\necho split_words(\"abcdefghijklmnopqrstuv\");\necho \"<br>\"\
    ;\necho split_words(\"abcdefghijklmnopqrstuvw\");\necho \"<\nfunction candidate(...$args)\
    \ {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\"\
    ) !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\"\
    , \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\"\
    ) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\"\
    ) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Parse error:  syntax error, unexpected identifier \"Hello\", expecting\
    \ \",\" or \";\" in /tmp/tmpcw0xs7go.php on line 70\n"
  exit_code: 255
  status: SyntaxError
- program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // split_words(\"Hello world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"\
    Hello,world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"abcdef\") ==\
    \ 3\nfunction split_words($txt) {\n    if (strpos($txt, ' ') !== false) {\n  \
    \      return explode(' ', $txt);\n    } elseif (strpos($txt, ',') !== false)\
    \ {\n        return explode(',', $txt);\n    } else {\n        $count = 0;\n \
    \       for ($i = 0; $i < strlen($txt); $i++) {\n            if (ord($txt[$i])\
    \ % 2 !== 0) {\n                $count++;\n            }\n        }\n        return\
    \ $count;\n    }\n}\necho split_words(\"Hello world!\") . '<br>';\necho split_words(\"\
    Hello,world!\") . '<br>';\necho split_words(\"abcdef\") . '<br>';\necho split_words(\"\
    abcdef,ghijkl\") . '<br>';\necho split_words(\"abcdef ghijkl\") . '<br>';\necho\
    \ split_words(\"abcdef,ghijkl mnopqrst\") . '<br>';\necho split_words(\"abcdef\
    \ ghijkl mnopqrst\") . '<br>';\necho split_words(\"abcdef,ghijkl mnopqrst uvwxyz\"\
    ) . '<br>';\necho split_words(\"abcdef ghijkl mnopqrst uvwxyz\") . '<br>';\necho\
    \ split_words(\"abcdef,ghijkl mnopqrst uvwxyz,ABCDEF\") . '<br>';\necho split_words(\"\
    abcdef ghijkl mnopqrst uvwxyz ABCDEF\") . '<br>';\necho split_words(\"abcdef,ghijkl\
    \ mnopqrst uvwxyz,ABCDEF GHIJKL\") . '<br>';\necho split_words(\"abcdef ghijkl\
    \ mnopqrst uvwxyz ABCDEF GHIJKL\") . '<br>';\necho split_words(\"abcdef,ghijkl\
    \ mnopqrst uvwxyz,ABCDEF GHIJKL MNOPQRST\") . '<br>';\necho split_words(\"abcdef\
    \ ghijkl mnop\nfunction candidate(...$args) {\n    return split_words(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world!\") !== array(\"\
    Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"\
    world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world\
    \ !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Parse error:  syntax error, unexpected identifier \"Hello\", expecting\
    \ \")\" in /tmp/tmph0q9ekbn.php on line 44\n"
  exit_code: 255
  status: SyntaxError
- program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // split_words(\"Hello world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"\
    Hello,world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"abcdef\") ==\
    \ 3\nfunction split_words($txt) {\n    if (strpos($txt, ' ') !== false) {\n  \
    \      return explode(' ', $txt);\n    } elseif (strpos($txt, ',') !== false)\
    \ {\n        return explode(',', $txt);\n    } else {\n        $count = 0;\n \
    \       for ($i = 0; $i < strlen($txt); $i++) {\n            if (ord($txt[$i])\
    \ % 2 !== 0) {\n                $count++;\n            }\n        }\n        return\
    \ $count;\n    }\n}\n\necho split_words(\"Hello world!\");\necho '<br>';\necho\
    \ split_words(\"Hello,world!\");\necho '<br>';\necho split_words(\"abcdef\");\n\
    function candidate(...$args) {\n    return split_words(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"Hello world!\") !== array(\"Hello\", \"\
    world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,world!\"\
    ) !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"world,!\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world !\"\
    ) !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: Array<br>Array<br>3
  stderr: "PHP Warning:  Array to string conversion in /tmp/tmpjdg70zmm.php on line\
    \ 25\nPHP Warning:  Array to string conversion in /tmp/tmpjdg70zmm.php on line\
    \ 27\nPHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpjdg70zmm.php:40\n\
    Stack trace:\n#0 /tmp/tmpjdg70zmm.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpjdg70zmm.php\
    \ on line 40\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // split_words(\"Hello world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"\
    Hello,world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"abcdef\") ==\
    \ 3\nfunction split_words($txt) {\n    $result = [];\n    if (strpos($txt, ' ')\
    \ !== false) {\n        $result = explode(' ', $txt);\n    } elseif (strpos($txt,\
    \ ',') !== false) {\n        $result = explode(',', $txt);\n    } else {\n   \
    \     $result = strlen(preg_replace('/[^a-z]/', '', $txt)) % 2;\n    }\n    return\
    \ $result;\n}\necho '<pre>';\nprint_r(split_words(\"Hello world!\"));\nprint_r(split_words(\"\
    Hello,world!\"));\nprint_r(split_words(\"abcdef\"));\necho '</pre>';\nfunction\
    \ candidate(...$args) {\n    return split_words(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"Hello world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,world!\"\
    ) !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"world,!\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world !\"\
    ) !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: "<pre>Array\n(\n    [0] => Hello\n    [1] => world!\n)\nArray\n(\n    [0]\
    \ => Hello\n    [1] => world!\n)\n0</pre>"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpcfhi8wcu.php:34\n\
    Stack trace:\n#0 /tmp/tmpcfhi8wcu.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpcfhi8wcu.php\
    \ on line 34\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // split_words(\"Hello world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"\
    Hello,world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"abcdef\") ==\
    \ 3\nfunction split_words($txt) {\n    $arr = [];\n    if (strpos($txt, ' ') !==\
    \ false) {\n        $arr = explode(' ', $txt);\n    } elseif (strpos($txt, ',')\
    \ !== false) {\n        $arr = explode(',', $txt);\n    } else {\n        $arr\
    \ = str_split($txt);\n        $count = 0;\n        foreach ($arr as $item) {\n\
    \            if (ord($item) % 2 !== 0) {\n                $count++;\n        \
    \    }\n        }\n        $arr = $count;\n    }\n    return $arr;\n}\n\nfunction\
    \ candidate(...$args) {\n    return split_words(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"Hello world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,world!\"\
    ) !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"world,!\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world !\"\
    ) !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmptb6qx5m5.php:38\n\
    Stack trace:\n#0 /tmp/tmptb6qx5m5.php(43): test()\n#1 {main}\n  thrown in /tmp/tmptb6qx5m5.php\
    \ on line 38\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // split_words(\"Hello world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"\
    Hello,world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"abcdef\") ==\
    \ 3\nfunction split_words($txt) {\n    if(strpos($txt, ' ') !== false) {\n   \
    \     return explode(' ', $txt);\n    } elseif(strpos($txt, ',') !== false) {\n\
    \        return explode(',', $txt);\n    } else {\n        $count = 0;\n     \
    \   for($i = 0; $i < strlen($txt); $i++) {\n            if($i % 2 !== 0 && ord($txt[$i])\
    \ >= 97 && ord($txt[$i]) <= 122) {\n                $count++;\n            }\n\
    \        }\n        return $count;\n    }\n}\n\nfunction candidate(...$args) {\n\
    \    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\"\
    ) !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\"\
    , \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\"\
    ) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\"\
    ) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // split_words(\"Hello world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"\
    Hello,world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"abcdef\") ==\
    \ 3\nfunction split_words($txt) {\n    $txt = str_replace(',', ' ', $txt);\n \
    \   $txt = str_replace('!', ' ', $txt);\n    $txt = str_replace('?', ' ', $txt);\n\
    \    $txt = str_replace('.', ' ', $txt);\n    $txt = str_replace(';', ' ', $txt);\n\
    \    $txt = str_replace(':', ' ', $txt);\n    $txt = str_replace('-', ' ', $txt);\n\
    \    $txt = str_replace('_', ' ', $txt);\n    $txt = str_replace('(', ' ', $txt);\n\
    \    $txt = str_replace(')', ' ', $txt);\n    $txt = str_replace('[', ' ', $txt);\n\
    \    $txt = str_replace(']', ' ', $txt);\n    $txt = str_replace('{', ' ', $txt);\n\
    \    $txt = str_replace('}', ' ', $txt);\n    $txt = str_replace('\"', ' ', $txt);\n\
    \    $txt = str_replace(\"'\", ' ', $txt);\n    $txt = str_replace('/', ' ', $txt);\n\
    \    $txt = str_replace('\\\\', ' ', $txt);\n    $txt = str_replace('|', ' ',\
    \ $txt);\n    $txt = str_replace('+', ' ', $txt);\n    $txt = str_replace('=',\
    \ ' ', $txt);\n    $txt = str_replace('*', ' ', $txt);\n    $txt = str_replace('&',\
    \ ' ', $txt);\n    $txt = str_replace('^', ' ', $txt);\n    $txt = str_replace('%',\
    \ ' ', $txt);\n    $txt = str_replace('$', ' ', $txt);\n    $txt = str_replace('#',\
    \ ' ', $txt);\n    $txt = str_replace('@', ' ', $txt);\n    $txt = str_replace('~',\
    \ ' ', $txt);\n    $txt = str_replace('`', ' ', $txt);\n    $txt = str_replace('<',\
    \ ' ', $txt);\n    $txt = str_replace('>', ' ', $txt);\nfunction candidate(...$args)\
    \ {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\"\
    ) !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\"\
    , \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\"\
    ) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\"\
    ) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Parse error:  Unclosed '{' on line 9 in /tmp/tmphhtpgflm.php on line\
    \ 57\n"
  exit_code: 255
  status: SyntaxError
- program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // split_words(\"Hello world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"\
    Hello,world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"abcdef\") ==\
    \ 3\nfunction split_words($txt) {\n    $txt = str_replace(\",\", \" \", $txt);\n\
    \    $txt = str_replace(\"!\", \" \", $txt);\n    $txt = str_replace(\".\", \"\
    \ \", $txt);\n    $txt = str_replace(\"?\", \" \", $txt);\n    $txt = str_replace(\"\
    ;\", \" \", $txt);\n    $txt = str_replace(\":\", \" \", $txt);\n    $txt = str_replace(\"\
    -\", \" \", $txt);\n    $txt = str_replace(\"_\", \" \", $txt);\n    $txt = str_replace(\"\
    (\", \" \", $txt);\n    $txt = str_replace(\")\", \" \", $txt);\n    $txt = str_replace(\"\
    [\", \" \", $txt);\n    $txt = str_replace(\"]\", \" \", $txt);\n    $txt = str_replace(\"\
    {\", \" \", $txt);\n    $txt = str_replace(\"}\", \" \", $txt);\n    $txt = str_replace(\"\
    /\", \" \", $txt);\n    $txt = str_replace(\"\\\\\", \" \", $txt);\n    $txt =\
    \ str_replace(\"|\", \" \", $txt);\n    $txt = str_replace(\"'\", \" \", $txt);\n\
    \    $txt = str_replace(\"\\\"\", \" \", $txt);\n    $txt = str_replace(\"+\"\
    , \" \", $txt);\n    $txt = str_replace(\"=\", \" \", $txt);\n    $txt = str_replace(\"\
    *\", \" \", $txt);\n    $txt = str_replace(\"&\", \" \", $txt);\n    $txt = str_replace(\"\
    ^\", \" \", $txt);\n    $txt = str_replace(\"%\", \" \", $txt);\n    $txt = str_replace(\"\
    $\", \" \", $txt);\n    $txt = str_replace(\"#\", \" \", $txt);\n    $txt = str_replace(\"\
    @\", \" \", $txt);\n    $txt = str_replace(\"!\", \" \", $txt);\n    $txt = str_replace(\"\
    ~\", \" \", $txt);\n    $txt = str_replace(\"`\", \" \", $txt);\n    $txt = str_replace(\"\
    <\", \" \", $txt);\n    $txt\nfunction candidate(...$args) {\n    return split_words(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world!\") !== array(\"\
    Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"\
    world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world\
    \ !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Parse error:  syntax error, unexpected token \"function\" in /tmp/tmpj8npmbty.php\
    \ on line 43\n"
  exit_code: 255
  status: SyntaxError
- program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // split_words(\"Hello world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"\
    Hello,world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"abcdef\") ==\
    \ 3\nfunction split_words($txt) {\n    if (strpos($txt, ' ') !== false) {\n  \
    \      return explode(' ', $txt);\n    } elseif (strpos($txt, ',') !== false)\
    \ {\n        return explode(',', $txt);\n    } else {\n        $count = 0;\n \
    \       for ($i = 0; $i < strlen($txt); $i++) {\n            if (ord($txt[$i])\
    \ % 2 !== 0) {\n                $count++;\n            }\n        }\n        return\
    \ $count;\n    }\n}\necho split_words(\"Hello world!\");\necho '<br>';\necho split_words(\"\
    Hello,world!\");\necho '<br>';\necho split_words(\"abcdef\");\necho '<br>';\n\
    echo split_words(\"abcdefg\");\necho '<br>';\necho split_words(\"abcdefgh\");\n\
    echo '<br>';\necho split_words(\"abcdefghi\");\necho '<br>';\necho split_words(\"\
    abcdefghij\");\necho '<br>';\necho split_words(\"abcdefghijk\");\necho '<br>';\n\
    echo split_words(\"abcdefghijkl\");\necho '<br>';\necho split_words(\"abcdefghijklm\"\
    );\necho '<br>';\necho split_words(\"abcdefghijklmn\");\necho '<br>';\necho split_words(\"\
    abcdefghijklmno\");\necho '<br>';\necho split_words(\"abcdefghijklmnop\");\necho\
    \ '<br>';\necho split_words(\"abcdefghijklmnopq\");\necho '<br>';\necho split_words(\"\
    abcdefghijklmnopqr\");\necho '<br>';\necho split_words(\"abcdefghijklmnopqrs\"\
    );\necho '<br>';\necho split_words(\"abcdefghijklmnopqrst\");\necho '<br>';\n\
    echo split_words(\"abcdefghijklmnopqrstu\");\necho '<br>';\necho split_words(\"\
    abcdefghijklmnopqrstuv\");\necho '<br>';\necho split\nfunction candidate(...$args)\
    \ {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\"\
    ) !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\"\
    , \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\"\
    ) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\"\
    ) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Parse error:  syntax error, unexpected token \"function\", expecting\
    \ \",\" or \";\" in /tmp/tmp85fzxirs.php on line 63\n"
  exit_code: 255
  status: SyntaxError
- program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // split_words(\"Hello world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"\
    Hello,world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"abcdef\") ==\
    \ 3\nfunction split_words($txt) {\n  $txt = str_replace(\" \", \",\", $txt);\n\
    \  $txt = str_replace(\",\", \" \", $txt);\n  $txt = explode(\" \", $txt);\n \
    \ $arr = [];\n  foreach ($txt as $key => $value) {\n    if (ctype_lower($value))\
    \ {\n      $arr[] = $value;\n    }\n  }\n  $arr = array_count_values($arr);\n\
    \  $arr = array_filter($arr, function($value) {\n    return $value % 2 == 1;\n\
    \  });\n  return count($arr);\n}\necho split_words(\"Hello world!\") . \"<br>\"\
    ;\necho split_words(\"Hello,world!\") . \"<br>\";\necho split_words(\"abcdef\"\
    ) . \"<br>\";\nfunction candidate(...$args) {\n    return split_words(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world!\") !== array(\"\
    Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"\
    world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world\
    \ !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: 0<br>0<br>1<br>
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp3fks4ydz.php:33\n\
    Stack trace:\n#0 /tmp/tmp3fks4ydz.php(43): test()\n#1 {main}\n  thrown in /tmp/tmp3fks4ydz.php\
    \ on line 33\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // split_words(\"Hello world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"\
    Hello,world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"abcdef\") ==\
    \ 3\nfunction split_words($txt) {\n    $txt = str_replace(\",\", \" \", $txt);\n\
    \    $txt = str_replace(\"!\", \" \", $txt);\n    $txt = str_replace(\"?\", \"\
    \ \", $txt);\n    $txt = str_replace(\".\", \" \", $txt);\n    $txt = str_replace(\"\
    ;\", \" \", $txt);\n    $txt = str_replace(\":\", \" \", $txt);\n    $txt = str_replace(\"\
    -\", \" \", $txt);\n    $txt = str_replace(\"_\", \" \", $txt);\n    $txt = str_replace(\"\
    (\", \" \", $txt);\n    $txt = str_replace(\")\", \" \", $txt);\n    $txt = str_replace(\"\
    [\", \" \", $txt);\n    $txt = str_replace(\"]\", \" \", $txt);\n    $txt = str_replace(\"\
    {\", \" \", $txt);\n    $txt = str_replace(\"}\", \" \", $txt);\n    $txt = str_replace(\"\
    \\\"\", \" \", $txt);\n    $txt = str_replace(\"'\", \" \", $txt);\n    $txt =\
    \ str_replace(\"/\", \" \", $txt);\n    $txt = str_replace(\"\\\\\", \" \", $txt);\n\
    \    $txt = str_replace(\"|\", \" \", $txt);\n    $txt = str_replace(\"+\", \"\
    \ \", $txt);\n    $txt = str_replace(\"=\", \" \", $txt);\n    $txt = str_replace(\"\
    *\", \" \", $txt);\n    $txt = str_replace(\"&\", \" \", $txt);\n    $txt = str_replace(\"\
    ^\", \" \", $txt);\n    $txt = str_replace(\"%\", \" \", $txt);\n    $txt = str_replace(\"\
    $\", \" \", $txt);\n    $txt = str_replace(\"#\", \" \", $txt);\n    $txt = str_replace(\"\
    @\", \" \", $txt);\n    $txt = str_replace(\"!\", \" \", $txt);\n    $txt = str_replace(\"\
    ~\", \" \", $txt);\n    $txt = str_replace(\"`\", \" \", $txt);\n    $txt = str_replace(\"\
    <\", \" \", $txt);\n    $txt\nfunction candidate(...$args) {\n    return split_words(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world!\") !== array(\"\
    Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"\
    world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world\
    \ !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Parse error:  syntax error, unexpected token \"function\" in /tmp/tmpyqvv3eat.php\
    \ on line 43\n"
  exit_code: 255
  status: SyntaxError
- program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // split_words(\"Hello world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"\
    Hello,world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"abcdef\") ==\
    \ 3\nfunction split_words($txt) {\n    $arr = str_split($txt);\n    $result =\
    \ [];\n    $temp = '';\n    foreach ($arr as $char) {\n        if ($char === '\
    \ ' || $char === ',') {\n            if ($temp !== '') {\n                array_push($result,\
    \ $temp);\n                $temp = '';\n            }\n        } else {\n    \
    \        $temp .= $char;\n        }\n    }\n    if ($temp !== '') {\n        array_push($result,\
    \ $temp);\n    }\n    return count($result) > 0 ? $result : count(array_filter(str_split($txt),\
    \ function ($char) {\n        return ord($char) % 2 === 1;\n    }));\n}\n\nfunction\
    \ candidate(...$args) {\n    return split_words(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"Hello world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,world!\"\
    ) !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"world,!\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world !\"\
    ) !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpjn3d49tx.php:38\n\
    Stack trace:\n#0 /tmp/tmpjn3d49tx.php(46): test()\n#1 {main}\n  thrown in /tmp/tmpjn3d49tx.php\
    \ on line 38\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // split_words(\"Hello world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"\
    Hello,world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"abcdef\") ==\
    \ 3\nfunction split_words($txt) {\n    $result = [];\n    if (strpos($txt, ' ')\
    \ !== false) {\n        $result = explode(' ', $txt);\n    } elseif (strpos($txt,\
    \ ',') !== false) {\n        $result = explode(',', $txt);\n    } else {\n   \
    \     $result = strlen(preg_replace('/[^a-z]/', '', $txt)) / 2;\n    }\n    return\
    \ $result;\n}\n\nfunction candidate(...$args) {\n    return split_words(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world!\") !== array(\"\
    Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"\
    world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world\
    \ !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpyp6xqj8p.php:31\n\
    Stack trace:\n#0 /tmp/tmpyp6xqj8p.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpyp6xqj8p.php\
    \ on line 31\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // split_words(\"Hello world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"\
    Hello,world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"abcdef\") ==\
    \ 3\nfunction split_words($txt) {\n    $result = [];\n    if (strpos($txt, ' ')\
    \ !== false) {\n        $result = explode(' ', $txt);\n    } elseif (strpos($txt,\
    \ ',') !== false) {\n        $result = explode(',', $txt);\n    } else {\n   \
    \     $count = 0;\n        for ($i = 0; $i < strlen($txt); $i++) {\n         \
    \   if (ord($txt[$i]) % 2 != 0) {\n                $count++;\n            }\n\
    \        }\n        $result = $count;\n    }\n    return $result;\n}\n\nfunction\
    \ candidate(...$args) {\n    return split_words(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"Hello world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,world!\"\
    ) !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"world,!\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world !\"\
    ) !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpslkiyzvd.php:37\n\
    Stack trace:\n#0 /tmp/tmpslkiyzvd.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpslkiyzvd.php\
    \ on line 37\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // split_words(\"Hello world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"\
    Hello,world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"abcdef\") ==\
    \ 3\nfunction split_words($txt) {\n    if (strpos($txt, ' ') !== false) {\n  \
    \      return explode(' ', $txt);\n    } elseif (strpos($txt, ',') !== false)\
    \ {\n        return explode(',', $txt);\n    } else {\n        $count = 0;\n \
    \       for ($i = 0; $i < strlen($txt); $i++) {\n            if (ord($txt[$i])\
    \ % 2 !== 0) {\n                $count++;\n            }\n        }\n        return\
    \ $count;\n    }\n}\necho split_words(\"Hello world!\");\necho '<br>';\necho split_words(\"\
    Hello,world!\");\necho '<br>';\necho split_words(\"abcdef\");\necho '<br>';\n\
    echo split_words(\"abcdef,ghijkl,mnopqr,stuvwx,yz\");\necho '<br>';\necho split_words(\"\
    abcdef,ghijkl,mnopqr,stuvwx,yz,12345\");\necho '<br>';\necho split_words(\"abcdef,ghijkl,mnopqr,stuvwx,yz,12345,67890\"\
    );\necho '<br>';\necho split_words(\"abcdef,ghijkl,mnopqr,stuvwx,yz,12345,67890,ABCDE\"\
    );\necho '<br>';\necho split_words(\"abcdef,ghijkl,mnopqr,stuvwx,yz,12345,67890,ABCDE,FGHIJ\"\
    );\necho '<br>';\necho split_words(\"abcdef,ghijkl,mnopqr,stuvwx,yz,12345,67890,ABCDE,FGHIJ,KLMNO\"\
    );\necho '<br>';\necho split_words(\"abcdef,ghijkl,mnopqr,stuvwx,yz,12345,67890,ABCDE,FGHIJ,KLMNO,PQRST\"\
    );\necho '<br>';\necho split_words(\"abcdef,ghijkl,mnopqr,stuvwx,yz,12345,67890,ABCDE,FGHIJ,KLMNO,PQRST,U\n\
    function candidate(...$args) {\n    return split_words(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"Hello world!\") !== array(\"Hello\", \"\
    world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,world!\"\
    ) !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"world,!\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world !\"\
    ) !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Parse error:  syntax error, unexpected identifier \"Hello\", expecting\
    \ \")\" in /tmp/tmpqtmlkui4.php on line 50\n"
  exit_code: 255
  status: SyntaxError
- program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // split_words(\"Hello world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"\
    Hello,world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"abcdef\") ==\
    \ 3\nfunction split_words($txt) {\n    $arr = [];\n    if (strpos($txt, ' ') !==\
    \ false) {\n        $arr = explode(' ', $txt);\n    } elseif (strpos($txt, ',')\
    \ !== false) {\n        $arr = explode(',', $txt);\n    } else {\n        $arr\
    \ = str_split($txt);\n        $arr = array_filter($arr, function ($item) {\n \
    \           return ord($item) % 2 !== 0;\n        });\n        $arr = count($arr);\n\
    \    }\n    return $arr;\n}\n\nfunction candidate(...$args) {\n    return split_words(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world!\") !== array(\"\
    Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"\
    world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world\
    \ !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp2a4hz7dt.php:35\n\
    Stack trace:\n#0 /tmp/tmp2a4hz7dt.php(40): test()\n#1 {main}\n  thrown in /tmp/tmp2a4hz7dt.php\
    \ on line 35\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // split_words(\"Hello world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"\
    Hello,world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"abcdef\") ==\
    \ 3\nfunction split_words($txt) {\n    $txt = str_replace(\",\", \" \", $txt);\n\
    \    $txt = str_replace(\"!\", \" \", $txt);\n    $txt = str_replace(\"?\", \"\
    \ \", $txt);\n    $txt = str_replace(\".\", \" \", $txt);\n    $txt = str_replace(\"\
    ;\", \" \", $txt);\n    $txt = str_replace(\":\", \" \", $txt);\n    $txt = str_replace(\"\
    -\", \" \", $txt);\n    $txt = str_replace(\"_\", \" \", $txt);\n    $txt = str_replace(\"\
    (\", \" \", $txt);\n    $txt = str_replace(\")\", \" \", $txt);\n    $txt = str_replace(\"\
    [\", \" \", $txt);\n    $txt = str_replace(\"]\", \" \", $txt);\n    $txt = str_replace(\"\
    {\", \" \", $txt);\n    $txt = str_replace(\"}\", \" \", $txt);\n    $txt = str_replace(\"\
    /\", \" \", $txt);\n    $txt = str_replace(\"\\\\\", \" \", $txt);\n    $txt =\
    \ str_replace(\"|\", \" \", $txt);\n    $txt = str_replace(\"\\\"\", \" \", $txt);\n\
    \    $txt = str_replace(\"'\", \" \", $txt);\n    $txt = str_replace(\"+\", \"\
    \ \", $txt);\n    $txt = str_replace(\"=\", \" \", $txt);\n    $txt = str_replace(\"\
    *\", \" \", $txt);\n    $txt = str_replace(\"&\", \" \", $txt);\n    $txt = str_replace(\"\
    ^\", \" \", $txt);\n    $txt = str_replace(\"%\", \" \", $txt);\n    $txt = str_replace(\"\
    $\", \" \", $txt);\n    $txt = str_replace(\"#\", \" \", $txt);\n    $txt = str_replace(\"\
    @\", \" \", $txt);\n    $txt = str_replace(\"!\", \" \", $txt);\n    $txt = str_replace(\"\
    ~\", \" \", $txt);\n    $txt = str_replace(\"`\", \" \", $txt);\n    $txt = str_replace(\"\
    <\", \" \", $txt);\n    $txt\nfunction candidate(...$args) {\n    return split_words(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world!\") !== array(\"\
    Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"\
    world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world\
    \ !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Parse error:  syntax error, unexpected token \"function\" in /tmp/tmp6i8fy32y.php\
    \ on line 43\n"
  exit_code: 255
  status: SyntaxError
- program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // split_words(\"Hello world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"\
    Hello,world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"abcdef\") ==\
    \ 3\nfunction split_words($txt) {\n    if (strpos($txt, ' ') !== false) {\n  \
    \      return explode(' ', $txt);\n    } else if (strpos($txt, ',') !== false)\
    \ {\n        return explode(',', $txt);\n    } else {\n        $count = 0;\n \
    \       for ($i = 0; $i < strlen($txt); $i++) {\n            if (ord($txt[$i])\
    \ % 2 !== 0) {\n                $count++;\n            }\n        }\n        return\
    \ $count;\n    }\n}\necho split_words(\"Hello world!\") . '<br>';\necho split_words(\"\
    Hello,world!\") . '<br>';\necho split_words(\"abcdef\") . '<br>';\n\nfunction\
    \ candidate(...$args) {\n    return split_words(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"Hello world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,world!\"\
    ) !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"world,!\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world !\"\
    ) !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: Array<br>Array<br>3<br>
  stderr: "PHP Warning:  Array to string conversion in /tmp/tmp_j41tx0p.php on line\
    \ 24\nPHP Warning:  Array to string conversion in /tmp/tmp_j41tx0p.php on line\
    \ 25\nPHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp_j41tx0p.php:38\n\
    Stack trace:\n#0 /tmp/tmp_j41tx0p.php(43): test()\n#1 {main}\n  thrown in /tmp/tmp_j41tx0p.php\
    \ on line 38\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // split_words(\"Hello world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"\
    Hello,world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"abcdef\") ==\
    \ 3\nfunction split_words($txt) {\n    $txt = preg_replace('/\\s+/', ',', $txt);\n\
    \    $txt = preg_replace('/[^a-zA-Z,]/', '', $txt);\n    $txt = explode(',', $txt);\n\
    \    $arr = [];\n    foreach ($txt as $key => $value) {\n        if ($value !==\
    \ '') {\n            $arr[] = $value;\n        }\n    }\n    if (count($arr) ===\
    \ 0) {\n        $arr = strlen($txt[0]);\n    }\n    return $arr;\n}\n\nfunction\
    \ candidate(...$args) {\n    return split_words(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"Hello world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,world!\"\
    ) !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"world,!\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world !\"\
    ) !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpkjf2z2wo.php:30\n\
    Stack trace:\n#0 /tmp/tmpkjf2z2wo.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpkjf2z2wo.php\
    \ on line 30\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // split_words(\"Hello world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"\
    Hello,world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"abcdef\") ==\
    \ 3\nfunction split_words($txt) {\n\t$txt = str_replace(\",\", \" \", $txt);\n\
    \t$txt = str_replace(\"!\", \" \", $txt);\n\t$txt = str_replace(\"?\", \" \",\
    \ $txt);\n\t$txt = str_replace(\".\", \" \", $txt);\n\t$txt = str_replace(\";\"\
    , \" \", $txt);\n\t$txt = str_replace(\":\", \" \", $txt);\n\t$txt = str_replace(\"\
    -\", \" \", $txt);\n\t$txt = str_replace(\"_\", \" \", $txt);\n\t$txt = str_replace(\"\
    (\", \" \", $txt);\n\t$txt = str_replace(\")\", \" \", $txt);\n\t$txt = str_replace(\"\
    [\", \" \", $txt);\n\t$txt = str_replace(\"]\", \" \", $txt);\n\t$txt = str_replace(\"\
    {\", \" \", $txt);\n\t$txt = str_replace(\"}\", \" \", $txt);\n\t$txt = str_replace(\"\
    '\", \" \", $txt);\n\t$txt = str_replace('\"', \" \", $txt);\n\t$txt = str_replace(\"\
    /\", \" \", $txt);\n\t$txt = str_replace(\"\\\\\", \" \", $txt);\n\t$txt = str_replace(\"\
    |\", \" \", $txt);\n\t$txt = str_replace(\"+\", \" \", $txt);\n\t$txt = str_replace(\"\
    =\", \" \", $txt);\n\t$txt = str_replace(\"*\", \" \", $txt);\n\t$txt = str_replace(\"\
    &\", \" \", $txt);\n\t$txt = str_replace(\"^\", \" \", $txt);\n\t$txt = str_replace(\"\
    %\", \" \", $txt);\n\t$txt = str_replace(\"$\", \" \", $txt);\n\t$txt = str_replace(\"\
    #\", \" \", $txt);\n\t$txt = str_replace(\"@\", \" \", $txt);\n\t$txt = str_replace(\"\
    ~\", \" \", $txt);\n\t$txt = str_replace(\"`\", \" \", $txt);\n\t$txt = str_replace(\"\
    <\", \" \", $txt);\n\t$txt = str_replace(\">\", \" \", $txt);\n\t$\nfunction candidate(...$args)\
    \ {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\"\
    ) !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\"\
    , \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\"\
    ) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\"\
    ) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Parse error:  syntax error, unexpected token \"function\", expecting\
    \ variable or \"{\" or \"$\" in /tmp/tmpx8a9t0oj.php on line 43\n"
  exit_code: 255
  status: SyntaxError
- program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // split_words(\"Hello world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"\
    Hello,world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"abcdef\") ==\
    \ 3\nfunction split_words($txt) {\n    $arr = [];\n    if (strpos($txt, ' ') !==\
    \ false) {\n        $arr = explode(' ', $txt);\n    } elseif (strpos($txt, ',')\
    \ !== false) {\n        $arr = explode(',', $txt);\n    } else {\n        $count\
    \ = 0;\n        for ($i = 0; $i < strlen($txt); $i++) {\n            if (ord($txt[$i])\
    \ % 2 === 1) {\n                $count++;\n            }\n        }\n        $arr\
    \ = $count;\n    }\n    return $arr;\n}\necho '<pre>';\nprint_r(split_words(\"\
    Hello world!\"));\necho '</pre>';\necho '<pre>';\nprint_r(split_words(\"Hello,world!\"\
    ));\necho '</pre>';\necho '<pre>';\nprint_r(split_words(\"abcdef\"));\necho '</pre>';\n\
    function candidate(...$args) {\n    return split_words(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"Hello world!\") !== array(\"Hello\", \"\
    world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,world!\"\
    ) !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"world,!\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world !\"\
    ) !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: "<pre>Array\n(\n    [0] => Hello\n    [1] => world!\n)\n</pre><pre>Array\n\
    (\n    [0] => Hello\n    [1] => world!\n)\n</pre><pre>3</pre>"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpqdlsx9_x.php:45\n\
    Stack trace:\n#0 /tmp/tmpqdlsx9_x.php(50): test()\n#1 {main}\n  thrown in /tmp/tmpqdlsx9_x.php\
    \ on line 45\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // split_words(\"Hello world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"\
    Hello,world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"abcdef\") ==\
    \ 3\nfunction split_words($txt) {\n    $arr = str_split($txt);\n    $arr2 = [];\n\
    \    $arr3 = [];\n    $arr4 = [];\n    $arr5 = [];\n    $arr6 = [];\n    $arr7\
    \ = [];\n    $arr8 = [];\n    $arr9 = [];\n    $arr10 = [];\n    $arr11 = [];\n\
    \    $arr12 = [];\n    $arr13 = [];\n    $arr14 = [];\n    $arr15 = [];\n    $arr16\
    \ = [];\n    $arr17 = [];\n    $arr18 = [];\n    $arr19 = [];\n    $arr20 = [];\n\
    \    $arr21 = [];\n    $arr22 = [];\n    $arr23 = [];\n    $arr24 = [];\n    $arr25\
    \ = [];\n    $arr26 = [];\n    $arr27 = [];\n    $arr28 = [];\n    $arr29 = [];\n\
    \    $arr30 = [];\n    $arr31 = [];\n    $arr32 = [];\n    $arr33 = [];\n    $arr34\
    \ = [];\n    $arr35 = [];\n    $arr36 = [];\n    $arr37 = [];\n    $arr38 = [];\n\
    \    $arr39 = [];\n    $arr40 = [];\n    $arr41 = [];\n    $arr42 = [];\n    $arr43\
    \ = [];\n    $arr44 = [];\n    $arr45 = [];\n    $arr46 = [];\n    $arr47 = [];\n\
    \    $arr48 = [];\n    $arr49 = [];\n    $arr50 = [];\n    $arr51 = [];\n    $arr52\
    \ = [];\n    $arr53 = [];\n    $arr54 = [];\n    $arr55 = [];\n    $arr56 = [];\n\
    \    $arr57 = [];\n    $arr58 = [];\n    $arr59 = [];\n    $arr60 = [];\n    $arr61\
    \ = [];\n    $arr62 = [];\n    $arr63 = [];\n    $arr64 = [];\n    $arr65 = [];\n\
    \    $arr66 = [];\n    $arr67 = [];\n    $arr68 = [];\n    $arr69 = [];\n    $arr70\
    \ = [];\n    $arr71 = [];\n    $arr72 = [];\n    $arr\nfunction candidate(...$args)\
    \ {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\"\
    ) !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\"\
    , \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\"\
    ) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\"\
    ) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Parse error:  syntax error, unexpected token \"function\" in /tmp/tmp9z40cizv.php\
    \ on line 83\n"
  exit_code: 255
  status: SyntaxError
- program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // split_words(\"Hello world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"\
    Hello,world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"abcdef\") ==\
    \ 3\nfunction split_words($txt) {\n    $result = [];\n    if (strpos($txt, ' ')\
    \ !== false) {\n        $result = explode(' ', $txt);\n    } elseif (strpos($txt,\
    \ ',') !== false) {\n        $result = explode(',', $txt);\n    } else {\n   \
    \     $count = 0;\n        for ($i = 0; $i < strlen($txt); $i++) {\n         \
    \   if (ord($txt[$i]) % 2 !== 0) {\n                $count++;\n            }\n\
    \        }\n        $result = $count;\n    }\n    return $result;\n}\necho '<pre>';\n\
    print_r(split_words(\"Hello world!\"));\necho '</pre>';\necho '<pre>';\nprint_r(split_words(\"\
    Hello,world!\"));\necho '</pre>';\necho '<pre>';\nprint_r(split_words(\"abcdef\"\
    ));\necho '</pre>';\nfunction candidate(...$args) {\n    return split_words(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world!\") !== array(\"\
    Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"\
    world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world\
    \ !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: "<pre>Array\n(\n    [0] => Hello\n    [1] => world!\n)\n</pre><pre>Array\n\
    (\n    [0] => Hello\n    [1] => world!\n)\n</pre><pre>3</pre>"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp85vedzos.php:45\n\
    Stack trace:\n#0 /tmp/tmp85vedzos.php(50): test()\n#1 {main}\n  thrown in /tmp/tmp85vedzos.php\
    \ on line 45\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // split_words(\"Hello world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"\
    Hello,world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"abcdef\") ==\
    \ 3\nfunction split_words($txt) {\n    $arr = str_split($txt);\n    $arr2 = [];\n\
    \    $arr3 = [];\n    $arr4 = [];\n    $arr5 = [];\n    $arr6 = [];\n    $arr7\
    \ = [];\n    $arr8 = [];\n    $arr9 = [];\n    $arr10 = [];\n    $arr11 = [];\n\
    \    $arr12 = [];\n    $arr13 = [];\n    $arr14 = [];\n    $arr15 = [];\n    $arr16\
    \ = [];\n    $arr17 = [];\n    $arr18 = [];\n    $arr19 = [];\n    $arr20 = [];\n\
    \    $arr21 = [];\n    $arr22 = [];\n    $arr23 = [];\n    $arr24 = [];\n    $arr25\
    \ = [];\n    $arr26 = [];\n    $arr27 = [];\n    $arr28 = [];\n    $arr29 = [];\n\
    \    $arr30 = [];\n    $arr31 = [];\n    $arr32 = [];\n    $arr33 = [];\n    $arr34\
    \ = [];\n    $arr35 = [];\n    $arr36 = [];\n    $arr37 = [];\n    $arr38 = [];\n\
    \    $arr39 = [];\n    $arr40 = [];\n    $arr41 = [];\n    $arr42 = [];\n    $arr43\
    \ = [];\n    $arr44 = [];\n    $arr45 = [];\n    $arr46 = [];\n    $arr47 = [];\n\
    \    $arr48 = [];\n    $arr49 = [];\n    $arr50 = [];\n    $arr51 = [];\n    $arr52\
    \ = [];\n    $arr53 = [];\n    $arr54 = [];\n    $arr55 = [];\n    $arr56 = [];\n\
    \    $arr57 = [];\n    $arr58 = [];\n    $arr59 = [];\n    $arr60 = [];\n    $arr61\
    \ = [];\n    $arr62 = [];\n    $arr63 = [];\n    $arr64 = [];\n    $arr65 = [];\n\
    \    $arr66 = [];\n    $arr67 = [];\n    $arr68 = [];\n    $arr69 = [];\n    $arr70\
    \ = [];\n    $arr71 = [];\n    $arr72 = [];\n    $arr\nfunction candidate(...$args)\
    \ {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\"\
    ) !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\"\
    , \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\"\
    ) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\"\
    ) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Parse error:  syntax error, unexpected token \"function\" in /tmp/tmptds4jhv0.php\
    \ on line 83\n"
  exit_code: 255
  status: SyntaxError
- program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // split_words(\"Hello world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"\
    Hello,world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"abcdef\") ==\
    \ 3\nfunction split_words($txt) {\n    $result = [];\n    if (strpos($txt, ' ')\
    \ !== false) {\n        $result = explode(' ', $txt);\n    } elseif (strpos($txt,\
    \ ',') !== false) {\n        $result = explode(',', $txt);\n    } else {\n   \
    \     $result = strlen(preg_replace('/[aeiou]/i', '', $txt));\n    }\n    return\
    \ $result;\n}\necho '<pre>';\nprint_r(split_words(\"Hello world!\"));\necho '</pre>';\n\
    echo '<pre>';\nprint_r(split_words(\"Hello,world!\"));\necho '</pre>';\necho '<pre>';\n\
    print_r(split_words(\"abcdef\"));\necho '</pre>';\nfunction candidate(...$args)\
    \ {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\"\
    ) !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\"\
    , \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\"\
    ) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\"\
    ) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "<pre>Array\n(\n    [0] => Hello\n    [1] => world!\n)\n</pre><pre>Array\n\
    (\n    [0] => Hello\n    [1] => world!\n)\n</pre><pre>4</pre>"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpjfhxxiz_.php:38\n\
    Stack trace:\n#0 /tmp/tmpjfhxxiz_.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpjfhxxiz_.php\
    \ on line 38\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // split_words(\"Hello world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"\
    Hello,world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"abcdef\") ==\
    \ 3\nfunction split_words($txt) {\n    $words = preg_split('/[\\s,]+/', $txt);\n\
    \    if (count($words) > 1) {\n        return $words;\n    }\n    $letters = preg_split('//',\
    \ $txt, -1, PREG_SPLIT_NO_EMPTY);\n    $odd = 0;\n    foreach ($letters as $letter)\
    \ {\n        if (ord($letter) % 2 == 1) {\n            $odd++;\n        }\n  \
    \  }\n    return $odd;\n}\necho split_words(\"Hello world!\") . \"\\n\";\necho\
    \ split_words(\"Hello,world!\") . \"\\n\";\necho split_words(\"abcdef\") . \"\\\
    n\";\nfunction candidate(...$args) {\n    return split_words(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"Hello world!\") !== array(\"Hello\"\
    , \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"\
    world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world\
    \ !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: "Array\nArray\n3\n"
  stderr: "PHP Warning:  Array to string conversion in /tmp/tmpkiw9wf9m.php on line\
    \ 23\nPHP Warning:  Array to string conversion in /tmp/tmpkiw9wf9m.php on line\
    \ 24\nPHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpkiw9wf9m.php:33\n\
    Stack trace:\n#0 /tmp/tmpkiw9wf9m.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpkiw9wf9m.php\
    \ on line 33\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // split_words(\"Hello world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"\
    Hello,world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"abcdef\") ==\
    \ 3\nfunction split_words($txt) {\n    if (strpos($txt, ' ') !== false) {\n  \
    \      return explode(' ', $txt);\n    } elseif (strpos($txt, ',') !== false)\
    \ {\n        return explode(',', $txt);\n    } else {\n        $count = 0;\n \
    \       for ($i = 0; $i < strlen($txt); $i++) {\n            if (ord($txt[$i])\
    \ % 2 !== 0) {\n                $count++;\n            }\n        }\n        return\
    \ $count;\n    }\n}\n\nfunction candidate(...$args) {\n    return split_words(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world!\") !== array(\"\
    Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"\
    world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world\
    \ !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp8vvjayaf.php:35\n\
    Stack trace:\n#0 /tmp/tmp8vvjayaf.php(40): test()\n#1 {main}\n  thrown in /tmp/tmp8vvjayaf.php\
    \ on line 35\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // split_words(\"Hello world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"\
    Hello,world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"abcdef\") ==\
    \ 3\nfunction split_words($txt) {\n    if (strpos($txt, ' ') !== false) {\n  \
    \      return explode(' ', $txt);\n    } elseif (strpos($txt, ',') !== false)\
    \ {\n        return explode(',', $txt);\n    } else {\n        $count = 0;\n \
    \       for ($i = 0; $i < strlen($txt); $i++) {\n            if (ord($txt[$i])\
    \ % 2 !== 0) {\n                $count++;\n            }\n        }\n        return\
    \ $count;\n    }\n}\necho split_words(\"Hello world!\");\necho '<br>';\necho split_words(\"\
    Hello,world!\");\necho '<br>';\necho split_words(\"abcdef\");\necho '<br>';\n\
    echo split_words(\"abcdefg\");\necho '<br>';\necho split_words(\"abcdefgh\");\n\
    echo '<br>';\necho split_words(\"abcdefghi\");\necho '<br>';\necho split_words(\"\
    abcdefghij\");\necho '<br>';\necho split_words(\"abcdefghijk\");\necho '<br>';\n\
    echo split_words(\"abcdefghijkl\");\necho '<br>';\necho split_words(\"abcdefghijklm\"\
    );\necho '<br>';\necho split_words(\"abcdefghijklmn\");\necho '<br>';\necho split_words(\"\
    abcdefghijklmno\");\necho '<br>';\necho split_words(\"abcdefghijklmnop\");\necho\
    \ '<br>';\necho split_words(\"abcdefghijklmnopq\");\necho '<br>';\necho split_words(\"\
    abcdefghijklmnopqr\");\necho '<br>';\necho split_words(\"abcdefghijklmnopqrs\"\
    );\necho '<br>';\necho split_words(\"abcdefghijklmnopqrst\");\necho '<br>';\n\
    echo split_words(\"abcdefghijklmnopqrstu\");\necho '<br>';\necho split_words(\"\
    abcdefghijklmnopqrstuv\");\necho '<br>';\necho split\nfunction candidate(...$args)\
    \ {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\"\
    ) !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\"\
    , \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\"\
    ) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\"\
    ) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Parse error:  syntax error, unexpected token \"function\", expecting\
    \ \",\" or \";\" in /tmp/tmpf61eu3fr.php on line 63\n"
  exit_code: 255
  status: SyntaxError
- program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // split_words(\"Hello world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"\
    Hello,world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"abcdef\") ==\
    \ 3\nfunction split_words($txt) {\n    $txt = str_replace(\",\", \" \", $txt);\n\
    \    $txt = str_replace(\"!\", \" \", $txt);\n    $txt = str_replace(\"?\", \"\
    \ \", $txt);\n    $txt = str_replace(\".\", \" \", $txt);\n    $txt = str_replace(\"\
    ;\", \" \", $txt);\n    $txt = str_replace(\":\", \" \", $txt);\n    $txt = str_replace(\"\
    -\", \" \", $txt);\n    $txt = str_replace(\"_\", \" \", $txt);\n    $txt = str_replace(\"\
    +\", \" \", $txt);\n    $txt = str_replace(\"=\", \" \", $txt);\n    $txt = str_replace(\"\
    *\", \" \", $txt);\n    $txt = str_replace(\"/\", \" \", $txt);\n    $txt = str_replace(\"\
    \\\\\", \" \", $txt);\n    $txt = str_replace(\"|\", \" \", $txt);\n    $txt =\
    \ str_replace(\"(\", \" \", $txt);\n    $txt = str_replace(\")\", \" \", $txt);\n\
    \    $txt = str_replace(\"[\", \" \", $txt);\n    $txt = str_replace(\"]\", \"\
    \ \", $txt);\n    $txt = str_replace(\"{\", \" \", $txt);\n    $txt = str_replace(\"\
    }\", \" \", $txt);\n    $txt = str_replace(\"<\", \" \", $txt);\n    $txt = str_replace(\"\
    >\", \" \", $txt);\n    $txt = str_replace(\"%\", \" \", $txt);\n    $txt = str_replace(\"\
    $\", \" \", $txt);\n    $txt = str_replace(\"#\", \" \", $txt);\n    $txt = str_replace(\"\
    @\", \" \", $txt);\n    $txt = str_replace(\"&\", \" \", $txt);\n    $txt = str_replace(\"\
    ^\", \" \", $txt);\n    $txt = str_replace(\"~\", \" \", $txt);\n    $txt = str_replace(\"\
    `\", \" \", $txt);\n    $txt = str_replace(\"'\", \" \", $txt);\n    $txt = str_replace(\"\
    \\\"\", \" \", $txt);\n    $\nfunction candidate(...$args) {\n    return split_words(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world!\") !== array(\"\
    Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"\
    world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world\
    \ !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Parse error:  syntax error, unexpected token \"function\", expecting\
    \ variable or \"{\" or \"$\" in /tmp/tmpppajerdt.php on line 43\n"
  exit_code: 255
  status: SyntaxError
- program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // split_words(\"Hello world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"\
    Hello,world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"abcdef\") ==\
    \ 3\nfunction split_words($txt) {\n\tif (strpos($txt, ' ') !== false) {\n\t\t\
    return explode(' ', $txt);\n\t} elseif (strpos($txt, ',') !== false) {\n\t\treturn\
    \ explode(',', $txt);\n\t} else {\n\t\t$count = 0;\n\t\tfor ($i = 0; $i < strlen($txt);\
    \ $i++) {\n\t\t\tif (ord($txt[$i]) % 2 != 0) {\n\t\t\t\t$count++;\n\t\t\t}\n\t\
    \t}\n\t\treturn $count;\n\t}\n}\necho split_words(\"Hello world!\");\necho '<br>';\n\
    echo split_words(\"Hello,world!\");\necho '<br>';\necho split_words(\"abcdef\"\
    );\nfunction candidate(...$args) {\n    return split_words(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"Hello world!\") !== array(\"Hello\", \"\
    world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,world!\"\
    ) !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"world,!\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world !\"\
    ) !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: Array<br>Array<br>3
  stderr: "PHP Warning:  Array to string conversion in /tmp/tmp6p6r0zkg.php on line\
    \ 24\nPHP Warning:  Array to string conversion in /tmp/tmp6p6r0zkg.php on line\
    \ 26\nPHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp6p6r0zkg.php:39\n\
    Stack trace:\n#0 /tmp/tmp6p6r0zkg.php(44): test()\n#1 {main}\n  thrown in /tmp/tmp6p6r0zkg.php\
    \ on line 39\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // split_words(\"Hello world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"\
    Hello,world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"abcdef\") ==\
    \ 3\nfunction split_words($txt) {\n    $arr = str_split($txt);\n    $result =\
    \ [];\n    $result2 = [];\n    $result3 = [];\n    $result4 = [];\n    $result5\
    \ = [];\n    $result6 = [];\n    $result7 = [];\n    $result8 = [];\n    $result9\
    \ = [];\n    $result10 = [];\n    $result11 = [];\n    $result12 = [];\n    $result13\
    \ = [];\n    $result14 = [];\n    $result15 = [];\n    $result16 = [];\n    $result17\
    \ = [];\n    $result18 = [];\n    $result19 = [];\n    $result20 = [];\n    $result21\
    \ = [];\n    $result22 = [];\n    $result23 = [];\n    $result24 = [];\n    $result25\
    \ = [];\n    $result26 = [];\n    $result27 = [];\n    $result28 = [];\n    $result29\
    \ = [];\n    $result30 = [];\n    $result31 = [];\n    $result32 = [];\n    $result33\
    \ = [];\n    $result34 = [];\n    $result35 = [];\n    $result36 = [];\n    $result37\
    \ = [];\n    $result38 = [];\n    $result39 = [];\n    $result40 = [];\n    $result41\
    \ = [];\n    $result42 = [];\n    $result43 = [];\n    $result44 = [];\n    $result45\
    \ = [];\n    $result46 = [];\n    $result47 = [];\n    $result48 = [];\n    $result49\
    \ = [];\n    $result50 = [];\n    $result51 = [];\n    $result52 = [];\n    $result53\
    \ = [];\n    $result54 = [];\n    $result55 = [];\n    $result56 = [];\n    $result57\
    \ = [];\n    $result58 = [];\n    $result59 = [];\n    $result60 = [];\n    $result61\
    \ = [];\n    $result62 = [];\n    $result63 = [];\n    $result64 = [];\n    $result65\
    \ = [];\n    $result66 = [];\n    $result67 = [];\n    $result68 = [];\n    $result69\
    \ = [];\n    $result70 = [];\n    $result71 = [];\n    $result72\nfunction candidate(...$args)\
    \ {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\"\
    ) !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\"\
    , \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\"\
    ) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\"\
    ) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Parse error:  syntax error, unexpected token \"function\" in /tmp/tmppb84gk_l.php\
    \ on line 83\n"
  exit_code: 255
  status: SyntaxError
- program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // split_words(\"Hello world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"\
    Hello,world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"abcdef\") ==\
    \ 3\nfunction split_words($txt) {\n    $txt = str_replace(\",\", \" \", $txt);\n\
    \    $txt = str_replace(\"!\", \" \", $txt);\n    $txt = str_replace(\".\", \"\
    \ \", $txt);\n    $txt = str_replace(\"?\", \" \", $txt);\n    $txt = str_replace(\"\
    ;\", \" \", $txt);\n    $txt = str_replace(\":\", \" \", $txt);\n    $txt = str_replace(\"\
    -\", \" \", $txt);\n    $txt = str_replace(\"_\", \" \", $txt);\n    $txt = str_replace(\"\
    \  \", \" \", $txt);\n    $txt = str_replace(\"  \", \" \", $txt);\n    $txt =\
    \ str_replace(\"  \", \" \", $txt);\n    $txt = str_replace(\"  \", \" \", $txt);\n\
    \    $txt = str_replace(\"  \", \" \", $txt);\n    $txt = str_replace(\"  \",\
    \ \" \", $txt);\n    $txt = str_replace(\"  \", \" \", $txt);\n    $txt = str_replace(\"\
    \  \", \" \", $txt);\n    $txt = str_replace(\"  \", \" \", $txt);\n    $txt =\
    \ str_replace(\"  \", \" \", $txt);\n    $txt = str_replace(\"  \", \" \", $txt);\n\
    \    $txt = str_replace(\"  \", \" \", $txt);\n    $txt = str_replace(\"  \",\
    \ \" \", $txt);\n    $txt = str_replace(\"  \", \" \", $txt);\n    $txt = str_replace(\"\
    \  \", \" \", $txt);\n    $txt = str_replace(\"  \", \" \", $txt);\n    $txt =\
    \ str_replace(\"  \", \" \", $txt);\n    $txt = str_replace(\"  \", \" \", $txt);\n\
    \    $txt = str_replace(\"  \", \" \", $txt);\n    $txt = str_replace(\"  \",\
    \ \" \", $txt);\n    $txt = str_replace(\"  \", \" \", $txt);\n    $txt = str_replace(\"\
    \  \", \" \", $txt);\n    $txt = str_replace(\"  \", \" \", $txt);\n    $txt =\
    \ str_replace(\"  \", \" \", $txt);\n    $\nfunction candidate(...$args) {\n \
    \   return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\"\
    ) !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\"\
    , \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\"\
    ) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\"\
    ) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Parse error:  syntax error, unexpected token \"function\", expecting\
    \ variable or \"{\" or \"$\" in /tmp/tmpmby_1hkp.php on line 43\n"
  exit_code: 255
  status: SyntaxError
- program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // split_words(\"Hello world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"\
    Hello,world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"abcdef\") ==\
    \ 3\nfunction split_words($txt) {\n    $txt = str_replace(\" \", \",\", $txt);\n\
    \    $txt = str_replace(\",\", \" \", $txt);\n    $txt = explode(\" \", $txt);\n\
    \    $odd = 0;\n    foreach ($txt as $value) {\n        if (ord($value) % 2 !=\
    \ 0) {\n            $odd++;\n        }\n    }\n    return $odd;\n}\necho split_words(\"\
    Hello world!\");\necho \"<br>\";\necho split_words(\"Hello,world!\");\necho \"\
    <br>\";\necho split_words(\"abcdef\");\nfunction candidate(...$args) {\n    return\
    \ split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hello\
    \ world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\")) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\"\
    ) !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\"\
    , \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\"\
    ) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\"\
    ) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: 1<br>1<br>1
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpnf6pi_fr.php:31\n\
    Stack trace:\n#0 /tmp/tmpnf6pi_fr.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpnf6pi_fr.php\
    \ on line 31\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // split_words(\"Hello world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"\
    Hello,world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"abcdef\") ==\
    \ 3\nfunction split_words($txt) {\n    if (strpos($txt, ' ') !== false) {\n  \
    \      return explode(' ', $txt);\n    } elseif (strpos($txt, ',') !== false)\
    \ {\n        return explode(',', $txt);\n    } else {\n        $count = 0;\n \
    \       for ($i = 0; $i < strlen($txt); $i++) {\n            if (ord($txt[$i])\
    \ % 2 !== 0) {\n                $count++;\n            }\n        }\n        return\
    \ $count;\n    }\n}\necho split_words(\"Hello world!\") . '<br>';\necho split_words(\"\
    Hello,world!\") . '<br>';\necho split_words(\"abcdef\") . '<br>';\necho split_words(\"\
    abcdefghijklmnopqrstuvwxyz\") . '<br>';\necho split_words(\"abcdefghijklmnopqrstuvwxyz,abcdefghijklmnopqrstuvwxyz\"\
    ) . '<br>';\necho split_words(\"abcdefghijklmnopqrstuvwxyz abcdefghijklmnopqrstuvwxyz\"\
    ) . '<br>';\n\nfunction candidate(...$args) {\n    return split_words(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world!\") !== array(\"\
    Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"\
    world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world\
    \ !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: Array<br>Array<br>3<br>13<br>Array<br>Array<br>
  stderr: "PHP Warning:  Array to string conversion in /tmp/tmpnf3pq4c5.php on line\
    \ 24\nPHP Warning:  Array to string conversion in /tmp/tmpnf3pq4c5.php on line\
    \ 25\nPHP Warning:  Array to string conversion in /tmp/tmpnf3pq4c5.php on line\
    \ 28\nPHP Warning:  Array to string conversion in /tmp/tmpnf3pq4c5.php on line\
    \ 29\nPHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpnf3pq4c5.php:41\n\
    Stack trace:\n#0 /tmp/tmpnf3pq4c5.php(46): test()\n#1 {main}\n  thrown in /tmp/tmpnf3pq4c5.php\
    \ on line 41\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // split_words(\"Hello world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"\
    Hello,world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"abcdef\") ==\
    \ 3\nfunction split_words($txt) {\n    if (strpos($txt, ' ') !== false) {\n  \
    \      return explode(' ', $txt);\n    } elseif (strpos($txt, ',') !== false)\
    \ {\n        return explode(',', $txt);\n    } else {\n        $count = 0;\n \
    \       for ($i = 0; $i < strlen($txt); $i++) {\n            if (ord($txt[$i])\
    \ % 2 !== 0) {\n                $count++;\n            }\n        }\n        return\
    \ $count;\n    }\n}\necho split_words(\"Hello world!\");\necho '<br>';\necho split_words(\"\
    Hello,world!\");\necho '<br>';\necho split_words(\"abcdef\");\necho '<br>';\n\
    echo split_words(\"abcdef,ghijkl\");\necho '<br>';\necho split_words(\"abcdef\
    \ ghijkl\");\necho '<br>';\necho split_words(\"abcdef ghijkl,mnopqr\");\necho\
    \ '<br>';\necho split_words(\"abcdef ghijkl,mnopqr stuvwx\");\necho '<br>';\n\
    echo split_words(\"abcdef ghijkl,mnopqr stuvwx yz\");\necho '<br>';\necho split_words(\"\
    abcdef ghijkl,mnopqr stuvwx yz,ABCDEF\");\necho '<br>';\necho split_words(\"abcdef\
    \ ghijkl,mnopqr stuvwx yz,ABCDEF GHIJKL\");\necho '<br>';\necho split_words(\"\
    abcdef ghijkl,mnopqr stuvwx yz,ABCDEF GHIJKL,MNOPQR\");\necho '<br>';\necho split_words(\"\
    abcdef ghijkl,mnopqr stuvwx yz,ABCDEF GHIJKL,MNOPQR STUVWX\");\necho '<br>';\n\
    echo split_words(\"abcdef ghijkl,mnopqr stuvwx yz,ABCDEF GHIJKL,MNOPQR STUVWX\
    \ YZ\");\necho '<br>';\necho split_words(\"abcdef ghijkl,mnop\nfunction candidate(...$args)\
    \ {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\"\
    ) !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\"\
    , \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\"\
    ) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\"\
    ) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Parse error:  syntax error, unexpected identifier \"Hello\", expecting\
    \ \")\" in /tmp/tmpgmjfn074.php on line 56\n"
  exit_code: 255
  status: SyntaxError
- program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // split_words(\"Hello world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"\
    Hello,world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"abcdef\") ==\
    \ 3\nfunction split_words($txt) {\n    $txt = str_replace(',', ' ', $txt);\n \
    \   $txt = str_replace('!', ' ', $txt);\n    $txt = str_replace('?', ' ', $txt);\n\
    \    $txt = str_replace('.', ' ', $txt);\n    $txt = str_replace(';', ' ', $txt);\n\
    \    $txt = str_replace(':', ' ', $txt);\n    $txt = str_replace('-', ' ', $txt);\n\
    \    $txt = str_replace('_', ' ', $txt);\n    $txt = str_replace('(', ' ', $txt);\n\
    \    $txt = str_replace(')', ' ', $txt);\n    $txt = str_replace('[', ' ', $txt);\n\
    \    $txt = str_replace(']', ' ', $txt);\n    $txt = str_replace('{', ' ', $txt);\n\
    \    $txt = str_replace('}', ' ', $txt);\n    $txt = str_replace('\"', ' ', $txt);\n\
    \    $txt = str_replace(\"'\", ' ', $txt);\n    $txt = str_replace('/', ' ', $txt);\n\
    \    $txt = str_replace('\\\\', ' ', $txt);\n    $txt = str_replace('+', ' ',\
    \ $txt);\n    $txt = str_replace('=', ' ', $txt);\n    $txt = str_replace('*',\
    \ ' ', $txt);\n    $txt = str_replace('&', ' ', $txt);\n    $txt = str_replace('^',\
    \ ' ', $txt);\n    $txt = str_replace('%', ' ', $txt);\n    $txt = str_replace('$',\
    \ ' ', $txt);\n    $txt = str_replace('#', ' ', $txt);\n    $txt = str_replace('@',\
    \ ' ', $txt);\n    $txt = str_replace('!', ' ', $txt);\n    $txt = str_replace('~',\
    \ ' ', $txt);\n    $txt = str_replace('`', ' ', $txt);\n    $txt = str_replace('|',\
    \ ' ', $txt);\n    $txt = str_replace('>', ' ', $txt);\nfunction candidate(...$args)\
    \ {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\"\
    ) !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\"\
    , \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\"\
    ) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\"\
    ) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Parse error:  Unclosed '{' on line 9 in /tmp/tmp0nlf_xet.php on line\
    \ 57\n"
  exit_code: 255
  status: SyntaxError
- program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // split_words(\"Hello world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"\
    Hello,world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"abcdef\") ==\
    \ 3\nfunction split_words($txt) {\n    $arr = str_split($txt);\n    $arr2 = [];\n\
    \    $arr3 = [];\n    $arr4 = [];\n    $arr5 = [];\n    $arr6 = [];\n    $arr7\
    \ = [];\n    $arr8 = [];\n    $arr9 = [];\n    $arr10 = [];\n    $arr11 = [];\n\
    \    $arr12 = [];\n    $arr13 = [];\n    $arr14 = [];\n    $arr15 = [];\n    $arr16\
    \ = [];\n    $arr17 = [];\n    $arr18 = [];\n    $arr19 = [];\n    $arr20 = [];\n\
    \    $arr21 = [];\n    $arr22 = [];\n    $arr23 = [];\n    $arr24 = [];\n    $arr25\
    \ = [];\n    $arr26 = [];\n    $arr27 = [];\n    $arr28 = [];\n    $arr29 = [];\n\
    \    $arr30 = [];\n    $arr31 = [];\n    $arr32 = [];\n    $arr33 = [];\n    $arr34\
    \ = [];\n    $arr35 = [];\n    $arr36 = [];\n    $arr37 = [];\n    $arr38 = [];\n\
    \    $arr39 = [];\n    $arr40 = [];\n    $arr41 = [];\n    $arr42 = [];\n    $arr43\
    \ = [];\n    $arr44 = [];\n    $arr45 = [];\n    $arr46 = [];\n    $arr47 = [];\n\
    \    $arr48 = [];\n    $arr49 = [];\n    $arr50 = [];\n    $arr51 = [];\n    $arr52\
    \ = [];\n    $arr53 = [];\n    $arr54 = [];\n    $arr55 = [];\n    $arr56 = [];\n\
    \    $arr57 = [];\n    $arr58 = [];\n    $arr59 = [];\n    $arr60 = [];\n    $arr61\
    \ = [];\n    $arr62 = [];\n    $arr63 = [];\n    $arr64 = [];\n    $arr65 = [];\n\
    \    $arr66 = [];\n    $arr67 = [];\n    $arr68 = [];\n    $arr69 = [];\n    $arr70\
    \ = [];\n    $arr71 = [];\n    $arr72 = [];\n    $arr\nfunction candidate(...$args)\
    \ {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\"\
    ) !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\"\
    , \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\"\
    ) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\"\
    ) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Parse error:  syntax error, unexpected token \"function\" in /tmp/tmp36i7w407.php\
    \ on line 83\n"
  exit_code: 255
  status: SyntaxError
- program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // split_words(\"Hello world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"\
    Hello,world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"abcdef\") ==\
    \ 3\nfunction split_words($txt) {\n    if (strpos($txt, ' ') !== false) {\n  \
    \      return explode(' ', $txt);\n    } elseif (strpos($txt, ',') !== false)\
    \ {\n        return explode(',', $txt);\n    } else {\n        $count = 0;\n \
    \       for ($i = 0; $i < strlen($txt); $i++) {\n            if (ord($txt[$i])\
    \ % 2 !== 0) {\n                $count++;\n            }\n        }\n        return\
    \ $count;\n    }\n}\n\necho split_words(\"Hello world!\") . \"<br>\";\necho split_words(\"\
    Hello,world!\") . \"<br>\";\necho split_words(\"abcdef\") . \"<br>\";\necho split_words(\"\
    abcdefghijklmnopqrstuvwxyz\") . \"<br>\";\necho split_words(\"abcdefghijklmnopqrstuvwxyz,1234567890\"\
    ) . \"<br>\";\necho split_words(\"abcdefghijklmnopqrstuvwxyz,1234567890,!@#$%^&*()\"\
    ) . \"<br>\";\necho split_words(\"abcdefghijklmnopqrstuvwxyz,1234567890,!@#$%^&*(),ABCDEFGHIJKLMNOPQRSTUVWXYZ\"\
    ) . \"<br>\";\necho split_words(\"abcdefghijklmnopqrstuvwxyz,1234567890,!@#$%^&*(),ABCDEFGHIJKLMNOPQRSTUVWXYZ,abcdefghijklmnopqrstuvwxyz\"\
    ) . \"<br>\";\necho split_words(\"abcdefghijklmnopqrstuvwxyz,1234567890,!@#$%^&*(),ABCDEFGHIJKLMNOPQRSTUVWXYZ,abcdefghijklmnopqrstuvwxyz,ABCDEFGHIJKLMNOPQRSTUVWXYZ\"\
    ) . \"<br>\";\necho split_words(\"abcdefghijklmnopqrstuvwxyz,1234567890,!@#$%^\n\
    function candidate(...$args) {\n    return split_words(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"Hello world!\") !== array(\"Hello\", \"\
    world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,world!\"\
    ) !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"world,!\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world !\"\
    ) !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Parse error:  syntax error, unexpected identifier \"Hello\", expecting\
    \ \")\" in /tmp/tmpb_vxwi0d.php on line 40\n"
  exit_code: 255
  status: SyntaxError
- program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // split_words(\"Hello world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"\
    Hello,world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"abcdef\") ==\
    \ 3\nfunction split_words($txt) {\n    if (strpos($txt, ' ') !== false) {\n  \
    \      return explode(' ', $txt);\n    } elseif (strpos($txt, ',') !== false)\
    \ {\n        return explode(',', $txt);\n    } else {\n        $count = 0;\n \
    \       for ($i = 0; $i < strlen($txt); $i++) {\n            if (ord($txt[$i])\
    \ % 2 !== 0) {\n                $count++;\n            }\n        }\n        return\
    \ $count;\n    }\n}\necho split_words(\"Hello world!\") . '<br>';\necho split_words(\"\
    Hello,world!\") . '<br>';\necho split_words(\"abcdef\") . '<br>';\necho split_words(\"\
    abcdef,ghijkl\") . '<br>';\necho split_words(\"abcdef ghijkl\") . '<br>';\necho\
    \ split_words(\"abcdef ghijkl,mnopqr\") . '<br>';\necho split_words(\"abcdef ghijkl,mnopqr\
    \ stuvwx\") . '<br>';\necho split_words(\"abcdef ghijkl,mnopqr stuvwx,yz\") .\
    \ '<br>';\necho split_words(\"abcdef ghijkl,mnopqr stuvwx,yz,12345\") . '<br>';\n\
    echo split_words(\"abcdef ghijkl,mnopqr stuvwx,yz,12345,67890\") . '<br>';\necho\
    \ split_words(\"abcdef ghijkl,mnopqr stuvwx,yz,12345,67890,ABCDE\") . '<br>';\n\
    echo split_words(\"abcdef ghijkl,mnopqr stuvwx,yz,12345,67890,ABCDE,FGHIJ\") .\
    \ '<br>';\necho split_words(\"abcdef ghijkl,mnopqr stuvwx,yz,12345,67890,ABCDE,FGHIJ,KLMNO\"\
    ) . '<br>';\necho split_words(\"abcdef ghijkl,mnopqr stuvwx,yz,12345,67890,ABCDE,FGHIJ,\n\
    function candidate(...$args) {\n    return split_words(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"Hello world!\") !== array(\"Hello\", \"\
    world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,world!\"\
    ) !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"world,!\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world !\"\
    ) !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Parse error:  syntax error, unexpected identifier \"Hello\", expecting\
    \ \")\" in /tmp/tmp5qvjjh0l.php on line 43\n"
  exit_code: 255
  status: SyntaxError
- program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // split_words(\"Hello world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"\
    Hello,world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"abcdef\") ==\
    \ 3\nfunction split_words($txt) {\n    if (strpos($txt, ' ') !== false) {\n  \
    \      return explode(' ', $txt);\n    } elseif (strpos($txt, ',') !== false)\
    \ {\n        return explode(',', $txt);\n    } else {\n        $odd = 0;\n   \
    \     for ($i = 0; $i < strlen($txt); $i++) {\n            if ($i % 2 !== 0) {\n\
    \                $odd++;\n            }\n        }\n        return $odd;\n   \
    \ }\n}\n\nfunction candidate(...$args) {\n    return split_words(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world!\") !== array(\"\
    Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"\
    world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world\
    \ !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmppl4arl0y.php:36\n\
    Stack trace:\n#0 /tmp/tmppl4arl0y.php(40): test()\n#1 {main}\n  thrown in /tmp/tmppl4arl0y.php\
    \ on line 36\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // split_words(\"Hello world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"\
    Hello,world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"abcdef\") ==\
    \ 3\nfunction split_words($txt) {\n    $txt = str_replace(',', ' ', $txt);\n \
    \   $txt = str_replace('!', ' ', $txt);\n    $txt = str_replace('?', ' ', $txt);\n\
    \    $txt = str_replace('.', ' ', $txt);\n    $txt = str_replace('-', ' ', $txt);\n\
    \    $txt = str_replace('_', ' ', $txt);\n    $txt = str_replace(':', ' ', $txt);\n\
    \    $txt = str_replace(';', ' ', $txt);\n    $txt = str_replace('\"', ' ', $txt);\n\
    \    $txt = str_replace(\"'\", ' ', $txt);\n    $txt = str_replace('(', ' ', $txt);\n\
    \    $txt = str_replace(')', ' ', $txt);\n    $txt = str_replace('[', ' ', $txt);\n\
    \    $txt = str_replace(']', ' ', $txt);\n    $txt = str_replace('{', ' ', $txt);\n\
    \    $txt = str_replace('}', ' ', $txt);\n    $txt = str_replace('/', ' ', $txt);\n\
    \    $txt = str_replace('\\\\', ' ', $txt);\n    $txt = str_replace('|', ' ',\
    \ $txt);\n    $txt = str_replace('+', ' ', $txt);\n    $txt = str_replace('=',\
    \ ' ', $txt);\n    $txt = str_replace('*', ' ', $txt);\n    $txt = str_replace('&',\
    \ ' ', $txt);\n    $txt = str_replace('^', ' ', $txt);\n    $txt = str_replace('%',\
    \ ' ', $txt);\n    $txt = str_replace('$', ' ', $txt);\n    $txt = str_replace('#',\
    \ ' ', $txt);\n    $txt = str_replace('@', ' ', $txt);\n    $txt = str_replace('~',\
    \ ' ', $txt);\n    $txt = str_replace('`', ' ', $txt);\n    $txt = str_replace('<',\
    \ ' ', $txt);\n    $txt = str_replace('>', ' ', $txt);\nfunction candidate(...$args)\
    \ {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\"\
    ) !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\"\
    , \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\"\
    ) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\"\
    ) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Parse error:  Unclosed '{' on line 9 in /tmp/tmpx0je9olu.php on line\
    \ 57\n"
  exit_code: 255
  status: SyntaxError
- program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // split_words(\"Hello world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"\
    Hello,world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"abcdef\") ==\
    \ 3\nfunction split_words($txt) {\n    $txt = str_replace(',', ' ', $txt);\n \
    \   $txt = str_replace('!', ' ', $txt);\n    $txt = str_replace('?', ' ', $txt);\n\
    \    $txt = str_replace('.', ' ', $txt);\n    $txt = str_replace('-', ' ', $txt);\n\
    \    $txt = str_replace('_', ' ', $txt);\n    $txt = str_replace('/', ' ', $txt);\n\
    \    $txt = str_replace('\\\\', ' ', $txt);\n    $txt = str_replace('\\'', ' ',\
    \ $txt);\n    $txt = str_replace('\"', ' ', $txt);\n    $txt = str_replace('(',\
    \ ' ', $txt);\n    $txt = str_replace(')', ' ', $txt);\n    $txt = str_replace('[',\
    \ ' ', $txt);\n    $txt = str_replace(']', ' ', $txt);\n    $txt = str_replace('{',\
    \ ' ', $txt);\n    $txt = str_replace('}', ' ', $txt);\n    $txt = str_replace('*',\
    \ ' ', $txt);\n    $txt = str_replace('&', ' ', $txt);\n    $txt = str_replace('^',\
    \ ' ', $txt);\n    $txt = str_replace('%', ' ', $txt);\n    $txt = str_replace('$',\
    \ ' ', $txt);\n    $txt = str_replace('#', ' ', $txt);\n    $txt = str_replace('@',\
    \ ' ', $txt);\n    $txt = str_replace('!', ' ', $txt);\n    $txt = str_replace('~',\
    \ ' ', $txt);\n    $txt = str_replace('`', ' ', $txt);\n    $txt = str_replace('+',\
    \ ' ', $txt);\n    $txt = str_replace('=', ' ', $txt);\n    $txt = str_replace('|',\
    \ ' ', $txt);\n    $txt = str_replace(';', ' ', $txt);\n    $txt = str_replace(':',\
    \ ' ', $txt);\n    $txt = str_replace('<', ' ', $txt);\nfunction candidate(...$args)\
    \ {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\"\
    ) !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\"\
    , \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\"\
    ) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\"\
    ) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Parse error:  Unclosed '{' on line 9 in /tmp/tmp72kcagj7.php on line\
    \ 57\n"
  exit_code: 255
  status: SyntaxError
- program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // split_words(\"Hello world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"\
    Hello,world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"abcdef\") ==\
    \ 3\nfunction split_words($txt) {\n    if (strpos($txt, ' ') !== false) {\n  \
    \      return explode(' ', $txt);\n    } elseif (strpos($txt, ',') !== false)\
    \ {\n        return explode(',', $txt);\n    } else {\n        $count = 0;\n \
    \       for ($i = 0; $i < strlen($txt); $i++) {\n            if (ord($txt[$i])\
    \ % 2 !== 0) {\n                $count++;\n            }\n        }\n        return\
    \ $count;\n    }\n}\n\nfunction candidate(...$args) {\n    return split_words(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world!\") !== array(\"\
    Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"\
    world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world\
    \ !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpw4l6sqp0.php:35\n\
    Stack trace:\n#0 /tmp/tmpw4l6sqp0.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpw4l6sqp0.php\
    \ on line 35\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // split_words(\"Hello world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"\
    Hello,world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"abcdef\") ==\
    \ 3\nfunction split_words($txt) {\n    $arr = str_split($txt);\n    $arr2 = [];\n\
    \    $arr3 = [];\n    $arr4 = [];\n    $arr5 = [];\n    $arr6 = [];\n    $arr7\
    \ = [];\n    $arr8 = [];\n    $arr9 = [];\n    $arr10 = [];\n    $arr11 = [];\n\
    \    $arr12 = [];\n    $arr13 = [];\n    $arr14 = [];\n    $arr15 = [];\n    $arr16\
    \ = [];\n    $arr17 = [];\n    $arr18 = [];\n    $arr19 = [];\n    $arr20 = [];\n\
    \    $arr21 = [];\n    $arr22 = [];\n    $arr23 = [];\n    $arr24 = [];\n    $arr25\
    \ = [];\n    $arr26 = [];\n    $arr27 = [];\n    $arr28 = [];\n    $arr29 = [];\n\
    \    $arr30 = [];\n    $arr31 = [];\n    $arr32 = [];\n    $arr33 = [];\n    $arr34\
    \ = [];\n    $arr35 = [];\n    $arr36 = [];\n    $arr37 = [];\n    $arr38 = [];\n\
    \    $arr39 = [];\n    $arr40 = [];\n    $arr41 = [];\n    $arr42 = [];\n    $arr43\
    \ = [];\n    $arr44 = [];\n    $arr45 = [];\n    $arr46 = [];\n    $arr47 = [];\n\
    \    $arr48 = [];\n    $arr49 = [];\n    $arr50 = [];\n    $arr51 = [];\n    $arr52\
    \ = [];\n    $arr53 = [];\n    $arr54 = [];\n    $arr55 = [];\n    $arr56 = [];\n\
    \    $arr57 = [];\n    $arr58 = [];\n    $arr59 = [];\n    $arr60 = [];\n    $arr61\
    \ = [];\n    $arr62 = [];\n    $arr63 = [];\n    $arr64 = [];\n    $arr65 = [];\n\
    \    $arr66 = [];\n    $arr67 = [];\n    $arr68 = [];\n    $arr69 = [];\n    $arr70\
    \ = [];\n    $arr71 = [];\n    $arr72 = [];\n    $arr\nfunction candidate(...$args)\
    \ {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\"\
    ) !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\"\
    , \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\"\
    ) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\"\
    ) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Parse error:  syntax error, unexpected token \"function\" in /tmp/tmpnij22zh2.php\
    \ on line 83\n"
  exit_code: 255
  status: SyntaxError
- program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // split_words(\"Hello world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"\
    Hello,world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"abcdef\") ==\
    \ 3\nfunction split_words($txt) {\n    $result = [];\n    $txt = str_replace(',',\
    \ ' ', $txt);\n    $txt = str_replace('.', ' ', $txt);\n    $txt = str_replace('!',\
    \ ' ', $txt);\n    $txt = str_replace('?', ' ', $txt);\n    $txt = str_replace('-',\
    \ ' ', $txt);\n    $txt = str_replace('_', ' ', $txt);\n    $txt = str_replace('(',\
    \ ' ', $txt);\n    $txt = str_replace(')', ' ', $txt);\n    $txt = str_replace('\"\
    ', ' ', $txt);\n    $txt = str_replace(\"'\", ' ', $txt);\n    $txt = str_replace(':',\
    \ ' ', $txt);\n    $txt = str_replace(';', ' ', $txt);\n    $txt = str_replace('/',\
    \ ' ', $txt);\n    $txt = str_replace('\\\\', ' ', $txt);\n    $txt = str_replace('[',\
    \ ' ', $txt);\n    $txt = str_replace(']', ' ', $txt);\n    $txt = str_replace('{',\
    \ ' ', $txt);\n    $txt = str_replace('}', ' ', $txt);\n    $txt = str_replace('|',\
    \ ' ', $txt);\n    $txt = str_replace('=', ' ', $txt);\n    $txt = str_replace('+',\
    \ ' ', $txt);\n    $txt = str_replace('*', ' ', $txt);\n    $txt = str_replace('&',\
    \ ' ', $txt);\n    $txt = str_replace('%', ' ', $txt);\n    $txt = str_replace('$',\
    \ ' ', $txt);\n    $txt = str_replace('#', ' ', $txt);\n    $txt = str_replace('@',\
    \ ' ', $txt);\n    $txt = str_replace('^', ' ', $txt);\n    $txt = str_replace('~',\
    \ ' ', $txt);\n    $txt = str_replace('`', ' ', $txt);\n    $txt = str_replace('<',\
    \ ' ', $txt);\n    $txt = str_replace('>\nfunction candidate(...$args) {\n   \
    \ return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\"\
    ) !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\"\
    , \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\"\
    ) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\"\
    ) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Parse error:  syntax error, unexpected string content \">\" in /tmp/tmpg62gtbb2.php\
    \ on line 42\n"
  exit_code: 255
  status: SyntaxError
- program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // split_words(\"Hello world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"\
    Hello,world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"abcdef\") ==\
    \ 3\nfunction split_words($txt) {\n    if (strpos($txt, ' ') !== false) {\n  \
    \      return explode(' ', $txt);\n    } elseif (strpos($txt, ',') !== false)\
    \ {\n        return explode(',', $txt);\n    } else {\n        $count = 0;\n \
    \       for ($i = 0; $i < strlen($txt); $i++) {\n            if (ord($txt[$i])\
    \ % 2 !== 0) {\n                $count++;\n            }\n        }\n        return\
    \ $count;\n    }\n}\n\nfunction candidate(...$args) {\n    return split_words(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world!\") !== array(\"\
    Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"\
    world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world\
    \ !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp8icpo4_3.php:35\n\
    Stack trace:\n#0 /tmp/tmp8icpo4_3.php(40): test()\n#1 {main}\n  thrown in /tmp/tmp8icpo4_3.php\
    \ on line 35\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // split_words(\"Hello world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"\
    Hello,world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"abcdef\") ==\
    \ 3\nfunction split_words($txt) {\n    if (strpos($txt, ' ') !== false) {\n  \
    \      return explode(' ', $txt);\n    } else if (strpos($txt, ',') !== false)\
    \ {\n        return explode(',', $txt);\n    } else {\n        $count = 0;\n \
    \       for ($i = 0; $i < strlen($txt); $i++) {\n            if (ord($txt[$i])\
    \ % 2 !== 0) {\n                $count++;\n            }\n        }\n        return\
    \ $count;\n    }\n}\necho split_words(\"Hello world!\") . '<br>';\necho split_words(\"\
    Hello,world!\") . '<br>';\necho split_words(\"abcdef\") . '<br>';\necho split_words(\"\
    abcdefg\") . '<br>';\necho split_words(\"abcdefgh\") . '<br>';\necho split_words(\"\
    abcdefghi\") . '<br>';\necho split_words(\"abcdefghij\") . '<br>';\necho split_words(\"\
    abcdefghijk\") . '<br>';\necho split_words(\"abcdefghijkl\") . '<br>';\necho split_words(\"\
    abcdefghijklm\") . '<br>';\necho split_words(\"abcdefghijklmn\") . '<br>';\necho\
    \ split_words(\"abcdefghijklmno\") . '<br>';\necho split_words(\"abcdefghijklmnop\"\
    ) . '<br>';\necho split_words(\"abcdefghijklmnopq\") . '<br>';\necho split_words(\"\
    abcdefghijklmnopqr\") . '<br>';\necho split_words(\"abcdefghijklmnopqrs\") . '<br>';\n\
    echo split_words(\"abcdefghijklmnopqrst\") . '<br>';\necho split_words(\"abcdefghijklmnopqrstu\"\
    ) . '<br>';\necho split_words(\"abcdefghijklmnopqrstuv\") . '<br>';\necho split_words(\"\
    abcdefghijklmnopqrstuvw\") . '<\nfunction candidate(...$args) {\n    return split_words(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world!\") !== array(\"\
    Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"\
    world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world\
    \ !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Parse error:  syntax error, unexpected string content \"<\" in /tmp/tmpzxezx_lp.php\
    \ on line 43\n"
  exit_code: 255
  status: SyntaxError
- program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // split_words(\"Hello world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"\
    Hello,world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"abcdef\") ==\
    \ 3\nfunction split_words($txt) {\n    if (strpos($txt, ' ') !== false) {\n  \
    \      return explode(' ', $txt);\n    } elseif (strpos($txt, ',') !== false)\
    \ {\n        return explode(',', $txt);\n    } else {\n        $count = 0;\n \
    \       for ($i = 0; $i < strlen($txt); $i++) {\n            if (ord($txt[$i])\
    \ % 2 !== 0) {\n                $count++;\n            }\n        }\n        return\
    \ $count;\n    }\n}\n\nfunction candidate(...$args) {\n    return split_words(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world!\") !== array(\"\
    Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"\
    world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world\
    \ !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpkycboqtt.php:35\n\
    Stack trace:\n#0 /tmp/tmpkycboqtt.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpkycboqtt.php\
    \ on line 35\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // split_words(\"Hello world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"\
    Hello,world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"abcdef\") ==\
    \ 3\nfunction split_words($txt) {\n    $txt = str_replace(',', ' ', $txt);\n \
    \   $txt = str_replace('!', ' ', $txt);\n    $txt = str_replace('.', ' ', $txt);\n\
    \    $txt = str_replace('?', ' ', $txt);\n    $txt = str_replace(';', ' ', $txt);\n\
    \    $txt = str_replace(':', ' ', $txt);\n    $txt = str_replace('-', ' ', $txt);\n\
    \    $txt = str_replace('_', ' ', $txt);\n    $txt = str_replace('(', ' ', $txt);\n\
    \    $txt = str_replace(')', ' ', $txt);\n    $txt = str_replace('[', ' ', $txt);\n\
    \    $txt = str_replace(']', ' ', $txt);\n    $txt = str_replace('{', ' ', $txt);\n\
    \    $txt = str_replace('}', ' ', $txt);\n    $txt = str_replace('\"', ' ', $txt);\n\
    \    $txt = str_replace(\"'\", ' ', $txt);\n    $txt = str_replace('/', ' ', $txt);\n\
    \    $txt = str_replace('\\\\', ' ', $txt);\n    $txt = str_replace('|', ' ',\
    \ $txt);\n    $txt = str_replace('+', ' ', $txt);\n    $txt = str_replace('=',\
    \ ' ', $txt);\n    $txt = str_replace('*', ' ', $txt);\n    $txt = str_replace('&',\
    \ ' ', $txt);\n    $txt = str_replace('^', ' ', $txt);\n    $txt = str_replace('%',\
    \ ' ', $txt);\n    $txt = str_replace('$', ' ', $txt);\n    $txt = str_replace('#',\
    \ ' ', $txt);\n    $txt = str_replace('@', ' ', $txt);\n    $txt = str_replace('!',\
    \ ' ', $txt);\n    $txt = str_replace('~', ' ', $txt);\n    $txt = str_replace('`',\
    \ ' ', $txt);\n    $txt = str_replace('<', ' ', $txt);\nfunction candidate(...$args)\
    \ {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\"\
    ) !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\"\
    , \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\"\
    ) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\"\
    ) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Parse error:  Unclosed '{' on line 9 in /tmp/tmp8bfx79rp.php on line\
    \ 57\n"
  exit_code: 255
  status: SyntaxError
- program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // split_words(\"Hello world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"\
    Hello,world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"abcdef\") ==\
    \ 3\nfunction split_words($txt) {\n    $arr = str_split($txt);\n    $arr1 = [];\n\
    \    $arr2 = [];\n    $arr3 = [];\n    $arr4 = [];\n    $arr5 = [];\n    $arr6\
    \ = [];\n    $arr7 = [];\n    $arr8 = [];\n    $arr9 = [];\n    $arr10 = [];\n\
    \    $arr11 = [];\n    $arr12 = [];\n    $arr13 = [];\n    $arr14 = [];\n    $arr15\
    \ = [];\n    $arr16 = [];\n    $arr17 = [];\n    $arr18 = [];\n    $arr19 = [];\n\
    \    $arr20 = [];\n    $arr21 = [];\n    $arr22 = [];\n    $arr23 = [];\n    $arr24\
    \ = [];\n    $arr25 = [];\n    $arr26 = [];\n    $arr27 = [];\n    $arr28 = [];\n\
    \    $arr29 = [];\n    $arr30 = [];\n    $arr31 = [];\n    $arr32 = [];\n    $arr33\
    \ = [];\n    $arr34 = [];\n    $arr35 = [];\n    $arr36 = [];\n    $arr37 = [];\n\
    \    $arr38 = [];\n    $arr39 = [];\n    $arr40 = [];\n    $arr41 = [];\n    $arr42\
    \ = [];\n    $arr43 = [];\n    $arr44 = [];\n    $arr45 = [];\n    $arr46 = [];\n\
    \    $arr47 = [];\n    $arr48 = [];\n    $arr49 = [];\n    $arr50 = [];\n    $arr51\
    \ = [];\n    $arr52 = [];\n    $arr53 = [];\n    $arr54 = [];\n    $arr55 = [];\n\
    \    $arr56 = [];\n    $arr57 = [];\n    $arr58 = [];\n    $arr59 = [];\n    $arr60\
    \ = [];\n    $arr61 = [];\n    $arr62 = [];\n    $arr63 = [];\n    $arr64 = [];\n\
    \    $arr65 = [];\n    $arr66 = [];\n    $arr67 = [];\n    $arr68 = [];\n    $arr69\
    \ = [];\n    $arr70 = [];\n    $arr71 = [];\n    $arr\nfunction candidate(...$args)\
    \ {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\"\
    ) !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\"\
    , \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\"\
    ) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\"\
    ) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Parse error:  syntax error, unexpected token \"function\" in /tmp/tmpmn9yokxn.php\
    \ on line 83\n"
  exit_code: 255
  status: SyntaxError
- program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // split_words(\"Hello world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"\
    Hello,world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"abcdef\") ==\
    \ 3\nfunction split_words($txt) {\n    $result = [];\n    if (strpos($txt, ' ')\
    \ !== false) {\n        $result = explode(' ', $txt);\n    } elseif (strpos($txt,\
    \ ',') !== false) {\n        $result = explode(',', $txt);\n    } else {\n   \
    \     $result = strlen(preg_replace('/[^a-z]/', '', $txt)) % 2 == 0 ? 0 : 1;\n\
    \    }\n    return $result;\n}\necho '<pre>';\nprint_r(split_words(\"Hello world!\"\
    ));\necho '</pre>';\necho '<pre>';\nprint_r(split_words(\"Hello,world!\"));\n\
    echo '</pre>';\necho '<pre>';\nprint_r(split_words(\"abcdef\"));\necho '</pre>';\n\
    function candidate(...$args) {\n    return split_words(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"Hello world!\") !== array(\"Hello\", \"\
    world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,world!\"\
    ) !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"world,!\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world !\"\
    ) !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: "<pre>Array\n(\n    [0] => Hello\n    [1] => world!\n)\n</pre><pre>Array\n\
    (\n    [0] => Hello\n    [1] => world!\n)\n</pre><pre>0</pre>"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpy1ds04hx.php:38\n\
    Stack trace:\n#0 /tmp/tmpy1ds04hx.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpy1ds04hx.php\
    \ on line 38\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // split_words(\"Hello world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"\
    Hello,world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"abcdef\") ==\
    \ 3\nfunction split_words($txt) {\n    $txt = str_replace(',', ' ', $txt);\n \
    \   $txt = str_replace('!', ' ', $txt);\n    $txt = str_replace('?', ' ', $txt);\n\
    \    $txt = str_replace('.', ' ', $txt);\n    $txt = str_replace('-', ' ', $txt);\n\
    \    $txt = str_replace('_', ' ', $txt);\n    $txt = str_replace('/', ' ', $txt);\n\
    \    $txt = str_replace('\\\\', ' ', $txt);\n    $txt = str_replace('*', ' ',\
    \ $txt);\n    $txt = str_replace('(', ' ', $txt);\n    $txt = str_replace(')',\
    \ ' ', $txt);\n    $txt = str_replace('[', ' ', $txt);\n    $txt = str_replace(']',\
    \ ' ', $txt);\n    $txt = str_replace('{', ' ', $txt);\n    $txt = str_replace('}',\
    \ ' ', $txt);\n    $txt = str_replace('\"', ' ', $txt);\n    $txt = str_replace('\\\
    '', ' ', $txt);\n    $txt = str_replace('`', ' ', $txt);\n    $txt = str_replace('<',\
    \ ' ', $txt);\n    $txt = str_replace('>', ' ', $txt);\n    $txt = str_replace('|',\
    \ ' ', $txt);\n    $txt = str_replace('@', ' ', $txt);\n    $txt = str_replace('#',\
    \ ' ', $txt);\n    $txt = str_replace('$', ' ', $txt);\n    $txt = str_replace('%',\
    \ ' ', $txt);\n    $txt = str_replace('^', ' ', $txt);\n    $txt = str_replace('&',\
    \ ' ', $txt);\n    $txt = str_replace('*', ' ', $txt);\n    $txt = str_replace('+',\
    \ ' ', $txt);\n    $txt = str_replace('=', ' ', $txt);\n    $txt = str_replace('~',\
    \ ' ', $txt);\n    $txt = str_replace('`', ' ', $txt);\nfunction candidate(...$args)\
    \ {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\"\
    ) !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\"\
    , \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\"\
    ) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\"\
    ) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Parse error:  Unclosed '{' on line 9 in /tmp/tmpq8zxe0fq.php on line\
    \ 57\n"
  exit_code: 255
  status: SyntaxError
- program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // split_words(\"Hello world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"\
    Hello,world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"abcdef\") ==\
    \ 3\nfunction split_words($txt) {\n    if (strpos($txt, ' ') !== false) {\n  \
    \      return explode(' ', $txt);\n    } else if (strpos($txt, ',') !== false)\
    \ {\n        return explode(',', $txt);\n    } else {\n        $count = 0;\n \
    \       for ($i = 0; $i < strlen($txt); $i++) {\n            if (ord($txt[$i])\
    \ % 2 === 1) {\n                $count++;\n            }\n        }\n        return\
    \ $count;\n    }\n}\necho split_words(\"Hello world!\");\necho \"<br>\";\necho\
    \ split_words(\"Hello,world!\");\necho \"<br>\";\necho split_words(\"abcdef\"\
    );\necho \"<br>\";\necho split_words(\"abcdefg\");\necho \"<br>\";\necho split_words(\"\
    abcdefgh\");\necho \"<br>\";\necho split_words(\"abcdefghi\");\necho \"<br>\"\
    ;\necho split_words(\"abcdefghij\");\necho \"<br>\";\necho split_words(\"abcdefghijk\"\
    );\necho \"<br>\";\necho split_words(\"abcdefghijkl\");\necho \"<br>\";\necho\
    \ split_words(\"abcdefghijklm\");\necho \"<br>\";\necho split_words(\"abcdefghijklmn\"\
    );\necho \"<br>\";\necho split_words(\"abcdefghijklmno\");\necho \"<br>\";\necho\
    \ split_words(\"abcdefghijklmnop\");\necho \"<br>\";\necho split_words(\"abcdefghijklmnopq\"\
    );\necho \"<br>\";\necho split_words(\"abcdefghijklmnopqr\");\necho \"<br>\";\n\
    echo split_words(\"abcdefghijklmnopqrs\");\necho \"<br>\";\necho split_words(\"\
    abcdefghijklmnopqrst\");\necho \"<br>\";\necho split_words(\"abcdefghijklmnopqrstu\"\
    );\necho \"<br>\";\necho split_words(\"abcdefghijklmnopqrstuv\");\necho \"<br>\"\
    ;\necho split_words(\"abcdefghijklmnopqrstuvw\");\necho \"<br\nfunction candidate(...$args)\
    \ {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\"\
    ) !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\"\
    , \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\"\
    ) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\"\
    ) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Parse error:  syntax error, unexpected identifier \"Hello\", expecting\
    \ \",\" or \";\" in /tmp/tmpod_ob84z.php on line 69\n"
  exit_code: 255
  status: SyntaxError
- program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // split_words(\"Hello world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"\
    Hello,world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"abcdef\") ==\
    \ 3\nfunction split_words($txt) {\n    $arr = str_split($txt);\n    $arr2 = [];\n\
    \    $arr3 = [];\n    $arr4 = [];\n    $arr5 = [];\n    $arr6 = [];\n    $arr7\
    \ = [];\n    $arr8 = [];\n    $arr9 = [];\n    $arr10 = [];\n    $arr11 = [];\n\
    \    $arr12 = [];\n    $arr13 = [];\n    $arr14 = [];\n    $arr15 = [];\n    $arr16\
    \ = [];\n    $arr17 = [];\n    $arr18 = [];\n    $arr19 = [];\n    $arr20 = [];\n\
    \    $arr21 = [];\n    $arr22 = [];\n    $arr23 = [];\n    $arr24 = [];\n    $arr25\
    \ = [];\n    $arr26 = [];\n    $arr27 = [];\n    $arr28 = [];\n    $arr29 = [];\n\
    \    $arr30 = [];\n    $arr31 = [];\n    $arr32 = [];\n    $arr33 = [];\n    $arr34\
    \ = [];\n    $arr35 = [];\n    $arr36 = [];\n    $arr37 = [];\n    $arr38 = [];\n\
    \    $arr39 = [];\n    $arr40 = [];\n    $arr41 = [];\n    $arr42 = [];\n    $arr43\
    \ = [];\n    $arr44 = [];\n    $arr45 = [];\n    $arr46 = [];\n    $arr47 = [];\n\
    \    $arr48 = [];\n    $arr49 = [];\n    $arr50 = [];\n    $arr51 = [];\n    $arr52\
    \ = [];\n    $arr53 = [];\n    $arr54 = [];\n    $arr55 = [];\n    $arr56 = [];\n\
    \    $arr57 = [];\n    $arr58 = [];\n    $arr59 = [];\n    $arr60 = [];\n    $arr61\
    \ = [];\n    $arr62 = [];\n    $arr63 = [];\n    $arr64 = [];\n    $arr65 = [];\n\
    \    $arr66 = [];\n    $arr67 = [];\n    $arr68 = [];\n    $arr69 = [];\n    $arr70\
    \ = [];\n    $arr71 = [];\n    $arr72 = [];\n    $arr\nfunction candidate(...$args)\
    \ {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\"\
    ) !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\"\
    , \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\"\
    ) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\"\
    ) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Parse error:  syntax error, unexpected token \"function\" in /tmp/tmpj9eij87x.php\
    \ on line 83\n"
  exit_code: 255
  status: SyntaxError
- program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // split_words(\"Hello world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"\
    Hello,world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"abcdef\") ==\
    \ 3\nfunction split_words($txt) {\n    $txt = str_replace(',', ' ', $txt);\n \
    \   $txt = str_replace('!', ' ', $txt);\n    $txt = str_replace('?', ' ', $txt);\n\
    \    $txt = str_replace('.', ' ', $txt);\n    $txt = str_replace('-', ' ', $txt);\n\
    \    $txt = str_replace('_', ' ', $txt);\n    $txt = str_replace('/', ' ', $txt);\n\
    \    $txt = str_replace('\\\\', ' ', $txt);\n    $txt = str_replace('(', ' ',\
    \ $txt);\n    $txt = str_replace(')', ' ', $txt);\n    $txt = str_replace('[',\
    \ ' ', $txt);\n    $txt = str_replace(']', ' ', $txt);\n    $txt = str_replace('{',\
    \ ' ', $txt);\n    $txt = str_replace('}', ' ', $txt);\n    $txt = str_replace('*',\
    \ ' ', $txt);\n    $txt = str_replace('&', ' ', $txt);\n    $txt = str_replace('^',\
    \ ' ', $txt);\n    $txt = str_replace('%', ' ', $txt);\n    $txt = str_replace('$',\
    \ ' ', $txt);\n    $txt = str_replace('#', ' ', $txt);\n    $txt = str_replace('@',\
    \ ' ', $txt);\n    $txt = str_replace('!', ' ', $txt);\n    $txt = str_replace('~',\
    \ ' ', $txt);\n    $txt = str_replace('`', ' ', $txt);\n    $txt = str_replace('+',\
    \ ' ', $txt);\n    $txt = str_replace('=', ' ', $txt);\n    $txt = str_replace('|',\
    \ ' ', $txt);\n    $txt = str_replace('\"', ' ', $txt);\n    $txt = str_replace('\\\
    '', ' ', $txt);\n    $txt = str_replace(';', ' ', $txt);\n    $txt = str_replace(':',\
    \ ' ', $txt);\n    $txt = str_replace('<', ' ', $txt);\nfunction candidate(...$args)\
    \ {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\"\
    ) !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\"\
    , \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\"\
    ) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\"\
    ) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Parse error:  Unclosed '{' on line 9 in /tmp/tmppiv7u460.php on line\
    \ 57\n"
  exit_code: 255
  status: SyntaxError
- program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // split_words(\"Hello world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"\
    Hello,world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"abcdef\") ==\
    \ 3\nfunction split_words($txt) {\n    $txt = str_replace(',', ' ', $txt);\n \
    \   $txt = str_replace('!', ' ', $txt);\n    $txt = str_replace('?', ' ', $txt);\n\
    \    $txt = str_replace('.', ' ', $txt);\n    $txt = str_replace('-', ' ', $txt);\n\
    \    $txt = str_replace('_', ' ', $txt);\n    $txt = str_replace('/', ' ', $txt);\n\
    \    $txt = str_replace('\\\\', ' ', $txt);\n    $txt = str_replace('(', ' ',\
    \ $txt);\n    $txt = str_replace(')', ' ', $txt);\n    $txt = str_replace('[',\
    \ ' ', $txt);\n    $txt = str_replace(']', ' ', $txt);\n    $txt = str_replace('{',\
    \ ' ', $txt);\n    $txt = str_replace('}', ' ', $txt);\n    $txt = str_replace('\"\
    ', ' ', $txt);\n    $txt = str_replace(\"'\", ' ', $txt);\n    $txt = str_replace(';',\
    \ ' ', $txt);\n    $txt = str_replace(':', ' ', $txt);\n    $txt = str_replace('*',\
    \ ' ', $txt);\n    $txt = str_replace('+', ' ', $txt);\n    $txt = str_replace('=',\
    \ ' ', $txt);\n    $txt = str_replace('&', ' ', $txt);\n    $txt = str_replace('%',\
    \ ' ', $txt);\n    $txt = str_replace('$', ' ', $txt);\n    $txt = str_replace('#',\
    \ ' ', $txt);\n    $txt = str_replace('@', ' ', $txt);\n    $txt = str_replace('^',\
    \ ' ', $txt);\n    $txt = str_replace('~', ' ', $txt);\n    $txt = str_replace('`',\
    \ ' ', $txt);\n    $txt = str_replace('<', ' ', $txt);\n    $txt = str_replace('>',\
    \ ' ', $txt);\n    $txt = str_replace('|', ' ', $txt);\nfunction candidate(...$args)\
    \ {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\"\
    ) !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\"\
    , \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\"\
    ) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\"\
    ) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Parse error:  Unclosed '{' on line 9 in /tmp/tmp6sm1cukc.php on line\
    \ 57\n"
  exit_code: 255
  status: SyntaxError
- program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // split_words(\"Hello world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"\
    Hello,world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"abcdef\") ==\
    \ 3\nfunction split_words($txt) {\n    $txt = str_replace(',', ' ', $txt);\n \
    \   $txt = str_replace('!', ' ', $txt);\n    $txt = str_replace('?', ' ', $txt);\n\
    \    $txt = str_replace('.', ' ', $txt);\n    $txt = str_replace(';', ' ', $txt);\n\
    \    $txt = str_replace(':', ' ', $txt);\n    $txt = str_replace('-', ' ', $txt);\n\
    \    $txt = str_replace('_', ' ', $txt);\n    $txt = str_replace('(', ' ', $txt);\n\
    \    $txt = str_replace(')', ' ', $txt);\n    $txt = str_replace('[', ' ', $txt);\n\
    \    $txt = str_replace(']', ' ', $txt);\n    $txt = str_replace('{', ' ', $txt);\n\
    \    $txt = str_replace('}', ' ', $txt);\n    $txt = str_replace('\"', ' ', $txt);\n\
    \    $txt = str_replace(\"'\", ' ', $txt);\n    $txt = str_replace('/', ' ', $txt);\n\
    \    $txt = str_replace('\\\\', ' ', $txt);\n    $txt = str_replace('|', ' ',\
    \ $txt);\n    $txt = str_replace('+', ' ', $txt);\n    $txt = str_replace('=',\
    \ ' ', $txt);\n    $txt = str_replace('*', ' ', $txt);\n    $txt = str_replace('&',\
    \ ' ', $txt);\n    $txt = str_replace('^', ' ', $txt);\n    $txt = str_replace('%',\
    \ ' ', $txt);\n    $txt = str_replace('$', ' ', $txt);\n    $txt = str_replace('#',\
    \ ' ', $txt);\n    $txt = str_replace('@', ' ', $txt);\n    $txt = str_replace('~',\
    \ ' ', $txt);\n    $txt = str_replace('`', ' ', $txt);\n    $txt = str_replace('<',\
    \ ' ', $txt);\n    $txt = str_replace('>', ' ', $txt);\nfunction candidate(...$args)\
    \ {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\"\
    ) !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\"\
    , \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\"\
    ) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\"\
    ) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Parse error:  Unclosed '{' on line 9 in /tmp/tmpuzirlb91.php on line\
    \ 57\n"
  exit_code: 255
  status: SyntaxError
- program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // split_words(\"Hello world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"\
    Hello,world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"abcdef\") ==\
    \ 3\nfunction split_words($txt) {\n    $result = [];\n    $txt = str_replace('!',\
    \ '', $txt);\n    if (strpos($txt, ' ') !== false) {\n        $result = explode('\
    \ ', $txt);\n    } else if (strpos($txt, ',') !== false) {\n        $result =\
    \ explode(',', $txt);\n    } else {\n        $result = strlen($txt);\n    }\n\
    \    return $result;\n}\necho '<pre>';\nprint_r(split_words(\"Hello world!\"));\n\
    echo '</pre>';\necho '<pre>';\nprint_r(split_words(\"Hello,world!\"));\necho '</pre>';\n\
    echo '<pre>';\nprint_r(split_words(\"abcdef\"));\necho '</pre>';\nfunction candidate(...$args)\
    \ {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\"\
    ) !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\"\
    , \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\"\
    ) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\"\
    ) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "<pre>Array\n(\n    [0] => Hello\n    [1] => world\n)\n</pre><pre>Array\n\
    (\n    [0] => Hello\n    [1] => world\n)\n</pre><pre>6</pre>"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmple3aot45.php:35\n\
    Stack trace:\n#0 /tmp/tmple3aot45.php(45): test()\n#1 {main}\n  thrown in /tmp/tmple3aot45.php\
    \ on line 35\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // split_words(\"Hello world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"\
    Hello,world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"abcdef\") ==\
    \ 3\nfunction split_words($txt) {\n    $txt = str_replace(\",\", \" \", $txt);\n\
    \    $txt = str_replace(\"!\", \" \", $txt);\n    $txt = str_replace(\"?\", \"\
    \ \", $txt);\n    $txt = str_replace(\".\", \" \", $txt);\n    $txt = str_replace(\"\
    ;\", \" \", $txt);\n    $txt = str_replace(\":\", \" \", $txt);\n    $txt = str_replace(\"\
    -\", \" \", $txt);\n    $txt = str_replace(\"_\", \" \", $txt);\n    $txt = str_replace(\"\
    (\", \" \", $txt);\n    $txt = str_replace(\")\", \" \", $txt);\n    $txt = str_replace(\"\
    [\", \" \", $txt);\n    $txt = str_replace(\"]\", \" \", $txt);\n    $txt = str_replace(\"\
    {\", \" \", $txt);\n    $txt = str_replace(\"}\", \" \", $txt);\n    $txt = str_replace(\"\
    '\", \" \", $txt);\n    $txt = str_replace('\"', \" \", $txt);\n    $txt = str_replace(\"\
    /\", \" \", $txt);\n    $txt = str_replace(\"\\\\\", \" \", $txt);\n    $txt =\
    \ str_replace(\"+\", \" \", $txt);\n    $txt = str_replace(\"=\", \" \", $txt);\n\
    \    $txt = str_replace(\"*\", \" \", $txt);\n    $txt = str_replace(\"&\", \"\
    \ \", $txt);\n    $txt = str_replace(\"^\", \" \", $txt);\n    $txt = str_replace(\"\
    %\", \" \", $txt);\n    $txt = str_replace(\"$\", \" \", $txt);\n    $txt = str_replace(\"\
    #\", \" \", $txt);\n    $txt = str_replace(\"@\", \" \", $txt);\n    $txt = str_replace(\"\
    !\", \" \", $txt);\n    $txt = str_replace(\"~\", \" \", $txt);\n    $txt = str_replace(\"\
    `\", \" \", $txt);\n    $txt = str_replace(\"|\", \" \", $txt);\n    $txt = str_replace(\"\
    <\", \" \", $txt);\n    $txt\nfunction candidate(...$args) {\n    return split_words(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world!\") !== array(\"\
    Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"\
    world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world\
    \ !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Parse error:  syntax error, unexpected token \"function\" in /tmp/tmpq_680zud.php\
    \ on line 43\n"
  exit_code: 255
  status: SyntaxError
- program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // split_words(\"Hello world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"\
    Hello,world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"abcdef\") ==\
    \ 3\nfunction split_words($txt) {\n\t$arr = str_split($txt);\n\t$arr2 = [];\n\t\
    $arr3 = [];\n\t$arr4 = [];\n\t$arr5 = [];\n\t$arr6 = [];\n\t$arr7 = [];\n\t$arr8\
    \ = [];\n\t$arr9 = [];\n\t$arr10 = [];\n\t$arr11 = [];\n\t$arr12 = [];\n\t$arr13\
    \ = [];\n\t$arr14 = [];\n\t$arr15 = [];\n\t$arr16 = [];\n\t$arr17 = [];\n\t$arr18\
    \ = [];\n\t$arr19 = [];\n\t$arr20 = [];\n\t$arr21 = [];\n\t$arr22 = [];\n\t$arr23\
    \ = [];\n\t$arr24 = [];\n\t$arr25 = [];\n\t$arr26 = [];\n\t$arr27 = [];\n\t$arr28\
    \ = [];\n\t$arr29 = [];\n\t$arr30 = [];\n\t$arr31 = [];\n\t$arr32 = [];\n\t$arr33\
    \ = [];\n\t$arr34 = [];\n\t$arr35 = [];\n\t$arr36 = [];\n\t$arr37 = [];\n\t$arr38\
    \ = [];\n\t$arr39 = [];\n\t$arr40 = [];\n\t$arr41 = [];\n\t$arr42 = [];\n\t$arr43\
    \ = [];\n\t$arr44 = [];\n\t$arr45 = [];\n\t$arr46 = [];\n\t$arr47 = [];\n\t$arr48\
    \ = [];\n\t$arr49 = [];\n\t$arr50 = [];\n\t$arr51 = [];\n\t$arr52 = [];\n\t$arr53\
    \ = [];\n\t$arr54 = [];\n\t$arr55 = [];\n\t$arr56 = [];\n\t$arr57 = [];\n\t$arr58\
    \ = [];\n\t$arr59 = [];\n\t$arr60 = [];\n\t$arr61 = [];\n\t$arr62 = [];\n\t$arr63\
    \ = [];\n\t$arr64 = [];\n\t$arr65 = [];\n\t$arr66 = [];\n\t$arr67 = [];\n\t$arr68\
    \ = [];\n\t$arr69 = [];\n\t$arr70 = [];\n\t$arr71 = [];\n\t$arr72 = [];\n\t$arr\n\
    function candidate(...$args) {\n    return split_words(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"Hello world!\") !== array(\"Hello\", \"\
    world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,world!\"\
    ) !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"world,!\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world !\"\
    ) !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Parse error:  syntax error, unexpected token \"function\" in /tmp/tmpqa60lyml.php\
    \ on line 83\n"
  exit_code: 255
  status: SyntaxError
- program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // split_words(\"Hello world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"\
    Hello,world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"abcdef\") ==\
    \ 3\nfunction split_words($txt) {\n    $words = explode(' ', $txt);\n    if (count($words)\
    \ > 1) {\n        return $words;\n    }\n    $words = explode(',', $txt);\n  \
    \  if (count($words) > 1) {\n        return $words;\n    }\n    $odd = 0;\n  \
    \  for ($i = 0; $i < strlen($txt); $i++) {\n        if (ord($txt[$i]) % 2 == 1)\
    \ {\n            $odd++;\n        }\n    }\n    return $odd;\n}\n\nfunction candidate(...$args)\
    \ {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\"\
    ) !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\"\
    , \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\"\
    ) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\"\
    ) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpd6n85u0z.php:37\n\
    Stack trace:\n#0 /tmp/tmpd6n85u0z.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpd6n85u0z.php\
    \ on line 37\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // split_words(\"Hello world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"\
    Hello,world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"abcdef\") ==\
    \ 3\nfunction split_words($txt) {\n    $txt = str_replace(\",\", \" \", $txt);\n\
    \    $txt = str_replace(\"!\", \" \", $txt);\n    $txt = str_replace(\"?\", \"\
    \ \", $txt);\n    $txt = str_replace(\".\", \" \", $txt);\n    $txt = str_replace(\"\
    ;\", \" \", $txt);\n    $txt = str_replace(\":\", \" \", $txt);\n    $txt = str_replace(\"\
    -\", \" \", $txt);\n    $txt = str_replace(\"_\", \" \", $txt);\n    $txt = str_replace(\"\
    (\", \" \", $txt);\n    $txt = str_replace(\")\", \" \", $txt);\n    $txt = str_replace(\"\
    [\", \" \", $txt);\n    $txt = str_replace(\"]\", \" \", $txt);\n    $txt = str_replace(\"\
    {\", \" \", $txt);\n    $txt = str_replace(\"}\", \" \", $txt);\n    $txt = str_replace(\"\
    /\", \" \", $txt);\n    $txt = str_replace(\"\\\\\", \" \", $txt);\n    $txt =\
    \ str_replace(\"|\", \" \", $txt);\n    $txt = str_replace(\"+\", \" \", $txt);\n\
    \    $txt = str_replace(\"=\", \" \", $txt);\n    $txt = str_replace(\"*\", \"\
    \ \", $txt);\n    $txt = str_replace(\"&\", \" \", $txt);\n    $txt = str_replace(\"\
    ^\", \" \", $txt);\n    $txt = str_replace(\"%\", \" \", $txt);\n    $txt = str_replace(\"\
    $\", \" \", $txt);\n    $txt = str_replace(\"#\", \" \", $txt);\n    $txt = str_replace(\"\
    @\", \" \", $txt);\n    $txt = str_replace(\"!\", \" \", $txt);\n    $txt = str_replace(\"\
    ~\", \" \", $txt);\n    $txt = str_replace(\"`\", \" \", $txt);\n    $txt = str_replace(\"\
    '\", \" \", $txt);\n    $txt = str_replace(\"\\\"\", \" \", $txt);\n    $txt =\
    \ str_replace(\"<\", \" \", $txt);\n    $txt\nfunction candidate(...$args) {\n\
    \    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\"\
    ) !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\"\
    , \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\"\
    ) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\"\
    ) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Parse error:  syntax error, unexpected token \"function\" in /tmp/tmp1zpkveqp.php\
    \ on line 43\n"
  exit_code: 255
  status: SyntaxError
- program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // split_words(\"Hello world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"\
    Hello,world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"abcdef\") ==\
    \ 3\nfunction split_words($txt) {\n    $arr = str_split($txt);\n    $arr1 = [];\n\
    \    $arr2 = [];\n    $arr3 = [];\n    $arr4 = [];\n    $arr5 = [];\n    $arr6\
    \ = [];\n    $arr7 = [];\n    $arr8 = [];\n    $arr9 = [];\n    $arr10 = [];\n\
    \    $arr11 = [];\n    $arr12 = [];\n    $arr13 = [];\n    $arr14 = [];\n    $arr15\
    \ = [];\n    $arr16 = [];\n    $arr17 = [];\n    $arr18 = [];\n    $arr19 = [];\n\
    \    $arr20 = [];\n    $arr21 = [];\n    $arr22 = [];\n    $arr23 = [];\n    $arr24\
    \ = [];\n    $arr25 = [];\n    $arr26 = [];\n    $arr27 = [];\n    $arr28 = [];\n\
    \    $arr29 = [];\n    $arr30 = [];\n    $arr31 = [];\n    $arr32 = [];\n    $arr33\
    \ = [];\n    $arr34 = [];\n    $arr35 = [];\n    $arr36 = [];\n    $arr37 = [];\n\
    \    $arr38 = [];\n    $arr39 = [];\n    $arr40 = [];\n    $arr41 = [];\n    $arr42\
    \ = [];\n    $arr43 = [];\n    $arr44 = [];\n    $arr45 = [];\n    $arr46 = [];\n\
    \    $arr47 = [];\n    $arr48 = [];\n    $arr49 = [];\n    $arr50 = [];\n    $arr51\
    \ = [];\n    $arr52 = [];\n    $arr53 = [];\n    $arr54 = [];\n    $arr55 = [];\n\
    \    $arr56 = [];\n    $arr57 = [];\n    $arr58 = [];\n    $arr59 = [];\n    $arr60\
    \ = [];\n    $arr61 = [];\n    $arr62 = [];\n    $arr63 = [];\n    $arr64 = [];\n\
    \    $arr65 = [];\n    $arr66 = [];\n    $arr67 = [];\n    $arr68 = [];\n    $arr69\
    \ = [];\n    $arr70 = [];\n    $arr71 = [];\n    $arr\nfunction candidate(...$args)\
    \ {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\"\
    ) !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\"\
    , \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\"\
    ) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\"\
    ) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Parse error:  syntax error, unexpected token \"function\" in /tmp/tmporbviy_2.php\
    \ on line 83\n"
  exit_code: 255
  status: SyntaxError
- program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // split_words(\"Hello world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"\
    Hello,world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"abcdef\") ==\
    \ 3\nfunction split_words($txt) {\n    $result = [];\n    if (strpos($txt, ' ')\
    \ !== false) {\n        $result = explode(' ', $txt);\n    } elseif (strpos($txt,\
    \ ',') !== false) {\n        $result = explode(',', $txt);\n    } else {\n   \
    \     $result = strlen(preg_replace('/[^a-z]/', '', $txt)) % 2 == 0 ? 0 : 1;\n\
    \    }\n    return $result;\n}\n\nfunction candidate(...$args) {\n    return split_words(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world!\") !== array(\"\
    Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"\
    world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world\
    \ !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmphuxsfw81.php:30\n\
    Stack trace:\n#0 /tmp/tmphuxsfw81.php(36): test()\n#1 {main}\n  thrown in /tmp/tmphuxsfw81.php\
    \ on line 30\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // split_words(\"Hello world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"\
    Hello,world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"abcdef\") ==\
    \ 3\nfunction split_words($txt) {\n    $txt = str_replace(',', ' ', $txt);\n \
    \   $txt = str_replace('!', ' ', $txt);\n    $txt = str_replace('?', ' ', $txt);\n\
    \    $txt = str_replace('.', ' ', $txt);\n    $txt = str_replace('-', ' ', $txt);\n\
    \    $txt = str_replace('_', ' ', $txt);\n    $txt = str_replace('/', ' ', $txt);\n\
    \    $txt = str_replace('\\\\', ' ', $txt);\n    $txt = str_replace('\"', ' ',\
    \ $txt);\n    $txt = str_replace('\\'', ' ', $txt);\n    $txt = str_replace('(',\
    \ ' ', $txt);\n    $txt = str_replace(')', ' ', $txt);\n    $txt = str_replace('[',\
    \ ' ', $txt);\n    $txt = str_replace(']', ' ', $txt);\n    $txt = str_replace('{',\
    \ ' ', $txt);\n    $txt = str_replace('}', ' ', $txt);\n    $txt = str_replace('*',\
    \ ' ', $txt);\n    $txt = str_replace('&', ' ', $txt);\n    $txt = str_replace('^',\
    \ ' ', $txt);\n    $txt = str_replace('%', ' ', $txt);\n    $txt = str_replace('$',\
    \ ' ', $txt);\n    $txt = str_replace('#', ' ', $txt);\n    $txt = str_replace('@',\
    \ ' ', $txt);\n    $txt = str_replace('!', ' ', $txt);\n    $txt = str_replace('~',\
    \ ' ', $txt);\n    $txt = str_replace('`', ' ', $txt);\n    $txt = str_replace('+',\
    \ ' ', $txt);\n    $txt = str_replace('=', ' ', $txt);\n    $txt = str_replace('<',\
    \ ' ', $txt);\n    $txt = str_replace('>', ' ', $txt);\n    $txt = str_replace('|',\
    \ ' ', $txt);\n    $txt = str_replace(':', ' ', $txt);\nfunction candidate(...$args)\
    \ {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\"\
    ) !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\"\
    , \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\"\
    ) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\"\
    ) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Parse error:  Unclosed '{' on line 9 in /tmp/tmpkc97i9qp.php on line\
    \ 57\n"
  exit_code: 255
  status: SyntaxError
- program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // split_words(\"Hello world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"\
    Hello,world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"abcdef\") ==\
    \ 3\nfunction split_words($txt) {\n    if (strpos($txt, ' ') !== false) {\n  \
    \      return explode(' ', $txt);\n    } else if (strpos($txt, ',') !== false)\
    \ {\n        return explode(',', $txt);\n    } else {\n        $count = 0;\n \
    \       for ($i = 0; $i < strlen($txt); $i++) {\n            if (ord($txt[$i])\
    \ % 2 !== 0) {\n                $count++;\n            }\n        }\n        return\
    \ $count;\n    }\n}\necho split_words(\"Hello world!\") . '<br>';\necho split_words(\"\
    Hello,world!\") . '<br>';\necho split_words(\"abcdef\") . '<br>';\nfunction candidate(...$args)\
    \ {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\"\
    ) !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\"\
    , \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\"\
    ) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\"\
    ) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: Array<br>Array<br>3<br>
  stderr: "PHP Warning:  Array to string conversion in /tmp/tmps5yimb51.php on line\
    \ 24\nPHP Warning:  Array to string conversion in /tmp/tmps5yimb51.php on line\
    \ 25\nPHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmps5yimb51.php:37\n\
    Stack trace:\n#0 /tmp/tmps5yimb51.php(42): test()\n#1 {main}\n  thrown in /tmp/tmps5yimb51.php\
    \ on line 37\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // split_words(\"Hello world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"\
    Hello,world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"abcdef\") ==\
    \ 3\nfunction split_words($txt) {\n    if (strpos($txt, ' ') !== false) {\n  \
    \      return explode(' ', $txt);\n    } elseif (strpos($txt, ',') !== false)\
    \ {\n        return explode(',', $txt);\n    } else {\n        $count = 0;\n \
    \       for ($i = 0; $i < strlen($txt); $i++) {\n            if (ord($txt[$i])\
    \ % 2 !== 0) {\n                $count++;\n            }\n        }\n        return\
    \ $count;\n    }\n}\necho split_words(\"Hello world!\");\necho '<br>';\necho split_words(\"\
    Hello,world!\");\necho '<br>';\necho split_words(\"abcdef\");\necho '<br>';\n\
    echo split_words(\"abcdefg\");\necho '<br>';\necho split_words(\"abcdefgh\");\n\
    echo '<br>';\necho split_words(\"abcdefghi\");\necho '<br>';\necho split_words(\"\
    abcdefghij\");\necho '<br>';\necho split_words(\"abcdefghijk\");\necho '<br>';\n\
    echo split_words(\"abcdefghijkl\");\necho '<br>';\necho split_words(\"abcdefghijklm\"\
    );\necho '<br>';\necho split_words(\"abcdefghijklmn\");\necho '<br>';\necho split_words(\"\
    abcdefghijklmno\");\necho '<br>';\necho split_words(\"abcdefghijklmnop\");\necho\
    \ '<br>';\necho split_words(\"abcdefghijklmnopq\");\necho '<br>';\necho split_words(\"\
    abcdefghijklmnopqr\");\necho '<br>';\necho split_words(\"abcdefghijklmnopqrs\"\
    );\necho '<br>';\necho split_words(\"abcdefghijklmnopqrst\");\necho '<br>';\n\
    echo split_words(\"abcdefghijklmnopqrstu\");\necho '<br>';\necho split_words(\"\
    abcdefghijklmnopqrstuv\");\necho '<br>';\necho split\nfunction candidate(...$args)\
    \ {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\"\
    ) !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\"\
    , \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\"\
    ) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\"\
    ) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Parse error:  syntax error, unexpected token \"function\", expecting\
    \ \",\" or \";\" in /tmp/tmpuugbgutb.php on line 63\n"
  exit_code: 255
  status: SyntaxError
- program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // split_words(\"Hello world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"\
    Hello,world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"abcdef\") ==\
    \ 3\nfunction split_words($txt) {\n    $res = [];\n    if (strpos($txt, ' ') !==\
    \ false) {\n        $res = explode(' ', $txt);\n    } elseif (strpos($txt, ',')\
    \ !== false) {\n        $res = explode(',', $txt);\n    } else {\n        $res\
    \ = count(array_filter(str_split($txt), function ($item) {\n            return\
    \ ord($item) % 2 !== 0;\n        }));\n    }\n    return $res;\n}\n\nfunction\
    \ candidate(...$args) {\n    return split_words(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"Hello world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,world!\"\
    ) !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"world,!\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world !\"\
    ) !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp93kc71lz.php:33\n\
    Stack trace:\n#0 /tmp/tmp93kc71lz.php(38): test()\n#1 {main}\n  thrown in /tmp/tmp93kc71lz.php\
    \ on line 33\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // split_words(\"Hello world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"\
    Hello,world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"abcdef\") ==\
    \ 3\nfunction split_words($txt) {\n    $words = preg_split('/[\\s,]+/', $txt);\n\
    \    if (count($words) == 1) {\n        $letters = str_split($txt);\n        $odd\
    \ = 0;\n        foreach ($letters as $letter) {\n            if (ord($letter)\
    \ % 2 != 0) {\n                $odd++;\n            }\n        }\n        return\
    \ $odd;\n    }\n    return $words;\n}\n\nfunction candidate(...$args) {\n    return\
    \ split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hello\
    \ world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\")) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\"\
    ) !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\"\
    , \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\"\
    ) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\"\
    ) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpwc2l6s8q.php:31\n\
    Stack trace:\n#0 /tmp/tmpwc2l6s8q.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpwc2l6s8q.php\
    \ on line 31\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // split_words(\"Hello world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"\
    Hello,world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"abcdef\") ==\
    \ 3\nfunction split_words($txt) {\n    if (strpos($txt, ' ') !== false) {\n  \
    \      return explode(' ', $txt);\n    } elseif (strpos($txt, ',') !== false)\
    \ {\n        return explode(',', $txt);\n    } else {\n        $count = 0;\n \
    \       for ($i = 0; $i < strlen($txt); $i++) {\n            if (ord($txt[$i])\
    \ % 2 !== 0) {\n                $count++;\n            }\n        }\n        return\
    \ $count;\n    }\n}\necho split_words(\"Hello world!\");\necho '<br>';\necho split_words(\"\
    Hello,world!\");\necho '<br>';\necho split_words(\"abcdef\");\necho '<br>';\n\
    echo split_words(\"abcdef,ghijkl\");\necho '<br>';\necho split_words(\"abcdef,ghijkl,mnopqr\"\
    );\necho '<br>';\necho split_words(\"abcdef,ghijkl,mnopqr,stuvwx\");\necho '<br>';\n\
    echo split_words(\"abcdef,ghijkl,mnopqr,stuvwx,yz\");\necho '<br>';\necho split_words(\"\
    abcdef,ghijkl,mnopqr,stuvwx,yz,12345\");\necho '<br>';\necho split_words(\"abcdef,ghijkl,mnopqr,stuvwx,yz,12345,67890\"\
    );\necho '<br>';\necho split_words(\"abcdef,ghijkl,mnopqr,stuvwx,yz,12345,67890,ABCDEF\"\
    );\necho '<br>';\necho split_words(\"abcdef,ghijkl,mnopqr,stuvwx,yz,12345,67890,ABCDEF,GHIJKL\"\
    );\necho '<br>';\necho split_words(\"abcdef,ghijkl,mnopqr,stuvwx,yz,12345,67890,ABCDEF,GHIJKL,MNOPQR\"\
    );\necho '<br>';\necho split_words(\"abcdef,ghijkl,mnopqr,stuvwx,yz\nfunction\
    \ candidate(...$args) {\n    return split_words(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"Hello world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,world!\"\
    ) !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"world,!\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world !\"\
    ) !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Parse error:  syntax error, unexpected identifier \"Hello\", expecting\
    \ \")\" in /tmp/tmp31xtlt6c.php on line 54\n"
  exit_code: 255
  status: SyntaxError
- program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // split_words(\"Hello world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"\
    Hello,world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"abcdef\") ==\
    \ 3\nfunction split_words($txt) {\n    if (strpos($txt, ' ') !== false) {\n  \
    \      return explode(' ', $txt);\n    } elseif (strpos($txt, ',') !== false)\
    \ {\n        return explode(',', $txt);\n    } else {\n        $count = 0;\n \
    \       for ($i = 0; $i < strlen($txt); $i++) {\n            if ($i % 2 == 0 &&\
    \ ord($txt[$i]) % 2 == 1) {\n                $count++;\n            }\n      \
    \  }\n        return $count;\n    }\n}\necho split_words(\"Hello world!\");\n\
    echo '<br>';\necho split_words(\"Hello,world!\");\necho '<br>';\necho split_words(\"\
    abcdef\");\necho '<br>';\necho split_words(\"abcdef,ghijkl\");\necho '<br>';\n\
    echo split_words(\"abcdef ghijkl\");\necho '<br>';\necho split_words(\"abcdef,ghijkl\
    \ mnopqr\");\necho '<br>';\necho split_words(\"abcdef,ghijkl mnopqr,stuvwx\");\n\
    echo '<br>';\necho split_words(\"abcdef,ghijkl mnopqr,stuvwx yz\");\necho '<br>';\n\
    echo split_words(\"abcdef,ghijkl mnopqr,stuvwx yz,12345\");\necho '<br>';\necho\
    \ split_words(\"abcdef,ghijkl mnopqr,stuvwx yz,12345 67890\");\necho '<br>';\n\
    echo split_words(\"abcdef,ghijkl mnopqr,stuvwx yz,12345 67890,ABCDE\");\necho\
    \ '<br>';\necho split_words(\"abcdef,ghijkl mnopqr,stuvwx yz,12345 67890,ABCDE\
    \ FGHIJ\");\necho '<br>';\necho split_words(\"abcdef,ghijkl mnopqr,stuvwx yz,12345\
    \ 67890,ABCDE FGHIJ,KLMNO\");\necho '<br>';\necho split_\nfunction candidate(...$args)\
    \ {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\"\
    ) !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\"\
    , \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\"\
    ) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\"\
    ) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Parse error:  syntax error, unexpected token \"function\", expecting\
    \ \",\" or \";\" in /tmp/tmpv050_hhl.php on line 51\n"
  exit_code: 255
  status: SyntaxError
- program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // split_words(\"Hello world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"\
    Hello,world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"abcdef\") ==\
    \ 3\nfunction split_words($txt) {\n  $txt = str_replace(',', ' ', $txt);\n  $txt\
    \ = str_replace('!', ' ', $txt);\n  $txt = str_replace('?', ' ', $txt);\n  $txt\
    \ = str_replace('.', ' ', $txt);\n  $txt = str_replace(';', ' ', $txt);\n  $txt\
    \ = str_replace(':', ' ', $txt);\n  $txt = str_replace('-', ' ', $txt);\n  $txt\
    \ = str_replace('_', ' ', $txt);\n  $txt = str_replace('(', ' ', $txt);\n  $txt\
    \ = str_replace(')', ' ', $txt);\n  $txt = str_replace('[', ' ', $txt);\n  $txt\
    \ = str_replace(']', ' ', $txt);\n  $txt = str_replace('{', ' ', $txt);\n  $txt\
    \ = str_replace('}', ' ', $txt);\n  $txt = str_replace('/', ' ', $txt);\n  $txt\
    \ = str_replace('\\\\', ' ', $txt);\n  $txt = str_replace('\"', ' ', $txt);\n\
    \  $txt = str_replace(\"'\", ' ', $txt);\n  $txt = str_replace('`', ' ', $txt);\n\
    \  $txt = str_replace('~', ' ', $txt);\n  $txt = str_replace('@', ' ', $txt);\n\
    \  $txt = str_replace('#', ' ', $txt);\n  $txt = str_replace('$', ' ', $txt);\n\
    \  $txt = str_replace('%', ' ', $txt);\n  $txt = str_replace('^', ' ', $txt);\n\
    \  $txt = str_replace('&', ' ', $txt);\n  $txt = str_replace('*', ' ', $txt);\n\
    \  $txt = str_replace('+', ' ', $txt);\n  $txt = str_replace('=', ' ', $txt);\n\
    \  $txt = str_replace('<', ' ', $txt);\n  $txt = str_replace('>', ' ', $txt);\n\
    \  $txt = str_replace('|', ' ', $txt);\nfunction candidate(...$args) {\n    return\
    \ split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hello\
    \ world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\")) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\"\
    ) !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\"\
    , \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\"\
    ) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\"\
    ) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Parse error:  Unclosed '{' on line 9 in /tmp/tmp7zv8djv6.php on line\
    \ 57\n"
  exit_code: 255
  status: SyntaxError
- program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // split_words(\"Hello world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"\
    Hello,world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"abcdef\") ==\
    \ 3\nfunction split_words($txt) {\n    $arr = str_split($txt);\n    $arr2 = [];\n\
    \    $arr3 = [];\n    $arr4 = [];\n    $arr5 = [];\n    $arr6 = [];\n    $arr7\
    \ = [];\n    $arr8 = [];\n    $arr9 = [];\n    $arr10 = [];\n    $arr11 = [];\n\
    \    $arr12 = [];\n    $arr13 = [];\n    $arr14 = [];\n    $arr15 = [];\n    $arr16\
    \ = [];\n    $arr17 = [];\n    $arr18 = [];\n    $arr19 = [];\n    $arr20 = [];\n\
    \    $arr21 = [];\n    $arr22 = [];\n    $arr23 = [];\n    $arr24 = [];\n    $arr25\
    \ = [];\n    $arr26 = [];\n    $arr27 = [];\n    $arr28 = [];\n    $arr29 = [];\n\
    \    $arr30 = [];\n    $arr31 = [];\n    $arr32 = [];\n    $arr33 = [];\n    $arr34\
    \ = [];\n    $arr35 = [];\n    $arr36 = [];\n    $arr37 = [];\n    $arr38 = [];\n\
    \    $arr39 = [];\n    $arr40 = [];\n    $arr41 = [];\n    $arr42 = [];\n    $arr43\
    \ = [];\n    $arr44 = [];\n    $arr45 = [];\n    $arr46 = [];\n    $arr47 = [];\n\
    \    $arr48 = [];\n    $arr49 = [];\n    $arr50 = [];\n    $arr51 = [];\n    $arr52\
    \ = [];\n    $arr53 = [];\n    $arr54 = [];\n    $arr55 = [];\n    $arr56 = [];\n\
    \    $arr57 = [];\n    $arr58 = [];\n    $arr59 = [];\n    $arr60 = [];\n    $arr61\
    \ = [];\n    $arr62 = [];\n    $arr63 = [];\n    $arr64 = [];\n    $arr65 = [];\n\
    \    $arr66 = [];\n    $arr67 = [];\n    $arr68 = [];\n    $arr69 = [];\n    $arr70\
    \ = [];\n    $arr71 = [];\n    $arr72 = [];\n    $arr\nfunction candidate(...$args)\
    \ {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\"\
    ) !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\"\
    , \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\"\
    ) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\"\
    ) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Parse error:  syntax error, unexpected token \"function\" in /tmp/tmp971pbip5.php\
    \ on line 83\n"
  exit_code: 255
  status: SyntaxError
- program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // split_words(\"Hello world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"\
    Hello,world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"abcdef\") ==\
    \ 3\nfunction split_words($txt) {\n    if (strpos($txt, ' ') !== false) {\n  \
    \      return explode(' ', $txt);\n    } elseif (strpos($txt, ',') !== false)\
    \ {\n        return explode(',', $txt);\n    } else {\n        $count = 0;\n \
    \       for ($i = 0; $i < strlen($txt); $i++) {\n            if (ord($txt[$i])\
    \ % 2 !== 0) {\n                $count++;\n            }\n        }\n        return\
    \ $count;\n    }\n}\n\nfunction candidate(...$args) {\n    return split_words(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world!\") !== array(\"\
    Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"\
    world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world\
    \ !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp1regf033.php:35\n\
    Stack trace:\n#0 /tmp/tmp1regf033.php(40): test()\n#1 {main}\n  thrown in /tmp/tmp1regf033.php\
    \ on line 35\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // split_words(\"Hello world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"\
    Hello,world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"abcdef\") ==\
    \ 3\nfunction split_words($txt) {\n    if(strpos($txt, ' ') !== false) {\n   \
    \     return explode(' ', $txt);\n    } elseif(strpos($txt, ',') !== false) {\n\
    \        return explode(',', $txt);\n    } else {\n        $count = 0;\n     \
    \   for($i = 0; $i < strlen($txt); $i++) {\n            if(ord($txt[$i]) % 2 !==\
    \ 0) {\n                $count++;\n            }\n        }\n        return $count;\n\
    \    }\n}\necho split_words(\"Hello world!\");\necho '<br>';\necho split_words(\"\
    Hello,world!\");\necho '<br>';\necho split_words(\"abcdef\");\nfunction candidate(...$args)\
    \ {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\"\
    ) !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\"\
    , \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\"\
    ) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\"\
    ) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: Array<br>Array<br>3
  stderr: "PHP Warning:  Array to string conversion in /tmp/tmppdr6qyp2.php on line\
    \ 24\nPHP Warning:  Array to string conversion in /tmp/tmppdr6qyp2.php on line\
    \ 26\nPHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmppdr6qyp2.php:39\n\
    Stack trace:\n#0 /tmp/tmppdr6qyp2.php(44): test()\n#1 {main}\n  thrown in /tmp/tmppdr6qyp2.php\
    \ on line 39\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // split_words(\"Hello world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"\
    Hello,world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"abcdef\") ==\
    \ 3\nfunction split_words($txt) {\n    if (strpos($txt, ' ') !== false) {\n  \
    \      return explode(' ', $txt);\n    } else if (strpos($txt, ',') !== false)\
    \ {\n        return explode(',', $txt);\n    } else {\n        $count = 0;\n \
    \       for ($i = 0; $i < strlen($txt); $i++) {\n            if (ord($txt[$i])\
    \ % 2 == 1) {\n                $count++;\n            }\n        }\n        return\
    \ $count;\n    }\n}\n\nfunction candidate(...$args) {\n    return split_words(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world!\") !== array(\"\
    Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"\
    world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world\
    \ !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpgm46fz7x.php:35\n\
    Stack trace:\n#0 /tmp/tmpgm46fz7x.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpgm46fz7x.php\
    \ on line 35\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // split_words(\"Hello world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"\
    Hello,world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"abcdef\") ==\
    \ 3\nfunction split_words($txt) {\n\tif (strpos($txt, ' ') !== false) {\n\t\t\
    return explode(' ', $txt);\n\t} elseif (strpos($txt, ',') !== false) {\n\t\treturn\
    \ explode(',', $txt);\n\t} else {\n\t\t$count = 0;\n\t\tfor ($i = 0; $i < strlen($txt);\
    \ $i++) {\n\t\t\tif (ord($txt[$i]) % 2 == 1) {\n\t\t\t\t$count++;\n\t\t\t}\n\t\
    \t}\n\t\treturn $count;\n\t}\n}\necho split_words(\"Hello world!\");\necho '<br>';\n\
    echo split_words(\"Hello,world!\");\necho '<br>';\necho split_words(\"abcdef\"\
    );\nfunction candidate(...$args) {\n    return split_words(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"Hello world!\") !== array(\"Hello\", \"\
    world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,world!\"\
    ) !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"world,!\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world !\"\
    ) !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: Array<br>Array<br>3
  stderr: "PHP Warning:  Array to string conversion in /tmp/tmp1wirucrn.php on line\
    \ 24\nPHP Warning:  Array to string conversion in /tmp/tmp1wirucrn.php on line\
    \ 26\nPHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp1wirucrn.php:39\n\
    Stack trace:\n#0 /tmp/tmp1wirucrn.php(44): test()\n#1 {main}\n  thrown in /tmp/tmp1wirucrn.php\
    \ on line 39\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // split_words(\"Hello world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"\
    Hello,world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"abcdef\") ==\
    \ 3\nfunction split_words($txt) {\n    $result = [];\n    if (strpos($txt, ' ')\
    \ !== false) {\n        $result = explode(' ', $txt);\n    } elseif (strpos($txt,\
    \ ',') !== false) {\n        $result = explode(',', $txt);\n    } else {\n   \
    \     $result = strlen(preg_replace('/[^a-z]/', '', $txt)) / 2;\n    }\n    return\
    \ $result;\n}\necho '<pre>';\nprint_r(split_words(\"Hello world!\"));\necho '</pre>';\n\
    echo '<pre>';\nprint_r(split_words(\"Hello,world!\"));\necho '</pre>';\necho '<pre>';\n\
    print_r(split_words(\"abcdef\"));\necho '</pre>';\nfunction candidate(...$args)\
    \ {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\"\
    ) !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\"\
    , \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\"\
    ) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\"\
    ) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "<pre>Array\n(\n    [0] => Hello\n    [1] => world!\n)\n</pre><pre>Array\n\
    (\n    [0] => Hello\n    [1] => world!\n)\n</pre><pre>3</pre>"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp4yjdj8mk.php:39\n\
    Stack trace:\n#0 /tmp/tmp4yjdj8mk.php(44): test()\n#1 {main}\n  thrown in /tmp/tmp4yjdj8mk.php\
    \ on line 39\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // split_words(\"Hello world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"\
    Hello,world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"abcdef\") ==\
    \ 3\nfunction split_words($txt) {\n    if (strpos($txt, ' ') !== false) {\n  \
    \      return explode(' ', $txt);\n    } elseif (strpos($txt, ',') !== false)\
    \ {\n        return explode(',', $txt);\n    } else {\n        $count = 0;\n \
    \       for ($i = 0; $i < strlen($txt); $i++) {\n            if (ord($txt[$i])\
    \ % 2 !== 0) {\n                $count++;\n            }\n        }\n        return\
    \ $count;\n    }\n}\n\nfunction candidate(...$args) {\n    return split_words(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world!\") !== array(\"\
    Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"\
    world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world\
    \ !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpkv8jenpv.php:35\n\
    Stack trace:\n#0 /tmp/tmpkv8jenpv.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpkv8jenpv.php\
    \ on line 35\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // split_words(\"Hello world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"\
    Hello,world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"abcdef\") ==\
    \ 3\nfunction split_words($txt) {\n    $arr = str_split($txt);\n    $arr2 = [];\n\
    \    $arr3 = [];\n    $arr4 = [];\n    $arr5 = [];\n    $arr6 = [];\n    $arr7\
    \ = [];\n    $arr8 = [];\n    $arr9 = [];\n    $arr10 = [];\n    $arr11 = [];\n\
    \    $arr12 = [];\n    $arr13 = [];\n    $arr14 = [];\n    $arr15 = [];\n    $arr16\
    \ = [];\n    $arr17 = [];\n    $arr18 = [];\n    $arr19 = [];\n    $arr20 = [];\n\
    \    $arr21 = [];\n    $arr22 = [];\n    $arr23 = [];\n    $arr24 = [];\n    $arr25\
    \ = [];\n    $arr26 = [];\n    $arr27 = [];\n    $arr28 = [];\n    $arr29 = [];\n\
    \    $arr30 = [];\n    $arr31 = [];\n    $arr32 = [];\n    $arr33 = [];\n    $arr34\
    \ = [];\n    $arr35 = [];\n    $arr36 = [];\n    $arr37 = [];\n    $arr38 = [];\n\
    \    $arr39 = [];\n    $arr40 = [];\n    $arr41 = [];\n    $arr42 = [];\n    $arr43\
    \ = [];\n    $arr44 = [];\n    $arr45 = [];\n    $arr46 = [];\n    $arr47 = [];\n\
    \    $arr48 = [];\n    $arr49 = [];\n    $arr50 = [];\n    $arr51 = [];\n    $arr52\
    \ = [];\n    $arr53 = [];\n    $arr54 = [];\n    $arr55 = [];\n    $arr56 = [];\n\
    \    $arr57 = [];\n    $arr58 = [];\n    $arr59 = [];\n    $arr60 = [];\n    $arr61\
    \ = [];\n    $arr62 = [];\n    $arr63 = [];\n    $arr64 = [];\n    $arr65 = [];\n\
    \    $arr66 = [];\n    $arr67 = [];\n    $arr68 = [];\n    $arr69 = [];\n    $arr70\
    \ = [];\n    $arr71 = [];\n    $arr72 = [];\n    $arr\nfunction candidate(...$args)\
    \ {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\"\
    ) !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\"\
    , \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\"\
    ) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\"\
    ) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Parse error:  syntax error, unexpected token \"function\" in /tmp/tmp39_ga1kf.php\
    \ on line 83\n"
  exit_code: 255
  status: SyntaxError
- program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // split_words(\"Hello world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"\
    Hello,world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"abcdef\") ==\
    \ 3\nfunction split_words($txt) {\n    $txt = str_replace(\",\", \" \", $txt);\n\
    \    $txt = str_replace(\"!\", \" \", $txt);\n    $txt = str_replace(\"?\", \"\
    \ \", $txt);\n    $txt = str_replace(\".\", \" \", $txt);\n    $txt = str_replace(\"\
    ;\", \" \", $txt);\n    $txt = str_replace(\":\", \" \", $txt);\n    $txt = str_replace(\"\
    -\", \" \", $txt);\n    $txt = str_replace(\"_\", \" \", $txt);\n    $txt = str_replace(\"\
    /\", \" \", $txt);\n    $txt = str_replace(\"\\\\\", \" \", $txt);\n    $txt =\
    \ str_replace(\"|\", \" \", $txt);\n    $txt = str_replace(\"(\", \" \", $txt);\n\
    \    $txt = str_replace(\")\", \" \", $txt);\n    $txt = str_replace(\"[\", \"\
    \ \", $txt);\n    $txt = str_replace(\"]\", \" \", $txt);\n    $txt = str_replace(\"\
    {\", \" \", $txt);\n    $txt = str_replace(\"}\", \" \", $txt);\n    $txt = str_replace(\"\
    *\", \" \", $txt);\n    $txt = str_replace(\"&\", \" \", $txt);\n    $txt = str_replace(\"\
    ^\", \" \", $txt);\n    $txt = str_replace(\"%\", \" \", $txt);\n    $txt = str_replace(\"\
    $\", \" \", $txt);\n    $txt = str_replace(\"#\", \" \", $txt);\n    $txt = str_replace(\"\
    @\", \" \", $txt);\n    $txt = str_replace(\"!\", \" \", $txt);\n    $txt = str_replace(\"\
    ~\", \" \", $txt);\n    $txt = str_replace(\"`\", \" \", $txt);\n    $txt = str_replace(\"\
    '\", \" \", $txt);\n    $txt = str_replace(\"\\\"\", \" \", $txt);\n    $txt =\
    \ str_replace(\"+\", \" \", $txt);\n    $txt = str_replace(\"=\", \" \", $txt);\n\
    \    $txt = str_replace(\"<\", \" \", $txt);\n    $txt\nfunction candidate(...$args)\
    \ {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\"\
    ) !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\"\
    , \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\"\
    ) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\"\
    ) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Parse error:  syntax error, unexpected token \"function\" in /tmp/tmponlqfqgp.php\
    \ on line 43\n"
  exit_code: 255
  status: SyntaxError
- program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // split_words(\"Hello world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"\
    Hello,world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"abcdef\") ==\
    \ 3\nfunction split_words($txt) {\n    $arr = str_split($txt);\n    $arr2 = [];\n\
    \    $arr3 = [];\n    $arr4 = [];\n    $arr5 = [];\n    $arr6 = [];\n    $arr7\
    \ = [];\n    $arr8 = [];\n    $arr9 = [];\n    $arr10 = [];\n    $arr11 = [];\n\
    \    $arr12 = [];\n    $arr13 = [];\n    $arr14 = [];\n    $arr15 = [];\n    $arr16\
    \ = [];\n    $arr17 = [];\n    $arr18 = [];\n    $arr19 = [];\n    $arr20 = [];\n\
    \    $arr21 = [];\n    $arr22 = [];\n    $arr23 = [];\n    $arr24 = [];\n    $arr25\
    \ = [];\n    $arr26 = [];\n    $arr27 = [];\n    $arr28 = [];\n    $arr29 = [];\n\
    \    $arr30 = [];\n    $arr31 = [];\n    $arr32 = [];\n    $arr33 = [];\n    $arr34\
    \ = [];\n    $arr35 = [];\n    $arr36 = [];\n    $arr37 = [];\n    $arr38 = [];\n\
    \    $arr39 = [];\n    $arr40 = [];\n    $arr41 = [];\n    $arr42 = [];\n    $arr43\
    \ = [];\n    $arr44 = [];\n    $arr45 = [];\n    $arr46 = [];\n    $arr47 = [];\n\
    \    $arr48 = [];\n    $arr49 = [];\n    $arr50 = [];\n    $arr51 = [];\n    $arr52\
    \ = [];\n    $arr53 = [];\n    $arr54 = [];\n    $arr55 = [];\n    $arr56 = [];\n\
    \    $arr57 = [];\n    $arr58 = [];\n    $arr59 = [];\n    $arr60 = [];\n    $arr61\
    \ = [];\n    $arr62 = [];\n    $arr63 = [];\n    $arr64 = [];\n    $arr65 = [];\n\
    \    $arr66 = [];\n    $arr67 = [];\n    $arr68 = [];\n    $arr69 = [];\n    $arr70\
    \ = [];\n    $arr71 = [];\n    $arr72 = [];\n    $arr\nfunction candidate(...$args)\
    \ {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\"\
    ) !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\"\
    , \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\"\
    ) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\"\
    ) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Parse error:  syntax error, unexpected token \"function\" in /tmp/tmpupa1h5wb.php\
    \ on line 83\n"
  exit_code: 255
  status: SyntaxError
- program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // split_words(\"Hello world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"\
    Hello,world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"abcdef\") ==\
    \ 3\nfunction split_words($txt) {\n    if (strpos($txt, ' ') !== false) {\n  \
    \      return explode(' ', $txt);\n    } elseif (strpos($txt, ',') !== false)\
    \ {\n        return explode(',', $txt);\n    } else {\n        $count = 0;\n \
    \       for ($i = 0; $i < strlen($txt); $i++) {\n            if (ord($txt[$i])\
    \ % 2 !== 0) {\n                $count++;\n            }\n        }\n        return\
    \ $count;\n    }\n}\necho split_words(\"Hello world!\");\necho '<br>';\necho split_words(\"\
    Hello,world!\");\necho '<br>';\necho split_words(\"abcdef\");\necho '<br>';\n\
    echo split_words(\"abcdef,ghijklmnop\");\necho '<br>';\necho split_words(\"abcdef,ghijklmnop,qrstuvwxyz\"\
    );\necho '<br>';\necho split_words(\"abcdef,ghijklmnop,qrstuvwxyz,1234567890\"\
    );\necho '<br>';\necho split_words(\"abcdef,ghijklmnop,qrstuvwxyz,1234567890,ABCDEFGHIJKLMNOP\"\
    );\necho '<br>';\necho split_words(\"abcdef,ghijklmnop,qrstuvwxyz,1234567890,ABCDEFGHIJKLMNOP,QRSTUVWXYZ\"\
    );\necho '<br>';\necho split_words(\"abcdef,ghijklmnop,qrstuvwxyz,1234567890,ABCDEFGHIJKLMNOP,QRSTUVWXYZ,!@#$%^&*()\"\
    );\necho '<br>';\necho split_words(\"abcdef,ghijklmnop,qrstuvwxyz,1234567890,ABCDEFGHIJKLMNOP,QRSTUVWXYZ,!@#$%^&*(),<>?/\"\
    );\necho '<br>';\necho split_words(\"abcdef,ghijklmnop,qrstuvwxyz,12345\nfunction\
    \ candidate(...$args) {\n    return split_words(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"Hello world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,world!\"\
    ) !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"world,!\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world !\"\
    ) !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Parse error:  syntax error, unexpected identifier \"Hello\", expecting\
    \ \")\" in /tmp/tmpbkjg3kqx.php on line 50\n"
  exit_code: 255
  status: SyntaxError
- program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // split_words(\"Hello world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"\
    Hello,world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"abcdef\") ==\
    \ 3\nfunction split_words($txt) {\n  if (strpos($txt, ' ') !== false) {\n    return\
    \ explode(' ', $txt);\n  } elseif (strpos($txt, ',') !== false) {\n    return\
    \ explode(',', $txt);\n  } else {\n    $count = 0;\n    for ($i = 0; $i < strlen($txt);\
    \ $i++) {\n      if (ord($txt[$i]) % 2 !== 0) {\n        $count++;\n      }\n\
    \    }\n    return $count;\n  }\n}\nfunction candidate(...$args) {\n    return\
    \ split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hello\
    \ world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\")) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\"\
    ) !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\"\
    , \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\"\
    ) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\"\
    ) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpiqkofuk7.php:34\n\
    Stack trace:\n#0 /tmp/tmpiqkofuk7.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpiqkofuk7.php\
    \ on line 34\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // split_words(\"Hello world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"\
    Hello,world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"abcdef\") ==\
    \ 3\nfunction split_words($txt) {\n    $txt = str_replace(\" \", \",\", $txt);\n\
    \    $txt = str_replace(\",\", \" \", $txt);\n    $txt = explode(\" \", $txt);\n\
    \    $count = 0;\n    foreach ($txt as $key => $value) {\n        if ($key % 2\
    \ == 0) {\n            $count++;\n        }\n    }\n    return $count;\n}\necho\
    \ split_words(\"Hello world!\");\necho \"<br>\";\necho split_words(\"Hello,world!\"\
    );\necho \"<br>\";\necho split_words(\"abcdef\");\nfunction candidate(...$args)\
    \ {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\"\
    ) !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\"\
    , \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\"\
    ) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\"\
    ) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: 1<br>1<br>1
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpqg6ys3lk.php:31\n\
    Stack trace:\n#0 /tmp/tmpqg6ys3lk.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpqg6ys3lk.php\
    \ on line 31\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // split_words(\"Hello world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"\
    Hello,world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"abcdef\") ==\
    \ 3\nfunction split_words($txt) {\n    $arr = [];\n    if (strpos($txt, ' ') !==\
    \ false) {\n        $arr = explode(' ', $txt);\n    } elseif (strpos($txt, ',')\
    \ !== false) {\n        $arr = explode(',', $txt);\n    } else {\n        $arr\
    \ = str_split($txt);\n        $arr = array_filter($arr, function ($v) {\n    \
    \        return ord($v) % 2 === 1;\n        });\n        $arr = count($arr);\n\
    \    }\n    return $arr;\n}\n\nfunction candidate(...$args) {\n    return split_words(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world!\") !== array(\"\
    Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"\
    world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world\
    \ !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp4hpoquan.php:35\n\
    Stack trace:\n#0 /tmp/tmp4hpoquan.php(40): test()\n#1 {main}\n  thrown in /tmp/tmp4hpoquan.php\
    \ on line 35\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // split_words(\"Hello world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"\
    Hello,world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"abcdef\") ==\
    \ 3\nfunction split_words($txt) {\n    $txt = str_replace(',', ' ', $txt);\n \
    \   $txt = str_replace('!', ' ', $txt);\n    $txt = str_replace('?', ' ', $txt);\n\
    \    $txt = str_replace('.', ' ', $txt);\n    $txt = str_replace(';', ' ', $txt);\n\
    \    $txt = str_replace(':', ' ', $txt);\n    $txt = str_replace('-', ' ', $txt);\n\
    \    $txt = str_replace('_', ' ', $txt);\n    $txt = str_replace('(', ' ', $txt);\n\
    \    $txt = str_replace(')', ' ', $txt);\n    $txt = str_replace('[', ' ', $txt);\n\
    \    $txt = str_replace(']', ' ', $txt);\n    $txt = str_replace('{', ' ', $txt);\n\
    \    $txt = str_replace('}', ' ', $txt);\n    $txt = str_replace('\"', ' ', $txt);\n\
    \    $txt = str_replace(\"'\", ' ', $txt);\n    $txt = str_replace('/', ' ', $txt);\n\
    \    $txt = str_replace('\\\\', ' ', $txt);\n    $txt = str_replace('|', ' ',\
    \ $txt);\n    $txt = str_replace('+', ' ', $txt);\n    $txt = str_replace('=',\
    \ ' ', $txt);\n    $txt = str_replace('*', ' ', $txt);\n    $txt = str_replace('&',\
    \ ' ', $txt);\n    $txt = str_replace('^', ' ', $txt);\n    $txt = str_replace('%',\
    \ ' ', $txt);\n    $txt = str_replace('$', ' ', $txt);\n    $txt = str_replace('#',\
    \ ' ', $txt);\n    $txt = str_replace('@', ' ', $txt);\n    $txt = str_replace('~',\
    \ ' ', $txt);\n    $txt = str_replace('`', ' ', $txt);\n    $txt = str_replace('>',\
    \ ' ', $txt);\n    $txt = str_replace('<', ' ', $txt);\nfunction candidate(...$args)\
    \ {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\"\
    ) !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\"\
    , \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\"\
    ) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\"\
    ) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Parse error:  Unclosed '{' on line 9 in /tmp/tmp5bn6thpw.php on line\
    \ 57\n"
  exit_code: 255
  status: SyntaxError
- program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // split_words(\"Hello world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"\
    Hello,world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"abcdef\") ==\
    \ 3\nfunction split_words($txt) {\n    if (strpos($txt, ' ') !== false) {\n  \
    \      return explode(' ', $txt);\n    } elseif (strpos($txt, ',') !== false)\
    \ {\n        return explode(',', $txt);\n    } else {\n        $count = 0;\n \
    \       for ($i = 0; $i < strlen($txt); $i++) {\n            if (ord($txt[$i])\
    \ % 2 != 0) {\n                $count++;\n            }\n        }\n        return\
    \ $count;\n    }\n}\necho split_words(\"Hello world!\") . '<br>';\necho split_words(\"\
    Hello,world!\") . '<br>';\necho split_words(\"abcdef\") . '<br>';\n\nfunction\
    \ candidate(...$args) {\n    return split_words(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"Hello world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,world!\"\
    ) !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"world,!\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world !\"\
    ) !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: Array<br>Array<br>3<br>
  stderr: "PHP Warning:  Array to string conversion in /tmp/tmp2x5t9l6i.php on line\
    \ 24\nPHP Warning:  Array to string conversion in /tmp/tmp2x5t9l6i.php on line\
    \ 25\nPHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp2x5t9l6i.php:38\n\
    Stack trace:\n#0 /tmp/tmp2x5t9l6i.php(43): test()\n#1 {main}\n  thrown in /tmp/tmp2x5t9l6i.php\
    \ on line 38\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // split_words(\"Hello world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"\
    Hello,world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"abcdef\") ==\
    \ 3\nfunction split_words($txt) {\n    $result = [];\n    if (strpos($txt, ' ')\
    \ !== false) {\n        $result = explode(' ', $txt);\n    } elseif (strpos($txt,\
    \ ',') !== false) {\n        $result = explode(',', $txt);\n    } else {\n   \
    \     $count = 0;\n        for ($i = 0; $i < strlen($txt); $i++) {\n         \
    \   if (ord($txt[$i]) % 2 !== 0) {\n                $count++;\n            }\n\
    \        }\n        $result = $count;\n    }\n    return $result;\n}\necho '<pre>';\n\
    print_r(split_words(\"Hello world!\"));\necho '</pre>';\necho '<pre>';\nprint_r(split_words(\"\
    Hello,world!\"));\necho '</pre>';\necho '<pre>';\nprint_r(split_words(\"abcdef\"\
    ));\necho '</pre>';\nfunction candidate(...$args) {\n    return split_words(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world!\") !== array(\"\
    Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"\
    world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world\
    \ !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: "<pre>Array\n(\n    [0] => Hello\n    [1] => world!\n)\n</pre><pre>Array\n\
    (\n    [0] => Hello\n    [1] => world!\n)\n</pre><pre>3</pre>"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp_v5556lh.php:45\n\
    Stack trace:\n#0 /tmp/tmp_v5556lh.php(50): test()\n#1 {main}\n  thrown in /tmp/tmp_v5556lh.php\
    \ on line 45\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // split_words(\"Hello world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"\
    Hello,world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"abcdef\") ==\
    \ 3\nfunction split_words($txt) {\n\tif(strpos($txt, ' ') !== false) {\n\t\treturn\
    \ explode(' ', $txt);\n\t} elseif(strpos($txt, ',') !== false) {\n\t\treturn explode(',',\
    \ $txt);\n\t} else {\n\t\t$count = 0;\n\t\tfor($i = 0; $i < strlen($txt); $i++)\
    \ {\n\t\t\tif(ord($txt[$i]) % 2 !== 0) {\n\t\t\t\t$count++;\n\t\t\t}\n\t\t}\n\t\
    \treturn $count;\n\t}\n}\n\necho split_words(\"Hello world!\");\necho \"<br>\"\
    ;\necho split_words(\"Hello,world!\");\necho \"<br>\";\necho split_words(\"abcdef\"\
    );\nfunction candidate(...$args) {\n    return split_words(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"Hello world!\") !== array(\"Hello\", \"\
    world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,world!\"\
    ) !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"world,!\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world !\"\
    ) !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: Array<br>Array<br>3
  stderr: "PHP Warning:  Array to string conversion in /tmp/tmp7rugm6hv.php on line\
    \ 25\nPHP Warning:  Array to string conversion in /tmp/tmp7rugm6hv.php on line\
    \ 27\nPHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp7rugm6hv.php:40\n\
    Stack trace:\n#0 /tmp/tmp7rugm6hv.php(45): test()\n#1 {main}\n  thrown in /tmp/tmp7rugm6hv.php\
    \ on line 40\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // split_words(\"Hello world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"\
    Hello,world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"abcdef\") ==\
    \ 3\nfunction split_words($txt) {\n    if(strpos($txt, ' ') !== false) {\n   \
    \     return explode(' ', $txt);\n    } elseif(strpos($txt, ',') !== false) {\n\
    \        return explode(',', $txt);\n    } else {\n        $count = 0;\n     \
    \   for($i = 0; $i < strlen($txt); $i++) {\n            if(ord($txt[$i]) % 2 !==\
    \ 0) {\n                $count++;\n            }\n        }\n        return $count;\n\
    \    }\n}\necho split_words(\"Hello world!\");\necho '<br>';\necho split_words(\"\
    Hello,world!\");\necho '<br>';\necho split_words(\"abcdef\");\nfunction candidate(...$args)\
    \ {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\"\
    ) !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\"\
    , \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\"\
    ) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\"\
    ) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: Array<br>Array<br>3
  stderr: "PHP Warning:  Array to string conversion in /tmp/tmp839h62is.php on line\
    \ 24\nPHP Warning:  Array to string conversion in /tmp/tmp839h62is.php on line\
    \ 26\nPHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp839h62is.php:39\n\
    Stack trace:\n#0 /tmp/tmp839h62is.php(44): test()\n#1 {main}\n  thrown in /tmp/tmp839h62is.php\
    \ on line 39\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // split_words(\"Hello world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"\
    Hello,world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"abcdef\") ==\
    \ 3\nfunction split_words($txt) {\n    if (strpos($txt, ' ') !== false) {\n  \
    \      return explode(' ', $txt);\n    } elseif (strpos($txt, ',') !== false)\
    \ {\n        return explode(',', $txt);\n    } else {\n        $count = 0;\n \
    \       for ($i = 0; $i < strlen($txt); $i++) {\n            if (ord($txt[$i])\
    \ % 2 !== 0) {\n                $count++;\n            }\n        }\n        return\
    \ $count;\n    }\n}\necho split_words(\"Hello world!\");\necho '<br>';\necho split_words(\"\
    Hello,world!\");\necho '<br>';\necho split_words(\"abcdef\");\necho '<br>';\n\
    echo split_words(\"abcdefg\");\necho '<br>';\necho split_words(\"abcdefgh\");\n\
    echo '<br>';\necho split_words(\"abcdefghi\");\necho '<br>';\necho split_words(\"\
    abcdefghij\");\necho '<br>';\necho split_words(\"abcdefghijk\");\necho '<br>';\n\
    echo split_words(\"abcdefghijkl\");\necho '<br>';\necho split_words(\"abcdefghijklm\"\
    );\necho '<br>';\necho split_words(\"abcdefghijklmn\");\necho '<br>';\necho split_words(\"\
    abcdefghijklmno\");\necho '<br>';\necho split_words(\"abcdefghijklmnop\");\necho\
    \ '<br>';\necho split_words(\"abcdefghijklmnopq\");\necho '<br>';\necho split_words(\"\
    abcdefghijklmnopqr\");\necho '<br>';\necho split_words(\"abcdefghijklmnopqrs\"\
    );\necho '<br>';\necho split_words(\"abcdefghijklmnopqrst\");\necho '<br>';\n\
    echo split_words(\"abcdefghijklmnopqrstu\");\necho '<br>';\necho split_words(\"\
    abcdefghijklmnopqrstuv\");\necho '<br>';\necho split\nfunction candidate(...$args)\
    \ {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\"\
    ) !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\"\
    , \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\"\
    ) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\"\
    ) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Parse error:  syntax error, unexpected token \"function\", expecting\
    \ \",\" or \";\" in /tmp/tmplmlisljh.php on line 63\n"
  exit_code: 255
  status: SyntaxError
- program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // split_words(\"Hello world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"\
    Hello,world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"abcdef\") ==\
    \ 3\nfunction split_words($txt) {\n    $result = [];\n    $txt = str_replace(',',\
    \ ' ', $txt);\n    $txt = str_replace('!', '', $txt);\n    $txt = str_replace('?',\
    \ '', $txt);\n    $txt = str_replace('.', '', $txt);\n    $txt = str_replace('-',\
    \ '', $txt);\n    $txt = str_replace('_', '', $txt);\n    $txt = str_replace('\"\
    ', '', $txt);\n    $txt = str_replace(\"'\", '', $txt);\n    $txt = str_replace('(',\
    \ '', $txt);\n    $txt = str_replace(')', '', $txt);\n    $txt = str_replace('[',\
    \ '', $txt);\n    $txt = str_replace(']', '', $txt);\n    $txt = str_replace('{',\
    \ '', $txt);\n    $txt = str_replace('}', '', $txt);\n    $txt = str_replace('/',\
    \ '', $txt);\n    $txt = str_replace('\\\\', '', $txt);\n    $txt = str_replace('*',\
    \ '', $txt);\n    $txt = str_replace('&', '', $txt);\n    $txt = str_replace('^',\
    \ '', $txt);\n    $txt = str_replace('%', '', $txt);\n    $txt = str_replace('$',\
    \ '', $txt);\n    $txt = str_replace('#', '', $txt);\n    $txt = str_replace('@',\
    \ '', $txt);\n    $txt = str_replace('!', '', $txt);\n    $txt = str_replace('~',\
    \ '', $txt);\n    $txt = str_replace('`', '', $txt);\n    $txt = str_replace('+',\
    \ '', $txt);\n    $txt = str_replace('=', '', $txt);\n    $txt = str_replace('|',\
    \ '', $txt);\n    $txt = str_replace('>', '', $txt);\n    $txt = str_replace('<',\
    \ '', $txt);\n    $txt = str_replace(':\nfunction candidate(...$args) {\n    return\
    \ split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hello\
    \ world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\")) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\"\
    ) !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\"\
    , \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\"\
    ) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\"\
    ) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Parse error:  syntax error, unexpected string content \":\" in /tmp/tmpaiot0bij.php\
    \ on line 42\n"
  exit_code: 255
  status: SyntaxError
- program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // split_words(\"Hello world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"\
    Hello,world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"abcdef\") ==\
    \ 3\nfunction split_words($txt) {\n    $txt = str_replace(',', ' ', $txt);\n \
    \   $txt = str_replace('!', ' ', $txt);\n    $txt = str_replace('?', ' ', $txt);\n\
    \    $txt = str_replace('.', ' ', $txt);\n    $txt = str_replace(';', ' ', $txt);\n\
    \    $txt = str_replace(':', ' ', $txt);\n    $txt = str_replace('-', ' ', $txt);\n\
    \    $txt = str_replace('_', ' ', $txt);\n    $txt = str_replace('(', ' ', $txt);\n\
    \    $txt = str_replace(')', ' ', $txt);\n    $txt = str_replace('[', ' ', $txt);\n\
    \    $txt = str_replace(']', ' ', $txt);\n    $txt = str_replace('{', ' ', $txt);\n\
    \    $txt = str_replace('}', ' ', $txt);\n    $txt = str_replace('/', ' ', $txt);\n\
    \    $txt = str_replace('\\\\', ' ', $txt);\n    $txt = str_replace('*', ' ',\
    \ $txt);\n    $txt = str_replace('+', ' ', $txt);\n    $txt = str_replace('=',\
    \ ' ', $txt);\n    $txt = str_replace('%', ' ', $txt);\n    $txt = str_replace('$',\
    \ ' ', $txt);\n    $txt = str_replace('#', ' ', $txt);\n    $txt = str_replace('@',\
    \ ' ', $txt);\n    $txt = str_replace('&', ' ', $txt);\n    $txt = str_replace('^',\
    \ ' ', $txt);\n    $txt = str_replace('~', ' ', $txt);\n    $txt = str_replace('`',\
    \ ' ', $txt);\n    $txt = str_replace('|', ' ', $txt);\n    $txt = str_replace('\"\
    ', ' ', $txt);\n    $txt = str_replace('\\'', ' ', $txt);\n    $txt = str_replace('<',\
    \ ' ', $txt);\n    $txt = str_replace('>', ' ', $txt);\nfunction candidate(...$args)\
    \ {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\"\
    ) !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\"\
    , \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\"\
    ) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\"\
    ) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Parse error:  Unclosed '{' on line 9 in /tmp/tmpfknqp8w5.php on line\
    \ 57\n"
  exit_code: 255
  status: SyntaxError
- program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // split_words(\"Hello world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"\
    Hello,world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"abcdef\") ==\
    \ 3\nfunction split_words($txt) {\n    $arr = [];\n    if (strpos($txt, ' ') !==\
    \ false) {\n        $arr = explode(' ', $txt);\n    } elseif (strpos($txt, ',')\
    \ !== false) {\n        $arr = explode(',', $txt);\n    } else {\n        $arr\
    \ = str_split($txt);\n        $arr = array_filter($arr, function ($item) {\n \
    \           return ord($item) % 2 === 1;\n        });\n        $arr = count($arr);\n\
    \    }\n    return $arr;\n}\n\nfunction candidate(...$args) {\n    return split_words(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world!\") !== array(\"\
    Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"\
    world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world\
    \ !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpeml24ssg.php:35\n\
    Stack trace:\n#0 /tmp/tmpeml24ssg.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpeml24ssg.php\
    \ on line 35\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // split_words(\"Hello world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"\
    Hello,world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"abcdef\") ==\
    \ 3\nfunction split_words($txt) {\n    if (strpos($txt, ' ') !== false) {\n  \
    \      return explode(' ', $txt);\n    } elseif (strpos($txt, ',') !== false)\
    \ {\n        return explode(',', $txt);\n    } else {\n        $count = 0;\n \
    \       for ($i = 0; $i < strlen($txt); $i++) {\n            if (ord($txt[$i])\
    \ % 2 !== 0) {\n                $count++;\n            }\n        }\n        return\
    \ $count;\n    }\n}\n\nfunction candidate(...$args) {\n    return split_words(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world!\") !== array(\"\
    Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"\
    world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world\
    \ !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpr3ah8whb.php:35\n\
    Stack trace:\n#0 /tmp/tmpr3ah8whb.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpr3ah8whb.php\
    \ on line 35\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // split_words(\"Hello world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"\
    Hello,world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"abcdef\") ==\
    \ 3\nfunction split_words($txt) {\n    $arr = [];\n    if (strpos($txt, ' ') !==\
    \ false) {\n        $arr = explode(' ', $txt);\n    } elseif (strpos($txt, ',')\
    \ !== false) {\n        $arr = explode(',', $txt);\n    } else {\n        $count\
    \ = 0;\n        for ($i = 0; $i < strlen($txt); $i++) {\n            if (ord($txt[$i])\
    \ % 2 != 0) {\n                $count++;\n            }\n        }\n        $arr\
    \ = $count;\n    }\n    return $arr;\n}\necho '<pre>';\nprint_r(split_words(\"\
    Hello world!\"));\necho '</pre>';\necho '<pre>';\nprint_r(split_words(\"Hello,world!\"\
    ));\necho '</pre>';\necho '<pre>';\nprint_r(split_words(\"abcdef\"));\necho '</pre>';\n\
    function candidate(...$args) {\n    return split_words(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"Hello world!\") !== array(\"Hello\", \"\
    world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,world!\"\
    ) !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"world,!\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world !\"\
    ) !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: "<pre>Array\n(\n    [0] => Hello\n    [1] => world!\n)\n</pre><pre>Array\n\
    (\n    [0] => Hello\n    [1] => world!\n)\n</pre><pre>3</pre>"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmprwldkqrp.php:45\n\
    Stack trace:\n#0 /tmp/tmprwldkqrp.php(50): test()\n#1 {main}\n  thrown in /tmp/tmprwldkqrp.php\
    \ on line 45\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // split_words(\"Hello world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"\
    Hello,world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"abcdef\") ==\
    \ 3\nfunction split_words($txt) {\n    $txt = str_replace(',', ' ', $txt);\n \
    \   $txt = str_replace('!', ' ', $txt);\n    $txt = str_replace('.', ' ', $txt);\n\
    \    $txt = str_replace('?', ' ', $txt);\n    $txt = str_replace('-', ' ', $txt);\n\
    \    $txt = str_replace('_', ' ', $txt);\n    $txt = str_replace('/', ' ', $txt);\n\
    \    $txt = str_replace('\\\\', ' ', $txt);\n    $txt = str_replace('*', ' ',\
    \ $txt);\n    $txt = str_replace('(', ' ', $txt);\n    $txt = str_replace(')',\
    \ ' ', $txt);\n    $txt = str_replace('[', ' ', $txt);\n    $txt = str_replace(']',\
    \ ' ', $txt);\n    $txt = str_replace('{', ' ', $txt);\n    $txt = str_replace('}',\
    \ ' ', $txt);\n    $txt = str_replace('\"', ' ', $txt);\n    $txt = str_replace(\"\
    '\", ' ', $txt);\n    $txt = str_replace('+', ' ', $txt);\n    $txt = str_replace('=',\
    \ ' ', $txt);\n    $txt = str_replace('<', ' ', $txt);\n    $txt = str_replace('>',\
    \ ' ', $txt);\n    $txt = str_replace('|', ' ', $txt);\n    $txt = str_replace('&',\
    \ ' ', $txt);\n    $txt = str_replace('^', ' ', $txt);\n    $txt = str_replace('%',\
    \ ' ', $txt);\n    $txt = str_replace('$', ' ', $txt);\n    $txt = str_replace('#',\
    \ ' ', $txt);\n    $txt = str_replace('@', ' ', $txt);\n    $txt = str_replace('!',\
    \ ' ', $txt);\n    $txt = str_replace('~', ' ', $txt);\n    $txt = str_replace('`',\
    \ ' ', $txt);\n    $txt = str_replace(';', ' ', $txt);\nfunction candidate(...$args)\
    \ {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\"\
    ) !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\"\
    , \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\"\
    ) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\"\
    ) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Parse error:  Unclosed '{' on line 9 in /tmp/tmpr_wl5_ss.php on line\
    \ 57\n"
  exit_code: 255
  status: SyntaxError
- program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // split_words(\"Hello world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"\
    Hello,world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"abcdef\") ==\
    \ 3\nfunction split_words($txt) {\n    $txt = str_replace(',', ' ', $txt);\n \
    \   $txt = str_replace('!', ' ', $txt);\n    $txt = str_replace('?', ' ', $txt);\n\
    \    $txt = str_replace('.', ' ', $txt);\n    $txt = str_replace(';', ' ', $txt);\n\
    \    $txt = str_replace(':', ' ', $txt);\n    $txt = str_replace('-', ' ', $txt);\n\
    \    $txt = str_replace('_', ' ', $txt);\n    $txt = str_replace('(', ' ', $txt);\n\
    \    $txt = str_replace(')', ' ', $txt);\n    $txt = str_replace('[', ' ', $txt);\n\
    \    $txt = str_replace(']', ' ', $txt);\n    $txt = str_replace('{', ' ', $txt);\n\
    \    $txt = str_replace('}', ' ', $txt);\n    $txt = str_replace('\"', ' ', $txt);\n\
    \    $txt = str_replace(\"'\", ' ', $txt);\n    $txt = str_replace('/', ' ', $txt);\n\
    \    $txt = str_replace('\\\\', ' ', $txt);\n    $txt = str_replace('+', ' ',\
    \ $txt);\n    $txt = str_replace('=', ' ', $txt);\n    $txt = str_replace('*',\
    \ ' ', $txt);\n    $txt = str_replace('&', ' ', $txt);\n    $txt = str_replace('^',\
    \ ' ', $txt);\n    $txt = str_replace('%', ' ', $txt);\n    $txt = str_replace('$',\
    \ ' ', $txt);\n    $txt = str_replace('#', ' ', $txt);\n    $txt = str_replace('@',\
    \ ' ', $txt);\n    $txt = str_replace('!', ' ', $txt);\n    $txt = str_replace('~',\
    \ ' ', $txt);\n    $txt = str_replace('`', ' ', $txt);\n    $txt = str_replace('<',\
    \ ' ', $txt);\n    $txt = str_replace('>', ' ', $txt);\nfunction candidate(...$args)\
    \ {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\"\
    ) !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\"\
    , \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\"\
    ) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\"\
    ) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Parse error:  Unclosed '{' on line 9 in /tmp/tmp6nglsw8_.php on line\
    \ 57\n"
  exit_code: 255
  status: SyntaxError
- program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // split_words(\"Hello world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"\
    Hello,world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"abcdef\") ==\
    \ 3\nfunction split_words($txt) {\n    if (strpos($txt, ' ') !== false) {\n  \
    \      return explode(' ', $txt);\n    } elseif (strpos($txt, ',') !== false)\
    \ {\n        return explode(',', $txt);\n    } else {\n        $count = 0;\n \
    \       for ($i = 0; $i < strlen($txt); $i++) {\n            if (ord($txt[$i])\
    \ % 2 !== 0) {\n                $count++;\n            }\n        }\n        return\
    \ $count;\n    }\n}\necho split_words(\"Hello world!\");\necho '<br>';\necho split_words(\"\
    Hello,world!\");\necho '<br>';\necho split_words(\"abcdef\");\necho '<br>';\n\
    echo split_words(\"abcdef,ghijkl\");\necho '<br>';\necho split_words(\"abcdef\
    \ ghijkl\");\necho '<br>';\necho split_words(\"abcdef,ghijkl,mnopqr\");\necho\
    \ '<br>';\necho split_words(\"abcdef ghijkl mnopqr\");\necho '<br>';\necho split_words(\"\
    abcdef,ghijkl mnopqr\");\necho '<br>';\necho split_words(\"abcdef ghijkl,mnopqr\"\
    );\necho '<br>';\necho split_words(\"abcdef,ghijkl,mnopqr,stuvwx\");\necho '<br>';\n\
    echo split_words(\"abcdef ghijkl mnopqr stuvwx\");\necho '<br>';\necho split_words(\"\
    abcdef,ghijkl mnopqr stuvwx\");\necho '<br>';\necho split_words(\"abcdef ghijkl,mnopqr\
    \ stuvwx\");\necho '<br>';\necho split_words(\"abcdef,ghijkl,mnopqr stuvwx\");\n\
    echo '<br>';\necho split_words(\"abcdef ghijkl,mnopqr,stuvwx\");\necho '<br>';\n\
    echo split_words(\"abcdef,ghijkl mnopqr,stuvwx\");\necho '<br>';\n\nfunction candidate(...$args)\
    \ {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\"\
    ) !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\"\
    , \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\"\
    ) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\"\
    ) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: Array<br>Array<br>3<br>Array<br>Array<br>Array<br>Array<br>Array<br>Array<br>Array<br>Array<br>Array<br>Array<br>Array<br>Array<br>Array<br>
  stderr: "PHP Warning:  Array to string conversion in /tmp/tmpgvo2ichz.php on line\
    \ 24\nPHP Warning:  Array to string conversion in /tmp/tmpgvo2ichz.php on line\
    \ 26\nPHP Warning:  Array to string conversion in /tmp/tmpgvo2ichz.php on line\
    \ 30\nPHP Warning:  Array to string conversion in /tmp/tmpgvo2ichz.php on line\
    \ 32\nPHP Warning:  Array to string conversion in /tmp/tmpgvo2ichz.php on line\
    \ 34\nPHP Warning:  Array to string conversion in /tmp/tmpgvo2ichz.php on line\
    \ 36\nPHP Warning:  Array to string conversion in /tmp/tmpgvo2ichz.php on line\
    \ 38\nPHP Warning:  Array to string conversion in /tmp/tmpgvo2ichz.php on line\
    \ 40\nPHP Warning:  Array to string conversion in /tmp/tmpgvo2ichz.php on line\
    \ 42\nPHP Warning:  Array to string conversion in /tmp/tmpgvo2ichz.php on line\
    \ 44\nPHP Warning:  Array to string conversion in /tmp/tmpgvo2ichz.php on line\
    \ 46\nPHP Warning:  Array to string conversion in /tmp/tmpgvo2ichz.php on line\
    \ 48\nPHP Warning:  Array to string conversion in /tmp/tmpgvo2ichz.php on line\
    \ 50\nPHP Warning:  Array to string conversion in /tmp/tmpgvo2ichz.php on line\
    \ 52\nPHP Warning:  Array to string conversion in /tmp/tmpgvo2ichz.php on line\
    \ 54\nPHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpgvo2ichz.php:67\n\
    Stack trace:\n#0 /tmp/tmpgvo2ichz.php(72): test()\n#1 {main}\n  thrown in /tmp/tmpgvo2ichz.php\
    \ on line 67\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // split_words(\"Hello world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"\
    Hello,world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"abcdef\") ==\
    \ 3\nfunction split_words($txt) {\n    $words = explode(' ', $txt);\n    if (count($words)\
    \ == 1) {\n        $words = explode(',', $txt);\n        if (count($words) ==\
    \ 1) {\n            $words = str_split($txt);\n            $odds = 0;\n      \
    \      foreach ($words as $word) {\n                if (ord($word) % 2 == 1) {\n\
    \                    $odds++;\n                }\n            }\n            return\
    \ $odds;\n        }\n    }\n    return $words;\n}\n\nfunction candidate(...$args)\
    \ {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\"\
    ) !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\"\
    , \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\"\
    ) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\"\
    ) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpm9k08r8p.php:37\n\
    Stack trace:\n#0 /tmp/tmpm9k08r8p.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpm9k08r8p.php\
    \ on line 37\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // split_words(\"Hello world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"\
    Hello,world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"abcdef\") ==\
    \ 3\nfunction split_words($txt) {\n    $txt = str_replace(',', ' ', $txt);\n \
    \   $txt = str_replace('!', ' ', $txt);\n    $txt = str_replace('?', ' ', $txt);\n\
    \    $txt = str_replace('.', ' ', $txt);\n    $txt = str_replace(';', ' ', $txt);\n\
    \    $txt = str_replace(':', ' ', $txt);\n    $txt = str_replace('-', ' ', $txt);\n\
    \    $txt = str_replace('_', ' ', $txt);\n    $txt = str_replace('(', ' ', $txt);\n\
    \    $txt = str_replace(')', ' ', $txt);\n    $txt = str_replace('[', ' ', $txt);\n\
    \    $txt = str_replace(']', ' ', $txt);\n    $txt = str_replace('{', ' ', $txt);\n\
    \    $txt = str_replace('}', ' ', $txt);\n    $txt = str_replace('\"', ' ', $txt);\n\
    \    $txt = str_replace(\"'\", ' ', $txt);\n    $txt = str_replace('/', ' ', $txt);\n\
    \    $txt = str_replace('\\\\', ' ', $txt);\n    $txt = str_replace('|', ' ',\
    \ $txt);\n    $txt = str_replace('<', ' ', $txt);\n    $txt = str_replace('>',\
    \ ' ', $txt);\n    $txt = str_replace('=', ' ', $txt);\n    $txt = str_replace('+',\
    \ ' ', $txt);\n    $txt = str_replace('*', ' ', $txt);\n    $txt = str_replace('&',\
    \ ' ', $txt);\n    $txt = str_replace('^', ' ', $txt);\n    $txt = str_replace('%',\
    \ ' ', $txt);\n    $txt = str_replace('$', ' ', $txt);\n    $txt = str_replace('#',\
    \ ' ', $txt);\n    $txt = str_replace('@', ' ', $txt);\n    $txt = str_replace('~',\
    \ ' ', $txt);\n    $txt = str_replace('`', ' ', $txt);\nfunction candidate(...$args)\
    \ {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\"\
    ) !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\"\
    , \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\"\
    ) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\"\
    ) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Parse error:  Unclosed '{' on line 9 in /tmp/tmpxb0hc0x8.php on line\
    \ 57\n"
  exit_code: 255
  status: SyntaxError
- program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // split_words(\"Hello world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"\
    Hello,world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"abcdef\") ==\
    \ 3\nfunction split_words($txt) {\n    if (strpos($txt, ' ') !== false) {\n  \
    \      return explode(' ', $txt);\n    } elseif (strpos($txt, ',') !== false)\
    \ {\n        return explode(',', $txt);\n    } else {\n        $count = 0;\n \
    \       for ($i = 0; $i < strlen($txt); $i++) {\n            if ($i % 2 == 0 &&\
    \ ctype_lower($txt[$i])) {\n                $count++;\n            }\n       \
    \ }\n        return $count;\n    }\n}\n\nfunction candidate(...$args) {\n    return\
    \ split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hello\
    \ world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\")) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\"\
    ) !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\"\
    , \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\"\
    ) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\"\
    ) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpthqmb6cp.php:35\n\
    Stack trace:\n#0 /tmp/tmpthqmb6cp.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpthqmb6cp.php\
    \ on line 35\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // split_words(\"Hello world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"\
    Hello,world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"abcdef\") ==\
    \ 3\nfunction split_words($txt) {\n    if (strpos($txt, ' ') !== false) {\n  \
    \      return explode(' ', $txt);\n    } elseif (strpos($txt, ',') !== false)\
    \ {\n        return explode(',', $txt);\n    } else {\n        $count = 0;\n \
    \       for ($i = 0; $i < strlen($txt); $i++) {\n            if (ord($txt[$i])\
    \ % 2 !== 0) {\n                $count++;\n            }\n        }\n        return\
    \ $count;\n    }\n}\necho split_words(\"Hello world!\");\necho '<br>';\necho split_words(\"\
    Hello,world!\");\necho '<br>';\necho split_words(\"abcdef\");\necho '<br>';\n\
    echo split_words(\"abcdef,ghijkl\");\necho '<br>';\necho split_words(\"abcdef\
    \ ghijkl\");\necho '<br>';\necho split_words(\"abcdef,ghijkl mnopqr\");\necho\
    \ '<br>';\necho split_words(\"abcdef,ghijkl mnopqr,stuvwx\");\necho '<br>';\n\
    echo split_words(\"abcdef,ghijkl mnopqr,stuvwx yz\");\necho '<br>';\necho split_words(\"\
    abcdef,ghijkl mnopqr,stuvwx yz,\");\necho '<br>';\necho split_words(\"abcdef,ghijkl\
    \ mnopqr,stuvwx yz,12345\");\necho '<br>';\necho split_words(\"abcdef,ghijkl mnopqr,stuvwx\
    \ yz,12345 67890\");\necho '<br>';\necho split_words(\"abcdef,ghijkl mnopqr,stuvwx\
    \ yz,12345 67890,\");\necho '<br>';\necho split_words(\"abcdef,ghijkl mnopqr,stuvwx\
    \ yz,12345 67890,ABCDE\");\necho '<br>';\necho split_words(\"abcdef,ghijkl mnopqr,stuvwx\
    \ yz,12345 67890\nfunction candidate(...$args) {\n    return split_words(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world!\") !== array(\"\
    Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"\
    world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world\
    \ !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Parse error:  syntax error, unexpected identifier \"Hello\", expecting\
    \ \")\" in /tmp/tmp2wwql57s.php on line 56\n"
  exit_code: 255
  status: SyntaxError
- program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // split_words(\"Hello world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"\
    Hello,world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"abcdef\") ==\
    \ 3\nfunction split_words($txt) {\n    $arr = str_split($txt);\n    $result =\
    \ [];\n    $temp = \"\";\n    for ($i = 0; $i < count($arr); $i++) {\n       \
    \ if ($arr[$i] == \" \" || $arr[$i] == \",\") {\n            array_push($result,\
    \ $temp);\n            $temp = \"\";\n        } else {\n            $temp .= $arr[$i];\n\
    \        }\n    }\n    if ($temp != \"\") {\n        array_push($result, $temp);\n\
    \    }\n    if (count($result) == 0) {\n        $count = 0;\n        for ($i =\
    \ 0; $i < count($arr); $i++) {\n            if (ord($arr[$i]) % 2 == 1) {\n  \
    \              $count++;\n            }\n        }\n        return $count;\n \
    \   }\n    return $result;\n}\necho \"<pre>\";\nprint_r(split_words(\"Hello world!\"\
    ));\necho \"</pre>\";\necho \"<pre>\";\nprint_r(split_words(\"Hello,world!\"));\n\
    echo \"</pre>\";\necho \"<pre>\";\nprint_r(split_words(\"abcdef\"));\necho \"\
    </pre>\";\nfunction candidate(...$args) {\n    return split_words(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world!\") !== array(\"\
    Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"\
    world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world\
    \ !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: "<pre>Array\n(\n    [0] => Hello\n    [1] => world!\n)\n</pre><pre>Array\n\
    (\n    [0] => Hello\n    [1] => world!\n)\n</pre><pre>Array\n(\n    [0] => abcdef\n\
    )\n</pre>"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmppjwy2ims.php:51\n\
    Stack trace:\n#0 /tmp/tmppjwy2ims.php(59): test()\n#1 {main}\n  thrown in /tmp/tmppjwy2ims.php\
    \ on line 51\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // split_words(\"Hello world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"\
    Hello,world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"abcdef\") ==\
    \ 3\nfunction split_words($txt) {\n    $txt = str_replace(',', ' ', $txt);\n \
    \   $txt = str_replace('!', ' ', $txt);\n    $txt = str_replace('.', ' ', $txt);\n\
    \    $txt = str_replace('?', ' ', $txt);\n    $txt = str_replace(';', ' ', $txt);\n\
    \    $txt = str_replace(':', ' ', $txt);\n    $txt = str_replace('-', ' ', $txt);\n\
    \    $txt = str_replace('_', ' ', $txt);\n    $txt = str_replace('(', ' ', $txt);\n\
    \    $txt = str_replace(')', ' ', $txt);\n    $txt = str_replace('[', ' ', $txt);\n\
    \    $txt = str_replace(']', ' ', $txt);\n    $txt = str_replace('{', ' ', $txt);\n\
    \    $txt = str_replace('}', ' ', $txt);\n    $txt = str_replace('/', ' ', $txt);\n\
    \    $txt = str_replace('\\\\', ' ', $txt);\n    $txt = str_replace('|', ' ',\
    \ $txt);\n    $txt = str_replace('\"', ' ', $txt);\n    $txt = str_replace(\"\
    '\", ' ', $txt);\n    $txt = str_replace('`', ' ', $txt);\n    $txt = str_replace('~',\
    \ ' ', $txt);\n    $txt = str_replace('+', ' ', $txt);\n    $txt = str_replace('=',\
    \ ' ', $txt);\n    $txt = str_replace('*', ' ', $txt);\n    $txt = str_replace('&',\
    \ ' ', $txt);\n    $txt = str_replace('^', ' ', $txt);\n    $txt = str_replace('%',\
    \ ' ', $txt);\n    $txt = str_replace('$', ' ', $txt);\n    $txt = str_replace('#',\
    \ ' ', $txt);\n    $txt = str_replace('@', ' ', $txt);\n    $txt = str_replace('!',\
    \ ' ', $txt);\n    $txt = str_replace('<', ' ', $txt);\nfunction candidate(...$args)\
    \ {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\"\
    ) !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\"\
    , \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\"\
    ) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\"\
    ) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Parse error:  Unclosed '{' on line 9 in /tmp/tmp979qnqg0.php on line\
    \ 57\n"
  exit_code: 255
  status: SyntaxError
- program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // split_words(\"Hello world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"\
    Hello,world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"abcdef\") ==\
    \ 3\nfunction split_words($txt) {\n    $arr = [];\n    if (strpos($txt, ' ') !==\
    \ false) {\n        $arr = explode(' ', $txt);\n    } elseif (strpos($txt, ',')\
    \ !== false) {\n        $arr = explode(',', $txt);\n    } else {\n        $arr\
    \ = strlen(preg_replace('/[aeiou]/i', '', $txt));\n    }\n    return $arr;\n}\n\
    echo split_words(\"Hello world!\");\necho '<br>';\necho split_words(\"Hello,world!\"\
    );\necho '<br>';\necho split_words(\"abcdef\");\necho '<br>';\necho '<br>';\n\n\
    function candidate(...$args) {\n    return split_words(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"Hello world!\") !== array(\"Hello\", \"\
    world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,world!\"\
    ) !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"world,!\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world !\"\
    ) !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: Array<br>Array<br>4<br><br>
  stderr: "PHP Warning:  Array to string conversion in /tmp/tmpebcoucd9.php on line\
    \ 20\nPHP Warning:  Array to string conversion in /tmp/tmpebcoucd9.php on line\
    \ 22\nPHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpebcoucd9.php:37\n\
    Stack trace:\n#0 /tmp/tmpebcoucd9.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpebcoucd9.php\
    \ on line 37\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // split_words(\"Hello world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"\
    Hello,world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"abcdef\") ==\
    \ 3\nfunction split_words($txt) {\n    $arr = str_split($txt);\n    $result =\
    \ [];\n    $temp = \"\";\n    for ($i = 0; $i < count($arr); $i++) {\n       \
    \ if ($arr[$i] == \" \" || $arr[$i] == \",\") {\n            array_push($result,\
    \ $temp);\n            $temp = \"\";\n        } else {\n            $temp .= $arr[$i];\n\
    \        }\n    }\n    if ($temp != \"\") {\n        array_push($result, $temp);\n\
    \    }\n    if (count($result) == 0) {\n        $count = 0;\n        for ($i =\
    \ 0; $i < count($arr); $i++) {\n            if (ord($arr[$i]) % 2 == 1) {\n  \
    \              $count++;\n            }\n        }\n        return $count;\n \
    \   }\n    return $result;\n}\necho \"<pre>\";\nprint_r(split_words(\"Hello world!\"\
    ));\necho \"</pre>\";\necho \"<pre>\";\nprint_r(split_words(\"Hello,world!\"));\n\
    echo \"</pre>\";\necho \"<pre>\";\nprint_r(split_words(\"abcdef\"));\necho \"\
    </pre>\";\nfunction candidate(...$args) {\n    return split_words(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world!\") !== array(\"\
    Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"\
    world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world\
    \ !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: "<pre>Array\n(\n    [0] => Hello\n    [1] => world!\n)\n</pre><pre>Array\n\
    (\n    [0] => Hello\n    [1] => world!\n)\n</pre><pre>Array\n(\n    [0] => abcdef\n\
    )\n</pre>"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmptmmfhwr1.php:51\n\
    Stack trace:\n#0 /tmp/tmptmmfhwr1.php(59): test()\n#1 {main}\n  thrown in /tmp/tmptmmfhwr1.php\
    \ on line 51\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // split_words(\"Hello world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"\
    Hello,world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"abcdef\") ==\
    \ 3\nfunction split_words($txt) {\n    $words = preg_split('/[\\s,]+/', $txt);\n\
    \    if (count($words) > 1) {\n        return $words;\n    } else {\n        $count\
    \ = 0;\n        for ($i = 0; $i < strlen($txt); $i++) {\n            if (ord($txt[$i])\
    \ % 2 == 1) {\n                $count++;\n            }\n        }\n        return\
    \ $count;\n    }\n}\necho split_words(\"Hello world!\");\necho \"<br>\";\necho\
    \ split_words(\"Hello,world!\");\necho \"<br>\";\necho split_words(\"abcdef\"\
    );\nfunction candidate(...$args) {\n    return split_words(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"Hello world!\") !== array(\"Hello\", \"\
    world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,world!\"\
    ) !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"world,!\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world !\"\
    ) !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: Array<br>Array<br>3
  stderr: "PHP Warning:  Array to string conversion in /tmp/tmp9r5u2w9k.php on line\
    \ 23\nPHP Warning:  Array to string conversion in /tmp/tmp9r5u2w9k.php on line\
    \ 25\nPHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp9r5u2w9k.php:35\n\
    Stack trace:\n#0 /tmp/tmp9r5u2w9k.php(43): test()\n#1 {main}\n  thrown in /tmp/tmp9r5u2w9k.php\
    \ on line 35\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // split_words(\"Hello world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"\
    Hello,world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"abcdef\") ==\
    \ 3\nfunction split_words($txt) {\n    $txt = str_replace(\" \", \",\", $txt);\n\
    \    $txt = str_replace(\",\", \" \", $txt);\n    $txt = str_replace(\" \", \"\
    ,\", $txt);\n    $txt = str_replace(\",\", \" \", $txt);\n    $txt = str_replace(\"\
    \ \", \",\", $txt);\n    $txt = str_replace(\",\", \" \", $txt);\n    $txt = str_replace(\"\
    \ \", \",\", $txt);\n    $txt = str_replace(\",\", \" \", $txt);\n    $txt = str_replace(\"\
    \ \", \",\", $txt);\n    $txt = str_replace(\",\", \" \", $txt);\n    $txt = str_replace(\"\
    \ \", \",\", $txt);\n    $txt = str_replace(\",\", \" \", $txt);\n    $txt = str_replace(\"\
    \ \", \",\", $txt);\n    $txt = str_replace(\",\", \" \", $txt);\n    $txt = str_replace(\"\
    \ \", \",\", $txt);\n    $txt = str_replace(\",\", \" \", $txt);\n    $txt = str_replace(\"\
    \ \", \",\", $txt);\n    $txt = str_replace(\",\", \" \", $txt);\n    $txt = str_replace(\"\
    \ \", \",\", $txt);\n    $txt = str_replace(\",\", \" \", $txt);\n    $txt = str_replace(\"\
    \ \", \",\", $txt);\n    $txt = str_replace(\",\", \" \", $txt);\n    $txt = str_replace(\"\
    \ \", \",\", $txt);\n    $txt = str_replace(\",\", \" \", $txt);\n    $txt = str_replace(\"\
    \ \", \",\", $txt);\n    $txt = str_replace(\",\", \" \", $txt);\n    $txt = str_replace(\"\
    \ \", \",\", $txt);\n    $txt = str_replace(\",\", \" \", $txt);\n    $txt = str_replace(\"\
    \ \", \",\", $txt);\n    $txt = str_replace(\",\", \" \", $txt);\n    $txt = str_replace(\"\
    \ \", \",\", $txt);\n    $txt = str_replace(\",\", \" \", $txt);\nfunction candidate(...$args)\
    \ {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\"\
    ) !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\"\
    , \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\"\
    ) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\"\
    ) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Parse error:  Unclosed '{' on line 9 in /tmp/tmpqk9m7hlg.php on line\
    \ 57\n"
  exit_code: 255
  status: SyntaxError
- program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // split_words(\"Hello world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"\
    Hello,world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"abcdef\") ==\
    \ 3\nfunction split_words($txt) {\n    $arr = str_split($txt);\n    $arr1 = [];\n\
    \    $arr2 = [];\n    $arr3 = [];\n    $arr4 = [];\n    $arr5 = [];\n    $arr6\
    \ = [];\n    $arr7 = [];\n    $arr8 = [];\n    $arr9 = [];\n    $arr10 = [];\n\
    \    $arr11 = [];\n    $arr12 = [];\n    $arr13 = [];\n    $arr14 = [];\n    $arr15\
    \ = [];\n    $arr16 = [];\n    $arr17 = [];\n    $arr18 = [];\n    $arr19 = [];\n\
    \    $arr20 = [];\n    $arr21 = [];\n    $arr22 = [];\n    $arr23 = [];\n    $arr24\
    \ = [];\n    $arr25 = [];\n    $arr26 = [];\n    $arr27 = [];\n    $arr28 = [];\n\
    \    $arr29 = [];\n    $arr30 = [];\n    $arr31 = [];\n    $arr32 = [];\n    $arr33\
    \ = [];\n    $arr34 = [];\n    $arr35 = [];\n    $arr36 = [];\n    $arr37 = [];\n\
    \    $arr38 = [];\n    $arr39 = [];\n    $arr40 = [];\n    $arr41 = [];\n    $arr42\
    \ = [];\n    $arr43 = [];\n    $arr44 = [];\n    $arr45 = [];\n    $arr46 = [];\n\
    \    $arr47 = [];\n    $arr48 = [];\n    $arr49 = [];\n    $arr50 = [];\n    $arr51\
    \ = [];\n    $arr52 = [];\n    $arr53 = [];\n    $arr54 = [];\n    $arr55 = [];\n\
    \    $arr56 = [];\n    $arr57 = [];\n    $arr58 = [];\n    $arr59 = [];\n    $arr60\
    \ = [];\n    $arr61 = [];\n    $arr62 = [];\n    $arr63 = [];\n    $arr64 = [];\n\
    \    $arr65 = [];\n    $arr66 = [];\n    $arr67 = [];\n    $arr68 = [];\n    $arr69\
    \ = [];\n    $arr70 = [];\n    $arr71 = [];\n    $arr\nfunction candidate(...$args)\
    \ {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\"\
    ) !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\"\
    , \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\"\
    ) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\"\
    ) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Parse error:  syntax error, unexpected token \"function\" in /tmp/tmpbgti2xmm.php\
    \ on line 83\n"
  exit_code: 255
  status: SyntaxError
- program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // split_words(\"Hello world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"\
    Hello,world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"abcdef\") ==\
    \ 3\nfunction split_words($txt) {\n    $arr = str_split($txt);\n    $arr1 = [];\n\
    \    $arr2 = [];\n    $arr3 = [];\n    $arr4 = [];\n    $arr5 = [];\n    $arr6\
    \ = [];\n    $arr7 = [];\n    $arr8 = [];\n    $arr9 = [];\n    $arr10 = [];\n\
    \    $arr11 = [];\n    $arr12 = [];\n    $arr13 = [];\n    $arr14 = [];\n    $arr15\
    \ = [];\n    $arr16 = [];\n    $arr17 = [];\n    $arr18 = [];\n    $arr19 = [];\n\
    \    $arr20 = [];\n    $arr21 = [];\n    $arr22 = [];\n    $arr23 = [];\n    $arr24\
    \ = [];\n    $arr25 = [];\n    $arr26 = [];\n    $arr27 = [];\n    $arr28 = [];\n\
    \    $arr29 = [];\n    $arr30 = [];\n    $arr31 = [];\n    $arr32 = [];\n    $arr33\
    \ = [];\n    $arr34 = [];\n    $arr35 = [];\n    $arr36 = [];\n    $arr37 = [];\n\
    \    $arr38 = [];\n    $arr39 = [];\n    $arr40 = [];\n    $arr41 = [];\n    $arr42\
    \ = [];\n    $arr43 = [];\n    $arr44 = [];\n    $arr45 = [];\n    $arr46 = [];\n\
    \    $arr47 = [];\n    $arr48 = [];\n    $arr49 = [];\n    $arr50 = [];\n    $arr51\
    \ = [];\n    $arr52 = [];\n    $arr53 = [];\n    $arr54 = [];\n    $arr55 = [];\n\
    \    $arr56 = [];\n    $arr57 = [];\n    $arr58 = [];\n    $arr59 = [];\n    $arr60\
    \ = [];\n    $arr61 = [];\n    $arr62 = [];\n    $arr63 = [];\n    $arr64 = [];\n\
    \    $arr65 = [];\n    $arr66 = [];\n    $arr67 = [];\n    $arr68 = [];\n    $arr69\
    \ = [];\n    $arr70 = [];\n    $arr71 = [];\n    $arr\nfunction candidate(...$args)\
    \ {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\"\
    ) !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\"\
    , \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\"\
    ) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\"\
    ) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Parse error:  syntax error, unexpected token \"function\" in /tmp/tmpxw1hilo5.php\
    \ on line 83\n"
  exit_code: 255
  status: SyntaxError
- program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // split_words(\"Hello world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"\
    Hello,world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"abcdef\") ==\
    \ 3\nfunction split_words($txt) {\n    $txt = str_replace(',', ' ', $txt);\n \
    \   $txt = str_replace('!', ' ', $txt);\n    $txt = str_replace('?', ' ', $txt);\n\
    \    $txt = str_replace('.', ' ', $txt);\n    $txt = str_replace('-', ' ', $txt);\n\
    \    $txt = str_replace('_', ' ', $txt);\n    $txt = str_replace('/', ' ', $txt);\n\
    \    $txt = str_replace('\\\\', ' ', $txt);\n    $txt = str_replace('(', ' ',\
    \ $txt);\n    $txt = str_replace(')', ' ', $txt);\n    $txt = str_replace('[',\
    \ ' ', $txt);\n    $txt = str_replace(']', ' ', $txt);\n    $txt = str_replace('{',\
    \ ' ', $txt);\n    $txt = str_replace('}', ' ', $txt);\n    $txt = str_replace('\"\
    ', ' ', $txt);\n    $txt = str_replace(\"'\", ' ', $txt);\n    $txt = str_replace('*',\
    \ ' ', $txt);\n    $txt = str_replace('+', ' ', $txt);\n    $txt = str_replace('=',\
    \ ' ', $txt);\n    $txt = str_replace('&', ' ', $txt);\n    $txt = str_replace('^',\
    \ ' ', $txt);\n    $txt = str_replace('%', ' ', $txt);\n    $txt = str_replace('$',\
    \ ' ', $txt);\n    $txt = str_replace('#', ' ', $txt);\n    $txt = str_replace('@',\
    \ ' ', $txt);\n    $txt = str_replace('!', ' ', $txt);\n    $txt = str_replace('~',\
    \ ' ', $txt);\n    $txt = str_replace('`', ' ', $txt);\n    $txt = str_replace('|',\
    \ ' ', $txt);\n    $txt = str_replace(';', ' ', $txt);\n    $txt = str_replace(':',\
    \ ' ', $txt);\n    $txt = str_replace('<', ' ', $txt);\nfunction candidate(...$args)\
    \ {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\"\
    ) !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\"\
    , \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\"\
    ) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\"\
    ) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Parse error:  Unclosed '{' on line 9 in /tmp/tmpqj3csa1t.php on line\
    \ 57\n"
  exit_code: 255
  status: SyntaxError
- program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // split_words(\"Hello world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"\
    Hello,world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"abcdef\") ==\
    \ 3\nfunction split_words($txt) {\n    if (strpos($txt, ' ') !== false) {\n  \
    \      return explode(' ', $txt);\n    } elseif (strpos($txt, ',') !== false)\
    \ {\n        return explode(',', $txt);\n    } else {\n        $odd_letters =\
    \ 0;\n        for ($i = 0; $i < strlen($txt); $i++) {\n            if (ord($txt[$i])\
    \ % 2 != 0) {\n                $odd_letters++;\n            }\n        }\n   \
    \     return $odd_letters;\n    }\n}\necho split_words(\"Hello world!\");\necho\
    \ '<br>';\necho split_words(\"Hello,world!\");\necho '<br>';\necho split_words(\"\
    abcdef\");\necho '<br>';\necho split_words(\"abcdef,ghijkl\");\necho '<br>';\n\
    echo split_words(\"abcdef ghijkl\");\necho '<br>';\necho split_words(\"abcdef,ghijkl\
    \ mnopqr\");\necho '<br>';\necho split_words(\"abcdef,ghijkl mnopqr,stuvwx\");\n\
    echo '<br>';\necho split_words(\"abcdef,ghijkl mnopqr,stuvwx yz\");\necho '<br>';\n\
    echo split_words(\"abcdef,ghijkl mnopqr,stuvwx yz,\");\necho '<br>';\necho split_words(\"\
    abcdef,ghijkl mnopqr,stuvwx yz,12345\");\necho '<br>';\necho split_words(\"abcdef,ghijkl\
    \ mnopqr,stuvwx yz,12345 67890\");\necho '<br>';\necho split_words(\"abcdef,ghijkl\
    \ mnopqr,stuvwx yz,12345 67890,\");\necho '<br>';\necho split_words(\"abcdef,ghijkl\
    \ mnopqr,stuvwx yz,12345 67890,ABCDE\");\necho '<br>';\necho split_words(\"abcdef,ghijkl\
    \ mnopqr,stuvwx yz,\nfunction candidate(...$args) {\n    return split_words(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world!\") !== array(\"\
    Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"\
    world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world\
    \ !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Parse error:  syntax error, unexpected identifier \"Hello\", expecting\
    \ \")\" in /tmp/tmp15i4a33q.php on line 56\n"
  exit_code: 255
  status: SyntaxError
- program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // split_words(\"Hello world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"\
    Hello,world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"abcdef\") ==\
    \ 3\nfunction split_words($txt) {\n    if (strpos($txt, ' ') !== false) {\n  \
    \      return explode(' ', $txt);\n    } elseif (strpos($txt, ',') !== false)\
    \ {\n        return explode(',', $txt);\n    } else {\n        $count = 0;\n \
    \       for ($i = 0; $i < strlen($txt); $i++) {\n            if ($i % 2 == 0 &&\
    \ ord($txt[$i]) >= 97 && ord($txt[$i]) <= 122) {\n                $count++;\n\
    \            }\n        }\n        return $count;\n    }\n}\n\nfunction candidate(...$args)\
    \ {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\"\
    ) !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\"\
    , \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\"\
    ) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\"\
    ) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpvml_og10.php:35\n\
    Stack trace:\n#0 /tmp/tmpvml_og10.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpvml_og10.php\
    \ on line 35\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // split_words(\"Hello world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"\
    Hello,world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"abcdef\") ==\
    \ 3\nfunction split_words($txt) {\n    $arr = str_split($txt);\n    $arr2 = [];\n\
    \    $arr3 = [];\n    for ($i = 0; $i < count($arr); $i++) {\n        if ($arr[$i]\
    \ == \" \") {\n            array_push($arr2, $i);\n        }\n        if ($arr[$i]\
    \ == \",\") {\n            array_push($arr3, $i);\n        }\n    }\n    if (count($arr2)\
    \ > 0) {\n        $arr4 = [];\n        for ($i = 0; $i < count($arr2); $i++) {\n\
    \            if ($i == 0) {\n                array_push($arr4, substr($txt, 0,\
    \ $arr2[$i]));\n            } else {\n                array_push($arr4, substr($txt,\
    \ $arr2[$i - 1] + 1, $arr2[$i] - $arr2[$i - 1] - 1));\n            }\n       \
    \ }\n        array_push($arr4, substr($txt, $arr2[count($arr2) - 1] + 1));\n \
    \       return $arr4;\n    } elseif (count($arr3) > 0) {\n        $arr4 = [];\n\
    \        for ($i = 0; $i < count($arr3); $i++) {\n            if ($i == 0) {\n\
    \                array_push($arr4, substr($txt, 0, $arr3[$i]));\n            }\
    \ else {\n                array_push($arr4, substr($txt, $arr3[$i - 1] + 1, $arr3[$i]\
    \ - $arr3[$i - 1] - 1));\n            }\n        }\n        array_push($arr4,\
    \ substr($txt, $arr3[count($arr3) - 1] + 1));\n        return $arr4;\n    } else\
    \ {\n        $arr4 = [];\n        for ($i = 0; $i < count($arr); $i++) {\n   \
    \         if ($i % 2 == 0) {\n                array_push($arr4, $arr[$i]);\n \
    \           }\n        }\n        return count($arr4);\n    }\n}\necho split\n\
    function candidate(...$args) {\n    return split_words(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"Hello world!\") !== array(\"Hello\", \"\
    world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,world!\"\
    ) !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"world,!\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world !\"\
    ) !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Parse error:  syntax error, unexpected token \"function\", expecting\
    \ \",\" or \";\" in /tmp/tmp04jo0_wd.php on line 54\n"
  exit_code: 255
  status: SyntaxError
- program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // split_words(\"Hello world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"\
    Hello,world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"abcdef\") ==\
    \ 3\nfunction split_words($txt) {\n  $arr = [];\n  if (strpos($txt, ' ') !== false)\
    \ {\n    $arr = explode(' ', $txt);\n  } else if (strpos($txt, ',') !== false)\
    \ {\n    $arr = explode(',', $txt);\n  } else {\n    $arr = str_split($txt);\n\
    \    $count = 0;\n    foreach ($arr as $char) {\n      if (ord($char) % 2 !==\
    \ 0) {\n        $count++;\n      }\n    }\n    $arr = $count;\n  }\n  return $arr;\n\
    }\necho split_words(\"Hello world!\") . '<br>';\necho split_words(\"Hello,world!\"\
    ) . '<br>';\necho split_words(\"abcdef\") . '<br>';\necho split_words(\"abcdefg\"\
    ) . '<br>';\necho split_words(\"abcdefgh\") . '<br>';\necho split_words(\"abcdefghi\"\
    ) . '<br>';\necho split_words(\"abcdefghij\") . '<br>';\necho split_words(\"abcdefghijk\"\
    ) . '<br>';\necho split_words(\"abcdefghijkl\") . '<br>';\necho split_words(\"\
    abcdefghijklm\") . '<br>';\necho split_words(\"abcdefghijklmn\") . '<br>';\necho\
    \ split_words(\"abcdefghijklmno\") . '<br>';\necho split_words(\"abcdefghijklmnop\"\
    ) . '<br>';\necho split_words(\"abcdefghijklmnopq\") . '<br>';\necho split_words(\"\
    abcdefghijklmnopqr\") . '<br>';\necho split_words(\"abcdefghijklmnopqrs\") . '<br>';\n\
    echo split_words(\"abcdefghijklmnopqrst\") . '<br>';\necho split_words(\"abcdefghijklmnopqrstu\"\
    ) . '<br>';\necho split_words(\"abcdefghijklmnopqrstuv\") . '<br>';\necho split_words\n\
    function candidate(...$args) {\n    return split_words(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"Hello world!\") !== array(\"Hello\", \"\
    world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,world!\"\
    ) !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"world,!\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world !\"\
    ) !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Parse error:  syntax error, unexpected token \"function\", expecting\
    \ \",\" or \";\" in /tmp/tmpnxvf2_fa.php on line 47\n"
  exit_code: 255
  status: SyntaxError
- program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // split_words(\"Hello world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"\
    Hello,world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"abcdef\") ==\
    \ 3\nfunction split_words($txt) {\n    $txt = str_replace(\" \", \",\", $txt);\n\
    \    $txt = str_replace(\",\", \" \", $txt);\n    $txt = explode(\" \", $txt);\n\
    \    $odd = 0;\n    foreach ($txt as $key => $value) {\n        if (ord($value)\
    \ % 2 != 0) {\n            $odd++;\n        }\n    }\n    if ($odd == 0) {\n \
    \       return $txt;\n    } else {\n        return $odd;\n    }\n}\necho split_words(\"\
    Hello world!\");\necho \"<br>\";\necho split_words(\"Hello,world!\");\necho \"\
    <br>\";\necho split_words(\"abcdef\");\necho \"<br>\";\necho split_words(\"abcdefghijklmnopqrstuvwxyz\"\
    );\necho \"<br>\";\necho split_words(\"abcdefghijklmnopqrstuvwxyz,abcdefghijklmnopqrstuvwxyz\"\
    );\necho \"<br>\";\necho split_words(\"abcdefghijklmnopqrstuvwxyz abcdefghijklmnopqrstuvwxyz\"\
    );\necho \"<br>\";\necho split_words(\"abcdefghijklmnopqrstuvwxyz,abcdefghijklmnopqrstuvwxyz\
    \ abcdefghijklmnopqrstuvwxyz\");\necho \"<br>\";\necho split_words(\"abcdefghijklmnopqrstuvwxyz\
    \ abcdefghijklmnopqrstuvwxyz,abcdefghijklmnopqrstuvwxyz\");\necho \"<br>\";\n\
    echo split_words(\"abcdefghijklmnopqrstuvwxyz,abcdefghijklmnopqrstuvwxyz abcdefghijklmnopqrstuvwxyz,abcdefghijklmnopqrstuvwxyz\"\
    );\necho \"<br>\";\necho split_words(\"abcdefghijklmnopqrstuvwxyz abcdefghijklmnopqrstuvwxyz,abcdefghijklmnopqrstuv\n\
    function candidate(...$args) {\n    return split_words(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"Hello world!\") !== array(\"Hello\", \"\
    world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,world!\"\
    ) !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"world,!\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world !\"\
    ) !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Parse error:  syntax error, unexpected identifier \"Hello\", expecting\
    \ \")\" in /tmp/tmpoca9etdo.php on line 49\n"
  exit_code: 255
  status: SyntaxError
- program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // split_words(\"Hello world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"\
    Hello,world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"abcdef\") ==\
    \ 3\nfunction split_words($txt) {\n    $arr = str_split($txt);\n    $arr2 = [];\n\
    \    $arr3 = [];\n    $arr4 = [];\n    $arr5 = [];\n    $arr6 = [];\n    $arr7\
    \ = [];\n    $arr8 = [];\n    $arr9 = [];\n    $arr10 = [];\n    $arr11 = [];\n\
    \    $arr12 = [];\n    $arr13 = [];\n    $arr14 = [];\n    $arr15 = [];\n    $arr16\
    \ = [];\n    $arr17 = [];\n    $arr18 = [];\n    $arr19 = [];\n    $arr20 = [];\n\
    \    $arr21 = [];\n    $arr22 = [];\n    $arr23 = [];\n    $arr24 = [];\n    $arr25\
    \ = [];\n    $arr26 = [];\n    $arr27 = [];\n    $arr28 = [];\n    $arr29 = [];\n\
    \    $arr30 = [];\n    $arr31 = [];\n    $arr32 = [];\n    $arr33 = [];\n    $arr34\
    \ = [];\n    $arr35 = [];\n    $arr36 = [];\n    $arr37 = [];\n    $arr38 = [];\n\
    \    $arr39 = [];\n    $arr40 = [];\n    $arr41 = [];\n    $arr42 = [];\n    $arr43\
    \ = [];\n    $arr44 = [];\n    $arr45 = [];\n    $arr46 = [];\n    $arr47 = [];\n\
    \    $arr48 = [];\n    $arr49 = [];\n    $arr50 = [];\n    $arr51 = [];\n    $arr52\
    \ = [];\n    $arr53 = [];\n    $arr54 = [];\n    $arr55 = [];\n    $arr56 = [];\n\
    \    $arr57 = [];\n    $arr58 = [];\n    $arr59 = [];\n    $arr60 = [];\n    $arr61\
    \ = [];\n    $arr62 = [];\n    $arr63 = [];\n    $arr64 = [];\n    $arr65 = [];\n\
    \    $arr66 = [];\n    $arr67 = [];\n    $arr68 = [];\n    $arr69 = [];\n    $arr70\
    \ = [];\n    $arr71 = [];\n    $arr72 = [];\n    $arr\nfunction candidate(...$args)\
    \ {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\"\
    ) !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\"\
    , \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\"\
    ) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\"\
    ) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Parse error:  syntax error, unexpected token \"function\" in /tmp/tmpex8gotli.php\
    \ on line 83\n"
  exit_code: 255
  status: SyntaxError
- program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // split_words(\"Hello world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"\
    Hello,world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"abcdef\") ==\
    \ 3\nfunction split_words($txt) {\n    $txt = str_replace(\" \", \",\", $txt);\n\
    \    $txt = str_replace(\",\", \" \", $txt);\n    $txt = str_replace(\" \", \"\
    ,\", $txt);\n    $txt = explode(\",\", $txt);\n    $txt = array_filter($txt);\n\
    \    $txt = array_values($txt);\n    return $txt;\n}\necho \"<pre>\";\nprint_r(split_words(\"\
    Hello world!\"));\necho \"</pre>\";\necho \"<pre>\";\nprint_r(split_words(\"Hello,world!\"\
    ));\necho \"</pre>\";\necho \"<pre>\";\nprint_r(split_words(\"abcdef\"));\necho\
    \ \"</pre>\";\nfunction candidate(...$args) {\n    return split_words(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world!\") !== array(\"\
    Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"\
    world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world\
    \ !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: "<pre>Array\n(\n    [0] => Hello\n    [1] => world!\n)\n</pre><pre>Array\n\
    (\n    [0] => Hello\n    [1] => world!\n)\n</pre><pre>Array\n(\n    [0] => abcdef\n\
    )\n</pre>"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp5hx8lb8c.php:34\n\
    Stack trace:\n#0 /tmp/tmp5hx8lb8c.php(42): test()\n#1 {main}\n  thrown in /tmp/tmp5hx8lb8c.php\
    \ on line 34\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // split_words(\"Hello world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"\
    Hello,world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"abcdef\") ==\
    \ 3\nfunction split_words($txt) {\n    if (strpos($txt, ' ') !== false) {\n  \
    \      return explode(' ', $txt);\n    } elseif (strpos($txt, ',') !== false)\
    \ {\n        return explode(',', $txt);\n    } else {\n        $count = 0;\n \
    \       for ($i = 0; $i < strlen($txt); $i++) {\n            if ($i % 2 == 0 &&\
    \ ord($txt[$i]) >= 97 && ord($txt[$i]) <= 122) {\n                $count++;\n\
    \            }\n        }\n        return $count;\n    }\n}\n\nfunction candidate(...$args)\
    \ {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\"\
    ) !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\"\
    , \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\"\
    ) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\"\
    ) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmprp2vl6v6.php:35\n\
    Stack trace:\n#0 /tmp/tmprp2vl6v6.php(40): test()\n#1 {main}\n  thrown in /tmp/tmprp2vl6v6.php\
    \ on line 35\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // split_words(\"Hello world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"\
    Hello,world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"abcdef\") ==\
    \ 3\nfunction split_words($txt) {\n    $txt = str_replace(',', ' ', $txt);\n \
    \   $txt = str_replace('!', ' ', $txt);\n    $txt = str_replace('.', ' ', $txt);\n\
    \    $txt = str_replace('?', ' ', $txt);\n    $txt = str_replace('-', ' ', $txt);\n\
    \    $txt = str_replace('_', ' ', $txt);\n    $txt = str_replace(';', ' ', $txt);\n\
    \    $txt = str_replace(':', ' ', $txt);\n    $txt = str_replace('\"', ' ', $txt);\n\
    \    $txt = str_replace(\"'\", ' ', $txt);\n    $txt = str_replace('(', ' ', $txt);\n\
    \    $txt = str_replace(')', ' ', $txt);\n    $txt = str_replace('[', ' ', $txt);\n\
    \    $txt = str_replace(']', ' ', $txt);\n    $txt = str_replace('{', ' ', $txt);\n\
    \    $txt = str_replace('}', ' ', $txt);\n    $txt = str_replace('*', ' ', $txt);\n\
    \    $txt = str_replace('&', ' ', $txt);\n    $txt = str_replace('^', ' ', $txt);\n\
    \    $txt = str_replace('%', ' ', $txt);\n    $txt = str_replace('$', ' ', $txt);\n\
    \    $txt = str_replace('#', ' ', $txt);\n    $txt = str_replace('@', ' ', $txt);\n\
    \    $txt = str_replace('!', ' ', $txt);\n    $txt = str_replace('~', ' ', $txt);\n\
    \    $txt = str_replace('`', ' ', $txt);\n    $txt = str_replace('+', ' ', $txt);\n\
    \    $txt = str_replace('=', ' ', $txt);\n    $txt = str_replace('>', ' ', $txt);\n\
    \    $txt = str_replace('<', ' ', $txt);\n    $txt = str_replace('/', ' ', $txt);\n\
    \    $txt = str_replace('\\\\', ' ', $txt);\nfunction candidate(...$args) {\n\
    \    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\"\
    ) !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\"\
    , \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\"\
    ) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\"\
    ) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Parse error:  Unclosed '{' on line 9 in /tmp/tmpe1u1qbem.php on line\
    \ 57\n"
  exit_code: 255
  status: SyntaxError
- program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // split_words(\"Hello world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"\
    Hello,world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"abcdef\") ==\
    \ 3\nfunction split_words($txt) {\n    $txt = str_replace(',', ' ', $txt);\n \
    \   $txt = str_replace('!', ' ', $txt);\n    $txt = str_replace('?', ' ', $txt);\n\
    \    $txt = str_replace('.', ' ', $txt);\n    $txt = str_replace('-', ' ', $txt);\n\
    \    $txt = str_replace('_', ' ', $txt);\n    $txt = str_replace('/', ' ', $txt);\n\
    \    $txt = str_replace('\\\\', ' ', $txt);\n    $txt = str_replace('(', ' ',\
    \ $txt);\n    $txt = str_replace(')', ' ', $txt);\n    $txt = str_replace('[',\
    \ ' ', $txt);\n    $txt = str_replace(']', ' ', $txt);\n    $txt = str_replace('{',\
    \ ' ', $txt);\n    $txt = str_replace('}', ' ', $txt);\n    $txt = str_replace('*',\
    \ ' ', $txt);\n    $txt = str_replace('&', ' ', $txt);\n    $txt = str_replace('^',\
    \ ' ', $txt);\n    $txt = str_replace('%', ' ', $txt);\n    $txt = str_replace('$',\
    \ ' ', $txt);\n    $txt = str_replace('#', ' ', $txt);\n    $txt = str_replace('@',\
    \ ' ', $txt);\n    $txt = str_replace('!', ' ', $txt);\n    $txt = str_replace('~',\
    \ ' ', $txt);\n    $txt = str_replace('`', ' ', $txt);\n    $txt = str_replace('+',\
    \ ' ', $txt);\n    $txt = str_replace('=', ' ', $txt);\n    $txt = str_replace(';',\
    \ ' ', $txt);\n    $txt = str_replace(':', ' ', $txt);\n    $txt = str_replace('\"\
    ', ' ', $txt);\n    $txt = str_replace('\\'', ' ', $txt);\n    $txt = str_replace('<',\
    \ ' ', $txt);\n    $txt = str_replace('>', ' ', $txt);\nfunction candidate(...$args)\
    \ {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\"\
    ) !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\"\
    , \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\"\
    ) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\"\
    ) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Parse error:  Unclosed '{' on line 9 in /tmp/tmp2kwk1l5s.php on line\
    \ 57\n"
  exit_code: 255
  status: SyntaxError
- program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // split_words(\"Hello world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"\
    Hello,world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"abcdef\") ==\
    \ 3\nfunction split_words($txt) {\n    $txt = str_replace(\"!\", \"\", $txt);\n\
    \    $txt = str_replace(\"?\", \"\", $txt);\n    $txt = str_replace(\".\", \"\"\
    , $txt);\n    $txt = str_replace(\",\", \"\", $txt);\n    $txt = str_replace(\"\
    \ \", \",\", $txt);\n    $txt = str_replace(\"  \", \",\", $txt);\n    $txt =\
    \ str_replace(\"   \", \",\", $txt);\n    $txt = str_replace(\"    \", \",\",\
    \ $txt);\n    $txt = str_replace(\"     \", \",\", $txt);\n    $txt = str_replace(\"\
    \      \", \",\", $txt);\n    $txt = str_replace(\"       \", \",\", $txt);\n\
    \    $txt = str_replace(\"        \", \",\", $txt);\n    $txt = str_replace(\"\
    \         \", \",\", $txt);\n    $txt = str_replace(\"          \", \",\", $txt);\n\
    \    $txt = str_replace(\"           \", \",\", $txt);\n    $txt = str_replace(\"\
    \            \", \",\", $txt);\n    $txt = str_replace(\"             \", \",\"\
    , $txt);\n    $txt = str_replace(\"              \", \",\", $txt);\n    $txt =\
    \ str_replace(\"               \", \",\", $txt);\n    $txt = str_replace(\"  \
    \              \", \",\", $txt);\n    $txt = str_replace(\"                 \"\
    , \",\", $txt);\n    $txt = str_replace(\"                  \", \",\", $txt);\n\
    \    $txt = str_replace(\"                   \", \",\", $txt);\n    $txt = str_replace(\"\
    \                    \", \",\", $txt);\n    $txt = str_replace(\"            \
    \         \", \",\", $txt);\n    $txt = str_replace(\"                      \"\
    , \",\", $txt);\n    $txt = str_replace(\"                       \", \",\", $txt);\n\
    \    $txt = str_replace(\"                        \", \",\", $txt);\n    $txt\
    \ = str_replace(\"                         \", \",\", $txt);\n    $txt = str_replace(\"\
    \                          \", \",\", $txt);\n    $txt = str_replace(\"\nfunction\
    \ candidate(...$args) {\n    return split_words(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"Hello world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,world!\"\
    ) !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"world,!\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world !\"\
    ) !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Parse error:  syntax error, unexpected identifier \"Hello\", expecting\
    \ \")\" in /tmp/tmpwu7jqxoz.php on line 46\n"
  exit_code: 255
  status: SyntaxError
- program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // split_words(\"Hello world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"\
    Hello,world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"abcdef\") ==\
    \ 3\nfunction split_words($txt) {\n    $arr = str_split($txt);\n    $arr2 = [];\n\
    \    $arr3 = [];\n    $arr4 = [];\n    $arr5 = [];\n    $arr6 = [];\n    $arr7\
    \ = [];\n    $arr8 = [];\n    $arr9 = [];\n    $arr10 = [];\n    $arr11 = [];\n\
    \    $arr12 = [];\n    $arr13 = [];\n    $arr14 = [];\n    $arr15 = [];\n    $arr16\
    \ = [];\n    $arr17 = [];\n    $arr18 = [];\n    $arr19 = [];\n    $arr20 = [];\n\
    \    $arr21 = [];\n    $arr22 = [];\n    $arr23 = [];\n    $arr24 = [];\n    $arr25\
    \ = [];\n    $arr26 = [];\n    $arr27 = [];\n    $arr28 = [];\n    $arr29 = [];\n\
    \    $arr30 = [];\n    $arr31 = [];\n    $arr32 = [];\n    $arr33 = [];\n    $arr34\
    \ = [];\n    $arr35 = [];\n    $arr36 = [];\n    $arr37 = [];\n    $arr38 = [];\n\
    \    $arr39 = [];\n    $arr40 = [];\n    $arr41 = [];\n    $arr42 = [];\n    $arr43\
    \ = [];\n    $arr44 = [];\n    $arr45 = [];\n    $arr46 = [];\n    $arr47 = [];\n\
    \    $arr48 = [];\n    $arr49 = [];\n    $arr50 = [];\n    $arr51 = [];\n    $arr52\
    \ = [];\n    $arr53 = [];\n    $arr54 = [];\n    $arr55 = [];\n    $arr56 = [];\n\
    \    $arr57 = [];\n    $arr58 = [];\n    $arr59 = [];\n    $arr60 = [];\n    $arr61\
    \ = [];\n    $arr62 = [];\n    $arr63 = [];\n    $arr64 = [];\n    $arr65 = [];\n\
    \    $arr66 = [];\n    $arr67 = [];\n    $arr68 = [];\n    $arr69 = [];\n    $arr70\
    \ = [];\n    $arr71 = [];\n    $arr72 = [];\n    $arr\nfunction candidate(...$args)\
    \ {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\"\
    ) !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\"\
    , \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\"\
    ) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\"\
    ) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Parse error:  syntax error, unexpected token \"function\" in /tmp/tmp8lvgmx8j.php\
    \ on line 83\n"
  exit_code: 255
  status: SyntaxError
- program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // split_words(\"Hello world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"\
    Hello,world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"abcdef\") ==\
    \ 3\nfunction split_words($txt) {\n    $arr = [];\n    $txt = str_replace(',',\
    \ ' ', $txt);\n    $arr = explode(' ', $txt);\n    if (count($arr) == 1) {\n \
    \       $arr = [];\n        for ($i = 0; $i < strlen($txt); $i++) {\n        \
    \    if ($i % 2 == 0) {\n                $arr[] = $txt[$i];\n            }\n \
    \       }\n    }\n    return $arr;\n}\necho '<pre>';\nprint_r(split_words(\"Hello\
    \ world!\"));\necho '</pre>';\necho '<pre>';\nprint_r(split_words(\"Hello,world!\"\
    ));\necho '</pre>';\necho '<pre>';\nprint_r(split_words(\"abcdef\"));\necho '</pre>';\n\
    function candidate(...$args) {\n    return split_words(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"Hello world!\") !== array(\"Hello\", \"\
    world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,world!\"\
    ) !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"world,!\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world !\"\
    ) !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: "<pre>Array\n(\n    [0] => Hello\n    [1] => world!\n)\n</pre><pre>Array\n\
    (\n    [0] => Hello\n    [1] => world!\n)\n</pre><pre>Array\n(\n    [0] => a\n\
    \    [1] => c\n    [2] => e\n)\n</pre>"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpa7nlepie.php:39\n\
    Stack trace:\n#0 /tmp/tmpa7nlepie.php(47): test()\n#1 {main}\n  thrown in /tmp/tmpa7nlepie.php\
    \ on line 39\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // split_words(\"Hello world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"\
    Hello,world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"abcdef\") ==\
    \ 3\nfunction split_words($txt) {\n    $txt = str_replace(\",\", \" \", $txt);\n\
    \    $txt = str_replace(\"!\", \" \", $txt);\n    $txt = str_replace(\"?\", \"\
    \ \", $txt);\n    $txt = str_replace(\".\", \" \", $txt);\n    $txt = str_replace(\"\
    ;\", \" \", $txt);\n    $txt = str_replace(\":\", \" \", $txt);\n    $txt = str_replace(\"\
    -\", \" \", $txt);\n    $txt = str_replace(\"_\", \" \", $txt);\n    $txt = str_replace(\"\
    (\", \" \", $txt);\n    $txt = str_replace(\")\", \" \", $txt);\n    $txt = str_replace(\"\
    [\", \" \", $txt);\n    $txt = str_replace(\"]\", \" \", $txt);\n    $txt = str_replace(\"\
    {\", \" \", $txt);\n    $txt = str_replace(\"}\", \" \", $txt);\n    $txt = str_replace(\"\
    /\", \" \", $txt);\n    $txt = str_replace(\"\\\\\", \" \", $txt);\n    $txt =\
    \ str_replace(\"\\\"\", \" \", $txt);\n    $txt = str_replace(\"'\", \" \", $txt);\n\
    \    $txt = str_replace(\"+\", \" \", $txt);\n    $txt = str_replace(\"*\", \"\
    \ \", $txt);\n    $txt = str_replace(\"&\", \" \", $txt);\n    $txt = str_replace(\"\
    ^\", \" \", $txt);\n    $txt = str_replace(\"%\", \" \", $txt);\n    $txt = str_replace(\"\
    $\", \" \", $txt);\n    $txt = str_replace(\"#\", \" \", $txt);\n    $txt = str_replace(\"\
    @\", \" \", $txt);\n    $txt = str_replace(\"!\", \" \", $txt);\n    $txt = str_replace(\"\
    ?\", \" \", $txt);\n    $txt = str_replace(\".\", \" \", $txt);\n    $txt = str_replace(\"\
    ;\", \" \", $txt);\n    $txt = str_replace(\":\", \" \", $txt);\n    $txt = str_replace(\"\
    -\", \" \", $txt);\n    $txt = str\nfunction candidate(...$args) {\n    return\
    \ split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"Hello\
    \ world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\")) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\"\
    ) !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\"\
    , \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\"\
    ) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\"\
    ) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Parse error:  syntax error, unexpected token \"function\" in /tmp/tmpq5slyedr.php\
    \ on line 43\n"
  exit_code: 255
  status: SyntaxError
- program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // split_words(\"Hello world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"\
    Hello,world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"abcdef\") ==\
    \ 3\nfunction split_words($txt) {\n    if (strpos($txt, ' ') !== false) {\n  \
    \      return explode(' ', $txt);\n    } elseif (strpos($txt, ',') !== false)\
    \ {\n        return explode(',', $txt);\n    } else {\n        $count = 0;\n \
    \       for ($i = 0; $i < strlen($txt); $i++) {\n            if (ord($txt[$i])\
    \ % 2 !== 0) {\n                $count++;\n            }\n        }\n        return\
    \ $count;\n    }\n}\necho split_words(\"Hello world!\") . '<br>';\necho split_words(\"\
    Hello,world!\") . '<br>';\necho split_words(\"abcdef\") . '<br>';\n\nfunction\
    \ candidate(...$args) {\n    return split_words(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"Hello world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,world!\"\
    ) !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"world,!\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world !\"\
    ) !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: Array<br>Array<br>3<br>
  stderr: "PHP Warning:  Array to string conversion in /tmp/tmp6y2ax7pe.php on line\
    \ 24\nPHP Warning:  Array to string conversion in /tmp/tmp6y2ax7pe.php on line\
    \ 25\nPHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp6y2ax7pe.php:38\n\
    Stack trace:\n#0 /tmp/tmp6y2ax7pe.php(43): test()\n#1 {main}\n  thrown in /tmp/tmp6y2ax7pe.php\
    \ on line 38\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // split_words(\"Hello world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"\
    Hello,world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"abcdef\") ==\
    \ 3\nfunction split_words($txt) {\n    $arr = [];\n    if (strpos($txt, ' ') !==\
    \ false) {\n        $arr = explode(' ', $txt);\n    } elseif (strpos($txt, ',')\
    \ !== false) {\n        $arr = explode(',', $txt);\n    } else {\n        $count\
    \ = 0;\n        for ($i = 0; $i < strlen($txt); $i++) {\n            if (ord($txt[$i])\
    \ % 2 !== 0) {\n                $count++;\n            }\n        }\n        $arr\
    \ = $count;\n    }\n    return $arr;\n}\n\nfunction candidate(...$args) {\n  \
    \  return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\"\
    ) !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\"\
    , \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\"\
    ) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\"\
    ) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpgkaw83m3.php:37\n\
    Stack trace:\n#0 /tmp/tmpgkaw83m3.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpgkaw83m3.php\
    \ on line 37\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // split_words(\"Hello world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"\
    Hello,world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"abcdef\") ==\
    \ 3\nfunction split_words($txt) {\n    if(strpos($txt, ' ') !== false) {\n   \
    \     return explode(' ', $txt);\n    } elseif(strpos($txt, ',') !== false) {\n\
    \        return explode(',', $txt);\n    } else {\n        $odd = 0;\n       \
    \ for($i = 0; $i < strlen($txt); $i++) {\n            if(ord($txt[$i]) % 2 !=\
    \ 0) {\n                $odd++;\n            }\n        }\n        return $odd;\n\
    \    }\n}\necho split_words(\"Hello world!\");\necho '<br>';\necho split_words(\"\
    Hello,world!\");\necho '<br>';\necho split_words(\"abcdef\");\nfunction candidate(...$args)\
    \ {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\"\
    ) !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\"\
    , \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\"\
    ) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\"\
    ) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: Array<br>Array<br>3
  stderr: "PHP Warning:  Array to string conversion in /tmp/tmp14jme5wa.php on line\
    \ 24\nPHP Warning:  Array to string conversion in /tmp/tmp14jme5wa.php on line\
    \ 26\nPHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp14jme5wa.php:39\n\
    Stack trace:\n#0 /tmp/tmp14jme5wa.php(44): test()\n#1 {main}\n  thrown in /tmp/tmp14jme5wa.php\
    \ on line 39\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // split_words(\"Hello world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"\
    Hello,world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"abcdef\") ==\
    \ 3\nfunction split_words($txt) {\n    $split = preg_split('/[\\s,]+/', $txt);\n\
    \    if (count($split) > 1) {\n        return $split;\n    }\n    $split = preg_split('/[\\\
    s]+/', $txt);\n    if (count($split) > 1) {\n        return $split;\n    }\n \
    \   $split = preg_split('/[,]+/', $txt);\n    if (count($split) > 1) {\n     \
    \   return $split;\n    }\n    $count = 0;\n    for ($i = 0; $i < strlen($txt);\
    \ $i++) {\n        if (ord($txt[$i]) % 2 == 1) {\n            $count++;\n    \
    \    }\n    }\n    return $count;\n}\necho split_words(\"Hello world!\");\necho\
    \ \"<br>\";\necho split_words(\"Hello,world!\");\necho \"<br>\";\necho split_words(\"\
    abcdef\");\necho \"<br>\";\necho split_words(\"abcdefghijklmnopqrstuvwxyz\");\n\
    echo \"<br>\";\necho split_words(\"abcdefghijklmnopqrstuvwxyz,abcdefghijklmnopqrstuvwxyz\"\
    );\necho \"<br>\";\necho split_words(\"abcdefghijklmnopqrstuvwxyz abcdefghijklmnopqrstuvwxyz\"\
    );\necho \"<br>\";\necho split_words(\"abcdefghijklmnopqrstuvwxyz,abcdefghijklmnopqrstuvwxyz\
    \ abcdefghijklmnopqrstuvwxyz\");\necho \"<br>\";\necho split_words(\"abcdefghijklmnopqrstuvwxyz\
    \ abcdefghijklmnopqrstuvwxyz,abcdefghijklmnopqrstuvwxyz\");\necho \"<br>\";\n\
    echo split_words(\"abcdefghijklmnopqrstuvwxyz,abcdefghijklmnopqrstuvwxyz abcdefghijklmnopqrstuvwxyz,abcdef\n\
    function candidate(...$args) {\n    return split_words(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"Hello world!\") !== array(\"Hello\", \"\
    world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,world!\"\
    ) !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"world,!\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world !\"\
    ) !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Parse error:  syntax error, unexpected identifier \"Hello\", expecting\
    \ \")\" in /tmp/tmpsiiilnc4.php on line 52\n"
  exit_code: 255
  status: SyntaxError
- program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // split_words(\"Hello world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"\
    Hello,world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"abcdef\") ==\
    \ 3\nfunction split_words($txt) {\n    $arr = str_split($txt);\n    $result =\
    \ [];\n    $temp = '';\n    foreach ($arr as $char) {\n        if ($char === '\
    \ ' || $char === ',') {\n            if ($temp !== '') {\n                array_push($result,\
    \ $temp);\n                $temp = '';\n            }\n        } else {\n    \
    \        $temp .= $char;\n        }\n    }\n    if ($temp !== '') {\n        array_push($result,\
    \ $temp);\n    }\n    return count($result) > 0 ? $result : count(array_filter(str_split($txt),\
    \ function ($char) {\n        return ord($char) % 2 === 1;\n    }));\n}\necho\
    \ split_words(\"Hello world!\");\necho '<br>';\necho split_words(\"Hello,world!\"\
    );\necho '<br>';\necho split_words(\"abcdef\");\necho '<br>';\necho split_words(\"\
    abcdefghijklmnopqrstuvwxyz\");\necho '<br>';\necho split_words(\"abcdefghijklmnopqrstuvwxyz,\"\
    );\necho '<br>';\necho split_words(\"abcdefghijklmnopqrstuvwxyz, \");\necho '<br>';\n\
    echo split_words(\"abcdefghijklmnopqrstuvwxyz, ,\");\necho '<br>';\necho split_words(\"\
    abcdefghijklmnopqrstuvwxyz, , \");\necho '<br>';\necho split_words(\"abcdefghijklmnopqrstuvwxyz,\
    \ ,  \");\necho '<br>';\necho split_words(\"abcdefghijklmnopqrstuvwxyz, ,   \"\
    );\necho '<br>';\necho split_words(\"abcdefghijklmnopqrstuvwxyz, ,    \");\necho\
    \ '<br>';\necho split_words(\"abcdefghijklmnopqrstuvwxyz, ,     \");\necho '<br>';\n\
    echo split_words(\"abcdefghijkl\nfunction candidate(...$args) {\n    return split_words(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world!\") !== array(\"\
    Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"\
    world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world\
    \ !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Parse error:  syntax error, unexpected identifier \"Hello\", expecting\
    \ \")\" in /tmp/tmpsd8c3bcq.php on line 60\n"
  exit_code: 255
  status: SyntaxError
- program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // split_words(\"Hello world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"\
    Hello,world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"abcdef\") ==\
    \ 3\nfunction split_words($txt) {\n    if (strpos($txt, ' ') !== false) {\n  \
    \      return explode(' ', $txt);\n    } elseif (strpos($txt, ',') !== false)\
    \ {\n        return explode(',', $txt);\n    } else {\n        $count = 0;\n \
    \       for ($i = 0; $i < strlen($txt); $i++) {\n            if (ord($txt[$i])\
    \ % 2 !== 0) {\n                $count++;\n            }\n        }\n        return\
    \ $count;\n    }\n}\necho split_words(\"Hello world!\");\necho '<br>';\necho split_words(\"\
    Hello,world!\");\necho '<br>';\necho split_words(\"abcdef\");\necho '<br>';\n\
    echo split_words(\"abcdef,ghijkl\");\necho '<br>';\necho split_words(\"abcdef,ghijkl,mnopqr\"\
    );\necho '<br>';\necho split_words(\"abcdef,ghijkl,mnopqr,stuvwx\");\necho '<br>';\n\
    echo split_words(\"abcdef,ghijkl,mnopqr,stuvwx,yz\");\necho '<br>';\necho split_words(\"\
    abcdef,ghijkl,mnopqr,stuvwx,yz,12345\");\necho '<br>';\necho split_words(\"abcdef,ghijkl,mnopqr,stuvwx,yz,12345,67890\"\
    );\necho '<br>';\necho split_words(\"abcdef,ghijkl,mnopqr,stuvwx,yz,12345,67890,ABCDE\"\
    );\necho '<br>';\necho split_words(\"abcdef,ghijkl,mnopqr,stuvwx,yz,12345,67890,ABCDE,FGHIJ\"\
    );\necho '<br>';\necho split_words(\"abcdef,ghijkl,mnopqr,stuvwx,yz,12345,67890,ABCDE,FGHIJ,KLMNO\"\
    );\necho '<br>';\necho split_words(\"abcdef,ghijkl,mnopqr,stuvwx,yz,12345\nfunction\
    \ candidate(...$args) {\n    return split_words(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(\"Hello world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,world!\"\
    ) !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"world,!\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world !\"\
    ) !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Parse error:  syntax error, unexpected identifier \"Hello\", expecting\
    \ \")\" in /tmp/tmp7_59192t.php on line 54\n"
  exit_code: 255
  status: SyntaxError
- program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // split_words(\"Hello world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"\
    Hello,world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"abcdef\") ==\
    \ 3\nfunction split_words($txt) {\n    if (strpos($txt, ' ') !== false) {\n  \
    \      return explode(' ', $txt);\n    } elseif (strpos($txt, ',') !== false)\
    \ {\n        return explode(',', $txt);\n    } else {\n        $count = 0;\n \
    \       for ($i = 0; $i < strlen($txt); $i++) {\n            if (ord($txt[$i])\
    \ % 2 !== 0) {\n                $count++;\n            }\n        }\n        return\
    \ $count;\n    }\n}\necho split_words(\"Hello world!\");\necho '<br>';\necho split_words(\"\
    Hello,world!\");\necho '<br>';\necho split_words(\"abcdef\");\necho '<br>';\n\
    echo split_words(\"abcdef,ghijkl\");\necho '<br>';\necho split_words(\"abcdef\
    \ ghijkl\");\necho '<br>';\necho split_words(\"abcdef ghijkl,mnopqr\");\necho\
    \ '<br>';\necho split_words(\"abcdef ghijkl,mnopqr stuvwx\");\necho '<br>';\n\
    echo split_words(\"abcdef ghijkl,mnopqr stuvwx yz\");\necho '<br>';\necho split_words(\"\
    abcdef ghijkl,mnopqr stuvwx yz,12345\");\necho '<br>';\necho split_words(\"abcdef\
    \ ghijkl,mnopqr stuvwx yz,12345 67890\");\necho '<br>';\necho split_words(\"abcdef\
    \ ghijkl,mnopqr stuvwx yz,12345 67890 ABCDE\");\necho '<br>';\necho split_words(\"\
    abcdef ghijkl,mnopqr stuvwx yz,12345 67890 ABCDE FGHIJ\");\necho '<br>';\necho\
    \ split_words(\"abcdef ghijkl,mnopqr stuvwx yz,12345 67890 ABCDE FGHIJ KLMNO\"\
    );\necho '<br>';\necho split_words(\"abcdef ghijkl,mnopqr stuvwx yz,12345 67890\
    \ ABC\nfunction candidate(...$args) {\n    return split_words(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"Hello world!\") !== array(\"Hello\"\
    , \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"\
    world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world\
    \ !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Parse error:  syntax error, unexpected identifier \"Hello\", expecting\
    \ \")\" in /tmp/tmp50n8xt5h.php on line 56\n"
  exit_code: 255
  status: SyntaxError
- program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // split_words(\"Hello world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"\
    Hello,world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"abcdef\") ==\
    \ 3\nfunction split_words($txt) {\n    $txt = str_replace(',', ' ', $txt);\n \
    \   $txt = str_replace('!', ' ', $txt);\n    $txt = str_replace('?', ' ', $txt);\n\
    \    $txt = str_replace('.', ' ', $txt);\n    $txt = str_replace(';', ' ', $txt);\n\
    \    $txt = str_replace(':', ' ', $txt);\n    $txt = str_replace('-', ' ', $txt);\n\
    \    $txt = str_replace('_', ' ', $txt);\n    $txt = str_replace('(', ' ', $txt);\n\
    \    $txt = str_replace(')', ' ', $txt);\n    $txt = str_replace('[', ' ', $txt);\n\
    \    $txt = str_replace(']', ' ', $txt);\n    $txt = str_replace('{', ' ', $txt);\n\
    \    $txt = str_replace('}', ' ', $txt);\n    $txt = str_replace('/', ' ', $txt);\n\
    \    $txt = str_replace('\\\\', ' ', $txt);\n    $txt = str_replace('|', ' ',\
    \ $txt);\n    $txt = str_replace('+', ' ', $txt);\n    $txt = str_replace('=',\
    \ ' ', $txt);\n    $txt = str_replace('*', ' ', $txt);\n    $txt = str_replace('&',\
    \ ' ', $txt);\n    $txt = str_replace('^', ' ', $txt);\n    $txt = str_replace('%',\
    \ ' ', $txt);\n    $txt = str_replace('$', ' ', $txt);\n    $txt = str_replace('#',\
    \ ' ', $txt);\n    $txt = str_replace('@', ' ', $txt);\n    $txt = str_replace('~',\
    \ ' ', $txt);\n    $txt = str_replace('`', ' ', $txt);\n    $txt = str_replace('\\\
    '', ' ', $txt);\n    $txt = str_replace('\"', ' ', $txt);\n    $txt = str_replace('<',\
    \ ' ', $txt);\n    $txt = str_replace('>', ' ', $txt);\nfunction candidate(...$args)\
    \ {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\"\
    ) !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\"\
    , \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\"\
    ) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\"\
    ) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Parse error:  Unclosed '{' on line 9 in /tmp/tmpthspod39.php on line\
    \ 57\n"
  exit_code: 255
  status: SyntaxError
- program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // split_words(\"Hello world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"\
    Hello,world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"abcdef\") ==\
    \ 3\nfunction split_words($txt) {\n    if (strpos($txt, ' ') !== false) {\n  \
    \      return explode(' ', $txt);\n    } elseif (strpos($txt, ',') !== false)\
    \ {\n        return explode(',', $txt);\n    } else {\n        $count = 0;\n \
    \       for ($i = 0; $i < strlen($txt); $i++) {\n            if (ord($txt[$i])\
    \ % 2 !== 0) {\n                $count++;\n            }\n        }\n        return\
    \ $count;\n    }\n}\necho split_words(\"Hello world!\");\necho '<br>';\necho split_words(\"\
    Hello,world!\");\necho '<br>';\necho split_words(\"abcdef\");\necho '<br>';\n\
    echo split_words(\"abcdef,ghijkl\");\necho '<br>';\necho split_words(\"abcdef\
    \ ghijkl\");\necho '<br>';\necho split_words(\"abcdef,ghijkl mnopqr\");\necho\
    \ '<br>';\necho split_words(\"abcdef,ghijkl mnopqr,stuvwx\");\necho '<br>';\n\
    echo split_words(\"abcdef,ghijkl mnopqr,stuvwx yz\");\necho '<br>';\necho split_words(\"\
    abcdef,ghijkl mnopqr,stuvwx yz,\");\necho '<br>';\necho split_words(\"abcdef,ghijkl\
    \ mnopqr,stuvwx yz,12345\");\necho '<br>';\necho split_words(\"abcdef,ghijkl mnopqr,stuvwx\
    \ yz,12345 67890\");\necho '<br>';\necho split_words(\"abcdef,ghijkl mnopqr,stuvwx\
    \ yz,12345 67890,\");\necho '<br>';\necho split_words(\"abcdef,ghijkl mnopqr,stuvwx\
    \ yz,12345 67890,ABCDE\");\necho '<br>';\necho split_words(\"abcdef,ghijkl mnopqr,stuvwx\
    \ yz,12345 67890\nfunction candidate(...$args) {\n    return split_words(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world!\") !== array(\"\
    Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"\
    world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world\
    \ !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Parse error:  syntax error, unexpected identifier \"Hello\", expecting\
    \ \")\" in /tmp/tmpzp32vnni.php on line 56\n"
  exit_code: 255
  status: SyntaxError
- program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // split_words(\"Hello world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"\
    Hello,world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"abcdef\") ==\
    \ 3\nfunction split_words($txt) {\n    if (strpos($txt, ' ') !== false) {\n  \
    \      return explode(' ', $txt);\n    }\n    if (strpos($txt, ',') !== false)\
    \ {\n        return explode(',', $txt);\n    }\n    $count = 0;\n    for ($i =\
    \ 0; $i < strlen($txt); $i++) {\n        if (ord($txt[$i]) % 2 !== 0) {\n    \
    \        $count++;\n        }\n    }\n    return $count;\n}\n\necho split_words(\"\
    Hello world!\");\necho split_words(\"Hello,world!\");\necho split_words(\"abcdef\"\
    );\nfunction candidate(...$args) {\n    return split_words(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(\"Hello world!\") !== array(\"Hello\", \"\
    world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,world!\"\
    ) !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"world,!\")) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world !\"\
    ) !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: ArrayArray3
  stderr: "PHP Warning:  Array to string conversion in /tmp/tmpogy_uk_0.php on line\
    \ 25\nPHP Warning:  Array to string conversion in /tmp/tmpogy_uk_0.php on line\
    \ 26\nPHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpogy_uk_0.php:38\n\
    Stack trace:\n#0 /tmp/tmpogy_uk_0.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpogy_uk_0.php\
    \ on line 38\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // split_words(\"Hello world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"\
    Hello,world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"abcdef\") ==\
    \ 3\nfunction split_words($txt) {\n    $txt = str_replace(',', ' ', $txt);\n \
    \   $txt = str_replace('!', ' ', $txt);\n    $txt = str_replace('?', ' ', $txt);\n\
    \    $txt = str_replace('.', ' ', $txt);\n    $txt = str_replace(';', ' ', $txt);\n\
    \    $txt = str_replace(':', ' ', $txt);\n    $txt = str_replace('-', ' ', $txt);\n\
    \    $txt = str_replace('_', ' ', $txt);\n    $txt = str_replace('(', ' ', $txt);\n\
    \    $txt = str_replace(')', ' ', $txt);\n    $txt = str_replace('[', ' ', $txt);\n\
    \    $txt = str_replace(']', ' ', $txt);\n    $txt = str_replace('{', ' ', $txt);\n\
    \    $txt = str_replace('}', ' ', $txt);\n    $txt = str_replace('\"', ' ', $txt);\n\
    \    $txt = str_replace(\"'\", ' ', $txt);\n    $txt = str_replace('/', ' ', $txt);\n\
    \    $txt = str_replace('\\\\', ' ', $txt);\n    $txt = str_replace('|', ' ',\
    \ $txt);\n    $txt = str_replace('+', ' ', $txt);\n    $txt = str_replace('=',\
    \ ' ', $txt);\n    $txt = str_replace('*', ' ', $txt);\n    $txt = str_replace('&',\
    \ ' ', $txt);\n    $txt = str_replace('^', ' ', $txt);\n    $txt = str_replace('%',\
    \ ' ', $txt);\n    $txt = str_replace('$', ' ', $txt);\n    $txt = str_replace('#',\
    \ ' ', $txt);\n    $txt = str_replace('@', ' ', $txt);\n    $txt = str_replace('~',\
    \ ' ', $txt);\n    $txt = str_replace('`', ' ', $txt);\n    $txt = str_replace('<',\
    \ ' ', $txt);\n    $txt = str_replace('>', ' ', $txt);\nfunction candidate(...$args)\
    \ {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\"\
    ) !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\"\
    , \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\"\
    ) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\"\
    ) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Parse error:  Unclosed '{' on line 9 in /tmp/tmp_vb3kqoh.php on line\
    \ 57\n"
  exit_code: 255
  status: SyntaxError
- program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // split_words(\"Hello world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"\
    Hello,world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"abcdef\") ==\
    \ 3\nfunction split_words($txt) {\n    if (strpos($txt, ' ') !== false) {\n  \
    \      return explode(' ', $txt);\n    } elseif (strpos($txt, ',') !== false)\
    \ {\n        return explode(',', $txt);\n    } else {\n        $count = 0;\n \
    \       for ($i = 0; $i < strlen($txt); $i++) {\n            if (ord($txt[$i])\
    \ % 2 !== 0) {\n                $count++;\n            }\n        }\n        return\
    \ $count;\n    }\n}\necho split_words(\"Hello world!\");\necho '<br>';\necho split_words(\"\
    Hello,world!\");\necho '<br>';\necho split_words(\"abcdef\");\necho '<br>';\n\
    echo split_words(\"abcdef,ghijk\");\necho '<br>';\necho split_words(\"abcdef ghijk\"\
    );\necho '<br>';\necho split_words(\"abcdef ghijk,lmnop\");\necho '<br>';\necho\
    \ split_words(\"abcdef ghijk,lmnop qrstu\");\necho '<br>';\necho split_words(\"\
    abcdef ghijk,lmnop qrstu vwxyz\");\necho '<br>';\necho split_words(\"abcdef ghijk,lmnop\
    \ qrstu vwxyz,ABCDE\");\necho '<br>';\necho split_words(\"abcdef ghijk,lmnop qrstu\
    \ vwxyz,ABCDE FGHIJ\");\necho '<br>';\necho split_words(\"abcdef ghijk,lmnop qrstu\
    \ vwxyz,ABCDE FGHIJ KLMNO\");\necho '<br>';\necho split_words(\"abcdef ghijk,lmnop\
    \ qrstu vwxyz,ABCDE FGHIJ KLMNO PQRST\");\necho '<br>';\necho split_words(\"abcdef\
    \ ghijk,lmnop qrstu vwxyz,ABCDE FGHIJ KLMNO PQRST UVWXY\");\necho '<br>';\necho\
    \ split_words(\"abcdef ghijk,lmnop qrstu vwxyz\nfunction candidate(...$args) {\n\
    \    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\"\
    ) !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\"\
    , \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\"\
    ) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\"\
    ) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Parse error:  syntax error, unexpected identifier \"Hello\", expecting\
    \ \")\" in /tmp/tmp0eal5z2b.php on line 56\n"
  exit_code: 255
  status: SyntaxError
- program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // split_words(\"Hello world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"\
    Hello,world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"abcdef\") ==\
    \ 3\nfunction split_words($txt) {\n  if (strpos($txt, ' ') !== false) {\n    return\
    \ explode(' ', $txt);\n  } elseif (strpos($txt, ',') !== false) {\n    return\
    \ explode(',', $txt);\n  } else {\n    $count = 0;\n    for ($i = 0; $i < strlen($txt);\
    \ $i++) {\n      if (ord($txt[$i]) % 2 !== 0) {\n        $count++;\n      }\n\
    \    }\n    return $count;\n  }\n}\necho split_words('Hello world!');\necho '<br>';\n\
    echo split_words('Hello,world!');\necho '<br>';\necho split_words('abcdef');\n\
    echo '<br>';\necho split_words('abcdef,ghijkl');\necho '<br>';\necho split_words('abcdef\
    \ ghijkl');\necho '<br>';\necho split_words('abcdef,ghijkl mnopqr');\necho '<br>';\n\
    echo split_words('abcdef,ghijkl mnopqr stuvwx');\necho '<br>';\necho split_words('abcdef,ghijkl\
    \ mnopqr stuvwx yz');\necho '<br>';\necho split_words('abcdef,ghijkl mnopqr stuvwx\
    \ yz ABCDEF');\necho '<br>';\necho split_words('abcdef,ghijkl mnopqr stuvwx yz\
    \ ABCDEF GHIJKL');\necho '<br>';\necho split_words('abcdef,ghijkl mnopqr stuvwx\
    \ yz ABCDEF GHIJKL MNOPQR');\necho '<br>';\necho split_words('abcdef,ghijkl mnopqr\
    \ stuvwx yz ABCDEF GHIJKL MNOPQR STUVWX');\necho '<br>';\necho split_words('abcdef,ghijkl\
    \ mnopqr stuvwx yz ABCDEF GHIJKL MNOPQR STUVWX YZ');\necho '<br>';\necho split_words('abcdef,ghijkl\
    \ mn\nfunction candidate(...$args) {\n    return split_words(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(\"Hello world!\") !== array(\"Hello\"\
    , \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"\
    world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world\
    \ !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Parse error:  syntax error, unexpected string content \"abcdef,ghijkl\
    \ mn\" in /tmp/tmpgtxsq98c.php on line 50\n"
  exit_code: 255
  status: SyntaxError
- program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // split_words(\"Hello world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"\
    Hello,world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"abcdef\") ==\
    \ 3\nfunction split_words($txt) {\n  $words = preg_split('/[\\s,]+/', $txt);\n\
    \  if (count($words) > 1) {\n    return $words;\n  }\n  $chars = str_split($txt);\n\
    \  $odds = 0;\n  foreach ($chars as $char) {\n    if (ord($char) % 2 == 1) {\n\
    \      $odds++;\n    }\n  }\n  return $odds;\n}\necho split_words(\"Hello world!\"\
    );\necho \"\\n\";\necho split_words(\"Hello,world!\");\necho \"\\n\";\necho split_words(\"\
    abcdef\");\necho \"\\n\";\nfunction candidate(...$args) {\n    return split_words(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(\"Hello world!\") !== array(\"\
    Hello\", \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"\
    world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world\
    \ !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: "Array\nArray\n3\n"
  stderr: "PHP Warning:  Array to string conversion in /tmp/tmpaolk01bd.php on line\
    \ 23\nPHP Warning:  Array to string conversion in /tmp/tmpaolk01bd.php on line\
    \ 25\nPHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpaolk01bd.php:36\n\
    Stack trace:\n#0 /tmp/tmpaolk01bd.php(44): test()\n#1 {main}\n  thrown in /tmp/tmpaolk01bd.php\
    \ on line 36\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // split_words(\"Hello world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"\
    Hello,world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"abcdef\") ==\
    \ 3\nfunction split_words($txt) {\n    $arr = str_split($txt);\n    $arr_res =\
    \ [];\n    $res = 0;\n    foreach ($arr as $key => $value) {\n        if (ord($value)\
    \ >= 97 && ord($value) <= 122) {\n            if ($key % 2 == 0) {\n         \
    \       $res++;\n            }\n        }\n    }\n    if (strpos($txt, ' ') !==\
    \ false) {\n        $arr_res = explode(' ', $txt);\n    } else if (strpos($txt,\
    \ ',') !== false) {\n        $arr_res = explode(',', $txt);\n    } else {\n  \
    \      $arr_res = $res;\n    }\n    return $arr_res;\n}\n\nfunction candidate(...$args)\
    \ {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\"\
    ) !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\"\
    , \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\"\
    ) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\"\
    ) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpyphhiobi.php:40\n\
    Stack trace:\n#0 /tmp/tmpyphhiobi.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpyphhiobi.php\
    \ on line 40\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // split_words(\"Hello world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"\
    Hello,world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"abcdef\") ==\
    \ 3\nfunction split_words($txt) {\n    if(strpos($txt, ' ') !== false) {\n   \
    \     return explode(' ', $txt);\n    } else if(strpos($txt, ',') !== false) {\n\
    \        return explode(',', $txt);\n    } else {\n        $count = 0;\n     \
    \   for($i = 0; $i < strlen($txt); $i++) {\n            if(ord($txt[$i]) % 2 !==\
    \ 0) {\n                $count++;\n            }\n        }\n        return $count;\n\
    \    }\n}\necho split_words(\"Hello world!\");\necho \"<br>\";\necho split_words(\"\
    Hello,world!\");\necho \"<br>\";\necho split_words(\"abcdef\");\nfunction candidate(...$args)\
    \ {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\"\
    ) !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\"\
    , \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\"\
    ) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\"\
    ) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: Array<br>Array<br>3
  stderr: "PHP Warning:  Array to string conversion in /tmp/tmp5w1dgoiu.php on line\
    \ 24\nPHP Warning:  Array to string conversion in /tmp/tmp5w1dgoiu.php on line\
    \ 26\nPHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp5w1dgoiu.php:39\n\
    Stack trace:\n#0 /tmp/tmp5w1dgoiu.php(44): test()\n#1 {main}\n  thrown in /tmp/tmp5w1dgoiu.php\
    \ on line 39\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // split_words(\"Hello world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"\
    Hello,world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"abcdef\") ==\
    \ 3\nfunction split_words($txt) {\n    $txt = str_replace(',', ' ', $txt);\n \
    \   $txt = str_replace('!', ' ', $txt);\n    $txt = str_replace('.', ' ', $txt);\n\
    \    $txt = str_replace('?', ' ', $txt);\n    $txt = str_replace(';', ' ', $txt);\n\
    \    $txt = str_replace(':', ' ', $txt);\n    $txt = str_replace('-', ' ', $txt);\n\
    \    $txt = str_replace('_', ' ', $txt);\n    $txt = str_replace('\"', ' ', $txt);\n\
    \    $txt = str_replace(\"'\", ' ', $txt);\n    $txt = str_replace('(', ' ', $txt);\n\
    \    $txt = str_replace(')', ' ', $txt);\n    $txt = str_replace('[', ' ', $txt);\n\
    \    $txt = str_replace(']', ' ', $txt);\n    $txt = str_replace('{', ' ', $txt);\n\
    \    $txt = str_replace('}', ' ', $txt);\n    $txt = str_replace('/', ' ', $txt);\n\
    \    $txt = str_replace('\\\\', ' ', $txt);\n    $txt = str_replace('|', ' ',\
    \ $txt);\n    $txt = str_replace('+', ' ', $txt);\n    $txt = str_replace('=',\
    \ ' ', $txt);\n    $txt = str_replace('*', ' ', $txt);\n    $txt = str_replace('&',\
    \ ' ', $txt);\n    $txt = str_replace('^', ' ', $txt);\n    $txt = str_replace('%',\
    \ ' ', $txt);\n    $txt = str_replace('$', ' ', $txt);\n    $txt = str_replace('#',\
    \ ' ', $txt);\n    $txt = str_replace('@', ' ', $txt);\n    $txt = str_replace('~',\
    \ ' ', $txt);\n    $txt = str_replace('`', ' ', $txt);\n    $txt = str_replace('<',\
    \ ' ', $txt);\n    $txt = str_replace('>', ' ', $txt);\nfunction candidate(...$args)\
    \ {\n    return split_words(...$args);\n}\n\nfunction test(): void {\n    if (candidate(\"\
    Hello world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello,world!\") !== array(\"Hello\", \"world!\"\
    )) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello world,!\"\
    ) !== array(\"Hello\", \"world,!\")) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(\"Hello,Hello,world !\") !== array(\"Hello,Hello,world\"\
    , \"!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"abcdef\"\
    ) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaabb\"\
    ) !== 2) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"aaaBb\"\
    ) !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\") !==\
    \ 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Parse error:  Unclosed '{' on line 9 in /tmp/tmpptgds3r5.php on line\
    \ 57\n"
  exit_code: 255
  status: SyntaxError
- program: "<?php\n// Given a string of words, return a list of words split on whitespace,\
    \ if no whitespaces exists in the text you\n// should split on commas ',' if no\
    \ commas exists you should return the number of lower-case letters with odd order\
    \ in the\n// alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25\n// Examples\n\
    // split_words(\"Hello world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"\
    Hello,world!\") \u279E [\"Hello\", \"world!\"]\n// split_words(\"abcdef\") ==\
    \ 3\nfunction split_words($txt) {\n    $arr = str_split($txt);\n    $arr_res =\
    \ [];\n    $arr_res_2 = [];\n    $arr_res_3 = [];\n    $arr_res_4 = [];\n    $arr_res_5\
    \ = [];\n    $arr_res_6 = [];\n    $arr_res_7 = [];\n    $arr_res_8 = [];\n  \
    \  $arr_res_9 = [];\n    $arr_res_10 = [];\n    $arr_res_11 = [];\n    $arr_res_12\
    \ = [];\n    $arr_res_13 = [];\n    $arr_res_14 = [];\n    $arr_res_15 = [];\n\
    \    $arr_res_16 = [];\n    $arr_res_17 = [];\n    $arr_res_18 = [];\n    $arr_res_19\
    \ = [];\n    $arr_res_20 = [];\n    $arr_res_21 = [];\n    $arr_res_22 = [];\n\
    \    $arr_res_23 = [];\n    $arr_res_24 = [];\n    $arr_res_25 = [];\n    $arr_res_26\
    \ = [];\n    $arr_res_27 = [];\n    $arr_res_28 = [];\n    $arr_res_29 = [];\n\
    \    $arr_res_30 = [];\n    $arr_res_31 = [];\n    $arr_res_32 = [];\n    $arr_res_33\
    \ = [];\n    $arr_res_34 = [];\n    $arr_res_35 = [];\n    $arr_res_36 = [];\n\
    \    $arr_res_37 = [];\n    $arr_res_38 = [];\n    $arr_res_39 = [];\n    $arr_res_40\
    \ = [];\n    $arr_res_41 = [];\n    $arr_res_42 = [];\n    $arr_res_43 = [];\n\
    \    $arr_res_44 = [];\n    $arr_res_45 = [];\n    $arr_res_46 = [];\n    $arr_res_47\
    \ = [];\n    $arr_res_48 = [];\n    $arr_res_49 = [];\n    $arr_res_50 = [];\n\
    \    $\nfunction candidate(...$args) {\n    return split_words(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(\"Hello world!\") !== array(\"Hello\"\
    , \"world!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"\
    Hello,world!\") !== array(\"Hello\", \"world!\")) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(\"Hello world,!\") !== array(\"Hello\", \"\
    world,!\")) { throw new Exception(\"Test failed!\"); }\n    if (candidate(\"Hello,Hello,world\
    \ !\") !== array(\"Hello,Hello,world\", \"!\")) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"abcdef\") !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaabb\") !== 2) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"aaaBb\") !== 1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(\"\") !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Parse error:  syntax error, unexpected token \"function\", expecting\
    \ variable or \"{\" or \"$\" in /tmp/tmpiu5z6cx_.php on line 62\n"
  exit_code: 255
  status: SyntaxError

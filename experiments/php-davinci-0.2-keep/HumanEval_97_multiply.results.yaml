name: HumanEval_97_multiply
language: php
results:
- program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// multiply(148, 412) should return 16.\n// multiply(19, 28) should\
    \ return 72.\n// multiply(2020, 1851) should return 0.\n// multiply(14,-15) should\
    \ return 20.\nfunction multiply($a, $b) {\n    $a = abs($a);\n    $b = abs($b);\n\
    \    $a = $a % 10;\n    $b = $b % 10;\n    return $a * $b;\n}\n\nfunction candidate(...$args)\
    \ {\n    return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148,\
    \ 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19,\
    \ 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020,\
    \ 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14,\
    \ -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76,\
    \ 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17,\
    \ 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0,\
    \ 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// multiply(148, 412) should return 16.\n// multiply(19, 28) should\
    \ return 72.\n// multiply(2020, 1851) should return 0.\n// multiply(14,-15) should\
    \ return 20.\nfunction multiply($a, $b) {\n    $a = abs($a);\n    $b = abs($b);\n\
    \    $a = $a % 10;\n    $b = $b % 10;\n    return $a * $b;\n}\nfunction candidate(...$args)\
    \ {\n    return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148,\
    \ 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19,\
    \ 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020,\
    \ 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14,\
    \ -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76,\
    \ 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17,\
    \ 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0,\
    \ 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// multiply(148, 412) should return 16.\n// multiply(19, 28) should\
    \ return 72.\n// multiply(2020, 1851) should return 0.\n// multiply(14,-15) should\
    \ return 20.\nfunction multiply($a, $b) {\n    $a = (string)$a;\n    $b = (string)$b;\n\
    \    $a = $a[strlen($a)-1];\n    $b = $b[strlen($b)-1];\n    return $a * $b;\n\
    }\n\necho multiply(148, 412);\necho \"\\n\";\necho multiply(19, 28);\necho \"\\\
    n\";\necho multiply(2020, 1851);\necho \"\\n\";\necho multiply(14,-15);\necho\
    \ \"\\n\";\nfunction candidate(...$args) {\n    return multiply(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "16\n72\n0\n20\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// multiply(148, 412) should return 16.\n// multiply(19, 28) should\
    \ return 72.\n// multiply(2020, 1851) should return 0.\n// multiply(14,-15) should\
    \ return 20.\nfunction multiply($a, $b) {\n    $a = $a % 10;\n    $b = $b % 10;\n\
    \    return $a * $b;\n}\nfunction candidate(...$args) {\n    return multiply(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(148, 412) !== 16) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp9affu6z9.php:23\n\
    Stack trace:\n#0 /tmp/tmp9affu6z9.php(30): test()\n#1 {main}\n  thrown in /tmp/tmp9affu6z9.php\
    \ on line 23\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// multiply(148, 412) should return 16.\n// multiply(19, 28) should\
    \ return 72.\n// multiply(2020, 1851) should return 0.\n// multiply(14,-15) should\
    \ return 20.\nfunction multiply($a, $b) {\n    $a = abs($a);\n    $b = abs($b);\n\
    \    return ($a % 10) * ($b % 10);\n}\n\nfunction candidate(...$args) {\n    return\
    \ multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148, 412)\
    \ !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19, 28)\
    \ !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020,\
    \ 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14,\
    \ -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76,\
    \ 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17,\
    \ 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0,\
    \ 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// multiply(148, 412) should return 16.\n// multiply(19, 28) should\
    \ return 72.\n// multiply(2020, 1851) should return 0.\n// multiply(14,-15) should\
    \ return 20.\nfunction multiply($a, $b) {\n    return ($a % 10) * ($b % 10);\n\
    }\n\nfunction candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpq1g2bnxv.php:22\n\
    Stack trace:\n#0 /tmp/tmpq1g2bnxv.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpq1g2bnxv.php\
    \ on line 22\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// multiply(148, 412) should return 16.\n// multiply(19, 28) should\
    \ return 72.\n// multiply(2020, 1851) should return 0.\n// multiply(14,-15) should\
    \ return 20.\nfunction multiply($a, $b) {\n    return ($a % 10) * ($b % 10);\n\
    }\n\nfunction candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpc54_v96q.php:22\n\
    Stack trace:\n#0 /tmp/tmpc54_v96q.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpc54_v96q.php\
    \ on line 22\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// multiply(148, 412) should return 16.\n// multiply(19, 28) should\
    \ return 72.\n// multiply(2020, 1851) should return 0.\n// multiply(14,-15) should\
    \ return 20.\nfunction multiply($a, $b) {\n    $a = $a % 10;\n    $b = $b % 10;\n\
    \    return $a * $b;\n}\n\necho multiply(148, 412);\necho \"\\n\";\necho multiply(19,\
    \ 28);\necho \"\\n\";\necho multiply(2020, 1851);\necho \"\\n\";\necho multiply(14,-15);\n\
    echo \"\\n\";\nfunction candidate(...$args) {\n    return multiply(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(148, 412) !== 16) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "16\n72\n0\n-20\n"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmprn8ti1s7.php:32\n\
    Stack trace:\n#0 /tmp/tmprn8ti1s7.php(39): test()\n#1 {main}\n  thrown in /tmp/tmprn8ti1s7.php\
    \ on line 32\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// multiply(148, 412) should return 16.\n// multiply(19, 28) should\
    \ return 72.\n// multiply(2020, 1851) should return 0.\n// multiply(14,-15) should\
    \ return 20.\nfunction multiply($a, $b) {\n    $a = $a % 10;\n    $b = $b % 10;\n\
    \    return $a * $b;\n}\n\nfunction candidate(...$args) {\n    return multiply(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(148, 412) !== 16) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpjogxucvu.php:24\n\
    Stack trace:\n#0 /tmp/tmpjogxucvu.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpjogxucvu.php\
    \ on line 24\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// multiply(148, 412) should return 16.\n// multiply(19, 28) should\
    \ return 72.\n// multiply(2020, 1851) should return 0.\n// multiply(14,-15) should\
    \ return 20.\nfunction multiply($a, $b) {\n    $a = (string)$a;\n    $b = (string)$b;\n\
    \    $a = $a[strlen($a)-1];\n    $b = $b[strlen($b)-1];\n    return $a * $b;\n\
    }\n\necho multiply(148, 412);\necho \"<br>\";\necho multiply(19, 28);\necho \"\
    <br>\";\necho multiply(2020, 1851);\necho \"<br>\";\necho multiply(14,-15);\n\
    echo \"<br>\";\nfunction candidate(...$args) {\n    return multiply(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(148, 412) !== 16) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: 16<br>72<br>0<br>20<br>
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// multiply(148, 412) should return 16.\n// multiply(19, 28) should\
    \ return 72.\n// multiply(2020, 1851) should return 0.\n// multiply(14,-15) should\
    \ return 20.\nfunction multiply($a, $b) {\n    $a = $a % 10;\n    $b = $b % 10;\n\
    \    return $a * $b;\n}\n\nfunction candidate(...$args) {\n    return multiply(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(148, 412) !== 16) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp5dny9_uo.php:24\n\
    Stack trace:\n#0 /tmp/tmp5dny9_uo.php(31): test()\n#1 {main}\n  thrown in /tmp/tmp5dny9_uo.php\
    \ on line 24\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// multiply(148, 412) should return 16.\n// multiply(19, 28) should\
    \ return 72.\n// multiply(2020, 1851) should return 0.\n// multiply(14,-15) should\
    \ return 20.\nfunction multiply($a, $b) {\n    $a = $a % 10;\n    $b = $b % 10;\n\
    \    return $a * $b;\n}\n\necho multiply(148, 412);\necho \"<br>\";\necho multiply(19,\
    \ 28);\necho \"<br>\";\necho multiply(2020, 1851);\necho \"<br>\";\necho multiply(14,-15);\n\
    echo \"<br>\";\necho multiply(0, 0);\necho \"<br>\";\necho multiply(0, 1);\necho\
    \ \"<br>\";\necho multiply(1, 0);\necho \"<br>\";\necho multiply(1, 1);\necho\
    \ \"<br>\";\necho multiply(1, 2);\necho \"<br>\";\necho multiply(2, 1);\necho\
    \ \"<br>\";\necho multiply(2, 2);\necho \"<br>\";\necho multiply(2, 3);\necho\
    \ \"<br>\";\necho multiply(3, 2);\necho \"<br>\";\necho multiply(3, 3);\necho\
    \ \"<br>\";\necho multiply(3, 4);\necho \"<br>\";\necho multiply(4, 3);\necho\
    \ \"<br>\";\necho multiply(4, 4);\necho \"<br>\";\necho multiply(4, 5);\necho\
    \ \"<br>\";\necho multiply(5, 4);\necho \"<br>\";\necho multiply(5, 5);\necho\
    \ \"<br>\";\necho multiply(5, 6);\necho \"<br>\";\necho multiply(6, 5);\necho\
    \ \"<br>\";\necho multiply(6, 6);\necho \"<br>\";\necho multiply(6, 7);\necho\
    \ \"<br>\";\necho multiply(7, 6);\necho \"<br>\";\necho multiply(7, 7);\necho\
    \ \"<br>\";\necho multiply(7, 8);\necho \"<br>\";\necho multiply(8, 7);\necho\
    \ \"<br>\";\necho multiply(8, 8);\necho \"<br>\";\necho multiply(8, 9);\necho\
    \ \"<br>\";\necho multiply(9, 8);\necho \"<br>\";\necho multiply(9, 9);\necho\
    \ \"<br>\";\necho multiply(9, 10);\necho \"<br>\";\necho multiply(10, 9);\necho\
    \ \"<br>\";\necho multiply\nfunction candidate(...$args) {\n    return multiply(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(148, 412) !== 16) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Parse error:  syntax error, unexpected token \"function\", expecting\
    \ \",\" or \";\" in /tmp/tmp_zvxhi8o.php on line 85\n"
  exit_code: 255
  status: SyntaxError
- program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// multiply(148, 412) should return 16.\n// multiply(19, 28) should\
    \ return 72.\n// multiply(2020, 1851) should return 0.\n// multiply(14,-15) should\
    \ return 20.\nfunction multiply($a, $b) {\n    $a = (string)$a;\n    $b = (string)$b;\n\
    \    $a = $a[strlen($a)-1];\n    $b = $b[strlen($b)-1];\n    return $a * $b;\n\
    }\n\necho multiply(148, 412);\necho \"\\n\";\necho multiply(19, 28);\necho \"\\\
    n\";\necho multiply(2020, 1851);\necho \"\\n\";\necho multiply(14,-15);\necho\
    \ \"\\n\";\n\nfunction candidate(...$args) {\n    return multiply(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(148, 412) !== 16) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "16\n72\n0\n20\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// multiply(148, 412) should return 16.\n// multiply(19, 28) should\
    \ return 72.\n// multiply(2020, 1851) should return 0.\n// multiply(14,-15) should\
    \ return 20.\nfunction multiply($a, $b) {\n    $a = $a % 10;\n    $b = $b % 10;\n\
    \    return $a * $b;\n}\n\necho multiply(148, 412);\necho \"\\n\";\necho multiply(19,\
    \ 28);\necho \"\\n\";\necho multiply(2020, 1851);\necho \"\\n\";\necho multiply(14,-15);\n\
    echo \"\\n\";\n\nfunction candidate(...$args) {\n    return multiply(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(148, 412) !== 16) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "16\n72\n0\n-20\n"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpmh0ik0_o.php:33\n\
    Stack trace:\n#0 /tmp/tmpmh0ik0_o.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpmh0ik0_o.php\
    \ on line 33\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// multiply(148, 412) should return 16.\n// multiply(19, 28) should\
    \ return 72.\n// multiply(2020, 1851) should return 0.\n// multiply(14,-15) should\
    \ return 20.\nfunction multiply($a, $b) {\n    $a = abs($a);\n    $b = abs($b);\n\
    \    $a = $a % 10;\n    $b = $b % 10;\n    return $a * $b;\n}\n\nfunction candidate(...$args)\
    \ {\n    return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148,\
    \ 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19,\
    \ 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020,\
    \ 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14,\
    \ -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76,\
    \ 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17,\
    \ 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0,\
    \ 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// multiply(148, 412) should return 16.\n// multiply(19, 28) should\
    \ return 72.\n// multiply(2020, 1851) should return 0.\n// multiply(14,-15) should\
    \ return 20.\nfunction multiply($a, $b) {\n    $a = abs($a);\n    $b = abs($b);\n\
    \    return ($a % 10) * ($b % 10);\n}\n\nfunction candidate(...$args) {\n    return\
    \ multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148, 412)\
    \ !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19, 28)\
    \ !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020,\
    \ 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14,\
    \ -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76,\
    \ 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17,\
    \ 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0,\
    \ 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// multiply(148, 412) should return 16.\n// multiply(19, 28) should\
    \ return 72.\n// multiply(2020, 1851) should return 0.\n// multiply(14,-15) should\
    \ return 20.\nfunction multiply($a, $b) {\n    $a = $a % 10;\n    $b = $b % 10;\n\
    \    return $a * $b;\n}\nfunction candidate(...$args) {\n    return multiply(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(148, 412) !== 16) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpzsaiwhdc.php:23\n\
    Stack trace:\n#0 /tmp/tmpzsaiwhdc.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpzsaiwhdc.php\
    \ on line 23\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// multiply(148, 412) should return 16.\n// multiply(19, 28) should\
    \ return 72.\n// multiply(2020, 1851) should return 0.\n// multiply(14,-15) should\
    \ return 20.\nfunction multiply($a, $b) {\n    $a = $a % 10;\n    $b = $b % 10;\n\
    \    return $a * $b;\n}\n\nfunction candidate(...$args) {\n    return multiply(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(148, 412) !== 16) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpryo4a95m.php:24\n\
    Stack trace:\n#0 /tmp/tmpryo4a95m.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpryo4a95m.php\
    \ on line 24\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// multiply(148, 412) should return 16.\n// multiply(19, 28) should\
    \ return 72.\n// multiply(2020, 1851) should return 0.\n// multiply(14,-15) should\
    \ return 20.\nfunction multiply($a, $b) {\n    $a = $a % 10;\n    $b = $b % 10;\n\
    \    return $a * $b;\n}\n\necho multiply(148, 412);\necho \"<br>\";\necho multiply(19,\
    \ 28);\necho \"<br>\";\necho multiply(2020, 1851);\necho \"<br>\";\necho multiply(14,-15);\n\
    echo \"<br>\";\n\nfunction candidate(...$args) {\n    return multiply(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(148, 412) !== 16) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: 16<br>72<br>0<br>-20<br>
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp6_i2ozi9.php:33\n\
    Stack trace:\n#0 /tmp/tmp6_i2ozi9.php(40): test()\n#1 {main}\n  thrown in /tmp/tmp6_i2ozi9.php\
    \ on line 33\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// multiply(148, 412) should return 16.\n// multiply(19, 28) should\
    \ return 72.\n// multiply(2020, 1851) should return 0.\n// multiply(14,-15) should\
    \ return 20.\nfunction multiply($a, $b) {\n    $a = $a % 10;\n    $b = $b % 10;\n\
    \    return $a * $b;\n}\n\nfunction candidate(...$args) {\n    return multiply(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(148, 412) !== 16) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpv4jo5o50.php:24\n\
    Stack trace:\n#0 /tmp/tmpv4jo5o50.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpv4jo5o50.php\
    \ on line 24\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// multiply(148, 412) should return 16.\n// multiply(19, 28) should\
    \ return 72.\n// multiply(2020, 1851) should return 0.\n// multiply(14,-15) should\
    \ return 20.\nfunction multiply($a, $b) {\n    $a = $a % 10;\n    $b = $b % 10;\n\
    \    return $a * $b;\n}\n\necho multiply(148, 412);\necho \"\\n\";\necho multiply(19,\
    \ 28);\necho \"\\n\";\necho multiply(2020, 1851);\necho \"\\n\";\necho multiply(14,-15);\n\
    echo \"\\n\";\n\nfunction candidate(...$args) {\n    return multiply(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(148, 412) !== 16) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "16\n72\n0\n-20\n"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpy0mt4_nd.php:33\n\
    Stack trace:\n#0 /tmp/tmpy0mt4_nd.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpy0mt4_nd.php\
    \ on line 33\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// multiply(148, 412) should return 16.\n// multiply(19, 28) should\
    \ return 72.\n// multiply(2020, 1851) should return 0.\n// multiply(14,-15) should\
    \ return 20.\nfunction multiply($a, $b) {\n    $a = $a % 10;\n    $b = $b % 10;\n\
    \    return $a * $b;\n}\n\necho multiply(148, 412);\necho \"\\n\";\necho multiply(19,\
    \ 28);\necho \"\\n\";\necho multiply(2020, 1851);\necho \"\\n\";\necho multiply(14,-15);\n\
    echo \"\\n\";\nfunction candidate(...$args) {\n    return multiply(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(148, 412) !== 16) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "16\n72\n0\n-20\n"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp9j6r5t5r.php:32\n\
    Stack trace:\n#0 /tmp/tmp9j6r5t5r.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp9j6r5t5r.php\
    \ on line 32\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// multiply(148, 412) should return 16.\n// multiply(19, 28) should\
    \ return 72.\n// multiply(2020, 1851) should return 0.\n// multiply(14,-15) should\
    \ return 20.\nfunction multiply($a, $b) {\n    return ($a % 10) * ($b % 10);\n\
    }\n\nfunction candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp56wldkw4.php:22\n\
    Stack trace:\n#0 /tmp/tmp56wldkw4.php(29): test()\n#1 {main}\n  thrown in /tmp/tmp56wldkw4.php\
    \ on line 22\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// multiply(148, 412) should return 16.\n// multiply(19, 28) should\
    \ return 72.\n// multiply(2020, 1851) should return 0.\n// multiply(14,-15) should\
    \ return 20.\nfunction multiply($a, $b) {\n    $a = abs($a);\n    $b = abs($b);\n\
    \    $a = $a % 10;\n    $b = $b % 10;\n    return $a * $b;\n}\n\necho multiply(148,\
    \ 412);\necho \"<br>\";\necho multiply(19, 28);\necho \"<br>\";\necho multiply(2020,\
    \ 1851);\necho \"<br>\";\necho multiply(14,-15);\nfunction candidate(...$args)\
    \ {\n    return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148,\
    \ 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19,\
    \ 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020,\
    \ 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14,\
    \ -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76,\
    \ 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17,\
    \ 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0,\
    \ 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: 16<br>72<br>0<br>20
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// multiply(148, 412) should return 16.\n// multiply(19, 28) should\
    \ return 72.\n// multiply(2020, 1851) should return 0.\n// multiply(14,-15) should\
    \ return 20.\nfunction multiply($a, $b) {\n    $a = $a % 10;\n    $b = $b % 10;\n\
    \    return $a * $b;\n}\n\necho multiply(148, 412);\necho \"\\n\";\necho multiply(19,\
    \ 28);\necho \"\\n\";\necho multiply(2020, 1851);\necho \"\\n\";\necho multiply(14,-15);\n\
    echo \"\\n\";\n\nfunction candidate(...$args) {\n    return multiply(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(148, 412) !== 16) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "16\n72\n0\n-20\n"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpygr8mz_y.php:33\n\
    Stack trace:\n#0 /tmp/tmpygr8mz_y.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpygr8mz_y.php\
    \ on line 33\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// multiply(148, 412) should return 16.\n// multiply(19, 28) should\
    \ return 72.\n// multiply(2020, 1851) should return 0.\n// multiply(14,-15) should\
    \ return 20.\nfunction multiply($a, $b) {\n    return ($a % 10) * ($b % 10);\n\
    }\n\necho multiply(148, 412);\necho \"<br>\";\necho multiply(19, 28);\necho \"\
    <br>\";\necho multiply(2020, 1851);\necho \"<br>\";\necho multiply(14,-15);\n\
    echo \"<br>\";\nfunction candidate(...$args) {\n    return multiply(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(148, 412) !== 16) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: 16<br>72<br>0<br>-20<br>
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp3dbkfd07.php:30\n\
    Stack trace:\n#0 /tmp/tmp3dbkfd07.php(37): test()\n#1 {main}\n  thrown in /tmp/tmp3dbkfd07.php\
    \ on line 30\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// multiply(148, 412) should return 16.\n// multiply(19, 28) should\
    \ return 72.\n// multiply(2020, 1851) should return 0.\n// multiply(14,-15) should\
    \ return 20.\nfunction multiply($a, $b) {\n    $a = (string)$a;\n    $b = (string)$b;\n\
    \    $a = $a[strlen($a)-1];\n    $b = $b[strlen($b)-1];\n    return $a * $b;\n\
    }\n\necho multiply(148, 412);\necho \"\\n\";\necho multiply(19, 28);\necho \"\\\
    n\";\necho multiply(2020, 1851);\necho \"\\n\";\necho multiply(14,-15);\necho\
    \ \"\\n\";\nfunction candidate(...$args) {\n    return multiply(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "16\n72\n0\n20\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// multiply(148, 412) should return 16.\n// multiply(19, 28) should\
    \ return 72.\n// multiply(2020, 1851) should return 0.\n// multiply(14,-15) should\
    \ return 20.\nfunction multiply($a, $b) {\n    $a = $a % 10;\n    $b = $b % 10;\n\
    \    return $a * $b;\n}\n\nfunction candidate(...$args) {\n    return multiply(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(148, 412) !== 16) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmplno1cbjz.php:24\n\
    Stack trace:\n#0 /tmp/tmplno1cbjz.php(31): test()\n#1 {main}\n  thrown in /tmp/tmplno1cbjz.php\
    \ on line 24\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// multiply(148, 412) should return 16.\n// multiply(19, 28) should\
    \ return 72.\n// multiply(2020, 1851) should return 0.\n// multiply(14,-15) should\
    \ return 20.\nfunction multiply($a, $b) {\n    $a = (string)$a;\n    $b = (string)$b;\n\
    \    $a = $a[strlen($a)-1];\n    $b = $b[strlen($b)-1];\n    return $a * $b;\n\
    }\n\necho multiply(148, 412);\necho \"\\n\";\necho multiply(19, 28);\necho \"\\\
    n\";\necho multiply(2020, 1851);\necho \"\\n\";\necho multiply(14,-15);\necho\
    \ \"\\n\";\nfunction candidate(...$args) {\n    return multiply(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "16\n72\n0\n20\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// multiply(148, 412) should return 16.\n// multiply(19, 28) should\
    \ return 72.\n// multiply(2020, 1851) should return 0.\n// multiply(14,-15) should\
    \ return 20.\nfunction multiply($a, $b) {\n    $a = $a % 10;\n    $b = $b % 10;\n\
    \    return $a * $b;\n}\n\nfunction candidate(...$args) {\n    return multiply(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(148, 412) !== 16) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp_ku4xvsc.php:24\n\
    Stack trace:\n#0 /tmp/tmp_ku4xvsc.php(31): test()\n#1 {main}\n  thrown in /tmp/tmp_ku4xvsc.php\
    \ on line 24\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// multiply(148, 412) should return 16.\n// multiply(19, 28) should\
    \ return 72.\n// multiply(2020, 1851) should return 0.\n// multiply(14,-15) should\
    \ return 20.\nfunction multiply($a, $b) {\n    $a = $a % 10;\n    $b = $b % 10;\n\
    \    return $a * $b;\n}\n\necho multiply(148, 412);\necho \"<br>\";\necho multiply(19,\
    \ 28);\necho \"<br>\";\necho multiply(2020, 1851);\necho \"<br>\";\necho multiply(14,-15);\n\
    echo \"<br>\";\nfunction candidate(...$args) {\n    return multiply(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(148, 412) !== 16) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: 16<br>72<br>0<br>-20<br>
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpu95go35e.php:32\n\
    Stack trace:\n#0 /tmp/tmpu95go35e.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpu95go35e.php\
    \ on line 32\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// multiply(148, 412) should return 16.\n// multiply(19, 28) should\
    \ return 72.\n// multiply(2020, 1851) should return 0.\n// multiply(14,-15) should\
    \ return 20.\nfunction multiply($a, $b) {\n    $a = abs($a);\n    $b = abs($b);\n\
    \    return ($a % 10) * ($b % 10);\n}\n\nfunction candidate(...$args) {\n    return\
    \ multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148, 412)\
    \ !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19, 28)\
    \ !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020,\
    \ 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14,\
    \ -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76,\
    \ 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17,\
    \ 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0,\
    \ 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// multiply(148, 412) should return 16.\n// multiply(19, 28) should\
    \ return 72.\n// multiply(2020, 1851) should return 0.\n// multiply(14,-15) should\
    \ return 20.\nfunction multiply($a, $b) {\n    $a = (string)$a;\n    $b = (string)$b;\n\
    \    $a = (int)$a[strlen($a)-1];\n    $b = (int)$b[strlen($b)-1];\n    return\
    \ $a * $b;\n}\n\necho multiply(148, 412) . \"\\n\";\necho multiply(19, 28) . \"\
    \\n\";\necho multiply(2020, 1851) . \"\\n\";\necho multiply(14,-15) . \"\\n\"\
    ;\nfunction candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "16\n72\n0\n20\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// multiply(148, 412) should return 16.\n// multiply(19, 28) should\
    \ return 72.\n// multiply(2020, 1851) should return 0.\n// multiply(14,-15) should\
    \ return 20.\nfunction multiply($a, $b) {\n    $a = (string)$a;\n    $b = (string)$b;\n\
    \    $a = $a[strlen($a)-1];\n    $b = $b[strlen($b)-1];\n    return $a * $b;\n\
    }\n\necho multiply(148, 412);\necho \"\\n\";\necho multiply(19, 28);\necho \"\\\
    n\";\necho multiply(2020, 1851);\necho \"\\n\";\necho multiply(14,-15);\necho\
    \ \"\\n\";\nfunction candidate(...$args) {\n    return multiply(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "16\n72\n0\n20\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// multiply(148, 412) should return 16.\n// multiply(19, 28) should\
    \ return 72.\n// multiply(2020, 1851) should return 0.\n// multiply(14,-15) should\
    \ return 20.\nfunction multiply($a, $b) {\n    $a = abs($a);\n    $b = abs($b);\n\
    \    return ($a % 10) * ($b % 10);\n}\nfunction candidate(...$args) {\n    return\
    \ multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148, 412)\
    \ !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19, 28)\
    \ !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020,\
    \ 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14,\
    \ -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76,\
    \ 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17,\
    \ 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0,\
    \ 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// multiply(148, 412) should return 16.\n// multiply(19, 28) should\
    \ return 72.\n// multiply(2020, 1851) should return 0.\n// multiply(14,-15) should\
    \ return 20.\nfunction multiply($a, $b) {\n    $a = (string)$a;\n    $b = (string)$b;\n\
    \    $a = $a[strlen($a)-1];\n    $b = $b[strlen($b)-1];\n    return $a * $b;\n\
    }\n\nfunction candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// multiply(148, 412) should return 16.\n// multiply(19, 28) should\
    \ return 72.\n// multiply(2020, 1851) should return 0.\n// multiply(14,-15) should\
    \ return 20.\nfunction multiply($a, $b) {\n    $a = abs($a);\n    $b = abs($b);\n\
    \    return ($a % 10) * ($b % 10);\n}\n\nfunction candidate(...$args) {\n    return\
    \ multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148, 412)\
    \ !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19, 28)\
    \ !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020,\
    \ 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14,\
    \ -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76,\
    \ 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17,\
    \ 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0,\
    \ 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// multiply(148, 412) should return 16.\n// multiply(19, 28) should\
    \ return 72.\n// multiply(2020, 1851) should return 0.\n// multiply(14,-15) should\
    \ return 20.\nfunction multiply($a, $b) {\n    $a = $a % 10;\n    $b = $b % 10;\n\
    \    return $a * $b;\n}\n\necho multiply(148, 412);\necho \"\\n\";\necho multiply(19,\
    \ 28);\necho \"\\n\";\necho multiply(2020, 1851);\necho \"\\n\";\necho multiply(14,-15);\n\
    echo \"\\n\";\nfunction candidate(...$args) {\n    return multiply(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(148, 412) !== 16) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "16\n72\n0\n-20\n"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpn5jqkzh7.php:32\n\
    Stack trace:\n#0 /tmp/tmpn5jqkzh7.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpn5jqkzh7.php\
    \ on line 32\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// multiply(148, 412) should return 16.\n// multiply(19, 28) should\
    \ return 72.\n// multiply(2020, 1851) should return 0.\n// multiply(14,-15) should\
    \ return 20.\nfunction multiply($a, $b) {\n    $a = abs($a);\n    $b = abs($b);\n\
    \    return ($a % 10) * ($b % 10);\n}\n\nfunction candidate(...$args) {\n    return\
    \ multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148, 412)\
    \ !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19, 28)\
    \ !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020,\
    \ 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14,\
    \ -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76,\
    \ 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17,\
    \ 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0,\
    \ 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// multiply(148, 412) should return 16.\n// multiply(19, 28) should\
    \ return 72.\n// multiply(2020, 1851) should return 0.\n// multiply(14,-15) should\
    \ return 20.\nfunction multiply($a, $b) {\n    $a = (string)$a;\n    $b = (string)$b;\n\
    \    $a = $a[strlen($a)-1];\n    $b = $b[strlen($b)-1];\n    return $a * $b;\n\
    }\n\nfunction candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// multiply(148, 412) should return 16.\n// multiply(19, 28) should\
    \ return 72.\n// multiply(2020, 1851) should return 0.\n// multiply(14,-15) should\
    \ return 20.\nfunction multiply($a, $b) {\n    $a = (string)$a;\n    $b = (string)$b;\n\
    \    $a = (int)$a[strlen($a)-1];\n    $b = (int)$b[strlen($b)-1];\n    return\
    \ $a * $b;\n}\n\nfunction candidate(...$args) {\n    return multiply(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(148, 412) !== 16) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// multiply(148, 412) should return 16.\n// multiply(19, 28) should\
    \ return 72.\n// multiply(2020, 1851) should return 0.\n// multiply(14,-15) should\
    \ return 20.\nfunction multiply($a, $b) {\n    $a = (string) $a;\n    $b = (string)\
    \ $b;\n    $a = $a[strlen($a) - 1];\n    $b = $b[strlen($b) - 1];\n    return\
    \ $a * $b;\n}\n\necho multiply(148, 412);\necho \"\\n\";\necho multiply(19, 28);\n\
    echo \"\\n\";\necho multiply(2020, 1851);\necho \"\\n\";\necho multiply(14,-15);\n\
    echo \"\\n\";\nfunction candidate(...$args) {\n    return multiply(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(148, 412) !== 16) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "16\n72\n0\n20\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// multiply(148, 412) should return 16.\n// multiply(19, 28) should\
    \ return 72.\n// multiply(2020, 1851) should return 0.\n// multiply(14,-15) should\
    \ return 20.\nfunction multiply($a, $b) {\n    $product = ($a % 10) * ($b % 10);\n\
    \    return $product;\n}\necho multiply(148, 412);\necho \"\\n\";\necho multiply(19,\
    \ 28);\necho \"\\n\";\necho multiply(2020, 1851);\necho \"\\n\";\necho multiply(14,-15);\n\
    echo \"\\n\";\nfunction candidate(...$args) {\n    return multiply(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(148, 412) !== 16) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "16\n72\n0\n-20\n"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpoudby7r1.php:30\n\
    Stack trace:\n#0 /tmp/tmpoudby7r1.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpoudby7r1.php\
    \ on line 30\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// multiply(148, 412) should return 16.\n// multiply(19, 28) should\
    \ return 72.\n// multiply(2020, 1851) should return 0.\n// multiply(14,-15) should\
    \ return 20.\nfunction multiply($a, $b) {\n    $a = abs($a);\n    $b = abs($b);\n\
    \    $a = $a % 10;\n    $b = $b % 10;\n    return $a * $b;\n}\n\necho multiply(148,\
    \ 412);\necho \"\\n\";\necho multiply(19, 28);\necho \"\\n\";\necho multiply(2020,\
    \ 1851);\necho \"\\n\";\necho multiply(14,-15);\necho \"\\n\";\n\nfunction candidate(...$args)\
    \ {\n    return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148,\
    \ 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19,\
    \ 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020,\
    \ 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14,\
    \ -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76,\
    \ 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17,\
    \ 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0,\
    \ 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "16\n72\n0\n20\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// multiply(148, 412) should return 16.\n// multiply(19, 28) should\
    \ return 72.\n// multiply(2020, 1851) should return 0.\n// multiply(14,-15) should\
    \ return 20.\nfunction multiply($a, $b) {\n    $a = $a % 10;\n    $b = $b % 10;\n\
    \    return $a * $b;\n}\n\nfunction candidate(...$args) {\n    return multiply(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(148, 412) !== 16) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmplf2sxw40.php:24\n\
    Stack trace:\n#0 /tmp/tmplf2sxw40.php(31): test()\n#1 {main}\n  thrown in /tmp/tmplf2sxw40.php\
    \ on line 24\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// multiply(148, 412) should return 16.\n// multiply(19, 28) should\
    \ return 72.\n// multiply(2020, 1851) should return 0.\n// multiply(14,-15) should\
    \ return 20.\nfunction multiply($a, $b) {\n    $a = abs($a);\n    $b = abs($b);\n\
    \    $a = $a % 10;\n    $b = $b % 10;\n    return $a * $b;\n}\n\necho multiply(148,\
    \ 412);\necho \"<br>\";\necho multiply(19, 28);\necho \"<br>\";\necho multiply(2020,\
    \ 1851);\necho \"<br>\";\necho multiply(14,-15);\necho \"<br>\";\necho multiply(0,0);\n\
    echo \"<br>\";\necho multiply(0,1);\necho \"<br>\";\necho multiply(1,0);\necho\
    \ \"<br>\";\necho multiply(1,1);\necho \"<br>\";\necho multiply(1,2);\necho \"\
    <br>\";\necho multiply(2,1);\necho \"<br>\";\necho multiply(2,2);\necho \"<br>\"\
    ;\necho multiply(2,3);\necho \"<br>\";\necho multiply(3,2);\necho \"<br>\";\n\
    echo multiply(3,3);\necho \"<br>\";\necho multiply(3,4);\necho \"<br>\";\necho\
    \ multiply(4,3);\necho \"<br>\";\necho multiply(4,4);\necho \"<br>\";\necho multiply(4,5);\n\
    echo \"<br>\";\necho multiply(5,4);\necho \"<br>\";\necho multiply(5,5);\necho\
    \ \"<br>\";\necho multiply(5,6);\necho \"<br>\";\necho multiply(6,5);\necho \"\
    <br>\";\necho multiply(6,6);\necho \"<br>\";\necho multiply(6,7);\necho \"<br>\"\
    ;\necho multiply(7,6);\necho \"<br>\";\necho multiply(7,7);\necho \"<br>\";\n\
    echo multiply(7,8);\necho \"<br>\";\necho multiply(8,7);\necho \"<br>\";\necho\
    \ multiply(8,8);\necho \"<br>\";\necho multiply(8,9);\necho \"<br>\";\necho multiply(9,8);\n\
    echo \"<br>\";\necho multiply(9,9);\necho \"<br>\";\necho multiply(9,10);\necho\
    \ \"<br>\nfunction candidate(...$args) {\n    return multiply(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Parse error:  syntax error, unexpected identifier \"Test\", expecting\
    \ \",\" or \";\" in /tmp/tmp23dkqfzo.php on line 89\n"
  exit_code: 255
  status: SyntaxError
- program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// multiply(148, 412) should return 16.\n// multiply(19, 28) should\
    \ return 72.\n// multiply(2020, 1851) should return 0.\n// multiply(14,-15) should\
    \ return 20.\nfunction multiply($a, $b) {\n    $a = (string)$a;\n    $b = (string)$b;\n\
    \    $a = $a[strlen($a)-1];\n    $b = $b[strlen($b)-1];\n    return $a * $b;\n\
    }\n\necho multiply(148, 412);\necho multiply(19, 28);\necho multiply(2020, 1851);\n\
    echo multiply(14,-15);\nfunction candidate(...$args) {\n    return multiply(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(148, 412) !== 16) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: '1672020'
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// multiply(148, 412) should return 16.\n// multiply(19, 28) should\
    \ return 72.\n// multiply(2020, 1851) should return 0.\n// multiply(14,-15) should\
    \ return 20.\nfunction multiply($a, $b) {\n    $a = $a % 10;\n    $b = $b % 10;\n\
    \    return $a * $b;\n}\n\necho multiply(148, 412);\necho \"<br>\";\necho multiply(19,\
    \ 28);\necho \"<br>\";\necho multiply(2020, 1851);\necho \"<br>\";\necho multiply(14,-15);\n\
    echo \"<br>\";\n\nfunction candidate(...$args) {\n    return multiply(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(148, 412) !== 16) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: 16<br>72<br>0<br>-20<br>
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpz7b0av12.php:33\n\
    Stack trace:\n#0 /tmp/tmpz7b0av12.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpz7b0av12.php\
    \ on line 33\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// multiply(148, 412) should return 16.\n// multiply(19, 28) should\
    \ return 72.\n// multiply(2020, 1851) should return 0.\n// multiply(14,-15) should\
    \ return 20.\nfunction multiply($a, $b) {\n    $a = $a % 10;\n    $b = $b % 10;\n\
    \    return $a * $b;\n}\n\nfunction candidate(...$args) {\n    return multiply(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(148, 412) !== 16) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpevvx0zt0.php:24\n\
    Stack trace:\n#0 /tmp/tmpevvx0zt0.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpevvx0zt0.php\
    \ on line 24\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// multiply(148, 412) should return 16.\n// multiply(19, 28) should\
    \ return 72.\n// multiply(2020, 1851) should return 0.\n// multiply(14,-15) should\
    \ return 20.\nfunction multiply($a, $b) {\n    $a = $a % 10;\n    $b = $b % 10;\n\
    \    return $a * $b;\n}\necho multiply(148, 412);\nfunction candidate(...$args)\
    \ {\n    return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148,\
    \ 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19,\
    \ 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020,\
    \ 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14,\
    \ -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76,\
    \ 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17,\
    \ 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0,\
    \ 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: '16'
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpb3m_o629.php:24\n\
    Stack trace:\n#0 /tmp/tmpb3m_o629.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpb3m_o629.php\
    \ on line 24\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// multiply(148, 412) should return 16.\n// multiply(19, 28) should\
    \ return 72.\n// multiply(2020, 1851) should return 0.\n// multiply(14,-15) should\
    \ return 20.\nfunction multiply($a, $b) {\n    $a = abs($a);\n    $b = abs($b);\n\
    \    return ($a % 10) * ($b % 10);\n}\n\nfunction candidate(...$args) {\n    return\
    \ multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148, 412)\
    \ !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19, 28)\
    \ !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020,\
    \ 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14,\
    \ -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76,\
    \ 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17,\
    \ 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0,\
    \ 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// multiply(148, 412) should return 16.\n// multiply(19, 28) should\
    \ return 72.\n// multiply(2020, 1851) should return 0.\n// multiply(14,-15) should\
    \ return 20.\nfunction multiply($a, $b) {\n    $a = $a % 10;\n    $b = $b % 10;\n\
    \    return $a * $b;\n}\n\nfunction candidate(...$args) {\n    return multiply(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(148, 412) !== 16) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpf4_qe8ce.php:24\n\
    Stack trace:\n#0 /tmp/tmpf4_qe8ce.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpf4_qe8ce.php\
    \ on line 24\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// multiply(148, 412) should return 16.\n// multiply(19, 28) should\
    \ return 72.\n// multiply(2020, 1851) should return 0.\n// multiply(14,-15) should\
    \ return 20.\nfunction multiply($a, $b) {\n    return ($a % 10) * ($b % 10);\n\
    }\nfunction candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpyitxa708.php:21\n\
    Stack trace:\n#0 /tmp/tmpyitxa708.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpyitxa708.php\
    \ on line 21\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// multiply(148, 412) should return 16.\n// multiply(19, 28) should\
    \ return 72.\n// multiply(2020, 1851) should return 0.\n// multiply(14,-15) should\
    \ return 20.\nfunction multiply($a, $b) {\n    $a = $a % 10;\n    $b = $b % 10;\n\
    \    return $a * $b;\n}\n\nfunction candidate(...$args) {\n    return multiply(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(148, 412) !== 16) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp65opbshp.php:24\n\
    Stack trace:\n#0 /tmp/tmp65opbshp.php(31): test()\n#1 {main}\n  thrown in /tmp/tmp65opbshp.php\
    \ on line 24\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// multiply(148, 412) should return 16.\n// multiply(19, 28) should\
    \ return 72.\n// multiply(2020, 1851) should return 0.\n// multiply(14,-15) should\
    \ return 20.\nfunction multiply($a, $b) {\n  $a = (string)$a;\n  $b = (string)$b;\n\
    \  $a = $a[strlen($a)-1];\n  $b = $b[strlen($b)-1];\n  return $a * $b;\n}\n\n\
    echo multiply(148, 412);\necho \"\\n\";\necho multiply(19, 28);\necho \"\\n\"\
    ;\necho multiply(2020, 1851);\necho \"\\n\";\necho multiply(14,-15);\necho \"\\\
    n\";\nfunction candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "16\n72\n0\n20\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// multiply(148, 412) should return 16.\n// multiply(19, 28) should\
    \ return 72.\n// multiply(2020, 1851) should return 0.\n// multiply(14,-15) should\
    \ return 20.\nfunction multiply($a, $b) {\n  $a = $a % 10;\n  $b = $b % 10;\n\
    \  return $a * $b;\n}\n\necho multiply(148, 412);\necho \"\\n\";\necho multiply(19,\
    \ 28);\necho \"\\n\";\necho multiply(2020, 1851);\necho \"\\n\";\necho multiply(14,-15);\n\
    echo \"\\n\";\nfunction candidate(...$args) {\n    return multiply(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(148, 412) !== 16) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "16\n72\n0\n-20\n"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpvc9eaq53.php:32\n\
    Stack trace:\n#0 /tmp/tmpvc9eaq53.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpvc9eaq53.php\
    \ on line 32\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// multiply(148, 412) should return 16.\n// multiply(19, 28) should\
    \ return 72.\n// multiply(2020, 1851) should return 0.\n// multiply(14,-15) should\
    \ return 20.\nfunction multiply($a, $b) {\n    $a = (string)$a;\n    $b = (string)$b;\n\
    \    $a = $a[strlen($a)-1];\n    $b = $b[strlen($b)-1];\n    return $a * $b;\n\
    }\necho multiply(148, 412);\necho \"\\n\";\necho multiply(19, 28);\necho \"\\\
    n\";\necho multiply(2020, 1851);\necho \"\\n\";\necho multiply(14,-15);\necho\
    \ \"\\n\";\nfunction candidate(...$args) {\n    return multiply(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "16\n72\n0\n20\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// multiply(148, 412) should return 16.\n// multiply(19, 28) should\
    \ return 72.\n// multiply(2020, 1851) should return 0.\n// multiply(14,-15) should\
    \ return 20.\nfunction multiply($a, $b) {\n    $a = (string)$a;\n    $b = (string)$b;\n\
    \    $a = $a[strlen($a)-1];\n    $b = $b[strlen($b)-1];\n    return $a * $b;\n\
    }\nfunction candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// multiply(148, 412) should return 16.\n// multiply(19, 28) should\
    \ return 72.\n// multiply(2020, 1851) should return 0.\n// multiply(14,-15) should\
    \ return 20.\nfunction multiply($a, $b) {\n    $a = abs($a);\n    $b = abs($b);\n\
    \    $a = $a % 10;\n    $b = $b % 10;\n    return $a * $b;\n}\n\nfunction candidate(...$args)\
    \ {\n    return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148,\
    \ 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19,\
    \ 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020,\
    \ 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14,\
    \ -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76,\
    \ 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17,\
    \ 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0,\
    \ 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// multiply(148, 412) should return 16.\n// multiply(19, 28) should\
    \ return 72.\n// multiply(2020, 1851) should return 0.\n// multiply(14,-15) should\
    \ return 20.\nfunction multiply($a, $b) {\n    $a = abs($a);\n    $b = abs($b);\n\
    \    $a = $a % 10;\n    $b = $b % 10;\n    return $a * $b;\n}\n\nfunction candidate(...$args)\
    \ {\n    return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148,\
    \ 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19,\
    \ 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020,\
    \ 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14,\
    \ -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76,\
    \ 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17,\
    \ 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0,\
    \ 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// multiply(148, 412) should return 16.\n// multiply(19, 28) should\
    \ return 72.\n// multiply(2020, 1851) should return 0.\n// multiply(14,-15) should\
    \ return 20.\nfunction multiply($a, $b) {\n  $a = abs($a);\n  $b = abs($b);\n\
    \  $a = $a % 10;\n  $b = $b % 10;\n  return $a * $b;\n}\n\nfunction candidate(...$args)\
    \ {\n    return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148,\
    \ 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19,\
    \ 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020,\
    \ 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14,\
    \ -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76,\
    \ 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17,\
    \ 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0,\
    \ 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// multiply(148, 412) should return 16.\n// multiply(19, 28) should\
    \ return 72.\n// multiply(2020, 1851) should return 0.\n// multiply(14,-15) should\
    \ return 20.\nfunction multiply($a, $b) {\n    return ($a % 10) * ($b % 10);\n\
    }\n\nfunction candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpv65purcd.php:22\n\
    Stack trace:\n#0 /tmp/tmpv65purcd.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpv65purcd.php\
    \ on line 22\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// multiply(148, 412) should return 16.\n// multiply(19, 28) should\
    \ return 72.\n// multiply(2020, 1851) should return 0.\n// multiply(14,-15) should\
    \ return 20.\nfunction multiply($a, $b) {\n    $a = $a % 10;\n    $b = $b % 10;\n\
    \    return $a * $b;\n}\n\necho multiply(148, 412);\necho \"<br>\";\necho multiply(19,\
    \ 28);\necho \"<br>\";\necho multiply(2020, 1851);\necho \"<br>\";\necho multiply(14,-15);\n\
    echo \"<br>\";\nfunction candidate(...$args) {\n    return multiply(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(148, 412) !== 16) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: 16<br>72<br>0<br>-20<br>
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpbiswd9lu.php:32\n\
    Stack trace:\n#0 /tmp/tmpbiswd9lu.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpbiswd9lu.php\
    \ on line 32\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// multiply(148, 412) should return 16.\n// multiply(19, 28) should\
    \ return 72.\n// multiply(2020, 1851) should return 0.\n// multiply(14,-15) should\
    \ return 20.\nfunction multiply($a, $b) {\n    $a = $a % 10;\n    $b = $b % 10;\n\
    \    return $a * $b;\n}\n\necho multiply(148, 412);\necho \"\\n\";\necho multiply(19,\
    \ 28);\necho \"\\n\";\necho multiply(2020, 1851);\necho \"\\n\";\necho multiply(14,-15);\n\
    echo \"\\n\";\n\nfunction candidate(...$args) {\n    return multiply(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(148, 412) !== 16) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "16\n72\n0\n-20\n"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpv2idwoo_.php:33\n\
    Stack trace:\n#0 /tmp/tmpv2idwoo_.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpv2idwoo_.php\
    \ on line 33\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// multiply(148, 412) should return 16.\n// multiply(19, 28) should\
    \ return 72.\n// multiply(2020, 1851) should return 0.\n// multiply(14,-15) should\
    \ return 20.\nfunction multiply($a, $b) {\n    $a = $a % 10;\n    $b = $b % 10;\n\
    \    return $a * $b;\n}\n\necho multiply(148, 412) . \"\\n\";\necho multiply(19,\
    \ 28) . \"\\n\";\necho multiply(2020, 1851) . \"\\n\";\necho multiply(14,-15)\
    \ . \"\\n\";\nfunction candidate(...$args) {\n    return multiply(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(148, 412) !== 16) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "16\n72\n0\n-20\n"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp8tpiv9mm.php:28\n\
    Stack trace:\n#0 /tmp/tmp8tpiv9mm.php(35): test()\n#1 {main}\n  thrown in /tmp/tmp8tpiv9mm.php\
    \ on line 28\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// multiply(148, 412) should return 16.\n// multiply(19, 28) should\
    \ return 72.\n// multiply(2020, 1851) should return 0.\n// multiply(14,-15) should\
    \ return 20.\nfunction multiply($a, $b) {\n    $a = (string)$a;\n    $b = (string)$b;\n\
    \    $a = $a[strlen($a)-1];\n    $b = $b[strlen($b)-1];\n    return $a * $b;\n\
    }\n\necho multiply(148, 412);\necho \"\\n\";\necho multiply(19, 28);\necho \"\\\
    n\";\necho multiply(2020, 1851);\necho \"\\n\";\necho multiply(14,-15);\necho\
    \ \"\\n\";\nfunction candidate(...$args) {\n    return multiply(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "16\n72\n0\n20\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// multiply(148, 412) should return 16.\n// multiply(19, 28) should\
    \ return 72.\n// multiply(2020, 1851) should return 0.\n// multiply(14,-15) should\
    \ return 20.\nfunction multiply($a, $b) {\n    return ($a % 10) * ($b % 10);\n\
    }\n\nfunction candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpoqby9jq1.php:22\n\
    Stack trace:\n#0 /tmp/tmpoqby9jq1.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpoqby9jq1.php\
    \ on line 22\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// multiply(148, 412) should return 16.\n// multiply(19, 28) should\
    \ return 72.\n// multiply(2020, 1851) should return 0.\n// multiply(14,-15) should\
    \ return 20.\nfunction multiply($a, $b) {\n    $a = abs($a);\n    $b = abs($b);\n\
    \    return ($a % 10) * ($b % 10);\n}\n\nfunction candidate(...$args) {\n    return\
    \ multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148, 412)\
    \ !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19, 28)\
    \ !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020,\
    \ 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14,\
    \ -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76,\
    \ 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17,\
    \ 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0,\
    \ 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// multiply(148, 412) should return 16.\n// multiply(19, 28) should\
    \ return 72.\n// multiply(2020, 1851) should return 0.\n// multiply(14,-15) should\
    \ return 20.\nfunction multiply($a, $b) {\n    $a = (string)$a;\n    $b = (string)$b;\n\
    \    $a = $a[strlen($a)-1];\n    $b = $b[strlen($b)-1];\n    return $a * $b;\n\
    }\necho multiply(148, 412);\necho \"<br>\";\necho multiply(19, 28);\necho \"<br>\"\
    ;\necho multiply(2020, 1851);\necho \"<br>\";\necho multiply(14,-15);\necho \"\
    <br>\";\necho multiply(0, 0);\necho \"<br>\";\necho multiply(0, 1);\necho \"<br>\"\
    ;\necho multiply(1, 0);\necho \"<br>\";\necho multiply(1, 1);\necho \"<br>\";\n\
    echo multiply(1, 2);\necho \"<br>\";\necho multiply(2, 1);\necho \"<br>\";\necho\
    \ multiply(2, 2);\necho \"<br>\";\necho multiply(2, 3);\necho \"<br>\";\necho\
    \ multiply(3, 2);\necho \"<br>\";\necho multiply(3, 3);\necho \"<br>\";\necho\
    \ multiply(3, 4);\necho \"<br>\";\necho multiply(4, 3);\necho \"<br>\";\necho\
    \ multiply(4, 4);\necho \"<br>\";\necho multiply(4, 5);\necho \"<br>\";\necho\
    \ multiply(5, 4);\necho \"<br>\";\necho multiply(5, 5);\necho \"<br>\";\necho\
    \ multiply(5, 6);\necho \"<br>\";\necho multiply(6, 5);\necho \"<br>\";\necho\
    \ multiply(6, 6);\necho \"<br>\";\necho multiply(6, 7);\necho \"<br>\";\necho\
    \ multiply(7, 6);\necho \"<br>\";\necho multiply(7, 7);\necho \"<br>\";\necho\
    \ multiply(7, 8);\necho \"<br>\";\necho multiply(8, 7);\necho \"<br>\";\necho\
    \ multiply(8, 8);\necho \"<br>\";\necho multiply(8, 9);\necho \"<br>\";\necho\
    \ multiply(9, 8);\necho \"<br>\";\necho multiply(9, 9);\necho \"<br>\";\nfunction\
    \ candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: 16<br>72<br>0<br>20<br>0<br>0<br>0<br>1<br>2<br>2<br>4<br>6<br>6<br>9<br>12<br>12<br>16<br>20<br>20<br>25<br>30<br>30<br>36<br>42<br>42<br>49<br>56<br>56<br>64<br>72<br>72<br>81<br>
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// multiply(148, 412) should return 16.\n// multiply(19, 28) should\
    \ return 72.\n// multiply(2020, 1851) should return 0.\n// multiply(14,-15) should\
    \ return 20.\nfunction multiply($a, $b) {\n    $a = $a % 10;\n    $b = $b % 10;\n\
    \    return $a * $b;\n}\n\necho multiply(148, 412);\necho \"\\n\";\necho multiply(19,\
    \ 28);\necho \"\\n\";\necho multiply(2020, 1851);\necho \"\\n\";\necho multiply(14,-15);\n\
    echo \"\\n\";\nfunction candidate(...$args) {\n    return multiply(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(148, 412) !== 16) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "16\n72\n0\n-20\n"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpeacszq__.php:32\n\
    Stack trace:\n#0 /tmp/tmpeacszq__.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpeacszq__.php\
    \ on line 32\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// multiply(148, 412) should return 16.\n// multiply(19, 28) should\
    \ return 72.\n// multiply(2020, 1851) should return 0.\n// multiply(14,-15) should\
    \ return 20.\nfunction multiply($a, $b) {\n    $a = $a % 10;\n    $b = $b % 10;\n\
    \    return $a * $b;\n}\necho multiply(148, 412);\nfunction candidate(...$args)\
    \ {\n    return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148,\
    \ 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19,\
    \ 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020,\
    \ 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14,\
    \ -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76,\
    \ 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17,\
    \ 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0,\
    \ 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: '16'
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmply1ux1pm.php:24\n\
    Stack trace:\n#0 /tmp/tmply1ux1pm.php(31): test()\n#1 {main}\n  thrown in /tmp/tmply1ux1pm.php\
    \ on line 24\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// multiply(148, 412) should return 16.\n// multiply(19, 28) should\
    \ return 72.\n// multiply(2020, 1851) should return 0.\n// multiply(14,-15) should\
    \ return 20.\nfunction multiply($a, $b) {\n    $a = $a % 10;\n    $b = $b % 10;\n\
    \    return $a * $b;\n}\n\necho multiply(148, 412);\necho \"\\n\";\necho multiply(19,\
    \ 28);\necho \"\\n\";\necho multiply(2020, 1851);\necho \"\\n\";\necho multiply(14,-15);\n\
    echo \"\\n\";\nfunction candidate(...$args) {\n    return multiply(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(148, 412) !== 16) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "16\n72\n0\n-20\n"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpk7ba5bl3.php:32\n\
    Stack trace:\n#0 /tmp/tmpk7ba5bl3.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpk7ba5bl3.php\
    \ on line 32\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// multiply(148, 412) should return 16.\n// multiply(19, 28) should\
    \ return 72.\n// multiply(2020, 1851) should return 0.\n// multiply(14,-15) should\
    \ return 20.\nfunction multiply($a, $b) {\n    $a = $a % 10;\n    $b = $b % 10;\n\
    \    return $a * $b;\n}\n\necho multiply(148, 412);\necho \"<br>\";\necho multiply(19,\
    \ 28);\necho \"<br>\";\necho multiply(2020, 1851);\necho \"<br>\";\necho multiply(14,-15);\n\
    echo \"<br>\";\necho multiply(0, 0);\necho \"<br>\";\necho multiply(0, 1);\necho\
    \ \"<br>\";\necho multiply(1, 0);\necho \"<br>\";\necho multiply(1, 1);\necho\
    \ \"<br>\";\necho multiply(1, 2);\necho \"<br>\";\necho multiply(2, 1);\necho\
    \ \"<br>\";\necho multiply(2, 2);\necho \"<br>\";\necho multiply(2, 3);\necho\
    \ \"<br>\";\necho multiply(3, 2);\necho \"<br>\";\necho multiply(3, 3);\necho\
    \ \"<br>\";\necho multiply(3, 4);\necho \"<br>\";\necho multiply(4, 3);\necho\
    \ \"<br>\";\necho multiply(4, 4);\necho \"<br>\";\necho multiply(4, 5);\necho\
    \ \"<br>\";\necho multiply(5, 4);\necho \"<br>\";\necho multiply(5, 5);\necho\
    \ \"<br>\";\necho multiply(5, 6);\necho \"<br>\";\necho multiply(6, 5);\necho\
    \ \"<br>\";\necho multiply(6, 6);\necho \"<br>\";\necho multiply(6, 7);\necho\
    \ \"<br>\";\necho multiply(7, 6);\necho \"<br>\";\necho multiply(7, 7);\necho\
    \ \"<br>\";\necho multiply(7, 8);\necho \"<br>\";\necho multiply(8, 7);\necho\
    \ \"<br>\";\necho multiply(8, 8);\necho \"<br>\";\necho multiply(8, 9);\necho\
    \ \"<br>\";\necho multiply(9, 8);\necho \"<br>\";\necho multiply(9, 9);\necho\
    \ \"<br>\";\necho multiply(9, 10);\necho \"<br>\";\necho multiply(10, 9);\necho\
    \ \"<br>\";\necho multiply\nfunction candidate(...$args) {\n    return multiply(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(148, 412) !== 16) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Parse error:  syntax error, unexpected token \"function\", expecting\
    \ \",\" or \";\" in /tmp/tmpusg15wyv.php on line 85\n"
  exit_code: 255
  status: SyntaxError
- program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// multiply(148, 412) should return 16.\n// multiply(19, 28) should\
    \ return 72.\n// multiply(2020, 1851) should return 0.\n// multiply(14,-15) should\
    \ return 20.\nfunction multiply($a, $b) {\n    $a = $a % 10;\n    $b = $b % 10;\n\
    \    return $a * $b;\n}\n\nfunction candidate(...$args) {\n    return multiply(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(148, 412) !== 16) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpefjhyi24.php:24\n\
    Stack trace:\n#0 /tmp/tmpefjhyi24.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpefjhyi24.php\
    \ on line 24\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// multiply(148, 412) should return 16.\n// multiply(19, 28) should\
    \ return 72.\n// multiply(2020, 1851) should return 0.\n// multiply(14,-15) should\
    \ return 20.\nfunction multiply($a, $b) {\n    $a = abs($a);\n    $b = abs($b);\n\
    \    $a = $a % 10;\n    $b = $b % 10;\n    return $a * $b;\n}\n\necho multiply(148,\
    \ 412);\necho \"\\n\";\necho multiply(19, 28);\necho \"\\n\";\necho multiply(2020,\
    \ 1851);\necho \"\\n\";\necho multiply(14,-15);\necho \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148,\
    \ 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19,\
    \ 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020,\
    \ 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14,\
    \ -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76,\
    \ 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17,\
    \ 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0,\
    \ 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "16\n72\n0\n20\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// multiply(148, 412) should return 16.\n// multiply(19, 28) should\
    \ return 72.\n// multiply(2020, 1851) should return 0.\n// multiply(14,-15) should\
    \ return 20.\nfunction multiply($a, $b) {\n    $a = abs($a);\n    $b = abs($b);\n\
    \    $a = $a % 10;\n    $b = $b % 10;\n    return $a * $b;\n}\n\nfunction candidate(...$args)\
    \ {\n    return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148,\
    \ 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19,\
    \ 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020,\
    \ 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14,\
    \ -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76,\
    \ 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17,\
    \ 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0,\
    \ 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// multiply(148, 412) should return 16.\n// multiply(19, 28) should\
    \ return 72.\n// multiply(2020, 1851) should return 0.\n// multiply(14,-15) should\
    \ return 20.\nfunction multiply($a, $b) {\n  $a = (string)$a;\n  $b = (string)$b;\n\
    \  return (int)$a[strlen($a)-1] * (int)$b[strlen($b)-1];\n}\n\necho multiply(148,\
    \ 412);\necho \"\\n\";\necho multiply(19, 28);\necho \"\\n\";\necho multiply(2020,\
    \ 1851);\necho \"\\n\";\necho multiply(14,-15);\necho \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148,\
    \ 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19,\
    \ 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020,\
    \ 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14,\
    \ -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76,\
    \ 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17,\
    \ 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0,\
    \ 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "16\n72\n0\n20\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// multiply(148, 412) should return 16.\n// multiply(19, 28) should\
    \ return 72.\n// multiply(2020, 1851) should return 0.\n// multiply(14,-15) should\
    \ return 20.\nfunction multiply($a, $b) {\n    $a = abs($a);\n    $b = abs($b);\n\
    \    $a = $a % 10;\n    $b = $b % 10;\n    return $a * $b;\n}\n\nfunction candidate(...$args)\
    \ {\n    return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148,\
    \ 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19,\
    \ 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020,\
    \ 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14,\
    \ -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76,\
    \ 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17,\
    \ 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0,\
    \ 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// multiply(148, 412) should return 16.\n// multiply(19, 28) should\
    \ return 72.\n// multiply(2020, 1851) should return 0.\n// multiply(14,-15) should\
    \ return 20.\nfunction multiply($a, $b) {\n  $a = abs($a);\n  $b = abs($b);\n\
    \  $a = $a % 10;\n  $b = $b % 10;\n  return $a * $b;\n}\n\nfunction candidate(...$args)\
    \ {\n    return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148,\
    \ 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19,\
    \ 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020,\
    \ 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14,\
    \ -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76,\
    \ 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17,\
    \ 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0,\
    \ 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// multiply(148, 412) should return 16.\n// multiply(19, 28) should\
    \ return 72.\n// multiply(2020, 1851) should return 0.\n// multiply(14,-15) should\
    \ return 20.\nfunction multiply($a, $b) {\n    $a = $a % 10;\n    $b = $b % 10;\n\
    \    return $a * $b;\n}\n\necho multiply(148, 412);\necho \"\\n\";\necho multiply(19,\
    \ 28);\necho \"\\n\";\necho multiply(2020, 1851);\necho \"\\n\";\necho multiply(14,-15);\n\
    echo \"\\n\";\n\nfunction candidate(...$args) {\n    return multiply(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(148, 412) !== 16) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "16\n72\n0\n-20\n"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp5gx_w1az.php:33\n\
    Stack trace:\n#0 /tmp/tmp5gx_w1az.php(40): test()\n#1 {main}\n  thrown in /tmp/tmp5gx_w1az.php\
    \ on line 33\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// multiply(148, 412) should return 16.\n// multiply(19, 28) should\
    \ return 72.\n// multiply(2020, 1851) should return 0.\n// multiply(14,-15) should\
    \ return 20.\nfunction multiply($a, $b) {\n    $a = $a % 10;\n    $b = $b % 10;\n\
    \    return $a * $b;\n}\n\necho multiply(148, 412);\necho \"<br>\";\necho multiply(19,\
    \ 28);\necho \"<br>\";\necho multiply(2020, 1851);\necho \"<br>\";\necho multiply(14,-15);\n\
    echo \"<br>\";\nfunction candidate(...$args) {\n    return multiply(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(148, 412) !== 16) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: 16<br>72<br>0<br>-20<br>
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpdvgxhb6e.php:32\n\
    Stack trace:\n#0 /tmp/tmpdvgxhb6e.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpdvgxhb6e.php\
    \ on line 32\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// multiply(148, 412) should return 16.\n// multiply(19, 28) should\
    \ return 72.\n// multiply(2020, 1851) should return 0.\n// multiply(14,-15) should\
    \ return 20.\nfunction multiply($a, $b) {\n    $a = (string)$a;\n    $b = (string)$b;\n\
    \    $a = $a[strlen($a)-1];\n    $b = $b[strlen($b)-1];\n    return $a * $b;\n\
    }\n\necho multiply(148, 412);\necho \"\\n\";\necho multiply(19, 28);\necho \"\\\
    n\";\necho multiply(2020, 1851);\necho \"\\n\";\necho multiply(14,-15);\necho\
    \ \"\\n\";\nfunction candidate(...$args) {\n    return multiply(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "16\n72\n0\n20\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// multiply(148, 412) should return 16.\n// multiply(19, 28) should\
    \ return 72.\n// multiply(2020, 1851) should return 0.\n// multiply(14,-15) should\
    \ return 20.\nfunction multiply($a, $b) {\n    $a = $a % 10;\n    $b = $b % 10;\n\
    \    return $a * $b;\n}\n\nfunction candidate(...$args) {\n    return multiply(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(148, 412) !== 16) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp60e1sfja.php:24\n\
    Stack trace:\n#0 /tmp/tmp60e1sfja.php(31): test()\n#1 {main}\n  thrown in /tmp/tmp60e1sfja.php\
    \ on line 24\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// multiply(148, 412) should return 16.\n// multiply(19, 28) should\
    \ return 72.\n// multiply(2020, 1851) should return 0.\n// multiply(14,-15) should\
    \ return 20.\nfunction multiply($a, $b) {\n    $a = (string)$a;\n    $b = (string)$b;\n\
    \    $a = $a[strlen($a)-1];\n    $b = $b[strlen($b)-1];\n    return $a * $b;\n\
    }\n\nfunction candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// multiply(148, 412) should return 16.\n// multiply(19, 28) should\
    \ return 72.\n// multiply(2020, 1851) should return 0.\n// multiply(14,-15) should\
    \ return 20.\nfunction multiply($a, $b) {\n    $a = abs($a);\n    $b = abs($b);\n\
    \    return ($a % 10) * ($b % 10);\n}\n\necho multiply(148, 412);\necho \"<br>\"\
    ;\necho multiply(19, 28);\necho \"<br>\";\necho multiply(2020, 1851);\necho \"\
    <br>\";\necho multiply(14,-15);\necho \"<br>\";\necho multiply(0, 0);\necho \"\
    <br>\";\necho multiply(0, 1);\necho \"<br>\";\necho multiply(1, 0);\necho \"<br>\"\
    ;\necho multiply(1, 1);\necho \"<br>\";\necho multiply(1, 2);\necho \"<br>\";\n\
    echo multiply(2, 1);\necho \"<br>\";\necho multiply(2, 2);\necho \"<br>\";\necho\
    \ multiply(2, 3);\necho \"<br>\";\necho multiply(3, 2);\necho \"<br>\";\necho\
    \ multiply(3, 3);\necho \"<br>\";\necho multiply(3, 4);\necho \"<br>\";\necho\
    \ multiply(4, 3);\necho \"<br>\";\necho multiply(4, 4);\necho \"<br>\";\necho\
    \ multiply(4, 5);\necho \"<br>\";\necho multiply(5, 4);\necho \"<br>\";\necho\
    \ multiply(5, 5);\necho \"<br>\";\necho multiply(5, 6);\necho \"<br>\";\necho\
    \ multiply(6, 5);\necho \"<br>\";\necho multiply(6, 6);\necho \"<br>\";\necho\
    \ multiply(6, 7);\necho \"<br>\";\necho multiply(7, 6);\necho \"<br>\";\necho\
    \ multiply(7, 7);\necho \"<br>\";\necho multiply(7, 8);\necho \"<br>\";\necho\
    \ multiply(8, 7);\necho \"<br>\";\necho multiply(8, 8);\necho \"<br>\";\necho\
    \ multiply(8, 9);\necho \"<br>\";\necho multiply(9, 8);\necho \"<br>\";\necho\
    \ multiply(9, 9);\necho \"<br>\";\necho multiply(9, 10);\necho \"<br>\";\necho\
    \ multiply(10, 9);\necho \"<br>\";\nfunction candidate(...$args) {\n    return\
    \ multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148, 412)\
    \ !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19, 28)\
    \ !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020,\
    \ 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14,\
    \ -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76,\
    \ 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17,\
    \ 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0,\
    \ 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: 16<br>72<br>0<br>20<br>0<br>0<br>0<br>1<br>2<br>2<br>4<br>6<br>6<br>9<br>12<br>12<br>16<br>20<br>20<br>25<br>30<br>30<br>36<br>42<br>42<br>49<br>56<br>56<br>64<br>72<br>72<br>81<br>0<br>0<br>
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// multiply(148, 412) should return 16.\n// multiply(19, 28) should\
    \ return 72.\n// multiply(2020, 1851) should return 0.\n// multiply(14,-15) should\
    \ return 20.\nfunction multiply($a, $b) {\n  $a = $a % 10;\n  $b = $b % 10;\n\
    \  return $a * $b;\n}\necho multiply(148, 412) . PHP_EOL;\necho multiply(19, 28)\
    \ . PHP_EOL;\necho multiply(2020, 1851) . PHP_EOL;\necho multiply(14,-15) . PHP_EOL;\n\
    function candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "16\n72\n0\n-20\n"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp_rbjpb6z.php:27\n\
    Stack trace:\n#0 /tmp/tmp_rbjpb6z.php(34): test()\n#1 {main}\n  thrown in /tmp/tmp_rbjpb6z.php\
    \ on line 27\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// multiply(148, 412) should return 16.\n// multiply(19, 28) should\
    \ return 72.\n// multiply(2020, 1851) should return 0.\n// multiply(14,-15) should\
    \ return 20.\nfunction multiply($a, $b) {\n    $a = $a % 10;\n    $b = $b % 10;\n\
    \    return $a * $b;\n}\n\nfunction candidate(...$args) {\n    return multiply(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(148, 412) !== 16) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpd_66mbt6.php:24\n\
    Stack trace:\n#0 /tmp/tmpd_66mbt6.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpd_66mbt6.php\
    \ on line 24\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// multiply(148, 412) should return 16.\n// multiply(19, 28) should\
    \ return 72.\n// multiply(2020, 1851) should return 0.\n// multiply(14,-15) should\
    \ return 20.\nfunction multiply($a, $b) {\n    $a = $a % 10;\n    $b = $b % 10;\n\
    \    return $a * $b;\n}\necho multiply(148, 412);\necho \"<br>\";\necho multiply(19,\
    \ 28);\necho \"<br>\";\necho multiply(2020, 1851);\necho \"<br>\";\necho multiply(14,-15);\n\
    echo \"<br>\";\nfunction candidate(...$args) {\n    return multiply(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(148, 412) !== 16) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: 16<br>72<br>0<br>-20<br>
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpy_qyavqv.php:31\n\
    Stack trace:\n#0 /tmp/tmpy_qyavqv.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpy_qyavqv.php\
    \ on line 31\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// multiply(148, 412) should return 16.\n// multiply(19, 28) should\
    \ return 72.\n// multiply(2020, 1851) should return 0.\n// multiply(14,-15) should\
    \ return 20.\nfunction multiply($a, $b) {\n    $a = abs($a);\n    $b = abs($b);\n\
    \    $a = $a % 10;\n    $b = $b % 10;\n    return $a * $b;\n}\n\nfunction candidate(...$args)\
    \ {\n    return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148,\
    \ 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19,\
    \ 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020,\
    \ 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14,\
    \ -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76,\
    \ 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17,\
    \ 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0,\
    \ 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// multiply(148, 412) should return 16.\n// multiply(19, 28) should\
    \ return 72.\n// multiply(2020, 1851) should return 0.\n// multiply(14,-15) should\
    \ return 20.\nfunction multiply($a, $b) {\n    $a = (string)$a;\n    $b = (string)$b;\n\
    \    $a = $a[strlen($a)-1];\n    $b = $b[strlen($b)-1];\n    return $a * $b;\n\
    }\n\nfunction candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// multiply(148, 412) should return 16.\n// multiply(19, 28) should\
    \ return 72.\n// multiply(2020, 1851) should return 0.\n// multiply(14,-15) should\
    \ return 20.\nfunction multiply($a, $b) {\n    return ($a % 10) * ($b % 10);\n\
    }\n\nfunction candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp8f2rbejl.php:22\n\
    Stack trace:\n#0 /tmp/tmp8f2rbejl.php(29): test()\n#1 {main}\n  thrown in /tmp/tmp8f2rbejl.php\
    \ on line 22\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// multiply(148, 412) should return 16.\n// multiply(19, 28) should\
    \ return 72.\n// multiply(2020, 1851) should return 0.\n// multiply(14,-15) should\
    \ return 20.\nfunction multiply($a, $b) {\n    $a = $a % 10;\n    $b = $b % 10;\n\
    \    return $a * $b;\n}\n\nfunction candidate(...$args) {\n    return multiply(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(148, 412) !== 16) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp56x6ounm.php:24\n\
    Stack trace:\n#0 /tmp/tmp56x6ounm.php(31): test()\n#1 {main}\n  thrown in /tmp/tmp56x6ounm.php\
    \ on line 24\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// multiply(148, 412) should return 16.\n// multiply(19, 28) should\
    \ return 72.\n// multiply(2020, 1851) should return 0.\n// multiply(14,-15) should\
    \ return 20.\nfunction multiply($a, $b) {\n    $a = (string)$a;\n    $b = (string)$b;\n\
    \    $a = $a[strlen($a)-1];\n    $b = $b[strlen($b)-1];\n    return $a * $b;\n\
    }\n\necho multiply(148, 412);\necho \"\\n\";\necho multiply(19, 28);\necho \"\\\
    n\";\necho multiply(2020, 1851);\necho \"\\n\";\necho multiply(14,-15);\necho\
    \ \"\\n\";\nfunction candidate(...$args) {\n    return multiply(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "16\n72\n0\n20\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// multiply(148, 412) should return 16.\n// multiply(19, 28) should\
    \ return 72.\n// multiply(2020, 1851) should return 0.\n// multiply(14,-15) should\
    \ return 20.\nfunction multiply($a, $b) {\n    return ($a % 10) * ($b % 10);\n\
    }\n\nfunction candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp0i4n8_l5.php:22\n\
    Stack trace:\n#0 /tmp/tmp0i4n8_l5.php(29): test()\n#1 {main}\n  thrown in /tmp/tmp0i4n8_l5.php\
    \ on line 22\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// multiply(148, 412) should return 16.\n// multiply(19, 28) should\
    \ return 72.\n// multiply(2020, 1851) should return 0.\n// multiply(14,-15) should\
    \ return 20.\nfunction multiply($a, $b) {\n    $a = $a % 10;\n    $b = $b % 10;\n\
    \    return $a * $b;\n}\n\necho multiply(148, 412);\necho \"<br>\";\necho multiply(19,\
    \ 28);\necho \"<br>\";\necho multiply(2020, 1851);\necho \"<br>\";\necho multiply(14,-15);\n\
    echo \"<br>\";\nfunction candidate(...$args) {\n    return multiply(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(148, 412) !== 16) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: 16<br>72<br>0<br>-20<br>
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpflq6b9hu.php:32\n\
    Stack trace:\n#0 /tmp/tmpflq6b9hu.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpflq6b9hu.php\
    \ on line 32\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// multiply(148, 412) should return 16.\n// multiply(19, 28) should\
    \ return 72.\n// multiply(2020, 1851) should return 0.\n// multiply(14,-15) should\
    \ return 20.\nfunction multiply($a, $b) {\n    $a = (int) $a;\n    $b = (int)\
    \ $b;\n    $a = $a % 10;\n    $b = $b % 10;\n    return $a * $b;\n}\n\necho multiply(148,\
    \ 412);\necho \"\\n\";\necho multiply(19, 28);\necho \"\\n\";\necho multiply(2020,\
    \ 1851);\necho \"\\n\";\necho multiply(14,-15);\necho \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148,\
    \ 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19,\
    \ 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020,\
    \ 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14,\
    \ -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76,\
    \ 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17,\
    \ 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0,\
    \ 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "16\n72\n0\n-20\n"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpqy84_y7x.php:34\n\
    Stack trace:\n#0 /tmp/tmpqy84_y7x.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpqy84_y7x.php\
    \ on line 34\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// multiply(148, 412) should return 16.\n// multiply(19, 28) should\
    \ return 72.\n// multiply(2020, 1851) should return 0.\n// multiply(14,-15) should\
    \ return 20.\nfunction multiply($a, $b) {\n  $a = (string) $a;\n  $b = (string)\
    \ $b;\n  $a = $a[strlen($a) - 1];\n  $b = $b[strlen($b) - 1];\n  return $a * $b;\n\
    }\nfunction candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// multiply(148, 412) should return 16.\n// multiply(19, 28) should\
    \ return 72.\n// multiply(2020, 1851) should return 0.\n// multiply(14,-15) should\
    \ return 20.\nfunction multiply($a, $b) {\n    $a = $a % 10;\n    $b = $b % 10;\n\
    \    return $a * $b;\n}\n\nfunction candidate(...$args) {\n    return multiply(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(148, 412) !== 16) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpis5cxap_.php:24\n\
    Stack trace:\n#0 /tmp/tmpis5cxap_.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpis5cxap_.php\
    \ on line 24\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// multiply(148, 412) should return 16.\n// multiply(19, 28) should\
    \ return 72.\n// multiply(2020, 1851) should return 0.\n// multiply(14,-15) should\
    \ return 20.\nfunction multiply($a, $b) {\n    return ($a % 10) * ($b % 10);\n\
    }\n\nfunction candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpcdqb_b7c.php:22\n\
    Stack trace:\n#0 /tmp/tmpcdqb_b7c.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpcdqb_b7c.php\
    \ on line 22\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// multiply(148, 412) should return 16.\n// multiply(19, 28) should\
    \ return 72.\n// multiply(2020, 1851) should return 0.\n// multiply(14,-15) should\
    \ return 20.\nfunction multiply($a, $b) {\n    $a = abs($a);\n    $b = abs($b);\n\
    \    $a = $a % 10;\n    $b = $b % 10;\n    return $a * $b;\n}\n\nfunction candidate(...$args)\
    \ {\n    return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148,\
    \ 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19,\
    \ 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020,\
    \ 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14,\
    \ -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76,\
    \ 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17,\
    \ 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0,\
    \ 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// multiply(148, 412) should return 16.\n// multiply(19, 28) should\
    \ return 72.\n// multiply(2020, 1851) should return 0.\n// multiply(14,-15) should\
    \ return 20.\nfunction multiply($a, $b) {\n    $a = $a % 10;\n    $b = $b % 10;\n\
    \    return $a * $b;\n}\n\nfunction candidate(...$args) {\n    return multiply(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(148, 412) !== 16) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp9bqmn6v3.php:24\n\
    Stack trace:\n#0 /tmp/tmp9bqmn6v3.php(31): test()\n#1 {main}\n  thrown in /tmp/tmp9bqmn6v3.php\
    \ on line 24\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// multiply(148, 412) should return 16.\n// multiply(19, 28) should\
    \ return 72.\n// multiply(2020, 1851) should return 0.\n// multiply(14,-15) should\
    \ return 20.\nfunction multiply($a, $b) {\n    $a = (string)$a;\n    $b = (string)$b;\n\
    \    return (int)$a[strlen($a)-1] * (int)$b[strlen($b)-1];\n}\n\nfunction candidate(...$args)\
    \ {\n    return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148,\
    \ 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19,\
    \ 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020,\
    \ 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14,\
    \ -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76,\
    \ 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17,\
    \ 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0,\
    \ 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// multiply(148, 412) should return 16.\n// multiply(19, 28) should\
    \ return 72.\n// multiply(2020, 1851) should return 0.\n// multiply(14,-15) should\
    \ return 20.\nfunction multiply($a, $b) {\n    $a = $a % 10;\n    $b = $b % 10;\n\
    \    return $a * $b;\n}\n\necho multiply(148, 412);\necho \"<br>\";\necho multiply(19,\
    \ 28);\necho \"<br>\";\necho multiply(2020, 1851);\necho \"<br>\";\necho multiply(14,-15);\n\
    echo \"<br>\";\necho multiply(0, 0);\necho \"<br>\";\necho multiply(0, -1);\n\
    echo \"<br>\";\necho multiply(-1, 0);\necho \"<br>\";\necho multiply(-1, -1);\n\
    echo \"<br>\";\necho multiply(1, 1);\necho \"<br>\";\necho multiply(1, -1);\n\
    echo \"<br>\";\necho multiply(-1, 1);\necho \"<br>\";\necho multiply(1, 0);\n\
    echo \"<br>\";\necho multiply(0, 1);\necho \"<br>\";\necho multiply(0, 0);\necho\
    \ \"<br>\";\necho multiply(0, -1);\necho \"<br>\";\necho multiply(-1, 0);\necho\
    \ \"<br>\";\necho multiply(-1, -1);\necho \"<br>\";\necho multiply(1, 1);\necho\
    \ \"<br>\";\necho multiply(1, -1);\necho \"<br>\";\necho multiply(-1, 1);\necho\
    \ \"<br>\";\necho multiply(1, 0);\necho \"<br>\";\necho multiply(0, 1);\necho\
    \ \"<br>\";\necho multiply(0, 0);\necho \"<br>\";\necho multiply(0, -1);\necho\
    \ \"<br>\";\necho multiply(-1, 0);\necho \"<br>\";\necho multiply(-1, -1);\necho\
    \ \"<br>\";\necho multiply(1, 1);\necho \"<br>\";\necho multiply(1, -1);\necho\
    \ \"<br>\";\necho multiply(-1, 1);\necho \"<br>\";\necho multiply(1, 0);\necho\
    \ \"<br>\";\necho multiply(0, 1);\necho \"<br>\";\necho multiply(0, 0);\necho\
    \ \"<br>\";\necho multiply(0, -1);\necho \"<br>\";\necho multiply(-1, 0\nfunction\
    \ candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: ''
  stderr: "PHP Parse error:  syntax error, unexpected token \"function\", expecting\
    \ \")\" in /tmp/tmplpnmey01.php on line 83\n"
  exit_code: 255
  status: SyntaxError
- program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// multiply(148, 412) should return 16.\n// multiply(19, 28) should\
    \ return 72.\n// multiply(2020, 1851) should return 0.\n// multiply(14,-15) should\
    \ return 20.\nfunction multiply($a, $b) {\n    $a = (string)$a;\n    $b = (string)$b;\n\
    \    return (int)$a[strlen($a)-1] * (int)$b[strlen($b)-1];\n}\n\nfunction candidate(...$args)\
    \ {\n    return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148,\
    \ 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19,\
    \ 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020,\
    \ 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14,\
    \ -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76,\
    \ 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17,\
    \ 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0,\
    \ 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// multiply(148, 412) should return 16.\n// multiply(19, 28) should\
    \ return 72.\n// multiply(2020, 1851) should return 0.\n// multiply(14,-15) should\
    \ return 20.\nfunction multiply($a, $b) {\n    $a = $a % 10;\n    $b = $b % 10;\n\
    \    return $a * $b;\n}\nfunction candidate(...$args) {\n    return multiply(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(148, 412) !== 16) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpz375v407.php:23\n\
    Stack trace:\n#0 /tmp/tmpz375v407.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpz375v407.php\
    \ on line 23\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// multiply(148, 412) should return 16.\n// multiply(19, 28) should\
    \ return 72.\n// multiply(2020, 1851) should return 0.\n// multiply(14,-15) should\
    \ return 20.\nfunction multiply($a, $b) {\n    $a = $a % 10;\n    $b = $b % 10;\n\
    \    return $a * $b;\n}\n\nfunction candidate(...$args) {\n    return multiply(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(148, 412) !== 16) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpvhpwn1yu.php:24\n\
    Stack trace:\n#0 /tmp/tmpvhpwn1yu.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpvhpwn1yu.php\
    \ on line 24\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// multiply(148, 412) should return 16.\n// multiply(19, 28) should\
    \ return 72.\n// multiply(2020, 1851) should return 0.\n// multiply(14,-15) should\
    \ return 20.\nfunction multiply($a, $b) {\n    $a = (string) $a;\n    $b = (string)\
    \ $b;\n    $a = $a[strlen($a) - 1];\n    $b = $b[strlen($b) - 1];\n    return\
    \ $a * $b;\n}\n\necho multiply(148, 412);\necho \"\\n\";\necho multiply(19, 28);\n\
    echo \"\\n\";\necho multiply(2020, 1851);\necho \"\\n\";\necho multiply(14,-15);\n\
    echo \"\\n\";\n\nfunction candidate(...$args) {\n    return multiply(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(148, 412) !== 16) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "16\n72\n0\n20\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// multiply(148, 412) should return 16.\n// multiply(19, 28) should\
    \ return 72.\n// multiply(2020, 1851) should return 0.\n// multiply(14,-15) should\
    \ return 20.\nfunction multiply($a, $b) {\n    $a = (string)$a;\n    $b = (string)$b;\n\
    \    $a = (int)$a[strlen($a)-1];\n    $b = (int)$b[strlen($b)-1];\n    return\
    \ $a * $b;\n}\n\nfunction candidate(...$args) {\n    return multiply(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(148, 412) !== 16) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// multiply(148, 412) should return 16.\n// multiply(19, 28) should\
    \ return 72.\n// multiply(2020, 1851) should return 0.\n// multiply(14,-15) should\
    \ return 20.\nfunction multiply($a, $b) {\n    $a = (string)$a;\n    $b = (string)$b;\n\
    \    $a = $a[strlen($a)-1];\n    $b = $b[strlen($b)-1];\n    return $a * $b;\n\
    }\n\necho multiply(148, 412);\necho \"\\n\";\necho multiply(19, 28);\necho \"\\\
    n\";\necho multiply(2020, 1851);\necho \"\\n\";\necho multiply(14,-15);\necho\
    \ \"\\n\";\nfunction candidate(...$args) {\n    return multiply(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "16\n72\n0\n20\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// multiply(148, 412) should return 16.\n// multiply(19, 28) should\
    \ return 72.\n// multiply(2020, 1851) should return 0.\n// multiply(14,-15) should\
    \ return 20.\nfunction multiply($a, $b) {\n    $a = (string)$a;\n    $b = (string)$b;\n\
    \    return (int)$a[strlen($a)-1] * (int)$b[strlen($b)-1];\n}\n\necho multiply(148,\
    \ 412);\necho \"\\n\";\necho multiply(19, 28);\necho \"\\n\";\necho multiply(2020,\
    \ 1851);\necho \"\\n\";\necho multiply(14,-15);\necho \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148,\
    \ 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19,\
    \ 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020,\
    \ 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14,\
    \ -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76,\
    \ 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17,\
    \ 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0,\
    \ 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "16\n72\n0\n20\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// multiply(148, 412) should return 16.\n// multiply(19, 28) should\
    \ return 72.\n// multiply(2020, 1851) should return 0.\n// multiply(14,-15) should\
    \ return 20.\nfunction multiply($a, $b) {\n    $a = $a % 10;\n    $b = $b % 10;\n\
    \    return $a * $b;\n}\n\necho multiply(148, 412);\necho \"<br>\";\necho multiply(19,\
    \ 28);\necho \"<br>\";\necho multiply(2020, 1851);\necho \"<br>\";\necho multiply(14,-15);\n\
    echo \"<br>\";\nfunction candidate(...$args) {\n    return multiply(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(148, 412) !== 16) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: 16<br>72<br>0<br>-20<br>
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpqw4l7_60.php:32\n\
    Stack trace:\n#0 /tmp/tmpqw4l7_60.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpqw4l7_60.php\
    \ on line 32\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// multiply(148, 412) should return 16.\n// multiply(19, 28) should\
    \ return 72.\n// multiply(2020, 1851) should return 0.\n// multiply(14,-15) should\
    \ return 20.\nfunction multiply($a, $b) {\n    $a = (string)$a;\n    $b = (string)$b;\n\
    \    return $a[strlen($a)-1] * $b[strlen($b)-1];\n}\n\nfunction candidate(...$args)\
    \ {\n    return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148,\
    \ 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19,\
    \ 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020,\
    \ 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14,\
    \ -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76,\
    \ 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17,\
    \ 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0,\
    \ 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// multiply(148, 412) should return 16.\n// multiply(19, 28) should\
    \ return 72.\n// multiply(2020, 1851) should return 0.\n// multiply(14,-15) should\
    \ return 20.\nfunction multiply($a, $b) {\n    return ($a % 10) * ($b % 10);\n\
    }\n\necho multiply(148, 412);\necho \"\\n\";\necho multiply(19, 28);\necho \"\\\
    n\";\necho multiply(2020, 1851);\necho \"\\n\";\necho multiply(14,-15);\necho\
    \ \"\\n\";\nfunction candidate(...$args) {\n    return multiply(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "16\n72\n0\n-20\n"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpvqwxiuk_.php:30\n\
    Stack trace:\n#0 /tmp/tmpvqwxiuk_.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpvqwxiuk_.php\
    \ on line 30\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// multiply(148, 412) should return 16.\n// multiply(19, 28) should\
    \ return 72.\n// multiply(2020, 1851) should return 0.\n// multiply(14,-15) should\
    \ return 20.\nfunction multiply($a, $b) {\n    $a = $a % 10;\n    $b = $b % 10;\n\
    \    return $a * $b;\n}\n\nfunction candidate(...$args) {\n    return multiply(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(148, 412) !== 16) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpiynvpuge.php:24\n\
    Stack trace:\n#0 /tmp/tmpiynvpuge.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpiynvpuge.php\
    \ on line 24\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// multiply(148, 412) should return 16.\n// multiply(19, 28) should\
    \ return 72.\n// multiply(2020, 1851) should return 0.\n// multiply(14,-15) should\
    \ return 20.\nfunction multiply($a, $b) {\n    $a = $a % 10;\n    $b = $b % 10;\n\
    \    return $a * $b;\n}\n\nfunction candidate(...$args) {\n    return multiply(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(148, 412) !== 16) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpyg4wovo1.php:24\n\
    Stack trace:\n#0 /tmp/tmpyg4wovo1.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpyg4wovo1.php\
    \ on line 24\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// multiply(148, 412) should return 16.\n// multiply(19, 28) should\
    \ return 72.\n// multiply(2020, 1851) should return 0.\n// multiply(14,-15) should\
    \ return 20.\nfunction multiply($a, $b) {\n    $a = $a % 10;\n    $b = $b % 10;\n\
    \    return $a * $b;\n}\n\necho multiply(148, 412);\necho \"\\n\";\necho multiply(19,\
    \ 28);\necho \"\\n\";\necho multiply(2020, 1851);\necho \"\\n\";\necho multiply(14,-15);\n\
    echo \"\\n\";\nfunction candidate(...$args) {\n    return multiply(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(148, 412) !== 16) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "16\n72\n0\n-20\n"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpc86zzg_j.php:32\n\
    Stack trace:\n#0 /tmp/tmpc86zzg_j.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpc86zzg_j.php\
    \ on line 32\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// multiply(148, 412) should return 16.\n// multiply(19, 28) should\
    \ return 72.\n// multiply(2020, 1851) should return 0.\n// multiply(14,-15) should\
    \ return 20.\nfunction multiply($a, $b) {\n  return ($a % 10) * ($b % 10);\n}\n\
    \nfunction candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpz_kgm0mg.php:22\n\
    Stack trace:\n#0 /tmp/tmpz_kgm0mg.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpz_kgm0mg.php\
    \ on line 22\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// multiply(148, 412) should return 16.\n// multiply(19, 28) should\
    \ return 72.\n// multiply(2020, 1851) should return 0.\n// multiply(14,-15) should\
    \ return 20.\nfunction multiply($a, $b) {\n    return ($a % 10) * ($b % 10);\n\
    }\n\necho multiply(148, 412);\necho \"\\n\";\necho multiply(19, 28);\necho \"\\\
    n\";\necho multiply(2020, 1851);\necho \"\\n\";\necho multiply(14,-15);\necho\
    \ \"\\n\";\nfunction candidate(...$args) {\n    return multiply(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "16\n72\n0\n-20\n"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpw3omrw54.php:30\n\
    Stack trace:\n#0 /tmp/tmpw3omrw54.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpw3omrw54.php\
    \ on line 30\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// multiply(148, 412) should return 16.\n// multiply(19, 28) should\
    \ return 72.\n// multiply(2020, 1851) should return 0.\n// multiply(14,-15) should\
    \ return 20.\nfunction multiply($a, $b) {\n    $a = $a % 10;\n    $b = $b % 10;\n\
    \    return $a * $b;\n}\n\necho multiply(148, 412) . \"\\n\";\necho multiply(19,\
    \ 28) . \"\\n\";\necho multiply(2020, 1851) . \"\\n\";\necho multiply(14,-15)\
    \ . \"\\n\";\n\nfunction candidate(...$args) {\n    return multiply(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(148, 412) !== 16) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "16\n72\n0\n-20\n"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpuqng19xq.php:29\n\
    Stack trace:\n#0 /tmp/tmpuqng19xq.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpuqng19xq.php\
    \ on line 29\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// multiply(148, 412) should return 16.\n// multiply(19, 28) should\
    \ return 72.\n// multiply(2020, 1851) should return 0.\n// multiply(14,-15) should\
    \ return 20.\nfunction multiply($a, $b) {\n    $a = $a % 10;\n    $b = $b % 10;\n\
    \    return $a * $b;\n}\n\necho multiply(148, 412);\necho \"\\n\";\necho multiply(19,\
    \ 28);\necho \"\\n\";\necho multiply(2020, 1851);\necho \"\\n\";\necho multiply(14,-15);\n\
    echo \"\\n\";\nfunction candidate(...$args) {\n    return multiply(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(148, 412) !== 16) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "16\n72\n0\n-20\n"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpre2bhrt8.php:32\n\
    Stack trace:\n#0 /tmp/tmpre2bhrt8.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpre2bhrt8.php\
    \ on line 32\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// multiply(148, 412) should return 16.\n// multiply(19, 28) should\
    \ return 72.\n// multiply(2020, 1851) should return 0.\n// multiply(14,-15) should\
    \ return 20.\nfunction multiply($a, $b) {\n    $a = $a % 10;\n    $b = $b % 10;\n\
    \    return $a * $b;\n}\n\nfunction candidate(...$args) {\n    return multiply(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(148, 412) !== 16) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpxvc5gpeg.php:24\n\
    Stack trace:\n#0 /tmp/tmpxvc5gpeg.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpxvc5gpeg.php\
    \ on line 24\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// multiply(148, 412) should return 16.\n// multiply(19, 28) should\
    \ return 72.\n// multiply(2020, 1851) should return 0.\n// multiply(14,-15) should\
    \ return 20.\nfunction multiply($a, $b) {\n    $a = $a % 10;\n    $b = $b % 10;\n\
    \    return $a * $b;\n}\n\nfunction candidate(...$args) {\n    return multiply(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(148, 412) !== 16) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp3o8per0p.php:24\n\
    Stack trace:\n#0 /tmp/tmp3o8per0p.php(31): test()\n#1 {main}\n  thrown in /tmp/tmp3o8per0p.php\
    \ on line 24\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// multiply(148, 412) should return 16.\n// multiply(19, 28) should\
    \ return 72.\n// multiply(2020, 1851) should return 0.\n// multiply(14,-15) should\
    \ return 20.\nfunction multiply($a, $b) {\n  $a = $a % 10;\n  $b = $b % 10;\n\
    \  return $a * $b;\n}\nfunction candidate(...$args) {\n    return multiply(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(148, 412) !== 16) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmphj8sb6hw.php:23\n\
    Stack trace:\n#0 /tmp/tmphj8sb6hw.php(30): test()\n#1 {main}\n  thrown in /tmp/tmphj8sb6hw.php\
    \ on line 23\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// multiply(148, 412) should return 16.\n// multiply(19, 28) should\
    \ return 72.\n// multiply(2020, 1851) should return 0.\n// multiply(14,-15) should\
    \ return 20.\nfunction multiply($a, $b) {\n    return ($a % 10) * ($b % 10);\n\
    }\n\nfunction candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpo4sxh0jn.php:22\n\
    Stack trace:\n#0 /tmp/tmpo4sxh0jn.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpo4sxh0jn.php\
    \ on line 22\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// multiply(148, 412) should return 16.\n// multiply(19, 28) should\
    \ return 72.\n// multiply(2020, 1851) should return 0.\n// multiply(14,-15) should\
    \ return 20.\nfunction multiply($a, $b) {\n    $a = abs($a);\n    $b = abs($b);\n\
    \    return ($a % 10) * ($b % 10);\n}\n\nfunction candidate(...$args) {\n    return\
    \ multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148, 412)\
    \ !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19, 28)\
    \ !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020,\
    \ 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14,\
    \ -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76,\
    \ 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17,\
    \ 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0,\
    \ 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// multiply(148, 412) should return 16.\n// multiply(19, 28) should\
    \ return 72.\n// multiply(2020, 1851) should return 0.\n// multiply(14,-15) should\
    \ return 20.\nfunction multiply($a, $b) {\n    $a = abs($a);\n    $b = abs($b);\n\
    \    $a = $a % 10;\n    $b = $b % 10;\n    return $a * $b;\n}\necho multiply(148,\
    \ 412);\nfunction candidate(...$args) {\n    return multiply(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: '16'
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// multiply(148, 412) should return 16.\n// multiply(19, 28) should\
    \ return 72.\n// multiply(2020, 1851) should return 0.\n// multiply(14,-15) should\
    \ return 20.\nfunction multiply($a, $b) {\n  $a = $a % 10;\n  $b = $b % 10;\n\
    \  return $a * $b;\n}\n\nfunction candidate(...$args) {\n    return multiply(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(148, 412) !== 16) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpdmyo6jlr.php:24\n\
    Stack trace:\n#0 /tmp/tmpdmyo6jlr.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpdmyo6jlr.php\
    \ on line 24\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// multiply(148, 412) should return 16.\n// multiply(19, 28) should\
    \ return 72.\n// multiply(2020, 1851) should return 0.\n// multiply(14,-15) should\
    \ return 20.\nfunction multiply($a, $b) {\n    return ($a % 10) * ($b % 10);\n\
    }\n\necho multiply(148, 412);\necho \"<br>\";\necho multiply(19, 28);\necho \"\
    <br>\";\necho multiply(2020, 1851);\necho \"<br>\";\necho multiply(14,-15);\n\
    echo \"<br>\";\nfunction candidate(...$args) {\n    return multiply(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(148, 412) !== 16) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: 16<br>72<br>0<br>-20<br>
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpmd3j_ahr.php:30\n\
    Stack trace:\n#0 /tmp/tmpmd3j_ahr.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpmd3j_ahr.php\
    \ on line 30\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// multiply(148, 412) should return 16.\n// multiply(19, 28) should\
    \ return 72.\n// multiply(2020, 1851) should return 0.\n// multiply(14,-15) should\
    \ return 20.\nfunction multiply($a, $b) {\n    $a = $a % 10;\n    $b = $b % 10;\n\
    \    return $a * $b;\n}\n\necho multiply(148, 412);\necho \"\\n\";\necho multiply(19,\
    \ 28);\necho \"\\n\";\necho multiply(2020, 1851);\necho \"\\n\";\necho multiply(14,-15);\n\
    echo \"\\n\";\nfunction candidate(...$args) {\n    return multiply(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(148, 412) !== 16) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "16\n72\n0\n-20\n"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpxrnzt0o4.php:32\n\
    Stack trace:\n#0 /tmp/tmpxrnzt0o4.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpxrnzt0o4.php\
    \ on line 32\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// multiply(148, 412) should return 16.\n// multiply(19, 28) should\
    \ return 72.\n// multiply(2020, 1851) should return 0.\n// multiply(14,-15) should\
    \ return 20.\nfunction multiply($a, $b) {\n    $a = $a % 10;\n    $b = $b % 10;\n\
    \    return $a * $b;\n}\n\nfunction candidate(...$args) {\n    return multiply(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(148, 412) !== 16) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp6jt_z4uy.php:24\n\
    Stack trace:\n#0 /tmp/tmp6jt_z4uy.php(31): test()\n#1 {main}\n  thrown in /tmp/tmp6jt_z4uy.php\
    \ on line 24\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// multiply(148, 412) should return 16.\n// multiply(19, 28) should\
    \ return 72.\n// multiply(2020, 1851) should return 0.\n// multiply(14,-15) should\
    \ return 20.\nfunction multiply($a, $b) {\n    $a = abs($a);\n    $b = abs($b);\n\
    \    $a = $a % 10;\n    $b = $b % 10;\n    return $a * $b;\n}\n\nfunction candidate(...$args)\
    \ {\n    return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148,\
    \ 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19,\
    \ 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020,\
    \ 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14,\
    \ -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76,\
    \ 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17,\
    \ 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0,\
    \ 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// multiply(148, 412) should return 16.\n// multiply(19, 28) should\
    \ return 72.\n// multiply(2020, 1851) should return 0.\n// multiply(14,-15) should\
    \ return 20.\nfunction multiply($a, $b) {\n    $a = abs($a);\n    $b = abs($b);\n\
    \    $a = $a % 10;\n    $b = $b % 10;\n    return $a * $b;\n}\n\necho multiply(148,\
    \ 412);\necho \"\\n\";\necho multiply(19, 28);\necho \"\\n\";\necho multiply(2020,\
    \ 1851);\necho \"\\n\";\necho multiply(14,-15);\necho \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148,\
    \ 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19,\
    \ 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020,\
    \ 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14,\
    \ -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76,\
    \ 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17,\
    \ 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0,\
    \ 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "16\n72\n0\n20\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// multiply(148, 412) should return 16.\n// multiply(19, 28) should\
    \ return 72.\n// multiply(2020, 1851) should return 0.\n// multiply(14,-15) should\
    \ return 20.\nfunction multiply($a, $b) {\n    $a = abs($a);\n    $b = abs($b);\n\
    \    return ($a % 10) * ($b % 10);\n}\n\necho multiply(148, 412);\necho \"\\n\"\
    ;\necho multiply(19, 28);\necho \"\\n\";\necho multiply(2020, 1851);\necho \"\\\
    n\";\necho multiply(14,-15);\necho \"\\n\";\nfunction candidate(...$args) {\n\
    \    return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148,\
    \ 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19,\
    \ 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020,\
    \ 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14,\
    \ -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76,\
    \ 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17,\
    \ 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0,\
    \ 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "16\n72\n0\n20\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// multiply(148, 412) should return 16.\n// multiply(19, 28) should\
    \ return 72.\n// multiply(2020, 1851) should return 0.\n// multiply(14,-15) should\
    \ return 20.\nfunction multiply($a, $b) {\n    return ($a % 10) * ($b % 10);\n\
    }\n\nfunction candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpksqdmemi.php:22\n\
    Stack trace:\n#0 /tmp/tmpksqdmemi.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpksqdmemi.php\
    \ on line 22\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// multiply(148, 412) should return 16.\n// multiply(19, 28) should\
    \ return 72.\n// multiply(2020, 1851) should return 0.\n// multiply(14,-15) should\
    \ return 20.\nfunction multiply($a, $b) {\n  $a = $a % 10;\n  $b = $b % 10;\n\
    \  return $a * $b;\n}\nfunction candidate(...$args) {\n    return multiply(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(148, 412) !== 16) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpajpqurv2.php:23\n\
    Stack trace:\n#0 /tmp/tmpajpqurv2.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpajpqurv2.php\
    \ on line 23\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// multiply(148, 412) should return 16.\n// multiply(19, 28) should\
    \ return 72.\n// multiply(2020, 1851) should return 0.\n// multiply(14,-15) should\
    \ return 20.\nfunction multiply($a, $b) {\n    return ($a % 10) * ($b % 10);\n\
    }\n\necho multiply(148, 412);\necho \"<br>\";\necho multiply(19, 28);\necho \"\
    <br>\";\necho multiply(2020, 1851);\necho \"<br>\";\necho multiply(14,-15);\n\
    echo \"<br>\";\necho multiply(14,15);\necho \"<br>\";\necho multiply(14,0);\n\
    echo \"<br>\";\necho multiply(0,0);\necho \"<br>\";\necho multiply(0,15);\necho\
    \ \"<br>\";\necho multiply(0,-15);\necho \"<br>\";\necho multiply(-14,15);\necho\
    \ \"<br>\";\necho multiply(-14,-15);\necho \"<br>\";\necho multiply(-14,0);\n\
    echo \"<br>\";\necho multiply(-14,-0);\necho \"<br>\";\necho multiply(-0,0);\n\
    echo \"<br>\";\necho multiply(-0,-0);\necho \"<br>\";\necho multiply(-0,15);\n\
    echo \"<br>\";\necho multiply(-0,-15);\necho \"<br>\";\necho multiply(-15,15);\n\
    echo \"<br>\";\necho multiply(-15,-15);\necho \"<br>\";\necho multiply(-15,0);\n\
    echo \"<br>\";\necho multiply(-15,-0);\necho \"<br>\";\necho multiply(-15,-15);\n\
    echo \"<br>\";\necho multiply(-15,-15);\necho \"<br>\";\necho multiply(-15,-15);\n\
    echo \"<br>\";\necho multiply(-15,-15);\necho \"<br>\";\necho multiply(-15,-15);\n\
    echo \"<br>\";\necho multiply(-15,-15);\necho \"<br>\";\necho multiply(-15,-15);\n\
    echo \"<br>\";\necho multiply(-15,-15);\necho \"<br>\";\necho multiply(-15,-15);\n\
    echo \"<br>\";\necho multiply(-15,-15);\necho \"<br>\";\necho multiply(-15,-15);\n\
    echo \"<br>\";\necho multiply(-15,-15);\necho \"<br>\";\necho multiply(-15,-15);\n\
    echo \"<br>\";\necho multiply(-15,-15);\necho \"<br>\";\necho multiply(-\nfunction\
    \ candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n\
    }\n\ntest();"
  stdout: ''
  stderr: "PHP Parse error:  syntax error, unexpected identifier \"candidate\", expecting\
    \ \"(\" in /tmp/tmpn3a52ghv.php on line 85\n"
  exit_code: 255
  status: SyntaxError
- program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// multiply(148, 412) should return 16.\n// multiply(19, 28) should\
    \ return 72.\n// multiply(2020, 1851) should return 0.\n// multiply(14,-15) should\
    \ return 20.\nfunction multiply($a, $b) {\n    $a = $a % 10;\n    $b = $b % 10;\n\
    \    return $a * $b;\n}\n\nfunction candidate(...$args) {\n    return multiply(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(148, 412) !== 16) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpwzq10wu8.php:24\n\
    Stack trace:\n#0 /tmp/tmpwzq10wu8.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpwzq10wu8.php\
    \ on line 24\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// multiply(148, 412) should return 16.\n// multiply(19, 28) should\
    \ return 72.\n// multiply(2020, 1851) should return 0.\n// multiply(14,-15) should\
    \ return 20.\nfunction multiply($a, $b) {\n    return ($a % 10) * ($b % 10);\n\
    }\n\nfunction candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmprsxrtcpa.php:22\n\
    Stack trace:\n#0 /tmp/tmprsxrtcpa.php(29): test()\n#1 {main}\n  thrown in /tmp/tmprsxrtcpa.php\
    \ on line 22\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// multiply(148, 412) should return 16.\n// multiply(19, 28) should\
    \ return 72.\n// multiply(2020, 1851) should return 0.\n// multiply(14,-15) should\
    \ return 20.\nfunction multiply($a, $b) {\n    return ($a % 10) * ($b % 10);\n\
    }\n\necho multiply(148, 412);\necho \"<br>\";\necho multiply(19, 28);\necho \"\
    <br>\";\necho multiply(2020, 1851);\necho \"<br>\";\necho multiply(14,-15);\n\
    echo \"<br>\";\nfunction candidate(...$args) {\n    return multiply(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(148, 412) !== 16) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: 16<br>72<br>0<br>-20<br>
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpbpp5ozxw.php:30\n\
    Stack trace:\n#0 /tmp/tmpbpp5ozxw.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpbpp5ozxw.php\
    \ on line 30\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// multiply(148, 412) should return 16.\n// multiply(19, 28) should\
    \ return 72.\n// multiply(2020, 1851) should return 0.\n// multiply(14,-15) should\
    \ return 20.\nfunction multiply($a, $b) {\n    return ($a % 10) * ($b % 10);\n\
    }\n\nfunction candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp8020wfll.php:22\n\
    Stack trace:\n#0 /tmp/tmp8020wfll.php(29): test()\n#1 {main}\n  thrown in /tmp/tmp8020wfll.php\
    \ on line 22\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// multiply(148, 412) should return 16.\n// multiply(19, 28) should\
    \ return 72.\n// multiply(2020, 1851) should return 0.\n// multiply(14,-15) should\
    \ return 20.\nfunction multiply($a, $b) {\n    $a = $a % 10;\n    $b = $b % 10;\n\
    \    return $a * $b;\n}\n\nfunction candidate(...$args) {\n    return multiply(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(148, 412) !== 16) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp04_1oyoh.php:24\n\
    Stack trace:\n#0 /tmp/tmp04_1oyoh.php(31): test()\n#1 {main}\n  thrown in /tmp/tmp04_1oyoh.php\
    \ on line 24\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// multiply(148, 412) should return 16.\n// multiply(19, 28) should\
    \ return 72.\n// multiply(2020, 1851) should return 0.\n// multiply(14,-15) should\
    \ return 20.\nfunction multiply($a, $b) {\n    $a = (string)$a;\n    $b = (string)$b;\n\
    \    $a = $a[strlen($a)-1];\n    $b = $b[strlen($b)-1];\n    return $a * $b;\n\
    }\n\nfunction candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// multiply(148, 412) should return 16.\n// multiply(19, 28) should\
    \ return 72.\n// multiply(2020, 1851) should return 0.\n// multiply(14,-15) should\
    \ return 20.\nfunction multiply($a, $b) {\n    $a = $a % 10;\n    $b = $b % 10;\n\
    \    return $a * $b;\n}\n\necho multiply(148, 412);\necho \"\\n\";\necho multiply(19,\
    \ 28);\necho \"\\n\";\necho multiply(2020, 1851);\necho \"\\n\";\necho multiply(14,-15);\n\
    echo \"\\n\";\nfunction candidate(...$args) {\n    return multiply(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(148, 412) !== 16) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "16\n72\n0\n-20\n"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpewss20v0.php:32\n\
    Stack trace:\n#0 /tmp/tmpewss20v0.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpewss20v0.php\
    \ on line 32\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// multiply(148, 412) should return 16.\n// multiply(19, 28) should\
    \ return 72.\n// multiply(2020, 1851) should return 0.\n// multiply(14,-15) should\
    \ return 20.\nfunction multiply($a, $b) {\n    $a = (string)$a;\n    $b = (string)$b;\n\
    \    $a = $a[strlen($a)-1];\n    $b = $b[strlen($b)-1];\n    return $a * $b;\n\
    }\n\nfunction candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// multiply(148, 412) should return 16.\n// multiply(19, 28) should\
    \ return 72.\n// multiply(2020, 1851) should return 0.\n// multiply(14,-15) should\
    \ return 20.\nfunction multiply($a, $b) {\n  $a = abs($a);\n  $b = abs($b);\n\
    \  $a = $a % 10;\n  $b = $b % 10;\n  return $a * $b;\n}\nfunction candidate(...$args)\
    \ {\n    return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148,\
    \ 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19,\
    \ 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020,\
    \ 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14,\
    \ -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76,\
    \ 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17,\
    \ 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0,\
    \ 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// multiply(148, 412) should return 16.\n// multiply(19, 28) should\
    \ return 72.\n// multiply(2020, 1851) should return 0.\n// multiply(14,-15) should\
    \ return 20.\nfunction multiply($a, $b) {\n    $a = (string)$a;\n    $b = (string)$b;\n\
    \    $a = $a[strlen($a)-1];\n    $b = $b[strlen($b)-1];\n    return $a * $b;\n\
    }\n\necho multiply(148, 412);\necho \"\\n\";\necho multiply(19, 28);\necho \"\\\
    n\";\necho multiply(2020, 1851);\necho \"\\n\";\necho multiply(14,-15);\necho\
    \ \"\\n\";\nfunction candidate(...$args) {\n    return multiply(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "16\n72\n0\n20\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// multiply(148, 412) should return 16.\n// multiply(19, 28) should\
    \ return 72.\n// multiply(2020, 1851) should return 0.\n// multiply(14,-15) should\
    \ return 20.\nfunction multiply($a, $b) {\n    $a = $a % 10;\n    $b = $b % 10;\n\
    \    return $a * $b;\n}\n\nfunction candidate(...$args) {\n    return multiply(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(148, 412) !== 16) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp8dngz_sz.php:24\n\
    Stack trace:\n#0 /tmp/tmp8dngz_sz.php(31): test()\n#1 {main}\n  thrown in /tmp/tmp8dngz_sz.php\
    \ on line 24\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// multiply(148, 412) should return 16.\n// multiply(19, 28) should\
    \ return 72.\n// multiply(2020, 1851) should return 0.\n// multiply(14,-15) should\
    \ return 20.\nfunction multiply($a, $b) {\n    $a = abs($a);\n    $b = abs($b);\n\
    \    return ($a % 10) * ($b % 10);\n}\n\nfunction candidate(...$args) {\n    return\
    \ multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148, 412)\
    \ !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19, 28)\
    \ !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020,\
    \ 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14,\
    \ -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76,\
    \ 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17,\
    \ 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0,\
    \ 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// multiply(148, 412) should return 16.\n// multiply(19, 28) should\
    \ return 72.\n// multiply(2020, 1851) should return 0.\n// multiply(14,-15) should\
    \ return 20.\nfunction multiply($a, $b) {\n  $a = (string)$a;\n  $b = (string)$b;\n\
    \  $a = $a[strlen($a)-1];\n  $b = $b[strlen($b)-1];\n  return $a * $b;\n}\n\n\
    function candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// multiply(148, 412) should return 16.\n// multiply(19, 28) should\
    \ return 72.\n// multiply(2020, 1851) should return 0.\n// multiply(14,-15) should\
    \ return 20.\nfunction multiply($a, $b) {\n    $a = abs($a);\n    $b = abs($b);\n\
    \    $a = $a % 10;\n    $b = $b % 10;\n    return $a * $b;\n}\nfunction candidate(...$args)\
    \ {\n    return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148,\
    \ 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19,\
    \ 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020,\
    \ 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14,\
    \ -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76,\
    \ 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17,\
    \ 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0,\
    \ 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// multiply(148, 412) should return 16.\n// multiply(19, 28) should\
    \ return 72.\n// multiply(2020, 1851) should return 0.\n// multiply(14,-15) should\
    \ return 20.\nfunction multiply($a, $b) {\n    return ($a % 10) * ($b % 10);\n\
    }\n\necho multiply(148, 412);\necho \"<br>\";\necho multiply(19, 28);\necho \"\
    <br>\";\necho multiply(2020, 1851);\necho \"<br>\";\necho multiply(14,-15);\n\
    echo \"<br>\";\nfunction candidate(...$args) {\n    return multiply(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(148, 412) !== 16) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: 16<br>72<br>0<br>-20<br>
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpx_7a1x9n.php:30\n\
    Stack trace:\n#0 /tmp/tmpx_7a1x9n.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpx_7a1x9n.php\
    \ on line 30\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// multiply(148, 412) should return 16.\n// multiply(19, 28) should\
    \ return 72.\n// multiply(2020, 1851) should return 0.\n// multiply(14,-15) should\
    \ return 20.\nfunction multiply($a, $b) {\n    $a = abs($a);\n    $b = abs($b);\n\
    \    $a = $a % 10;\n    $b = $b % 10;\n    return $a * $b;\n}\n\nfunction candidate(...$args)\
    \ {\n    return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148,\
    \ 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19,\
    \ 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020,\
    \ 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14,\
    \ -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76,\
    \ 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17,\
    \ 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0,\
    \ 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// multiply(148, 412) should return 16.\n// multiply(19, 28) should\
    \ return 72.\n// multiply(2020, 1851) should return 0.\n// multiply(14,-15) should\
    \ return 20.\nfunction multiply($a, $b) {\n  $a = (string)$a;\n  $b = (string)$b;\n\
    \  $a = $a[strlen($a)-1];\n  $b = $b[strlen($b)-1];\n  return $a * $b;\n}\n\n\
    echo multiply(148, 412);\necho \"\\n\";\necho multiply(19, 28);\necho \"\\n\"\
    ;\necho multiply(2020, 1851);\necho \"\\n\";\necho multiply(14,-15);\necho \"\\\
    n\";\necho multiply(0,0);\necho \"\\n\";\necho multiply(0,1);\necho \"\\n\";\n\
    echo multiply(1,0);\necho \"\\n\";\necho multiply(1,1);\necho \"\\n\";\necho multiply(1,2);\n\
    echo \"\\n\";\necho multiply(2,1);\necho \"\\n\";\necho multiply(2,2);\necho \"\
    \\n\";\necho multiply(2,3);\necho \"\\n\";\necho multiply(3,2);\necho \"\\n\"\
    ;\necho multiply(3,3);\necho \"\\n\";\necho multiply(3,4);\necho \"\\n\";\necho\
    \ multiply(4,3);\necho \"\\n\";\necho multiply(4,4);\necho \"\\n\";\necho multiply(4,5);\n\
    echo \"\\n\";\necho multiply(5,4);\necho \"\\n\";\necho multiply(5,5);\necho \"\
    \\n\";\necho multiply(5,6);\necho \"\\n\";\necho multiply(6,5);\necho \"\\n\"\
    ;\necho multiply(6,6);\necho \"\\n\";\necho multiply(6,7);\necho \"\\n\";\necho\
    \ multiply(7,6);\necho \"\\n\";\necho multiply(7,7);\necho \"\\n\";\necho multiply(7,8);\n\
    echo \"\\n\";\necho multiply(8,7);\necho \"\\n\";\necho multiply(8,8);\necho \"\
    \\n\";\necho multiply(8,9);\necho \"\\n\";\necho multiply(9,8);\necho \"\\n\"\
    ;\necho multiply(9,9);\necho \"\\n\";\necho multiply(9,10);\necho \"\\n\";\necho\
    \ multiply(10,9);\necho \"\\n\";\necho multiply(10\nfunction candidate(...$args)\
    \ {\n    return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148,\
    \ 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19,\
    \ 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020,\
    \ 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14,\
    \ -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76,\
    \ 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17,\
    \ 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0,\
    \ 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Parse error:  syntax error, unexpected token \"function\", expecting\
    \ \")\" in /tmp/tmplxxr2t3i.php on line 87\n"
  exit_code: 255
  status: SyntaxError
- program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// multiply(148, 412) should return 16.\n// multiply(19, 28) should\
    \ return 72.\n// multiply(2020, 1851) should return 0.\n// multiply(14,-15) should\
    \ return 20.\nfunction multiply($a, $b) {\n    $a = (string)$a;\n    $b = (string)$b;\n\
    \    $a = $a[strlen($a)-1];\n    $b = $b[strlen($b)-1];\n    return $a * $b;\n\
    }\n\nfunction candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// multiply(148, 412) should return 16.\n// multiply(19, 28) should\
    \ return 72.\n// multiply(2020, 1851) should return 0.\n// multiply(14,-15) should\
    \ return 20.\nfunction multiply($a, $b) {\n  $a = abs($a);\n  $b = abs($b);\n\
    \  $a = $a % 10;\n  $b = $b % 10;\n  return $a * $b;\n}\n\nfunction candidate(...$args)\
    \ {\n    return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148,\
    \ 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19,\
    \ 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020,\
    \ 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14,\
    \ -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76,\
    \ 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17,\
    \ 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0,\
    \ 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// multiply(148, 412) should return 16.\n// multiply(19, 28) should\
    \ return 72.\n// multiply(2020, 1851) should return 0.\n// multiply(14,-15) should\
    \ return 20.\nfunction multiply($a, $b) {\n    $a = (string)$a;\n    $b = (string)$b;\n\
    \    $a = $a[strlen($a)-1];\n    $b = $b[strlen($b)-1];\n    return $a * $b;\n\
    }\n\necho multiply(148, 412);\necho \"\\n\";\necho multiply(19, 28);\necho \"\\\
    n\";\necho multiply(2020, 1851);\necho \"\\n\";\necho multiply(14,-15);\necho\
    \ \"\\n\";\nfunction candidate(...$args) {\n    return multiply(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "16\n72\n0\n20\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// multiply(148, 412) should return 16.\n// multiply(19, 28) should\
    \ return 72.\n// multiply(2020, 1851) should return 0.\n// multiply(14,-15) should\
    \ return 20.\nfunction multiply($a, $b) {\n    $a = abs($a);\n    $b = abs($b);\n\
    \    $a = $a % 10;\n    $b = $b % 10;\n    return $a * $b;\n}\n\necho multiply(148,\
    \ 412);\necho '<br>';\necho multiply(19, 28);\necho '<br>';\necho multiply(2020,\
    \ 1851);\necho '<br>';\necho multiply(14,-15);\necho '<br>';\necho multiply(0,\
    \ 0);\necho '<br>';\necho multiply(0, 1);\necho '<br>';\necho multiply(1, 0);\n\
    echo '<br>';\necho multiply(0, -1);\necho '<br>';\necho multiply(-1, 0);\necho\
    \ '<br>';\necho multiply(1, 1);\necho '<br>';\necho multiply(1, -1);\necho '<br>';\n\
    echo multiply(-1, 1);\necho '<br>';\necho multiply(-1, -1);\necho '<br>';\necho\
    \ multiply(1, 2);\necho '<br>';\necho multiply(2, 1);\necho '<br>';\necho multiply(1,\
    \ -2);\necho '<br>';\necho multiply(-2, 1);\necho '<br>';\necho multiply(-1, 2);\n\
    echo '<br>';\necho multiply(2, -1);\necho '<br>';\necho multiply(-1, -2);\necho\
    \ '<br>';\necho multiply(-2, -1);\necho '<br>';\necho multiply(1, 3);\necho '<br>';\n\
    echo multiply(3, 1);\necho '<br>';\necho multiply(1, -3);\necho '<br>';\necho\
    \ multiply(-3, 1);\necho '<br>';\necho multiply(-1, 3);\necho '<br>';\necho multiply(3,\
    \ -1);\necho '<br>';\necho multiply(-1, -3);\necho '<br>';\necho multiply(-3,\
    \ -1);\necho '<br>';\necho multiply(1, 4);\necho '<br>';\nfunction candidate(...$args)\
    \ {\n    return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148,\
    \ 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19,\
    \ 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020,\
    \ 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14,\
    \ -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76,\
    \ 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17,\
    \ 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0,\
    \ 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: 16<br>72<br>0<br>20<br>0<br>0<br>0<br>0<br>0<br>1<br>1<br>1<br>1<br>2<br>2<br>2<br>2<br>2<br>2<br>2<br>2<br>3<br>3<br>3<br>3<br>3<br>3<br>3<br>3<br>4<br>
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// multiply(148, 412) should return 16.\n// multiply(19, 28) should\
    \ return 72.\n// multiply(2020, 1851) should return 0.\n// multiply(14,-15) should\
    \ return 20.\nfunction multiply($a, $b) {\n    $a = $a % 10;\n    $b = $b % 10;\n\
    \    return $a * $b;\n}\n\nfunction candidate(...$args) {\n    return multiply(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(148, 412) !== 16) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpzpfiqayq.php:24\n\
    Stack trace:\n#0 /tmp/tmpzpfiqayq.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpzpfiqayq.php\
    \ on line 24\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// multiply(148, 412) should return 16.\n// multiply(19, 28) should\
    \ return 72.\n// multiply(2020, 1851) should return 0.\n// multiply(14,-15) should\
    \ return 20.\nfunction multiply($a, $b) {\n    $a = $a % 10;\n    $b = $b % 10;\n\
    \    return $a * $b;\n}\necho multiply(148, 412);\necho \"<br>\";\necho multiply(19,\
    \ 28);\necho \"<br>\";\necho multiply(2020, 1851);\necho \"<br>\";\necho multiply(14,-15);\n\
    function candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: 16<br>72<br>0<br>-20
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpy52yi43u.php:30\n\
    Stack trace:\n#0 /tmp/tmpy52yi43u.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpy52yi43u.php\
    \ on line 30\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// multiply(148, 412) should return 16.\n// multiply(19, 28) should\
    \ return 72.\n// multiply(2020, 1851) should return 0.\n// multiply(14,-15) should\
    \ return 20.\nfunction multiply($a, $b) {\n    $a = (string)$a;\n    $b = (string)$b;\n\
    \    $a = $a[strlen($a)-1];\n    $b = $b[strlen($b)-1];\n    return $a * $b;\n\
    }\n\necho multiply(148, 412);\necho \"\\n\";\necho multiply(19, 28);\necho \"\\\
    n\";\necho multiply(2020, 1851);\necho \"\\n\";\necho multiply(14,-15);\necho\
    \ \"\\n\";\nfunction candidate(...$args) {\n    return multiply(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "16\n72\n0\n20\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// multiply(148, 412) should return 16.\n// multiply(19, 28) should\
    \ return 72.\n// multiply(2020, 1851) should return 0.\n// multiply(14,-15) should\
    \ return 20.\nfunction multiply($a, $b) {\n    $a = $a % 10;\n    $b = $b % 10;\n\
    \    return $a * $b;\n}\n\necho multiply(148, 412);\necho \"\\n\";\necho multiply(19,\
    \ 28);\necho \"\\n\";\necho multiply(2020, 1851);\necho \"\\n\";\necho multiply(14,-15);\n\
    echo \"\\n\";\nfunction candidate(...$args) {\n    return multiply(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(148, 412) !== 16) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "16\n72\n0\n-20\n"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmphnxjj_gk.php:32\n\
    Stack trace:\n#0 /tmp/tmphnxjj_gk.php(39): test()\n#1 {main}\n  thrown in /tmp/tmphnxjj_gk.php\
    \ on line 32\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// multiply(148, 412) should return 16.\n// multiply(19, 28) should\
    \ return 72.\n// multiply(2020, 1851) should return 0.\n// multiply(14,-15) should\
    \ return 20.\nfunction multiply($a, $b) {\n    $a = abs($a);\n    $b = abs($b);\n\
    \    $a = $a % 10;\n    $b = $b % 10;\n    return $a * $b;\n}\nfunction candidate(...$args)\
    \ {\n    return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148,\
    \ 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19,\
    \ 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020,\
    \ 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14,\
    \ -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76,\
    \ 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17,\
    \ 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0,\
    \ 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// multiply(148, 412) should return 16.\n// multiply(19, 28) should\
    \ return 72.\n// multiply(2020, 1851) should return 0.\n// multiply(14,-15) should\
    \ return 20.\nfunction multiply($a, $b) {\n    return ($a % 10) * ($b % 10);\n\
    }\n\nfunction candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp3a1hshe4.php:22\n\
    Stack trace:\n#0 /tmp/tmp3a1hshe4.php(29): test()\n#1 {main}\n  thrown in /tmp/tmp3a1hshe4.php\
    \ on line 22\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// multiply(148, 412) should return 16.\n// multiply(19, 28) should\
    \ return 72.\n// multiply(2020, 1851) should return 0.\n// multiply(14,-15) should\
    \ return 20.\nfunction multiply($a, $b) {\n    $a = $a % 10;\n    $b = $b % 10;\n\
    \    return $a * $b;\n}\n\necho multiply(148, 412);\necho \"\\n\";\necho multiply(19,\
    \ 28);\necho \"\\n\";\necho multiply(2020, 1851);\necho \"\\n\";\necho multiply(14,-15);\n\
    echo \"\\n\";\nfunction candidate(...$args) {\n    return multiply(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(148, 412) !== 16) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "16\n72\n0\n-20\n"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpik7wwj9v.php:32\n\
    Stack trace:\n#0 /tmp/tmpik7wwj9v.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpik7wwj9v.php\
    \ on line 32\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// multiply(148, 412) should return 16.\n// multiply(19, 28) should\
    \ return 72.\n// multiply(2020, 1851) should return 0.\n// multiply(14,-15) should\
    \ return 20.\nfunction multiply($a, $b) {\n    $a = $a % 10;\n    $b = $b % 10;\n\
    \    return $a * $b;\n}\n\nfunction candidate(...$args) {\n    return multiply(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(148, 412) !== 16) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmplke9iv24.php:24\n\
    Stack trace:\n#0 /tmp/tmplke9iv24.php(31): test()\n#1 {main}\n  thrown in /tmp/tmplke9iv24.php\
    \ on line 24\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// multiply(148, 412) should return 16.\n// multiply(19, 28) should\
    \ return 72.\n// multiply(2020, 1851) should return 0.\n// multiply(14,-15) should\
    \ return 20.\nfunction multiply($a, $b) {\n    $a = abs($a);\n    $b = abs($b);\n\
    \    return ($a % 10) * ($b % 10);\n}\n\necho multiply(148, 412) . \"\\n\";\n\
    echo multiply(19, 28) . \"\\n\";\necho multiply(2020, 1851) . \"\\n\";\necho multiply(14,-15)\
    \ . \"\\n\";\nfunction candidate(...$args) {\n    return multiply(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(148, 412) !== 16) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "16\n72\n0\n20\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// multiply(148, 412) should return 16.\n// multiply(19, 28) should\
    \ return 72.\n// multiply(2020, 1851) should return 0.\n// multiply(14,-15) should\
    \ return 20.\nfunction multiply($a, $b) {\n    $a = (string) $a;\n    $b = (string)\
    \ $b;\n    $a = $a[strlen($a) - 1];\n    $b = $b[strlen($b) - 1];\n    return\
    \ $a * $b;\n}\n\nfunction candidate(...$args) {\n    return multiply(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(148, 412) !== 16) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// multiply(148, 412) should return 16.\n// multiply(19, 28) should\
    \ return 72.\n// multiply(2020, 1851) should return 0.\n// multiply(14,-15) should\
    \ return 20.\nfunction multiply($a, $b) {\n    $a = $a % 10;\n    $b = $b % 10;\n\
    \    return $a * $b;\n}\nfunction candidate(...$args) {\n    return multiply(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(148, 412) !== 16) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp7bfhqgo_.php:23\n\
    Stack trace:\n#0 /tmp/tmp7bfhqgo_.php(30): test()\n#1 {main}\n  thrown in /tmp/tmp7bfhqgo_.php\
    \ on line 23\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// multiply(148, 412) should return 16.\n// multiply(19, 28) should\
    \ return 72.\n// multiply(2020, 1851) should return 0.\n// multiply(14,-15) should\
    \ return 20.\nfunction multiply($a, $b) {\n    $a = abs($a);\n    $b = abs($b);\n\
    \    $a = $a % 10;\n    $b = $b % 10;\n    return $a * $b;\n}\n\nfunction candidate(...$args)\
    \ {\n    return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148,\
    \ 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19,\
    \ 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020,\
    \ 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14,\
    \ -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76,\
    \ 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17,\
    \ 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0,\
    \ 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// multiply(148, 412) should return 16.\n// multiply(19, 28) should\
    \ return 72.\n// multiply(2020, 1851) should return 0.\n// multiply(14,-15) should\
    \ return 20.\nfunction multiply($a, $b) {\n    $a = abs($a);\n    $b = abs($b);\n\
    \    $a = $a % 10;\n    $b = $b % 10;\n    return $a * $b;\n}\n\nfunction candidate(...$args)\
    \ {\n    return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148,\
    \ 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19,\
    \ 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020,\
    \ 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14,\
    \ -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76,\
    \ 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17,\
    \ 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0,\
    \ 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// multiply(148, 412) should return 16.\n// multiply(19, 28) should\
    \ return 72.\n// multiply(2020, 1851) should return 0.\n// multiply(14,-15) should\
    \ return 20.\nfunction multiply($a, $b) {\n    $a = $a % 10;\n    $b = $b % 10;\n\
    \    return $a * $b;\n}\n\nfunction candidate(...$args) {\n    return multiply(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(148, 412) !== 16) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpcmo2gj7b.php:24\n\
    Stack trace:\n#0 /tmp/tmpcmo2gj7b.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpcmo2gj7b.php\
    \ on line 24\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// multiply(148, 412) should return 16.\n// multiply(19, 28) should\
    \ return 72.\n// multiply(2020, 1851) should return 0.\n// multiply(14,-15) should\
    \ return 20.\nfunction multiply($a, $b) {\n    $a = $a % 10;\n    $b = $b % 10;\n\
    \    return $a * $b;\n}\n\necho multiply(148, 412);\necho \"\\n\";\necho multiply(19,\
    \ 28);\necho \"\\n\";\necho multiply(2020, 1851);\necho \"\\n\";\necho multiply(14,-15);\n\
    echo \"\\n\";\nfunction candidate(...$args) {\n    return multiply(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(148, 412) !== 16) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "16\n72\n0\n-20\n"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpuo_b6ozv.php:32\n\
    Stack trace:\n#0 /tmp/tmpuo_b6ozv.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpuo_b6ozv.php\
    \ on line 32\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// multiply(148, 412) should return 16.\n// multiply(19, 28) should\
    \ return 72.\n// multiply(2020, 1851) should return 0.\n// multiply(14,-15) should\
    \ return 20.\nfunction multiply($a, $b) {\n    $a = $a % 10;\n    $b = $b % 10;\n\
    \    return $a * $b;\n}\n\necho multiply(148, 412);\necho \"\\n\";\necho multiply(19,\
    \ 28);\necho \"\\n\";\necho multiply(2020, 1851);\necho \"\\n\";\necho multiply(14,-15);\n\
    echo \"\\n\";\nfunction candidate(...$args) {\n    return multiply(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(148, 412) !== 16) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "16\n72\n0\n-20\n"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmptqep32t2.php:32\n\
    Stack trace:\n#0 /tmp/tmptqep32t2.php(39): test()\n#1 {main}\n  thrown in /tmp/tmptqep32t2.php\
    \ on line 32\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// multiply(148, 412) should return 16.\n// multiply(19, 28) should\
    \ return 72.\n// multiply(2020, 1851) should return 0.\n// multiply(14,-15) should\
    \ return 20.\nfunction multiply($a, $b) {\n    $a = abs($a);\n    $b = abs($b);\n\
    \    $a = $a % 10;\n    $b = $b % 10;\n    return $a * $b;\n}\n\nfunction candidate(...$args)\
    \ {\n    return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148,\
    \ 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19,\
    \ 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020,\
    \ 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14,\
    \ -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76,\
    \ 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17,\
    \ 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0,\
    \ 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// multiply(148, 412) should return 16.\n// multiply(19, 28) should\
    \ return 72.\n// multiply(2020, 1851) should return 0.\n// multiply(14,-15) should\
    \ return 20.\nfunction multiply($a, $b) {\n    return ($a % 10) * ($b % 10);\n\
    }\n\nfunction candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpay4rp_tz.php:22\n\
    Stack trace:\n#0 /tmp/tmpay4rp_tz.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpay4rp_tz.php\
    \ on line 22\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// multiply(148, 412) should return 16.\n// multiply(19, 28) should\
    \ return 72.\n// multiply(2020, 1851) should return 0.\n// multiply(14,-15) should\
    \ return 20.\nfunction multiply($a, $b) {\n    $a = $a % 10;\n    $b = $b % 10;\n\
    \    return $a * $b;\n}\n\nfunction candidate(...$args) {\n    return multiply(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(148, 412) !== 16) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpjifn77fj.php:24\n\
    Stack trace:\n#0 /tmp/tmpjifn77fj.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpjifn77fj.php\
    \ on line 24\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// multiply(148, 412) should return 16.\n// multiply(19, 28) should\
    \ return 72.\n// multiply(2020, 1851) should return 0.\n// multiply(14,-15) should\
    \ return 20.\nfunction multiply($a, $b) {\n    $a = $a % 10;\n    $b = $b % 10;\n\
    \    return $a * $b;\n}\n\necho multiply(148, 412);\necho \"\\n\";\necho multiply(19,\
    \ 28);\necho \"\\n\";\necho multiply(2020, 1851);\necho \"\\n\";\necho multiply(14,-15);\n\
    echo \"\\n\";\nfunction candidate(...$args) {\n    return multiply(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(148, 412) !== 16) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "16\n72\n0\n-20\n"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpxa2gw_40.php:32\n\
    Stack trace:\n#0 /tmp/tmpxa2gw_40.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpxa2gw_40.php\
    \ on line 32\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// multiply(148, 412) should return 16.\n// multiply(19, 28) should\
    \ return 72.\n// multiply(2020, 1851) should return 0.\n// multiply(14,-15) should\
    \ return 20.\nfunction multiply($a, $b) {\n    return ($a % 10) * ($b % 10);\n\
    }\n\nfunction candidate(...$args) {\n    return multiply(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpfd46j_h2.php:22\n\
    Stack trace:\n#0 /tmp/tmpfd46j_h2.php(29): test()\n#1 {main}\n  thrown in /tmp/tmpfd46j_h2.php\
    \ on line 22\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// multiply(148, 412) should return 16.\n// multiply(19, 28) should\
    \ return 72.\n// multiply(2020, 1851) should return 0.\n// multiply(14,-15) should\
    \ return 20.\nfunction multiply($a, $b) {\n    $a = $a % 10;\n    $b = $b % 10;\n\
    \    return $a * $b;\n}\n\necho multiply(148, 412);\necho \"\\n\";\necho multiply(19,\
    \ 28);\necho \"\\n\";\necho multiply(2020, 1851);\necho \"\\n\";\necho multiply(14,-15);\n\
    echo \"\\n\";\nfunction candidate(...$args) {\n    return multiply(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(148, 412) !== 16) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "16\n72\n0\n-20\n"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp_f7wq5vq.php:32\n\
    Stack trace:\n#0 /tmp/tmp_f7wq5vq.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp_f7wq5vq.php\
    \ on line 32\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// multiply(148, 412) should return 16.\n// multiply(19, 28) should\
    \ return 72.\n// multiply(2020, 1851) should return 0.\n// multiply(14,-15) should\
    \ return 20.\nfunction multiply($a, $b) {\n    $a = $a % 10;\n    $b = $b % 10;\n\
    \    return $a * $b;\n}\n\nfunction candidate(...$args) {\n    return multiply(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(148, 412) !== 16) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpiuxm1pwb.php:24\n\
    Stack trace:\n#0 /tmp/tmpiuxm1pwb.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpiuxm1pwb.php\
    \ on line 24\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// multiply(148, 412) should return 16.\n// multiply(19, 28) should\
    \ return 72.\n// multiply(2020, 1851) should return 0.\n// multiply(14,-15) should\
    \ return 20.\nfunction multiply($a, $b) {\n    $a = $a % 10;\n    $b = $b % 10;\n\
    \    return $a * $b;\n}\nfunction candidate(...$args) {\n    return multiply(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(148, 412) !== 16) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp6ehgyw6z.php:23\n\
    Stack trace:\n#0 /tmp/tmp6ehgyw6z.php(30): test()\n#1 {main}\n  thrown in /tmp/tmp6ehgyw6z.php\
    \ on line 23\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// multiply(148, 412) should return 16.\n// multiply(19, 28) should\
    \ return 72.\n// multiply(2020, 1851) should return 0.\n// multiply(14,-15) should\
    \ return 20.\nfunction multiply($a, $b) {\n    $a = (string)$a;\n    $b = (string)$b;\n\
    \    $a = $a[strlen($a)-1];\n    $b = $b[strlen($b)-1];\n    return $a * $b;\n\
    }\necho multiply(148, 412);\necho \"\\n\";\necho multiply(19, 28);\necho \"\\\
    n\";\necho multiply(2020, 1851);\necho \"\\n\";\necho multiply(14,-15);\necho\
    \ \"\\n\";\nfunction candidate(...$args) {\n    return multiply(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "16\n72\n0\n20\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// multiply(148, 412) should return 16.\n// multiply(19, 28) should\
    \ return 72.\n// multiply(2020, 1851) should return 0.\n// multiply(14,-15) should\
    \ return 20.\nfunction multiply($a, $b) {\n    $a = $a % 10;\n    $b = $b % 10;\n\
    \    return $a * $b;\n}\n\nfunction candidate(...$args) {\n    return multiply(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(148, 412) !== 16) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpwylfhl12.php:24\n\
    Stack trace:\n#0 /tmp/tmpwylfhl12.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpwylfhl12.php\
    \ on line 24\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// multiply(148, 412) should return 16.\n// multiply(19, 28) should\
    \ return 72.\n// multiply(2020, 1851) should return 0.\n// multiply(14,-15) should\
    \ return 20.\nfunction multiply($a, $b) {\n    $a = abs($a);\n    $b = abs($b);\n\
    \    return ($a % 10) * ($b % 10);\n}\n\nfunction candidate(...$args) {\n    return\
    \ multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148, 412)\
    \ !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19, 28)\
    \ !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020,\
    \ 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14,\
    \ -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76,\
    \ 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17,\
    \ 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0,\
    \ 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// multiply(148, 412) should return 16.\n// multiply(19, 28) should\
    \ return 72.\n// multiply(2020, 1851) should return 0.\n// multiply(14,-15) should\
    \ return 20.\nfunction multiply($a, $b) {\n    $a = abs($a);\n    $b = abs($b);\n\
    \    $a = $a % 10;\n    $b = $b % 10;\n    return $a * $b;\n}\necho multiply(148,\
    \ 412);\necho \"<br>\";\necho multiply(19, 28);\necho \"<br>\";\necho multiply(2020,\
    \ 1851);\necho \"<br>\";\necho multiply(14,-15);\necho \"<br>\";\necho multiply(0,0);\n\
    echo \"<br>\";\necho multiply(0,1);\necho \"<br>\";\necho multiply(1,0);\necho\
    \ \"<br>\";\necho multiply(1,1);\necho \"<br>\";\necho multiply(1,2);\necho \"\
    <br>\";\necho multiply(2,1);\necho \"<br>\";\necho multiply(2,2);\necho \"<br>\"\
    ;\necho multiply(2,3);\necho \"<br>\";\necho multiply(3,2);\necho \"<br>\";\n\
    echo multiply(3,3);\necho \"<br>\";\necho multiply(3,4);\necho \"<br>\";\necho\
    \ multiply(4,3);\necho \"<br>\";\necho multiply(4,4);\necho \"<br>\";\necho multiply(4,5);\n\
    echo \"<br>\";\necho multiply(5,4);\necho \"<br>\";\necho multiply(5,5);\necho\
    \ \"<br>\";\necho multiply(5,6);\necho \"<br>\";\necho multiply(6,5);\necho \"\
    <br>\";\necho multiply(6,6);\necho \"<br>\";\necho multiply(6,7);\necho \"<br>\"\
    ;\necho multiply(7,6);\necho \"<br>\";\necho multiply(7,7);\necho \"<br>\";\n\
    echo multiply(7,8);\necho \"<br>\";\necho multiply(8,7);\necho \"<br>\";\necho\
    \ multiply(8,8);\necho \"<br>\";\necho multiply(8,9);\necho \"<br>\";\necho multiply(9,8);\n\
    echo \"<br>\";\necho multiply(9,9);\necho \"<br>\";\necho multiply(9,10);\necho\
    \ \"<br>\";\nfunction candidate(...$args) {\n    return multiply(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(148, 412) !== 16) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: 16<br>72<br>0<br>20<br>0<br>0<br>0<br>1<br>2<br>2<br>4<br>6<br>6<br>9<br>12<br>12<br>16<br>20<br>20<br>25<br>30<br>30<br>36<br>42<br>42<br>49<br>56<br>56<br>64<br>72<br>72<br>81<br>0<br>
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// multiply(148, 412) should return 16.\n// multiply(19, 28) should\
    \ return 72.\n// multiply(2020, 1851) should return 0.\n// multiply(14,-15) should\
    \ return 20.\nfunction multiply($a, $b) {\n    $a = $a % 10;\n    $b = $b % 10;\n\
    \    return $a * $b;\n}\n\necho multiply(148, 412);\necho \"<br>\";\necho multiply(19,\
    \ 28);\necho \"<br>\";\necho multiply(2020, 1851);\necho \"<br>\";\necho multiply(14,-15);\n\
    echo \"<br>\";\nfunction candidate(...$args) {\n    return multiply(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(148, 412) !== 16) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: 16<br>72<br>0<br>-20<br>
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpi8b5aukv.php:32\n\
    Stack trace:\n#0 /tmp/tmpi8b5aukv.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpi8b5aukv.php\
    \ on line 32\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// multiply(148, 412) should return 16.\n// multiply(19, 28) should\
    \ return 72.\n// multiply(2020, 1851) should return 0.\n// multiply(14,-15) should\
    \ return 20.\nfunction multiply($a, $b) {\n  $a = $a % 10;\n  $b = $b % 10;\n\
    \  return $a * $b;\n}\n\nfunction candidate(...$args) {\n    return multiply(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(148, 412) !== 16) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpx2hsjfjb.php:24\n\
    Stack trace:\n#0 /tmp/tmpx2hsjfjb.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpx2hsjfjb.php\
    \ on line 24\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// multiply(148, 412) should return 16.\n// multiply(19, 28) should\
    \ return 72.\n// multiply(2020, 1851) should return 0.\n// multiply(14,-15) should\
    \ return 20.\nfunction multiply($a, $b) {\n    $a = $a % 10;\n    $b = $b % 10;\n\
    \    return $a * $b;\n}\nfunction candidate(...$args) {\n    return multiply(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(148, 412) !== 16) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp8ib1dhp_.php:23\n\
    Stack trace:\n#0 /tmp/tmp8ib1dhp_.php(30): test()\n#1 {main}\n  thrown in /tmp/tmp8ib1dhp_.php\
    \ on line 23\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// multiply(148, 412) should return 16.\n// multiply(19, 28) should\
    \ return 72.\n// multiply(2020, 1851) should return 0.\n// multiply(14,-15) should\
    \ return 20.\nfunction multiply($a, $b) {\n    $a = $a % 10;\n    $b = $b % 10;\n\
    \    return $a * $b;\n}\nfunction candidate(...$args) {\n    return multiply(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(148, 412) !== 16) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp56rnk6du.php:23\n\
    Stack trace:\n#0 /tmp/tmp56rnk6du.php(30): test()\n#1 {main}\n  thrown in /tmp/tmp56rnk6du.php\
    \ on line 23\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// multiply(148, 412) should return 16.\n// multiply(19, 28) should\
    \ return 72.\n// multiply(2020, 1851) should return 0.\n// multiply(14,-15) should\
    \ return 20.\nfunction multiply($a, $b) {\n    $a = $a % 10;\n    $b = $b % 10;\n\
    \    return $a * $b;\n}\n\necho multiply(148, 412);\necho \"\\n\";\necho multiply(19,\
    \ 28);\necho \"\\n\";\necho multiply(2020, 1851);\necho \"\\n\";\necho multiply(14,-15);\n\
    echo \"\\n\";\nfunction candidate(...$args) {\n    return multiply(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(148, 412) !== 16) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "16\n72\n0\n-20\n"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpen74xorj.php:32\n\
    Stack trace:\n#0 /tmp/tmpen74xorj.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpen74xorj.php\
    \ on line 32\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// multiply(148, 412) should return 16.\n// multiply(19, 28) should\
    \ return 72.\n// multiply(2020, 1851) should return 0.\n// multiply(14,-15) should\
    \ return 20.\nfunction multiply($a, $b) {\n  $a = abs($a);\n  $b = abs($b);\n\
    \  $a = $a % 10;\n  $b = $b % 10;\n  return $a * $b;\n}\n\necho multiply(148,\
    \ 412);\necho \"\\n\";\necho multiply(19, 28);\necho \"\\n\";\necho multiply(2020,\
    \ 1851);\necho \"\\n\";\necho multiply(14,-15);\necho \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148,\
    \ 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19,\
    \ 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020,\
    \ 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14,\
    \ -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76,\
    \ 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17,\
    \ 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0,\
    \ 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "16\n72\n0\n20\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// multiply(148, 412) should return 16.\n// multiply(19, 28) should\
    \ return 72.\n// multiply(2020, 1851) should return 0.\n// multiply(14,-15) should\
    \ return 20.\nfunction multiply($a, $b) {\n    $a = abs($a);\n    $b = abs($b);\n\
    \    $a = $a % 10;\n    $b = $b % 10;\n    return $a * $b;\n}\n\nfunction candidate(...$args)\
    \ {\n    return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148,\
    \ 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19,\
    \ 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020,\
    \ 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14,\
    \ -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76,\
    \ 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17,\
    \ 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0,\
    \ 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// multiply(148, 412) should return 16.\n// multiply(19, 28) should\
    \ return 72.\n// multiply(2020, 1851) should return 0.\n// multiply(14,-15) should\
    \ return 20.\nfunction multiply($a, $b) {\n    $a = $a % 10;\n    $b = $b % 10;\n\
    \    return $a * $b;\n}\n\nfunction candidate(...$args) {\n    return multiply(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(148, 412) !== 16) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpojh2o640.php:24\n\
    Stack trace:\n#0 /tmp/tmpojh2o640.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpojh2o640.php\
    \ on line 24\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// multiply(148, 412) should return 16.\n// multiply(19, 28) should\
    \ return 72.\n// multiply(2020, 1851) should return 0.\n// multiply(14,-15) should\
    \ return 20.\nfunction multiply($a, $b) {\n    $a = abs($a);\n    $b = abs($b);\n\
    \    $a = $a % 10;\n    $b = $b % 10;\n    return $a * $b;\n}\n\necho multiply(148,\
    \ 412);\necho \"\\n\";\necho multiply(19, 28);\necho \"\\n\";\necho multiply(2020,\
    \ 1851);\necho \"\\n\";\necho multiply(14,-15);\necho \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148,\
    \ 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19,\
    \ 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020,\
    \ 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14,\
    \ -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76,\
    \ 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17,\
    \ 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0,\
    \ 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "16\n72\n0\n20\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// multiply(148, 412) should return 16.\n// multiply(19, 28) should\
    \ return 72.\n// multiply(2020, 1851) should return 0.\n// multiply(14,-15) should\
    \ return 20.\nfunction multiply($a, $b) {\n    $a = $a % 10;\n    $b = $b % 10;\n\
    \    return $a * $b;\n}\n\necho multiply(148, 412);\necho \"<br>\";\necho multiply(19,\
    \ 28);\necho \"<br>\";\necho multiply(2020, 1851);\necho \"<br>\";\necho multiply(14,-15);\n\
    echo \"<br>\";\nfunction candidate(...$args) {\n    return multiply(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(148, 412) !== 16) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: 16<br>72<br>0<br>-20<br>
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpt1wegvxx.php:32\n\
    Stack trace:\n#0 /tmp/tmpt1wegvxx.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpt1wegvxx.php\
    \ on line 32\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// multiply(148, 412) should return 16.\n// multiply(19, 28) should\
    \ return 72.\n// multiply(2020, 1851) should return 0.\n// multiply(14,-15) should\
    \ return 20.\nfunction multiply($a, $b) {\n    $a = abs($a);\n    $b = abs($b);\n\
    \    return ($a % 10) * ($b % 10);\n}\necho multiply(148, 412);\necho \"<br>\"\
    ;\necho multiply(19, 28);\necho \"<br>\";\necho multiply(2020, 1851);\necho \"\
    <br>\";\necho multiply(14,-15);\necho \"<br>\";\nfunction candidate(...$args)\
    \ {\n    return multiply(...$args);\n}\n\nfunction test(): void {\n    if (candidate(148,\
    \ 412) !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(19,\
    \ 28) !== 72) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2020,\
    \ 1851) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(14,\
    \ -15) !== 20) { throw new Exception(\"Test failed!\"); }\n    if (candidate(76,\
    \ 67) !== 42) { throw new Exception(\"Test failed!\"); }\n    if (candidate(17,\
    \ 27) !== 49) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0,\
    \ 1) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(0, 0)\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: 16<br>72<br>0<br>20<br>
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// multiply(148, 412) should return 16.\n// multiply(19, 28) should\
    \ return 72.\n// multiply(2020, 1851) should return 0.\n// multiply(14,-15) should\
    \ return 20.\nfunction multiply($a, $b) {\n  $a = $a % 10;\n  $b = $b % 10;\n\
    \  return $a * $b;\n}\n\nfunction candidate(...$args) {\n    return multiply(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(148, 412) !== 16) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmppzvmuked.php:24\n\
    Stack trace:\n#0 /tmp/tmppzvmuked.php(31): test()\n#1 {main}\n  thrown in /tmp/tmppzvmuked.php\
    \ on line 24\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// multiply(148, 412) should return 16.\n// multiply(19, 28) should\
    \ return 72.\n// multiply(2020, 1851) should return 0.\n// multiply(14,-15) should\
    \ return 20.\nfunction multiply($a, $b) {\n    $a = $a % 10;\n    $b = $b % 10;\n\
    \    return $a * $b;\n}\n\necho multiply(148, 412);\necho \"\\n\";\necho multiply(19,\
    \ 28);\necho \"\\n\";\necho multiply(2020, 1851);\necho \"\\n\";\necho multiply(14,-15);\n\
    echo \"\\n\";\nfunction candidate(...$args) {\n    return multiply(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(148, 412) !== 16) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "16\n72\n0\n-20\n"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpdelsfzi9.php:32\n\
    Stack trace:\n#0 /tmp/tmpdelsfzi9.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpdelsfzi9.php\
    \ on line 32\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// multiply(148, 412) should return 16.\n// multiply(19, 28) should\
    \ return 72.\n// multiply(2020, 1851) should return 0.\n// multiply(14,-15) should\
    \ return 20.\nfunction multiply($a, $b) {\n    $a = (string)$a;\n    $b = (string)$b;\n\
    \    $a = $a[strlen($a)-1];\n    $b = $b[strlen($b)-1];\n    return $a * $b;\n\
    }\n\necho multiply(148, 412);\necho \"\\n\";\necho multiply(19, 28);\necho \"\\\
    n\";\necho multiply(2020, 1851);\necho \"\\n\";\necho multiply(14,-15);\necho\
    \ \"\\n\";\nfunction candidate(...$args) {\n    return multiply(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(148, 412) !== 16) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: "16\n72\n0\n20\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Complete the function that takes two integers and returns \n\
    // the product of their unit digits.\n// Assume the input is always valid.\n//\
    \ Examples:\n// multiply(148, 412) should return 16.\n// multiply(19, 28) should\
    \ return 72.\n// multiply(2020, 1851) should return 0.\n// multiply(14,-15) should\
    \ return 20.\nfunction multiply($a, $b) {\n    return ($a % 10) * ($b % 10);\n\
    }\n\necho multiply(148, 412);\necho \"\\n\";\necho multiply(19, 28);\necho \"\\\
    n\";\necho multiply(2020, 1851);\necho \"\\n\";\necho multiply(14,-15);\necho\
    \ \"\\n\";\n\nfunction candidate(...$args) {\n    return multiply(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(148, 412) !== 16) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(19, 28) !== 72) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(2020, 1851) !== 0) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(14, -15) !== 20) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(76, 67) !== 42) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(17, 27) !== 49) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(0, 1) !== 0) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(0, 0) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "16\n72\n0\n-20\n"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpravclly8.php:31\n\
    Stack trace:\n#0 /tmp/tmpravclly8.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpravclly8.php\
    \ on line 31\n"
  exit_code: 255
  status: Exception

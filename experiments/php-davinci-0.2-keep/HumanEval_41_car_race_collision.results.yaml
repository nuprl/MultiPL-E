name: HumanEval_41_car_race_collision
language: php
results:
- program: "<?php\n// Imagine a road that's a perfectly straight infinitely long line.\n\
    // n cars are driving left to right;  simultaneously, a different set of n cars\n\
    // are driving right to left.   The two sets of cars start out being very far\
    \ from\n// each other.  All cars move in the same speed.  Two cars are said to\
    \ collide\n// when a car that's moving left to right hits a car that's moving\
    \ right to left.\n// However, the cars are infinitely sturdy and strong; as a\
    \ result, they continue moving\n// in their trajectory as if they did not collide.\n\
    // This function outputs the number of such collisions.\nfunction car_race_collision($n)\
    \ {\n    $left_to_right = range(1, $n);\n    $right_to_left = range($n, 1);\n\
    \    $collisions = 0;\n    $i = 0;\n    $j = 0;\n    while ($i < $n && $j < $n)\
    \ {\n        if ($left_to_right[$i] < $right_to_left[$j]) {\n            $i++;\n\
    \        } else if ($left_to_right[$i] > $right_to_left[$j]) {\n            $j++;\n\
    \        } else {\n            $collisions++;\n            $i++;\n           \
    \ $j++;\n        }\n    }\n    return $collisions;\n}\n\nfunction candidate(...$args)\
    \ {\n    return car_race_collision(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(2) !== 4) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(3) !== 9) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !==\
    \ 64) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 100)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpbluzms2n.php:35\n\
    Stack trace:\n#0 /tmp/tmpbluzms2n.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpbluzms2n.php\
    \ on line 35\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Imagine a road that's a perfectly straight infinitely long line.\n\
    // n cars are driving left to right;  simultaneously, a different set of n cars\n\
    // are driving right to left.   The two sets of cars start out being very far\
    \ from\n// each other.  All cars move in the same speed.  Two cars are said to\
    \ collide\n// when a car that's moving left to right hits a car that's moving\
    \ right to left.\n// However, the cars are infinitely sturdy and strong; as a\
    \ result, they continue moving\n// in their trajectory as if they did not collide.\n\
    // This function outputs the number of such collisions.\nfunction car_race_collision($n)\
    \ {\n    $left_to_right = range(1, $n);\n    $right_to_left = range($n, 1);\n\
    \    $collisions = 0;\n    for ($i = 0; $i < $n; $i++) {\n        for ($j = 0;\
    \ $j < $n; $j++) {\n            if ($left_to_right[$i] == $right_to_left[$j])\
    \ {\n                $collisions++;\n            }\n        }\n    }\n    return\
    \ $collisions;\n}\n\nfunction candidate(...$args) {\n    return car_race_collision(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== 9) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4) !== 16) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(8) !== 64) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(10) !== 100) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp1yufguts.php:29\n\
    Stack trace:\n#0 /tmp/tmp1yufguts.php(36): test()\n#1 {main}\n  thrown in /tmp/tmp1yufguts.php\
    \ on line 29\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Imagine a road that's a perfectly straight infinitely long line.\n\
    // n cars are driving left to right;  simultaneously, a different set of n cars\n\
    // are driving right to left.   The two sets of cars start out being very far\
    \ from\n// each other.  All cars move in the same speed.  Two cars are said to\
    \ collide\n// when a car that's moving left to right hits a car that's moving\
    \ right to left.\n// However, the cars are infinitely sturdy and strong; as a\
    \ result, they continue moving\n// in their trajectory as if they did not collide.\n\
    // This function outputs the number of such collisions.\nfunction car_race_collision($n)\
    \ {\n    $left_to_right = [];\n    $right_to_left = [];\n    for ($i = 0; $i <\
    \ $n; $i++) {\n        $left_to_right[] = $i;\n        $right_to_left[] = $i;\n\
    \    }\n    $collisions = 0;\n    while (count($left_to_right) > 0 && count($right_to_left)\
    \ > 0) {\n        $left_to_right_car = array_shift($left_to_right);\n        $right_to_left_car\
    \ = array_shift($right_to_left);\n        if ($left_to_right_car == $right_to_left_car)\
    \ {\n            $collisions++;\n        }\n    }\n    return $collisions;\n}\n\
    \nfunction candidate(...$args) {\n    return car_race_collision(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(2) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== 9) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4) !== 16) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(8) !== 64) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(10) !== 100) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpd2o4af5x.php:33\n\
    Stack trace:\n#0 /tmp/tmpd2o4af5x.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpd2o4af5x.php\
    \ on line 33\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Imagine a road that's a perfectly straight infinitely long line.\n\
    // n cars are driving left to right;  simultaneously, a different set of n cars\n\
    // are driving right to left.   The two sets of cars start out being very far\
    \ from\n// each other.  All cars move in the same speed.  Two cars are said to\
    \ collide\n// when a car that's moving left to right hits a car that's moving\
    \ right to left.\n// However, the cars are infinitely sturdy and strong; as a\
    \ result, they continue moving\n// in their trajectory as if they did not collide.\n\
    // This function outputs the number of such collisions.\nfunction car_race_collision($n)\
    \ {\n    $collisions = 0;\n    $left_to_right = range(1, $n);\n    $right_to_left\
    \ = range($n, 1);\n    for ($i = 0; $i < $n; $i++) {\n        for ($j = 0; $j\
    \ < $n; $j++) {\n            if ($left_to_right[$i] == $right_to_left[$j]) {\n\
    \                $collisions++;\n            }\n        }\n    }\n    return $collisions;\n\
    }\n\nfunction candidate(...$args) {\n    return car_race_collision(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== 9) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4) !== 16) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(8) !== 64) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(10) !== 100) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpky5sqlze.php:29\n\
    Stack trace:\n#0 /tmp/tmpky5sqlze.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpky5sqlze.php\
    \ on line 29\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Imagine a road that's a perfectly straight infinitely long line.\n\
    // n cars are driving left to right;  simultaneously, a different set of n cars\n\
    // are driving right to left.   The two sets of cars start out being very far\
    \ from\n// each other.  All cars move in the same speed.  Two cars are said to\
    \ collide\n// when a car that's moving left to right hits a car that's moving\
    \ right to left.\n// However, the cars are infinitely sturdy and strong; as a\
    \ result, they continue moving\n// in their trajectory as if they did not collide.\n\
    // This function outputs the number of such collisions.\nfunction car_race_collision($n)\
    \ {\n    $collisions = 0;\n    $left_to_right = range(1, $n);\n    $right_to_left\
    \ = range($n, 1);\n    for ($i = 0; $i < $n; $i++) {\n        for ($j = 0; $j\
    \ < $n; $j++) {\n            if ($left_to_right[$i] == $right_to_left[$j]) {\n\
    \                $collisions++;\n            }\n        }\n    }\n    return $collisions;\n\
    }\n\nfunction candidate(...$args) {\n    return car_race_collision(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== 9) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4) !== 16) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(8) !== 64) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(10) !== 100) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmps4kw01s0.php:29\n\
    Stack trace:\n#0 /tmp/tmps4kw01s0.php(36): test()\n#1 {main}\n  thrown in /tmp/tmps4kw01s0.php\
    \ on line 29\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Imagine a road that's a perfectly straight infinitely long line.\n\
    // n cars are driving left to right;  simultaneously, a different set of n cars\n\
    // are driving right to left.   The two sets of cars start out being very far\
    \ from\n// each other.  All cars move in the same speed.  Two cars are said to\
    \ collide\n// when a car that's moving left to right hits a car that's moving\
    \ right to left.\n// However, the cars are infinitely sturdy and strong; as a\
    \ result, they continue moving\n// in their trajectory as if they did not collide.\n\
    // This function outputs the number of such collisions.\nfunction car_race_collision($n)\
    \ {\n    $left = array();\n    $right = array();\n    for ($i = 0; $i < $n; $i++)\
    \ {\n        $left[] = $i;\n        $right[] = $i;\n    }\n    $collision = 0;\n\
    \    while (count($left) > 0 && count($right) > 0) {\n        $left_car = array_shift($left);\n\
    \        $right_car = array_pop($right);\n        if ($left_car == $right_car)\
    \ {\n            $collision++;\n        }\n    }\n    return $collision;\n}\n\n\
    function candidate(...$args) {\n    return car_race_collision(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(2) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== 9) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4) !== 16) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(8) !== 64) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(10) !== 100) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp8fwb6tmz.php:33\n\
    Stack trace:\n#0 /tmp/tmp8fwb6tmz.php(40): test()\n#1 {main}\n  thrown in /tmp/tmp8fwb6tmz.php\
    \ on line 33\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Imagine a road that's a perfectly straight infinitely long line.\n\
    // n cars are driving left to right;  simultaneously, a different set of n cars\n\
    // are driving right to left.   The two sets of cars start out being very far\
    \ from\n// each other.  All cars move in the same speed.  Two cars are said to\
    \ collide\n// when a car that's moving left to right hits a car that's moving\
    \ right to left.\n// However, the cars are infinitely sturdy and strong; as a\
    \ result, they continue moving\n// in their trajectory as if they did not collide.\n\
    // This function outputs the number of such collisions.\nfunction car_race_collision($n)\
    \ {\n    $left_to_right = range(1, $n);\n    $right_to_left = range($n, 1);\n\
    \    $collisions = 0;\n    for ($i = 0; $i < $n; $i++) {\n        for ($j = 0;\
    \ $j < $n; $j++) {\n            if ($left_to_right[$i] == $right_to_left[$j])\
    \ {\n                $collisions++;\n            }\n        }\n    }\n    return\
    \ $collisions;\n}\n\nfunction candidate(...$args) {\n    return car_race_collision(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== 9) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4) !== 16) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(8) !== 64) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(10) !== 100) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp0yf_5p8r.php:29\n\
    Stack trace:\n#0 /tmp/tmp0yf_5p8r.php(36): test()\n#1 {main}\n  thrown in /tmp/tmp0yf_5p8r.php\
    \ on line 29\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Imagine a road that's a perfectly straight infinitely long line.\n\
    // n cars are driving left to right;  simultaneously, a different set of n cars\n\
    // are driving right to left.   The two sets of cars start out being very far\
    \ from\n// each other.  All cars move in the same speed.  Two cars are said to\
    \ collide\n// when a car that's moving left to right hits a car that's moving\
    \ right to left.\n// However, the cars are infinitely sturdy and strong; as a\
    \ result, they continue moving\n// in their trajectory as if they did not collide.\n\
    // This function outputs the number of such collisions.\nfunction car_race_collision($n)\
    \ {\n    $left_to_right = [];\n    $right_to_left = [];\n    for ($i = 0; $i <\
    \ $n; $i++) {\n        $left_to_right[] = $i;\n        $right_to_left[] = $i;\n\
    \    }\n    $collisions = 0;\n    while (count($left_to_right) > 0 && count($right_to_left)\
    \ > 0) {\n        $left_car = array_shift($left_to_right);\n        $right_car\
    \ = array_shift($right_to_left);\n        if ($left_car === $right_car) {\n  \
    \          $collisions++;\n        } else {\n            $left_to_right[] = $left_car;\n\
    \            $right_to_left[] = $right_car;\n        }\n    }\n    return $collisions;\n\
    }\n\nfunction candidate(...$args) {\n    return car_race_collision(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== 9) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4) !== 16) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(8) !== 64) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(10) !== 100) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp7zzjxy1k.php:36\n\
    Stack trace:\n#0 /tmp/tmp7zzjxy1k.php(43): test()\n#1 {main}\n  thrown in /tmp/tmp7zzjxy1k.php\
    \ on line 36\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Imagine a road that's a perfectly straight infinitely long line.\n\
    // n cars are driving left to right;  simultaneously, a different set of n cars\n\
    // are driving right to left.   The two sets of cars start out being very far\
    \ from\n// each other.  All cars move in the same speed.  Two cars are said to\
    \ collide\n// when a car that's moving left to right hits a car that's moving\
    \ right to left.\n// However, the cars are infinitely sturdy and strong; as a\
    \ result, they continue moving\n// in their trajectory as if they did not collide.\n\
    // This function outputs the number of such collisions.\nfunction car_race_collision($n)\
    \ {\n    $collisions = 0;\n    $left_to_right = range(1, $n);\n    $right_to_left\
    \ = range($n, 1);\n    $left_to_right_index = 0;\n    $right_to_left_index = 0;\n\
    \    while ($left_to_right_index < $n && $right_to_left_index < $n) {\n      \
    \  if ($left_to_right[$left_to_right_index] < $right_to_left[$right_to_left_index])\
    \ {\n            $left_to_right_index++;\n        } else {\n            $right_to_left_index++;\n\
    \            $collisions += $left_to_right_index;\n        }\n    }\n    return\
    \ $collisions;\n}\n\nfunction candidate(...$args) {\n    return car_race_collision(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== 9) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4) !== 16) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(8) !== 64) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(10) !== 100) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpyam4cfdd.php:32\n\
    Stack trace:\n#0 /tmp/tmpyam4cfdd.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpyam4cfdd.php\
    \ on line 32\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Imagine a road that's a perfectly straight infinitely long line.\n\
    // n cars are driving left to right;  simultaneously, a different set of n cars\n\
    // are driving right to left.   The two sets of cars start out being very far\
    \ from\n// each other.  All cars move in the same speed.  Two cars are said to\
    \ collide\n// when a car that's moving left to right hits a car that's moving\
    \ right to left.\n// However, the cars are infinitely sturdy and strong; as a\
    \ result, they continue moving\n// in their trajectory as if they did not collide.\n\
    // This function outputs the number of such collisions.\nfunction car_race_collision($n)\
    \ {\n    $collisions = 0;\n    $left_to_right = range(1, $n);\n    $right_to_left\
    \ = range($n, 1);\n    for ($i = 0; $i < $n; $i++) {\n        for ($j = 0; $j\
    \ < $n; $j++) {\n            if ($left_to_right[$i] == $right_to_left[$j]) {\n\
    \                $collisions++;\n            }\n        }\n    }\n    return $collisions;\n\
    }\n\nfunction candidate(...$args) {\n    return car_race_collision(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== 9) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4) !== 16) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(8) !== 64) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(10) !== 100) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpcz7her3s.php:29\n\
    Stack trace:\n#0 /tmp/tmpcz7her3s.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpcz7her3s.php\
    \ on line 29\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Imagine a road that's a perfectly straight infinitely long line.\n\
    // n cars are driving left to right;  simultaneously, a different set of n cars\n\
    // are driving right to left.   The two sets of cars start out being very far\
    \ from\n// each other.  All cars move in the same speed.  Two cars are said to\
    \ collide\n// when a car that's moving left to right hits a car that's moving\
    \ right to left.\n// However, the cars are infinitely sturdy and strong; as a\
    \ result, they continue moving\n// in their trajectory as if they did not collide.\n\
    // This function outputs the number of such collisions.\nfunction car_race_collision($n)\
    \ {\n  $left_to_right = array();\n  $right_to_left = array();\n  for ($i = 0;\
    \ $i < $n; $i++) {\n    $left_to_right[] = $i;\n    $right_to_left[] = $i;\n \
    \ }\n  $collisions = 0;\n  while (count($left_to_right) > 0 && count($right_to_left)\
    \ > 0) {\n    $left_to_right_car = array_shift($left_to_right);\n    $right_to_left_car\
    \ = array_shift($right_to_left);\n    if ($left_to_right_car == $right_to_left_car)\
    \ {\n      $collisions++;\n    }\n  }\n  return $collisions;\n}\n\nfunction candidate(...$args)\
    \ {\n    return car_race_collision(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(2) !== 4) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(3) !== 9) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !==\
    \ 64) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 100)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpmpjmk0u7.php:33\n\
    Stack trace:\n#0 /tmp/tmpmpjmk0u7.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpmpjmk0u7.php\
    \ on line 33\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Imagine a road that's a perfectly straight infinitely long line.\n\
    // n cars are driving left to right;  simultaneously, a different set of n cars\n\
    // are driving right to left.   The two sets of cars start out being very far\
    \ from\n// each other.  All cars move in the same speed.  Two cars are said to\
    \ collide\n// when a car that's moving left to right hits a car that's moving\
    \ right to left.\n// However, the cars are infinitely sturdy and strong; as a\
    \ result, they continue moving\n// in their trajectory as if they did not collide.\n\
    // This function outputs the number of such collisions.\nfunction car_race_collision($n)\
    \ {\n    // your code here\n}\n\nfunction candidate(...$args) {\n    return car_race_collision(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== 9) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4) !== 16) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(8) !== 64) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(10) !== 100) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpq_dchz1c.php:19\n\
    Stack trace:\n#0 /tmp/tmpq_dchz1c.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpq_dchz1c.php\
    \ on line 19\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Imagine a road that's a perfectly straight infinitely long line.\n\
    // n cars are driving left to right;  simultaneously, a different set of n cars\n\
    // are driving right to left.   The two sets of cars start out being very far\
    \ from\n// each other.  All cars move in the same speed.  Two cars are said to\
    \ collide\n// when a car that's moving left to right hits a car that's moving\
    \ right to left.\n// However, the cars are infinitely sturdy and strong; as a\
    \ result, they continue moving\n// in their trajectory as if they did not collide.\n\
    // This function outputs the number of such collisions.\nfunction car_race_collision($n)\
    \ {\n    $left_to_right = [];\n    $right_to_left = [];\n    for ($i = 0; $i <\
    \ $n; $i++) {\n        $left_to_right[] = $i;\n        $right_to_left[] = $i;\n\
    \    }\n    $collisions = 0;\n    while (count($left_to_right) > 0 && count($right_to_left)\
    \ > 0) {\n        $left_to_right_car = array_shift($left_to_right);\n        $right_to_left_car\
    \ = array_shift($right_to_left);\n        if ($left_to_right_car == $right_to_left_car)\
    \ {\n            $collisions++;\n        }\n    }\n    return $collisions;\n}\n\
    \nfunction candidate(...$args) {\n    return car_race_collision(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(2) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== 9) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4) !== 16) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(8) !== 64) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(10) !== 100) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp1y5xtlf9.php:33\n\
    Stack trace:\n#0 /tmp/tmp1y5xtlf9.php(40): test()\n#1 {main}\n  thrown in /tmp/tmp1y5xtlf9.php\
    \ on line 33\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Imagine a road that's a perfectly straight infinitely long line.\n\
    // n cars are driving left to right;  simultaneously, a different set of n cars\n\
    // are driving right to left.   The two sets of cars start out being very far\
    \ from\n// each other.  All cars move in the same speed.  Two cars are said to\
    \ collide\n// when a car that's moving left to right hits a car that's moving\
    \ right to left.\n// However, the cars are infinitely sturdy and strong; as a\
    \ result, they continue moving\n// in their trajectory as if they did not collide.\n\
    // This function outputs the number of such collisions.\nfunction car_race_collision($n)\
    \ {\n    $collisions = 0;\n    $left_to_right = [];\n    $right_to_left = [];\n\
    \    for ($i = 0; $i < $n; $i++) {\n        $left_to_right[] = $i;\n        $right_to_left[]\
    \ = $n - $i - 1;\n    }\n    for ($i = 0; $i < $n; $i++) {\n        for ($j =\
    \ 0; $j < $n; $j++) {\n            if ($left_to_right[$i] > $right_to_left[$j])\
    \ {\n                $collisions++;\n            }\n        }\n    }\n    return\
    \ $collisions;\n}\n\nfunction candidate(...$args) {\n    return car_race_collision(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== 9) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4) !== 16) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(8) !== 64) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(10) !== 100) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpa7d3eeia.php:33\n\
    Stack trace:\n#0 /tmp/tmpa7d3eeia.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpa7d3eeia.php\
    \ on line 33\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Imagine a road that's a perfectly straight infinitely long line.\n\
    // n cars are driving left to right;  simultaneously, a different set of n cars\n\
    // are driving right to left.   The two sets of cars start out being very far\
    \ from\n// each other.  All cars move in the same speed.  Two cars are said to\
    \ collide\n// when a car that's moving left to right hits a car that's moving\
    \ right to left.\n// However, the cars are infinitely sturdy and strong; as a\
    \ result, they continue moving\n// in their trajectory as if they did not collide.\n\
    // This function outputs the number of such collisions.\nfunction car_race_collision($n)\
    \ {\n    $left = 0;\n    $right = 0;\n    $collision = 0;\n    while ($left <\
    \ $n && $right < $n) {\n        if ($left == $right) {\n            $collision++;\n\
    \            $left++;\n            $right++;\n        } else if ($left < $right)\
    \ {\n            $left++;\n        } else {\n            $right++;\n        }\n\
    \    }\n    return $collision;\n}\n\nfunction candidate(...$args) {\n    return\
    \ car_race_collision(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !==\
    \ 9) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 16)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 64) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 100) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp453y1l4o.php:33\n\
    Stack trace:\n#0 /tmp/tmp453y1l4o.php(40): test()\n#1 {main}\n  thrown in /tmp/tmp453y1l4o.php\
    \ on line 33\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Imagine a road that's a perfectly straight infinitely long line.\n\
    // n cars are driving left to right;  simultaneously, a different set of n cars\n\
    // are driving right to left.   The two sets of cars start out being very far\
    \ from\n// each other.  All cars move in the same speed.  Two cars are said to\
    \ collide\n// when a car that's moving left to right hits a car that's moving\
    \ right to left.\n// However, the cars are infinitely sturdy and strong; as a\
    \ result, they continue moving\n// in their trajectory as if they did not collide.\n\
    // This function outputs the number of such collisions.\nfunction car_race_collision($n)\
    \ {\n    $collisions = 0;\n    $left_to_right = range(1, $n);\n    $right_to_left\
    \ = range($n, 1);\n    $left_to_right_index = 0;\n    $right_to_left_index = 0;\n\
    \    while ($left_to_right_index < $n && $right_to_left_index < $n) {\n      \
    \  if ($left_to_right[$left_to_right_index] < $right_to_left[$right_to_left_index])\
    \ {\n            $left_to_right_index++;\n        } else {\n            $right_to_left_index++;\n\
    \            $collisions += $left_to_right_index;\n        }\n    }\n    return\
    \ $collisions;\n}\n\nfunction candidate(...$args) {\n    return car_race_collision(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== 9) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4) !== 16) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(8) !== 64) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(10) !== 100) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpioeab66y.php:32\n\
    Stack trace:\n#0 /tmp/tmpioeab66y.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpioeab66y.php\
    \ on line 32\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Imagine a road that's a perfectly straight infinitely long line.\n\
    // n cars are driving left to right;  simultaneously, a different set of n cars\n\
    // are driving right to left.   The two sets of cars start out being very far\
    \ from\n// each other.  All cars move in the same speed.  Two cars are said to\
    \ collide\n// when a car that's moving left to right hits a car that's moving\
    \ right to left.\n// However, the cars are infinitely sturdy and strong; as a\
    \ result, they continue moving\n// in their trajectory as if they did not collide.\n\
    // This function outputs the number of such collisions.\nfunction car_race_collision($n)\
    \ {\n    // Your code here\n}\n\nfunction candidate(...$args) {\n    return car_race_collision(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== 9) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4) !== 16) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(8) !== 64) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(10) !== 100) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpaow3_i19.php:19\n\
    Stack trace:\n#0 /tmp/tmpaow3_i19.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpaow3_i19.php\
    \ on line 19\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Imagine a road that's a perfectly straight infinitely long line.\n\
    // n cars are driving left to right;  simultaneously, a different set of n cars\n\
    // are driving right to left.   The two sets of cars start out being very far\
    \ from\n// each other.  All cars move in the same speed.  Two cars are said to\
    \ collide\n// when a car that's moving left to right hits a car that's moving\
    \ right to left.\n// However, the cars are infinitely sturdy and strong; as a\
    \ result, they continue moving\n// in their trajectory as if they did not collide.\n\
    // This function outputs the number of such collisions.\nfunction car_race_collision($n)\
    \ {\n    $collisions = 0;\n    $left_to_right = range(1, $n);\n    $right_to_left\
    \ = range($n, 1);\n    $left_to_right_index = 0;\n    $right_to_left_index = 0;\n\
    \    while ($left_to_right_index < $n && $right_to_left_index < $n) {\n      \
    \  if ($left_to_right[$left_to_right_index] < $right_to_left[$right_to_left_index])\
    \ {\n            $left_to_right_index++;\n        } else {\n            $right_to_left_index++;\n\
    \            $collisions += $left_to_right_index;\n        }\n    }\n    return\
    \ $collisions;\n}\n\nfunction candidate(...$args) {\n    return car_race_collision(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== 9) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4) !== 16) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(8) !== 64) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(10) !== 100) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmprxkig86r.php:32\n\
    Stack trace:\n#0 /tmp/tmprxkig86r.php(39): test()\n#1 {main}\n  thrown in /tmp/tmprxkig86r.php\
    \ on line 32\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Imagine a road that's a perfectly straight infinitely long line.\n\
    // n cars are driving left to right;  simultaneously, a different set of n cars\n\
    // are driving right to left.   The two sets of cars start out being very far\
    \ from\n// each other.  All cars move in the same speed.  Two cars are said to\
    \ collide\n// when a car that's moving left to right hits a car that's moving\
    \ right to left.\n// However, the cars are infinitely sturdy and strong; as a\
    \ result, they continue moving\n// in their trajectory as if they did not collide.\n\
    // This function outputs the number of such collisions.\nfunction car_race_collision($n)\
    \ {\n    $collisions = 0;\n    $left_to_right = [];\n    $right_to_left = [];\n\
    \    for ($i = 0; $i < $n; $i++) {\n        $left_to_right[] = $i;\n        $right_to_left[]\
    \ = $n - $i - 1;\n    }\n    for ($i = 0; $i < $n; $i++) {\n        for ($j =\
    \ 0; $j < $n; $j++) {\n            if ($left_to_right[$i] == $right_to_left[$j])\
    \ {\n                $collisions++;\n            }\n        }\n    }\n    return\
    \ $collisions;\n}\n\nfunction candidate(...$args) {\n    return car_race_collision(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== 9) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4) !== 16) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(8) !== 64) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(10) !== 100) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmprwgis83j.php:33\n\
    Stack trace:\n#0 /tmp/tmprwgis83j.php(40): test()\n#1 {main}\n  thrown in /tmp/tmprwgis83j.php\
    \ on line 33\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Imagine a road that's a perfectly straight infinitely long line.\n\
    // n cars are driving left to right;  simultaneously, a different set of n cars\n\
    // are driving right to left.   The two sets of cars start out being very far\
    \ from\n// each other.  All cars move in the same speed.  Two cars are said to\
    \ collide\n// when a car that's moving left to right hits a car that's moving\
    \ right to left.\n// However, the cars are infinitely sturdy and strong; as a\
    \ result, they continue moving\n// in their trajectory as if they did not collide.\n\
    // This function outputs the number of such collisions.\nfunction car_race_collision($n)\
    \ {\n    $collisions = 0;\n    $left_to_right = [];\n    $right_to_left = [];\n\
    \    for ($i = 0; $i < $n; $i++) {\n        $left_to_right[] = $i;\n        $right_to_left[]\
    \ = $n - $i - 1;\n    }\n    for ($i = 0; $i < $n; $i++) {\n        for ($j =\
    \ 0; $j < $n; $j++) {\n            if ($left_to_right[$i] == $right_to_left[$j])\
    \ {\n                $collisions++;\n            }\n        }\n    }\n    return\
    \ $collisions;\n}\n\nfunction candidate(...$args) {\n    return car_race_collision(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== 9) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4) !== 16) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(8) !== 64) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(10) !== 100) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmptcxyh9oc.php:33\n\
    Stack trace:\n#0 /tmp/tmptcxyh9oc.php(40): test()\n#1 {main}\n  thrown in /tmp/tmptcxyh9oc.php\
    \ on line 33\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Imagine a road that's a perfectly straight infinitely long line.\n\
    // n cars are driving left to right;  simultaneously, a different set of n cars\n\
    // are driving right to left.   The two sets of cars start out being very far\
    \ from\n// each other.  All cars move in the same speed.  Two cars are said to\
    \ collide\n// when a car that's moving left to right hits a car that's moving\
    \ right to left.\n// However, the cars are infinitely sturdy and strong; as a\
    \ result, they continue moving\n// in their trajectory as if they did not collide.\n\
    // This function outputs the number of such collisions.\nfunction car_race_collision($n)\
    \ {\n    $left_to_right = [];\n    $right_to_left = [];\n    for ($i = 0; $i <\
    \ $n; $i++) {\n        $left_to_right[] = $i;\n        $right_to_left[] = $i;\n\
    \    }\n    $collisions = 0;\n    while (count($left_to_right) > 0 && count($right_to_left)\
    \ > 0) {\n        $left_car = array_shift($left_to_right);\n        $right_car\
    \ = array_shift($right_to_left);\n        if ($left_car > $right_car) {\n    \
    \        $collisions++;\n        } else {\n            $left_to_right[] = $left_car;\n\
    \            $right_to_left[] = $right_car;\n        }\n    }\n    return $collisions;\n\
    }\n\nfunction candidate(...$args) {\n    return car_race_collision(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== 9) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4) !== 16) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(8) !== 64) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(10) !== 100) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  stdout: None
  stderr: None
  exit_code: -1
  status: Timeout
- program: "<?php\n// Imagine a road that's a perfectly straight infinitely long line.\n\
    // n cars are driving left to right;  simultaneously, a different set of n cars\n\
    // are driving right to left.   The two sets of cars start out being very far\
    \ from\n// each other.  All cars move in the same speed.  Two cars are said to\
    \ collide\n// when a car that's moving left to right hits a car that's moving\
    \ right to left.\n// However, the cars are infinitely sturdy and strong; as a\
    \ result, they continue moving\n// in their trajectory as if they did not collide.\n\
    // This function outputs the number of such collisions.\nfunction car_race_collision($n)\
    \ {\n    $collisions = 0;\n    $left_to_right = range(1, $n);\n    $right_to_left\
    \ = range($n, 1);\n    for ($i = 0; $i < $n; $i++) {\n        for ($j = 0; $j\
    \ < $n; $j++) {\n            if ($left_to_right[$i] == $right_to_left[$j]) {\n\
    \                $collisions++;\n            }\n        }\n    }\n    return $collisions;\n\
    }\n\nfunction candidate(...$args) {\n    return car_race_collision(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== 9) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4) !== 16) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(8) !== 64) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(10) !== 100) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpcmm2itac.php:29\n\
    Stack trace:\n#0 /tmp/tmpcmm2itac.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpcmm2itac.php\
    \ on line 29\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Imagine a road that's a perfectly straight infinitely long line.\n\
    // n cars are driving left to right;  simultaneously, a different set of n cars\n\
    // are driving right to left.   The two sets of cars start out being very far\
    \ from\n// each other.  All cars move in the same speed.  Two cars are said to\
    \ collide\n// when a car that's moving left to right hits a car that's moving\
    \ right to left.\n// However, the cars are infinitely sturdy and strong; as a\
    \ result, they continue moving\n// in their trajectory as if they did not collide.\n\
    // This function outputs the number of such collisions.\nfunction car_race_collision($n)\
    \ {\n    $collisions = 0;\n    $left = [];\n    $right = [];\n    for ($i = 0;\
    \ $i < $n; $i++) {\n        $left[$i] = $i;\n        $right[$i] = $n - $i - 1;\n\
    \    }\n    for ($i = 0; $i < $n; $i++) {\n        for ($j = 0; $j < $n; $j++)\
    \ {\n            if ($left[$i] == $right[$j]) {\n                $collisions++;\n\
    \            }\n        }\n    }\n    return $collisions;\n}\n\nfunction candidate(...$args)\
    \ {\n    return car_race_collision(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(2) !== 4) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(3) !== 9) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !==\
    \ 64) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 100)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmppm_rsmqq.php:33\n\
    Stack trace:\n#0 /tmp/tmppm_rsmqq.php(40): test()\n#1 {main}\n  thrown in /tmp/tmppm_rsmqq.php\
    \ on line 33\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Imagine a road that's a perfectly straight infinitely long line.\n\
    // n cars are driving left to right;  simultaneously, a different set of n cars\n\
    // are driving right to left.   The two sets of cars start out being very far\
    \ from\n// each other.  All cars move in the same speed.  Two cars are said to\
    \ collide\n// when a car that's moving left to right hits a car that's moving\
    \ right to left.\n// However, the cars are infinitely sturdy and strong; as a\
    \ result, they continue moving\n// in their trajectory as if they did not collide.\n\
    // This function outputs the number of such collisions.\nfunction car_race_collision($n)\
    \ {\n    $collisions = 0;\n    $left_to_right = array();\n    $right_to_left =\
    \ array();\n    for ($i = 0; $i < $n; $i++) {\n        $left_to_right[] = $i;\n\
    \        $right_to_left[] = $i;\n    }\n    for ($i = 0; $i < $n; $i++) {\n  \
    \      for ($j = 0; $j < $n; $j++) {\n            if ($left_to_right[$i] == $right_to_left[$j])\
    \ {\n                $collisions++;\n            }\n        }\n    }\n    return\
    \ $collisions;\n}\n\nfunction candidate(...$args) {\n    return car_race_collision(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== 9) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4) !== 16) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(8) !== 64) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(10) !== 100) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpzuy3s638.php:33\n\
    Stack trace:\n#0 /tmp/tmpzuy3s638.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpzuy3s638.php\
    \ on line 33\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Imagine a road that's a perfectly straight infinitely long line.\n\
    // n cars are driving left to right;  simultaneously, a different set of n cars\n\
    // are driving right to left.   The two sets of cars start out being very far\
    \ from\n// each other.  All cars move in the same speed.  Two cars are said to\
    \ collide\n// when a car that's moving left to right hits a car that's moving\
    \ right to left.\n// However, the cars are infinitely sturdy and strong; as a\
    \ result, they continue moving\n// in their trajectory as if they did not collide.\n\
    // This function outputs the number of such collisions.\nfunction car_race_collision($n)\
    \ {\n    $left_to_right = range(1, $n);\n    $right_to_left = range($n, 1);\n\
    \    $collisions = 0;\n    while (count($left_to_right) > 0 && count($right_to_left)\
    \ > 0) {\n        $left_car = array_shift($left_to_right);\n        $right_car\
    \ = array_shift($right_to_left);\n        if ($left_car == $right_car) {\n   \
    \         $collisions++;\n        } else {\n            array_unshift($left_to_right,\
    \ $left_car);\n            array_unshift($right_to_left, $right_car);\n      \
    \  }\n    }\n    return $collisions;\n}\n\nfunction candidate(...$args) {\n  \
    \  return car_race_collision(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(2) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3)\
    \ !== 9) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !==\
    \ 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 64)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 100) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: None
  stderr: None
  exit_code: -1
  status: Timeout
- program: "<?php\n// Imagine a road that's a perfectly straight infinitely long line.\n\
    // n cars are driving left to right;  simultaneously, a different set of n cars\n\
    // are driving right to left.   The two sets of cars start out being very far\
    \ from\n// each other.  All cars move in the same speed.  Two cars are said to\
    \ collide\n// when a car that's moving left to right hits a car that's moving\
    \ right to left.\n// However, the cars are infinitely sturdy and strong; as a\
    \ result, they continue moving\n// in their trajectory as if they did not collide.\n\
    // This function outputs the number of such collisions.\nfunction car_race_collision($n)\
    \ {\n    $collisions = 0;\n    $left_to_right = range(1, $n);\n    $right_to_left\
    \ = range($n, 1);\n    $left_to_right_index = 0;\n    $right_to_left_index = 0;\n\
    \    while ($left_to_right_index < $n && $right_to_left_index < $n) {\n      \
    \  if ($left_to_right[$left_to_right_index] < $right_to_left[$right_to_left_index])\
    \ {\n            $left_to_right_index++;\n        } else {\n            $right_to_left_index++;\n\
    \            $collisions += $left_to_right_index;\n        }\n    }\n    return\
    \ $collisions;\n}\n\nfunction candidate(...$args) {\n    return car_race_collision(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== 9) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4) !== 16) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(8) !== 64) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(10) !== 100) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpeoq6lnc9.php:32\n\
    Stack trace:\n#0 /tmp/tmpeoq6lnc9.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpeoq6lnc9.php\
    \ on line 32\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Imagine a road that's a perfectly straight infinitely long line.\n\
    // n cars are driving left to right;  simultaneously, a different set of n cars\n\
    // are driving right to left.   The two sets of cars start out being very far\
    \ from\n// each other.  All cars move in the same speed.  Two cars are said to\
    \ collide\n// when a car that's moving left to right hits a car that's moving\
    \ right to left.\n// However, the cars are infinitely sturdy and strong; as a\
    \ result, they continue moving\n// in their trajectory as if they did not collide.\n\
    // This function outputs the number of such collisions.\nfunction car_race_collision($n)\
    \ {\n    $collisions = 0;\n    $left_to_right = [];\n    $right_to_left = [];\n\
    \    for ($i = 0; $i < $n; $i++) {\n        $left_to_right[] = $i;\n        $right_to_left[]\
    \ = $n - $i - 1;\n    }\n    for ($i = 0; $i < $n; $i++) {\n        for ($j =\
    \ 0; $j < $n; $j++) {\n            if ($left_to_right[$i] == $right_to_left[$j])\
    \ {\n                $collisions++;\n            }\n        }\n    }\n    return\
    \ $collisions;\n}\n\nfunction candidate(...$args) {\n    return car_race_collision(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== 9) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4) !== 16) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(8) !== 64) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(10) !== 100) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmppmkr0awb.php:33\n\
    Stack trace:\n#0 /tmp/tmppmkr0awb.php(40): test()\n#1 {main}\n  thrown in /tmp/tmppmkr0awb.php\
    \ on line 33\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Imagine a road that's a perfectly straight infinitely long line.\n\
    // n cars are driving left to right;  simultaneously, a different set of n cars\n\
    // are driving right to left.   The two sets of cars start out being very far\
    \ from\n// each other.  All cars move in the same speed.  Two cars are said to\
    \ collide\n// when a car that's moving left to right hits a car that's moving\
    \ right to left.\n// However, the cars are infinitely sturdy and strong; as a\
    \ result, they continue moving\n// in their trajectory as if they did not collide.\n\
    // This function outputs the number of such collisions.\nfunction car_race_collision($n)\
    \ {\n    $collisions = 0;\n    for ($i = 0; $i < $n; $i++) {\n        for ($j\
    \ = 0; $j < $n; $j++) {\n            if ($i < $j) {\n                $collisions++;\n\
    \            }\n        }\n    }\n    return $collisions;\n}\n\nfunction candidate(...$args)\
    \ {\n    return car_race_collision(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(2) !== 4) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(3) !== 9) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !==\
    \ 64) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 100)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpw02idla7.php:27\n\
    Stack trace:\n#0 /tmp/tmpw02idla7.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpw02idla7.php\
    \ on line 27\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Imagine a road that's a perfectly straight infinitely long line.\n\
    // n cars are driving left to right;  simultaneously, a different set of n cars\n\
    // are driving right to left.   The two sets of cars start out being very far\
    \ from\n// each other.  All cars move in the same speed.  Two cars are said to\
    \ collide\n// when a car that's moving left to right hits a car that's moving\
    \ right to left.\n// However, the cars are infinitely sturdy and strong; as a\
    \ result, they continue moving\n// in their trajectory as if they did not collide.\n\
    // This function outputs the number of such collisions.\nfunction car_race_collision($n)\
    \ {\n    $collisions = 0;\n    $left_to_right = array();\n    $right_to_left =\
    \ array();\n    for ($i = 0; $i < $n; $i++) {\n        $left_to_right[] = $i;\n\
    \        $right_to_left[] = $i;\n    }\n    while (count($left_to_right) > 0 &&\
    \ count($right_to_left) > 0) {\n        $left_to_right_car = array_shift($left_to_right);\n\
    \        $right_to_left_car = array_shift($right_to_left);\n        if ($left_to_right_car\
    \ == $right_to_left_car) {\n            $collisions++;\n        }\n    }\n   \
    \ return $collisions;\n}\n\nfunction candidate(...$args) {\n    return car_race_collision(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== 9) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4) !== 16) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(8) !== 64) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(10) !== 100) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpefwespl9.php:33\n\
    Stack trace:\n#0 /tmp/tmpefwespl9.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpefwespl9.php\
    \ on line 33\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Imagine a road that's a perfectly straight infinitely long line.\n\
    // n cars are driving left to right;  simultaneously, a different set of n cars\n\
    // are driving right to left.   The two sets of cars start out being very far\
    \ from\n// each other.  All cars move in the same speed.  Two cars are said to\
    \ collide\n// when a car that's moving left to right hits a car that's moving\
    \ right to left.\n// However, the cars are infinitely sturdy and strong; as a\
    \ result, they continue moving\n// in their trajectory as if they did not collide.\n\
    // This function outputs the number of such collisions.\nfunction car_race_collision($n)\
    \ {\n    $collisions = 0;\n    $left_to_right = range(1, $n);\n    $right_to_left\
    \ = range($n, 1);\n    $left_to_right_index = 0;\n    $right_to_left_index = 0;\n\
    \    while ($left_to_right_index < $n && $right_to_left_index < $n) {\n      \
    \  if ($left_to_right[$left_to_right_index] < $right_to_left[$right_to_left_index])\
    \ {\n            $left_to_right_index++;\n        } else {\n            $right_to_left_index++;\n\
    \            $collisions += $left_to_right_index;\n        }\n    }\n    return\
    \ $collisions;\n}\n\nfunction candidate(...$args) {\n    return car_race_collision(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== 9) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4) !== 16) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(8) !== 64) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(10) !== 100) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpzrvf4p78.php:32\n\
    Stack trace:\n#0 /tmp/tmpzrvf4p78.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpzrvf4p78.php\
    \ on line 32\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Imagine a road that's a perfectly straight infinitely long line.\n\
    // n cars are driving left to right;  simultaneously, a different set of n cars\n\
    // are driving right to left.   The two sets of cars start out being very far\
    \ from\n// each other.  All cars move in the same speed.  Two cars are said to\
    \ collide\n// when a car that's moving left to right hits a car that's moving\
    \ right to left.\n// However, the cars are infinitely sturdy and strong; as a\
    \ result, they continue moving\n// in their trajectory as if they did not collide.\n\
    // This function outputs the number of such collisions.\nfunction car_race_collision($n)\
    \ {\n  $collisions = 0;\n  $left_to_right = [];\n  $right_to_left = [];\n  for\
    \ ($i = 0; $i < $n; $i++) {\n    $left_to_right[] = $i;\n    $right_to_left[]\
    \ = $i;\n  }\n  for ($i = 0; $i < $n; $i++) {\n    for ($j = 0; $j < $n; $j++)\
    \ {\n      if ($left_to_right[$i] == $right_to_left[$j]) {\n        $collisions++;\n\
    \      }\n    }\n  }\n  return $collisions;\n}\n\nfunction candidate(...$args)\
    \ {\n    return car_race_collision(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(2) !== 4) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(3) !== 9) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !==\
    \ 64) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 100)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpo_8gx5v2.php:33\n\
    Stack trace:\n#0 /tmp/tmpo_8gx5v2.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpo_8gx5v2.php\
    \ on line 33\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Imagine a road that's a perfectly straight infinitely long line.\n\
    // n cars are driving left to right;  simultaneously, a different set of n cars\n\
    // are driving right to left.   The two sets of cars start out being very far\
    \ from\n// each other.  All cars move in the same speed.  Two cars are said to\
    \ collide\n// when a car that's moving left to right hits a car that's moving\
    \ right to left.\n// However, the cars are infinitely sturdy and strong; as a\
    \ result, they continue moving\n// in their trajectory as if they did not collide.\n\
    // This function outputs the number of such collisions.\nfunction car_race_collision($n)\
    \ {\n    // Your code here\n}\nfunction candidate(...$args) {\n    return car_race_collision(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== 9) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4) !== 16) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(8) !== 64) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(10) !== 100) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpai8re8mj.php:18\n\
    Stack trace:\n#0 /tmp/tmpai8re8mj.php(25): test()\n#1 {main}\n  thrown in /tmp/tmpai8re8mj.php\
    \ on line 18\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Imagine a road that's a perfectly straight infinitely long line.\n\
    // n cars are driving left to right;  simultaneously, a different set of n cars\n\
    // are driving right to left.   The two sets of cars start out being very far\
    \ from\n// each other.  All cars move in the same speed.  Two cars are said to\
    \ collide\n// when a car that's moving left to right hits a car that's moving\
    \ right to left.\n// However, the cars are infinitely sturdy and strong; as a\
    \ result, they continue moving\n// in their trajectory as if they did not collide.\n\
    // This function outputs the number of such collisions.\nfunction car_race_collision($n)\
    \ {\n    $collisions = 0;\n    $left_to_right = [];\n    $right_to_left = [];\n\
    \    for ($i = 0; $i < $n; $i++) {\n        $left_to_right[] = $i;\n        $right_to_left[]\
    \ = $n - $i - 1;\n    }\n    for ($i = 0; $i < $n; $i++) {\n        for ($j =\
    \ 0; $j < $n; $j++) {\n            if ($left_to_right[$i] == $right_to_left[$j])\
    \ {\n                $collisions++;\n            }\n        }\n    }\n    return\
    \ $collisions;\n}\n\nfunction candidate(...$args) {\n    return car_race_collision(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== 9) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4) !== 16) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(8) !== 64) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(10) !== 100) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpqv1c84tc.php:33\n\
    Stack trace:\n#0 /tmp/tmpqv1c84tc.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpqv1c84tc.php\
    \ on line 33\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Imagine a road that's a perfectly straight infinitely long line.\n\
    // n cars are driving left to right;  simultaneously, a different set of n cars\n\
    // are driving right to left.   The two sets of cars start out being very far\
    \ from\n// each other.  All cars move in the same speed.  Two cars are said to\
    \ collide\n// when a car that's moving left to right hits a car that's moving\
    \ right to left.\n// However, the cars are infinitely sturdy and strong; as a\
    \ result, they continue moving\n// in their trajectory as if they did not collide.\n\
    // This function outputs the number of such collisions.\nfunction car_race_collision($n)\
    \ {\n    $collisions = 0;\n    $left_to_right = [];\n    $right_to_left = [];\n\
    \    for ($i = 0; $i < $n; $i++) {\n        $left_to_right[] = $i;\n        $right_to_left[]\
    \ = $n - $i - 1;\n    }\n    while (count($left_to_right) > 0) {\n        $left_car\
    \ = array_shift($left_to_right);\n        $right_car = array_shift($right_to_left);\n\
    \        if ($left_car > $right_car) {\n            $collisions++;\n        }\n\
    \    }\n    return $collisions;\n}\n\nfunction candidate(...$args) {\n    return\
    \ car_race_collision(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !==\
    \ 9) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 16)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 64) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 100) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp284a_hi3.php:33\n\
    Stack trace:\n#0 /tmp/tmp284a_hi3.php(40): test()\n#1 {main}\n  thrown in /tmp/tmp284a_hi3.php\
    \ on line 33\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Imagine a road that's a perfectly straight infinitely long line.\n\
    // n cars are driving left to right;  simultaneously, a different set of n cars\n\
    // are driving right to left.   The two sets of cars start out being very far\
    \ from\n// each other.  All cars move in the same speed.  Two cars are said to\
    \ collide\n// when a car that's moving left to right hits a car that's moving\
    \ right to left.\n// However, the cars are infinitely sturdy and strong; as a\
    \ result, they continue moving\n// in their trajectory as if they did not collide.\n\
    // This function outputs the number of such collisions.\nfunction car_race_collision($n)\
    \ {\n    $collisions = 0;\n    $left_to_right = range(1, $n);\n    $right_to_left\
    \ = range($n, 1);\n    foreach ($left_to_right as $left) {\n        foreach ($right_to_left\
    \ as $right) {\n            if ($left == $right) {\n                $collisions++;\n\
    \            }\n        }\n    }\n    return $collisions;\n}\n\nfunction candidate(...$args)\
    \ {\n    return car_race_collision(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(2) !== 4) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(3) !== 9) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !==\
    \ 64) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 100)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp6e3zdnut.php:29\n\
    Stack trace:\n#0 /tmp/tmp6e3zdnut.php(36): test()\n#1 {main}\n  thrown in /tmp/tmp6e3zdnut.php\
    \ on line 29\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Imagine a road that's a perfectly straight infinitely long line.\n\
    // n cars are driving left to right;  simultaneously, a different set of n cars\n\
    // are driving right to left.   The two sets of cars start out being very far\
    \ from\n// each other.  All cars move in the same speed.  Two cars are said to\
    \ collide\n// when a car that's moving left to right hits a car that's moving\
    \ right to left.\n// However, the cars are infinitely sturdy and strong; as a\
    \ result, they continue moving\n// in their trajectory as if they did not collide.\n\
    // This function outputs the number of such collisions.\nfunction car_race_collision($n)\
    \ {\n    $collisions = 0;\n    $left_to_right = range(1, $n);\n    $right_to_left\
    \ = range($n, 1);\n    foreach ($left_to_right as $left) {\n        foreach ($right_to_left\
    \ as $right) {\n            if ($left == $right) {\n                $collisions++;\n\
    \            }\n        }\n    }\n    return $collisions;\n}\n\nfunction candidate(...$args)\
    \ {\n    return car_race_collision(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(2) !== 4) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(3) !== 9) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !==\
    \ 64) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 100)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpe8x7hxkl.php:29\n\
    Stack trace:\n#0 /tmp/tmpe8x7hxkl.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpe8x7hxkl.php\
    \ on line 29\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Imagine a road that's a perfectly straight infinitely long line.\n\
    // n cars are driving left to right;  simultaneously, a different set of n cars\n\
    // are driving right to left.   The two sets of cars start out being very far\
    \ from\n// each other.  All cars move in the same speed.  Two cars are said to\
    \ collide\n// when a car that's moving left to right hits a car that's moving\
    \ right to left.\n// However, the cars are infinitely sturdy and strong; as a\
    \ result, they continue moving\n// in their trajectory as if they did not collide.\n\
    // This function outputs the number of such collisions.\nfunction car_race_collision($n)\
    \ {\n    $collisions = 0;\n    $left_to_right = [];\n    $right_to_left = [];\n\
    \    for ($i = 0; $i < $n; $i++) {\n        $left_to_right[] = $i;\n        $right_to_left[]\
    \ = $n - $i - 1;\n    }\n    $left_to_right_index = 0;\n    $right_to_left_index\
    \ = 0;\n    while ($left_to_right_index < $n && $right_to_left_index < $n) {\n\
    \        if ($left_to_right[$left_to_right_index] < $right_to_left[$right_to_left_index])\
    \ {\n            $left_to_right_index++;\n        } else {\n            $right_to_left_index++;\n\
    \            $collisions += $left_to_right_index;\n        }\n    }\n    return\
    \ $collisions;\n}\n\nfunction candidate(...$args) {\n    return car_race_collision(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== 9) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4) !== 16) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(8) !== 64) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(10) !== 100) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp77bper5_.php:36\n\
    Stack trace:\n#0 /tmp/tmp77bper5_.php(43): test()\n#1 {main}\n  thrown in /tmp/tmp77bper5_.php\
    \ on line 36\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Imagine a road that's a perfectly straight infinitely long line.\n\
    // n cars are driving left to right;  simultaneously, a different set of n cars\n\
    // are driving right to left.   The two sets of cars start out being very far\
    \ from\n// each other.  All cars move in the same speed.  Two cars are said to\
    \ collide\n// when a car that's moving left to right hits a car that's moving\
    \ right to left.\n// However, the cars are infinitely sturdy and strong; as a\
    \ result, they continue moving\n// in their trajectory as if they did not collide.\n\
    // This function outputs the number of such collisions.\nfunction car_race_collision($n)\
    \ {\n    $left_to_right = [];\n    $right_to_left = [];\n    for ($i = 0; $i <\
    \ $n; $i++) {\n        $left_to_right[] = $i;\n        $right_to_left[] = $i;\n\
    \    }\n    $collisions = 0;\n    while (count($left_to_right) > 0 && count($right_to_left)\
    \ > 0) {\n        $left_car = array_shift($left_to_right);\n        $right_car\
    \ = array_shift($right_to_left);\n        if ($left_car == $right_car) {\n   \
    \         $collisions++;\n        }\n    }\n    return $collisions;\n}\n\nfunction\
    \ candidate(...$args) {\n    return car_race_collision(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(2) !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3) !== 9) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(4) !== 16) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(8) !== 64) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(10) !== 100) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp80l_g188.php:33\n\
    Stack trace:\n#0 /tmp/tmp80l_g188.php(40): test()\n#1 {main}\n  thrown in /tmp/tmp80l_g188.php\
    \ on line 33\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Imagine a road that's a perfectly straight infinitely long line.\n\
    // n cars are driving left to right;  simultaneously, a different set of n cars\n\
    // are driving right to left.   The two sets of cars start out being very far\
    \ from\n// each other.  All cars move in the same speed.  Two cars are said to\
    \ collide\n// when a car that's moving left to right hits a car that's moving\
    \ right to left.\n// However, the cars are infinitely sturdy and strong; as a\
    \ result, they continue moving\n// in their trajectory as if they did not collide.\n\
    // This function outputs the number of such collisions.\nfunction car_race_collision($n)\
    \ {\n    // Your code here\n}\n\nfunction candidate(...$args) {\n    return car_race_collision(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== 9) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4) !== 16) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(8) !== 64) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(10) !== 100) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpstuke03u.php:19\n\
    Stack trace:\n#0 /tmp/tmpstuke03u.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpstuke03u.php\
    \ on line 19\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Imagine a road that's a perfectly straight infinitely long line.\n\
    // n cars are driving left to right;  simultaneously, a different set of n cars\n\
    // are driving right to left.   The two sets of cars start out being very far\
    \ from\n// each other.  All cars move in the same speed.  Two cars are said to\
    \ collide\n// when a car that's moving left to right hits a car that's moving\
    \ right to left.\n// However, the cars are infinitely sturdy and strong; as a\
    \ result, they continue moving\n// in their trajectory as if they did not collide.\n\
    // This function outputs the number of such collisions.\nfunction car_race_collision($n)\
    \ {\n    $collisions = 0;\n    $left_cars = $right_cars = [];\n    for ($i = 0;\
    \ $i < $n; $i++) {\n        $left_cars[] = $i;\n        $right_cars[] = $i;\n\
    \    }\n    while (count($left_cars) > 0 && count($right_cars) > 0) {\n      \
    \  $left_car = array_shift($left_cars);\n        $right_car = array_pop($right_cars);\n\
    \        if ($left_car == $right_car) {\n            $collisions++;\n        }\n\
    \    }\n    return $collisions;\n}\n\nfunction candidate(...$args) {\n    return\
    \ car_race_collision(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !==\
    \ 9) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 16)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 64) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 100) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp9zoz6fsh.php:32\n\
    Stack trace:\n#0 /tmp/tmp9zoz6fsh.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp9zoz6fsh.php\
    \ on line 32\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Imagine a road that's a perfectly straight infinitely long line.\n\
    // n cars are driving left to right;  simultaneously, a different set of n cars\n\
    // are driving right to left.   The two sets of cars start out being very far\
    \ from\n// each other.  All cars move in the same speed.  Two cars are said to\
    \ collide\n// when a car that's moving left to right hits a car that's moving\
    \ right to left.\n// However, the cars are infinitely sturdy and strong; as a\
    \ result, they continue moving\n// in their trajectory as if they did not collide.\n\
    // This function outputs the number of such collisions.\nfunction car_race_collision($n)\
    \ {\n    $left_to_right = [];\n    $right_to_left = [];\n    for ($i = 0; $i <\
    \ $n; $i++) {\n        $left_to_right[] = $i;\n        $right_to_left[] = $i;\n\
    \    }\n    $collisions = 0;\n    while (count($left_to_right) > 0 && count($right_to_left)\
    \ > 0) {\n        $left_to_right_car = array_shift($left_to_right);\n        $right_to_left_car\
    \ = array_shift($right_to_left);\n        if ($left_to_right_car == $right_to_left_car)\
    \ {\n            $collisions++;\n        }\n    }\n    return $collisions;\n}\n\
    \nfunction candidate(...$args) {\n    return car_race_collision(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(2) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== 9) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4) !== 16) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(8) !== 64) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(10) !== 100) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp8ulb1qfw.php:33\n\
    Stack trace:\n#0 /tmp/tmp8ulb1qfw.php(40): test()\n#1 {main}\n  thrown in /tmp/tmp8ulb1qfw.php\
    \ on line 33\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Imagine a road that's a perfectly straight infinitely long line.\n\
    // n cars are driving left to right;  simultaneously, a different set of n cars\n\
    // are driving right to left.   The two sets of cars start out being very far\
    \ from\n// each other.  All cars move in the same speed.  Two cars are said to\
    \ collide\n// when a car that's moving left to right hits a car that's moving\
    \ right to left.\n// However, the cars are infinitely sturdy and strong; as a\
    \ result, they continue moving\n// in their trajectory as if they did not collide.\n\
    // This function outputs the number of such collisions.\nfunction car_race_collision($n)\
    \ {\n    $collisions = 0;\n    $left_to_right = array();\n    $right_to_left =\
    \ array();\n    for ($i = 0; $i < $n; $i++) {\n        $left_to_right[] = $i;\n\
    \        $right_to_left[] = $i;\n    }\n    while (count($left_to_right) > 0 &&\
    \ count($right_to_left) > 0) {\n        $left_to_right_car = array_shift($left_to_right);\n\
    \        $right_to_left_car = array_shift($right_to_left);\n        if ($left_to_right_car\
    \ == $right_to_left_car) {\n            $collisions++;\n        }\n    }\n   \
    \ return $collisions;\n}\n\nfunction candidate(...$args) {\n    return car_race_collision(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== 9) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4) !== 16) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(8) !== 64) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(10) !== 100) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp6it7mcdb.php:33\n\
    Stack trace:\n#0 /tmp/tmp6it7mcdb.php(40): test()\n#1 {main}\n  thrown in /tmp/tmp6it7mcdb.php\
    \ on line 33\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Imagine a road that's a perfectly straight infinitely long line.\n\
    // n cars are driving left to right;  simultaneously, a different set of n cars\n\
    // are driving right to left.   The two sets of cars start out being very far\
    \ from\n// each other.  All cars move in the same speed.  Two cars are said to\
    \ collide\n// when a car that's moving left to right hits a car that's moving\
    \ right to left.\n// However, the cars are infinitely sturdy and strong; as a\
    \ result, they continue moving\n// in their trajectory as if they did not collide.\n\
    // This function outputs the number of such collisions.\nfunction car_race_collision($n)\
    \ {\n    $collisions = 0;\n    for ($i = 0; $i < $n; $i++) {\n        for ($j\
    \ = 0; $j < $n; $j++) {\n            if ($i == $j) {\n                $collisions++;\n\
    \            }\n        }\n    }\n    return $collisions;\n}\n\nfunction candidate(...$args)\
    \ {\n    return car_race_collision(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(2) !== 4) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(3) !== 9) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !==\
    \ 64) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 100)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpx1722bsq.php:27\n\
    Stack trace:\n#0 /tmp/tmpx1722bsq.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpx1722bsq.php\
    \ on line 27\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Imagine a road that's a perfectly straight infinitely long line.\n\
    // n cars are driving left to right;  simultaneously, a different set of n cars\n\
    // are driving right to left.   The two sets of cars start out being very far\
    \ from\n// each other.  All cars move in the same speed.  Two cars are said to\
    \ collide\n// when a car that's moving left to right hits a car that's moving\
    \ right to left.\n// However, the cars are infinitely sturdy and strong; as a\
    \ result, they continue moving\n// in their trajectory as if they did not collide.\n\
    // This function outputs the number of such collisions.\nfunction car_race_collision($n)\
    \ {\n    $left_to_right = range(1, $n);\n    $right_to_left = range($n, 1);\n\
    \    $collisions = 0;\n    for ($i = 0; $i < $n; $i++) {\n        for ($j = 0;\
    \ $j < $n; $j++) {\n            if ($left_to_right[$i] == $right_to_left[$j])\
    \ {\n                $collisions++;\n            }\n        }\n    }\n    return\
    \ $collisions;\n}\n\nfunction candidate(...$args) {\n    return car_race_collision(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== 9) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4) !== 16) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(8) !== 64) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(10) !== 100) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp1c0r97ge.php:29\n\
    Stack trace:\n#0 /tmp/tmp1c0r97ge.php(36): test()\n#1 {main}\n  thrown in /tmp/tmp1c0r97ge.php\
    \ on line 29\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Imagine a road that's a perfectly straight infinitely long line.\n\
    // n cars are driving left to right;  simultaneously, a different set of n cars\n\
    // are driving right to left.   The two sets of cars start out being very far\
    \ from\n// each other.  All cars move in the same speed.  Two cars are said to\
    \ collide\n// when a car that's moving left to right hits a car that's moving\
    \ right to left.\n// However, the cars are infinitely sturdy and strong; as a\
    \ result, they continue moving\n// in their trajectory as if they did not collide.\n\
    // This function outputs the number of such collisions.\nfunction car_race_collision($n)\
    \ {\n    $collisions = 0;\n    $left_to_right = [];\n    $right_to_left = [];\n\
    \    for ($i = 0; $i < $n; $i++) {\n        $left_to_right[] = $i;\n        $right_to_left[]\
    \ = $n - $i - 1;\n    }\n    for ($i = 0; $i < $n; $i++) {\n        for ($j =\
    \ 0; $j < $n; $j++) {\n            if ($left_to_right[$i] == $right_to_left[$j])\
    \ {\n                $collisions++;\n            }\n        }\n    }\n    return\
    \ $collisions;\n}\n\nfunction candidate(...$args) {\n    return car_race_collision(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== 9) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4) !== 16) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(8) !== 64) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(10) !== 100) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpnjgc7emh.php:33\n\
    Stack trace:\n#0 /tmp/tmpnjgc7emh.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpnjgc7emh.php\
    \ on line 33\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Imagine a road that's a perfectly straight infinitely long line.\n\
    // n cars are driving left to right;  simultaneously, a different set of n cars\n\
    // are driving right to left.   The two sets of cars start out being very far\
    \ from\n// each other.  All cars move in the same speed.  Two cars are said to\
    \ collide\n// when a car that's moving left to right hits a car that's moving\
    \ right to left.\n// However, the cars are infinitely sturdy and strong; as a\
    \ result, they continue moving\n// in their trajectory as if they did not collide.\n\
    // This function outputs the number of such collisions.\nfunction car_race_collision($n)\
    \ {\n    $collisions = 0;\n    $left_to_right = array();\n    $right_to_left =\
    \ array();\n    for ($i = 0; $i < $n; $i++) {\n        $left_to_right[] = $i;\n\
    \        $right_to_left[] = $i;\n    }\n    while (count($left_to_right) > 0 &&\
    \ count($right_to_left) > 0) {\n        $left_to_right_car = array_shift($left_to_right);\n\
    \        $right_to_left_car = array_shift($right_to_left);\n        if ($left_to_right_car\
    \ == $right_to_left_car) {\n            $collisions++;\n        }\n    }\n   \
    \ return $collisions;\n}\n\nfunction candidate(...$args) {\n    return car_race_collision(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== 9) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4) !== 16) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(8) !== 64) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(10) !== 100) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpebr2_5ey.php:33\n\
    Stack trace:\n#0 /tmp/tmpebr2_5ey.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpebr2_5ey.php\
    \ on line 33\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Imagine a road that's a perfectly straight infinitely long line.\n\
    // n cars are driving left to right;  simultaneously, a different set of n cars\n\
    // are driving right to left.   The two sets of cars start out being very far\
    \ from\n// each other.  All cars move in the same speed.  Two cars are said to\
    \ collide\n// when a car that's moving left to right hits a car that's moving\
    \ right to left.\n// However, the cars are infinitely sturdy and strong; as a\
    \ result, they continue moving\n// in their trajectory as if they did not collide.\n\
    // This function outputs the number of such collisions.\nfunction car_race_collision($n)\
    \ {\n    $collisions = 0;\n    $left_to_right = range(1, $n);\n    $right_to_left\
    \ = range($n, 1);\n    for ($i = 0; $i < $n; $i++) {\n        for ($j = 0; $j\
    \ < $n; $j++) {\n            if ($left_to_right[$i] == $right_to_left[$j]) {\n\
    \                $collisions++;\n            }\n        }\n    }\n    return $collisions;\n\
    }\n\necho car_race_collision(5);\nfunction candidate(...$args) {\n    return car_race_collision(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== 9) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4) !== 16) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(8) !== 64) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(10) !== 100) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  stdout: '5'
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp2ltwpvwb.php:30\n\
    Stack trace:\n#0 /tmp/tmp2ltwpvwb.php(37): test()\n#1 {main}\n  thrown in /tmp/tmp2ltwpvwb.php\
    \ on line 30\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Imagine a road that's a perfectly straight infinitely long line.\n\
    // n cars are driving left to right;  simultaneously, a different set of n cars\n\
    // are driving right to left.   The two sets of cars start out being very far\
    \ from\n// each other.  All cars move in the same speed.  Two cars are said to\
    \ collide\n// when a car that's moving left to right hits a car that's moving\
    \ right to left.\n// However, the cars are infinitely sturdy and strong; as a\
    \ result, they continue moving\n// in their trajectory as if they did not collide.\n\
    // This function outputs the number of such collisions.\nfunction car_race_collision($n)\
    \ {\n    $left_to_right = range(1, $n);\n    $right_to_left = range($n, 1);\n\
    \    $collisions = 0;\n    while (count($left_to_right) > 0 && count($right_to_left)\
    \ > 0) {\n        $left_car = array_shift($left_to_right);\n        $right_car\
    \ = array_shift($right_to_left);\n        if ($left_car == $right_car) {\n   \
    \         $collisions++;\n        } else {\n            array_unshift($left_to_right,\
    \ $left_car);\n            array_unshift($right_to_left, $right_car);\n      \
    \  }\n    }\n    return $collisions;\n}\n\nfunction candidate(...$args) {\n  \
    \  return car_race_collision(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(2) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3)\
    \ !== 9) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !==\
    \ 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 64)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 100) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: None
  stderr: None
  exit_code: -1
  status: Timeout
- program: "<?php\n// Imagine a road that's a perfectly straight infinitely long line.\n\
    // n cars are driving left to right;  simultaneously, a different set of n cars\n\
    // are driving right to left.   The two sets of cars start out being very far\
    \ from\n// each other.  All cars move in the same speed.  Two cars are said to\
    \ collide\n// when a car that's moving left to right hits a car that's moving\
    \ right to left.\n// However, the cars are infinitely sturdy and strong; as a\
    \ result, they continue moving\n// in their trajectory as if they did not collide.\n\
    // This function outputs the number of such collisions.\nfunction car_race_collision($n)\
    \ {\n    $collisions = 0;\n    $left_to_right = range(1, $n);\n    $right_to_left\
    \ = range($n, 1);\n    $left_to_right_index = 0;\n    $right_to_left_index = 0;\n\
    \    while ($left_to_right_index < $n && $right_to_left_index < $n) {\n      \
    \  if ($left_to_right[$left_to_right_index] < $right_to_left[$right_to_left_index])\
    \ {\n            $left_to_right_index++;\n        } else {\n            $right_to_left_index++;\n\
    \            $collisions += $left_to_right_index;\n        }\n    }\n    return\
    \ $collisions;\n}\n\nfunction candidate(...$args) {\n    return car_race_collision(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== 9) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4) !== 16) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(8) !== 64) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(10) !== 100) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpdj2uwgmw.php:32\n\
    Stack trace:\n#0 /tmp/tmpdj2uwgmw.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpdj2uwgmw.php\
    \ on line 32\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Imagine a road that's a perfectly straight infinitely long line.\n\
    // n cars are driving left to right;  simultaneously, a different set of n cars\n\
    // are driving right to left.   The two sets of cars start out being very far\
    \ from\n// each other.  All cars move in the same speed.  Two cars are said to\
    \ collide\n// when a car that's moving left to right hits a car that's moving\
    \ right to left.\n// However, the cars are infinitely sturdy and strong; as a\
    \ result, they continue moving\n// in their trajectory as if they did not collide.\n\
    // This function outputs the number of such collisions.\nfunction car_race_collision($n)\
    \ {\n    $collisions = 0;\n    $left = 0;\n    $right = $n - 1;\n    while ($left\
    \ < $n && $right >= 0) {\n        if ($left == $right) {\n            $collisions++;\n\
    \        }\n        $left++;\n        $right--;\n    }\n    return $collisions;\n\
    }\n\nfunction candidate(...$args) {\n    return car_race_collision(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== 9) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4) !== 16) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(8) !== 64) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(10) !== 100) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpj5qa5spd.php:29\n\
    Stack trace:\n#0 /tmp/tmpj5qa5spd.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpj5qa5spd.php\
    \ on line 29\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Imagine a road that's a perfectly straight infinitely long line.\n\
    // n cars are driving left to right;  simultaneously, a different set of n cars\n\
    // are driving right to left.   The two sets of cars start out being very far\
    \ from\n// each other.  All cars move in the same speed.  Two cars are said to\
    \ collide\n// when a car that's moving left to right hits a car that's moving\
    \ right to left.\n// However, the cars are infinitely sturdy and strong; as a\
    \ result, they continue moving\n// in their trajectory as if they did not collide.\n\
    // This function outputs the number of such collisions.\nfunction car_race_collision($n)\
    \ {\n    $collisions = 0;\n    $left_to_right = array();\n    $right_to_left =\
    \ array();\n    for ($i = 0; $i < $n; $i++) {\n        $left_to_right[] = $i;\n\
    \        $right_to_left[] = $i;\n    }\n    while (count($left_to_right) > 0 &&\
    \ count($right_to_left) > 0) {\n        $left_to_right_car = array_shift($left_to_right);\n\
    \        $right_to_left_car = array_shift($right_to_left);\n        if ($left_to_right_car\
    \ == $right_to_left_car) {\n            $collisions++;\n        }\n    }\n   \
    \ return $collisions;\n}\n\nfunction candidate(...$args) {\n    return car_race_collision(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== 9) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4) !== 16) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(8) !== 64) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(10) !== 100) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp63oxiu94.php:33\n\
    Stack trace:\n#0 /tmp/tmp63oxiu94.php(40): test()\n#1 {main}\n  thrown in /tmp/tmp63oxiu94.php\
    \ on line 33\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Imagine a road that's a perfectly straight infinitely long line.\n\
    // n cars are driving left to right;  simultaneously, a different set of n cars\n\
    // are driving right to left.   The two sets of cars start out being very far\
    \ from\n// each other.  All cars move in the same speed.  Two cars are said to\
    \ collide\n// when a car that's moving left to right hits a car that's moving\
    \ right to left.\n// However, the cars are infinitely sturdy and strong; as a\
    \ result, they continue moving\n// in their trajectory as if they did not collide.\n\
    // This function outputs the number of such collisions.\nfunction car_race_collision($n)\
    \ {\n    $left_to_right = range(1, $n);\n    $right_to_left = range($n, 1);\n\
    \    $collisions = 0;\n    while (count($left_to_right) > 0 && count($right_to_left)\
    \ > 0) {\n        $left_car = array_shift($left_to_right);\n        $right_car\
    \ = array_shift($right_to_left);\n        if ($left_car == $right_car) {\n   \
    \         $collisions++;\n        } else {\n            array_unshift($left_to_right,\
    \ $left_car);\n            array_unshift($right_to_left, $right_car);\n      \
    \  }\n    }\n    return $collisions;\n}\n\nfunction candidate(...$args) {\n  \
    \  return car_race_collision(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(2) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3)\
    \ !== 9) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !==\
    \ 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 64)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 100) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: None
  stderr: None
  exit_code: -1
  status: Timeout
- program: "<?php\n// Imagine a road that's a perfectly straight infinitely long line.\n\
    // n cars are driving left to right;  simultaneously, a different set of n cars\n\
    // are driving right to left.   The two sets of cars start out being very far\
    \ from\n// each other.  All cars move in the same speed.  Two cars are said to\
    \ collide\n// when a car that's moving left to right hits a car that's moving\
    \ right to left.\n// However, the cars are infinitely sturdy and strong; as a\
    \ result, they continue moving\n// in their trajectory as if they did not collide.\n\
    // This function outputs the number of such collisions.\nfunction car_race_collision($n)\
    \ {\n    $left_to_right = range(1, $n);\n    $right_to_left = range($n, 1);\n\
    \    $collisions = 0;\n    for ($i = 0; $i < $n; $i++) {\n        for ($j = 0;\
    \ $j < $n; $j++) {\n            if ($left_to_right[$i] == $right_to_left[$j])\
    \ {\n                $collisions++;\n            }\n        }\n    }\n    return\
    \ $collisions;\n}\n\nfunction candidate(...$args) {\n    return car_race_collision(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== 9) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4) !== 16) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(8) !== 64) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(10) !== 100) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpa7s_zaq8.php:29\n\
    Stack trace:\n#0 /tmp/tmpa7s_zaq8.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpa7s_zaq8.php\
    \ on line 29\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Imagine a road that's a perfectly straight infinitely long line.\n\
    // n cars are driving left to right;  simultaneously, a different set of n cars\n\
    // are driving right to left.   The two sets of cars start out being very far\
    \ from\n// each other.  All cars move in the same speed.  Two cars are said to\
    \ collide\n// when a car that's moving left to right hits a car that's moving\
    \ right to left.\n// However, the cars are infinitely sturdy and strong; as a\
    \ result, they continue moving\n// in their trajectory as if they did not collide.\n\
    // This function outputs the number of such collisions.\nfunction car_race_collision($n)\
    \ {\n    $collisions = 0;\n    $left_cars = [];\n    $right_cars = [];\n    for\
    \ ($i = 0; $i < $n; $i++) {\n        $left_cars[] = $i;\n        $right_cars[]\
    \ = $i;\n    }\n    while (count($left_cars) > 0 && count($right_cars) > 0) {\n\
    \        $left_car = array_shift($left_cars);\n        $right_car = array_pop($right_cars);\n\
    \        if ($left_car == $right_car) {\n            $collisions++;\n        }\n\
    \    }\n    return $collisions;\n}\n\nfunction candidate(...$args) {\n    return\
    \ car_race_collision(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !==\
    \ 9) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 16)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 64) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 100) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp8obz418a.php:33\n\
    Stack trace:\n#0 /tmp/tmp8obz418a.php(40): test()\n#1 {main}\n  thrown in /tmp/tmp8obz418a.php\
    \ on line 33\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Imagine a road that's a perfectly straight infinitely long line.\n\
    // n cars are driving left to right;  simultaneously, a different set of n cars\n\
    // are driving right to left.   The two sets of cars start out being very far\
    \ from\n// each other.  All cars move in the same speed.  Two cars are said to\
    \ collide\n// when a car that's moving left to right hits a car that's moving\
    \ right to left.\n// However, the cars are infinitely sturdy and strong; as a\
    \ result, they continue moving\n// in their trajectory as if they did not collide.\n\
    // This function outputs the number of such collisions.\nfunction car_race_collision($n)\
    \ {\n    $cars_left = [];\n    $cars_right = [];\n    $collisions = 0;\n    for\
    \ ($i = 0; $i < $n; $i++) {\n        $cars_left[] = $i;\n        $cars_right[]\
    \ = $i;\n    }\n    while (count($cars_left) > 0 && count($cars_right) > 0) {\n\
    \        $left_car = array_shift($cars_left);\n        $right_car = array_shift($cars_right);\n\
    \        if ($left_car == $right_car) {\n            $collisions++;\n        }\
    \ else {\n            $cars_left[] = $left_car;\n            $cars_right[] = $right_car;\n\
    \        }\n    }\n    return $collisions;\n}\n\nfunction candidate(...$args)\
    \ {\n    return car_race_collision(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(2) !== 4) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(3) !== 9) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !==\
    \ 64) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 100)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmphbk2sb9o.php:36\n\
    Stack trace:\n#0 /tmp/tmphbk2sb9o.php(43): test()\n#1 {main}\n  thrown in /tmp/tmphbk2sb9o.php\
    \ on line 36\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Imagine a road that's a perfectly straight infinitely long line.\n\
    // n cars are driving left to right;  simultaneously, a different set of n cars\n\
    // are driving right to left.   The two sets of cars start out being very far\
    \ from\n// each other.  All cars move in the same speed.  Two cars are said to\
    \ collide\n// when a car that's moving left to right hits a car that's moving\
    \ right to left.\n// However, the cars are infinitely sturdy and strong; as a\
    \ result, they continue moving\n// in their trajectory as if they did not collide.\n\
    // This function outputs the number of such collisions.\nfunction car_race_collision($n)\
    \ {\n    // TODO: implement this function\n    return 0;\n}\n\nfunction candidate(...$args)\
    \ {\n    return car_race_collision(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(2) !== 4) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(3) !== 9) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !==\
    \ 64) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 100)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpgi3xk9nm.php:20\n\
    Stack trace:\n#0 /tmp/tmpgi3xk9nm.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpgi3xk9nm.php\
    \ on line 20\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Imagine a road that's a perfectly straight infinitely long line.\n\
    // n cars are driving left to right;  simultaneously, a different set of n cars\n\
    // are driving right to left.   The two sets of cars start out being very far\
    \ from\n// each other.  All cars move in the same speed.  Two cars are said to\
    \ collide\n// when a car that's moving left to right hits a car that's moving\
    \ right to left.\n// However, the cars are infinitely sturdy and strong; as a\
    \ result, they continue moving\n// in their trajectory as if they did not collide.\n\
    // This function outputs the number of such collisions.\nfunction car_race_collision($n)\
    \ {\n    $collisions = 0;\n    $left_to_right = array();\n    $right_to_left =\
    \ array();\n    for ($i = 0; $i < $n; $i++) {\n        $left_to_right[] = rand(0,\
    \ 100);\n        $right_to_left[] = rand(0, 100);\n    }\n    sort($left_to_right);\n\
    \    sort($right_to_left);\n    $left_to_right_index = 0;\n    $right_to_left_index\
    \ = 0;\n    while ($left_to_right_index < $n && $right_to_left_index < $n) {\n\
    \        if ($left_to_right[$left_to_right_index] < $right_to_left[$right_to_left_index])\
    \ {\n            $left_to_right_index++;\n        } else {\n            $collisions\
    \ += $left_to_right_index;\n            $right_to_left_index++;\n        }\n \
    \   }\n    return $collisions;\n}\n\nfunction candidate(...$args) {\n    return\
    \ car_race_collision(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !==\
    \ 9) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 16)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 64) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 100) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpvth19_ep.php:38\n\
    Stack trace:\n#0 /tmp/tmpvth19_ep.php(45): test()\n#1 {main}\n  thrown in /tmp/tmpvth19_ep.php\
    \ on line 38\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Imagine a road that's a perfectly straight infinitely long line.\n\
    // n cars are driving left to right;  simultaneously, a different set of n cars\n\
    // are driving right to left.   The two sets of cars start out being very far\
    \ from\n// each other.  All cars move in the same speed.  Two cars are said to\
    \ collide\n// when a car that's moving left to right hits a car that's moving\
    \ right to left.\n// However, the cars are infinitely sturdy and strong; as a\
    \ result, they continue moving\n// in their trajectory as if they did not collide.\n\
    // This function outputs the number of such collisions.\nfunction car_race_collision($n)\
    \ {\n    $left_to_right = range(1, $n);\n    $right_to_left = range($n, 1);\n\
    \    $collisions = 0;\n    foreach ($left_to_right as $left) {\n        foreach\
    \ ($right_to_left as $right) {\n            if ($left == $right) {\n         \
    \       $collisions++;\n            }\n        }\n    }\n    return $collisions;\n\
    }\n\nfunction candidate(...$args) {\n    return car_race_collision(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== 9) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4) !== 16) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(8) !== 64) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(10) !== 100) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpygmfyeam.php:29\n\
    Stack trace:\n#0 /tmp/tmpygmfyeam.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpygmfyeam.php\
    \ on line 29\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Imagine a road that's a perfectly straight infinitely long line.\n\
    // n cars are driving left to right;  simultaneously, a different set of n cars\n\
    // are driving right to left.   The two sets of cars start out being very far\
    \ from\n// each other.  All cars move in the same speed.  Two cars are said to\
    \ collide\n// when a car that's moving left to right hits a car that's moving\
    \ right to left.\n// However, the cars are infinitely sturdy and strong; as a\
    \ result, they continue moving\n// in their trajectory as if they did not collide.\n\
    // This function outputs the number of such collisions.\nfunction car_race_collision($n)\
    \ {\n    $collisions = 0;\n    $left_cars = [];\n    $right_cars = [];\n    for\
    \ ($i = 0; $i < $n; $i++) {\n        $left_cars[] = $i;\n        $right_cars[]\
    \ = $i;\n    }\n    while (count($left_cars) > 0 && count($right_cars) > 0) {\n\
    \        $left_car = array_shift($left_cars);\n        $right_car = array_pop($right_cars);\n\
    \        if ($left_car == $right_car) {\n            $collisions++;\n        }\n\
    \    }\n    return $collisions;\n}\n\nfunction candidate(...$args) {\n    return\
    \ car_race_collision(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !==\
    \ 9) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 16)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 64) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 100) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmps4uufnqm.php:33\n\
    Stack trace:\n#0 /tmp/tmps4uufnqm.php(40): test()\n#1 {main}\n  thrown in /tmp/tmps4uufnqm.php\
    \ on line 33\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Imagine a road that's a perfectly straight infinitely long line.\n\
    // n cars are driving left to right;  simultaneously, a different set of n cars\n\
    // are driving right to left.   The two sets of cars start out being very far\
    \ from\n// each other.  All cars move in the same speed.  Two cars are said to\
    \ collide\n// when a car that's moving left to right hits a car that's moving\
    \ right to left.\n// However, the cars are infinitely sturdy and strong; as a\
    \ result, they continue moving\n// in their trajectory as if they did not collide.\n\
    // This function outputs the number of such collisions.\nfunction car_race_collision($n)\
    \ {\n    $left_to_right = range(1, $n);\n    $right_to_left = range($n, 1);\n\
    \    $collisions = 0;\n    for ($i = 0; $i < $n; $i++) {\n        for ($j = 0;\
    \ $j < $n; $j++) {\n            if ($left_to_right[$i] == $right_to_left[$j])\
    \ {\n                $collisions++;\n            }\n        }\n    }\n    return\
    \ $collisions;\n}\n\nfunction candidate(...$args) {\n    return car_race_collision(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== 9) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4) !== 16) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(8) !== 64) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(10) !== 100) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpvic8746w.php:29\n\
    Stack trace:\n#0 /tmp/tmpvic8746w.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpvic8746w.php\
    \ on line 29\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Imagine a road that's a perfectly straight infinitely long line.\n\
    // n cars are driving left to right;  simultaneously, a different set of n cars\n\
    // are driving right to left.   The two sets of cars start out being very far\
    \ from\n// each other.  All cars move in the same speed.  Two cars are said to\
    \ collide\n// when a car that's moving left to right hits a car that's moving\
    \ right to left.\n// However, the cars are infinitely sturdy and strong; as a\
    \ result, they continue moving\n// in their trajectory as if they did not collide.\n\
    // This function outputs the number of such collisions.\nfunction car_race_collision($n)\
    \ {\n    $left_to_right = range(1, $n);\n    $right_to_left = range($n, 1);\n\
    \    $collisions = 0;\n    for ($i = 0; $i < $n; $i++) {\n        for ($j = 0;\
    \ $j < $n; $j++) {\n            if ($left_to_right[$i] == $right_to_left[$j])\
    \ {\n                $collisions++;\n            }\n        }\n    }\n    return\
    \ $collisions;\n}\n\nfunction candidate(...$args) {\n    return car_race_collision(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== 9) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4) !== 16) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(8) !== 64) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(10) !== 100) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp5v_rmnnn.php:29\n\
    Stack trace:\n#0 /tmp/tmp5v_rmnnn.php(36): test()\n#1 {main}\n  thrown in /tmp/tmp5v_rmnnn.php\
    \ on line 29\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Imagine a road that's a perfectly straight infinitely long line.\n\
    // n cars are driving left to right;  simultaneously, a different set of n cars\n\
    // are driving right to left.   The two sets of cars start out being very far\
    \ from\n// each other.  All cars move in the same speed.  Two cars are said to\
    \ collide\n// when a car that's moving left to right hits a car that's moving\
    \ right to left.\n// However, the cars are infinitely sturdy and strong; as a\
    \ result, they continue moving\n// in their trajectory as if they did not collide.\n\
    // This function outputs the number of such collisions.\nfunction car_race_collision($n)\
    \ {\n    $collisions = 0;\n    $left_to_right = range(1, $n);\n    $right_to_left\
    \ = range($n, 1);\n    for ($i = 0; $i < $n; $i++) {\n        for ($j = 0; $j\
    \ < $n; $j++) {\n            if ($left_to_right[$i] == $right_to_left[$j]) {\n\
    \                $collisions++;\n            }\n        }\n    }\n    return $collisions;\n\
    }\n\nfunction candidate(...$args) {\n    return car_race_collision(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== 9) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4) !== 16) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(8) !== 64) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(10) !== 100) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpcpsd_o6d.php:29\n\
    Stack trace:\n#0 /tmp/tmpcpsd_o6d.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpcpsd_o6d.php\
    \ on line 29\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Imagine a road that's a perfectly straight infinitely long line.\n\
    // n cars are driving left to right;  simultaneously, a different set of n cars\n\
    // are driving right to left.   The two sets of cars start out being very far\
    \ from\n// each other.  All cars move in the same speed.  Two cars are said to\
    \ collide\n// when a car that's moving left to right hits a car that's moving\
    \ right to left.\n// However, the cars are infinitely sturdy and strong; as a\
    \ result, they continue moving\n// in their trajectory as if they did not collide.\n\
    // This function outputs the number of such collisions.\nfunction car_race_collision($n)\
    \ {\n    $left_to_right = range(1, $n);\n    $right_to_left = range($n, 1);\n\
    \    $collisions = 0;\n    for ($i = 0; $i < $n; $i++) {\n        for ($j = 0;\
    \ $j < $n; $j++) {\n            if ($left_to_right[$i] == $right_to_left[$j])\
    \ {\n                $collisions++;\n            }\n        }\n    }\n    return\
    \ $collisions;\n}\n\necho car_race_collision(5);\necho \"\\n\";\necho car_race_collision(10);\n\
    echo \"\\n\";\necho car_race_collision(100);\necho \"\\n\";\necho car_race_collision(1000);\n\
    echo \"\\n\";\necho car_race_collision(10000);\necho \"\\n\";\necho car_race_collision(100000);\n\
    echo \"\\n\";\necho car_race_collision(1000000);\necho \"\\n\";\necho car_race_collision(10000000);\n\
    echo \"\\n\";\necho car_race_collision(100000000);\necho \"\\n\";\necho car_race_collision(1000000000);\n\
    echo \"\\n\";\necho car_race_collision(10000000000);\necho \"\\n\";\necho car_race_collision(100000000000);\n\
    echo \"\\n\";\necho car_race_collision(1000000000000);\necho \"\\n\";\necho car_race_collision(10000000000000);\n\
    echo \"\\n\";\necho car_race_collision(100000000000000);\necho \"\\n\";\necho\
    \ car_race_collision(1000000000000000);\necho \"\\n\";\necho car_race_collision(10000000000000000);\n\
    echo \"\\n\";\necho car_race_collision(100000000000000000);\necho \"\\n\";\necho\
    \ car_race_collision(1000000000000000000);\necho \"\\n\";\necho car_race_collision(10000000000000000000);\n\
    echo \"\\n\";\necho car_race_collision(100000000000000000000);\necho \"\\n\";\n\
    echo car_race_collision(1000000000000000000000);\necho \"\\n\";\necho car_race\n\
    function candidate(...$args) {\n    return car_race_collision(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(2) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== 9) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4) !== 16) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(8) !== 64) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(10) !== 100) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  stdout: ''
  stderr: "PHP Parse error:  syntax error, unexpected token \"function\", expecting\
    \ \",\" or \";\" in /tmp/tmpfwtlytmj.php on line 69\n"
  exit_code: 255
  status: SyntaxError
- program: "<?php\n// Imagine a road that's a perfectly straight infinitely long line.\n\
    // n cars are driving left to right;  simultaneously, a different set of n cars\n\
    // are driving right to left.   The two sets of cars start out being very far\
    \ from\n// each other.  All cars move in the same speed.  Two cars are said to\
    \ collide\n// when a car that's moving left to right hits a car that's moving\
    \ right to left.\n// However, the cars are infinitely sturdy and strong; as a\
    \ result, they continue moving\n// in their trajectory as if they did not collide.\n\
    // This function outputs the number of such collisions.\nfunction car_race_collision($n)\
    \ {\n    $collisions = 0;\n    $left_to_right = range(1, $n);\n    $right_to_left\
    \ = range($n, 1);\n    foreach ($left_to_right as $left) {\n        foreach ($right_to_left\
    \ as $right) {\n            if ($left == $right) {\n                $collisions++;\n\
    \            }\n        }\n    }\n    return $collisions;\n}\n\nfunction candidate(...$args)\
    \ {\n    return car_race_collision(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(2) !== 4) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(3) !== 9) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !==\
    \ 64) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 100)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpwca718z4.php:29\n\
    Stack trace:\n#0 /tmp/tmpwca718z4.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpwca718z4.php\
    \ on line 29\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Imagine a road that's a perfectly straight infinitely long line.\n\
    // n cars are driving left to right;  simultaneously, a different set of n cars\n\
    // are driving right to left.   The two sets of cars start out being very far\
    \ from\n// each other.  All cars move in the same speed.  Two cars are said to\
    \ collide\n// when a car that's moving left to right hits a car that's moving\
    \ right to left.\n// However, the cars are infinitely sturdy and strong; as a\
    \ result, they continue moving\n// in their trajectory as if they did not collide.\n\
    // This function outputs the number of such collisions.\nfunction car_race_collision($n)\
    \ {\n    $collisions = 0;\n    $left_to_right = range(1, $n);\n    $right_to_left\
    \ = range($n, 1);\n    $left_to_right_index = 0;\n    $right_to_left_index = 0;\n\
    \    while ($left_to_right_index < $n && $right_to_left_index < $n) {\n      \
    \  if ($left_to_right[$left_to_right_index] < $right_to_left[$right_to_left_index])\
    \ {\n            $left_to_right_index++;\n        } else {\n            $right_to_left_index++;\n\
    \            $collisions += $left_to_right_index;\n        }\n    }\n    return\
    \ $collisions;\n}\n\necho car_race_collision(5) . \"\\n\";\necho car_race_collision(10)\
    \ . \"\\n\";\necho car_race_collision(100) . \"\\n\";\necho car_race_collision(1000)\
    \ . \"\\n\";\necho car_race_collision(10000) . \"\\n\";\necho car_race_collision(100000)\
    \ . \"\\n\";\necho car_race_collision(1000000) . \"\\n\";\necho car_race_collision(10000000)\
    \ . \"\\n\";\necho car_race_collision(100000000) . \"\\n\";\necho car_race_collision(1000000000)\
    \ . \"\\n\";\necho car_race_collision(10000000000) . \"\\n\";\necho car_race_collision(100000000000)\
    \ . \"\\n\";\necho car_race_collision(1000000000000) . \"\\n\";\necho car_race_collision(10000000000000)\
    \ . \"\\n\";\necho car_race_collision(100000000000000) . \"\\n\";\necho car_race_collision(1000000000000000)\
    \ . \"\\n\";\necho car_race_collision(10000000000000000) . \"\\n\";\necho car_race_collision(100000000000000000)\
    \ . \"\\n\";\necho car_race_collision(1000000000000000000) . \"\\n\";\necho car_race_collision(10000000000000000000)\
    \ . \"\\\nfunction candidate(...$args) {\n    return car_race_collision(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== 9) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4) !== 16) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(8) !== 64) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(10) !== 100) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  stdout: ''
  stderr: "PHP Parse error:  syntax error, unexpected identifier \"Test\", expecting\
    \ \",\" or \";\" in /tmp/tmpksnpyuws.php on line 52\n"
  exit_code: 255
  status: SyntaxError
- program: "<?php\n// Imagine a road that's a perfectly straight infinitely long line.\n\
    // n cars are driving left to right;  simultaneously, a different set of n cars\n\
    // are driving right to left.   The two sets of cars start out being very far\
    \ from\n// each other.  All cars move in the same speed.  Two cars are said to\
    \ collide\n// when a car that's moving left to right hits a car that's moving\
    \ right to left.\n// However, the cars are infinitely sturdy and strong; as a\
    \ result, they continue moving\n// in their trajectory as if they did not collide.\n\
    // This function outputs the number of such collisions.\nfunction car_race_collision($n)\
    \ {\n    $collisions = 0;\n    $left_to_right = array();\n    $right_to_left =\
    \ array();\n    for ($i = 0; $i < $n; $i++) {\n        $left_to_right[] = $i;\n\
    \        $right_to_left[] = $i;\n    }\n    while (count($left_to_right) > 0 &&\
    \ count($right_to_left) > 0) {\n        $left_car = array_shift($left_to_right);\n\
    \        $right_car = array_shift($right_to_left);\n        if ($left_car == $right_car)\
    \ {\n            $collisions++;\n        } else {\n            $left_to_right[]\
    \ = $left_car;\n            $right_to_left[] = $right_car;\n        }\n    }\n\
    \    return $collisions;\n}\n\nfunction candidate(...$args) {\n    return car_race_collision(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== 9) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4) !== 16) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(8) !== 64) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(10) !== 100) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmplf2i4l8j.php:36\n\
    Stack trace:\n#0 /tmp/tmplf2i4l8j.php(43): test()\n#1 {main}\n  thrown in /tmp/tmplf2i4l8j.php\
    \ on line 36\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Imagine a road that's a perfectly straight infinitely long line.\n\
    // n cars are driving left to right;  simultaneously, a different set of n cars\n\
    // are driving right to left.   The two sets of cars start out being very far\
    \ from\n// each other.  All cars move in the same speed.  Two cars are said to\
    \ collide\n// when a car that's moving left to right hits a car that's moving\
    \ right to left.\n// However, the cars are infinitely sturdy and strong; as a\
    \ result, they continue moving\n// in their trajectory as if they did not collide.\n\
    // This function outputs the number of such collisions.\nfunction car_race_collision($n)\
    \ {\n  $collisions = 0;\n  $left_to_right = range(1, $n);\n  $right_to_left =\
    \ range($n, 1);\n  foreach ($left_to_right as $left) {\n    foreach ($right_to_left\
    \ as $right) {\n      if ($left == $right) {\n        $collisions++;\n      }\n\
    \    }\n  }\n  return $collisions;\n}\n\nfunction candidate(...$args) {\n    return\
    \ car_race_collision(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !==\
    \ 9) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 16)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 64) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 100) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp2nc_y_eq.php:29\n\
    Stack trace:\n#0 /tmp/tmp2nc_y_eq.php(36): test()\n#1 {main}\n  thrown in /tmp/tmp2nc_y_eq.php\
    \ on line 29\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Imagine a road that's a perfectly straight infinitely long line.\n\
    // n cars are driving left to right;  simultaneously, a different set of n cars\n\
    // are driving right to left.   The two sets of cars start out being very far\
    \ from\n// each other.  All cars move in the same speed.  Two cars are said to\
    \ collide\n// when a car that's moving left to right hits a car that's moving\
    \ right to left.\n// However, the cars are infinitely sturdy and strong; as a\
    \ result, they continue moving\n// in their trajectory as if they did not collide.\n\
    // This function outputs the number of such collisions.\nfunction car_race_collision($n)\
    \ {\n    $collisions = 0;\n    $left_to_right = range(1, $n);\n    $right_to_left\
    \ = range($n, 1);\n    for ($i = 0; $i < $n; $i++) {\n        for ($j = 0; $j\
    \ < $n; $j++) {\n            if ($left_to_right[$i] == $right_to_left[$j]) {\n\
    \                $collisions++;\n            }\n        }\n    }\n    return $collisions;\n\
    }\n\nfunction candidate(...$args) {\n    return car_race_collision(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== 9) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4) !== 16) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(8) !== 64) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(10) !== 100) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp29_3vbdu.php:29\n\
    Stack trace:\n#0 /tmp/tmp29_3vbdu.php(36): test()\n#1 {main}\n  thrown in /tmp/tmp29_3vbdu.php\
    \ on line 29\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Imagine a road that's a perfectly straight infinitely long line.\n\
    // n cars are driving left to right;  simultaneously, a different set of n cars\n\
    // are driving right to left.   The two sets of cars start out being very far\
    \ from\n// each other.  All cars move in the same speed.  Two cars are said to\
    \ collide\n// when a car that's moving left to right hits a car that's moving\
    \ right to left.\n// However, the cars are infinitely sturdy and strong; as a\
    \ result, they continue moving\n// in their trajectory as if they did not collide.\n\
    // This function outputs the number of such collisions.\nfunction car_race_collision($n)\
    \ {\n    $collisions = 0;\n    $left_to_right = array();\n    $right_to_left =\
    \ array();\n    for ($i = 0; $i < $n; $i++) {\n        $left_to_right[] = $i;\n\
    \        $right_to_left[] = $i;\n    }\n    for ($i = 0; $i < $n; $i++) {\n  \
    \      for ($j = 0; $j < $n; $j++) {\n            if ($left_to_right[$i] == $right_to_left[$j])\
    \ {\n                $collisions++;\n            }\n        }\n    }\n    return\
    \ $collisions;\n}\n\nfunction candidate(...$args) {\n    return car_race_collision(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== 9) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4) !== 16) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(8) !== 64) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(10) !== 100) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpjku19591.php:33\n\
    Stack trace:\n#0 /tmp/tmpjku19591.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpjku19591.php\
    \ on line 33\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Imagine a road that's a perfectly straight infinitely long line.\n\
    // n cars are driving left to right;  simultaneously, a different set of n cars\n\
    // are driving right to left.   The two sets of cars start out being very far\
    \ from\n// each other.  All cars move in the same speed.  Two cars are said to\
    \ collide\n// when a car that's moving left to right hits a car that's moving\
    \ right to left.\n// However, the cars are infinitely sturdy and strong; as a\
    \ result, they continue moving\n// in their trajectory as if they did not collide.\n\
    // This function outputs the number of such collisions.\nfunction car_race_collision($n)\
    \ {\n    $collisions = 0;\n    $left_to_right = range(1, $n);\n    $right_to_left\
    \ = range($n, 1);\n    for ($i = 0; $i < $n; $i++) {\n        for ($j = 0; $j\
    \ < $n; $j++) {\n            if ($left_to_right[$i] == $right_to_left[$j]) {\n\
    \                $collisions++;\n            }\n        }\n    }\n    return $collisions;\n\
    }\n\nfunction candidate(...$args) {\n    return car_race_collision(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== 9) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4) !== 16) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(8) !== 64) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(10) !== 100) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpdui4jsg8.php:29\n\
    Stack trace:\n#0 /tmp/tmpdui4jsg8.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpdui4jsg8.php\
    \ on line 29\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Imagine a road that's a perfectly straight infinitely long line.\n\
    // n cars are driving left to right;  simultaneously, a different set of n cars\n\
    // are driving right to left.   The two sets of cars start out being very far\
    \ from\n// each other.  All cars move in the same speed.  Two cars are said to\
    \ collide\n// when a car that's moving left to right hits a car that's moving\
    \ right to left.\n// However, the cars are infinitely sturdy and strong; as a\
    \ result, they continue moving\n// in their trajectory as if they did not collide.\n\
    // This function outputs the number of such collisions.\nfunction car_race_collision($n)\
    \ {\n    $collisions = 0;\n    for ($i = 0; $i < $n; $i++) {\n        for ($j\
    \ = 0; $j < $n; $j++) {\n            if ($i < $j) {\n                $collisions++;\n\
    \            }\n        }\n    }\n    return $collisions;\n}\n\nfunction candidate(...$args)\
    \ {\n    return car_race_collision(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(2) !== 4) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(3) !== 9) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !==\
    \ 64) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 100)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmptkhj2k8x.php:27\n\
    Stack trace:\n#0 /tmp/tmptkhj2k8x.php(34): test()\n#1 {main}\n  thrown in /tmp/tmptkhj2k8x.php\
    \ on line 27\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Imagine a road that's a perfectly straight infinitely long line.\n\
    // n cars are driving left to right;  simultaneously, a different set of n cars\n\
    // are driving right to left.   The two sets of cars start out being very far\
    \ from\n// each other.  All cars move in the same speed.  Two cars are said to\
    \ collide\n// when a car that's moving left to right hits a car that's moving\
    \ right to left.\n// However, the cars are infinitely sturdy and strong; as a\
    \ result, they continue moving\n// in their trajectory as if they did not collide.\n\
    // This function outputs the number of such collisions.\nfunction car_race_collision($n)\
    \ {\n    $collisions = 0;\n    $left_to_right = array();\n    $right_to_left =\
    \ array();\n    for ($i = 0; $i < $n; $i++) {\n        $left_to_right[] = $i;\n\
    \        $right_to_left[] = $i;\n    }\n    while (count($left_to_right) > 0 &&\
    \ count($right_to_left) > 0) {\n        $left_car = array_shift($left_to_right);\n\
    \        $right_car = array_shift($right_to_left);\n        if ($left_car == $right_car)\
    \ {\n            $collisions++;\n        } else {\n            $left_to_right[]\
    \ = $left_car;\n            $right_to_left[] = $right_car;\n        }\n    }\n\
    \    return $collisions;\n}\n\nfunction candidate(...$args) {\n    return car_race_collision(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== 9) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4) !== 16) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(8) !== 64) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(10) !== 100) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpcp_s8863.php:36\n\
    Stack trace:\n#0 /tmp/tmpcp_s8863.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpcp_s8863.php\
    \ on line 36\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Imagine a road that's a perfectly straight infinitely long line.\n\
    // n cars are driving left to right;  simultaneously, a different set of n cars\n\
    // are driving right to left.   The two sets of cars start out being very far\
    \ from\n// each other.  All cars move in the same speed.  Two cars are said to\
    \ collide\n// when a car that's moving left to right hits a car that's moving\
    \ right to left.\n// However, the cars are infinitely sturdy and strong; as a\
    \ result, they continue moving\n// in their trajectory as if they did not collide.\n\
    // This function outputs the number of such collisions.\nfunction car_race_collision($n)\
    \ {\n    $collisions = 0;\n    $left_to_right = array();\n    $right_to_left =\
    \ array();\n    for ($i = 0; $i < $n; $i++) {\n        $left_to_right[] = $i;\n\
    \        $right_to_left[] = $i;\n    }\n    for ($i = 0; $i < $n; $i++) {\n  \
    \      for ($j = 0; $j < $n; $j++) {\n            if ($left_to_right[$i] == $right_to_left[$j])\
    \ {\n                $collisions++;\n            }\n        }\n    }\n    return\
    \ $collisions;\n}\n\nfunction candidate(...$args) {\n    return car_race_collision(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== 9) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4) !== 16) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(8) !== 64) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(10) !== 100) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpi0v6aijw.php:33\n\
    Stack trace:\n#0 /tmp/tmpi0v6aijw.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpi0v6aijw.php\
    \ on line 33\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Imagine a road that's a perfectly straight infinitely long line.\n\
    // n cars are driving left to right;  simultaneously, a different set of n cars\n\
    // are driving right to left.   The two sets of cars start out being very far\
    \ from\n// each other.  All cars move in the same speed.  Two cars are said to\
    \ collide\n// when a car that's moving left to right hits a car that's moving\
    \ right to left.\n// However, the cars are infinitely sturdy and strong; as a\
    \ result, they continue moving\n// in their trajectory as if they did not collide.\n\
    // This function outputs the number of such collisions.\nfunction car_race_collision($n)\
    \ {\n    $collisions = 0;\n    for ($i = 0; $i < $n; $i++) {\n        for ($j\
    \ = 0; $j < $n; $j++) {\n            if ($i < $j) {\n                $collisions++;\n\
    \            }\n        }\n    }\n    return $collisions;\n}\n\nfunction candidate(...$args)\
    \ {\n    return car_race_collision(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(2) !== 4) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(3) !== 9) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !==\
    \ 64) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 100)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmppj272l1v.php:27\n\
    Stack trace:\n#0 /tmp/tmppj272l1v.php(34): test()\n#1 {main}\n  thrown in /tmp/tmppj272l1v.php\
    \ on line 27\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Imagine a road that's a perfectly straight infinitely long line.\n\
    // n cars are driving left to right;  simultaneously, a different set of n cars\n\
    // are driving right to left.   The two sets of cars start out being very far\
    \ from\n// each other.  All cars move in the same speed.  Two cars are said to\
    \ collide\n// when a car that's moving left to right hits a car that's moving\
    \ right to left.\n// However, the cars are infinitely sturdy and strong; as a\
    \ result, they continue moving\n// in their trajectory as if they did not collide.\n\
    // This function outputs the number of such collisions.\nfunction car_race_collision($n)\
    \ {\n    $collisions = 0;\n    $left_to_right = [];\n    $right_to_left = [];\n\
    \    for ($i = 0; $i < $n; $i++) {\n        $left_to_right[] = $i;\n        $right_to_left[]\
    \ = $n - $i - 1;\n    }\n    for ($i = 0; $i < $n; $i++) {\n        for ($j =\
    \ 0; $j < $n; $j++) {\n            if ($left_to_right[$i] == $right_to_left[$j])\
    \ {\n                $collisions++;\n            }\n        }\n    }\n    return\
    \ $collisions;\n}\n\nfunction candidate(...$args) {\n    return car_race_collision(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== 9) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4) !== 16) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(8) !== 64) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(10) !== 100) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpyj475hgg.php:33\n\
    Stack trace:\n#0 /tmp/tmpyj475hgg.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpyj475hgg.php\
    \ on line 33\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Imagine a road that's a perfectly straight infinitely long line.\n\
    // n cars are driving left to right;  simultaneously, a different set of n cars\n\
    // are driving right to left.   The two sets of cars start out being very far\
    \ from\n// each other.  All cars move in the same speed.  Two cars are said to\
    \ collide\n// when a car that's moving left to right hits a car that's moving\
    \ right to left.\n// However, the cars are infinitely sturdy and strong; as a\
    \ result, they continue moving\n// in their trajectory as if they did not collide.\n\
    // This function outputs the number of such collisions.\nfunction car_race_collision($n)\
    \ {\n    $left_to_right = range(1, $n);\n    $right_to_left = range($n, 1);\n\
    \    $collisions = 0;\n    $left_to_right_index = 0;\n    $right_to_left_index\
    \ = 0;\n    while ($left_to_right_index < $n && $right_to_left_index < $n) {\n\
    \        if ($left_to_right[$left_to_right_index] < $right_to_left[$right_to_left_index])\
    \ {\n            $left_to_right_index++;\n        } else {\n            $right_to_left_index++;\n\
    \            $collisions += $left_to_right_index;\n        }\n    }\n    return\
    \ $collisions;\n}\n\nfunction candidate(...$args) {\n    return car_race_collision(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== 9) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4) !== 16) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(8) !== 64) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(10) !== 100) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp7o14nd1d.php:32\n\
    Stack trace:\n#0 /tmp/tmp7o14nd1d.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp7o14nd1d.php\
    \ on line 32\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Imagine a road that's a perfectly straight infinitely long line.\n\
    // n cars are driving left to right;  simultaneously, a different set of n cars\n\
    // are driving right to left.   The two sets of cars start out being very far\
    \ from\n// each other.  All cars move in the same speed.  Two cars are said to\
    \ collide\n// when a car that's moving left to right hits a car that's moving\
    \ right to left.\n// However, the cars are infinitely sturdy and strong; as a\
    \ result, they continue moving\n// in their trajectory as if they did not collide.\n\
    // This function outputs the number of such collisions.\nfunction car_race_collision($n)\
    \ {\n    $collisions = 0;\n    $left_to_right = range(1, $n);\n    $right_to_left\
    \ = range($n, 1);\n    for ($i = 0; $i < $n; $i++) {\n        for ($j = 0; $j\
    \ < $n; $j++) {\n            if ($left_to_right[$i] == $right_to_left[$j]) {\n\
    \                $collisions++;\n            }\n        }\n    }\n    return $collisions;\n\
    }\n\nfunction candidate(...$args) {\n    return car_race_collision(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== 9) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4) !== 16) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(8) !== 64) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(10) !== 100) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmppglo8pjl.php:29\n\
    Stack trace:\n#0 /tmp/tmppglo8pjl.php(36): test()\n#1 {main}\n  thrown in /tmp/tmppglo8pjl.php\
    \ on line 29\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Imagine a road that's a perfectly straight infinitely long line.\n\
    // n cars are driving left to right;  simultaneously, a different set of n cars\n\
    // are driving right to left.   The two sets of cars start out being very far\
    \ from\n// each other.  All cars move in the same speed.  Two cars are said to\
    \ collide\n// when a car that's moving left to right hits a car that's moving\
    \ right to left.\n// However, the cars are infinitely sturdy and strong; as a\
    \ result, they continue moving\n// in their trajectory as if they did not collide.\n\
    // This function outputs the number of such collisions.\nfunction car_race_collision($n)\
    \ {\n    // TODO: Implement this function.\n    $left = $right = $collision =\
    \ 0;\n    for ($i = 0; $i < $n; $i++) {\n        $left += $i;\n        $right\
    \ += $n - $i - 1;\n        $collision += $left * $right;\n    }\n    return $collision;\n\
    }\n\nfunction candidate(...$args) {\n    return car_race_collision(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== 9) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4) !== 16) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(8) !== 64) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(10) !== 100) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpg9pi162q.php:26\n\
    Stack trace:\n#0 /tmp/tmpg9pi162q.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpg9pi162q.php\
    \ on line 26\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Imagine a road that's a perfectly straight infinitely long line.\n\
    // n cars are driving left to right;  simultaneously, a different set of n cars\n\
    // are driving right to left.   The two sets of cars start out being very far\
    \ from\n// each other.  All cars move in the same speed.  Two cars are said to\
    \ collide\n// when a car that's moving left to right hits a car that's moving\
    \ right to left.\n// However, the cars are infinitely sturdy and strong; as a\
    \ result, they continue moving\n// in their trajectory as if they did not collide.\n\
    // This function outputs the number of such collisions.\nfunction car_race_collision($n)\
    \ {\n    $collisions = 0;\n    $left_to_right = range(1, $n);\n    $right_to_left\
    \ = range($n, 1);\n    $left_to_right_index = 0;\n    $right_to_left_index = 0;\n\
    \    while ($left_to_right_index < $n && $right_to_left_index < $n) {\n      \
    \  if ($left_to_right[$left_to_right_index] < $right_to_left[$right_to_left_index])\
    \ {\n            $left_to_right_index++;\n        } else {\n            $right_to_left_index++;\n\
    \            $collisions += $left_to_right_index;\n        }\n    }\n    return\
    \ $collisions;\n}\n\nfunction candidate(...$args) {\n    return car_race_collision(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== 9) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4) !== 16) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(8) !== 64) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(10) !== 100) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmporvizjo3.php:32\n\
    Stack trace:\n#0 /tmp/tmporvizjo3.php(39): test()\n#1 {main}\n  thrown in /tmp/tmporvizjo3.php\
    \ on line 32\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Imagine a road that's a perfectly straight infinitely long line.\n\
    // n cars are driving left to right;  simultaneously, a different set of n cars\n\
    // are driving right to left.   The two sets of cars start out being very far\
    \ from\n// each other.  All cars move in the same speed.  Two cars are said to\
    \ collide\n// when a car that's moving left to right hits a car that's moving\
    \ right to left.\n// However, the cars are infinitely sturdy and strong; as a\
    \ result, they continue moving\n// in their trajectory as if they did not collide.\n\
    // This function outputs the number of such collisions.\nfunction car_race_collision($n)\
    \ {\n    $left = $right = 0;\n    $collisions = 0;\n    while ($left < $n && $right\
    \ < $n) {\n        if ($left == $right) {\n            $collisions++;\n      \
    \      $left++;\n            $right++;\n        } elseif ($left < $right) {\n\
    \            $left++;\n        } else {\n            $right++;\n        }\n  \
    \  }\n    return $collisions;\n}\n\nfunction candidate(...$args) {\n    return\
    \ car_race_collision(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !==\
    \ 9) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 16)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 64) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 100) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp382ypm_i.php:32\n\
    Stack trace:\n#0 /tmp/tmp382ypm_i.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp382ypm_i.php\
    \ on line 32\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Imagine a road that's a perfectly straight infinitely long line.\n\
    // n cars are driving left to right;  simultaneously, a different set of n cars\n\
    // are driving right to left.   The two sets of cars start out being very far\
    \ from\n// each other.  All cars move in the same speed.  Two cars are said to\
    \ collide\n// when a car that's moving left to right hits a car that's moving\
    \ right to left.\n// However, the cars are infinitely sturdy and strong; as a\
    \ result, they continue moving\n// in their trajectory as if they did not collide.\n\
    // This function outputs the number of such collisions.\nfunction car_race_collision($n)\
    \ {\n    $collisions = 0;\n    $cars = array();\n    for ($i = 0; $i < $n; $i++)\
    \ {\n        $cars[$i] = array(\n            'direction' => 'left',\n        \
    \    'position' => $i\n        );\n    }\n    for ($i = 0; $i < $n; $i++) {\n\
    \        $cars[$i + $n] = array(\n            'direction' => 'right',\n      \
    \      'position' => $i\n        );\n    }\n    for ($i = 0; $i < $n; $i++) {\n\
    \        for ($j = 0; $j < $n; $j++) {\n            if ($cars[$i]['direction']\
    \ == 'left' && $cars[$j]['direction'] == 'right') {\n                if ($cars[$i]['position']\
    \ > $cars[$j]['position']) {\n                    $collisions++;\n           \
    \     }\n            }\n        }\n    }\n    return $collisions;\n}\n\nfunction\
    \ candidate(...$args) {\n    return car_race_collision(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(2) !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3) !== 9) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(4) !== 16) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(8) !== 64) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(10) !== 100) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmphkg5rxha.php:42\n\
    Stack trace:\n#0 /tmp/tmphkg5rxha.php(49): test()\n#1 {main}\n  thrown in /tmp/tmphkg5rxha.php\
    \ on line 42\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Imagine a road that's a perfectly straight infinitely long line.\n\
    // n cars are driving left to right;  simultaneously, a different set of n cars\n\
    // are driving right to left.   The two sets of cars start out being very far\
    \ from\n// each other.  All cars move in the same speed.  Two cars are said to\
    \ collide\n// when a car that's moving left to right hits a car that's moving\
    \ right to left.\n// However, the cars are infinitely sturdy and strong; as a\
    \ result, they continue moving\n// in their trajectory as if they did not collide.\n\
    // This function outputs the number of such collisions.\nfunction car_race_collision($n)\
    \ {\n    $collisions = 0;\n    $left_to_right = array();\n    $right_to_left =\
    \ array();\n    for ($i = 0; $i < $n; $i++) {\n        $left_to_right[] = $i;\n\
    \        $right_to_left[] = $i;\n    }\n    while (count($left_to_right) > 0 &&\
    \ count($right_to_left) > 0) {\n        $left_to_right_car = array_shift($left_to_right);\n\
    \        $right_to_left_car = array_shift($right_to_left);\n        if ($left_to_right_car\
    \ == $right_to_left_car) {\n            $collisions++;\n        }\n    }\n   \
    \ return $collisions;\n}\n\nfunction candidate(...$args) {\n    return car_race_collision(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== 9) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4) !== 16) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(8) !== 64) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(10) !== 100) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpfpe7al3b.php:33\n\
    Stack trace:\n#0 /tmp/tmpfpe7al3b.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpfpe7al3b.php\
    \ on line 33\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Imagine a road that's a perfectly straight infinitely long line.\n\
    // n cars are driving left to right;  simultaneously, a different set of n cars\n\
    // are driving right to left.   The two sets of cars start out being very far\
    \ from\n// each other.  All cars move in the same speed.  Two cars are said to\
    \ collide\n// when a car that's moving left to right hits a car that's moving\
    \ right to left.\n// However, the cars are infinitely sturdy and strong; as a\
    \ result, they continue moving\n// in their trajectory as if they did not collide.\n\
    // This function outputs the number of such collisions.\nfunction car_race_collision($n)\
    \ {\n    $collisions = 0;\n    for ($i = 0; $i < $n; $i++) {\n        $collisions\
    \ += $i;\n    }\n    return $collisions;\n}\n\nfunction candidate(...$args) {\n\
    \    return car_race_collision(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(2) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3)\
    \ !== 9) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !==\
    \ 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 64)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 100) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmphuxvg2fg.php:23\n\
    Stack trace:\n#0 /tmp/tmphuxvg2fg.php(30): test()\n#1 {main}\n  thrown in /tmp/tmphuxvg2fg.php\
    \ on line 23\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Imagine a road that's a perfectly straight infinitely long line.\n\
    // n cars are driving left to right;  simultaneously, a different set of n cars\n\
    // are driving right to left.   The two sets of cars start out being very far\
    \ from\n// each other.  All cars move in the same speed.  Two cars are said to\
    \ collide\n// when a car that's moving left to right hits a car that's moving\
    \ right to left.\n// However, the cars are infinitely sturdy and strong; as a\
    \ result, they continue moving\n// in their trajectory as if they did not collide.\n\
    // This function outputs the number of such collisions.\nfunction car_race_collision($n)\
    \ {\n    $left_to_right = [];\n    $right_to_left = [];\n    for ($i = 0; $i <\
    \ $n; $i++) {\n        $left_to_right[] = $i;\n        $right_to_left[] = $i;\n\
    \    }\n    $collisions = 0;\n    while (count($left_to_right) > 0 && count($right_to_left)\
    \ > 0) {\n        $left_car = array_shift($left_to_right);\n        $right_car\
    \ = array_shift($right_to_left);\n        if ($left_car > $right_car) {\n    \
    \        $collisions++;\n        } else {\n            $left_to_right[] = $left_car;\n\
    \            $right_to_left[] = $right_car;\n        }\n    }\n    return $collisions;\n\
    }\n\nfunction candidate(...$args) {\n    return car_race_collision(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== 9) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4) !== 16) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(8) !== 64) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(10) !== 100) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  stdout: None
  stderr: None
  exit_code: -1
  status: Timeout
- program: "<?php\n// Imagine a road that's a perfectly straight infinitely long line.\n\
    // n cars are driving left to right;  simultaneously, a different set of n cars\n\
    // are driving right to left.   The two sets of cars start out being very far\
    \ from\n// each other.  All cars move in the same speed.  Two cars are said to\
    \ collide\n// when a car that's moving left to right hits a car that's moving\
    \ right to left.\n// However, the cars are infinitely sturdy and strong; as a\
    \ result, they continue moving\n// in their trajectory as if they did not collide.\n\
    // This function outputs the number of such collisions.\nfunction car_race_collision($n)\
    \ {\n    $collisions = 0;\n    $left_to_right = [];\n    $right_to_left = [];\n\
    \    for ($i = 0; $i < $n; $i++) {\n        $left_to_right[] = rand(0, $n);\n\
    \        $right_to_left[] = rand(0, $n);\n    }\n    sort($left_to_right);\n \
    \   sort($right_to_left);\n    $left_to_right_index = 0;\n    $right_to_left_index\
    \ = 0;\n    while ($left_to_right_index < $n && $right_to_left_index < $n) {\n\
    \        if ($left_to_right[$left_to_right_index] < $right_to_left[$right_to_left_index])\
    \ {\n            $left_to_right_index++;\n        } else {\n            $collisions\
    \ += $left_to_right_index;\n            $right_to_left_index++;\n        }\n \
    \   }\n    return $collisions;\n}\n\necho car_race_collision(10) . \"\\n\";\n\
    function candidate(...$args) {\n    return car_race_collision(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(2) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== 9) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4) !== 16) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(8) !== 64) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(10) !== 100) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  stdout: "36\n"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp9ofeati5.php:39\n\
    Stack trace:\n#0 /tmp/tmp9ofeati5.php(46): test()\n#1 {main}\n  thrown in /tmp/tmp9ofeati5.php\
    \ on line 39\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Imagine a road that's a perfectly straight infinitely long line.\n\
    // n cars are driving left to right;  simultaneously, a different set of n cars\n\
    // are driving right to left.   The two sets of cars start out being very far\
    \ from\n// each other.  All cars move in the same speed.  Two cars are said to\
    \ collide\n// when a car that's moving left to right hits a car that's moving\
    \ right to left.\n// However, the cars are infinitely sturdy and strong; as a\
    \ result, they continue moving\n// in their trajectory as if they did not collide.\n\
    // This function outputs the number of such collisions.\nfunction car_race_collision($n)\
    \ {\n    $collisions = 0;\n    $left_to_right = range(1, $n);\n    $right_to_left\
    \ = range($n, 1);\n    foreach ($left_to_right as $left) {\n        foreach ($right_to_left\
    \ as $right) {\n            if ($left == $right) {\n                $collisions++;\n\
    \            }\n        }\n    }\n    return $collisions;\n}\n\nfunction candidate(...$args)\
    \ {\n    return car_race_collision(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(2) !== 4) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(3) !== 9) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !==\
    \ 64) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 100)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp8bo98954.php:29\n\
    Stack trace:\n#0 /tmp/tmp8bo98954.php(36): test()\n#1 {main}\n  thrown in /tmp/tmp8bo98954.php\
    \ on line 29\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Imagine a road that's a perfectly straight infinitely long line.\n\
    // n cars are driving left to right;  simultaneously, a different set of n cars\n\
    // are driving right to left.   The two sets of cars start out being very far\
    \ from\n// each other.  All cars move in the same speed.  Two cars are said to\
    \ collide\n// when a car that's moving left to right hits a car that's moving\
    \ right to left.\n// However, the cars are infinitely sturdy and strong; as a\
    \ result, they continue moving\n// in their trajectory as if they did not collide.\n\
    // This function outputs the number of such collisions.\nfunction car_race_collision($n)\
    \ {\n\t$collisions = 0;\n\tfor ($i = 0; $i < $n; $i++) {\n\t\tfor ($j = 0; $j\
    \ < $n; $j++) {\n\t\t\tif ($i < $j) {\n\t\t\t\t$collisions++;\n\t\t\t}\n\t\t}\n\
    \t}\n\treturn $collisions;\n}\n\nfunction candidate(...$args) {\n    return car_race_collision(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== 9) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4) !== 16) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(8) !== 64) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(10) !== 100) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpho4aygdq.php:27\n\
    Stack trace:\n#0 /tmp/tmpho4aygdq.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpho4aygdq.php\
    \ on line 27\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Imagine a road that's a perfectly straight infinitely long line.\n\
    // n cars are driving left to right;  simultaneously, a different set of n cars\n\
    // are driving right to left.   The two sets of cars start out being very far\
    \ from\n// each other.  All cars move in the same speed.  Two cars are said to\
    \ collide\n// when a car that's moving left to right hits a car that's moving\
    \ right to left.\n// However, the cars are infinitely sturdy and strong; as a\
    \ result, they continue moving\n// in their trajectory as if they did not collide.\n\
    // This function outputs the number of such collisions.\nfunction car_race_collision($n)\
    \ {\n    $left_to_right = [];\n    $right_to_left = [];\n    for ($i = 0; $i <\
    \ $n; $i++) {\n        $left_to_right[] = $i;\n        $right_to_left[] = $i;\n\
    \    }\n    $collisions = 0;\n    while (count($left_to_right) > 0 && count($right_to_left)\
    \ > 0) {\n        $left_to_right_car = array_shift($left_to_right);\n        $right_to_left_car\
    \ = array_shift($right_to_left);\n        if ($left_to_right_car == $right_to_left_car)\
    \ {\n            $collisions++;\n        }\n    }\n    return $collisions;\n}\n\
    \nfunction candidate(...$args) {\n    return car_race_collision(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(2) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== 9) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4) !== 16) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(8) !== 64) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(10) !== 100) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp7_up_9j3.php:33\n\
    Stack trace:\n#0 /tmp/tmp7_up_9j3.php(40): test()\n#1 {main}\n  thrown in /tmp/tmp7_up_9j3.php\
    \ on line 33\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Imagine a road that's a perfectly straight infinitely long line.\n\
    // n cars are driving left to right;  simultaneously, a different set of n cars\n\
    // are driving right to left.   The two sets of cars start out being very far\
    \ from\n// each other.  All cars move in the same speed.  Two cars are said to\
    \ collide\n// when a car that's moving left to right hits a car that's moving\
    \ right to left.\n// However, the cars are infinitely sturdy and strong; as a\
    \ result, they continue moving\n// in their trajectory as if they did not collide.\n\
    // This function outputs the number of such collisions.\nfunction car_race_collision($n)\
    \ {\n    $collisions = 0;\n    $left_to_right = [];\n    $right_to_left = [];\n\
    \    for ($i = 0; $i < $n; $i++) {\n        $left_to_right[] = $i;\n        $right_to_left[]\
    \ = $n - $i - 1;\n    }\n    for ($i = 0; $i < $n; $i++) {\n        for ($j =\
    \ 0; $j < $n; $j++) {\n            if ($left_to_right[$i] === $right_to_left[$j])\
    \ {\n                $collisions++;\n            }\n        }\n    }\n    return\
    \ $collisions;\n}\n\nfunction candidate(...$args) {\n    return car_race_collision(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== 9) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4) !== 16) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(8) !== 64) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(10) !== 100) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp9v7bmeeb.php:33\n\
    Stack trace:\n#0 /tmp/tmp9v7bmeeb.php(40): test()\n#1 {main}\n  thrown in /tmp/tmp9v7bmeeb.php\
    \ on line 33\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Imagine a road that's a perfectly straight infinitely long line.\n\
    // n cars are driving left to right;  simultaneously, a different set of n cars\n\
    // are driving right to left.   The two sets of cars start out being very far\
    \ from\n// each other.  All cars move in the same speed.  Two cars are said to\
    \ collide\n// when a car that's moving left to right hits a car that's moving\
    \ right to left.\n// However, the cars are infinitely sturdy and strong; as a\
    \ result, they continue moving\n// in their trajectory as if they did not collide.\n\
    // This function outputs the number of such collisions.\nfunction car_race_collision($n)\
    \ {\n    $left_to_right = [];\n    $right_to_left = [];\n    for ($i = 0; $i <\
    \ $n; $i++) {\n        $left_to_right[] = $i;\n        $right_to_left[] = $i;\n\
    \    }\n    $collisions = 0;\n    while (count($left_to_right) > 0 && count($right_to_left)\
    \ > 0) {\n        $left_to_right_car = array_shift($left_to_right);\n        $right_to_left_car\
    \ = array_shift($right_to_left);\n        if ($left_to_right_car == $right_to_left_car)\
    \ {\n            $collisions++;\n        }\n    }\n    return $collisions;\n}\n\
    \nfunction candidate(...$args) {\n    return car_race_collision(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(2) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== 9) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4) !== 16) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(8) !== 64) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(10) !== 100) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpoil7lpkw.php:33\n\
    Stack trace:\n#0 /tmp/tmpoil7lpkw.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpoil7lpkw.php\
    \ on line 33\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Imagine a road that's a perfectly straight infinitely long line.\n\
    // n cars are driving left to right;  simultaneously, a different set of n cars\n\
    // are driving right to left.   The two sets of cars start out being very far\
    \ from\n// each other.  All cars move in the same speed.  Two cars are said to\
    \ collide\n// when a car that's moving left to right hits a car that's moving\
    \ right to left.\n// However, the cars are infinitely sturdy and strong; as a\
    \ result, they continue moving\n// in their trajectory as if they did not collide.\n\
    // This function outputs the number of such collisions.\nfunction car_race_collision($n)\
    \ {\n    $left_to_right = [];\n    $right_to_left = [];\n    for ($i = 0; $i <\
    \ $n; $i++) {\n        $left_to_right[] = $i;\n        $right_to_left[] = $i;\n\
    \    }\n    $collisions = 0;\n    while (count($left_to_right) > 0 && count($right_to_left)\
    \ > 0) {\n        $left_car = array_shift($left_to_right);\n        $right_car\
    \ = array_shift($right_to_left);\n        if ($left_car == $right_car) {\n   \
    \         $collisions++;\n        }\n    }\n    return $collisions;\n}\n\nfunction\
    \ candidate(...$args) {\n    return car_race_collision(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(2) !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3) !== 9) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(4) !== 16) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(8) !== 64) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(10) !== 100) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmphk7yynjc.php:33\n\
    Stack trace:\n#0 /tmp/tmphk7yynjc.php(40): test()\n#1 {main}\n  thrown in /tmp/tmphk7yynjc.php\
    \ on line 33\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Imagine a road that's a perfectly straight infinitely long line.\n\
    // n cars are driving left to right;  simultaneously, a different set of n cars\n\
    // are driving right to left.   The two sets of cars start out being very far\
    \ from\n// each other.  All cars move in the same speed.  Two cars are said to\
    \ collide\n// when a car that's moving left to right hits a car that's moving\
    \ right to left.\n// However, the cars are infinitely sturdy and strong; as a\
    \ result, they continue moving\n// in their trajectory as if they did not collide.\n\
    // This function outputs the number of such collisions.\nfunction car_race_collision($n)\
    \ {\n    $collisions = 0;\n    $left_to_right = array();\n    $right_to_left =\
    \ array();\n    for ($i = 0; $i < $n; $i++) {\n        $left_to_right[] = $i;\n\
    \        $right_to_left[] = $i;\n    }\n    while (count($left_to_right) > 0 &&\
    \ count($right_to_left) > 0) {\n        $left_car = array_shift($left_to_right);\n\
    \        $right_car = array_shift($right_to_left);\n        if ($left_car == $right_car)\
    \ {\n            $collisions++;\n        } else {\n            $left_to_right[]\
    \ = $left_car;\n            $right_to_left[] = $right_car;\n        }\n    }\n\
    \    return $collisions;\n}\n\nfunction candidate(...$args) {\n    return car_race_collision(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== 9) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4) !== 16) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(8) !== 64) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(10) !== 100) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpx8dfjsov.php:36\n\
    Stack trace:\n#0 /tmp/tmpx8dfjsov.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpx8dfjsov.php\
    \ on line 36\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Imagine a road that's a perfectly straight infinitely long line.\n\
    // n cars are driving left to right;  simultaneously, a different set of n cars\n\
    // are driving right to left.   The two sets of cars start out being very far\
    \ from\n// each other.  All cars move in the same speed.  Two cars are said to\
    \ collide\n// when a car that's moving left to right hits a car that's moving\
    \ right to left.\n// However, the cars are infinitely sturdy and strong; as a\
    \ result, they continue moving\n// in their trajectory as if they did not collide.\n\
    // This function outputs the number of such collisions.\nfunction car_race_collision($n)\
    \ {\n    $left_to_right = range(1, $n);\n    $right_to_left = range($n, 1);\n\
    \    $collisions = 0;\n    for ($i = 0; $i < $n; $i++) {\n        for ($j = 0;\
    \ $j < $n; $j++) {\n            if ($left_to_right[$i] == $right_to_left[$j])\
    \ {\n                $collisions++;\n            }\n        }\n    }\n    return\
    \ $collisions;\n}\n\nfunction candidate(...$args) {\n    return car_race_collision(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== 9) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4) !== 16) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(8) !== 64) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(10) !== 100) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpsmi9920g.php:29\n\
    Stack trace:\n#0 /tmp/tmpsmi9920g.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpsmi9920g.php\
    \ on line 29\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Imagine a road that's a perfectly straight infinitely long line.\n\
    // n cars are driving left to right;  simultaneously, a different set of n cars\n\
    // are driving right to left.   The two sets of cars start out being very far\
    \ from\n// each other.  All cars move in the same speed.  Two cars are said to\
    \ collide\n// when a car that's moving left to right hits a car that's moving\
    \ right to left.\n// However, the cars are infinitely sturdy and strong; as a\
    \ result, they continue moving\n// in their trajectory as if they did not collide.\n\
    // This function outputs the number of such collisions.\nfunction car_race_collision($n)\
    \ {\n    $collisions = 0;\n    $left_to_right = range(1, $n);\n    $right_to_left\
    \ = range($n, 1);\n    for ($i = 0; $i < $n; $i++) {\n        for ($j = 0; $j\
    \ < $n; $j++) {\n            if ($left_to_right[$i] == $right_to_left[$j]) {\n\
    \                $collisions++;\n            }\n        }\n    }\n    return $collisions;\n\
    }\n\nfunction candidate(...$args) {\n    return car_race_collision(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== 9) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4) !== 16) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(8) !== 64) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(10) !== 100) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpih0vs8vb.php:29\n\
    Stack trace:\n#0 /tmp/tmpih0vs8vb.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpih0vs8vb.php\
    \ on line 29\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Imagine a road that's a perfectly straight infinitely long line.\n\
    // n cars are driving left to right;  simultaneously, a different set of n cars\n\
    // are driving right to left.   The two sets of cars start out being very far\
    \ from\n// each other.  All cars move in the same speed.  Two cars are said to\
    \ collide\n// when a car that's moving left to right hits a car that's moving\
    \ right to left.\n// However, the cars are infinitely sturdy and strong; as a\
    \ result, they continue moving\n// in their trajectory as if they did not collide.\n\
    // This function outputs the number of such collisions.\nfunction car_race_collision($n)\
    \ {\n    $collisions = 0;\n    $left_cars = array();\n    $right_cars = array();\n\
    \    for ($i = 0; $i < $n; $i++) {\n        $left_cars[$i] = $i;\n        $right_cars[$i]\
    \ = $i;\n    }\n    while (count($left_cars) > 0 && count($right_cars) > 0) {\n\
    \        $left_car = array_shift($left_cars);\n        $right_car = array_shift($right_cars);\n\
    \        if ($left_car == $right_car) {\n            $collisions++;\n        }\
    \ else {\n            array_push($left_cars, $left_car);\n            array_push($right_cars,\
    \ $right_car);\n        }\n    }\n    return $collisions;\n}\n\nfunction candidate(...$args)\
    \ {\n    return car_race_collision(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(2) !== 4) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(3) !== 9) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !==\
    \ 64) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 100)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpibo5fa47.php:36\n\
    Stack trace:\n#0 /tmp/tmpibo5fa47.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpibo5fa47.php\
    \ on line 36\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Imagine a road that's a perfectly straight infinitely long line.\n\
    // n cars are driving left to right;  simultaneously, a different set of n cars\n\
    // are driving right to left.   The two sets of cars start out being very far\
    \ from\n// each other.  All cars move in the same speed.  Two cars are said to\
    \ collide\n// when a car that's moving left to right hits a car that's moving\
    \ right to left.\n// However, the cars are infinitely sturdy and strong; as a\
    \ result, they continue moving\n// in their trajectory as if they did not collide.\n\
    // This function outputs the number of such collisions.\nfunction car_race_collision($n)\
    \ {\n    $left_to_right = array();\n    $right_to_left = array();\n    for ($i\
    \ = 0; $i < $n; $i++) {\n        $left_to_right[] = $i;\n        $right_to_left[]\
    \ = $i;\n    }\n    $collisions = 0;\n    while (count($left_to_right) > 0 &&\
    \ count($right_to_left) > 0) {\n        $left_car = array_shift($left_to_right);\n\
    \        $right_car = array_shift($right_to_left);\n        if ($left_car == $right_car)\
    \ {\n            $collisions++;\n        } else {\n            $left_to_right[]\
    \ = $left_car;\n            $right_to_left[] = $right_car;\n        }\n    }\n\
    \    return $collisions;\n}\n\nfunction candidate(...$args) {\n    return car_race_collision(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== 9) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4) !== 16) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(8) !== 64) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(10) !== 100) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpfcim2q4k.php:36\n\
    Stack trace:\n#0 /tmp/tmpfcim2q4k.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpfcim2q4k.php\
    \ on line 36\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Imagine a road that's a perfectly straight infinitely long line.\n\
    // n cars are driving left to right;  simultaneously, a different set of n cars\n\
    // are driving right to left.   The two sets of cars start out being very far\
    \ from\n// each other.  All cars move in the same speed.  Two cars are said to\
    \ collide\n// when a car that's moving left to right hits a car that's moving\
    \ right to left.\n// However, the cars are infinitely sturdy and strong; as a\
    \ result, they continue moving\n// in their trajectory as if they did not collide.\n\
    // This function outputs the number of such collisions.\nfunction car_race_collision($n)\
    \ {\n  $left_to_right = range(1, $n);\n  $right_to_left = range($n, 1);\n  $collisions\
    \ = 0;\n  while (!empty($left_to_right) && !empty($right_to_left)) {\n    $left_car\
    \ = array_shift($left_to_right);\n    $right_car = array_shift($right_to_left);\n\
    \    if ($left_car == $right_car) {\n      $collisions++;\n    }\n  }\n  return\
    \ $collisions;\n}\n\nfunction candidate(...$args) {\n    return car_race_collision(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== 9) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4) !== 16) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(8) !== 64) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(10) !== 100) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpjzdq1zv5.php:29\n\
    Stack trace:\n#0 /tmp/tmpjzdq1zv5.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpjzdq1zv5.php\
    \ on line 29\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Imagine a road that's a perfectly straight infinitely long line.\n\
    // n cars are driving left to right;  simultaneously, a different set of n cars\n\
    // are driving right to left.   The two sets of cars start out being very far\
    \ from\n// each other.  All cars move in the same speed.  Two cars are said to\
    \ collide\n// when a car that's moving left to right hits a car that's moving\
    \ right to left.\n// However, the cars are infinitely sturdy and strong; as a\
    \ result, they continue moving\n// in their trajectory as if they did not collide.\n\
    // This function outputs the number of such collisions.\nfunction car_race_collision($n)\
    \ {\n    $left_to_right = range(1, $n);\n    $right_to_left = range($n, 1);\n\
    \    $collisions = 0;\n    for ($i = 0; $i < $n; $i++) {\n        if ($left_to_right[$i]\
    \ == $right_to_left[$i]) {\n            $collisions++;\n        }\n    }\n   \
    \ return $collisions;\n}\n\nfunction candidate(...$args) {\n    return car_race_collision(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== 9) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4) !== 16) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(8) !== 64) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(10) !== 100) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpv6nxgyy_.php:27\n\
    Stack trace:\n#0 /tmp/tmpv6nxgyy_.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpv6nxgyy_.php\
    \ on line 27\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Imagine a road that's a perfectly straight infinitely long line.\n\
    // n cars are driving left to right;  simultaneously, a different set of n cars\n\
    // are driving right to left.   The two sets of cars start out being very far\
    \ from\n// each other.  All cars move in the same speed.  Two cars are said to\
    \ collide\n// when a car that's moving left to right hits a car that's moving\
    \ right to left.\n// However, the cars are infinitely sturdy and strong; as a\
    \ result, they continue moving\n// in their trajectory as if they did not collide.\n\
    // This function outputs the number of such collisions.\nfunction car_race_collision($n)\
    \ {\n    $left_to_right = array();\n    $right_to_left = array();\n    for ($i\
    \ = 0; $i < $n; $i++) {\n        $left_to_right[] = $i;\n        $right_to_left[]\
    \ = $i;\n    }\n    $collisions = 0;\n    while (count($left_to_right) > 0 &&\
    \ count($right_to_left) > 0) {\n        $left_car = array_shift($left_to_right);\n\
    \        $right_car = array_shift($right_to_left);\n        if ($left_car == $right_car)\
    \ {\n            $collisions++;\n        }\n    }\n    return $collisions;\n}\n\
    \nfunction candidate(...$args) {\n    return car_race_collision(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(2) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== 9) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4) !== 16) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(8) !== 64) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(10) !== 100) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpabz8me5l.php:33\n\
    Stack trace:\n#0 /tmp/tmpabz8me5l.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpabz8me5l.php\
    \ on line 33\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Imagine a road that's a perfectly straight infinitely long line.\n\
    // n cars are driving left to right;  simultaneously, a different set of n cars\n\
    // are driving right to left.   The two sets of cars start out being very far\
    \ from\n// each other.  All cars move in the same speed.  Two cars are said to\
    \ collide\n// when a car that's moving left to right hits a car that's moving\
    \ right to left.\n// However, the cars are infinitely sturdy and strong; as a\
    \ result, they continue moving\n// in their trajectory as if they did not collide.\n\
    // This function outputs the number of such collisions.\nfunction car_race_collision($n)\
    \ {\n    $collisions = 0;\n    $left = 0;\n    $right = $n - 1;\n    while ($left\
    \ < $n && $right >= 0) {\n        if ($left == $right) {\n            $collisions++;\n\
    \        }\n        $left++;\n        $right--;\n    }\n    return $collisions;\n\
    }\n\nfunction candidate(...$args) {\n    return car_race_collision(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== 9) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4) !== 16) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(8) !== 64) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(10) !== 100) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpr8qmvvf8.php:29\n\
    Stack trace:\n#0 /tmp/tmpr8qmvvf8.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpr8qmvvf8.php\
    \ on line 29\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Imagine a road that's a perfectly straight infinitely long line.\n\
    // n cars are driving left to right;  simultaneously, a different set of n cars\n\
    // are driving right to left.   The two sets of cars start out being very far\
    \ from\n// each other.  All cars move in the same speed.  Two cars are said to\
    \ collide\n// when a car that's moving left to right hits a car that's moving\
    \ right to left.\n// However, the cars are infinitely sturdy and strong; as a\
    \ result, they continue moving\n// in their trajectory as if they did not collide.\n\
    // This function outputs the number of such collisions.\nfunction car_race_collision($n)\
    \ {\n    $left_to_right = [];\n    $right_to_left = [];\n    for ($i = 0; $i <\
    \ $n; $i++) {\n        $left_to_right[] = $i;\n        $right_to_left[] = $i;\n\
    \    }\n    $collisions = 0;\n    while (count($left_to_right) > 0 && count($right_to_left)\
    \ > 0) {\n        $left_to_right_car = array_shift($left_to_right);\n        $right_to_left_car\
    \ = array_shift($right_to_left);\n        if ($left_to_right_car == $right_to_left_car)\
    \ {\n            $collisions++;\n        }\n    }\n    return $collisions;\n}\n\
    \nfunction candidate(...$args) {\n    return car_race_collision(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(2) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== 9) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4) !== 16) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(8) !== 64) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(10) !== 100) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpc9wky4es.php:33\n\
    Stack trace:\n#0 /tmp/tmpc9wky4es.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpc9wky4es.php\
    \ on line 33\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Imagine a road that's a perfectly straight infinitely long line.\n\
    // n cars are driving left to right;  simultaneously, a different set of n cars\n\
    // are driving right to left.   The two sets of cars start out being very far\
    \ from\n// each other.  All cars move in the same speed.  Two cars are said to\
    \ collide\n// when a car that's moving left to right hits a car that's moving\
    \ right to left.\n// However, the cars are infinitely sturdy and strong; as a\
    \ result, they continue moving\n// in their trajectory as if they did not collide.\n\
    // This function outputs the number of such collisions.\nfunction car_race_collision($n)\
    \ {\n    $collisions = 0;\n    $left_to_right = array();\n    $right_to_left =\
    \ array();\n    for ($i = 0; $i < $n; $i++) {\n        $left_to_right[] = $i;\n\
    \        $right_to_left[] = $i;\n    }\n    while (count($left_to_right) > 0 &&\
    \ count($right_to_left) > 0) {\n        $left_car = array_shift($left_to_right);\n\
    \        $right_car = array_shift($right_to_left);\n        if ($left_car == $right_car)\
    \ {\n            $collisions++;\n        } else {\n            $left_to_right[]\
    \ = $left_car;\n            $right_to_left[] = $right_car;\n        }\n    }\n\
    \    return $collisions;\n}\n\nfunction candidate(...$args) {\n    return car_race_collision(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== 9) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4) !== 16) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(8) !== 64) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(10) !== 100) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpcpo42b42.php:36\n\
    Stack trace:\n#0 /tmp/tmpcpo42b42.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpcpo42b42.php\
    \ on line 36\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Imagine a road that's a perfectly straight infinitely long line.\n\
    // n cars are driving left to right;  simultaneously, a different set of n cars\n\
    // are driving right to left.   The two sets of cars start out being very far\
    \ from\n// each other.  All cars move in the same speed.  Two cars are said to\
    \ collide\n// when a car that's moving left to right hits a car that's moving\
    \ right to left.\n// However, the cars are infinitely sturdy and strong; as a\
    \ result, they continue moving\n// in their trajectory as if they did not collide.\n\
    // This function outputs the number of such collisions.\nfunction car_race_collision($n)\
    \ {\n    // TODO: implement this function\n    return 0;\n}\n\nfunction candidate(...$args)\
    \ {\n    return car_race_collision(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(2) !== 4) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(3) !== 9) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !==\
    \ 64) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 100)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp621n552l.php:20\n\
    Stack trace:\n#0 /tmp/tmp621n552l.php(27): test()\n#1 {main}\n  thrown in /tmp/tmp621n552l.php\
    \ on line 20\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Imagine a road that's a perfectly straight infinitely long line.\n\
    // n cars are driving left to right;  simultaneously, a different set of n cars\n\
    // are driving right to left.   The two sets of cars start out being very far\
    \ from\n// each other.  All cars move in the same speed.  Two cars are said to\
    \ collide\n// when a car that's moving left to right hits a car that's moving\
    \ right to left.\n// However, the cars are infinitely sturdy and strong; as a\
    \ result, they continue moving\n// in their trajectory as if they did not collide.\n\
    // This function outputs the number of such collisions.\nfunction car_race_collision($n)\
    \ {\n    $left_to_right = range(1, $n);\n    $right_to_left = range($n, 1);\n\
    \    $collisions = 0;\n    for ($i = 0; $i < $n; $i++) {\n        for ($j = 0;\
    \ $j < $n; $j++) {\n            if ($left_to_right[$i] == $right_to_left[$j])\
    \ {\n                $collisions++;\n            }\n        }\n    }\n    return\
    \ $collisions;\n}\n\necho car_race_collision(10);\nfunction candidate(...$args)\
    \ {\n    return car_race_collision(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(2) !== 4) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(3) !== 9) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !==\
    \ 64) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 100)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: '10'
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp48edcvv8.php:30\n\
    Stack trace:\n#0 /tmp/tmp48edcvv8.php(37): test()\n#1 {main}\n  thrown in /tmp/tmp48edcvv8.php\
    \ on line 30\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Imagine a road that's a perfectly straight infinitely long line.\n\
    // n cars are driving left to right;  simultaneously, a different set of n cars\n\
    // are driving right to left.   The two sets of cars start out being very far\
    \ from\n// each other.  All cars move in the same speed.  Two cars are said to\
    \ collide\n// when a car that's moving left to right hits a car that's moving\
    \ right to left.\n// However, the cars are infinitely sturdy and strong; as a\
    \ result, they continue moving\n// in their trajectory as if they did not collide.\n\
    // This function outputs the number of such collisions.\nfunction car_race_collision($n)\
    \ {\n    $left_to_right = [];\n    $right_to_left = [];\n    for ($i = 0; $i <\
    \ $n; $i++) {\n        $left_to_right[] = $i;\n        $right_to_left[] = $i;\n\
    \    }\n    $collisions = 0;\n    while (count($left_to_right) > 0 && count($right_to_left)\
    \ > 0) {\n        $left_to_right_car = array_shift($left_to_right);\n        $right_to_left_car\
    \ = array_shift($right_to_left);\n        if ($left_to_right_car === $right_to_left_car)\
    \ {\n            $collisions++;\n        }\n    }\n    return $collisions;\n}\n\
    \necho car_race_collision(1) . \"\\n\";\necho car_race_collision(2) . \"\\n\"\
    ;\necho car_race_collision(3) . \"\\n\";\necho car_race_collision(4) . \"\\n\"\
    ;\necho car_race_collision(5) . \"\\n\";\necho car_race_collision(6) . \"\\n\"\
    ;\necho car_race_collision(7) . \"\\n\";\necho car_race_collision(8) . \"\\n\"\
    ;\necho car_race_collision(9) . \"\\n\";\necho car_race_collision(10) . \"\\n\"\
    ;\necho car_race_collision(11) . \"\\n\";\necho car_race_collision(12) . \"\\\
    n\";\necho car_race_collision(13) . \"\\n\";\necho car_race_collision(14) . \"\
    \\n\";\necho car_race_collision(15) . \"\\n\";\necho car_race_collision(16) .\
    \ \"\\n\";\necho car_race_collision(17) . \"\\n\";\necho car_race_collision(18)\
    \ . \"\\n\";\necho car_race_collision(19) . \"\\n\";\necho car_race_collision(20)\
    \ . \"\\n\";\necho car_race_collision(21) . \"\\n\";\necho car_race_collision(\n\
    function candidate(...$args) {\n    return car_race_collision(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(2) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== 9) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4) !== 16) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(8) !== 64) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(10) !== 100) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  stdout: ''
  stderr: "PHP Parse error:  syntax error, unexpected identifier \"candidate\", expecting\
    \ \"(\" in /tmp/tmpi4_r_55u.php on line 50\n"
  exit_code: 255
  status: SyntaxError
- program: "<?php\n// Imagine a road that's a perfectly straight infinitely long line.\n\
    // n cars are driving left to right;  simultaneously, a different set of n cars\n\
    // are driving right to left.   The two sets of cars start out being very far\
    \ from\n// each other.  All cars move in the same speed.  Two cars are said to\
    \ collide\n// when a car that's moving left to right hits a car that's moving\
    \ right to left.\n// However, the cars are infinitely sturdy and strong; as a\
    \ result, they continue moving\n// in their trajectory as if they did not collide.\n\
    // This function outputs the number of such collisions.\nfunction car_race_collision($n)\
    \ {\n    $collisions = 0;\n    $left_cars = [];\n    $right_cars = [];\n    for\
    \ ($i = 0; $i < $n; $i++) {\n        $left_cars[] = $i;\n        $right_cars[]\
    \ = $i;\n    }\n    while (count($left_cars) > 0 && count($right_cars) > 0) {\n\
    \        $left_car = array_shift($left_cars);\n        $right_car = array_pop($right_cars);\n\
    \        if ($left_car == $right_car) {\n            $collisions++;\n        }\n\
    \    }\n    return $collisions;\n}\n\nfunction candidate(...$args) {\n    return\
    \ car_race_collision(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !==\
    \ 9) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 16)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 64) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 100) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp6l1eq52w.php:33\n\
    Stack trace:\n#0 /tmp/tmp6l1eq52w.php(40): test()\n#1 {main}\n  thrown in /tmp/tmp6l1eq52w.php\
    \ on line 33\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Imagine a road that's a perfectly straight infinitely long line.\n\
    // n cars are driving left to right;  simultaneously, a different set of n cars\n\
    // are driving right to left.   The two sets of cars start out being very far\
    \ from\n// each other.  All cars move in the same speed.  Two cars are said to\
    \ collide\n// when a car that's moving left to right hits a car that's moving\
    \ right to left.\n// However, the cars are infinitely sturdy and strong; as a\
    \ result, they continue moving\n// in their trajectory as if they did not collide.\n\
    // This function outputs the number of such collisions.\nfunction car_race_collision($n)\
    \ {\n    $left_to_right = range(1, $n);\n    $right_to_left = range($n, 1);\n\
    \    $collisions = 0;\n    $i = 0;\n    $j = 0;\n    while ($i < $n && $j < $n)\
    \ {\n        if ($left_to_right[$i] < $right_to_left[$j]) {\n            $i++;\n\
    \        } else {\n            $collisions += $n - $i;\n            $j++;\n  \
    \      }\n    }\n    return $collisions;\n}\n\nfunction candidate(...$args) {\n\
    \    return car_race_collision(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(2) !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3)\
    \ !== 9) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !==\
    \ 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 64)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 100) {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp_eaoluk3.php:32\n\
    Stack trace:\n#0 /tmp/tmp_eaoluk3.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp_eaoluk3.php\
    \ on line 32\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Imagine a road that's a perfectly straight infinitely long line.\n\
    // n cars are driving left to right;  simultaneously, a different set of n cars\n\
    // are driving right to left.   The two sets of cars start out being very far\
    \ from\n// each other.  All cars move in the same speed.  Two cars are said to\
    \ collide\n// when a car that's moving left to right hits a car that's moving\
    \ right to left.\n// However, the cars are infinitely sturdy and strong; as a\
    \ result, they continue moving\n// in their trajectory as if they did not collide.\n\
    // This function outputs the number of such collisions.\nfunction car_race_collision($n)\
    \ {\n    $collisions = 0;\n    $left_to_right = range(1, $n);\n    $right_to_left\
    \ = range($n, 1);\n    foreach ($left_to_right as $left) {\n        foreach ($right_to_left\
    \ as $right) {\n            if ($left == $right) {\n                $collisions++;\n\
    \            }\n        }\n    }\n    return $collisions;\n}\n\nfunction candidate(...$args)\
    \ {\n    return car_race_collision(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(2) !== 4) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(3) !== 9) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !==\
    \ 64) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 100)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp1b0ssjyx.php:29\n\
    Stack trace:\n#0 /tmp/tmp1b0ssjyx.php(36): test()\n#1 {main}\n  thrown in /tmp/tmp1b0ssjyx.php\
    \ on line 29\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Imagine a road that's a perfectly straight infinitely long line.\n\
    // n cars are driving left to right;  simultaneously, a different set of n cars\n\
    // are driving right to left.   The two sets of cars start out being very far\
    \ from\n// each other.  All cars move in the same speed.  Two cars are said to\
    \ collide\n// when a car that's moving left to right hits a car that's moving\
    \ right to left.\n// However, the cars are infinitely sturdy and strong; as a\
    \ result, they continue moving\n// in their trajectory as if they did not collide.\n\
    // This function outputs the number of such collisions.\nfunction car_race_collision($n)\
    \ {\n    $left = array();\n    $right = array();\n    $collision = 0;\n    for\
    \ ($i = 0; $i < $n; $i++) {\n        $left[$i] = $i;\n        $right[$i] = $n\
    \ - $i - 1;\n    }\n    for ($i = 0; $i < $n; $i++) {\n        for ($j = 0; $j\
    \ < $n; $j++) {\n            if ($left[$i] == $right[$j]) {\n                $collision++;\n\
    \            }\n        }\n    }\n    return $collision;\n}\n\nfunction candidate(...$args)\
    \ {\n    return car_race_collision(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(2) !== 4) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(3) !== 9) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !==\
    \ 64) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 100)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpgms8hxy9.php:33\n\
    Stack trace:\n#0 /tmp/tmpgms8hxy9.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpgms8hxy9.php\
    \ on line 33\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Imagine a road that's a perfectly straight infinitely long line.\n\
    // n cars are driving left to right;  simultaneously, a different set of n cars\n\
    // are driving right to left.   The two sets of cars start out being very far\
    \ from\n// each other.  All cars move in the same speed.  Two cars are said to\
    \ collide\n// when a car that's moving left to right hits a car that's moving\
    \ right to left.\n// However, the cars are infinitely sturdy and strong; as a\
    \ result, they continue moving\n// in their trajectory as if they did not collide.\n\
    // This function outputs the number of such collisions.\nfunction car_race_collision($n)\
    \ {\n    $left_to_right = range(1, $n);\n    $right_to_left = range($n, 1);\n\
    \    $collisions = 0;\n    for ($i = 0; $i < $n; $i++) {\n        for ($j = 0;\
    \ $j < $n; $j++) {\n            if ($left_to_right[$i] == $right_to_left[$j])\
    \ {\n                $collisions++;\n            }\n        }\n    }\n    return\
    \ $collisions;\n}\n\nfunction candidate(...$args) {\n    return car_race_collision(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== 9) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4) !== 16) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(8) !== 64) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(10) !== 100) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp_7sn9isq.php:29\n\
    Stack trace:\n#0 /tmp/tmp_7sn9isq.php(36): test()\n#1 {main}\n  thrown in /tmp/tmp_7sn9isq.php\
    \ on line 29\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Imagine a road that's a perfectly straight infinitely long line.\n\
    // n cars are driving left to right;  simultaneously, a different set of n cars\n\
    // are driving right to left.   The two sets of cars start out being very far\
    \ from\n// each other.  All cars move in the same speed.  Two cars are said to\
    \ collide\n// when a car that's moving left to right hits a car that's moving\
    \ right to left.\n// However, the cars are infinitely sturdy and strong; as a\
    \ result, they continue moving\n// in their trajectory as if they did not collide.\n\
    // This function outputs the number of such collisions.\nfunction car_race_collision($n)\
    \ {\n    // TODO: Implement me!\n}\n\nfunction candidate(...$args) {\n    return\
    \ car_race_collision(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !==\
    \ 9) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 16)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 64) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 100) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpk3a5w0v_.php:19\n\
    Stack trace:\n#0 /tmp/tmpk3a5w0v_.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpk3a5w0v_.php\
    \ on line 19\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Imagine a road that's a perfectly straight infinitely long line.\n\
    // n cars are driving left to right;  simultaneously, a different set of n cars\n\
    // are driving right to left.   The two sets of cars start out being very far\
    \ from\n// each other.  All cars move in the same speed.  Two cars are said to\
    \ collide\n// when a car that's moving left to right hits a car that's moving\
    \ right to left.\n// However, the cars are infinitely sturdy and strong; as a\
    \ result, they continue moving\n// in their trajectory as if they did not collide.\n\
    // This function outputs the number of such collisions.\nfunction car_race_collision($n)\
    \ {\n    $collisions = 0;\n    $left_to_right = [];\n    $right_to_left = [];\n\
    \    for ($i = 0; $i < $n; $i++) {\n        $left_to_right[] = $i;\n        $right_to_left[]\
    \ = $n - $i - 1;\n    }\n    for ($i = 0; $i < $n; $i++) {\n        for ($j =\
    \ 0; $j < $n; $j++) {\n            if ($left_to_right[$i] === $right_to_left[$j])\
    \ {\n                $collisions++;\n            }\n        }\n    }\n    return\
    \ $collisions;\n}\n\nfunction candidate(...$args) {\n    return car_race_collision(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== 9) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4) !== 16) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(8) !== 64) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(10) !== 100) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpcr71v354.php:33\n\
    Stack trace:\n#0 /tmp/tmpcr71v354.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpcr71v354.php\
    \ on line 33\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Imagine a road that's a perfectly straight infinitely long line.\n\
    // n cars are driving left to right;  simultaneously, a different set of n cars\n\
    // are driving right to left.   The two sets of cars start out being very far\
    \ from\n// each other.  All cars move in the same speed.  Two cars are said to\
    \ collide\n// when a car that's moving left to right hits a car that's moving\
    \ right to left.\n// However, the cars are infinitely sturdy and strong; as a\
    \ result, they continue moving\n// in their trajectory as if they did not collide.\n\
    // This function outputs the number of such collisions.\nfunction car_race_collision($n)\
    \ {\n    $collisions = 0;\n    $left_to_right = range(1, $n);\n    $right_to_left\
    \ = range($n, 1);\n    for ($i = 0; $i < $n; $i++) {\n        for ($j = 0; $j\
    \ < $n; $j++) {\n            if ($left_to_right[$i] == $right_to_left[$j]) {\n\
    \                $collisions++;\n            }\n        }\n    }\n    return $collisions;\n\
    }\n\nfunction candidate(...$args) {\n    return car_race_collision(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== 9) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4) !== 16) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(8) !== 64) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(10) !== 100) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpgdsciz6v.php:29\n\
    Stack trace:\n#0 /tmp/tmpgdsciz6v.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpgdsciz6v.php\
    \ on line 29\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Imagine a road that's a perfectly straight infinitely long line.\n\
    // n cars are driving left to right;  simultaneously, a different set of n cars\n\
    // are driving right to left.   The two sets of cars start out being very far\
    \ from\n// each other.  All cars move in the same speed.  Two cars are said to\
    \ collide\n// when a car that's moving left to right hits a car that's moving\
    \ right to left.\n// However, the cars are infinitely sturdy and strong; as a\
    \ result, they continue moving\n// in their trajectory as if they did not collide.\n\
    // This function outputs the number of such collisions.\nfunction car_race_collision($n)\
    \ {\n    $collisions = 0;\n    $left_to_right = [];\n    $right_to_left = [];\n\
    \    for ($i = 0; $i < $n; $i++) {\n        $left_to_right[] = $i;\n        $right_to_left[]\
    \ = $n - $i - 1;\n    }\n    $left_to_right_index = 0;\n    $right_to_left_index\
    \ = 0;\n    while ($left_to_right_index < $n && $right_to_left_index < $n) {\n\
    \        if ($left_to_right[$left_to_right_index] < $right_to_left[$right_to_left_index])\
    \ {\n            $left_to_right_index++;\n        } else {\n            $right_to_left_index++;\n\
    \            $collisions += $left_to_right_index;\n        }\n    }\n    return\
    \ $collisions;\n}\n\nfunction candidate(...$args) {\n    return car_race_collision(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== 9) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4) !== 16) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(8) !== 64) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(10) !== 100) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpwjer8iam.php:36\n\
    Stack trace:\n#0 /tmp/tmpwjer8iam.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpwjer8iam.php\
    \ on line 36\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Imagine a road that's a perfectly straight infinitely long line.\n\
    // n cars are driving left to right;  simultaneously, a different set of n cars\n\
    // are driving right to left.   The two sets of cars start out being very far\
    \ from\n// each other.  All cars move in the same speed.  Two cars are said to\
    \ collide\n// when a car that's moving left to right hits a car that's moving\
    \ right to left.\n// However, the cars are infinitely sturdy and strong; as a\
    \ result, they continue moving\n// in their trajectory as if they did not collide.\n\
    // This function outputs the number of such collisions.\nfunction car_race_collision($n)\
    \ {\n    $collisions = 0;\n    $left_to_right = [];\n    $right_to_left = [];\n\
    \    for ($i = 0; $i < $n; $i++) {\n        $left_to_right[] = $i;\n        $right_to_left[]\
    \ = $n - $i - 1;\n    }\n    while (count($left_to_right) > 0 && count($right_to_left)\
    \ > 0) {\n        if ($left_to_right[0] == $right_to_left[0]) {\n            $collisions++;\n\
    \            array_shift($left_to_right);\n            array_shift($right_to_left);\n\
    \        } elseif ($left_to_right[0] < $right_to_left[0]) {\n            array_shift($left_to_right);\n\
    \        } else {\n            array_shift($right_to_left);\n        }\n    }\n\
    \    return $collisions;\n}\n\nfunction candidate(...$args) {\n    return car_race_collision(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== 9) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4) !== 16) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(8) !== 64) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(10) !== 100) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp4_jcfcis.php:37\n\
    Stack trace:\n#0 /tmp/tmp4_jcfcis.php(44): test()\n#1 {main}\n  thrown in /tmp/tmp4_jcfcis.php\
    \ on line 37\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Imagine a road that's a perfectly straight infinitely long line.\n\
    // n cars are driving left to right;  simultaneously, a different set of n cars\n\
    // are driving right to left.   The two sets of cars start out being very far\
    \ from\n// each other.  All cars move in the same speed.  Two cars are said to\
    \ collide\n// when a car that's moving left to right hits a car that's moving\
    \ right to left.\n// However, the cars are infinitely sturdy and strong; as a\
    \ result, they continue moving\n// in their trajectory as if they did not collide.\n\
    // This function outputs the number of such collisions.\nfunction car_race_collision($n)\
    \ {\n    $left_to_right = range(1, $n);\n    $right_to_left = range($n, 1);\n\
    \    $collisions = 0;\n    for ($i = 0; $i < $n; $i++) {\n        if ($left_to_right[$i]\
    \ == $right_to_left[$i]) {\n            $collisions++;\n        }\n    }\n   \
    \ return $collisions;\n}\n\nfunction candidate(...$args) {\n    return car_race_collision(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== 9) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4) !== 16) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(8) !== 64) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(10) !== 100) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpu2pzr6ut.php:27\n\
    Stack trace:\n#0 /tmp/tmpu2pzr6ut.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpu2pzr6ut.php\
    \ on line 27\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Imagine a road that's a perfectly straight infinitely long line.\n\
    // n cars are driving left to right;  simultaneously, a different set of n cars\n\
    // are driving right to left.   The two sets of cars start out being very far\
    \ from\n// each other.  All cars move in the same speed.  Two cars are said to\
    \ collide\n// when a car that's moving left to right hits a car that's moving\
    \ right to left.\n// However, the cars are infinitely sturdy and strong; as a\
    \ result, they continue moving\n// in their trajectory as if they did not collide.\n\
    // This function outputs the number of such collisions.\nfunction car_race_collision($n)\
    \ {\n    $collisions = 0;\n    $left_to_right = array();\n    $right_to_left =\
    \ array();\n    for ($i = 0; $i < $n; $i++) {\n        $left_to_right[] = $i;\n\
    \        $right_to_left[] = $i;\n    }\n    $left_to_right = array_reverse($left_to_right);\n\
    \    $right_to_left = array_reverse($right_to_left);\n    while (count($left_to_right)\
    \ > 0 && count($right_to_left) > 0) {\n        $left_to_right_car = array_pop($left_to_right);\n\
    \        $right_to_left_car = array_pop($right_to_left);\n        if ($left_to_right_car\
    \ == $right_to_left_car) {\n            $collisions++;\n        }\n    }\n   \
    \ return $collisions;\n}\n\nfunction candidate(...$args) {\n    return car_race_collision(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== 9) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4) !== 16) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(8) !== 64) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(10) !== 100) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmptacyc8j_.php:35\n\
    Stack trace:\n#0 /tmp/tmptacyc8j_.php(42): test()\n#1 {main}\n  thrown in /tmp/tmptacyc8j_.php\
    \ on line 35\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Imagine a road that's a perfectly straight infinitely long line.\n\
    // n cars are driving left to right;  simultaneously, a different set of n cars\n\
    // are driving right to left.   The two sets of cars start out being very far\
    \ from\n// each other.  All cars move in the same speed.  Two cars are said to\
    \ collide\n// when a car that's moving left to right hits a car that's moving\
    \ right to left.\n// However, the cars are infinitely sturdy and strong; as a\
    \ result, they continue moving\n// in their trajectory as if they did not collide.\n\
    // This function outputs the number of such collisions.\nfunction car_race_collision($n)\
    \ {\n    $left_to_right = range(1, $n);\n    $right_to_left = range($n, 1);\n\
    \    $collisions = 0;\n    for ($i = 0; $i < $n; $i++) {\n        if ($left_to_right[$i]\
    \ == $right_to_left[$i]) {\n            $collisions++;\n        }\n    }\n   \
    \ return $collisions;\n}\n\nfunction candidate(...$args) {\n    return car_race_collision(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== 9) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4) !== 16) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(8) !== 64) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(10) !== 100) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpz9zeg3pd.php:27\n\
    Stack trace:\n#0 /tmp/tmpz9zeg3pd.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpz9zeg3pd.php\
    \ on line 27\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Imagine a road that's a perfectly straight infinitely long line.\n\
    // n cars are driving left to right;  simultaneously, a different set of n cars\n\
    // are driving right to left.   The two sets of cars start out being very far\
    \ from\n// each other.  All cars move in the same speed.  Two cars are said to\
    \ collide\n// when a car that's moving left to right hits a car that's moving\
    \ right to left.\n// However, the cars are infinitely sturdy and strong; as a\
    \ result, they continue moving\n// in their trajectory as if they did not collide.\n\
    // This function outputs the number of such collisions.\nfunction car_race_collision($n)\
    \ {\n    $collisions = 0;\n    $left_to_right = range(1, $n);\n    $right_to_left\
    \ = range($n, 1);\n    for ($i = 0; $i < $n; $i++) {\n        for ($j = 0; $j\
    \ < $n; $j++) {\n            if ($left_to_right[$i] == $right_to_left[$j]) {\n\
    \                $collisions++;\n            }\n        }\n    }\n    return $collisions;\n\
    }\n\nfunction candidate(...$args) {\n    return car_race_collision(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== 9) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4) !== 16) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(8) !== 64) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(10) !== 100) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp2ij5b598.php:29\n\
    Stack trace:\n#0 /tmp/tmp2ij5b598.php(36): test()\n#1 {main}\n  thrown in /tmp/tmp2ij5b598.php\
    \ on line 29\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Imagine a road that's a perfectly straight infinitely long line.\n\
    // n cars are driving left to right;  simultaneously, a different set of n cars\n\
    // are driving right to left.   The two sets of cars start out being very far\
    \ from\n// each other.  All cars move in the same speed.  Two cars are said to\
    \ collide\n// when a car that's moving left to right hits a car that's moving\
    \ right to left.\n// However, the cars are infinitely sturdy and strong; as a\
    \ result, they continue moving\n// in their trajectory as if they did not collide.\n\
    // This function outputs the number of such collisions.\nfunction car_race_collision($n)\
    \ {\n    $left_cars = range(1, $n);\n    $right_cars = range($n, 1);\n    $collisions\
    \ = 0;\n    while (count($left_cars) > 0 && count($right_cars) > 0) {\n      \
    \  $left_car = array_shift($left_cars);\n        $right_car = array_shift($right_cars);\n\
    \        if ($left_car == $right_car) {\n            $collisions++;\n        }\
    \ else {\n            array_unshift($left_cars, $left_car);\n            array_unshift($right_cars,\
    \ $right_car);\n        }\n    }\n    return $collisions;\n}\n\nfunction candidate(...$args)\
    \ {\n    return car_race_collision(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(2) !== 4) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(3) !== 9) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !==\
    \ 64) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 100)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: None
  stderr: None
  exit_code: -1
  status: Timeout
- program: "<?php\n// Imagine a road that's a perfectly straight infinitely long line.\n\
    // n cars are driving left to right;  simultaneously, a different set of n cars\n\
    // are driving right to left.   The two sets of cars start out being very far\
    \ from\n// each other.  All cars move in the same speed.  Two cars are said to\
    \ collide\n// when a car that's moving left to right hits a car that's moving\
    \ right to left.\n// However, the cars are infinitely sturdy and strong; as a\
    \ result, they continue moving\n// in their trajectory as if they did not collide.\n\
    // This function outputs the number of such collisions.\nfunction car_race_collision($n)\
    \ {\n    $collisions = 0;\n    for ($i = 0; $i < $n; $i++) {\n        for ($j\
    \ = 0; $j < $n; $j++) {\n            if ($i < $j) {\n                $collisions++;\n\
    \            }\n        }\n    }\n    return $collisions;\n}\n\nfunction candidate(...$args)\
    \ {\n    return car_race_collision(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(2) !== 4) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(3) !== 9) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !==\
    \ 64) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 100)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpjxyv_xwf.php:27\n\
    Stack trace:\n#0 /tmp/tmpjxyv_xwf.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpjxyv_xwf.php\
    \ on line 27\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Imagine a road that's a perfectly straight infinitely long line.\n\
    // n cars are driving left to right;  simultaneously, a different set of n cars\n\
    // are driving right to left.   The two sets of cars start out being very far\
    \ from\n// each other.  All cars move in the same speed.  Two cars are said to\
    \ collide\n// when a car that's moving left to right hits a car that's moving\
    \ right to left.\n// However, the cars are infinitely sturdy and strong; as a\
    \ result, they continue moving\n// in their trajectory as if they did not collide.\n\
    // This function outputs the number of such collisions.\nfunction car_race_collision($n)\
    \ {\n    $left_to_right = [];\n    $right_to_left = [];\n    for ($i = 0; $i <\
    \ $n; $i++) {\n        $left_to_right[] = $i;\n        $right_to_left[] = $i;\n\
    \    }\n    $collisions = 0;\n    while (count($left_to_right) > 0 && count($right_to_left)\
    \ > 0) {\n        $left_to_right_car = array_shift($left_to_right);\n        $right_to_left_car\
    \ = array_shift($right_to_left);\n        if ($left_to_right_car == $right_to_left_car)\
    \ {\n            $collisions++;\n        }\n    }\n    return $collisions;\n}\n\
    \nfunction candidate(...$args) {\n    return car_race_collision(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(2) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== 9) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4) !== 16) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(8) !== 64) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(10) !== 100) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpj1gcaznx.php:33\n\
    Stack trace:\n#0 /tmp/tmpj1gcaznx.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpj1gcaznx.php\
    \ on line 33\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Imagine a road that's a perfectly straight infinitely long line.\n\
    // n cars are driving left to right;  simultaneously, a different set of n cars\n\
    // are driving right to left.   The two sets of cars start out being very far\
    \ from\n// each other.  All cars move in the same speed.  Two cars are said to\
    \ collide\n// when a car that's moving left to right hits a car that's moving\
    \ right to left.\n// However, the cars are infinitely sturdy and strong; as a\
    \ result, they continue moving\n// in their trajectory as if they did not collide.\n\
    // This function outputs the number of such collisions.\nfunction car_race_collision($n)\
    \ {\n    $left_to_right = [];\n    $right_to_left = [];\n    for ($i = 0; $i <\
    \ $n; $i++) {\n        $left_to_right[] = $i;\n        $right_to_left[] = $i;\n\
    \    }\n    $collisions = 0;\n    while (count($left_to_right) > 0 && count($right_to_left)\
    \ > 0) {\n        $left_to_right_car = array_shift($left_to_right);\n        $right_to_left_car\
    \ = array_shift($right_to_left);\n        if ($left_to_right_car > $right_to_left_car)\
    \ {\n            $collisions++;\n        }\n    }\n    return $collisions;\n}\n\
    \nfunction candidate(...$args) {\n    return car_race_collision(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(2) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== 9) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4) !== 16) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(8) !== 64) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(10) !== 100) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpedft90e9.php:33\n\
    Stack trace:\n#0 /tmp/tmpedft90e9.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpedft90e9.php\
    \ on line 33\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Imagine a road that's a perfectly straight infinitely long line.\n\
    // n cars are driving left to right;  simultaneously, a different set of n cars\n\
    // are driving right to left.   The two sets of cars start out being very far\
    \ from\n// each other.  All cars move in the same speed.  Two cars are said to\
    \ collide\n// when a car that's moving left to right hits a car that's moving\
    \ right to left.\n// However, the cars are infinitely sturdy and strong; as a\
    \ result, they continue moving\n// in their trajectory as if they did not collide.\n\
    // This function outputs the number of such collisions.\nfunction car_race_collision($n)\
    \ {\n  $left_to_right = [];\n  $right_to_left = [];\n  for ($i = 0; $i < $n; $i++)\
    \ {\n    $left_to_right[] = $i;\n    $right_to_left[] = $i;\n  }\n  $collisions\
    \ = 0;\n  while (count($left_to_right) > 0 && count($right_to_left) > 0) {\n \
    \   $left_to_right_car = array_shift($left_to_right);\n    $right_to_left_car\
    \ = array_shift($right_to_left);\n    if ($left_to_right_car == $right_to_left_car)\
    \ {\n      $collisions++;\n    } else {\n      $left_to_right[] = $left_to_right_car;\n\
    \      $right_to_left[] = $right_to_left_car;\n    }\n  }\n  return $collisions;\n\
    }\n\nfunction candidate(...$args) {\n    return car_race_collision(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== 9) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4) !== 16) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(8) !== 64) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(10) !== 100) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpx8xw6uvn.php:36\n\
    Stack trace:\n#0 /tmp/tmpx8xw6uvn.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpx8xw6uvn.php\
    \ on line 36\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Imagine a road that's a perfectly straight infinitely long line.\n\
    // n cars are driving left to right;  simultaneously, a different set of n cars\n\
    // are driving right to left.   The two sets of cars start out being very far\
    \ from\n// each other.  All cars move in the same speed.  Two cars are said to\
    \ collide\n// when a car that's moving left to right hits a car that's moving\
    \ right to left.\n// However, the cars are infinitely sturdy and strong; as a\
    \ result, they continue moving\n// in their trajectory as if they did not collide.\n\
    // This function outputs the number of such collisions.\nfunction car_race_collision($n)\
    \ {\n    $collisions = 0;\n    $cars = array();\n    for ($i = 0; $i < $n; $i++)\
    \ {\n        $cars[$i] = array('direction' => 'left', 'position' => $i);\n   \
    \ }\n    for ($i = 0; $i < $n; $i++) {\n        $cars[$i + $n] = array('direction'\
    \ => 'right', 'position' => $i);\n    }\n    for ($i = 0; $i < $n * 2; $i++) {\n\
    \        for ($j = $i + 1; $j < $n * 2; $j++) {\n            if ($cars[$i]['direction']\
    \ == 'left' && $cars[$j]['direction'] == 'right') {\n                if ($cars[$i]['position']\
    \ > $cars[$j]['position']) {\n                    $collisions++;\n           \
    \     }\n            }\n        }\n    }\n    return $collisions;\n}\n\nfunction\
    \ candidate(...$args) {\n    return car_race_collision(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(2) !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3) !== 9) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(4) !== 16) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(8) !== 64) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(10) !== 100) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp9e1lfgk0.php:36\n\
    Stack trace:\n#0 /tmp/tmp9e1lfgk0.php(43): test()\n#1 {main}\n  thrown in /tmp/tmp9e1lfgk0.php\
    \ on line 36\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Imagine a road that's a perfectly straight infinitely long line.\n\
    // n cars are driving left to right;  simultaneously, a different set of n cars\n\
    // are driving right to left.   The two sets of cars start out being very far\
    \ from\n// each other.  All cars move in the same speed.  Two cars are said to\
    \ collide\n// when a car that's moving left to right hits a car that's moving\
    \ right to left.\n// However, the cars are infinitely sturdy and strong; as a\
    \ result, they continue moving\n// in their trajectory as if they did not collide.\n\
    // This function outputs the number of such collisions.\nfunction car_race_collision($n)\
    \ {\n    $left = $right = 0;\n    $collision = 0;\n    while ($left < $n && $right\
    \ < $n) {\n        if ($left == $right) {\n            $collision++;\n       \
    \     $left++;\n            $right++;\n        } else if ($left < $right) {\n\
    \            $left++;\n        } else {\n            $right++;\n        }\n  \
    \  }\n    return $collision;\n}\n\nfunction candidate(...$args) {\n    return\
    \ car_race_collision(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !==\
    \ 9) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 16)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 64) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 100) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpf1ucwbdb.php:32\n\
    Stack trace:\n#0 /tmp/tmpf1ucwbdb.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpf1ucwbdb.php\
    \ on line 32\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Imagine a road that's a perfectly straight infinitely long line.\n\
    // n cars are driving left to right;  simultaneously, a different set of n cars\n\
    // are driving right to left.   The two sets of cars start out being very far\
    \ from\n// each other.  All cars move in the same speed.  Two cars are said to\
    \ collide\n// when a car that's moving left to right hits a car that's moving\
    \ right to left.\n// However, the cars are infinitely sturdy and strong; as a\
    \ result, they continue moving\n// in their trajectory as if they did not collide.\n\
    // This function outputs the number of such collisions.\nfunction car_race_collision($n)\
    \ {\n    $collisions = 0;\n    $left_to_right = range(1, $n);\n    $right_to_left\
    \ = range($n, 1);\n    for ($i = 0; $i < $n; $i++) {\n        for ($j = 0; $j\
    \ < $n; $j++) {\n            if ($left_to_right[$i] == $right_to_left[$j]) {\n\
    \                $collisions++;\n            }\n        }\n    }\n    return $collisions;\n\
    }\n\nfunction candidate(...$args) {\n    return car_race_collision(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== 9) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4) !== 16) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(8) !== 64) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(10) !== 100) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp6w3g608y.php:29\n\
    Stack trace:\n#0 /tmp/tmp6w3g608y.php(36): test()\n#1 {main}\n  thrown in /tmp/tmp6w3g608y.php\
    \ on line 29\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Imagine a road that's a perfectly straight infinitely long line.\n\
    // n cars are driving left to right;  simultaneously, a different set of n cars\n\
    // are driving right to left.   The two sets of cars start out being very far\
    \ from\n// each other.  All cars move in the same speed.  Two cars are said to\
    \ collide\n// when a car that's moving left to right hits a car that's moving\
    \ right to left.\n// However, the cars are infinitely sturdy and strong; as a\
    \ result, they continue moving\n// in their trajectory as if they did not collide.\n\
    // This function outputs the number of such collisions.\nfunction car_race_collision($n)\
    \ {\n    $collisions = 0;\n    $left_to_right = range(1, $n);\n    $right_to_left\
    \ = range($n, 1);\n    for ($i = 0; $i < $n; $i++) {\n        for ($j = 0; $j\
    \ < $n; $j++) {\n            if ($left_to_right[$i] == $right_to_left[$j]) {\n\
    \                $collisions++;\n            }\n        }\n    }\n    return $collisions;\n\
    }\n\nfunction candidate(...$args) {\n    return car_race_collision(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== 9) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4) !== 16) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(8) !== 64) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(10) !== 100) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp1_jdmdrs.php:29\n\
    Stack trace:\n#0 /tmp/tmp1_jdmdrs.php(36): test()\n#1 {main}\n  thrown in /tmp/tmp1_jdmdrs.php\
    \ on line 29\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Imagine a road that's a perfectly straight infinitely long line.\n\
    // n cars are driving left to right;  simultaneously, a different set of n cars\n\
    // are driving right to left.   The two sets of cars start out being very far\
    \ from\n// each other.  All cars move in the same speed.  Two cars are said to\
    \ collide\n// when a car that's moving left to right hits a car that's moving\
    \ right to left.\n// However, the cars are infinitely sturdy and strong; as a\
    \ result, they continue moving\n// in their trajectory as if they did not collide.\n\
    // This function outputs the number of such collisions.\nfunction car_race_collision($n)\
    \ {\n    $left_to_right = [];\n    $right_to_left = [];\n    for ($i = 0; $i <\
    \ $n; $i++) {\n        $left_to_right[] = $i;\n        $right_to_left[] = $i;\n\
    \    }\n    $collisions = 0;\n    for ($i = 0; $i < $n; $i++) {\n        for ($j\
    \ = 0; $j < $n; $j++) {\n            if ($left_to_right[$i] == $right_to_left[$j])\
    \ {\n                $collisions++;\n            }\n        }\n    }\n    return\
    \ $collisions;\n}\n\nfunction candidate(...$args) {\n    return car_race_collision(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== 9) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4) !== 16) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(8) !== 64) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(10) !== 100) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpnz5mim33.php:33\n\
    Stack trace:\n#0 /tmp/tmpnz5mim33.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpnz5mim33.php\
    \ on line 33\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Imagine a road that's a perfectly straight infinitely long line.\n\
    // n cars are driving left to right;  simultaneously, a different set of n cars\n\
    // are driving right to left.   The two sets of cars start out being very far\
    \ from\n// each other.  All cars move in the same speed.  Two cars are said to\
    \ collide\n// when a car that's moving left to right hits a car that's moving\
    \ right to left.\n// However, the cars are infinitely sturdy and strong; as a\
    \ result, they continue moving\n// in their trajectory as if they did not collide.\n\
    // This function outputs the number of such collisions.\nfunction car_race_collision($n)\
    \ {\n    $collisions = 0;\n    $left_to_right = range(1, $n);\n    $right_to_left\
    \ = range($n, 1);\n    $left_to_right_index = 0;\n    $right_to_left_index = 0;\n\
    \    while ($left_to_right_index < $n && $right_to_left_index < $n) {\n      \
    \  if ($left_to_right[$left_to_right_index] < $right_to_left[$right_to_left_index])\
    \ {\n            $left_to_right_index++;\n        } else {\n            $right_to_left_index++;\n\
    \            $collisions += $left_to_right_index;\n        }\n    }\n    return\
    \ $collisions;\n}\n\nfunction candidate(...$args) {\n    return car_race_collision(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== 9) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4) !== 16) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(8) !== 64) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(10) !== 100) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp19hvs0wh.php:32\n\
    Stack trace:\n#0 /tmp/tmp19hvs0wh.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp19hvs0wh.php\
    \ on line 32\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Imagine a road that's a perfectly straight infinitely long line.\n\
    // n cars are driving left to right;  simultaneously, a different set of n cars\n\
    // are driving right to left.   The two sets of cars start out being very far\
    \ from\n// each other.  All cars move in the same speed.  Two cars are said to\
    \ collide\n// when a car that's moving left to right hits a car that's moving\
    \ right to left.\n// However, the cars are infinitely sturdy and strong; as a\
    \ result, they continue moving\n// in their trajectory as if they did not collide.\n\
    // This function outputs the number of such collisions.\nfunction car_race_collision($n)\
    \ {\n  $collisions = 0;\n  $left_cars = $right_cars = range(1, $n);\n  while (!empty($left_cars)\
    \ && !empty($right_cars)) {\n    $left_car = array_shift($left_cars);\n    $right_car\
    \ = array_shift($right_cars);\n    if ($left_car == $right_car) {\n      $collisions++;\n\
    \    } else {\n      array_unshift($left_cars, $left_car);\n      array_unshift($right_cars,\
    \ $right_car);\n    }\n  }\n  return $collisions;\n}\n\nfunction candidate(...$args)\
    \ {\n    return car_race_collision(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(2) !== 4) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(3) !== 9) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !==\
    \ 64) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 100)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpz0kttn0k.php:31\n\
    Stack trace:\n#0 /tmp/tmpz0kttn0k.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpz0kttn0k.php\
    \ on line 31\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Imagine a road that's a perfectly straight infinitely long line.\n\
    // n cars are driving left to right;  simultaneously, a different set of n cars\n\
    // are driving right to left.   The two sets of cars start out being very far\
    \ from\n// each other.  All cars move in the same speed.  Two cars are said to\
    \ collide\n// when a car that's moving left to right hits a car that's moving\
    \ right to left.\n// However, the cars are infinitely sturdy and strong; as a\
    \ result, they continue moving\n// in their trajectory as if they did not collide.\n\
    // This function outputs the number of such collisions.\nfunction car_race_collision($n)\
    \ {\n    $collisions = 0;\n    $left_to_right = range(1, $n);\n    $right_to_left\
    \ = range($n, 1);\n    for ($i = 0; $i < $n; $i++) {\n        for ($j = 0; $j\
    \ < $n; $j++) {\n            if ($left_to_right[$i] == $right_to_left[$j]) {\n\
    \                $collisions++;\n            }\n        }\n    }\n    return $collisions;\n\
    }\n\nfunction candidate(...$args) {\n    return car_race_collision(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== 9) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4) !== 16) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(8) !== 64) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(10) !== 100) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpew8ta7nn.php:29\n\
    Stack trace:\n#0 /tmp/tmpew8ta7nn.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpew8ta7nn.php\
    \ on line 29\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Imagine a road that's a perfectly straight infinitely long line.\n\
    // n cars are driving left to right;  simultaneously, a different set of n cars\n\
    // are driving right to left.   The two sets of cars start out being very far\
    \ from\n// each other.  All cars move in the same speed.  Two cars are said to\
    \ collide\n// when a car that's moving left to right hits a car that's moving\
    \ right to left.\n// However, the cars are infinitely sturdy and strong; as a\
    \ result, they continue moving\n// in their trajectory as if they did not collide.\n\
    // This function outputs the number of such collisions.\nfunction car_race_collision($n)\
    \ {\n    $collisions = 0;\n    $left_to_right = range(1, $n);\n    $right_to_left\
    \ = range($n, 1);\n    foreach ($left_to_right as $left) {\n        foreach ($right_to_left\
    \ as $right) {\n            if ($left === $right) {\n                $collisions++;\n\
    \            }\n        }\n    }\n    return $collisions;\n}\n\nfunction candidate(...$args)\
    \ {\n    return car_race_collision(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(2) !== 4) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(3) !== 9) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !==\
    \ 64) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 100)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpiv6q6s9n.php:29\n\
    Stack trace:\n#0 /tmp/tmpiv6q6s9n.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpiv6q6s9n.php\
    \ on line 29\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Imagine a road that's a perfectly straight infinitely long line.\n\
    // n cars are driving left to right;  simultaneously, a different set of n cars\n\
    // are driving right to left.   The two sets of cars start out being very far\
    \ from\n// each other.  All cars move in the same speed.  Two cars are said to\
    \ collide\n// when a car that's moving left to right hits a car that's moving\
    \ right to left.\n// However, the cars are infinitely sturdy and strong; as a\
    \ result, they continue moving\n// in their trajectory as if they did not collide.\n\
    // This function outputs the number of such collisions.\nfunction car_race_collision($n)\
    \ {\n  $left_to_right = range(1, $n);\n  $right_to_left = range($n, 1);\n  $collisions\
    \ = 0;\n  for ($i = 0; $i < $n; $i++) {\n    for ($j = 0; $j < $n; $j++) {\n \
    \     if ($left_to_right[$i] == $right_to_left[$j]) {\n        $collisions++;\n\
    \      }\n    }\n  }\n  return $collisions;\n}\n\nfunction candidate(...$args)\
    \ {\n    return car_race_collision(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(2) !== 4) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(3) !== 9) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !==\
    \ 64) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 100)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp72zi_n0x.php:29\n\
    Stack trace:\n#0 /tmp/tmp72zi_n0x.php(36): test()\n#1 {main}\n  thrown in /tmp/tmp72zi_n0x.php\
    \ on line 29\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Imagine a road that's a perfectly straight infinitely long line.\n\
    // n cars are driving left to right;  simultaneously, a different set of n cars\n\
    // are driving right to left.   The two sets of cars start out being very far\
    \ from\n// each other.  All cars move in the same speed.  Two cars are said to\
    \ collide\n// when a car that's moving left to right hits a car that's moving\
    \ right to left.\n// However, the cars are infinitely sturdy and strong; as a\
    \ result, they continue moving\n// in their trajectory as if they did not collide.\n\
    // This function outputs the number of such collisions.\nfunction car_race_collision($n)\
    \ {\n    $left = range(1, $n);\n    $right = range($n, 1);\n    $collision = 0;\n\
    \    for ($i = 0; $i < $n; $i++) {\n        for ($j = 0; $j < $n; $j++) {\n  \
    \          if ($left[$i] == $right[$j]) {\n                $collision++;\n   \
    \         }\n        }\n    }\n    return $collision;\n}\n\nfunction candidate(...$args)\
    \ {\n    return car_race_collision(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(2) !== 4) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(3) !== 9) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !==\
    \ 64) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 100)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpaktdr6m6.php:29\n\
    Stack trace:\n#0 /tmp/tmpaktdr6m6.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpaktdr6m6.php\
    \ on line 29\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Imagine a road that's a perfectly straight infinitely long line.\n\
    // n cars are driving left to right;  simultaneously, a different set of n cars\n\
    // are driving right to left.   The two sets of cars start out being very far\
    \ from\n// each other.  All cars move in the same speed.  Two cars are said to\
    \ collide\n// when a car that's moving left to right hits a car that's moving\
    \ right to left.\n// However, the cars are infinitely sturdy and strong; as a\
    \ result, they continue moving\n// in their trajectory as if they did not collide.\n\
    // This function outputs the number of such collisions.\nfunction car_race_collision($n)\
    \ {\n    // TODO: Implement me\n    return 0;\n}\n\nfunction candidate(...$args)\
    \ {\n    return car_race_collision(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(2) !== 4) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(3) !== 9) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !==\
    \ 64) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 100)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpfz9em53_.php:20\n\
    Stack trace:\n#0 /tmp/tmpfz9em53_.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpfz9em53_.php\
    \ on line 20\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Imagine a road that's a perfectly straight infinitely long line.\n\
    // n cars are driving left to right;  simultaneously, a different set of n cars\n\
    // are driving right to left.   The two sets of cars start out being very far\
    \ from\n// each other.  All cars move in the same speed.  Two cars are said to\
    \ collide\n// when a car that's moving left to right hits a car that's moving\
    \ right to left.\n// However, the cars are infinitely sturdy and strong; as a\
    \ result, they continue moving\n// in their trajectory as if they did not collide.\n\
    // This function outputs the number of such collisions.\nfunction car_race_collision($n)\
    \ {\n    $collisions = 0;\n    $left_to_right = range(1, $n);\n    $right_to_left\
    \ = range($n, 1);\n    $left_to_right_index = 0;\n    $right_to_left_index = 0;\n\
    \    while ($left_to_right_index < $n && $right_to_left_index < $n) {\n      \
    \  if ($left_to_right[$left_to_right_index] < $right_to_left[$right_to_left_index])\
    \ {\n            $left_to_right_index++;\n        } else {\n            $right_to_left_index++;\n\
    \            $collisions += $left_to_right_index;\n        }\n    }\n    return\
    \ $collisions;\n}\n\nfunction candidate(...$args) {\n    return car_race_collision(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== 9) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4) !== 16) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(8) !== 64) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(10) !== 100) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpw6h3z767.php:32\n\
    Stack trace:\n#0 /tmp/tmpw6h3z767.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpw6h3z767.php\
    \ on line 32\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Imagine a road that's a perfectly straight infinitely long line.\n\
    // n cars are driving left to right;  simultaneously, a different set of n cars\n\
    // are driving right to left.   The two sets of cars start out being very far\
    \ from\n// each other.  All cars move in the same speed.  Two cars are said to\
    \ collide\n// when a car that's moving left to right hits a car that's moving\
    \ right to left.\n// However, the cars are infinitely sturdy and strong; as a\
    \ result, they continue moving\n// in their trajectory as if they did not collide.\n\
    // This function outputs the number of such collisions.\nfunction car_race_collision($n)\
    \ {\n    // TODO: Implement this function.\n}\n\nfunction candidate(...$args)\
    \ {\n    return car_race_collision(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(2) !== 4) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(3) !== 9) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !==\
    \ 64) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 100)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpqq3xy2a_.php:19\n\
    Stack trace:\n#0 /tmp/tmpqq3xy2a_.php(26): test()\n#1 {main}\n  thrown in /tmp/tmpqq3xy2a_.php\
    \ on line 19\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Imagine a road that's a perfectly straight infinitely long line.\n\
    // n cars are driving left to right;  simultaneously, a different set of n cars\n\
    // are driving right to left.   The two sets of cars start out being very far\
    \ from\n// each other.  All cars move in the same speed.  Two cars are said to\
    \ collide\n// when a car that's moving left to right hits a car that's moving\
    \ right to left.\n// However, the cars are infinitely sturdy and strong; as a\
    \ result, they continue moving\n// in their trajectory as if they did not collide.\n\
    // This function outputs the number of such collisions.\nfunction car_race_collision($n)\
    \ {\n    $collisions = 0;\n    $left_to_right = range(1, $n);\n    $right_to_left\
    \ = range($n, 1);\n    $left_to_right_index = 0;\n    $right_to_left_index = 0;\n\
    \    while ($left_to_right_index < $n && $right_to_left_index < $n) {\n      \
    \  if ($left_to_right[$left_to_right_index] < $right_to_left[$right_to_left_index])\
    \ {\n            $left_to_right_index++;\n        } else {\n            $right_to_left_index++;\n\
    \            $collisions += $left_to_right_index;\n        }\n    }\n    return\
    \ $collisions;\n}\n\nfunction candidate(...$args) {\n    return car_race_collision(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== 9) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4) !== 16) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(8) !== 64) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(10) !== 100) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmppwzm4ssa.php:32\n\
    Stack trace:\n#0 /tmp/tmppwzm4ssa.php(39): test()\n#1 {main}\n  thrown in /tmp/tmppwzm4ssa.php\
    \ on line 32\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Imagine a road that's a perfectly straight infinitely long line.\n\
    // n cars are driving left to right;  simultaneously, a different set of n cars\n\
    // are driving right to left.   The two sets of cars start out being very far\
    \ from\n// each other.  All cars move in the same speed.  Two cars are said to\
    \ collide\n// when a car that's moving left to right hits a car that's moving\
    \ right to left.\n// However, the cars are infinitely sturdy and strong; as a\
    \ result, they continue moving\n// in their trajectory as if they did not collide.\n\
    // This function outputs the number of such collisions.\nfunction car_race_collision($n)\
    \ {\n    $collisions = 0;\n    $left_to_right = array();\n    $right_to_left =\
    \ array();\n    for ($i = 0; $i < $n; $i++) {\n        $left_to_right[] = $i;\n\
    \        $right_to_left[] = $i;\n    }\n    while (count($left_to_right) > 0 &&\
    \ count($right_to_left) > 0) {\n        $left_car = array_shift($left_to_right);\n\
    \        $right_car = array_shift($right_to_left);\n        if ($left_car == $right_car)\
    \ {\n            $collisions++;\n        } else {\n            $left_to_right[]\
    \ = $left_car;\n            $right_to_left[] = $right_car;\n        }\n    }\n\
    \    return $collisions;\n}\n\nfunction candidate(...$args) {\n    return car_race_collision(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== 9) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4) !== 16) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(8) !== 64) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(10) !== 100) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpenvdpr2l.php:36\n\
    Stack trace:\n#0 /tmp/tmpenvdpr2l.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpenvdpr2l.php\
    \ on line 36\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Imagine a road that's a perfectly straight infinitely long line.\n\
    // n cars are driving left to right;  simultaneously, a different set of n cars\n\
    // are driving right to left.   The two sets of cars start out being very far\
    \ from\n// each other.  All cars move in the same speed.  Two cars are said to\
    \ collide\n// when a car that's moving left to right hits a car that's moving\
    \ right to left.\n// However, the cars are infinitely sturdy and strong; as a\
    \ result, they continue moving\n// in their trajectory as if they did not collide.\n\
    // This function outputs the number of such collisions.\nfunction car_race_collision($n)\
    \ {\n    $collisions = 0;\n    $left_to_right = array();\n    $right_to_left =\
    \ array();\n    for ($i = 0; $i < $n; $i++) {\n        $left_to_right[] = $i;\n\
    \        $right_to_left[] = $i;\n    }\n    while (count($left_to_right) > 0 &&\
    \ count($right_to_left) > 0) {\n        $left_car = array_shift($left_to_right);\n\
    \        $right_car = array_shift($right_to_left);\n        if ($left_car == $right_car)\
    \ {\n            $collisions++;\n        } else {\n            $left_to_right[]\
    \ = $left_car;\n            $right_to_left[] = $right_car;\n        }\n    }\n\
    \    return $collisions;\n}\n\nfunction candidate(...$args) {\n    return car_race_collision(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== 9) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4) !== 16) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(8) !== 64) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(10) !== 100) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp_2qi5p2s.php:36\n\
    Stack trace:\n#0 /tmp/tmp_2qi5p2s.php(43): test()\n#1 {main}\n  thrown in /tmp/tmp_2qi5p2s.php\
    \ on line 36\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Imagine a road that's a perfectly straight infinitely long line.\n\
    // n cars are driving left to right;  simultaneously, a different set of n cars\n\
    // are driving right to left.   The two sets of cars start out being very far\
    \ from\n// each other.  All cars move in the same speed.  Two cars are said to\
    \ collide\n// when a car that's moving left to right hits a car that's moving\
    \ right to left.\n// However, the cars are infinitely sturdy and strong; as a\
    \ result, they continue moving\n// in their trajectory as if they did not collide.\n\
    // This function outputs the number of such collisions.\nfunction car_race_collision($n)\
    \ {\n    $collisions = 0;\n    $left_to_right = [];\n    $right_to_left = [];\n\
    \    for ($i = 0; $i < $n; $i++) {\n        $left_to_right[] = $i;\n        $right_to_left[]\
    \ = $n - $i - 1;\n    }\n    $left_to_right_index = 0;\n    $right_to_left_index\
    \ = 0;\n    while ($left_to_right_index < $n && $right_to_left_index < $n) {\n\
    \        if ($left_to_right[$left_to_right_index] < $right_to_left[$right_to_left_index])\
    \ {\n            $left_to_right_index++;\n        } else {\n            $right_to_left_index++;\n\
    \            $collisions += $left_to_right_index;\n        }\n    }\n    return\
    \ $collisions;\n}\n\nfunction candidate(...$args) {\n    return car_race_collision(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== 9) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4) !== 16) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(8) !== 64) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(10) !== 100) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpnoh8gz8a.php:36\n\
    Stack trace:\n#0 /tmp/tmpnoh8gz8a.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpnoh8gz8a.php\
    \ on line 36\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Imagine a road that's a perfectly straight infinitely long line.\n\
    // n cars are driving left to right;  simultaneously, a different set of n cars\n\
    // are driving right to left.   The two sets of cars start out being very far\
    \ from\n// each other.  All cars move in the same speed.  Two cars are said to\
    \ collide\n// when a car that's moving left to right hits a car that's moving\
    \ right to left.\n// However, the cars are infinitely sturdy and strong; as a\
    \ result, they continue moving\n// in their trajectory as if they did not collide.\n\
    // This function outputs the number of such collisions.\nfunction car_race_collision($n)\
    \ {\n    $collisions = 0;\n    $left_to_right = range(1, $n);\n    $right_to_left\
    \ = range($n, 1);\n    for ($i = 0; $i < $n; $i++) {\n        for ($j = 0; $j\
    \ < $n; $j++) {\n            if ($left_to_right[$i] == $right_to_left[$j]) {\n\
    \                $collisions++;\n            }\n        }\n    }\n    return $collisions;\n\
    }\n\nfunction candidate(...$args) {\n    return car_race_collision(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== 9) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4) !== 16) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(8) !== 64) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(10) !== 100) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmptxt96cvk.php:29\n\
    Stack trace:\n#0 /tmp/tmptxt96cvk.php(36): test()\n#1 {main}\n  thrown in /tmp/tmptxt96cvk.php\
    \ on line 29\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Imagine a road that's a perfectly straight infinitely long line.\n\
    // n cars are driving left to right;  simultaneously, a different set of n cars\n\
    // are driving right to left.   The two sets of cars start out being very far\
    \ from\n// each other.  All cars move in the same speed.  Two cars are said to\
    \ collide\n// when a car that's moving left to right hits a car that's moving\
    \ right to left.\n// However, the cars are infinitely sturdy and strong; as a\
    \ result, they continue moving\n// in their trajectory as if they did not collide.\n\
    // This function outputs the number of such collisions.\nfunction car_race_collision($n)\
    \ {\n  $collisions = 0;\n  $left_to_right = [];\n  $right_to_left = [];\n  for\
    \ ($i = 0; $i < $n; $i++) {\n    $left_to_right[] = $i;\n    $right_to_left[]\
    \ = $n - $i - 1;\n  }\n  $left_to_right_index = 0;\n  $right_to_left_index = 0;\n\
    \  while ($left_to_right_index < $n && $right_to_left_index < $n) {\n    if ($left_to_right[$left_to_right_index]\
    \ < $right_to_left[$right_to_left_index]) {\n      $left_to_right_index++;\n \
    \   } else {\n      $right_to_left_index++;\n      $collisions += $left_to_right_index;\n\
    \    }\n  }\n  return $collisions;\n}\n\nfunction candidate(...$args) {\n    return\
    \ car_race_collision(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !==\
    \ 9) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 16)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 64) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 100) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpjwzdx89e.php:36\n\
    Stack trace:\n#0 /tmp/tmpjwzdx89e.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpjwzdx89e.php\
    \ on line 36\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Imagine a road that's a perfectly straight infinitely long line.\n\
    // n cars are driving left to right;  simultaneously, a different set of n cars\n\
    // are driving right to left.   The two sets of cars start out being very far\
    \ from\n// each other.  All cars move in the same speed.  Two cars are said to\
    \ collide\n// when a car that's moving left to right hits a car that's moving\
    \ right to left.\n// However, the cars are infinitely sturdy and strong; as a\
    \ result, they continue moving\n// in their trajectory as if they did not collide.\n\
    // This function outputs the number of such collisions.\nfunction car_race_collision($n)\
    \ {\n    $left_to_right = range(1, $n);\n    $right_to_left = range($n, 1);\n\
    \    $collisions = 0;\n    $i = 0;\n    $j = 0;\n    while ($i < $n && $j < $n)\
    \ {\n        if ($left_to_right[$i] < $right_to_left[$j]) {\n            $i++;\n\
    \        } else {\n            $collisions += $i;\n            $j++;\n       \
    \ }\n    }\n    return $collisions;\n}\n\nfunction candidate(...$args) {\n   \
    \ return car_race_collision(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !==\
    \ 9) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 16)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 64) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 100) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp10ryk737.php:32\n\
    Stack trace:\n#0 /tmp/tmp10ryk737.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp10ryk737.php\
    \ on line 32\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Imagine a road that's a perfectly straight infinitely long line.\n\
    // n cars are driving left to right;  simultaneously, a different set of n cars\n\
    // are driving right to left.   The two sets of cars start out being very far\
    \ from\n// each other.  All cars move in the same speed.  Two cars are said to\
    \ collide\n// when a car that's moving left to right hits a car that's moving\
    \ right to left.\n// However, the cars are infinitely sturdy and strong; as a\
    \ result, they continue moving\n// in their trajectory as if they did not collide.\n\
    // This function outputs the number of such collisions.\nfunction car_race_collision($n)\
    \ {\n    $collisions = 0;\n    $left_to_right = [];\n    $right_to_left = [];\n\
    \    for ($i = 0; $i < $n; $i++) {\n        $left_to_right[] = $i;\n        $right_to_left[]\
    \ = $n - $i - 1;\n    }\n    for ($i = 0; $i < $n; $i++) {\n        for ($j =\
    \ 0; $j < $n; $j++) {\n            if ($left_to_right[$i] == $right_to_left[$j])\
    \ {\n                $collisions++;\n            }\n        }\n    }\n    return\
    \ $collisions;\n}\n\nfunction candidate(...$args) {\n    return car_race_collision(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== 9) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4) !== 16) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(8) !== 64) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(10) !== 100) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpmkxrgr95.php:33\n\
    Stack trace:\n#0 /tmp/tmpmkxrgr95.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpmkxrgr95.php\
    \ on line 33\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Imagine a road that's a perfectly straight infinitely long line.\n\
    // n cars are driving left to right;  simultaneously, a different set of n cars\n\
    // are driving right to left.   The two sets of cars start out being very far\
    \ from\n// each other.  All cars move in the same speed.  Two cars are said to\
    \ collide\n// when a car that's moving left to right hits a car that's moving\
    \ right to left.\n// However, the cars are infinitely sturdy and strong; as a\
    \ result, they continue moving\n// in their trajectory as if they did not collide.\n\
    // This function outputs the number of such collisions.\nfunction car_race_collision($n)\
    \ {\n    $left_to_right = array();\n    $right_to_left = array();\n    for ($i\
    \ = 0; $i < $n; $i++) {\n        $left_to_right[] = $i;\n        $right_to_left[]\
    \ = $i;\n    }\n    $collisions = 0;\n    while (count($left_to_right) > 0 &&\
    \ count($right_to_left) > 0) {\n        $left_to_right_car = array_shift($left_to_right);\n\
    \        $right_to_left_car = array_shift($right_to_left);\n        if ($left_to_right_car\
    \ == $right_to_left_car) {\n            $collisions++;\n        } else {\n   \
    \         $left_to_right[] = $left_to_right_car;\n            $right_to_left[]\
    \ = $right_to_left_car;\n        }\n    }\n    return $collisions;\n}\n\nfunction\
    \ candidate(...$args) {\n    return car_race_collision(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(2) !== 4) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3) !== 9) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(4) !== 16) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(8) !== 64) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(10) !== 100) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpapdh82td.php:36\n\
    Stack trace:\n#0 /tmp/tmpapdh82td.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpapdh82td.php\
    \ on line 36\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Imagine a road that's a perfectly straight infinitely long line.\n\
    // n cars are driving left to right;  simultaneously, a different set of n cars\n\
    // are driving right to left.   The two sets of cars start out being very far\
    \ from\n// each other.  All cars move in the same speed.  Two cars are said to\
    \ collide\n// when a car that's moving left to right hits a car that's moving\
    \ right to left.\n// However, the cars are infinitely sturdy and strong; as a\
    \ result, they continue moving\n// in their trajectory as if they did not collide.\n\
    // This function outputs the number of such collisions.\nfunction car_race_collision($n)\
    \ {\n    $left_to_right = [];\n    $right_to_left = [];\n    for ($i = 0; $i <\
    \ $n; $i++) {\n        $left_to_right[] = $i;\n        $right_to_left[] = $i;\n\
    \    }\n    $collisions = 0;\n    while (count($left_to_right) > 0 && count($right_to_left)\
    \ > 0) {\n        if ($left_to_right[0] == $right_to_left[0]) {\n            $collisions++;\n\
    \            array_shift($left_to_right);\n            array_shift($right_to_left);\n\
    \        } else if ($left_to_right[0] < $right_to_left[0]) {\n            array_shift($left_to_right);\n\
    \        } else {\n            array_shift($right_to_left);\n        }\n    }\n\
    \    return $collisions;\n}\n\nfunction candidate(...$args) {\n    return car_race_collision(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== 9) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4) !== 16) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(8) !== 64) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(10) !== 100) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmppskeznzd.php:37\n\
    Stack trace:\n#0 /tmp/tmppskeznzd.php(44): test()\n#1 {main}\n  thrown in /tmp/tmppskeznzd.php\
    \ on line 37\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Imagine a road that's a perfectly straight infinitely long line.\n\
    // n cars are driving left to right;  simultaneously, a different set of n cars\n\
    // are driving right to left.   The two sets of cars start out being very far\
    \ from\n// each other.  All cars move in the same speed.  Two cars are said to\
    \ collide\n// when a car that's moving left to right hits a car that's moving\
    \ right to left.\n// However, the cars are infinitely sturdy and strong; as a\
    \ result, they continue moving\n// in their trajectory as if they did not collide.\n\
    // This function outputs the number of such collisions.\nfunction car_race_collision($n)\
    \ {\n    $collisions = 0;\n    $left_to_right = [];\n    $right_to_left = [];\n\
    \    for ($i = 0; $i < $n; $i++) {\n        $left_to_right[] = $i;\n        $right_to_left[]\
    \ = $n - $i - 1;\n    }\n    for ($i = 0; $i < $n; $i++) {\n        for ($j =\
    \ 0; $j < $n; $j++) {\n            if ($left_to_right[$i] == $right_to_left[$j])\
    \ {\n                $collisions++;\n            }\n        }\n    }\n    return\
    \ $collisions;\n}\n\nfunction candidate(...$args) {\n    return car_race_collision(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== 9) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4) !== 16) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(8) !== 64) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(10) !== 100) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp8kji0ogo.php:33\n\
    Stack trace:\n#0 /tmp/tmp8kji0ogo.php(40): test()\n#1 {main}\n  thrown in /tmp/tmp8kji0ogo.php\
    \ on line 33\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Imagine a road that's a perfectly straight infinitely long line.\n\
    // n cars are driving left to right;  simultaneously, a different set of n cars\n\
    // are driving right to left.   The two sets of cars start out being very far\
    \ from\n// each other.  All cars move in the same speed.  Two cars are said to\
    \ collide\n// when a car that's moving left to right hits a car that's moving\
    \ right to left.\n// However, the cars are infinitely sturdy and strong; as a\
    \ result, they continue moving\n// in their trajectory as if they did not collide.\n\
    // This function outputs the number of such collisions.\nfunction car_race_collision($n)\
    \ {\n    $left_to_right = [];\n    $right_to_left = [];\n    for ($i = 0; $i <\
    \ $n; $i++) {\n        $left_to_right[] = $i;\n        $right_to_left[] = $i;\n\
    \    }\n    $collisions = 0;\n    while (count($left_to_right) > 0 && count($right_to_left)\
    \ > 0) {\n        $left_to_right_car = array_shift($left_to_right);\n        $right_to_left_car\
    \ = array_shift($right_to_left);\n        if ($left_to_right_car == $right_to_left_car)\
    \ {\n            $collisions++;\n        }\n    }\n    return $collisions;\n}\n\
    \nfunction candidate(...$args) {\n    return car_race_collision(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(2) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== 9) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4) !== 16) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(8) !== 64) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(10) !== 100) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmplzeco3xh.php:33\n\
    Stack trace:\n#0 /tmp/tmplzeco3xh.php(40): test()\n#1 {main}\n  thrown in /tmp/tmplzeco3xh.php\
    \ on line 33\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Imagine a road that's a perfectly straight infinitely long line.\n\
    // n cars are driving left to right;  simultaneously, a different set of n cars\n\
    // are driving right to left.   The two sets of cars start out being very far\
    \ from\n// each other.  All cars move in the same speed.  Two cars are said to\
    \ collide\n// when a car that's moving left to right hits a car that's moving\
    \ right to left.\n// However, the cars are infinitely sturdy and strong; as a\
    \ result, they continue moving\n// in their trajectory as if they did not collide.\n\
    // This function outputs the number of such collisions.\nfunction car_race_collision($n)\
    \ {\n    $collisions = 0;\n    $left_to_right = range(1, $n);\n    $right_to_left\
    \ = range($n, 1);\n    $left_to_right_index = 0;\n    $right_to_left_index = 0;\n\
    \    while ($left_to_right_index < $n && $right_to_left_index < $n) {\n      \
    \  if ($left_to_right[$left_to_right_index] < $right_to_left[$right_to_left_index])\
    \ {\n            $left_to_right_index++;\n        } else {\n            $right_to_left_index++;\n\
    \            $collisions += $left_to_right_index;\n        }\n    }\n    return\
    \ $collisions;\n}\n\nfunction candidate(...$args) {\n    return car_race_collision(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== 9) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4) !== 16) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(8) !== 64) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(10) !== 100) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp9om3kax7.php:32\n\
    Stack trace:\n#0 /tmp/tmp9om3kax7.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp9om3kax7.php\
    \ on line 32\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Imagine a road that's a perfectly straight infinitely long line.\n\
    // n cars are driving left to right;  simultaneously, a different set of n cars\n\
    // are driving right to left.   The two sets of cars start out being very far\
    \ from\n// each other.  All cars move in the same speed.  Two cars are said to\
    \ collide\n// when a car that's moving left to right hits a car that's moving\
    \ right to left.\n// However, the cars are infinitely sturdy and strong; as a\
    \ result, they continue moving\n// in their trajectory as if they did not collide.\n\
    // This function outputs the number of such collisions.\nfunction car_race_collision($n)\
    \ {\n    $collisions = 0;\n    $left_cars = [];\n    $right_cars = [];\n    for\
    \ ($i = 0; $i < $n; $i++) {\n        $left_cars[] = $i;\n        $right_cars[]\
    \ = $i;\n    }\n    while (count($left_cars) > 0 && count($right_cars) > 0) {\n\
    \        $left_car = array_shift($left_cars);\n        $right_car = array_pop($right_cars);\n\
    \        if ($left_car == $right_car) {\n            $collisions++;\n        }\n\
    \    }\n    return $collisions;\n}\n\nfunction candidate(...$args) {\n    return\
    \ car_race_collision(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !==\
    \ 9) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 16)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 64) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 100) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpetnsbtf2.php:33\n\
    Stack trace:\n#0 /tmp/tmpetnsbtf2.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpetnsbtf2.php\
    \ on line 33\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Imagine a road that's a perfectly straight infinitely long line.\n\
    // n cars are driving left to right;  simultaneously, a different set of n cars\n\
    // are driving right to left.   The two sets of cars start out being very far\
    \ from\n// each other.  All cars move in the same speed.  Two cars are said to\
    \ collide\n// when a car that's moving left to right hits a car that's moving\
    \ right to left.\n// However, the cars are infinitely sturdy and strong; as a\
    \ result, they continue moving\n// in their trajectory as if they did not collide.\n\
    // This function outputs the number of such collisions.\nfunction car_race_collision($n)\
    \ {\n    $collisions = 0;\n    $left_to_right = range(1, $n);\n    $right_to_left\
    \ = range($n, 1);\n    foreach ($left_to_right as $left) {\n        foreach ($right_to_left\
    \ as $right) {\n            if ($left == $right) {\n                $collisions++;\n\
    \            }\n        }\n    }\n    return $collisions;\n}\n\nfunction candidate(...$args)\
    \ {\n    return car_race_collision(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(2) !== 4) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(3) !== 9) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !==\
    \ 64) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 100)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpoz3u8vw5.php:29\n\
    Stack trace:\n#0 /tmp/tmpoz3u8vw5.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpoz3u8vw5.php\
    \ on line 29\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Imagine a road that's a perfectly straight infinitely long line.\n\
    // n cars are driving left to right;  simultaneously, a different set of n cars\n\
    // are driving right to left.   The two sets of cars start out being very far\
    \ from\n// each other.  All cars move in the same speed.  Two cars are said to\
    \ collide\n// when a car that's moving left to right hits a car that's moving\
    \ right to left.\n// However, the cars are infinitely sturdy and strong; as a\
    \ result, they continue moving\n// in their trajectory as if they did not collide.\n\
    // This function outputs the number of such collisions.\nfunction car_race_collision($n)\
    \ {\n    $collisions = 0;\n    $left_to_right = array();\n    $right_to_left =\
    \ array();\n    for ($i = 0; $i < $n; $i++) {\n        $left_to_right[] = $i;\n\
    \        $right_to_left[] = $i;\n    }\n    while (count($left_to_right) > 0 &&\
    \ count($right_to_left) > 0) {\n        $left_to_right_car = array_shift($left_to_right);\n\
    \        $right_to_left_car = array_shift($right_to_left);\n        if ($left_to_right_car\
    \ == $right_to_left_car) {\n            $collisions++;\n        }\n    }\n   \
    \ return $collisions;\n}\n\nfunction candidate(...$args) {\n    return car_race_collision(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== 9) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4) !== 16) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(8) !== 64) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(10) !== 100) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpb5rmpbwk.php:33\n\
    Stack trace:\n#0 /tmp/tmpb5rmpbwk.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpb5rmpbwk.php\
    \ on line 33\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Imagine a road that's a perfectly straight infinitely long line.\n\
    // n cars are driving left to right;  simultaneously, a different set of n cars\n\
    // are driving right to left.   The two sets of cars start out being very far\
    \ from\n// each other.  All cars move in the same speed.  Two cars are said to\
    \ collide\n// when a car that's moving left to right hits a car that's moving\
    \ right to left.\n// However, the cars are infinitely sturdy and strong; as a\
    \ result, they continue moving\n// in their trajectory as if they did not collide.\n\
    // This function outputs the number of such collisions.\nfunction car_race_collision($n)\
    \ {\n    $left_to_right = range(1, $n);\n    $right_to_left = range($n, 1);\n\
    \    $collisions = 0;\n    for ($i = 0; $i < $n; $i++) {\n        for ($j = 0;\
    \ $j < $n; $j++) {\n            if ($left_to_right[$i] == $right_to_left[$j])\
    \ {\n                $collisions++;\n            }\n        }\n    }\n    return\
    \ $collisions;\n}\n\nfunction candidate(...$args) {\n    return car_race_collision(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== 9) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4) !== 16) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(8) !== 64) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(10) !== 100) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp1zkuvc1v.php:29\n\
    Stack trace:\n#0 /tmp/tmp1zkuvc1v.php(36): test()\n#1 {main}\n  thrown in /tmp/tmp1zkuvc1v.php\
    \ on line 29\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Imagine a road that's a perfectly straight infinitely long line.\n\
    // n cars are driving left to right;  simultaneously, a different set of n cars\n\
    // are driving right to left.   The two sets of cars start out being very far\
    \ from\n// each other.  All cars move in the same speed.  Two cars are said to\
    \ collide\n// when a car that's moving left to right hits a car that's moving\
    \ right to left.\n// However, the cars are infinitely sturdy and strong; as a\
    \ result, they continue moving\n// in their trajectory as if they did not collide.\n\
    // This function outputs the number of such collisions.\nfunction car_race_collision($n)\
    \ {\n    $left_to_right = [];\n    $right_to_left = [];\n    for ($i = 0; $i <\
    \ $n; $i++) {\n        $left_to_right[] = $i;\n        $right_to_left[] = $i;\n\
    \    }\n    $collisions = 0;\n    while (count($left_to_right) > 0 && count($right_to_left)\
    \ > 0) {\n        $left_car = array_shift($left_to_right);\n        $right_car\
    \ = array_shift($right_to_left);\n        if ($left_car == $right_car) {\n   \
    \         $collisions++;\n        } else {\n            $left_to_right[] = $left_car;\n\
    \            $right_to_left[] = $right_car;\n        }\n    }\n    return $collisions;\n\
    }\n\nfunction candidate(...$args) {\n    return car_race_collision(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== 9) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4) !== 16) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(8) !== 64) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(10) !== 100) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpteimd5_j.php:36\n\
    Stack trace:\n#0 /tmp/tmpteimd5_j.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpteimd5_j.php\
    \ on line 36\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Imagine a road that's a perfectly straight infinitely long line.\n\
    // n cars are driving left to right;  simultaneously, a different set of n cars\n\
    // are driving right to left.   The two sets of cars start out being very far\
    \ from\n// each other.  All cars move in the same speed.  Two cars are said to\
    \ collide\n// when a car that's moving left to right hits a car that's moving\
    \ right to left.\n// However, the cars are infinitely sturdy and strong; as a\
    \ result, they continue moving\n// in their trajectory as if they did not collide.\n\
    // This function outputs the number of such collisions.\nfunction car_race_collision($n)\
    \ {\n    $left = $right = 0;\n    $collisions = 0;\n    while ($left < $n && $right\
    \ < $n) {\n        if ($left == $right) {\n            $collisions++;\n      \
    \      $left++;\n            $right++;\n        } else if ($left < $right) {\n\
    \            $left++;\n        } else {\n            $right++;\n        }\n  \
    \  }\n    return $collisions;\n}\n\nfunction candidate(...$args) {\n    return\
    \ car_race_collision(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !==\
    \ 9) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 16)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 64) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 100) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp05wieex0.php:32\n\
    Stack trace:\n#0 /tmp/tmp05wieex0.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp05wieex0.php\
    \ on line 32\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Imagine a road that's a perfectly straight infinitely long line.\n\
    // n cars are driving left to right;  simultaneously, a different set of n cars\n\
    // are driving right to left.   The two sets of cars start out being very far\
    \ from\n// each other.  All cars move in the same speed.  Two cars are said to\
    \ collide\n// when a car that's moving left to right hits a car that's moving\
    \ right to left.\n// However, the cars are infinitely sturdy and strong; as a\
    \ result, they continue moving\n// in their trajectory as if they did not collide.\n\
    // This function outputs the number of such collisions.\nfunction car_race_collision($n)\
    \ {\n  $collisions = 0;\n  $left_to_right = range(1, $n);\n  $right_to_left =\
    \ range($n, 1);\n  for ($i = 0; $i < $n; $i++) {\n    for ($j = 0; $j < $n; $j++)\
    \ {\n      if ($left_to_right[$i] == $right_to_left[$j]) {\n        $collisions++;\n\
    \      }\n    }\n  }\n  return $collisions;\n}\n\nfunction candidate(...$args)\
    \ {\n    return car_race_collision(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(2) !== 4) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(3) !== 9) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !==\
    \ 64) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 100)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpeailix2i.php:29\n\
    Stack trace:\n#0 /tmp/tmpeailix2i.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpeailix2i.php\
    \ on line 29\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Imagine a road that's a perfectly straight infinitely long line.\n\
    // n cars are driving left to right;  simultaneously, a different set of n cars\n\
    // are driving right to left.   The two sets of cars start out being very far\
    \ from\n// each other.  All cars move in the same speed.  Two cars are said to\
    \ collide\n// when a car that's moving left to right hits a car that's moving\
    \ right to left.\n// However, the cars are infinitely sturdy and strong; as a\
    \ result, they continue moving\n// in their trajectory as if they did not collide.\n\
    // This function outputs the number of such collisions.\nfunction car_race_collision($n)\
    \ {\n    $collisions = 0;\n    for ($i = 0; $i < $n; $i++) {\n        for ($j\
    \ = 0; $j < $n; $j++) {\n            if ($i == $j) {\n                $collisions++;\n\
    \            }\n        }\n    }\n    return $collisions;\n}\n\nfunction candidate(...$args)\
    \ {\n    return car_race_collision(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(2) !== 4) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(3) !== 9) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !==\
    \ 64) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 100)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpn_5rd1d8.php:27\n\
    Stack trace:\n#0 /tmp/tmpn_5rd1d8.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpn_5rd1d8.php\
    \ on line 27\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Imagine a road that's a perfectly straight infinitely long line.\n\
    // n cars are driving left to right;  simultaneously, a different set of n cars\n\
    // are driving right to left.   The two sets of cars start out being very far\
    \ from\n// each other.  All cars move in the same speed.  Two cars are said to\
    \ collide\n// when a car that's moving left to right hits a car that's moving\
    \ right to left.\n// However, the cars are infinitely sturdy and strong; as a\
    \ result, they continue moving\n// in their trajectory as if they did not collide.\n\
    // This function outputs the number of such collisions.\nfunction car_race_collision($n)\
    \ {\n    $left_to_right = range(1, $n);\n    $right_to_left = range($n, 1);\n\
    \    $collisions = 0;\n    $i = 0;\n    $j = 0;\n    while ($i < $n && $j < $n)\
    \ {\n        if ($left_to_right[$i] < $right_to_left[$j]) {\n            $i++;\n\
    \        } else if ($left_to_right[$i] > $right_to_left[$j]) {\n            $j++;\n\
    \        } else {\n            $collisions++;\n            $i++;\n           \
    \ $j++;\n        }\n    }\n    return $collisions;\n}\n\nfunction candidate(...$args)\
    \ {\n    return car_race_collision(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(2) !== 4) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(3) !== 9) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !==\
    \ 64) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 100)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpq3jg2rw_.php:35\n\
    Stack trace:\n#0 /tmp/tmpq3jg2rw_.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpq3jg2rw_.php\
    \ on line 35\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Imagine a road that's a perfectly straight infinitely long line.\n\
    // n cars are driving left to right;  simultaneously, a different set of n cars\n\
    // are driving right to left.   The two sets of cars start out being very far\
    \ from\n// each other.  All cars move in the same speed.  Two cars are said to\
    \ collide\n// when a car that's moving left to right hits a car that's moving\
    \ right to left.\n// However, the cars are infinitely sturdy and strong; as a\
    \ result, they continue moving\n// in their trajectory as if they did not collide.\n\
    // This function outputs the number of such collisions.\nfunction car_race_collision($n)\
    \ {\n    $collisions = 0;\n    $left_to_right = [];\n    $right_to_left = [];\n\
    \    for ($i = 0; $i < $n; $i++) {\n        $left_to_right[] = $i;\n        $right_to_left[]\
    \ = $n - $i - 1;\n    }\n    for ($i = 0; $i < $n; $i++) {\n        for ($j =\
    \ 0; $j < $n; $j++) {\n            if ($left_to_right[$i] == $right_to_left[$j])\
    \ {\n                $collisions++;\n            }\n        }\n    }\n    return\
    \ $collisions;\n}\n\nfunction candidate(...$args) {\n    return car_race_collision(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== 9) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4) !== 16) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(8) !== 64) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(10) !== 100) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpfza93hlz.php:33\n\
    Stack trace:\n#0 /tmp/tmpfza93hlz.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpfza93hlz.php\
    \ on line 33\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Imagine a road that's a perfectly straight infinitely long line.\n\
    // n cars are driving left to right;  simultaneously, a different set of n cars\n\
    // are driving right to left.   The two sets of cars start out being very far\
    \ from\n// each other.  All cars move in the same speed.  Two cars are said to\
    \ collide\n// when a car that's moving left to right hits a car that's moving\
    \ right to left.\n// However, the cars are infinitely sturdy and strong; as a\
    \ result, they continue moving\n// in their trajectory as if they did not collide.\n\
    // This function outputs the number of such collisions.\nfunction car_race_collision($n)\
    \ {\n    $collisions = 0;\n    $left_to_right = [];\n    $right_to_left = [];\n\
    \    for ($i = 0; $i < $n; $i++) {\n        $left_to_right[] = $i;\n        $right_to_left[]\
    \ = $n - $i - 1;\n    }\n    for ($i = 0; $i < $n; $i++) {\n        for ($j =\
    \ 0; $j < $n; $j++) {\n            if ($left_to_right[$i] == $right_to_left[$j])\
    \ {\n                $collisions++;\n            }\n        }\n    }\n    return\
    \ $collisions;\n}\n\nfunction candidate(...$args) {\n    return car_race_collision(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== 9) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4) !== 16) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(8) !== 64) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(10) !== 100) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp2s4a9qgy.php:33\n\
    Stack trace:\n#0 /tmp/tmp2s4a9qgy.php(40): test()\n#1 {main}\n  thrown in /tmp/tmp2s4a9qgy.php\
    \ on line 33\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Imagine a road that's a perfectly straight infinitely long line.\n\
    // n cars are driving left to right;  simultaneously, a different set of n cars\n\
    // are driving right to left.   The two sets of cars start out being very far\
    \ from\n// each other.  All cars move in the same speed.  Two cars are said to\
    \ collide\n// when a car that's moving left to right hits a car that's moving\
    \ right to left.\n// However, the cars are infinitely sturdy and strong; as a\
    \ result, they continue moving\n// in their trajectory as if they did not collide.\n\
    // This function outputs the number of such collisions.\nfunction car_race_collision($n)\
    \ {\n    $collisions = 0;\n    $left_to_right = array();\n    $right_to_left =\
    \ array();\n    for ($i = 0; $i < $n; $i++) {\n        $left_to_right[] = $i;\n\
    \        $right_to_left[] = $i;\n    }\n    $left_to_right_index = 0;\n    $right_to_left_index\
    \ = 0;\n    while ($left_to_right_index < $n && $right_to_left_index < $n) {\n\
    \        if ($left_to_right[$left_to_right_index] == $right_to_left[$right_to_left_index])\
    \ {\n            $collisions++;\n            $left_to_right_index++;\n       \
    \     $right_to_left_index++;\n        } else if ($left_to_right[$left_to_right_index]\
    \ < $right_to_left[$right_to_left_index]) {\n            $left_to_right_index++;\n\
    \        } else {\n            $right_to_left_index++;\n        }\n    }\n   \
    \ return $collisions;\n}\n\nfunction candidate(...$args) {\n    return car_race_collision(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== 9) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4) !== 16) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(8) !== 64) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(10) !== 100) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpvlecsrq3.php:39\n\
    Stack trace:\n#0 /tmp/tmpvlecsrq3.php(46): test()\n#1 {main}\n  thrown in /tmp/tmpvlecsrq3.php\
    \ on line 39\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Imagine a road that's a perfectly straight infinitely long line.\n\
    // n cars are driving left to right;  simultaneously, a different set of n cars\n\
    // are driving right to left.   The two sets of cars start out being very far\
    \ from\n// each other.  All cars move in the same speed.  Two cars are said to\
    \ collide\n// when a car that's moving left to right hits a car that's moving\
    \ right to left.\n// However, the cars are infinitely sturdy and strong; as a\
    \ result, they continue moving\n// in their trajectory as if they did not collide.\n\
    // This function outputs the number of such collisions.\nfunction car_race_collision($n)\
    \ {\n    $left_to_right = array();\n    $right_to_left = array();\n    for ($i\
    \ = 0; $i < $n; $i++) {\n        $left_to_right[] = $i;\n        $right_to_left[]\
    \ = $i;\n    }\n    $collisions = 0;\n    while (count($left_to_right) > 0 &&\
    \ count($right_to_left) > 0) {\n        $left_to_right_car = array_shift($left_to_right);\n\
    \        $right_to_left_car = array_shift($right_to_left);\n        if ($left_to_right_car\
    \ == $right_to_left_car) {\n            $collisions++;\n        }\n    }\n   \
    \ return $collisions;\n}\n\nfunction candidate(...$args) {\n    return car_race_collision(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== 9) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4) !== 16) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(8) !== 64) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(10) !== 100) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp8v2p5w8p.php:33\n\
    Stack trace:\n#0 /tmp/tmp8v2p5w8p.php(40): test()\n#1 {main}\n  thrown in /tmp/tmp8v2p5w8p.php\
    \ on line 33\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Imagine a road that's a perfectly straight infinitely long line.\n\
    // n cars are driving left to right;  simultaneously, a different set of n cars\n\
    // are driving right to left.   The two sets of cars start out being very far\
    \ from\n// each other.  All cars move in the same speed.  Two cars are said to\
    \ collide\n// when a car that's moving left to right hits a car that's moving\
    \ right to left.\n// However, the cars are infinitely sturdy and strong; as a\
    \ result, they continue moving\n// in their trajectory as if they did not collide.\n\
    // This function outputs the number of such collisions.\nfunction car_race_collision($n)\
    \ {\n    $collisions = 0;\n    $left_to_right = range(1, $n);\n    $right_to_left\
    \ = range($n, 1);\n    foreach ($left_to_right as $left) {\n        foreach ($right_to_left\
    \ as $right) {\n            if ($left == $right) {\n                $collisions++;\n\
    \            }\n        }\n    }\n    return $collisions;\n}\n\nfunction candidate(...$args)\
    \ {\n    return car_race_collision(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(2) !== 4) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(3) !== 9) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !==\
    \ 64) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 100)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpcbqixfiw.php:29\n\
    Stack trace:\n#0 /tmp/tmpcbqixfiw.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpcbqixfiw.php\
    \ on line 29\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Imagine a road that's a perfectly straight infinitely long line.\n\
    // n cars are driving left to right;  simultaneously, a different set of n cars\n\
    // are driving right to left.   The two sets of cars start out being very far\
    \ from\n// each other.  All cars move in the same speed.  Two cars are said to\
    \ collide\n// when a car that's moving left to right hits a car that's moving\
    \ right to left.\n// However, the cars are infinitely sturdy and strong; as a\
    \ result, they continue moving\n// in their trajectory as if they did not collide.\n\
    // This function outputs the number of such collisions.\nfunction car_race_collision($n)\
    \ {\n    $collisions = 0;\n    $left_to_right = range(1, $n);\n    $right_to_left\
    \ = range($n, 1);\n    while (!empty($left_to_right) && !empty($right_to_left))\
    \ {\n        $left_car = array_shift($left_to_right);\n        $right_car = array_shift($right_to_left);\n\
    \        if ($left_car == $right_car) {\n            $collisions++;\n        }\n\
    \    }\n    return $collisions;\n}\n\nfunction candidate(...$args) {\n    return\
    \ car_race_collision(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !==\
    \ 9) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 16)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 64) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 100) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpfovbbvrz.php:29\n\
    Stack trace:\n#0 /tmp/tmpfovbbvrz.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpfovbbvrz.php\
    \ on line 29\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Imagine a road that's a perfectly straight infinitely long line.\n\
    // n cars are driving left to right;  simultaneously, a different set of n cars\n\
    // are driving right to left.   The two sets of cars start out being very far\
    \ from\n// each other.  All cars move in the same speed.  Two cars are said to\
    \ collide\n// when a car that's moving left to right hits a car that's moving\
    \ right to left.\n// However, the cars are infinitely sturdy and strong; as a\
    \ result, they continue moving\n// in their trajectory as if they did not collide.\n\
    // This function outputs the number of such collisions.\nfunction car_race_collision($n)\
    \ {\n    $left_to_right = range(1, $n);\n    $right_to_left = range($n, 1);\n\
    \    $collisions = 0;\n    for ($i = 0; $i < $n; $i++) {\n        for ($j = 0;\
    \ $j < $n; $j++) {\n            if ($left_to_right[$i] == $right_to_left[$j])\
    \ {\n                $collisions++;\n            }\n        }\n    }\n    return\
    \ $collisions;\n}\n\nfunction candidate(...$args) {\n    return car_race_collision(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== 9) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4) !== 16) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(8) !== 64) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(10) !== 100) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpr4midvmj.php:29\n\
    Stack trace:\n#0 /tmp/tmpr4midvmj.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpr4midvmj.php\
    \ on line 29\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Imagine a road that's a perfectly straight infinitely long line.\n\
    // n cars are driving left to right;  simultaneously, a different set of n cars\n\
    // are driving right to left.   The two sets of cars start out being very far\
    \ from\n// each other.  All cars move in the same speed.  Two cars are said to\
    \ collide\n// when a car that's moving left to right hits a car that's moving\
    \ right to left.\n// However, the cars are infinitely sturdy and strong; as a\
    \ result, they continue moving\n// in their trajectory as if they did not collide.\n\
    // This function outputs the number of such collisions.\nfunction car_race_collision($n)\
    \ {\n    $left_to_right = [];\n    $right_to_left = [];\n    for ($i = 0; $i <\
    \ $n; $i++) {\n        $left_to_right[] = $i;\n        $right_to_left[] = $i;\n\
    \    }\n    $collisions = 0;\n    while (!empty($left_to_right) && !empty($right_to_left))\
    \ {\n        $left_car = array_shift($left_to_right);\n        $right_car = array_shift($right_to_left);\n\
    \        if ($left_car == $right_car) {\n            $collisions++;\n        }\
    \ else {\n            $left_to_right[] = $left_car;\n            $right_to_left[]\
    \ = $right_car;\n        }\n    }\n    return $collisions;\n}\n\nfunction candidate(...$args)\
    \ {\n    return car_race_collision(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(2) !== 4) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(3) !== 9) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !==\
    \ 64) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 100)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpqfcd1wj6.php:36\n\
    Stack trace:\n#0 /tmp/tmpqfcd1wj6.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpqfcd1wj6.php\
    \ on line 36\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Imagine a road that's a perfectly straight infinitely long line.\n\
    // n cars are driving left to right;  simultaneously, a different set of n cars\n\
    // are driving right to left.   The two sets of cars start out being very far\
    \ from\n// each other.  All cars move in the same speed.  Two cars are said to\
    \ collide\n// when a car that's moving left to right hits a car that's moving\
    \ right to left.\n// However, the cars are infinitely sturdy and strong; as a\
    \ result, they continue moving\n// in their trajectory as if they did not collide.\n\
    // This function outputs the number of such collisions.\nfunction car_race_collision($n)\
    \ {\n    $left_to_right = range(1, $n);\n    $right_to_left = range($n, 1);\n\
    \    $collisions = 0;\n    foreach ($left_to_right as $left) {\n        foreach\
    \ ($right_to_left as $right) {\n            if ($left == $right) {\n         \
    \       $collisions++;\n            }\n        }\n    }\n    return $collisions;\n\
    }\n\nfunction candidate(...$args) {\n    return car_race_collision(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== 9) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4) !== 16) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(8) !== 64) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(10) !== 100) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpxh85ljtv.php:29\n\
    Stack trace:\n#0 /tmp/tmpxh85ljtv.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpxh85ljtv.php\
    \ on line 29\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Imagine a road that's a perfectly straight infinitely long line.\n\
    // n cars are driving left to right;  simultaneously, a different set of n cars\n\
    // are driving right to left.   The two sets of cars start out being very far\
    \ from\n// each other.  All cars move in the same speed.  Two cars are said to\
    \ collide\n// when a car that's moving left to right hits a car that's moving\
    \ right to left.\n// However, the cars are infinitely sturdy and strong; as a\
    \ result, they continue moving\n// in their trajectory as if they did not collide.\n\
    // This function outputs the number of such collisions.\nfunction car_race_collision($n)\
    \ {\n    $left_to_right = range(1, $n);\n    $right_to_left = range($n, 1);\n\
    \    $collisions = 0;\n    for ($i = 0; $i < $n; $i++) {\n        if ($left_to_right[$i]\
    \ == $right_to_left[$i]) {\n            $collisions++;\n        }\n    }\n   \
    \ return $collisions;\n}\n\nfunction candidate(...$args) {\n    return car_race_collision(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== 9) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4) !== 16) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(8) !== 64) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(10) !== 100) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmph4a5s8gr.php:27\n\
    Stack trace:\n#0 /tmp/tmph4a5s8gr.php(34): test()\n#1 {main}\n  thrown in /tmp/tmph4a5s8gr.php\
    \ on line 27\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Imagine a road that's a perfectly straight infinitely long line.\n\
    // n cars are driving left to right;  simultaneously, a different set of n cars\n\
    // are driving right to left.   The two sets of cars start out being very far\
    \ from\n// each other.  All cars move in the same speed.  Two cars are said to\
    \ collide\n// when a car that's moving left to right hits a car that's moving\
    \ right to left.\n// However, the cars are infinitely sturdy and strong; as a\
    \ result, they continue moving\n// in their trajectory as if they did not collide.\n\
    // This function outputs the number of such collisions.\nfunction car_race_collision($n)\
    \ {\n    $collisions = 0;\n    for ($i = 0; $i < $n; $i++) {\n        for ($j\
    \ = 0; $j < $n; $j++) {\n            if ($i < $j) {\n                $collisions++;\n\
    \            }\n        }\n    }\n    return $collisions;\n}\n\nfunction candidate(...$args)\
    \ {\n    return car_race_collision(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(2) !== 4) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(3) !== 9) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !==\
    \ 64) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 100)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpgxe9q16b.php:27\n\
    Stack trace:\n#0 /tmp/tmpgxe9q16b.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpgxe9q16b.php\
    \ on line 27\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Imagine a road that's a perfectly straight infinitely long line.\n\
    // n cars are driving left to right;  simultaneously, a different set of n cars\n\
    // are driving right to left.   The two sets of cars start out being very far\
    \ from\n// each other.  All cars move in the same speed.  Two cars are said to\
    \ collide\n// when a car that's moving left to right hits a car that's moving\
    \ right to left.\n// However, the cars are infinitely sturdy and strong; as a\
    \ result, they continue moving\n// in their trajectory as if they did not collide.\n\
    // This function outputs the number of such collisions.\nfunction car_race_collision($n)\
    \ {\n    $left_to_right = $right_to_left = range(1, $n);\n    $collisions = 0;\n\
    \    while (count($left_to_right) > 0 && count($right_to_left) > 0) {\n      \
    \  if ($left_to_right[0] == $right_to_left[0]) {\n            $collisions++;\n\
    \            array_shift($left_to_right);\n            array_shift($right_to_left);\n\
    \        } else if ($left_to_right[0] < $right_to_left[0]) {\n            array_shift($left_to_right);\n\
    \        } else {\n            array_shift($right_to_left);\n        }\n    }\n\
    \    return $collisions;\n}\n\nfunction candidate(...$args) {\n    return car_race_collision(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== 9) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4) !== 16) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(8) !== 64) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(10) !== 100) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpqbz6vskc.php:32\n\
    Stack trace:\n#0 /tmp/tmpqbz6vskc.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpqbz6vskc.php\
    \ on line 32\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Imagine a road that's a perfectly straight infinitely long line.\n\
    // n cars are driving left to right;  simultaneously, a different set of n cars\n\
    // are driving right to left.   The two sets of cars start out being very far\
    \ from\n// each other.  All cars move in the same speed.  Two cars are said to\
    \ collide\n// when a car that's moving left to right hits a car that's moving\
    \ right to left.\n// However, the cars are infinitely sturdy and strong; as a\
    \ result, they continue moving\n// in their trajectory as if they did not collide.\n\
    // This function outputs the number of such collisions.\nfunction car_race_collision($n)\
    \ {\n    $collisions = 0;\n    $left_to_right = [];\n    $right_to_left = [];\n\
    \    for ($i = 0; $i < $n; $i++) {\n        $left_to_right[] = $i;\n        $right_to_left[]\
    \ = $n - $i - 1;\n    }\n    $left_to_right_index = 0;\n    $right_to_left_index\
    \ = 0;\n    while ($left_to_right_index < $n && $right_to_left_index < $n) {\n\
    \        if ($left_to_right[$left_to_right_index] < $right_to_left[$right_to_left_index])\
    \ {\n            $left_to_right_index++;\n        } else {\n            $right_to_left_index++;\n\
    \            $collisions += $left_to_right_index;\n        }\n    }\n    return\
    \ $collisions;\n}\n\nfunction candidate(...$args) {\n    return car_race_collision(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== 9) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4) !== 16) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(8) !== 64) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(10) !== 100) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp1_a8_b_b.php:36\n\
    Stack trace:\n#0 /tmp/tmp1_a8_b_b.php(43): test()\n#1 {main}\n  thrown in /tmp/tmp1_a8_b_b.php\
    \ on line 36\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Imagine a road that's a perfectly straight infinitely long line.\n\
    // n cars are driving left to right;  simultaneously, a different set of n cars\n\
    // are driving right to left.   The two sets of cars start out being very far\
    \ from\n// each other.  All cars move in the same speed.  Two cars are said to\
    \ collide\n// when a car that's moving left to right hits a car that's moving\
    \ right to left.\n// However, the cars are infinitely sturdy and strong; as a\
    \ result, they continue moving\n// in their trajectory as if they did not collide.\n\
    // This function outputs the number of such collisions.\nfunction car_race_collision($n)\
    \ {\n    $left_to_right = range(1, $n);\n    $right_to_left = range($n, 1);\n\
    \    $collisions = 0;\n    for ($i = 0; $i < $n; $i++) {\n        for ($j = 0;\
    \ $j < $n; $j++) {\n            if ($left_to_right[$i] == $right_to_left[$j])\
    \ {\n                $collisions++;\n            }\n        }\n    }\n    return\
    \ $collisions;\n}\n\nfunction candidate(...$args) {\n    return car_race_collision(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== 9) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4) !== 16) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(8) !== 64) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(10) !== 100) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp1lt_n981.php:29\n\
    Stack trace:\n#0 /tmp/tmp1lt_n981.php(36): test()\n#1 {main}\n  thrown in /tmp/tmp1lt_n981.php\
    \ on line 29\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Imagine a road that's a perfectly straight infinitely long line.\n\
    // n cars are driving left to right;  simultaneously, a different set of n cars\n\
    // are driving right to left.   The two sets of cars start out being very far\
    \ from\n// each other.  All cars move in the same speed.  Two cars are said to\
    \ collide\n// when a car that's moving left to right hits a car that's moving\
    \ right to left.\n// However, the cars are infinitely sturdy and strong; as a\
    \ result, they continue moving\n// in their trajectory as if they did not collide.\n\
    // This function outputs the number of such collisions.\nfunction car_race_collision($n)\
    \ {\n    $left_to_right = array();\n    $right_to_left = array();\n    for ($i\
    \ = 0; $i < $n; $i++) {\n        $left_to_right[] = $i;\n        $right_to_left[]\
    \ = $i;\n    }\n    $collisions = 0;\n    while (count($left_to_right) > 0 &&\
    \ count($right_to_left) > 0) {\n        $left_to_right_car = array_shift($left_to_right);\n\
    \        $right_to_left_car = array_shift($right_to_left);\n        if ($left_to_right_car\
    \ == $right_to_left_car) {\n            $collisions++;\n        }\n    }\n   \
    \ return $collisions;\n}\n\nfunction candidate(...$args) {\n    return car_race_collision(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== 9) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4) !== 16) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(8) !== 64) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(10) !== 100) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpyn3ctlxe.php:33\n\
    Stack trace:\n#0 /tmp/tmpyn3ctlxe.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpyn3ctlxe.php\
    \ on line 33\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Imagine a road that's a perfectly straight infinitely long line.\n\
    // n cars are driving left to right;  simultaneously, a different set of n cars\n\
    // are driving right to left.   The two sets of cars start out being very far\
    \ from\n// each other.  All cars move in the same speed.  Two cars are said to\
    \ collide\n// when a car that's moving left to right hits a car that's moving\
    \ right to left.\n// However, the cars are infinitely sturdy and strong; as a\
    \ result, they continue moving\n// in their trajectory as if they did not collide.\n\
    // This function outputs the number of such collisions.\nfunction car_race_collision($n)\
    \ {\n    $collisions = 0;\n    for ($i = 0; $i < $n; $i++) {\n        for ($j\
    \ = 0; $j < $n; $j++) {\n            $collisions++;\n        }\n    }\n    return\
    \ $collisions;\n}\n\nfunction candidate(...$args) {\n    return car_race_collision(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== 9) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4) !== 16) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(8) !== 64) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(10) !== 100) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Imagine a road that's a perfectly straight infinitely long line.\n\
    // n cars are driving left to right;  simultaneously, a different set of n cars\n\
    // are driving right to left.   The two sets of cars start out being very far\
    \ from\n// each other.  All cars move in the same speed.  Two cars are said to\
    \ collide\n// when a car that's moving left to right hits a car that's moving\
    \ right to left.\n// However, the cars are infinitely sturdy and strong; as a\
    \ result, they continue moving\n// in their trajectory as if they did not collide.\n\
    // This function outputs the number of such collisions.\nfunction car_race_collision($n)\
    \ {\n    // TODO: Implement this function.\n    return 0;\n}\n\nfunction candidate(...$args)\
    \ {\n    return car_race_collision(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(2) !== 4) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(3) !== 9) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !==\
    \ 64) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 100)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpfjilxlj5.php:20\n\
    Stack trace:\n#0 /tmp/tmpfjilxlj5.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpfjilxlj5.php\
    \ on line 20\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Imagine a road that's a perfectly straight infinitely long line.\n\
    // n cars are driving left to right;  simultaneously, a different set of n cars\n\
    // are driving right to left.   The two sets of cars start out being very far\
    \ from\n// each other.  All cars move in the same speed.  Two cars are said to\
    \ collide\n// when a car that's moving left to right hits a car that's moving\
    \ right to left.\n// However, the cars are infinitely sturdy and strong; as a\
    \ result, they continue moving\n// in their trajectory as if they did not collide.\n\
    // This function outputs the number of such collisions.\nfunction car_race_collision($n)\
    \ {\n  $left_to_right = array();\n  $right_to_left = array();\n  for ($i = 0;\
    \ $i < $n; $i++) {\n    $left_to_right[] = $i;\n    $right_to_left[] = $i;\n \
    \ }\n  $collisions = 0;\n  while (count($left_to_right) > 0 && count($right_to_left)\
    \ > 0) {\n    $left_to_right_car = array_shift($left_to_right);\n    $right_to_left_car\
    \ = array_shift($right_to_left);\n    if ($left_to_right_car == $right_to_left_car)\
    \ {\n      $collisions++;\n    }\n  }\n  return $collisions;\n}\n\nfunction candidate(...$args)\
    \ {\n    return car_race_collision(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(2) !== 4) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(3) !== 9) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !==\
    \ 64) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 100)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmplklggx1a.php:33\n\
    Stack trace:\n#0 /tmp/tmplklggx1a.php(40): test()\n#1 {main}\n  thrown in /tmp/tmplklggx1a.php\
    \ on line 33\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Imagine a road that's a perfectly straight infinitely long line.\n\
    // n cars are driving left to right;  simultaneously, a different set of n cars\n\
    // are driving right to left.   The two sets of cars start out being very far\
    \ from\n// each other.  All cars move in the same speed.  Two cars are said to\
    \ collide\n// when a car that's moving left to right hits a car that's moving\
    \ right to left.\n// However, the cars are infinitely sturdy and strong; as a\
    \ result, they continue moving\n// in their trajectory as if they did not collide.\n\
    // This function outputs the number of such collisions.\nfunction car_race_collision($n)\
    \ {\n    $left_to_right = [];\n    $right_to_left = [];\n    for ($i = 0; $i <\
    \ $n; $i++) {\n        $left_to_right[] = $i;\n        $right_to_left[] = $i;\n\
    \    }\n    $collisions = 0;\n    while (count($left_to_right) > 0 && count($right_to_left)\
    \ > 0) {\n        $left_car = array_shift($left_to_right);\n        $right_car\
    \ = array_shift($right_to_left);\n        if ($left_car == $right_car) {\n   \
    \         $collisions++;\n        } else {\n            $left_to_right[] = $left_car;\n\
    \            $right_to_left[] = $right_car;\n        }\n    }\n    return $collisions;\n\
    }\n\nfunction candidate(...$args) {\n    return car_race_collision(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== 9) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4) !== 16) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(8) !== 64) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(10) !== 100) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpiq8f7dm8.php:36\n\
    Stack trace:\n#0 /tmp/tmpiq8f7dm8.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpiq8f7dm8.php\
    \ on line 36\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Imagine a road that's a perfectly straight infinitely long line.\n\
    // n cars are driving left to right;  simultaneously, a different set of n cars\n\
    // are driving right to left.   The two sets of cars start out being very far\
    \ from\n// each other.  All cars move in the same speed.  Two cars are said to\
    \ collide\n// when a car that's moving left to right hits a car that's moving\
    \ right to left.\n// However, the cars are infinitely sturdy and strong; as a\
    \ result, they continue moving\n// in their trajectory as if they did not collide.\n\
    // This function outputs the number of such collisions.\nfunction car_race_collision($n)\
    \ {\n    $collisions = 0;\n    $left_to_right = range(1, $n);\n    $right_to_left\
    \ = range($n, 1);\n    for ($i = 0; $i < $n; $i++) {\n        if ($left_to_right[$i]\
    \ == $right_to_left[$i]) {\n            $collisions++;\n        }\n    }\n   \
    \ return $collisions;\n}\n\nfunction candidate(...$args) {\n    return car_race_collision(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== 9) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4) !== 16) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(8) !== 64) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(10) !== 100) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpfb1mgj7l.php:27\n\
    Stack trace:\n#0 /tmp/tmpfb1mgj7l.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpfb1mgj7l.php\
    \ on line 27\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Imagine a road that's a perfectly straight infinitely long line.\n\
    // n cars are driving left to right;  simultaneously, a different set of n cars\n\
    // are driving right to left.   The two sets of cars start out being very far\
    \ from\n// each other.  All cars move in the same speed.  Two cars are said to\
    \ collide\n// when a car that's moving left to right hits a car that's moving\
    \ right to left.\n// However, the cars are infinitely sturdy and strong; as a\
    \ result, they continue moving\n// in their trajectory as if they did not collide.\n\
    // This function outputs the number of such collisions.\nfunction car_race_collision($n)\
    \ {\n    $left_to_right = range(1, $n);\n    $right_to_left = range($n, 1);\n\
    \    $collisions = 0;\n    for ($i = 0; $i < $n; $i++) {\n        for ($j = 0;\
    \ $j < $n; $j++) {\n            if ($left_to_right[$i] == $right_to_left[$j])\
    \ {\n                $collisions++;\n            }\n        }\n    }\n    return\
    \ $collisions;\n}\n\nfunction candidate(...$args) {\n    return car_race_collision(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== 9) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4) !== 16) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(8) !== 64) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(10) !== 100) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmprp4lt8le.php:29\n\
    Stack trace:\n#0 /tmp/tmprp4lt8le.php(36): test()\n#1 {main}\n  thrown in /tmp/tmprp4lt8le.php\
    \ on line 29\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Imagine a road that's a perfectly straight infinitely long line.\n\
    // n cars are driving left to right;  simultaneously, a different set of n cars\n\
    // are driving right to left.   The two sets of cars start out being very far\
    \ from\n// each other.  All cars move in the same speed.  Two cars are said to\
    \ collide\n// when a car that's moving left to right hits a car that's moving\
    \ right to left.\n// However, the cars are infinitely sturdy and strong; as a\
    \ result, they continue moving\n// in their trajectory as if they did not collide.\n\
    // This function outputs the number of such collisions.\nfunction car_race_collision($n)\
    \ {\n    $left_to_right = array();\n    $right_to_left = array();\n    for ($i\
    \ = 0; $i < $n; $i++) {\n        $left_to_right[] = $i;\n        $right_to_left[]\
    \ = $i;\n    }\n    $collisions = 0;\n    while (count($left_to_right) > 0 &&\
    \ count($right_to_left) > 0) {\n        $left_to_right_car = array_shift($left_to_right);\n\
    \        $right_to_left_car = array_shift($right_to_left);\n        if ($left_to_right_car\
    \ == $right_to_left_car) {\n            $collisions++;\n        }\n    }\n   \
    \ return $collisions;\n}\n\nfunction candidate(...$args) {\n    return car_race_collision(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== 9) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4) !== 16) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(8) !== 64) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(10) !== 100) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpxsyeaef7.php:33\n\
    Stack trace:\n#0 /tmp/tmpxsyeaef7.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpxsyeaef7.php\
    \ on line 33\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Imagine a road that's a perfectly straight infinitely long line.\n\
    // n cars are driving left to right;  simultaneously, a different set of n cars\n\
    // are driving right to left.   The two sets of cars start out being very far\
    \ from\n// each other.  All cars move in the same speed.  Two cars are said to\
    \ collide\n// when a car that's moving left to right hits a car that's moving\
    \ right to left.\n// However, the cars are infinitely sturdy and strong; as a\
    \ result, they continue moving\n// in their trajectory as if they did not collide.\n\
    // This function outputs the number of such collisions.\nfunction car_race_collision($n)\
    \ {\n    $collisions = 0;\n    $left_to_right = [];\n    $right_to_left = [];\n\
    \    for ($i = 0; $i < $n; $i++) {\n        $left_to_right[] = $i;\n        $right_to_left[]\
    \ = $n - $i - 1;\n    }\n    $left_to_right_index = 0;\n    $right_to_left_index\
    \ = 0;\n    while ($left_to_right_index < $n && $right_to_left_index < $n) {\n\
    \        if ($left_to_right[$left_to_right_index] < $right_to_left[$right_to_left_index])\
    \ {\n            $left_to_right_index++;\n        } else {\n            $right_to_left_index++;\n\
    \            $collisions += $left_to_right_index;\n        }\n    }\n    return\
    \ $collisions;\n}\n\nfunction candidate(...$args) {\n    return car_race_collision(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== 9) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4) !== 16) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(8) !== 64) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(10) !== 100) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp9gjlcjx1.php:36\n\
    Stack trace:\n#0 /tmp/tmp9gjlcjx1.php(43): test()\n#1 {main}\n  thrown in /tmp/tmp9gjlcjx1.php\
    \ on line 36\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Imagine a road that's a perfectly straight infinitely long line.\n\
    // n cars are driving left to right;  simultaneously, a different set of n cars\n\
    // are driving right to left.   The two sets of cars start out being very far\
    \ from\n// each other.  All cars move in the same speed.  Two cars are said to\
    \ collide\n// when a car that's moving left to right hits a car that's moving\
    \ right to left.\n// However, the cars are infinitely sturdy and strong; as a\
    \ result, they continue moving\n// in their trajectory as if they did not collide.\n\
    // This function outputs the number of such collisions.\nfunction car_race_collision($n)\
    \ {\n    $collisions = 0;\n    $left_to_right = array();\n    $right_to_left =\
    \ array();\n    for ($i = 0; $i < $n; $i++) {\n        $left_to_right[] = $i;\n\
    \        $right_to_left[] = $i;\n    }\n    while (count($left_to_right) > 0 &&\
    \ count($right_to_left) > 0) {\n        $left_car = array_shift($left_to_right);\n\
    \        $right_car = array_shift($right_to_left);\n        if ($left_car == $right_car)\
    \ {\n            $collisions++;\n        } else {\n            $left_to_right[]\
    \ = $left_car;\n            $right_to_left[] = $right_car;\n        }\n    }\n\
    \    return $collisions;\n}\n\nfunction candidate(...$args) {\n    return car_race_collision(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== 9) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4) !== 16) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(8) !== 64) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(10) !== 100) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpapbyboiq.php:36\n\
    Stack trace:\n#0 /tmp/tmpapbyboiq.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpapbyboiq.php\
    \ on line 36\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Imagine a road that's a perfectly straight infinitely long line.\n\
    // n cars are driving left to right;  simultaneously, a different set of n cars\n\
    // are driving right to left.   The two sets of cars start out being very far\
    \ from\n// each other.  All cars move in the same speed.  Two cars are said to\
    \ collide\n// when a car that's moving left to right hits a car that's moving\
    \ right to left.\n// However, the cars are infinitely sturdy and strong; as a\
    \ result, they continue moving\n// in their trajectory as if they did not collide.\n\
    // This function outputs the number of such collisions.\nfunction car_race_collision($n)\
    \ {\n    $left_to_right = array();\n    $right_to_left = array();\n    for ($i\
    \ = 0; $i < $n; $i++) {\n        $left_to_right[] = $i;\n        $right_to_left[]\
    \ = $i;\n    }\n    $collisions = 0;\n    while (count($left_to_right) > 0 &&\
    \ count($right_to_left) > 0) {\n        $left_car = array_shift($left_to_right);\n\
    \        $right_car = array_shift($right_to_left);\n        if ($left_car == $right_car)\
    \ {\n            $collisions++;\n        }\n    }\n    return $collisions;\n}\n\
    \nfunction candidate(...$args) {\n    return car_race_collision(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(2) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== 9) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4) !== 16) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(8) !== 64) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(10) !== 100) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpvq8tgotz.php:33\n\
    Stack trace:\n#0 /tmp/tmpvq8tgotz.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpvq8tgotz.php\
    \ on line 33\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Imagine a road that's a perfectly straight infinitely long line.\n\
    // n cars are driving left to right;  simultaneously, a different set of n cars\n\
    // are driving right to left.   The two sets of cars start out being very far\
    \ from\n// each other.  All cars move in the same speed.  Two cars are said to\
    \ collide\n// when a car that's moving left to right hits a car that's moving\
    \ right to left.\n// However, the cars are infinitely sturdy and strong; as a\
    \ result, they continue moving\n// in their trajectory as if they did not collide.\n\
    // This function outputs the number of such collisions.\nfunction car_race_collision($n)\
    \ {\n    $left_to_right = [];\n    $right_to_left = [];\n    for ($i = 0; $i <\
    \ $n; $i++) {\n        $left_to_right[] = $i;\n        $right_to_left[] = $i;\n\
    \    }\n    $collisions = 0;\n    while (count($left_to_right) > 0 && count($right_to_left)\
    \ > 0) {\n        $left_to_right_car = array_shift($left_to_right);\n        $right_to_left_car\
    \ = array_shift($right_to_left);\n        if ($left_to_right_car > $right_to_left_car)\
    \ {\n            $collisions++;\n        }\n    }\n    return $collisions;\n}\n\
    \nfunction candidate(...$args) {\n    return car_race_collision(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(2) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== 9) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4) !== 16) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(8) !== 64) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(10) !== 100) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpq3z3k1l3.php:33\n\
    Stack trace:\n#0 /tmp/tmpq3z3k1l3.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpq3z3k1l3.php\
    \ on line 33\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Imagine a road that's a perfectly straight infinitely long line.\n\
    // n cars are driving left to right;  simultaneously, a different set of n cars\n\
    // are driving right to left.   The two sets of cars start out being very far\
    \ from\n// each other.  All cars move in the same speed.  Two cars are said to\
    \ collide\n// when a car that's moving left to right hits a car that's moving\
    \ right to left.\n// However, the cars are infinitely sturdy and strong; as a\
    \ result, they continue moving\n// in their trajectory as if they did not collide.\n\
    // This function outputs the number of such collisions.\nfunction car_race_collision($n)\
    \ {\n    $collisions = 0;\n    $left_to_right = range(1, $n);\n    $right_to_left\
    \ = range($n, 1);\n    $left_to_right_index = 0;\n    $right_to_left_index = 0;\n\
    \    while ($left_to_right_index < $n && $right_to_left_index < $n) {\n      \
    \  if ($left_to_right[$left_to_right_index] < $right_to_left[$right_to_left_index])\
    \ {\n            $left_to_right_index++;\n        } else {\n            $right_to_left_index++;\n\
    \            $collisions += $left_to_right_index;\n        }\n    }\n    return\
    \ $collisions;\n}\n\nfunction candidate(...$args) {\n    return car_race_collision(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== 9) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4) !== 16) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(8) !== 64) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(10) !== 100) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpk212aefo.php:32\n\
    Stack trace:\n#0 /tmp/tmpk212aefo.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpk212aefo.php\
    \ on line 32\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Imagine a road that's a perfectly straight infinitely long line.\n\
    // n cars are driving left to right;  simultaneously, a different set of n cars\n\
    // are driving right to left.   The two sets of cars start out being very far\
    \ from\n// each other.  All cars move in the same speed.  Two cars are said to\
    \ collide\n// when a car that's moving left to right hits a car that's moving\
    \ right to left.\n// However, the cars are infinitely sturdy and strong; as a\
    \ result, they continue moving\n// in their trajectory as if they did not collide.\n\
    // This function outputs the number of such collisions.\nfunction car_race_collision($n)\
    \ {\n  $collisions = 0;\n  $left_to_right = [];\n  $right_to_left = [];\n  for\
    \ ($i = 0; $i < $n; $i++) {\n    $left_to_right[] = $i;\n    $right_to_left[]\
    \ = $i;\n  }\n  while (count($left_to_right) > 0 && count($right_to_left) > 0)\
    \ {\n    $left_car = array_shift($left_to_right);\n    $right_car = array_shift($right_to_left);\n\
    \    if ($left_car > $right_car) {\n      $collisions++;\n    } else {\n     \
    \ $left_to_right[] = $left_car;\n      $right_to_left[] = $right_car;\n    }\n\
    \  }\n  return $collisions;\n}\n\nfunction candidate(...$args) {\n    return car_race_collision(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== 9) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4) !== 16) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(8) !== 64) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(10) !== 100) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  stdout: None
  stderr: None
  exit_code: -1
  status: Timeout
- program: "<?php\n// Imagine a road that's a perfectly straight infinitely long line.\n\
    // n cars are driving left to right;  simultaneously, a different set of n cars\n\
    // are driving right to left.   The two sets of cars start out being very far\
    \ from\n// each other.  All cars move in the same speed.  Two cars are said to\
    \ collide\n// when a car that's moving left to right hits a car that's moving\
    \ right to left.\n// However, the cars are infinitely sturdy and strong; as a\
    \ result, they continue moving\n// in their trajectory as if they did not collide.\n\
    // This function outputs the number of such collisions.\nfunction car_race_collision($n)\
    \ {\n    $left_to_right = [];\n    $right_to_left = [];\n    for ($i = 0; $i <\
    \ $n; $i++) {\n        $left_to_right[] = $i;\n        $right_to_left[] = $i;\n\
    \    }\n    $collisions = 0;\n    while (count($left_to_right) > 0 && count($right_to_left)\
    \ > 0) {\n        $left_to_right_car = array_shift($left_to_right);\n        $right_to_left_car\
    \ = array_shift($right_to_left);\n        if ($left_to_right_car == $right_to_left_car)\
    \ {\n            $collisions++;\n        }\n    }\n    return $collisions;\n}\n\
    \nfunction candidate(...$args) {\n    return car_race_collision(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(2) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== 9) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4) !== 16) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(8) !== 64) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(10) !== 100) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp09l9illb.php:33\n\
    Stack trace:\n#0 /tmp/tmp09l9illb.php(40): test()\n#1 {main}\n  thrown in /tmp/tmp09l9illb.php\
    \ on line 33\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Imagine a road that's a perfectly straight infinitely long line.\n\
    // n cars are driving left to right;  simultaneously, a different set of n cars\n\
    // are driving right to left.   The two sets of cars start out being very far\
    \ from\n// each other.  All cars move in the same speed.  Two cars are said to\
    \ collide\n// when a car that's moving left to right hits a car that's moving\
    \ right to left.\n// However, the cars are infinitely sturdy and strong; as a\
    \ result, they continue moving\n// in their trajectory as if they did not collide.\n\
    // This function outputs the number of such collisions.\nfunction car_race_collision($n)\
    \ {\n    $collisions = 0;\n    $left_to_right = array();\n    $right_to_left =\
    \ array();\n    for ($i = 0; $i < $n; $i++) {\n        $left_to_right[] = $i;\n\
    \        $right_to_left[] = $i;\n    }\n    while (count($left_to_right) > 0 &&\
    \ count($right_to_left) > 0) {\n        $left_car = array_shift($left_to_right);\n\
    \        $right_car = array_shift($right_to_left);\n        if ($left_car == $right_car)\
    \ {\n            $collisions++;\n        } else {\n            $left_to_right[]\
    \ = $left_car;\n            $right_to_left[] = $right_car;\n        }\n    }\n\
    \    return $collisions;\n}\n\nfunction candidate(...$args) {\n    return car_race_collision(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== 9) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4) !== 16) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(8) !== 64) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(10) !== 100) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpaolwr7_z.php:36\n\
    Stack trace:\n#0 /tmp/tmpaolwr7_z.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpaolwr7_z.php\
    \ on line 36\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Imagine a road that's a perfectly straight infinitely long line.\n\
    // n cars are driving left to right;  simultaneously, a different set of n cars\n\
    // are driving right to left.   The two sets of cars start out being very far\
    \ from\n// each other.  All cars move in the same speed.  Two cars are said to\
    \ collide\n// when a car that's moving left to right hits a car that's moving\
    \ right to left.\n// However, the cars are infinitely sturdy and strong; as a\
    \ result, they continue moving\n// in their trajectory as if they did not collide.\n\
    // This function outputs the number of such collisions.\nfunction car_race_collision($n)\
    \ {\n    $collisions = 0;\n    $left_to_right = array();\n    $right_to_left =\
    \ array();\n    for ($i = 0; $i < $n; $i++) {\n        $left_to_right[] = $i;\n\
    \        $right_to_left[] = $i;\n    }\n    while (count($left_to_right) > 0 &&\
    \ count($right_to_left) > 0) {\n        $left_car = array_shift($left_to_right);\n\
    \        $right_car = array_shift($right_to_left);\n        if ($left_car == $right_car)\
    \ {\n            $collisions++;\n        } else {\n            $left_to_right[]\
    \ = $left_car;\n            $right_to_left[] = $right_car;\n        }\n    }\n\
    \    return $collisions;\n}\n\nfunction candidate(...$args) {\n    return car_race_collision(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== 9) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4) !== 16) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(8) !== 64) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(10) !== 100) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpn_n7_rma.php:36\n\
    Stack trace:\n#0 /tmp/tmpn_n7_rma.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpn_n7_rma.php\
    \ on line 36\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Imagine a road that's a perfectly straight infinitely long line.\n\
    // n cars are driving left to right;  simultaneously, a different set of n cars\n\
    // are driving right to left.   The two sets of cars start out being very far\
    \ from\n// each other.  All cars move in the same speed.  Two cars are said to\
    \ collide\n// when a car that's moving left to right hits a car that's moving\
    \ right to left.\n// However, the cars are infinitely sturdy and strong; as a\
    \ result, they continue moving\n// in their trajectory as if they did not collide.\n\
    // This function outputs the number of such collisions.\nfunction car_race_collision($n)\
    \ {\n    $collisions = 0;\n    $left_to_right = range(1, $n);\n    $right_to_left\
    \ = range($n, 1);\n    for ($i = 0; $i < $n; $i++) {\n        for ($j = 0; $j\
    \ < $n; $j++) {\n            if ($left_to_right[$i] == $right_to_left[$j]) {\n\
    \                $collisions++;\n            }\n        }\n    }\n    return $collisions;\n\
    }\n\nfunction candidate(...$args) {\n    return car_race_collision(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== 9) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4) !== 16) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(8) !== 64) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(10) !== 100) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpbyufw8xa.php:29\n\
    Stack trace:\n#0 /tmp/tmpbyufw8xa.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpbyufw8xa.php\
    \ on line 29\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Imagine a road that's a perfectly straight infinitely long line.\n\
    // n cars are driving left to right;  simultaneously, a different set of n cars\n\
    // are driving right to left.   The two sets of cars start out being very far\
    \ from\n// each other.  All cars move in the same speed.  Two cars are said to\
    \ collide\n// when a car that's moving left to right hits a car that's moving\
    \ right to left.\n// However, the cars are infinitely sturdy and strong; as a\
    \ result, they continue moving\n// in their trajectory as if they did not collide.\n\
    // This function outputs the number of such collisions.\nfunction car_race_collision($n)\
    \ {\n    $collisions = 0;\n    $left_to_right = range(1, $n);\n    $right_to_left\
    \ = range($n, 1);\n    foreach ($left_to_right as $left) {\n        foreach ($right_to_left\
    \ as $right) {\n            if ($left == $right) {\n                $collisions++;\n\
    \            }\n        }\n    }\n    return $collisions;\n}\n\nfunction candidate(...$args)\
    \ {\n    return car_race_collision(...$args);\n}\n\nfunction test(): void {\n\
    \    if (candidate(2) !== 4) { throw new Exception(\"Test failed!\"); }\n    if\
    \ (candidate(3) !== 9) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4)\
    \ !== 16) { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !==\
    \ 64) { throw new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 100)\
    \ { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpbg3d_dy4.php:29\n\
    Stack trace:\n#0 /tmp/tmpbg3d_dy4.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpbg3d_dy4.php\
    \ on line 29\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Imagine a road that's a perfectly straight infinitely long line.\n\
    // n cars are driving left to right;  simultaneously, a different set of n cars\n\
    // are driving right to left.   The two sets of cars start out being very far\
    \ from\n// each other.  All cars move in the same speed.  Two cars are said to\
    \ collide\n// when a car that's moving left to right hits a car that's moving\
    \ right to left.\n// However, the cars are infinitely sturdy and strong; as a\
    \ result, they continue moving\n// in their trajectory as if they did not collide.\n\
    // This function outputs the number of such collisions.\nfunction car_race_collision($n)\
    \ {\n    $collisions = 0;\n    $left_to_right = array();\n    $right_to_left =\
    \ array();\n    for ($i = 0; $i < $n; $i++) {\n        $left_to_right[] = $i;\n\
    \        $right_to_left[] = $i;\n    }\n    while (count($left_to_right) > 0 &&\
    \ count($right_to_left) > 0) {\n        $left_to_right_car = array_shift($left_to_right);\n\
    \        $right_to_left_car = array_shift($right_to_left);\n        if ($left_to_right_car\
    \ == $right_to_left_car) {\n            $collisions++;\n        }\n    }\n   \
    \ return $collisions;\n}\n\nfunction candidate(...$args) {\n    return car_race_collision(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== 9) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4) !== 16) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(8) !== 64) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(10) !== 100) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpg3r_9ce2.php:33\n\
    Stack trace:\n#0 /tmp/tmpg3r_9ce2.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpg3r_9ce2.php\
    \ on line 33\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Imagine a road that's a perfectly straight infinitely long line.\n\
    // n cars are driving left to right;  simultaneously, a different set of n cars\n\
    // are driving right to left.   The two sets of cars start out being very far\
    \ from\n// each other.  All cars move in the same speed.  Two cars are said to\
    \ collide\n// when a car that's moving left to right hits a car that's moving\
    \ right to left.\n// However, the cars are infinitely sturdy and strong; as a\
    \ result, they continue moving\n// in their trajectory as if they did not collide.\n\
    // This function outputs the number of such collisions.\nfunction car_race_collision($n)\
    \ {\n    $collisions = 0;\n    $left_to_right = range(1, $n);\n    $right_to_left\
    \ = range($n, 1);\n    for ($i = 0; $i < $n; $i++) {\n        for ($j = 0; $j\
    \ < $n; $j++) {\n            if ($left_to_right[$i] == $right_to_left[$j]) {\n\
    \                $collisions++;\n            }\n        }\n    }\n    return $collisions;\n\
    }\n\nfunction candidate(...$args) {\n    return car_race_collision(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== 9) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4) !== 16) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(8) !== 64) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(10) !== 100) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp4f8zi0i_.php:29\n\
    Stack trace:\n#0 /tmp/tmp4f8zi0i_.php(36): test()\n#1 {main}\n  thrown in /tmp/tmp4f8zi0i_.php\
    \ on line 29\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Imagine a road that's a perfectly straight infinitely long line.\n\
    // n cars are driving left to right;  simultaneously, a different set of n cars\n\
    // are driving right to left.   The two sets of cars start out being very far\
    \ from\n// each other.  All cars move in the same speed.  Two cars are said to\
    \ collide\n// when a car that's moving left to right hits a car that's moving\
    \ right to left.\n// However, the cars are infinitely sturdy and strong; as a\
    \ result, they continue moving\n// in their trajectory as if they did not collide.\n\
    // This function outputs the number of such collisions.\nfunction car_race_collision($n)\
    \ {\n    $collisions = 0;\n    for ($i = 0; $i < $n; $i++) {\n        for ($j\
    \ = 0; $j < $n; $j++) {\n            $collisions++;\n        }\n    }\n    return\
    \ $collisions;\n}\n\nfunction candidate(...$args) {\n    return car_race_collision(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== 9) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4) !== 16) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(8) !== 64) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(10) !== 100) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Imagine a road that's a perfectly straight infinitely long line.\n\
    // n cars are driving left to right;  simultaneously, a different set of n cars\n\
    // are driving right to left.   The two sets of cars start out being very far\
    \ from\n// each other.  All cars move in the same speed.  Two cars are said to\
    \ collide\n// when a car that's moving left to right hits a car that's moving\
    \ right to left.\n// However, the cars are infinitely sturdy and strong; as a\
    \ result, they continue moving\n// in their trajectory as if they did not collide.\n\
    // This function outputs the number of such collisions.\nfunction car_race_collision($n)\
    \ {\n    $collisions = 0;\n    $left_to_right = [];\n    $right_to_left = [];\n\
    \    for ($i = 0; $i < $n; $i++) {\n        $left_to_right[] = $i;\n        $right_to_left[]\
    \ = $n - $i - 1;\n    }\n    for ($i = 0; $i < $n; $i++) {\n        for ($j =\
    \ 0; $j < $n; $j++) {\n            if ($left_to_right[$i] == $right_to_left[$j])\
    \ {\n                $collisions++;\n            }\n        }\n    }\n    return\
    \ $collisions;\n}\n\nfunction candidate(...$args) {\n    return car_race_collision(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== 9) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4) !== 16) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(8) !== 64) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(10) !== 100) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp4u770jle.php:33\n\
    Stack trace:\n#0 /tmp/tmp4u770jle.php(40): test()\n#1 {main}\n  thrown in /tmp/tmp4u770jle.php\
    \ on line 33\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Imagine a road that's a perfectly straight infinitely long line.\n\
    // n cars are driving left to right;  simultaneously, a different set of n cars\n\
    // are driving right to left.   The two sets of cars start out being very far\
    \ from\n// each other.  All cars move in the same speed.  Two cars are said to\
    \ collide\n// when a car that's moving left to right hits a car that's moving\
    \ right to left.\n// However, the cars are infinitely sturdy and strong; as a\
    \ result, they continue moving\n// in their trajectory as if they did not collide.\n\
    // This function outputs the number of such collisions.\nfunction car_race_collision($n)\
    \ {\n    $left_to_right = range(1, $n);\n    $right_to_left = range($n, 1);\n\
    \    $collisions = 0;\n    $i = 0;\n    $j = 0;\n    while ($i < $n && $j < $n)\
    \ {\n        if ($left_to_right[$i] < $right_to_left[$j]) {\n            $i++;\n\
    \        } else {\n            $collisions += $i;\n            $j++;\n       \
    \ }\n    }\n    return $collisions;\n}\n\nfunction candidate(...$args) {\n   \
    \ return car_race_collision(...$args);\n}\n\nfunction test(): void {\n    if (candidate(2)\
    \ !== 4) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3) !==\
    \ 9) { throw new Exception(\"Test failed!\"); }\n    if (candidate(4) !== 16)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(8) !== 64) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(10) !== 100) { throw new\
    \ Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmph8k2x8us.php:32\n\
    Stack trace:\n#0 /tmp/tmph8k2x8us.php(39): test()\n#1 {main}\n  thrown in /tmp/tmph8k2x8us.php\
    \ on line 32\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Imagine a road that's a perfectly straight infinitely long line.\n\
    // n cars are driving left to right;  simultaneously, a different set of n cars\n\
    // are driving right to left.   The two sets of cars start out being very far\
    \ from\n// each other.  All cars move in the same speed.  Two cars are said to\
    \ collide\n// when a car that's moving left to right hits a car that's moving\
    \ right to left.\n// However, the cars are infinitely sturdy and strong; as a\
    \ result, they continue moving\n// in their trajectory as if they did not collide.\n\
    // This function outputs the number of such collisions.\nfunction car_race_collision($n)\
    \ {\n    $collisions = 0;\n    for ($i = 0; $i < $n; $i++) {\n        for ($j\
    \ = 0; $j < $n; $j++) {\n            $collisions++;\n        }\n    }\n    return\
    \ $collisions;\n}\n\nfunction candidate(...$args) {\n    return car_race_collision(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== 9) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4) !== 16) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(8) !== 64) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(10) !== 100) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Imagine a road that's a perfectly straight infinitely long line.\n\
    // n cars are driving left to right;  simultaneously, a different set of n cars\n\
    // are driving right to left.   The two sets of cars start out being very far\
    \ from\n// each other.  All cars move in the same speed.  Two cars are said to\
    \ collide\n// when a car that's moving left to right hits a car that's moving\
    \ right to left.\n// However, the cars are infinitely sturdy and strong; as a\
    \ result, they continue moving\n// in their trajectory as if they did not collide.\n\
    // This function outputs the number of such collisions.\nfunction car_race_collision($n)\
    \ {\n    $collisions = 0;\n    $left_to_right = range(1, $n);\n    $right_to_left\
    \ = range($n, 1);\n    for ($i = 0; $i < $n; $i++) {\n        for ($j = 0; $j\
    \ < $n; $j++) {\n            if ($left_to_right[$i] == $right_to_left[$j]) {\n\
    \                $collisions++;\n            }\n        }\n    }\n    return $collisions;\n\
    }\n\nfunction candidate(...$args) {\n    return car_race_collision(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(2) !== 4) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3) !== 9) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(4) !== 16) { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(8) !== 64) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(10) !== 100) { throw new Exception(\"Test failed!\"); }\n}\n\n\
    test();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp2ewjim4u.php:29\n\
    Stack trace:\n#0 /tmp/tmp2ewjim4u.php(36): test()\n#1 {main}\n  thrown in /tmp/tmp2ewjim4u.php\
    \ on line 29\n"
  exit_code: 255
  status: Exception

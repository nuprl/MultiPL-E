name: HumanEval_133_sum_squares
language: php
results:
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \  $result = 0;\n  foreach ($lst as $value) {\n    $result += ceil($value) **\
    \ 2;\n  }\n  return $result;\n}\n\nfunction candidate(...$args) {\n    return\
    \ sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp0u06kcs8.php:24\n\
    Stack trace:\n#0 /tmp/tmp0u06kcs8.php(38): test()\n#1 {main}\n  thrown in /tmp/tmp0u06kcs8.php\
    \ on line 24\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \  $result = 0;\n  foreach ($lst as $value) {\n    $result += ceil($value) * ceil($value);\n\
    \  }\n  return $result;\n}\n\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp83f2jwbm.php:24\n\
    Stack trace:\n#0 /tmp/tmp83f2jwbm.php(38): test()\n#1 {main}\n  thrown in /tmp/tmp83f2jwbm.php\
    \ on line 24\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \  $sum = 0;\n  foreach ($lst as $value) {\n    $sum += ceil($value) ** 2;\n \
    \ }\n  return $sum;\n}\necho sum_squares([1,2,3]);\necho \"<br>\";\necho sum_squares([1,4,9]);\n\
    echo \"<br>\";\necho sum_squares([1,3,5,7]);\necho \"<br>\";\necho sum_squares([1.4,4.2,0]);\n\
    echo \"<br>\";\necho sum_squares([-2.4,1,1]);\nfunction candidate(...$args) {\n\
    \    return sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: 14<br>98<br>84<br>29<br>6
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpobq3vbr3.php:32\n\
    Stack trace:\n#0 /tmp/tmpobq3vbr3.php(46): test()\n#1 {main}\n  thrown in /tmp/tmpobq3vbr3.php\
    \ on line 32\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \  $sum = 0;\n  foreach ($lst as $value) {\n    $sum += ceil($value) ** 2;\n \
    \ }\n  return $sum;\n}\n\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp_5ki9_z6.php:24\n\
    Stack trace:\n#0 /tmp/tmp_5ki9_z6.php(38): test()\n#1 {main}\n  thrown in /tmp/tmp_5ki9_z6.php\
    \ on line 24\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \  $sum = 0;\n  foreach ($lst as $value) {\n    $sum += ceil($value) ** 2;\n \
    \ }\n  return $sum;\n}\n\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp_t0o9xct.php:24\n\
    Stack trace:\n#0 /tmp/tmp_t0o9xct.php(38): test()\n#1 {main}\n  thrown in /tmp/tmp_t0o9xct.php\
    \ on line 24\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \  $sum = 0;\n  foreach ($lst as $num) {\n    $sum += ceil($num) ** 2;\n  }\n\
    \  return $sum;\n}\n\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpa_w0qfy_.php:24\n\
    Stack trace:\n#0 /tmp/tmpa_w0qfy_.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpa_w0qfy_.php\
    \ on line 24\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \  $sum = 0;\n  foreach ($lst as $value) {\n    $sum += ceil($value) ** 2;\n \
    \ }\n  return $sum;\n}\n\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp7vm8dait.php:24\n\
    Stack trace:\n#0 /tmp/tmp7vm8dait.php(38): test()\n#1 {main}\n  thrown in /tmp/tmp7vm8dait.php\
    \ on line 24\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \  $sum = 0;\n  foreach ($lst as $value) {\n    $sum += ceil($value) ** 2;\n \
    \ }\n  return $sum;\n}\n\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp8nofs8w3.php:24\n\
    Stack trace:\n#0 /tmp/tmp8nofs8w3.php(38): test()\n#1 {main}\n  thrown in /tmp/tmp8nofs8w3.php\
    \ on line 24\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \  $sum = 0;\n  foreach ($lst as $value) {\n    $sum += ceil($value) ** 2;\n \
    \ }\n  return $sum;\n}\n\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp78ichcr5.php:24\n\
    Stack trace:\n#0 /tmp/tmp78ichcr5.php(38): test()\n#1 {main}\n  thrown in /tmp/tmp78ichcr5.php\
    \ on line 24\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \  $sum = 0;\n  foreach ($lst as $value) {\n    $sum += ceil($value) ** 2;\n \
    \ }\n  return $sum;\n}\necho sum_squares([1,2,3]);\necho \"\\n\";\necho sum_squares([1,4,9]);\n\
    echo \"\\n\";\necho sum_squares([1,3,5,7]);\necho \"\\n\";\necho sum_squares([1.4,4.2,0]);\n\
    echo \"\\n\";\necho sum_squares([-2.4,1,1]);\necho \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "14\n98\n84\n29\n6\n"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpwgdg4zz4.php:33\n\
    Stack trace:\n#0 /tmp/tmpwgdg4zz4.php(47): test()\n#1 {main}\n  thrown in /tmp/tmpwgdg4zz4.php\
    \ on line 33\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \  $sum = 0;\n  foreach ($lst as $num) {\n    $sum += ceil($num) ** 2;\n  }\n\
    \  return $sum;\n}\n\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp4_to6fez.php:24\n\
    Stack trace:\n#0 /tmp/tmp4_to6fez.php(38): test()\n#1 {main}\n  thrown in /tmp/tmp4_to6fez.php\
    \ on line 24\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \  $sum = 0;\n  foreach ($lst as $value) {\n    $sum += ceil($value) * ceil($value);\n\
    \  }\n  return $sum;\n}\n\necho sum_squares([1,2,3]);\necho \"<br>\";\necho sum_squares([1,4,9]);\n\
    echo \"<br>\";\necho sum_squares([1,3,5,7]);\necho \"<br>\";\necho sum_squares([1.4,4.2,0]);\n\
    echo \"<br>\";\necho sum_squares([-2.4,1,1]);\nfunction candidate(...$args) {\n\
    \    return sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: 14<br>98<br>84<br>29<br>6
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpobik212c.php:33\n\
    Stack trace:\n#0 /tmp/tmpobik212c.php(47): test()\n#1 {main}\n  thrown in /tmp/tmpobik212c.php\
    \ on line 33\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \  $sum = 0;\n  foreach ($lst as $number) {\n    $sum += ceil($number) ** 2;\n\
    \  }\n  return $sum;\n}\necho sum_squares([1,2,3]) . \"\\n\";\necho sum_squares([1,4,9])\
    \ . \"\\n\";\necho sum_squares([1,3,5,7]) . \"\\n\";\necho sum_squares([1.4,4.2,0])\
    \ . \"\\n\";\necho sum_squares([-2.4,1,1]) . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "14\n98\n84\n29\n6\n"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpj_wc4ybo.php:28\n\
    Stack trace:\n#0 /tmp/tmpj_wc4ybo.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpj_wc4ybo.php\
    \ on line 28\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \  $sum = 0;\n  foreach ($lst as $value) {\n    $sum += ceil($value) ** 2;\n \
    \ }\n  return $sum;\n}\n\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpv6r7z8vo.php:24\n\
    Stack trace:\n#0 /tmp/tmpv6r7z8vo.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpv6r7z8vo.php\
    \ on line 24\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \  $sum = 0;\n  foreach ($lst as $num) {\n    $sum += ceil($num) ** 2;\n  }\n\
    \  return $sum;\n}\n\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpb5_5u0hz.php:24\n\
    Stack trace:\n#0 /tmp/tmpb5_5u0hz.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpb5_5u0hz.php\
    \ on line 24\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \  $sum = 0;\n  foreach ($lst as $value) {\n    $sum += ceil($value) ** 2;\n \
    \ }\n  return $sum;\n}\n\necho sum_squares([1,2,3]) . \"\\n\";\necho sum_squares([1,4,9])\
    \ . \"\\n\";\necho sum_squares([1,3,5,7]) . \"\\n\";\necho sum_squares([1.4,4.2,0])\
    \ . \"\\n\";\necho sum_squares([-2.4,1,1]) . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "14\n98\n84\n29\n6\n"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpsd4i63em.php:29\n\
    Stack trace:\n#0 /tmp/tmpsd4i63em.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpsd4i63em.php\
    \ on line 29\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \  $sum = 0;\n  foreach ($lst as $value) {\n    $sum += ceil($value) * ceil($value);\n\
    \  }\n  return $sum;\n}\necho sum_squares([1,2,3]);\necho \"<br>\";\necho sum_squares([1,4,9]);\n\
    echo \"<br>\";\necho sum_squares([1,3,5,7]);\necho \"<br>\";\necho sum_squares([1.4,4.2,0]);\n\
    echo \"<br>\";\necho sum_squares([-2.4,1,1]);\necho \"<br>\";\nfunction candidate(...$args)\
    \ {\n    return sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: 14<br>98<br>84<br>29<br>6<br>
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpisundd3z.php:33\n\
    Stack trace:\n#0 /tmp/tmpisundd3z.php(47): test()\n#1 {main}\n  thrown in /tmp/tmpisundd3z.php\
    \ on line 33\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \  $sum = 0;\n  foreach ($lst as $num) {\n    $sum += ceil($num) ** 2;\n  }\n\
    \  return $sum;\n}\necho sum_squares([1,2,3]);\necho \"<br>\";\necho sum_squares([1,4,9]);\n\
    echo \"<br>\";\necho sum_squares([1,3,5,7]);\necho \"<br>\";\necho sum_squares([1.4,4.2,0]);\n\
    echo \"<br>\";\necho sum_squares([-2.4,1,1]);\necho \"<br>\";\nfunction candidate(...$args)\
    \ {\n    return sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: 14<br>98<br>84<br>29<br>6<br>
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpc88ipz_5.php:33\n\
    Stack trace:\n#0 /tmp/tmpc88ipz_5.php(47): test()\n#1 {main}\n  thrown in /tmp/tmpc88ipz_5.php\
    \ on line 33\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \  $sum = 0;\n  foreach ($lst as $value) {\n    $sum += ceil($value) ** 2;\n \
    \ }\n  return $sum;\n}\n\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpm_u39y4f.php:24\n\
    Stack trace:\n#0 /tmp/tmpm_u39y4f.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpm_u39y4f.php\
    \ on line 24\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \  $sum = 0;\n  foreach ($lst as $value) {\n    $sum += ceil($value) ** 2;\n \
    \ }\n  return $sum;\n}\n\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpqaqnxnuy.php:24\n\
    Stack trace:\n#0 /tmp/tmpqaqnxnuy.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpqaqnxnuy.php\
    \ on line 24\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \  $sum = 0;\n  foreach ($lst as $value) {\n    $sum += ceil($value) ** 2;\n \
    \ }\n  return $sum;\n}\n\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmprnlf1vbx.php:24\n\
    Stack trace:\n#0 /tmp/tmprnlf1vbx.php(38): test()\n#1 {main}\n  thrown in /tmp/tmprnlf1vbx.php\
    \ on line 24\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \  $sum = 0;\n  foreach ($lst as $value) {\n    $sum += ceil($value) ** 2;\n \
    \ }\n  return $sum;\n}\n\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp36n743wq.php:24\n\
    Stack trace:\n#0 /tmp/tmp36n743wq.php(38): test()\n#1 {main}\n  thrown in /tmp/tmp36n743wq.php\
    \ on line 24\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \  $sum = 0;\n  foreach ($lst as $num) {\n    $sum += ceil($num) ** 2;\n  }\n\
    \  return $sum;\n}\n\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpumj8g76v.php:24\n\
    Stack trace:\n#0 /tmp/tmpumj8g76v.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpumj8g76v.php\
    \ on line 24\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \  $sum = 0;\n  foreach ($lst as $value) {\n    $sum += ceil($value) ** 2;\n \
    \ }\n  return $sum;\n}\necho sum_squares([1,2,3]);\necho \"<br>\";\necho sum_squares([1,4,9]);\n\
    echo \"<br>\";\necho sum_squares([1,3,5,7]);\necho \"<br>\";\necho sum_squares([1.4,4.2,0]);\n\
    echo \"<br>\";\necho sum_squares([-2.4,1,1]);\nfunction candidate(...$args) {\n\
    \    return sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: 14<br>98<br>84<br>29<br>6
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpe86a2hj9.php:32\n\
    Stack trace:\n#0 /tmp/tmpe86a2hj9.php(46): test()\n#1 {main}\n  thrown in /tmp/tmpe86a2hj9.php\
    \ on line 32\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \  $sum = 0;\n  foreach ($lst as $value) {\n    $sum += ceil($value) ** 2;\n \
    \ }\n  return $sum;\n}\n\necho sum_squares([1,2,3]);\necho \"<br>\";\necho sum_squares([1,4,9]);\n\
    echo \"<br>\";\necho sum_squares([1,3,5,7]);\necho \"<br>\";\necho sum_squares([1.4,4.2,0]);\n\
    echo \"<br>\";\necho sum_squares([-2.4,1,1]);\nfunction candidate(...$args) {\n\
    \    return sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: 14<br>98<br>84<br>29<br>6
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp43wa6k_m.php:33\n\
    Stack trace:\n#0 /tmp/tmp43wa6k_m.php(47): test()\n#1 {main}\n  thrown in /tmp/tmp43wa6k_m.php\
    \ on line 33\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \  $sum = 0;\n  for ($i = 0; $i < count($lst); $i++) {\n    $sum += ceil($lst[$i])\
    \ ** 2;\n  }\n  return $sum;\n}\necho sum_squares([1,2,3]) . \"\\n\";\necho sum_squares([1,4,9])\
    \ . \"\\n\";\necho sum_squares([1,3,5,7]) . \"\\n\";\necho sum_squares([1.4,4.2,0])\
    \ . \"\\n\";\necho sum_squares([-2.4,1,1]) . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "14\n98\n84\n29\n6\n"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmptfsmzpwm.php:28\n\
    Stack trace:\n#0 /tmp/tmptfsmzpwm.php(42): test()\n#1 {main}\n  thrown in /tmp/tmptfsmzpwm.php\
    \ on line 28\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \  $sum = 0;\n  foreach ($lst as $value) {\n    $sum += ceil($value) ** 2;\n \
    \ }\n  return $sum;\n}\n\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpuzlbxwft.php:24\n\
    Stack trace:\n#0 /tmp/tmpuzlbxwft.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpuzlbxwft.php\
    \ on line 24\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \  $sum = 0;\n  foreach ($lst as $num) {\n    $sum += ceil($num) ** 2;\n  }\n\
    \  return $sum;\n}\n\necho sum_squares([1,2,3]) . \"\\n\";\necho sum_squares([1,4,9])\
    \ . \"\\n\";\necho sum_squares([1,3,5,7]) . \"\\n\";\necho sum_squares([1.4,4.2,0])\
    \ . \"\\n\";\necho sum_squares([-2.4,1,1]) . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "14\n98\n84\n29\n6\n"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpf5guvgit.php:29\n\
    Stack trace:\n#0 /tmp/tmpf5guvgit.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpf5guvgit.php\
    \ on line 29\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \  $sum = 0;\n  foreach ($lst as $num) {\n    $sum += ceil($num) ** 2;\n  }\n\
    \  return $sum;\n}\n\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpj2j6pjl5.php:24\n\
    Stack trace:\n#0 /tmp/tmpj2j6pjl5.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpj2j6pjl5.php\
    \ on line 24\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \  $sum = 0;\n  foreach ($lst as $value) {\n    $sum += ceil($value) ** 2;\n \
    \ }\n  return $sum;\n}\n\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp_nchtqxx.php:24\n\
    Stack trace:\n#0 /tmp/tmp_nchtqxx.php(38): test()\n#1 {main}\n  thrown in /tmp/tmp_nchtqxx.php\
    \ on line 24\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \  $sum = 0;\n  foreach ($lst as $num) {\n    $sum += ceil($num) ** 2;\n  }\n\
    \  return $sum;\n}\n\necho sum_squares([1,2,3]);\necho \"\\n\";\necho sum_squares([1,4,9]);\n\
    echo \"\\n\";\necho sum_squares([1,3,5,7]);\necho \"\\n\";\necho sum_squares([1.4,4.2,0]);\n\
    echo \"\\n\";\necho sum_squares([-2.4,1,1]);\necho \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "14\n98\n84\n29\n6\n"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpkvjgfwvs.php:34\n\
    Stack trace:\n#0 /tmp/tmpkvjgfwvs.php(48): test()\n#1 {main}\n  thrown in /tmp/tmpkvjgfwvs.php\
    \ on line 34\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \  $sum = 0;\n  foreach ($lst as $value) {\n    $sum += ceil($value) * ceil($value);\n\
    \  }\n  return $sum;\n}\n\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpk8cvxzff.php:24\n\
    Stack trace:\n#0 /tmp/tmpk8cvxzff.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpk8cvxzff.php\
    \ on line 24\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \  $sum = 0;\n  foreach ($lst as $value) {\n    $sum += ceil($value) ** 2;\n \
    \ }\n  return $sum;\n}\n\necho sum_squares([1, 2, 3]) . \"\\n\";\necho sum_squares([1,\
    \ 4, 9]) . \"\\n\";\necho sum_squares([1, 3, 5, 7]) . \"\\n\";\necho sum_squares([1.4,\
    \ 4.2, 0]) . \"\\n\";\necho sum_squares([-2.4, 1, 1]) . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "14\n98\n84\n29\n6\n"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpgde69t7u.php:29\n\
    Stack trace:\n#0 /tmp/tmpgde69t7u.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpgde69t7u.php\
    \ on line 29\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \  $sum = 0;\n  foreach ($lst as $value) {\n    $sum += ceil($value) ** 2;\n \
    \ }\n  return $sum;\n}\n\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp7019fzg2.php:24\n\
    Stack trace:\n#0 /tmp/tmp7019fzg2.php(38): test()\n#1 {main}\n  thrown in /tmp/tmp7019fzg2.php\
    \ on line 24\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \  $sum = 0;\n  foreach ($lst as $value) {\n    $sum += ceil($value) ** 2;\n \
    \ }\n  return $sum;\n}\n\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpm_0lzr5y.php:24\n\
    Stack trace:\n#0 /tmp/tmpm_0lzr5y.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpm_0lzr5y.php\
    \ on line 24\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \  $sum = 0;\n  foreach ($lst as $num) {\n    $sum += ceil($num) ** 2;\n  }\n\
    \  return $sum;\n}\n\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp5hchtc01.php:24\n\
    Stack trace:\n#0 /tmp/tmp5hchtc01.php(38): test()\n#1 {main}\n  thrown in /tmp/tmp5hchtc01.php\
    \ on line 24\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \  $sum = 0;\n  foreach ($lst as $value) {\n    $sum += ceil($value) ** 2;\n \
    \ }\n  return $sum;\n}\n\necho sum_squares([1,2,3]);\necho \"<br>\";\necho sum_squares([1,4,9]);\n\
    echo \"<br>\";\necho sum_squares([1,3,5,7]);\necho \"<br>\";\necho sum_squares([1.4,4.2,0]);\n\
    echo \"<br>\";\necho sum_squares([-2.4,1,1]);\nfunction candidate(...$args) {\n\
    \    return sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: 14<br>98<br>84<br>29<br>6
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmptxfx42hh.php:33\n\
    Stack trace:\n#0 /tmp/tmptxfx42hh.php(47): test()\n#1 {main}\n  thrown in /tmp/tmptxfx42hh.php\
    \ on line 33\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \  $sum = 0;\n  foreach ($lst as $num) {\n    $sum += ceil($num) ** 2;\n  }\n\
    \  return $sum;\n}\n\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpre50ocr3.php:24\n\
    Stack trace:\n#0 /tmp/tmpre50ocr3.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpre50ocr3.php\
    \ on line 24\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \  $sum = 0;\n  foreach ($lst as $value) {\n    $sum += ceil($value) ** 2;\n \
    \ }\n  return $sum;\n}\n\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp7ms7xbke.php:24\n\
    Stack trace:\n#0 /tmp/tmp7ms7xbke.php(38): test()\n#1 {main}\n  thrown in /tmp/tmp7ms7xbke.php\
    \ on line 24\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \  $sum = 0;\n  foreach ($lst as $value) {\n    $sum += ceil($value) ** 2;\n \
    \ }\n  return $sum;\n}\n\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpl1_iug3d.php:24\n\
    Stack trace:\n#0 /tmp/tmpl1_iug3d.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpl1_iug3d.php\
    \ on line 24\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \  $sum = 0;\n  foreach ($lst as $value) {\n    $sum += ceil($value) ** 2;\n \
    \ }\n  return $sum;\n}\n\necho sum_squares([1,2,3]);\necho \"<br>\";\necho sum_squares([1,4,9]);\n\
    echo \"<br>\";\necho sum_squares([1,3,5,7]);\necho \"<br>\";\necho sum_squares([1.4,4.2,0]);\n\
    echo \"<br>\";\necho sum_squares([-2.4,1,1]);\necho \"<br>\";\nfunction candidate(...$args)\
    \ {\n    return sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: 14<br>98<br>84<br>29<br>6<br>
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpzpr8xi4v.php:34\n\
    Stack trace:\n#0 /tmp/tmpzpr8xi4v.php(48): test()\n#1 {main}\n  thrown in /tmp/tmpzpr8xi4v.php\
    \ on line 34\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \  $sum = 0;\n  foreach ($lst as $num) {\n    $sum += ceil($num) ** 2;\n  }\n\
    \  return $sum;\n}\necho sum_squares([1,2,3]) . \"\\n\";\necho sum_squares([1,4,9])\
    \ . \"\\n\";\necho sum_squares([1,3,5,7]) . \"\\n\";\necho sum_squares([1.4,4.2,0])\
    \ . \"\\n\";\necho sum_squares([-2.4,1,1]) . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "14\n98\n84\n29\n6\n"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmplpucwliz.php:28\n\
    Stack trace:\n#0 /tmp/tmplpucwliz.php(42): test()\n#1 {main}\n  thrown in /tmp/tmplpucwliz.php\
    \ on line 28\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \  $sum = 0;\n  foreach ($lst as $num) {\n    $sum += ceil($num) ** 2;\n  }\n\
    \  return $sum;\n}\necho sum_squares([1,2,3]) . \"\\n\";\necho sum_squares([1,4,9])\
    \ . \"\\n\";\necho sum_squares([1,3,5,7]) . \"\\n\";\necho sum_squares([1.4,4.2,0])\
    \ . \"\\n\";\necho sum_squares([-2.4,1,1]) . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "14\n98\n84\n29\n6\n"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpvlailrl7.php:28\n\
    Stack trace:\n#0 /tmp/tmpvlailrl7.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpvlailrl7.php\
    \ on line 28\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \  $sum = 0;\n  foreach ($lst as $value) {\n    $sum += ceil($value) ** 2;\n \
    \ }\n  return $sum;\n}\n\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpm6cedpls.php:24\n\
    Stack trace:\n#0 /tmp/tmpm6cedpls.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpm6cedpls.php\
    \ on line 24\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \  $sum = 0;\n  foreach ($lst as $value) {\n    $sum += ceil($value) ** 2;\n \
    \ }\n  return $sum;\n}\n\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp8bl1t5pl.php:24\n\
    Stack trace:\n#0 /tmp/tmp8bl1t5pl.php(38): test()\n#1 {main}\n  thrown in /tmp/tmp8bl1t5pl.php\
    \ on line 24\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \  $sum = 0;\n  foreach ($lst as $num) {\n    $sum += ceil($num) ** 2;\n  }\n\
    \  return $sum;\n}\n\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpu5gy91ct.php:24\n\
    Stack trace:\n#0 /tmp/tmpu5gy91ct.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpu5gy91ct.php\
    \ on line 24\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \  $result = 0;\n  foreach ($lst as $value) {\n    $result += ceil($value) **\
    \ 2;\n  }\n  return $result;\n}\n\necho sum_squares([1,2,3]) . \"\\n\";\necho\
    \ sum_squares([1,4,9]) . \"\\n\";\necho sum_squares([1,3,5,7]) . \"\\n\";\necho\
    \ sum_squares([1.4,4.2,0]) . \"\\n\";\necho sum_squares([-2.4,1,1]) . \"\\n\"\
    ;\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0)) !==\
    \ 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "14\n98\n84\n29\n6\n"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpwnpyg90e.php:29\n\
    Stack trace:\n#0 /tmp/tmpwnpyg90e.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpwnpyg90e.php\
    \ on line 29\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \  $sum = 0;\n  foreach ($lst as $value) {\n    $sum += ceil($value) ** 2;\n \
    \ }\n  return $sum;\n}\n\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpz6ml0agu.php:24\n\
    Stack trace:\n#0 /tmp/tmpz6ml0agu.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpz6ml0agu.php\
    \ on line 24\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \  $sum = 0;\n  foreach ($lst as $value) {\n    $sum += ceil($value) ** 2;\n \
    \ }\n  return $sum;\n}\n\necho sum_squares([1,2,3]);\necho \"<br>\";\necho sum_squares([1,4,9]);\n\
    echo \"<br>\";\necho sum_squares([1,3,5,7]);\necho \"<br>\";\necho sum_squares([1.4,4.2,0]);\n\
    echo \"<br>\";\necho sum_squares([-2.4,1,1]);\nfunction candidate(...$args) {\n\
    \    return sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: 14<br>98<br>84<br>29<br>6
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp724n1fkt.php:33\n\
    Stack trace:\n#0 /tmp/tmp724n1fkt.php(47): test()\n#1 {main}\n  thrown in /tmp/tmp724n1fkt.php\
    \ on line 33\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \  $sum = 0;\n  foreach ($lst as $num) {\n    $sum += ceil($num) ** 2;\n  }\n\
    \  return $sum;\n}\necho sum_squares([1,2,3]);\necho \"<br>\";\necho sum_squares([1,4,9]);\n\
    echo \"<br>\";\necho sum_squares([1,3,5,7]);\necho \"<br>\";\necho sum_squares([1.4,4.2,0]);\n\
    echo \"<br>\";\necho sum_squares([-2.4,1,1]);\nfunction candidate(...$args) {\n\
    \    return sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: 14<br>98<br>84<br>29<br>6
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpmdomzwdr.php:32\n\
    Stack trace:\n#0 /tmp/tmpmdomzwdr.php(46): test()\n#1 {main}\n  thrown in /tmp/tmpmdomzwdr.php\
    \ on line 32\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \  $sum = 0;\n  foreach ($lst as $num) {\n    $sum += ceil($num) ** 2;\n  }\n\
    \  return $sum;\n}\necho sum_squares([1,2,3]) . \"\\n\";\necho sum_squares([1,4,9])\
    \ . \"\\n\";\necho sum_squares([1,3,5,7]) . \"\\n\";\necho sum_squares([1.4,4.2,0])\
    \ . \"\\n\";\necho sum_squares([-2.4,1,1]) . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "14\n98\n84\n29\n6\n"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpn_x8g1bm.php:28\n\
    Stack trace:\n#0 /tmp/tmpn_x8g1bm.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpn_x8g1bm.php\
    \ on line 28\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \  $sum = 0;\n  foreach ($lst as $value) {\n    $sum += ceil($value) ** 2;\n \
    \ }\n  return $sum;\n}\n\necho sum_squares([1,2,3]);\necho \"<br>\";\necho sum_squares([1,4,9]);\n\
    echo \"<br>\";\necho sum_squares([1,3,5,7]);\necho \"<br>\";\necho sum_squares([1.4,4.2,0]);\n\
    echo \"<br>\";\necho sum_squares([-2.4,1,1]);\nfunction candidate(...$args) {\n\
    \    return sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: 14<br>98<br>84<br>29<br>6
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp5aawscgr.php:33\n\
    Stack trace:\n#0 /tmp/tmp5aawscgr.php(47): test()\n#1 {main}\n  thrown in /tmp/tmp5aawscgr.php\
    \ on line 33\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \  $sum = 0;\n  foreach ($lst as $value) {\n    $sum += ceil($value) ** 2;\n \
    \ }\n  return $sum;\n}\n\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpllwj14aq.php:24\n\
    Stack trace:\n#0 /tmp/tmpllwj14aq.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpllwj14aq.php\
    \ on line 24\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \  $sum = 0;\n  foreach ($lst as $num) {\n    $sum += ceil($num) ** 2;\n  }\n\
    \  return $sum;\n}\n\necho sum_squares([1,2,3]);\necho \"\\n\";\necho sum_squares([1,4,9]);\n\
    echo \"\\n\";\necho sum_squares([1,3,5,7]);\necho \"\\n\";\necho sum_squares([1.4,4.2,0]);\n\
    echo \"\\n\";\necho sum_squares([-2.4,1,1]);\necho \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "14\n98\n84\n29\n6\n"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp_y47rsgu.php:34\n\
    Stack trace:\n#0 /tmp/tmp_y47rsgu.php(48): test()\n#1 {main}\n  thrown in /tmp/tmp_y47rsgu.php\
    \ on line 34\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \  $sum = 0;\n  foreach ($lst as $num) {\n    $sum += ceil($num) ** 2;\n  }\n\
    \  return $sum;\n}\n\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmptslwxb0_.php:24\n\
    Stack trace:\n#0 /tmp/tmptslwxb0_.php(38): test()\n#1 {main}\n  thrown in /tmp/tmptslwxb0_.php\
    \ on line 24\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \  $sum = 0;\n  foreach ($lst as $value) {\n    $sum += ceil($value) ** 2;\n \
    \ }\n  return $sum;\n}\n\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp6fohndet.php:24\n\
    Stack trace:\n#0 /tmp/tmp6fohndet.php(38): test()\n#1 {main}\n  thrown in /tmp/tmp6fohndet.php\
    \ on line 24\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \  $result = 0;\n  foreach ($lst as $value) {\n    $result += ceil($value) **\
    \ 2;\n  }\n  return $result;\n}\n\nfunction candidate(...$args) {\n    return\
    \ sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpxurn7jam.php:24\n\
    Stack trace:\n#0 /tmp/tmpxurn7jam.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpxurn7jam.php\
    \ on line 24\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \  $sum = 0;\n  foreach ($lst as $number) {\n    $sum += ceil($number) ** 2;\n\
    \  }\n  return $sum;\n}\n\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpslq90cmt.php:24\n\
    Stack trace:\n#0 /tmp/tmpslq90cmt.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpslq90cmt.php\
    \ on line 24\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \  $sum = 0;\n  foreach ($lst as $num) {\n    $sum += ceil($num) ** 2;\n  }\n\
    \  return $sum;\n}\n\necho sum_squares([1,2,3]);\necho \"<br>\";\necho sum_squares([1,4,9]);\n\
    echo \"<br>\";\necho sum_squares([1,3,5,7]);\necho \"<br>\";\necho sum_squares([1.4,4.2,0]);\n\
    echo \"<br>\";\necho sum_squares([-2.4,1,1]);\necho \"<br>\";\nfunction candidate(...$args)\
    \ {\n    return sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: 14<br>98<br>84<br>29<br>6<br>
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpiureq768.php:34\n\
    Stack trace:\n#0 /tmp/tmpiureq768.php(48): test()\n#1 {main}\n  thrown in /tmp/tmpiureq768.php\
    \ on line 34\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \  $sum = 0;\n  foreach ($lst as $value) {\n    $sum += ceil($value) ** 2;\n \
    \ }\n  return $sum;\n}\necho sum_squares([1,2,3]) . \"\\n\";\necho sum_squares([1,4,9])\
    \ . \"\\n\";\necho sum_squares([1,3,5,7]) . \"\\n\";\necho sum_squares([1.4,4.2,0])\
    \ . \"\\n\";\necho sum_squares([-2.4,1,1]) . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "14\n98\n84\n29\n6\n"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp5fo3c9n5.php:28\n\
    Stack trace:\n#0 /tmp/tmp5fo3c9n5.php(42): test()\n#1 {main}\n  thrown in /tmp/tmp5fo3c9n5.php\
    \ on line 28\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \  $sum = 0;\n  foreach ($lst as $num) {\n    $sum += ceil($num) ** 2;\n  }\n\
    \  return $sum;\n}\necho sum_squares([1,2,3]);\necho \"<br>\";\necho sum_squares([1,4,9]);\n\
    echo \"<br>\";\necho sum_squares([1,3,5,7]);\necho \"<br>\";\necho sum_squares([1.4,4.2,0]);\n\
    echo \"<br>\";\necho sum_squares([-2.4,1,1]);\nfunction candidate(...$args) {\n\
    \    return sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: 14<br>98<br>84<br>29<br>6
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpyz98257t.php:32\n\
    Stack trace:\n#0 /tmp/tmpyz98257t.php(46): test()\n#1 {main}\n  thrown in /tmp/tmpyz98257t.php\
    \ on line 32\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \  $result = 0;\n  foreach ($lst as $value) {\n    $result += ceil($value) **\
    \ 2;\n  }\n  return $result;\n}\n\necho sum_squares([1,2,3]) . \"\\n\";\necho\
    \ sum_squares([1,4,9]) . \"\\n\";\necho sum_squares([1,3,5,7]) . \"\\n\";\necho\
    \ sum_squares([1.4,4.2,0]) . \"\\n\";\necho sum_squares([-2.4,1,1]) . \"\\n\"\
    ;\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0)) !==\
    \ 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "14\n98\n84\n29\n6\n"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpm8b65_on.php:29\n\
    Stack trace:\n#0 /tmp/tmpm8b65_on.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpm8b65_on.php\
    \ on line 29\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \  $sum = 0;\n  foreach ($lst as $num) {\n    $sum += ceil($num) ** 2;\n  }\n\
    \  return $sum;\n}\n\necho sum_squares([1,2,3]);\necho sum_squares([1,4,9]);\n\
    echo sum_squares([1,3,5,7]);\necho sum_squares([1.4,4.2,0]);\necho sum_squares([-2.4,1,1]);\n\
    function candidate(...$args) {\n    return sum_squares(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0)) !==\
    \ 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: '149884296'
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpgh83gn5i.php:29\n\
    Stack trace:\n#0 /tmp/tmpgh83gn5i.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpgh83gn5i.php\
    \ on line 29\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \  $sum = 0;\n  foreach ($lst as $num) {\n    $sum += ceil($num) ** 2;\n  }\n\
    \  return $sum;\n}\n\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp6_5cpl2z.php:24\n\
    Stack trace:\n#0 /tmp/tmp6_5cpl2z.php(38): test()\n#1 {main}\n  thrown in /tmp/tmp6_5cpl2z.php\
    \ on line 24\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \  $sum = 0;\n  foreach ($lst as $value) {\n    $sum += ceil($value) ** 2;\n \
    \ }\n  return $sum;\n}\n\necho sum_squares([1,2,3]) . \"\\n\";\necho sum_squares([1,4,9])\
    \ . \"\\n\";\necho sum_squares([1,3,5,7]) . \"\\n\";\necho sum_squares([1.4,4.2,0])\
    \ . \"\\n\";\necho sum_squares([-2.4,1,1]) . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "14\n98\n84\n29\n6\n"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpia1hnqql.php:29\n\
    Stack trace:\n#0 /tmp/tmpia1hnqql.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpia1hnqql.php\
    \ on line 29\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \  $result = 0;\n  foreach ($lst as $number) {\n    $result += ceil($number) **\
    \ 2;\n  }\n  return $result;\n}\n\necho sum_squares([1,2,3]) . \"\\n\";\necho\
    \ sum_squares([1,4,9]) . \"\\n\";\necho sum_squares([1,3,5,7]) . \"\\n\";\necho\
    \ sum_squares([1.4,4.2,0]) . \"\\n\";\necho sum_squares([-2.4,1,1]) . \"\\n\"\
    ;\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0)) !==\
    \ 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "14\n98\n84\n29\n6\n"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpijrci86s.php:29\n\
    Stack trace:\n#0 /tmp/tmpijrci86s.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpijrci86s.php\
    \ on line 29\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \  $sum = 0;\n  foreach ($lst as $value) {\n    $sum += ceil($value) * ceil($value);\n\
    \  }\n  return $sum;\n}\n\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpo1j4h_6u.php:24\n\
    Stack trace:\n#0 /tmp/tmpo1j4h_6u.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpo1j4h_6u.php\
    \ on line 24\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \  $sum = 0;\n  foreach ($lst as $value) {\n    $sum += ceil($value) ** 2;\n \
    \ }\n  return $sum;\n}\n\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp2laafaj7.php:24\n\
    Stack trace:\n#0 /tmp/tmp2laafaj7.php(38): test()\n#1 {main}\n  thrown in /tmp/tmp2laafaj7.php\
    \ on line 24\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \  $sum = 0;\n  foreach ($lst as $num) {\n    $sum += ceil($num) ** 2;\n  }\n\
    \  return $sum;\n}\n\necho sum_squares([1,2,3]);\necho \"\\n\";\necho sum_squares([1,4,9]);\n\
    echo \"\\n\";\necho sum_squares([1,3,5,7]);\necho \"\\n\";\necho sum_squares([1.4,4.2,0]);\n\
    echo \"\\n\";\necho sum_squares([-2.4,1,1]);\necho \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "14\n98\n84\n29\n6\n"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpiuoa1epq.php:34\n\
    Stack trace:\n#0 /tmp/tmpiuoa1epq.php(48): test()\n#1 {main}\n  thrown in /tmp/tmpiuoa1epq.php\
    \ on line 34\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \  $sum = 0;\n  foreach ($lst as $value) {\n    $sum += ceil($value) ** 2;\n \
    \ }\n  return $sum;\n}\n\necho sum_squares([1,2,3]);\necho sum_squares([1,4,9]);\n\
    echo sum_squares([1,3,5,7]);\necho sum_squares([1.4,4.2,0]);\necho sum_squares([-2.4,1,1]);\n\
    function candidate(...$args) {\n    return sum_squares(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0)) !==\
    \ 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: '149884296'
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpzqjwhnvp.php:29\n\
    Stack trace:\n#0 /tmp/tmpzqjwhnvp.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpzqjwhnvp.php\
    \ on line 29\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \  $sum = 0;\n  foreach ($lst as $num) {\n    $sum += ceil($num) ** 2;\n  }\n\
    \  return $sum;\n}\n\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp8nsf5hgv.php:24\n\
    Stack trace:\n#0 /tmp/tmp8nsf5hgv.php(38): test()\n#1 {main}\n  thrown in /tmp/tmp8nsf5hgv.php\
    \ on line 24\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \  $sum = 0;\n  foreach ($lst as $num) {\n    $sum += ceil($num) * ceil($num);\n\
    \  }\n  return $sum;\n}\necho sum_squares([1,2,3]);\necho \"<br>\";\necho sum_squares([1,4,9]);\n\
    echo \"<br>\";\necho sum_squares([1,3,5,7]);\necho \"<br>\";\necho sum_squares([1.4,4.2,0]);\n\
    echo \"<br>\";\necho sum_squares([-2.4,1,1]);\nfunction candidate(...$args) {\n\
    \    return sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: 14<br>98<br>84<br>29<br>6
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp4vnqj5yt.php:32\n\
    Stack trace:\n#0 /tmp/tmp4vnqj5yt.php(46): test()\n#1 {main}\n  thrown in /tmp/tmp4vnqj5yt.php\
    \ on line 32\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \  $sum = 0;\n  foreach ($lst as $value) {\n    $sum += ceil($value) ** 2;\n \
    \ }\n  return $sum;\n}\necho sum_squares([1,2,3]);\necho \"<br>\";\necho sum_squares([1,4,9]);\n\
    echo \"<br>\";\necho sum_squares([1,3,5,7]);\necho \"<br>\";\necho sum_squares([1.4,4.2,0]);\n\
    echo \"<br>\";\necho sum_squares([-2.4,1,1]);\necho \"<br>\";\nfunction candidate(...$args)\
    \ {\n    return sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: 14<br>98<br>84<br>29<br>6<br>
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpjbn3l7k2.php:33\n\
    Stack trace:\n#0 /tmp/tmpjbn3l7k2.php(47): test()\n#1 {main}\n  thrown in /tmp/tmpjbn3l7k2.php\
    \ on line 33\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \  $sum = 0;\n  foreach ($lst as $num) {\n    $sum += ceil($num) ** 2;\n  }\n\
    \  return $sum;\n}\n\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpu0s_2x3b.php:24\n\
    Stack trace:\n#0 /tmp/tmpu0s_2x3b.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpu0s_2x3b.php\
    \ on line 24\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \  $sum = 0;\n  foreach ($lst as $value) {\n    $sum += ceil($value) ** 2;\n \
    \ }\n  return $sum;\n}\n\necho sum_squares([1,2,3]);\necho \"<br>\";\necho sum_squares([1,4,9]);\n\
    echo \"<br>\";\necho sum_squares([1,3,5,7]);\necho \"<br>\";\necho sum_squares([1.4,4.2,0]);\n\
    echo \"<br>\";\necho sum_squares([-2.4,1,1]);\nfunction candidate(...$args) {\n\
    \    return sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: 14<br>98<br>84<br>29<br>6
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpjf8ovdsq.php:33\n\
    Stack trace:\n#0 /tmp/tmpjf8ovdsq.php(47): test()\n#1 {main}\n  thrown in /tmp/tmpjf8ovdsq.php\
    \ on line 33\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \  $sum = 0;\n  foreach ($lst as $num) {\n    $sum += ceil($num) ** 2;\n  }\n\
    \  return $sum;\n}\n\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmphvv9n6v9.php:24\n\
    Stack trace:\n#0 /tmp/tmphvv9n6v9.php(38): test()\n#1 {main}\n  thrown in /tmp/tmphvv9n6v9.php\
    \ on line 24\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \  $sum = 0;\n  foreach ($lst as $value) {\n    $sum += ceil($value) ** 2;\n \
    \ }\n  return $sum;\n}\n\necho sum_squares([1,2,3]) . \"\\n\";\necho sum_squares([1,4,9])\
    \ . \"\\n\";\necho sum_squares([1,3,5,7]) . \"\\n\";\necho sum_squares([1.4,4.2,0])\
    \ . \"\\n\";\necho sum_squares([-2.4,1,1]) . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "14\n98\n84\n29\n6\n"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpekngmhob.php:29\n\
    Stack trace:\n#0 /tmp/tmpekngmhob.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpekngmhob.php\
    \ on line 29\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \  $sum = 0;\n  foreach ($lst as $num) {\n    $sum += ceil($num) ** 2;\n  }\n\
    \  return $sum;\n}\n\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpy6m6enco.php:24\n\
    Stack trace:\n#0 /tmp/tmpy6m6enco.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpy6m6enco.php\
    \ on line 24\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \  $result = 0;\n  foreach ($lst as $value) {\n    $result += ceil($value) **\
    \ 2;\n  }\n  return $result;\n}\n\necho sum_squares([1,2,3]);\necho \"<br>\";\n\
    echo sum_squares([1,4,9]);\necho \"<br>\";\necho sum_squares([1,3,5,7]);\necho\
    \ \"<br>\";\necho sum_squares([1.4,4.2,0]);\necho \"<br>\";\necho sum_squares([-2.4,1,1]);\n\
    echo \"<br>\";\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: 14<br>98<br>84<br>29<br>6<br>
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpy82k7atc.php:34\n\
    Stack trace:\n#0 /tmp/tmpy82k7atc.php(48): test()\n#1 {main}\n  thrown in /tmp/tmpy82k7atc.php\
    \ on line 34\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \  $sum = 0;\n  foreach ($lst as $value) {\n    $sum += ceil($value) ** 2;\n \
    \ }\n  return $sum;\n}\necho sum_squares([1,2,3]);\necho \"<br>\";\necho sum_squares([1,4,9]);\n\
    echo \"<br>\";\necho sum_squares([1,3,5,7]);\necho \"<br>\";\necho sum_squares([1.4,4.2,0]);\n\
    echo \"<br>\";\necho sum_squares([-2.4,1,1]);\nfunction candidate(...$args) {\n\
    \    return sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: 14<br>98<br>84<br>29<br>6
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp4klz8vb9.php:32\n\
    Stack trace:\n#0 /tmp/tmp4klz8vb9.php(46): test()\n#1 {main}\n  thrown in /tmp/tmp4klz8vb9.php\
    \ on line 32\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \  $sum = 0;\n  foreach ($lst as $value) {\n    $sum += ceil($value) ** 2;\n \
    \ }\n  return $sum;\n}\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpowv3dtcd.php:23\n\
    Stack trace:\n#0 /tmp/tmpowv3dtcd.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpowv3dtcd.php\
    \ on line 23\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \  $result = 0;\n  foreach ($lst as $value) {\n    $result += ceil($value) **\
    \ 2;\n  }\n  return $result;\n}\n\nfunction candidate(...$args) {\n    return\
    \ sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpygnpxo0e.php:24\n\
    Stack trace:\n#0 /tmp/tmpygnpxo0e.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpygnpxo0e.php\
    \ on line 24\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \  $sum = 0;\n  foreach ($lst as $value) {\n    $sum += ceil($value) ** 2;\n \
    \ }\n  return $sum;\n}\n\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpv4iwcibt.php:24\n\
    Stack trace:\n#0 /tmp/tmpv4iwcibt.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpv4iwcibt.php\
    \ on line 24\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \  $sum = 0;\n  foreach ($lst as $value) {\n    $sum += ceil($value) ** 2;\n \
    \ }\n  return $sum;\n}\n\necho sum_squares([1,2,3]);\necho \"<br>\";\necho sum_squares([1,4,9]);\n\
    echo \"<br>\";\necho sum_squares([1,3,5,7]);\necho \"<br>\";\necho sum_squares([1.4,4.2,0]);\n\
    echo \"<br>\";\necho sum_squares([-2.4,1,1]);\nfunction candidate(...$args) {\n\
    \    return sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: 14<br>98<br>84<br>29<br>6
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpemwkeo4z.php:33\n\
    Stack trace:\n#0 /tmp/tmpemwkeo4z.php(47): test()\n#1 {main}\n  thrown in /tmp/tmpemwkeo4z.php\
    \ on line 33\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \  $sum = 0;\n  foreach ($lst as $num) {\n    $sum += ceil($num) ** 2;\n  }\n\
    \  return $sum;\n}\necho sum_squares([1,2,3]) . \"<br>\";\necho sum_squares([1,4,9])\
    \ . \"<br>\";\necho sum_squares([1,3,5,7]) . \"<br>\";\necho sum_squares([1.4,4.2,0])\
    \ . \"<br>\";\necho sum_squares([-2.4,1,1]) . \"<br>\";\nfunction candidate(...$args)\
    \ {\n    return sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: 14<br>98<br>84<br>29<br>6<br>
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpkq188j6o.php:28\n\
    Stack trace:\n#0 /tmp/tmpkq188j6o.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpkq188j6o.php\
    \ on line 28\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \  $sum = 0;\n  foreach ($lst as $value) {\n    $sum += ceil($value) ** 2;\n \
    \ }\n  return $sum;\n}\n\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpip5q9kvc.php:24\n\
    Stack trace:\n#0 /tmp/tmpip5q9kvc.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpip5q9kvc.php\
    \ on line 24\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \  $sum = 0;\n  foreach ($lst as $num) {\n    $sum += ceil($num) ** 2;\n  }\n\
    \  return $sum;\n}\n\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp344r2uka.php:24\n\
    Stack trace:\n#0 /tmp/tmp344r2uka.php(38): test()\n#1 {main}\n  thrown in /tmp/tmp344r2uka.php\
    \ on line 24\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \  $result = 0;\n  foreach ($lst as $value) {\n    $result += ceil($value) **\
    \ 2;\n  }\n  return $result;\n}\n\nfunction candidate(...$args) {\n    return\
    \ sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmphbhvrv3e.php:24\n\
    Stack trace:\n#0 /tmp/tmphbhvrv3e.php(38): test()\n#1 {main}\n  thrown in /tmp/tmphbhvrv3e.php\
    \ on line 24\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \  $sum = 0;\n  foreach ($lst as $value) {\n    $sum += ceil($value) ** 2;\n \
    \ }\n  return $sum;\n}\necho sum_squares([1,2,3]);\necho \"<br>\";\necho sum_squares([1,4,9]);\n\
    echo \"<br>\";\necho sum_squares([1,3,5,7]);\necho \"<br>\";\necho sum_squares([1.4,4.2,0]);\n\
    echo \"<br>\";\necho sum_squares([-2.4,1,1]);\necho \"<br>\";\nfunction candidate(...$args)\
    \ {\n    return sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: 14<br>98<br>84<br>29<br>6<br>
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpzmxm4nh3.php:33\n\
    Stack trace:\n#0 /tmp/tmpzmxm4nh3.php(47): test()\n#1 {main}\n  thrown in /tmp/tmpzmxm4nh3.php\
    \ on line 33\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \  $sum = 0;\n  foreach ($lst as $value) {\n    $sum += ceil($value) ** 2;\n \
    \ }\n  return $sum;\n}\n\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp1ule1xr3.php:24\n\
    Stack trace:\n#0 /tmp/tmp1ule1xr3.php(38): test()\n#1 {main}\n  thrown in /tmp/tmp1ule1xr3.php\
    \ on line 24\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \  $sum = 0;\n  foreach ($lst as $num) {\n    $sum += ceil($num) ** 2;\n  }\n\
    \  return $sum;\n}\n\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpjluyfnor.php:24\n\
    Stack trace:\n#0 /tmp/tmpjluyfnor.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpjluyfnor.php\
    \ on line 24\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \  $sum = 0;\n  foreach ($lst as $num) {\n    $sum += ceil($num) ** 2;\n  }\n\
    \  return $sum;\n}\n\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpzw672cs6.php:24\n\
    Stack trace:\n#0 /tmp/tmpzw672cs6.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpzw672cs6.php\
    \ on line 24\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \  $sum = 0;\n  foreach ($lst as $value) {\n    $sum += ceil($value) ** 2;\n \
    \ }\n  return $sum;\n}\n\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpzl1md37g.php:24\n\
    Stack trace:\n#0 /tmp/tmpzl1md37g.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpzl1md37g.php\
    \ on line 24\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \  $sum = 0;\n  foreach ($lst as $num) {\n    $sum += ceil($num) ** 2;\n  }\n\
    \  return $sum;\n}\n\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpglj9n2ce.php:24\n\
    Stack trace:\n#0 /tmp/tmpglj9n2ce.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpglj9n2ce.php\
    \ on line 24\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \  $sum = 0;\n  foreach ($lst as $value) {\n    $sum += ceil($value) ** 2;\n \
    \ }\n  return $sum;\n}\n\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp7r8yzsco.php:24\n\
    Stack trace:\n#0 /tmp/tmp7r8yzsco.php(38): test()\n#1 {main}\n  thrown in /tmp/tmp7r8yzsco.php\
    \ on line 24\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \  $sum = 0;\n  foreach ($lst as $number) {\n    $sum += ceil($number) ** 2;\n\
    \  }\n  return $sum;\n}\n\necho sum_squares([1,2,3]);\necho sum_squares([1,4,9]);\n\
    echo sum_squares([1,3,5,7]);\necho sum_squares([1.4,4.2,0]);\necho sum_squares([-2.4,1,1]);\n\
    function candidate(...$args) {\n    return sum_squares(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0)) !==\
    \ 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: '149884296'
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp6kaiocbf.php:29\n\
    Stack trace:\n#0 /tmp/tmp6kaiocbf.php(43): test()\n#1 {main}\n  thrown in /tmp/tmp6kaiocbf.php\
    \ on line 29\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \  $sum = 0;\n  foreach ($lst as $value) {\n    $sum += ceil($value) ** 2;\n \
    \ }\n  return $sum;\n}\n\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp9nzen1f3.php:24\n\
    Stack trace:\n#0 /tmp/tmp9nzen1f3.php(38): test()\n#1 {main}\n  thrown in /tmp/tmp9nzen1f3.php\
    \ on line 24\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \  $sum = 0;\n  foreach ($lst as $value) {\n    $sum += ceil($value) ** 2;\n \
    \ }\n  return $sum;\n}\necho sum_squares([1,2,3]);\necho \"<br>\";\necho sum_squares([1,4,9]);\n\
    echo \"<br>\";\necho sum_squares([1,3,5,7]);\necho \"<br>\";\necho sum_squares([1.4,4.2,0]);\n\
    echo \"<br>\";\necho sum_squares([-2.4,1,1]);\necho \"<br>\";\nfunction candidate(...$args)\
    \ {\n    return sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: 14<br>98<br>84<br>29<br>6<br>
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpodqrvwb7.php:33\n\
    Stack trace:\n#0 /tmp/tmpodqrvwb7.php(47): test()\n#1 {main}\n  thrown in /tmp/tmpodqrvwb7.php\
    \ on line 33\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \  $result = 0;\n  foreach ($lst as $value) {\n    $result += ceil($value) **\
    \ 2;\n  }\n  return $result;\n}\necho sum_squares([1,2,3]);\necho \"<br>\";\n\
    echo sum_squares([1,4,9]);\necho \"<br>\";\necho sum_squares([1,3,5,7]);\necho\
    \ \"<br>\";\necho sum_squares([1.4,4.2,0]);\necho \"<br>\";\necho sum_squares([-2.4,1,1]);\n\
    function candidate(...$args) {\n    return sum_squares(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0)) !==\
    \ 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: 14<br>98<br>84<br>29<br>6
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpdjbhqmzu.php:32\n\
    Stack trace:\n#0 /tmp/tmpdjbhqmzu.php(46): test()\n#1 {main}\n  thrown in /tmp/tmpdjbhqmzu.php\
    \ on line 32\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \  $sum = 0;\n  foreach ($lst as $value) {\n    $sum += ceil($value) ** 2;\n \
    \ }\n  return $sum;\n}\n\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpphvtw9sk.php:24\n\
    Stack trace:\n#0 /tmp/tmpphvtw9sk.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpphvtw9sk.php\
    \ on line 24\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \  $sum = 0;\n  foreach ($lst as $number) {\n    $sum += ceil($number) ** 2;\n\
    \  }\n  return $sum;\n}\n\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpsiwwi393.php:24\n\
    Stack trace:\n#0 /tmp/tmpsiwwi393.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpsiwwi393.php\
    \ on line 24\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \  $sum = 0;\n  foreach ($lst as $value) {\n    $sum += ceil($value) ** 2;\n \
    \ }\n  return $sum;\n}\necho sum_squares([1,2,3]);\necho \"<br>\";\necho sum_squares([1,4,9]);\n\
    echo \"<br>\";\necho sum_squares([1,3,5,7]);\necho \"<br>\";\necho sum_squares([1.4,4.2,0]);\n\
    echo \"<br>\";\necho sum_squares([-2.4,1,1]);\nfunction candidate(...$args) {\n\
    \    return sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: 14<br>98<br>84<br>29<br>6
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp278jem4b.php:32\n\
    Stack trace:\n#0 /tmp/tmp278jem4b.php(46): test()\n#1 {main}\n  thrown in /tmp/tmp278jem4b.php\
    \ on line 32\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \  $sum = 0;\n  foreach ($lst as $value) {\n    $sum += ceil($value) ** 2;\n \
    \ }\n  return $sum;\n}\n\necho sum_squares([1,2,3]);\necho \"<br>\";\necho sum_squares([1,4,9]);\n\
    echo \"<br>\";\necho sum_squares([1,3,5,7]);\necho \"<br>\";\necho sum_squares([1.4,4.2,0]);\n\
    echo \"<br>\";\necho sum_squares([-2.4,1,1]);\nfunction candidate(...$args) {\n\
    \    return sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: 14<br>98<br>84<br>29<br>6
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp8ay__i1b.php:33\n\
    Stack trace:\n#0 /tmp/tmp8ay__i1b.php(47): test()\n#1 {main}\n  thrown in /tmp/tmp8ay__i1b.php\
    \ on line 33\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \  $sum = 0;\n  foreach ($lst as $value) {\n    $sum += ceil($value) ** 2;\n \
    \ }\n  return $sum;\n}\n\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp0kf6qk1a.php:24\n\
    Stack trace:\n#0 /tmp/tmp0kf6qk1a.php(38): test()\n#1 {main}\n  thrown in /tmp/tmp0kf6qk1a.php\
    \ on line 24\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \  $sum = 0;\n  foreach ($lst as $value) {\n    $sum += ceil($value) ** 2;\n \
    \ }\n  return $sum;\n}\necho sum_squares([1,2,3]);\necho \"<br>\";\necho sum_squares([1,4,9]);\n\
    echo \"<br>\";\necho sum_squares([1,3,5,7]);\necho \"<br>\";\necho sum_squares([1.4,4.2,0]);\n\
    echo \"<br>\";\necho sum_squares([-2.4,1,1]);\nfunction candidate(...$args) {\n\
    \    return sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: 14<br>98<br>84<br>29<br>6
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp48vi10ez.php:32\n\
    Stack trace:\n#0 /tmp/tmp48vi10ez.php(46): test()\n#1 {main}\n  thrown in /tmp/tmp48vi10ez.php\
    \ on line 32\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \  $sum = 0;\n  foreach ($lst as $key => $value) {\n    $sum += ceil($value) **\
    \ 2;\n  }\n  return $sum;\n}\n\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpr5c5e5j1.php:24\n\
    Stack trace:\n#0 /tmp/tmpr5c5e5j1.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpr5c5e5j1.php\
    \ on line 24\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \  $sum = 0;\n  foreach ($lst as $num) {\n    $sum += ceil($num) ** 2;\n  }\n\
    \  return $sum;\n}\n\necho sum_squares([1,2,3]);\necho \"<br>\";\necho sum_squares([1,4,9]);\n\
    echo \"<br>\";\necho sum_squares([1,3,5,7]);\necho \"<br>\";\necho sum_squares([1.4,4.2,0]);\n\
    echo \"<br>\";\necho sum_squares([-2.4,1,1]);\necho \"<br>\";\nfunction candidate(...$args)\
    \ {\n    return sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: 14<br>98<br>84<br>29<br>6<br>
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpxwgjm3wu.php:34\n\
    Stack trace:\n#0 /tmp/tmpxwgjm3wu.php(48): test()\n#1 {main}\n  thrown in /tmp/tmpxwgjm3wu.php\
    \ on line 34\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \  $sum = 0;\n  foreach ($lst as $value) {\n    $sum += ceil($value) ** 2;\n \
    \ }\n  return $sum;\n}\n\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpzo02hckf.php:24\n\
    Stack trace:\n#0 /tmp/tmpzo02hckf.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpzo02hckf.php\
    \ on line 24\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \  $sum = 0;\n  foreach ($lst as $num) {\n    $sum += ceil($num) ** 2;\n  }\n\
    \  return $sum;\n}\n\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpw4toneft.php:24\n\
    Stack trace:\n#0 /tmp/tmpw4toneft.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpw4toneft.php\
    \ on line 24\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \  $sum = 0;\n  foreach ($lst as $value) {\n    $sum += ceil($value) ** 2;\n \
    \ }\n  return $sum;\n}\n\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp173u08is.php:24\n\
    Stack trace:\n#0 /tmp/tmp173u08is.php(38): test()\n#1 {main}\n  thrown in /tmp/tmp173u08is.php\
    \ on line 24\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \  $sum = 0;\n  for ($i = 0; $i < count($lst); $i++) {\n    $sum += ceil($lst[$i])\
    \ ** 2;\n  }\n  return $sum;\n}\n\necho sum_squares([1,2,3]);\necho \"<br>\";\n\
    echo sum_squares([1,4,9]);\necho \"<br>\";\necho sum_squares([1,3,5,7]);\necho\
    \ \"<br>\";\necho sum_squares([1.4,4.2,0]);\necho \"<br>\";\necho sum_squares([-2.4,1,1]);\n\
    function candidate(...$args) {\n    return sum_squares(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0)) !==\
    \ 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: 14<br>98<br>84<br>29<br>6
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpjpreqdzk.php:33\n\
    Stack trace:\n#0 /tmp/tmpjpreqdzk.php(47): test()\n#1 {main}\n  thrown in /tmp/tmpjpreqdzk.php\
    \ on line 33\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \  $sum = 0;\n  foreach ($lst as $value) {\n    $sum += ceil($value) * ceil($value);\n\
    \  }\n  return $sum;\n}\n\necho sum_squares([1,2,3]) . \"\\n\";\necho sum_squares([1,4,9])\
    \ . \"\\n\";\necho sum_squares([1,3,5,7]) . \"\\n\";\necho sum_squares([1.4,4.2,0])\
    \ . \"\\n\";\necho sum_squares([-2.4,1,1]) . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "14\n98\n84\n29\n6\n"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp4rykbdi_.php:29\n\
    Stack trace:\n#0 /tmp/tmp4rykbdi_.php(43): test()\n#1 {main}\n  thrown in /tmp/tmp4rykbdi_.php\
    \ on line 29\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \  $sum = 0;\n  foreach ($lst as $value) {\n    $sum += ceil($value) ** 2;\n \
    \ }\n  return $sum;\n}\n\necho sum_squares([1,2,3]);\necho \"<br>\";\necho sum_squares([1,4,9]);\n\
    echo \"<br>\";\necho sum_squares([1,3,5,7]);\necho \"<br>\";\necho sum_squares([1.4,4.2,0]);\n\
    echo \"<br>\";\necho sum_squares([-2.4,1,1]);\necho \"<br>\";\nfunction candidate(...$args)\
    \ {\n    return sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: 14<br>98<br>84<br>29<br>6<br>
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpphsli_0o.php:34\n\
    Stack trace:\n#0 /tmp/tmpphsli_0o.php(48): test()\n#1 {main}\n  thrown in /tmp/tmpphsli_0o.php\
    \ on line 34\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \  $sum = 0;\n  foreach ($lst as $value) {\n    $sum += ceil($value) ** 2;\n \
    \ }\n  return $sum;\n}\necho sum_squares([1,2,3]);\necho \"<br>\";\necho sum_squares([1,4,9]);\n\
    echo \"<br>\";\necho sum_squares([1,3,5,7]);\necho \"<br>\";\necho sum_squares([1.4,4.2,0]);\n\
    echo \"<br>\";\necho sum_squares([-2.4,1,1]);\nfunction candidate(...$args) {\n\
    \    return sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: 14<br>98<br>84<br>29<br>6
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpwl0frnml.php:32\n\
    Stack trace:\n#0 /tmp/tmpwl0frnml.php(46): test()\n#1 {main}\n  thrown in /tmp/tmpwl0frnml.php\
    \ on line 32\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \  $sum = 0;\n  foreach ($lst as $value) {\n    $sum += ceil($value) ** 2;\n \
    \ }\n  return $sum;\n}\n\necho sum_squares([1,2,3]);\necho \"<br>\";\necho sum_squares([1,4,9]);\n\
    echo \"<br>\";\necho sum_squares([1,3,5,7]);\necho \"<br>\";\necho sum_squares([1.4,4.2,0]);\n\
    echo \"<br>\";\necho sum_squares([-2.4,1,1]);\necho \"<br>\";\nfunction candidate(...$args)\
    \ {\n    return sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: 14<br>98<br>84<br>29<br>6<br>
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp_5qh_w8y.php:34\n\
    Stack trace:\n#0 /tmp/tmp_5qh_w8y.php(48): test()\n#1 {main}\n  thrown in /tmp/tmp_5qh_w8y.php\
    \ on line 34\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \  $sum = 0;\n  foreach ($lst as $key => $value) {\n    $sum += ceil($value) **\
    \ 2;\n  }\n  return $sum;\n}\n\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp22t_lhfd.php:24\n\
    Stack trace:\n#0 /tmp/tmp22t_lhfd.php(38): test()\n#1 {main}\n  thrown in /tmp/tmp22t_lhfd.php\
    \ on line 24\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \  $sum = 0;\n  foreach ($lst as $num) {\n    $sum += ceil($num) ** 2;\n  }\n\
    \  return $sum;\n}\n\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmprurhanh1.php:24\n\
    Stack trace:\n#0 /tmp/tmprurhanh1.php(38): test()\n#1 {main}\n  thrown in /tmp/tmprurhanh1.php\
    \ on line 24\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \  $sum = 0;\n  foreach ($lst as $value) {\n    $sum += ceil($value) ** 2;\n \
    \ }\n  return $sum;\n}\n\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpudqqqsi1.php:24\n\
    Stack trace:\n#0 /tmp/tmpudqqqsi1.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpudqqqsi1.php\
    \ on line 24\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \  $sum = 0;\n  foreach ($lst as $value) {\n    $sum += ceil($value) ** 2;\n \
    \ }\n  return $sum;\n}\n\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp4x47xvju.php:24\n\
    Stack trace:\n#0 /tmp/tmp4x47xvju.php(38): test()\n#1 {main}\n  thrown in /tmp/tmp4x47xvju.php\
    \ on line 24\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \  $sum = 0;\n  foreach ($lst as $value) {\n    $sum += ceil($value) ** 2;\n \
    \ }\n  return $sum;\n}\n\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmprci_tas7.php:24\n\
    Stack trace:\n#0 /tmp/tmprci_tas7.php(38): test()\n#1 {main}\n  thrown in /tmp/tmprci_tas7.php\
    \ on line 24\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \  $sum = 0;\n  foreach ($lst as $num) {\n    $sum += ceil($num) ** 2;\n  }\n\
    \  return $sum;\n}\necho sum_squares([1,2,3]) . \"\\n\";\necho sum_squares([1,4,9])\
    \ . \"\\n\";\necho sum_squares([1,3,5,7]) . \"\\n\";\necho sum_squares([1.4,4.2,0])\
    \ . \"\\n\";\necho sum_squares([-2.4,1,1]) . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "14\n98\n84\n29\n6\n"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp8e6m5icb.php:28\n\
    Stack trace:\n#0 /tmp/tmp8e6m5icb.php(42): test()\n#1 {main}\n  thrown in /tmp/tmp8e6m5icb.php\
    \ on line 28\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \  $sum = 0;\n  foreach ($lst as $value) {\n    $sum += ceil($value) ** 2;\n \
    \ }\n  return $sum;\n}\necho sum_squares([1,2,3]);\necho \"<br>\";\necho sum_squares([1,4,9]);\n\
    echo \"<br>\";\necho sum_squares([1,3,5,7]);\necho \"<br>\";\necho sum_squares([1.4,4.2,0]);\n\
    echo \"<br>\";\necho sum_squares([-2.4,1,1]);\nfunction candidate(...$args) {\n\
    \    return sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: 14<br>98<br>84<br>29<br>6
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmppvtjqeh0.php:32\n\
    Stack trace:\n#0 /tmp/tmppvtjqeh0.php(46): test()\n#1 {main}\n  thrown in /tmp/tmppvtjqeh0.php\
    \ on line 32\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \  $sum = 0;\n  foreach ($lst as $num) {\n    $sum += ceil($num) ** 2;\n  }\n\
    \  return $sum;\n}\necho sum_squares([1,2,3]) . \"\\n\";\necho sum_squares([1,4,9])\
    \ . \"\\n\";\necho sum_squares([1,3,5,7]) . \"\\n\";\necho sum_squares([1.4,4.2,0])\
    \ . \"\\n\";\necho sum_squares([-2.4,1,1]) . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "14\n98\n84\n29\n6\n"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpc29x8a4p.php:28\n\
    Stack trace:\n#0 /tmp/tmpc29x8a4p.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpc29x8a4p.php\
    \ on line 28\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \  $sum = 0;\n  foreach ($lst as $value) {\n    $sum += ceil($value) ** 2;\n \
    \ }\n  return $sum;\n}\n\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpy_fmfa_5.php:24\n\
    Stack trace:\n#0 /tmp/tmpy_fmfa_5.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpy_fmfa_5.php\
    \ on line 24\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \  $sum = 0;\n  foreach ($lst as $num) {\n    $sum += ceil($num) ** 2;\n  }\n\
    \  return $sum;\n}\necho sum_squares([1,2,3]);\necho \"<br>\";\necho sum_squares([1,4,9]);\n\
    echo \"<br>\";\necho sum_squares([1,3,5,7]);\necho \"<br>\";\necho sum_squares([1.4,4.2,0]);\n\
    echo \"<br>\";\necho sum_squares([-2.4,1,1]);\nfunction candidate(...$args) {\n\
    \    return sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: 14<br>98<br>84<br>29<br>6
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpiqbj4rrb.php:32\n\
    Stack trace:\n#0 /tmp/tmpiqbj4rrb.php(46): test()\n#1 {main}\n  thrown in /tmp/tmpiqbj4rrb.php\
    \ on line 32\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \  $sum = 0;\n  foreach ($lst as $value) {\n    $sum += ceil($value) ** 2;\n \
    \ }\n  return $sum;\n}\n\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpiwp46cte.php:24\n\
    Stack trace:\n#0 /tmp/tmpiwp46cte.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpiwp46cte.php\
    \ on line 24\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \  $sum = 0;\n  foreach ($lst as $value) {\n    $sum += ceil($value) ** 2;\n \
    \ }\n  return $sum;\n}\n\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp9bvmvv00.php:24\n\
    Stack trace:\n#0 /tmp/tmp9bvmvv00.php(38): test()\n#1 {main}\n  thrown in /tmp/tmp9bvmvv00.php\
    \ on line 24\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \  $sum = 0;\n  foreach ($lst as $value) {\n    $sum += ceil($value) ** 2;\n \
    \ }\n  return $sum;\n}\n\necho sum_squares([1,2,3]);\necho \"<br>\";\necho sum_squares([1,4,9]);\n\
    echo \"<br>\";\necho sum_squares([1,3,5,7]);\necho \"<br>\";\necho sum_squares([1.4,4.2,0]);\n\
    echo \"<br>\";\necho sum_squares([-2.4,1,1]);\nfunction candidate(...$args) {\n\
    \    return sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: 14<br>98<br>84<br>29<br>6
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpprurgrxy.php:33\n\
    Stack trace:\n#0 /tmp/tmpprurgrxy.php(47): test()\n#1 {main}\n  thrown in /tmp/tmpprurgrxy.php\
    \ on line 33\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \  $sum = 0;\n  foreach ($lst as $num) {\n    $sum += ceil($num) ** 2;\n  }\n\
    \  return $sum;\n}\n\necho sum_squares([1,2,3]);\necho \"<br>\";\necho sum_squares([1,4,9]);\n\
    echo \"<br>\";\necho sum_squares([1,3,5,7]);\necho \"<br>\";\necho sum_squares([1.4,4.2,0]);\n\
    echo \"<br>\";\necho sum_squares([-2.4,1,1]);\nfunction candidate(...$args) {\n\
    \    return sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: 14<br>98<br>84<br>29<br>6
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp48bzf9yj.php:33\n\
    Stack trace:\n#0 /tmp/tmp48bzf9yj.php(47): test()\n#1 {main}\n  thrown in /tmp/tmp48bzf9yj.php\
    \ on line 33\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \  $sum = 0;\n  foreach ($lst as $value) {\n    $sum += ceil($value) ** 2;\n \
    \ }\n  return $sum;\n}\n\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpcv5nridt.php:24\n\
    Stack trace:\n#0 /tmp/tmpcv5nridt.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpcv5nridt.php\
    \ on line 24\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \  $sum = 0;\n  foreach ($lst as $value) {\n    $sum += ceil($value) ** 2;\n \
    \ }\n  return $sum;\n}\n\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmppobq_rxz.php:24\n\
    Stack trace:\n#0 /tmp/tmppobq_rxz.php(38): test()\n#1 {main}\n  thrown in /tmp/tmppobq_rxz.php\
    \ on line 24\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \  $sum = 0;\n  foreach ($lst as $value) {\n    $sum += ceil($value) ** 2;\n \
    \ }\n  return $sum;\n}\n\necho sum_squares([1,2,3]);\necho \"<br>\";\necho sum_squares([1,4,9]);\n\
    echo \"<br>\";\necho sum_squares([1,3,5,7]);\necho \"<br>\";\necho sum_squares([1.4,4.2,0]);\n\
    echo \"<br>\";\necho sum_squares([-2.4,1,1]);\necho \"<br>\";\nfunction candidate(...$args)\
    \ {\n    return sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: 14<br>98<br>84<br>29<br>6<br>
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpi153d73t.php:34\n\
    Stack trace:\n#0 /tmp/tmpi153d73t.php(48): test()\n#1 {main}\n  thrown in /tmp/tmpi153d73t.php\
    \ on line 34\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \  $sum = 0;\n  foreach ($lst as $key => $value) {\n    $sum += ceil($value) **\
    \ 2;\n  }\n  return $sum;\n}\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpqexlbwd8.php:23\n\
    Stack trace:\n#0 /tmp/tmpqexlbwd8.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpqexlbwd8.php\
    \ on line 23\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \  $sum = 0;\n  foreach ($lst as $value) {\n    $sum += ceil($value) ** 2;\n \
    \ }\n  return $sum;\n}\n\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpbln3vuwc.php:24\n\
    Stack trace:\n#0 /tmp/tmpbln3vuwc.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpbln3vuwc.php\
    \ on line 24\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \  $sum = 0;\n  foreach ($lst as $num) {\n    $sum += ceil($num) ** 2;\n  }\n\
    \  return $sum;\n}\necho sum_squares([1,2,3]) . \"\\n\";\necho sum_squares([1,4,9])\
    \ . \"\\n\";\necho sum_squares([1,3,5,7]) . \"\\n\";\necho sum_squares([1.4,4.2,0])\
    \ . \"\\n\";\necho sum_squares([-2.4,1,1]) . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "14\n98\n84\n29\n6\n"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpr5fy2ok9.php:28\n\
    Stack trace:\n#0 /tmp/tmpr5fy2ok9.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpr5fy2ok9.php\
    \ on line 28\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \  $squared = [];\n  foreach ($lst as $num) {\n    $squared[] = ceil($num) **\
    \ 2;\n  }\n  return array_sum($squared);\n}\n\necho sum_squares([1,2,3]);\necho\
    \ \"\\n\";\necho sum_squares([1,4,9]);\necho \"\\n\";\necho sum_squares([1,3,5,7]);\n\
    echo \"\\n\";\necho sum_squares([1.4,4.2,0]);\necho \"\\n\";\necho sum_squares([-2.4,1,1]);\n\
    echo \"\\n\";\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "14\n98\n84\n29\n6\n"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpszl7qyxt.php:34\n\
    Stack trace:\n#0 /tmp/tmpszl7qyxt.php(48): test()\n#1 {main}\n  thrown in /tmp/tmpszl7qyxt.php\
    \ on line 34\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \  $sum = 0;\n  foreach ($lst as $num) {\n    $sum += ceil($num) ** 2;\n  }\n\
    \  return $sum;\n}\n\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmphxoeb2lf.php:24\n\
    Stack trace:\n#0 /tmp/tmphxoeb2lf.php(38): test()\n#1 {main}\n  thrown in /tmp/tmphxoeb2lf.php\
    \ on line 24\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \  $sum = 0;\n  foreach ($lst as $value) {\n    $sum += ceil($value) * ceil($value);\n\
    \  }\n  return $sum;\n}\n\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpstgzmwfl.php:24\n\
    Stack trace:\n#0 /tmp/tmpstgzmwfl.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpstgzmwfl.php\
    \ on line 24\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \  $sum = 0;\n  foreach ($lst as $num) {\n    $sum += ceil($num) ** 2;\n  }\n\
    \  return $sum;\n}\necho sum_squares([1,2,3]);\necho \"<br>\";\necho sum_squares([1,4,9]);\n\
    echo \"<br>\";\necho sum_squares([1,3,5,7]);\necho \"<br>\";\necho sum_squares([1.4,4.2,0]);\n\
    echo \"<br>\";\necho sum_squares([-2.4,1,1]);\nfunction candidate(...$args) {\n\
    \    return sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: 14<br>98<br>84<br>29<br>6
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpena1awe3.php:32\n\
    Stack trace:\n#0 /tmp/tmpena1awe3.php(46): test()\n#1 {main}\n  thrown in /tmp/tmpena1awe3.php\
    \ on line 32\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \  $sum = 0;\n  foreach ($lst as $value) {\n    $sum += ceil($value) ** 2;\n \
    \ }\n  return $sum;\n}\n\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpub8x9l8a.php:24\n\
    Stack trace:\n#0 /tmp/tmpub8x9l8a.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpub8x9l8a.php\
    \ on line 24\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \  $sum = 0;\n  foreach ($lst as $num) {\n    $sum += ceil($num) ** 2;\n  }\n\
    \  return $sum;\n}\necho sum_squares([1,2,3]);\necho \"<br>\";\necho sum_squares([1,4,9]);\n\
    echo \"<br>\";\necho sum_squares([1,3,5,7]);\necho \"<br>\";\necho sum_squares([1.4,4.2,0]);\n\
    echo \"<br>\";\necho sum_squares([-2.4,1,1]);\nfunction candidate(...$args) {\n\
    \    return sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: 14<br>98<br>84<br>29<br>6
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpc92v2vrh.php:32\n\
    Stack trace:\n#0 /tmp/tmpc92v2vrh.php(46): test()\n#1 {main}\n  thrown in /tmp/tmpc92v2vrh.php\
    \ on line 32\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \  $sum = 0;\n  foreach ($lst as $num) {\n    $sum += ceil($num) ** 2;\n  }\n\
    \  return $sum;\n}\n\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp_5c39hiz.php:24\n\
    Stack trace:\n#0 /tmp/tmp_5c39hiz.php(38): test()\n#1 {main}\n  thrown in /tmp/tmp_5c39hiz.php\
    \ on line 24\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \  $sum = 0;\n  foreach ($lst as $num) {\n    $sum += ceil($num) ** 2;\n  }\n\
    \  return $sum;\n}\n\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpsj1upgd4.php:24\n\
    Stack trace:\n#0 /tmp/tmpsj1upgd4.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpsj1upgd4.php\
    \ on line 24\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \  $sum = 0;\n  foreach ($lst as $value) {\n    $sum += ceil($value) ** 2;\n \
    \ }\n  return $sum;\n}\n\necho sum_squares([1,2,3]);\necho \"<br>\";\necho sum_squares([1,4,9]);\n\
    echo \"<br>\";\necho sum_squares([1,3,5,7]);\necho \"<br>\";\necho sum_squares([1.4,4.2,0]);\n\
    echo \"<br>\";\necho sum_squares([-2.4,1,1]);\nfunction candidate(...$args) {\n\
    \    return sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: 14<br>98<br>84<br>29<br>6
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpggjrye1r.php:33\n\
    Stack trace:\n#0 /tmp/tmpggjrye1r.php(47): test()\n#1 {main}\n  thrown in /tmp/tmpggjrye1r.php\
    \ on line 33\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \  $sum = 0;\n  foreach ($lst as $value) {\n    $sum += ceil($value) ** 2;\n \
    \ }\n  return $sum;\n}\n\necho sum_squares([1,2,3]) . \"\\n\";\necho sum_squares([1,4,9])\
    \ . \"\\n\";\necho sum_squares([1,3,5,7]) . \"\\n\";\necho sum_squares([1.4,4.2,0])\
    \ . \"\\n\";\necho sum_squares([-2.4,1,1]) . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "14\n98\n84\n29\n6\n"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp2h9e70t3.php:29\n\
    Stack trace:\n#0 /tmp/tmp2h9e70t3.php(43): test()\n#1 {main}\n  thrown in /tmp/tmp2h9e70t3.php\
    \ on line 29\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \  $sum = 0;\n  foreach ($lst as $num) {\n    $sum += ceil($num) ** 2;\n  }\n\
    \  return $sum;\n}\necho sum_squares([1,2,3]);\necho \"<br>\";\necho sum_squares([1,4,9]);\n\
    echo \"<br>\";\necho sum_squares([1,3,5,7]);\necho \"<br>\";\necho sum_squares([1.4,4.2,0]);\n\
    echo \"<br>\";\necho sum_squares([-2.4,1,1]);\nfunction candidate(...$args) {\n\
    \    return sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: 14<br>98<br>84<br>29<br>6
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpam7wpx38.php:32\n\
    Stack trace:\n#0 /tmp/tmpam7wpx38.php(46): test()\n#1 {main}\n  thrown in /tmp/tmpam7wpx38.php\
    \ on line 32\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \  $sum = 0;\n  foreach ($lst as $num) {\n    $sum += ceil($num) ** 2;\n  }\n\
    \  return $sum;\n}\n\necho sum_squares([1,2,3]) . \"\\n\";\necho sum_squares([1,4,9])\
    \ . \"\\n\";\necho sum_squares([1,3,5,7]) . \"\\n\";\necho sum_squares([1.4,4.2,0])\
    \ . \"\\n\";\necho sum_squares([-2.4,1,1]) . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "14\n98\n84\n29\n6\n"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpgvsrb5j8.php:29\n\
    Stack trace:\n#0 /tmp/tmpgvsrb5j8.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpgvsrb5j8.php\
    \ on line 29\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \  $sum = 0;\n  foreach ($lst as $value) {\n    $sum += ceil($value) ** 2;\n \
    \ }\n  return $sum;\n}\n\necho sum_squares([1,2,3]);\necho \"<br>\";\necho sum_squares([1,4,9]);\n\
    echo \"<br>\";\necho sum_squares([1,3,5,7]);\necho \"<br>\";\necho sum_squares([1.4,4.2,0]);\n\
    echo \"<br>\";\necho sum_squares([-2.4,1,1]);\nfunction candidate(...$args) {\n\
    \    return sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: 14<br>98<br>84<br>29<br>6
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmprlc2cjiw.php:33\n\
    Stack trace:\n#0 /tmp/tmprlc2cjiw.php(47): test()\n#1 {main}\n  thrown in /tmp/tmprlc2cjiw.php\
    \ on line 33\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \  $sum = 0;\n  foreach ($lst as $value) {\n    $sum += ceil($value) ** 2;\n \
    \ }\n  return $sum;\n}\n\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp6kdxgvlf.php:24\n\
    Stack trace:\n#0 /tmp/tmp6kdxgvlf.php(38): test()\n#1 {main}\n  thrown in /tmp/tmp6kdxgvlf.php\
    \ on line 24\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \  $sum = 0;\n  foreach ($lst as $num) {\n    $sum += ceil($num) ** 2;\n  }\n\
    \  return $sum;\n}\necho sum_squares([1,2,3]);\necho \"<br>\";\necho sum_squares([1,4,9]);\n\
    echo \"<br>\";\necho sum_squares([1,3,5,7]);\necho \"<br>\";\necho sum_squares([1.4,4.2,0]);\n\
    echo \"<br>\";\necho sum_squares([-2.4,1,1]);\necho \"<br>\";\nfunction candidate(...$args)\
    \ {\n    return sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: 14<br>98<br>84<br>29<br>6<br>
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpaosyopsy.php:33\n\
    Stack trace:\n#0 /tmp/tmpaosyopsy.php(47): test()\n#1 {main}\n  thrown in /tmp/tmpaosyopsy.php\
    \ on line 33\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \  $sum = 0;\n  foreach ($lst as $value) {\n    $sum += ceil($value) ** 2;\n \
    \ }\n  return $sum;\n}\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmps7olwcf3.php:23\n\
    Stack trace:\n#0 /tmp/tmps7olwcf3.php(37): test()\n#1 {main}\n  thrown in /tmp/tmps7olwcf3.php\
    \ on line 23\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \  $sum = 0;\n  foreach ($lst as $num) {\n    $sum += ceil($num) ** 2;\n  }\n\
    \  return $sum;\n}\n\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpo1uo1ig0.php:24\n\
    Stack trace:\n#0 /tmp/tmpo1uo1ig0.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpo1uo1ig0.php\
    \ on line 24\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \  $sum = 0;\n  foreach ($lst as $value) {\n    $sum += ceil($value) ** 2;\n \
    \ }\n  return $sum;\n}\necho sum_squares([1,2,3]);\necho \"<br>\";\necho sum_squares([1,4,9]);\n\
    echo \"<br>\";\necho sum_squares([1,3,5,7]);\necho \"<br>\";\necho sum_squares([1.4,4.2,0]);\n\
    echo \"<br>\";\necho sum_squares([-2.4,1,1]);\nfunction candidate(...$args) {\n\
    \    return sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: 14<br>98<br>84<br>29<br>6
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpco_k74cl.php:32\n\
    Stack trace:\n#0 /tmp/tmpco_k74cl.php(46): test()\n#1 {main}\n  thrown in /tmp/tmpco_k74cl.php\
    \ on line 32\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \  $sum = 0;\n  foreach ($lst as $value) {\n    $sum += ceil($value) ** 2;\n \
    \ }\n  return $sum;\n}\n\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpekeba630.php:24\n\
    Stack trace:\n#0 /tmp/tmpekeba630.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpekeba630.php\
    \ on line 24\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \  $sum = 0;\n  foreach ($lst as $value) {\n    $sum += ceil($value) ** 2;\n \
    \ }\n  return $sum;\n}\necho sum_squares([1,2,3]);\necho \"<br>\";\necho sum_squares([1,4,9]);\n\
    echo \"<br>\";\necho sum_squares([1,3,5,7]);\necho \"<br>\";\necho sum_squares([1.4,4.2,0]);\n\
    echo \"<br>\";\necho sum_squares([-2.4,1,1]);\nfunction candidate(...$args) {\n\
    \    return sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: 14<br>98<br>84<br>29<br>6
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpt86yga5h.php:32\n\
    Stack trace:\n#0 /tmp/tmpt86yga5h.php(46): test()\n#1 {main}\n  thrown in /tmp/tmpt86yga5h.php\
    \ on line 32\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \  $sum = 0;\n  foreach ($lst as $value) {\n    $sum += ceil($value) ** 2;\n \
    \ }\n  return $sum;\n}\n\necho sum_squares([1,2,3]);\necho \"\\n\";\necho sum_squares([1,4,9]);\n\
    echo \"\\n\";\necho sum_squares([1,3,5,7]);\necho \"\\n\";\necho sum_squares([1.4,4.2,0]);\n\
    echo \"\\n\";\necho sum_squares([-2.4,1,1]);\necho \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "14\n98\n84\n29\n6\n"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpfmbprpw6.php:34\n\
    Stack trace:\n#0 /tmp/tmpfmbprpw6.php(48): test()\n#1 {main}\n  thrown in /tmp/tmpfmbprpw6.php\
    \ on line 34\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \  $sum = 0;\n  foreach ($lst as $number) {\n    $sum += ceil($number) ** 2;\n\
    \  }\n  return $sum;\n}\necho sum_squares([1,2,3]) . \"\\n\";\necho sum_squares([1,4,9])\
    \ . \"\\n\";\necho sum_squares([1,3,5,7]) . \"\\n\";\necho sum_squares([1.4,4.2,0])\
    \ . \"\\n\";\necho sum_squares([-2.4,1,1]) . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "14\n98\n84\n29\n6\n"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpk10jqbt4.php:28\n\
    Stack trace:\n#0 /tmp/tmpk10jqbt4.php(42): test()\n#1 {main}\n  thrown in /tmp/tmpk10jqbt4.php\
    \ on line 28\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \  $sum = 0;\n  foreach ($lst as $num) {\n    $sum += ceil($num) ** 2;\n  }\n\
    \  return $sum;\n}\necho sum_squares([1,2,3]);\necho \"<br>\";\necho sum_squares([1,4,9]);\n\
    echo \"<br>\";\necho sum_squares([1,3,5,7]);\necho \"<br>\";\necho sum_squares([1.4,4.2,0]);\n\
    echo \"<br>\";\necho sum_squares([-2.4,1,1]);\nfunction candidate(...$args) {\n\
    \    return sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: 14<br>98<br>84<br>29<br>6
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp776l7fdu.php:32\n\
    Stack trace:\n#0 /tmp/tmp776l7fdu.php(46): test()\n#1 {main}\n  thrown in /tmp/tmp776l7fdu.php\
    \ on line 32\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \  $result = 0;\n  foreach ($lst as $value) {\n    $result += ceil($value) **\
    \ 2;\n  }\n  return $result;\n}\n\nfunction candidate(...$args) {\n    return\
    \ sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpp5dtdobl.php:24\n\
    Stack trace:\n#0 /tmp/tmpp5dtdobl.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpp5dtdobl.php\
    \ on line 24\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \  $sum = 0;\n  foreach ($lst as $value) {\n    $sum += ceil($value) ** 2;\n \
    \ }\n  return $sum;\n}\n\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpjjonyr9d.php:24\n\
    Stack trace:\n#0 /tmp/tmpjjonyr9d.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpjjonyr9d.php\
    \ on line 24\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \  $sum = 0;\n  foreach ($lst as $value) {\n    $sum += ceil($value) ** 2;\n \
    \ }\n  return $sum;\n}\n\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp7ugny2sj.php:24\n\
    Stack trace:\n#0 /tmp/tmp7ugny2sj.php(38): test()\n#1 {main}\n  thrown in /tmp/tmp7ugny2sj.php\
    \ on line 24\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \  $sum = 0;\n  foreach ($lst as $num) {\n    $sum += ceil($num) ** 2;\n  }\n\
    \  return $sum;\n}\necho sum_squares([1,2,3]);\necho \"<br>\";\necho sum_squares([1,4,9]);\n\
    echo \"<br>\";\necho sum_squares([1,3,5,7]);\necho \"<br>\";\necho sum_squares([1.4,4.2,0]);\n\
    echo \"<br>\";\necho sum_squares([-2.4,1,1]);\necho \"<br>\";\nfunction candidate(...$args)\
    \ {\n    return sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: 14<br>98<br>84<br>29<br>6<br>
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpgp738ypn.php:33\n\
    Stack trace:\n#0 /tmp/tmpgp738ypn.php(47): test()\n#1 {main}\n  thrown in /tmp/tmpgp738ypn.php\
    \ on line 33\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \  $sum = 0;\n  foreach ($lst as $value) {\n    $sum += ceil($value) ** 2;\n \
    \ }\n  return $sum;\n}\n\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpubihrr7f.php:24\n\
    Stack trace:\n#0 /tmp/tmpubihrr7f.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpubihrr7f.php\
    \ on line 24\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \  $sum = 0;\n  foreach ($lst as $value) {\n    $sum += ceil($value) ** 2;\n \
    \ }\n  return $sum;\n}\n\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpz_w6frun.php:24\n\
    Stack trace:\n#0 /tmp/tmpz_w6frun.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpz_w6frun.php\
    \ on line 24\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \  $sum = 0;\n  foreach ($lst as $num) {\n    $sum += ceil($num) ** 2;\n  }\n\
    \  return $sum;\n}\necho sum_squares([1,2,3]);\necho \"<br>\";\necho sum_squares([1,4,9]);\n\
    echo \"<br>\";\necho sum_squares([1,3,5,7]);\necho \"<br>\";\necho sum_squares([1.4,4.2,0]);\n\
    echo \"<br>\";\necho sum_squares([-2.4,1,1]);\nfunction candidate(...$args) {\n\
    \    return sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: 14<br>98<br>84<br>29<br>6
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpzghx1a4n.php:32\n\
    Stack trace:\n#0 /tmp/tmpzghx1a4n.php(46): test()\n#1 {main}\n  thrown in /tmp/tmpzghx1a4n.php\
    \ on line 32\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \  $sum = 0;\n  foreach ($lst as $num) {\n    $sum += ceil($num) ** 2;\n  }\n\
    \  return $sum;\n}\necho sum_squares([1,2,3]) . \"\\n\";\necho sum_squares([1,4,9])\
    \ . \"\\n\";\necho sum_squares([1,3,5,7]) . \"\\n\";\necho sum_squares([1.4,4.2,0])\
    \ . \"\\n\";\necho sum_squares([-2.4,1,1]) . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "14\n98\n84\n29\n6\n"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp9jtter8v.php:28\n\
    Stack trace:\n#0 /tmp/tmp9jtter8v.php(42): test()\n#1 {main}\n  thrown in /tmp/tmp9jtter8v.php\
    \ on line 28\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \  $sum = 0;\n  foreach ($lst as $value) {\n    $sum += ceil($value) ** 2;\n \
    \ }\n  return $sum;\n}\n\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp2v7gg0nl.php:24\n\
    Stack trace:\n#0 /tmp/tmp2v7gg0nl.php(38): test()\n#1 {main}\n  thrown in /tmp/tmp2v7gg0nl.php\
    \ on line 24\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \  $sum = 0;\n  foreach ($lst as $value) {\n    $sum += ceil($value) * ceil($value);\n\
    \  }\n  return $sum;\n}\n\necho sum_squares([1,2,3]);\necho \"<br>\";\necho sum_squares([1,4,9]);\n\
    echo \"<br>\";\necho sum_squares([1,3,5,7]);\necho \"<br>\";\necho sum_squares([1.4,4.2,0]);\n\
    echo \"<br>\";\necho sum_squares([-2.4,1,1]);\nfunction candidate(...$args) {\n\
    \    return sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: 14<br>98<br>84<br>29<br>6
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpqeefkmsl.php:33\n\
    Stack trace:\n#0 /tmp/tmpqeefkmsl.php(47): test()\n#1 {main}\n  thrown in /tmp/tmpqeefkmsl.php\
    \ on line 33\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \  $result = 0;\n  foreach ($lst as $num) {\n    $result += ceil($num) ** 2;\n\
    \  }\n  return $result;\n}\n\necho sum_squares([1,2,3]);\necho \"<br>\";\necho\
    \ sum_squares([1,4,9]);\necho \"<br>\";\necho sum_squares([1,3,5,7]);\necho \"\
    <br>\";\necho sum_squares([1.4,4.2,0]);\necho \"<br>\";\necho sum_squares([-2.4,1,1]);\n\
    echo \"<br>\";\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: 14<br>98<br>84<br>29<br>6<br>
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp86mhfpah.php:34\n\
    Stack trace:\n#0 /tmp/tmp86mhfpah.php(48): test()\n#1 {main}\n  thrown in /tmp/tmp86mhfpah.php\
    \ on line 34\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \  $result = 0;\n  foreach ($lst as $num) {\n    $result += ceil($num) ** 2;\n\
    \  }\n  return $result;\n}\n\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpj67taazp.php:24\n\
    Stack trace:\n#0 /tmp/tmpj67taazp.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpj67taazp.php\
    \ on line 24\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \  $sum = 0;\n  foreach ($lst as $value) {\n    $sum += ceil($value) ** 2;\n \
    \ }\n  return $sum;\n}\n\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpw8dhjdfj.php:24\n\
    Stack trace:\n#0 /tmp/tmpw8dhjdfj.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpw8dhjdfj.php\
    \ on line 24\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \  $sum = 0;\n  foreach ($lst as $num) {\n    $sum += ceil($num) ** 2;\n  }\n\
    \  return $sum;\n}\necho sum_squares([1,2,3]);\necho \"<br>\";\necho sum_squares([1,4,9]);\n\
    echo \"<br>\";\necho sum_squares([1,3,5,7]);\necho \"<br>\";\necho sum_squares([1.4,4.2,0]);\n\
    echo \"<br>\";\necho sum_squares([-2.4,1,1]);\nfunction candidate(...$args) {\n\
    \    return sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: 14<br>98<br>84<br>29<br>6
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp4lf_dslq.php:32\n\
    Stack trace:\n#0 /tmp/tmp4lf_dslq.php(46): test()\n#1 {main}\n  thrown in /tmp/tmp4lf_dslq.php\
    \ on line 32\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \  $sum = 0;\n  foreach ($lst as $value) {\n    $sum += ceil($value) ** 2;\n \
    \ }\n  return $sum;\n}\n\necho sum_squares([1,2,3]);\necho \"\\n\";\necho sum_squares([1,4,9]);\n\
    echo \"\\n\";\necho sum_squares([1,3,5,7]);\necho \"\\n\";\necho sum_squares([1.4,4.2,0]);\n\
    echo \"\\n\";\necho sum_squares([-2.4,1,1]);\necho \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "14\n98\n84\n29\n6\n"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpcafxs0ee.php:34\n\
    Stack trace:\n#0 /tmp/tmpcafxs0ee.php(48): test()\n#1 {main}\n  thrown in /tmp/tmpcafxs0ee.php\
    \ on line 34\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \  $sum = 0;\n  foreach ($lst as $value) {\n    $sum += ceil($value) ** 2;\n \
    \ }\n  return $sum;\n}\n\necho sum_squares([1,2,3]);\necho \"<br>\";\necho sum_squares([1,4,9]);\n\
    echo \"<br>\";\necho sum_squares([1,3,5,7]);\necho \"<br>\";\necho sum_squares([1.4,4.2,0]);\n\
    echo \"<br>\";\necho sum_squares([-2.4,1,1]);\nfunction candidate(...$args) {\n\
    \    return sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: 14<br>98<br>84<br>29<br>6
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpdooy7dov.php:33\n\
    Stack trace:\n#0 /tmp/tmpdooy7dov.php(47): test()\n#1 {main}\n  thrown in /tmp/tmpdooy7dov.php\
    \ on line 33\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \  $result = 0;\n  foreach ($lst as $value) {\n    $result += ceil($value) **\
    \ 2;\n  }\n  return $result;\n}\n\nfunction candidate(...$args) {\n    return\
    \ sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp18273_61.php:24\n\
    Stack trace:\n#0 /tmp/tmp18273_61.php(38): test()\n#1 {main}\n  thrown in /tmp/tmp18273_61.php\
    \ on line 24\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \  $sum = 0;\n  foreach ($lst as $value) {\n    $sum += ceil($value) ** 2;\n \
    \ }\n  return $sum;\n}\n\necho sum_squares([1,2,3]);\necho \"\\n\";\necho sum_squares([1,4,9]);\n\
    echo \"\\n\";\necho sum_squares([1,3,5,7]);\necho \"\\n\";\necho sum_squares([1.4,4.2,0]);\n\
    echo \"\\n\";\necho sum_squares([-2.4,1,1]);\necho \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "14\n98\n84\n29\n6\n"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpzrr64z4_.php:34\n\
    Stack trace:\n#0 /tmp/tmpzrr64z4_.php(48): test()\n#1 {main}\n  thrown in /tmp/tmpzrr64z4_.php\
    \ on line 34\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \  $sum = 0;\n  foreach ($lst as $value) {\n    $sum += ceil($value) ** 2;\n \
    \ }\n  return $sum;\n}\n\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpa6psegqo.php:24\n\
    Stack trace:\n#0 /tmp/tmpa6psegqo.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpa6psegqo.php\
    \ on line 24\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \  $result = 0;\n  for ($i = 0; $i < count($lst); $i++) {\n    $result += ceil($lst[$i])\
    \ ** 2;\n  }\n  return $result;\n}\n\necho sum_squares([1,2,3]) . \"\\n\";\necho\
    \ sum_squares([1,4,9]) . \"\\n\";\necho sum_squares([1,3,5,7]) . \"\\n\";\necho\
    \ sum_squares([1.4,4.2,0]) . \"\\n\";\necho sum_squares([-2.4,1,1]) . \"\\n\"\
    ;\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0)) !==\
    \ 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "14\n98\n84\n29\n6\n"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpcikqqh57.php:29\n\
    Stack trace:\n#0 /tmp/tmpcikqqh57.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpcikqqh57.php\
    \ on line 29\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \  $sum = 0;\n  foreach ($lst as $value) {\n    $sum += ceil($value) ** 2;\n \
    \ }\n  return $sum;\n}\n\necho sum_squares([1,2,3]);\necho \"<br>\";\necho sum_squares([1,4,9]);\n\
    echo \"<br>\";\necho sum_squares([1,3,5,7]);\necho \"<br>\";\necho sum_squares([1.4,4.2,0]);\n\
    echo \"<br>\";\necho sum_squares([-2.4,1,1]);\necho \"<br>\";\nfunction candidate(...$args)\
    \ {\n    return sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: 14<br>98<br>84<br>29<br>6<br>
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp1ogdge1p.php:34\n\
    Stack trace:\n#0 /tmp/tmp1ogdge1p.php(48): test()\n#1 {main}\n  thrown in /tmp/tmp1ogdge1p.php\
    \ on line 34\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \  $sum = 0;\n  foreach ($lst as $value) {\n    $sum += ceil($value) ** 2;\n \
    \ }\n  return $sum;\n}\n\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmprxy1w4ul.php:24\n\
    Stack trace:\n#0 /tmp/tmprxy1w4ul.php(38): test()\n#1 {main}\n  thrown in /tmp/tmprxy1w4ul.php\
    \ on line 24\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \  $sum = 0;\n  foreach ($lst as $value) {\n    $sum += ceil($value) ** 2;\n \
    \ }\n  return $sum;\n}\n\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpsurhdgsu.php:24\n\
    Stack trace:\n#0 /tmp/tmpsurhdgsu.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpsurhdgsu.php\
    \ on line 24\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \  $result = 0;\n  foreach ($lst as $value) {\n    $result += ceil($value) **\
    \ 2;\n  }\n  return $result;\n}\necho sum_squares([1,2,3]);\necho \"<br>\";\n\
    echo sum_squares([1,4,9]);\necho \"<br>\";\necho sum_squares([1,3,5,7]);\necho\
    \ \"<br>\";\necho sum_squares([1.4,4.2,0]);\necho \"<br>\";\necho sum_squares([-2.4,1,1]);\n\
    function candidate(...$args) {\n    return sum_squares(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0, 3.0)) !==\
    \ 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: 14<br>98<br>84<br>29<br>6
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpo_9xxvor.php:32\n\
    Stack trace:\n#0 /tmp/tmpo_9xxvor.php(46): test()\n#1 {main}\n  thrown in /tmp/tmpo_9xxvor.php\
    \ on line 32\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \  $sum = 0;\n  foreach ($lst as $value) {\n    $sum += ceil($value) ** 2;\n \
    \ }\n  return $sum;\n}\n\necho sum_squares([1,2,3]) . \"\\n\";\necho sum_squares([1,4,9])\
    \ . \"\\n\";\necho sum_squares([1,3,5,7]) . \"\\n\";\necho sum_squares([1.4,4.2,0])\
    \ . \"\\n\";\necho sum_squares([-2.4,1,1]) . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "14\n98\n84\n29\n6\n"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpyrjy188z.php:29\n\
    Stack trace:\n#0 /tmp/tmpyrjy188z.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpyrjy188z.php\
    \ on line 29\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \  $squared = [];\n  foreach ($lst as $num) {\n    $squared[] = ceil($num) **\
    \ 2;\n  }\n  return array_sum($squared);\n}\n\nfunction candidate(...$args) {\n\
    \    return sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpfhh4lljk.php:24\n\
    Stack trace:\n#0 /tmp/tmpfhh4lljk.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpfhh4lljk.php\
    \ on line 24\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \  $sum = 0;\n  foreach ($lst as $value) {\n    $sum += ceil($value) ** 2;\n \
    \ }\n  return $sum;\n}\n\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpng5qnd5i.php:24\n\
    Stack trace:\n#0 /tmp/tmpng5qnd5i.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpng5qnd5i.php\
    \ on line 24\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \  $sum = 0;\n  foreach ($lst as $value) {\n    $sum += ceil($value) ** 2;\n \
    \ }\n  return $sum;\n}\n\necho sum_squares([1,2,3]);\necho \"<br>\";\necho sum_squares([1,4,9]);\n\
    echo \"<br>\";\necho sum_squares([1,3,5,7]);\necho \"<br>\";\necho sum_squares([1.4,4.2,0]);\n\
    echo \"<br>\";\necho sum_squares([-2.4,1,1]);\necho \"<br>\";\nfunction candidate(...$args)\
    \ {\n    return sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: 14<br>98<br>84<br>29<br>6<br>
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp2nuknrg4.php:34\n\
    Stack trace:\n#0 /tmp/tmp2nuknrg4.php(48): test()\n#1 {main}\n  thrown in /tmp/tmp2nuknrg4.php\
    \ on line 34\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \  $sum = 0;\n  foreach ($lst as $key => $value) {\n    $sum += ceil($value) **\
    \ 2;\n  }\n  return $sum;\n}\n\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpg40ec1sh.php:24\n\
    Stack trace:\n#0 /tmp/tmpg40ec1sh.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpg40ec1sh.php\
    \ on line 24\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \  $result = 0;\n  foreach ($lst as $value) {\n    $result += ceil($value) **\
    \ 2;\n  }\n  return $result;\n}\n\nfunction candidate(...$args) {\n    return\
    \ sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpjx8sl6fv.php:24\n\
    Stack trace:\n#0 /tmp/tmpjx8sl6fv.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpjx8sl6fv.php\
    \ on line 24\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \  $sum = 0;\n  foreach ($lst as $value) {\n    $sum += ceil($value) ** 2;\n \
    \ }\n  return $sum;\n}\n\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpyzaj9tr4.php:24\n\
    Stack trace:\n#0 /tmp/tmpyzaj9tr4.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpyzaj9tr4.php\
    \ on line 24\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \  $sum = 0;\n  foreach ($lst as $value) {\n    $sum += ceil($value) ** 2;\n \
    \ }\n  return $sum;\n}\n\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp4mpd317r.php:24\n\
    Stack trace:\n#0 /tmp/tmp4mpd317r.php(38): test()\n#1 {main}\n  thrown in /tmp/tmp4mpd317r.php\
    \ on line 24\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \  $sum = 0;\n  foreach ($lst as $number) {\n    $sum += ceil($number) ** 2;\n\
    \  }\n  return $sum;\n}\n\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpr10l_of9.php:24\n\
    Stack trace:\n#0 /tmp/tmpr10l_of9.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpr10l_of9.php\
    \ on line 24\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \  $sum = 0;\n  foreach ($lst as $num) {\n    $sum += ceil($num) ** 2;\n  }\n\
    \  return $sum;\n}\necho sum_squares([1,2,3]);\necho \"<br>\";\necho sum_squares([1,4,9]);\n\
    echo \"<br>\";\necho sum_squares([1,3,5,7]);\necho \"<br>\";\necho sum_squares([1.4,4.2,0]);\n\
    echo \"<br>\";\necho sum_squares([-2.4,1,1]);\nfunction candidate(...$args) {\n\
    \    return sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: 14<br>98<br>84<br>29<br>6
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpf00jmktf.php:32\n\
    Stack trace:\n#0 /tmp/tmpf00jmktf.php(46): test()\n#1 {main}\n  thrown in /tmp/tmpf00jmktf.php\
    \ on line 32\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \  $sum = 0;\n  foreach ($lst as $value) {\n    $sum += ceil($value) ** 2;\n \
    \ }\n  return $sum;\n}\n\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpkem6ruwk.php:24\n\
    Stack trace:\n#0 /tmp/tmpkem6ruwk.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpkem6ruwk.php\
    \ on line 24\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \  $sum = 0;\n  for ($i = 0; $i < count($lst); $i++) {\n    $sum += ceil($lst[$i])\
    \ ** 2;\n  }\n  return $sum;\n}\n\nfunction candidate(...$args) {\n    return\
    \ sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpr179z6ga.php:24\n\
    Stack trace:\n#0 /tmp/tmpr179z6ga.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpr179z6ga.php\
    \ on line 24\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \  $sum = 0;\n  foreach ($lst as $value) {\n    $sum += ceil($value) ** 2;\n \
    \ }\n  return $sum;\n}\n\necho sum_squares([1,2,3]);\necho \"<br>\";\necho sum_squares([1,4,9]);\n\
    echo \"<br>\";\necho sum_squares([1,3,5,7]);\necho \"<br>\";\necho sum_squares([1.4,4.2,0]);\n\
    echo \"<br>\";\necho sum_squares([-2.4,1,1]);\necho \"<br>\";\nfunction candidate(...$args)\
    \ {\n    return sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: 14<br>98<br>84<br>29<br>6<br>
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp9mixrg5f.php:34\n\
    Stack trace:\n#0 /tmp/tmp9mixrg5f.php(48): test()\n#1 {main}\n  thrown in /tmp/tmp9mixrg5f.php\
    \ on line 34\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \  $sum = 0;\n  foreach ($lst as $value) {\n    $sum += ceil($value) ** 2;\n \
    \ }\n  return $sum;\n}\n\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpyn9uo9xg.php:24\n\
    Stack trace:\n#0 /tmp/tmpyn9uo9xg.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpyn9uo9xg.php\
    \ on line 24\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \  $sum = 0;\n  foreach ($lst as $key => $value) {\n    $sum += ceil($value) **\
    \ 2;\n  }\n  return $sum;\n}\n\necho sum_squares([1,2,3]) . \"\\n\";\necho sum_squares([1,4,9])\
    \ . \"\\n\";\necho sum_squares([1,3,5,7]) . \"\\n\";\necho sum_squares([1.4,4.2,0])\
    \ . \"\\n\";\necho sum_squares([-2.4,1,1]) . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "14\n98\n84\n29\n6\n"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpltqdu218.php:29\n\
    Stack trace:\n#0 /tmp/tmpltqdu218.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpltqdu218.php\
    \ on line 29\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \  $sum = 0;\n  foreach ($lst as $num) {\n    $sum += ceil($num) ** 2;\n  }\n\
    \  return $sum;\n}\n\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp4flw3npa.php:24\n\
    Stack trace:\n#0 /tmp/tmp4flw3npa.php(38): test()\n#1 {main}\n  thrown in /tmp/tmp4flw3npa.php\
    \ on line 24\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \  $sum = 0;\n  foreach ($lst as $num) {\n    $sum += ceil($num) ** 2;\n  }\n\
    \  return $sum;\n}\necho sum_squares([1,2,3]);\necho \"<br>\";\necho sum_squares([1,4,9]);\n\
    echo \"<br>\";\necho sum_squares([1,3,5,7]);\necho \"<br>\";\necho sum_squares([1.4,4.2,0]);\n\
    echo \"<br>\";\necho sum_squares([-2.4,1,1]);\nfunction candidate(...$args) {\n\
    \    return sum_squares(...$args);\n}\n\nfunction test(): void {\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 2.0, 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: 14<br>98<br>84<br>29<br>6
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpk6ch3d_d.php:32\n\
    Stack trace:\n#0 /tmp/tmpk6ch3d_d.php(46): test()\n#1 {main}\n  thrown in /tmp/tmpk6ch3d_d.php\
    \ on line 32\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// You are given a list of numbers.\n// You need to return the\
    \ sum of squared numbers in the given list,\n// round each element in the list\
    \ to the upper int(Ceiling) first.\n// Examples:\n// For lst = [1,2,3] the output\
    \ should be 14\n// For lst = [1,4,9] the output should be 98\n// For lst = [1,3,5,7]\
    \ the output should be 84\n// For lst = [1.4,4.2,0] the output should be 29\n\
    // For lst = [-2.4,1,1] the output should be 6\nfunction sum_squares($lst) {\n\
    \  $sum = 0;\n  foreach ($lst as $value) {\n    $sum += ceil($value) ** 2;\n \
    \ }\n  return $sum;\n}\n\nfunction candidate(...$args) {\n    return sum_squares(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(array(1.0, 2.0, 3.0)) !== 14)\
    \ { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0, 2.0,\
    \ 3.0)) !== 14) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.0,\
    \ 3.0, 5.0, 7.0)) !== 84) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(1.4,\
    \ 4.2, 0.0)) !== 29) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-2.4,\
    \ 1.0, 1.0)) !== 6) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(100.0,\
    \ 1.0, 15.0, 2.0)) !== 10230) { throw new Exception(\"Test failed!\"); }\n   \
    \ if (candidate(array(10000.0, 10000.0)) !== 200000000) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(array(-1.4, 4.6, 6.3)) !== 75) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(array(-1.4, 17.9, 18.9, 19.9))\
    \ !== 1086) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(0.0))\
    \ !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0))\
    \ !== 1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(array(-1.0,\
    \ 1.0, 0.0)) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpmhv8cj2m.php:24\n\
    Stack trace:\n#0 /tmp/tmpmhv8cj2m.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpmhv8cj2m.php\
    \ on line 24\n"
  exit_code: 255
  status: Exception

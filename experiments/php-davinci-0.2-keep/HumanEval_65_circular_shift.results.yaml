name: HumanEval_65_circular_shift
language: php
results:
- program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $x = (string) $x;\n    $len = strlen($x);\n    if ($shift >= $len) {\n  \
    \      return strrev($x);\n    }\n    $shift = $len - $shift;\n    return substr($x,\
    \ $shift) . substr($x, 0, $shift);\n}\n\nfunction candidate(...$args) {\n    return\
    \ circular_shift(...$args);\n}\n\nfunction test(): void {\n    if (candidate(100,\
    \ 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12,\
    \ 2) !== \"12\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(97,\
    \ 8) !== \"79\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12,\
    \ 1) !== \"21\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(11,\
    \ 101) !== \"11\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmprjkc_zti.php:25\n\
    Stack trace:\n#0 /tmp/tmprjkc_zti.php(31): test()\n#1 {main}\n  thrown in /tmp/tmprjkc_zti.php\
    \ on line 25\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $x = (string) $x;\n    $len = strlen($x);\n    if ($shift > $len) {\n   \
    \     return strrev($x);\n    }\n    $y = substr($x, $len - $shift) . substr($x,\
    \ 0, $len - $shift);\n    return $y;\n}\n\nfunction candidate(...$args) {\n  \
    \  return circular_shift(...$args);\n}\n\nfunction test(): void {\n    if (candidate(100,\
    \ 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12,\
    \ 2) !== \"12\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(97,\
    \ 8) !== \"79\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12,\
    \ 1) !== \"21\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(11,\
    \ 101) !== \"11\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $x = (string) $x;\n    $len = strlen($x);\n    if ($shift > $len) {\n   \
    \     return strrev($x);\n    }\n    $y = substr($x, $len - $shift);\n    $z =\
    \ substr($x, 0, $len - $shift);\n    return $y . $z;\n}\n\nfunction candidate(...$args)\
    \ {\n    return circular_shift(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(100, 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(12, 2) !== \"12\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $x_str = strval($x);\n    $x_len = strlen($x_str);\n    if ($shift >= $x_len)\
    \ {\n        return strrev($x_str);\n    }\n    $x_str_arr = str_split($x_str);\n\
    \    $x_str_arr = array_merge(array_slice($x_str_arr, $shift), array_slice($x_str_arr,\
    \ 0, $shift));\n    return implode('', $x_str_arr);\n}\n\nfunction candidate(...$args)\
    \ {\n    return circular_shift(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(100, 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(12, 2) !== \"12\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpn1ca9xwa.php:25\n\
    Stack trace:\n#0 /tmp/tmpn1ca9xwa.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpn1ca9xwa.php\
    \ on line 25\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $x = (string) $x;\n    $len = strlen($x);\n    if ($shift >= $len) {\n  \
    \      return strrev($x);\n    }\n    return substr($x, $shift) . substr($x, 0,\
    \ $shift);\n}\n\nfunction candidate(...$args) {\n    return circular_shift(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpa2xz0_im.php:23\n\
    Stack trace:\n#0 /tmp/tmpa2xz0_im.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpa2xz0_im.php\
    \ on line 23\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $digits = str_split($x);\n    $digits_count = count($digits);\n    if ($shift\
    \ > $digits_count) {\n        return implode(array_reverse($digits));\n    }\n\
    \    $shifted_digits = array_slice($digits, $shift);\n    $shifted_digits = array_merge($shifted_digits,\
    \ array_slice($digits, 0, $shift));\n    return implode($shifted_digits);\n}\n\
    \nfunction candidate(...$args) {\n    return circular_shift(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpx7_bx9w6.php:25\n\
    Stack trace:\n#0 /tmp/tmpx7_bx9w6.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpx7_bx9w6.php\
    \ on line 25\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $x = (string) $x;\n    $len = strlen($x);\n    if ($shift > $len) {\n   \
    \     return strrev($x);\n    }\n    $a = substr($x, 0, $len - $shift);\n    $b\
    \ = substr($x, $len - $shift);\n    return $b . $a;\n}\n\nfunction candidate(...$args)\
    \ {\n    return circular_shift(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(100, 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(12, 2) !== \"12\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $x = (string) $x;\n    $shift = (int) $shift;\n    $len = strlen($x);\n \
    \   if ($shift > $len) {\n        return strrev($x);\n    }\n    return substr($x,\
    \ $shift) . substr($x, 0, $shift);\n}\n\nfunction candidate(...$args) {\n    return\
    \ circular_shift(...$args);\n}\n\nfunction test(): void {\n    if (candidate(100,\
    \ 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12,\
    \ 2) !== \"12\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(97,\
    \ 8) !== \"79\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12,\
    \ 1) !== \"21\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(11,\
    \ 101) !== \"11\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmplw7aer9t.php:24\n\
    Stack trace:\n#0 /tmp/tmplw7aer9t.php(31): test()\n#1 {main}\n  thrown in /tmp/tmplw7aer9t.php\
    \ on line 24\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $digits = str_split($x);\n    $digits_count = count($digits);\n    if ($shift\
    \ > $digits_count) {\n        return implode(array_reverse($digits));\n    }\n\
    \    $shifted_digits = array_slice($digits, -$shift);\n    $shifted_digits = array_merge($shifted_digits,\
    \ array_slice($digits, 0, $digits_count - $shift));\n    return implode($shifted_digits);\n\
    }\n\nfunction candidate(...$args) {\n    return circular_shift(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $x = (string) $x;\n    $len = strlen($x);\n    if ($shift > $len) {\n   \
    \     return strrev($x);\n    }\n    $first = substr($x, 0, $len - $shift);\n\
    \    $last = substr($x, $len - $shift);\n    return $last . $first;\n}\n\nfunction\
    \ candidate(...$args) {\n    return circular_shift(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(100, 2) !== \"001\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \  $x = (string)$x;\n  $len = strlen($x);\n  if ($shift >= $len) {\n    return\
    \ strrev($x);\n  }\n  $left = substr($x, 0, $len - $shift);\n  $right = substr($x,\
    \ $len - $shift);\n  return $right . $left;\n}\n\nfunction candidate(...$args)\
    \ {\n    return circular_shift(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(100, 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(12, 2) !== \"12\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp00tove4n.php:26\n\
    Stack trace:\n#0 /tmp/tmp00tove4n.php(32): test()\n#1 {main}\n  thrown in /tmp/tmp00tove4n.php\
    \ on line 26\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $x = (string) $x;\n    $len = strlen($x);\n    if ($shift >= $len) {\n  \
    \      return strrev($x);\n    }\n    $left = substr($x, 0, $len - $shift);\n\
    \    $right = substr($x, $len - $shift);\n    return $right . $left;\n}\n\nfunction\
    \ candidate(...$args) {\n    return circular_shift(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(100, 2) !== \"001\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpnmrtwt4d.php:26\n\
    Stack trace:\n#0 /tmp/tmpnmrtwt4d.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpnmrtwt4d.php\
    \ on line 26\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $str = strval($x);\n    $len = strlen($str);\n    if ($shift > $len) {\n\
    \        return strrev($str);\n    }\n    $left = substr($str, 0, $shift);\n \
    \   $right = substr($str, $shift);\n    return $right . $left;\n}\n\nfunction\
    \ candidate(...$args) {\n    return circular_shift(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(100, 2) !== \"001\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpi2bi19km.php:25\n\
    Stack trace:\n#0 /tmp/tmpi2bi19km.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpi2bi19km.php\
    \ on line 25\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $x = (string) $x;\n    $len = strlen($x);\n    if ($shift >= $len) {\n  \
    \      return strrev($x);\n    }\n    return substr($x, $shift) . substr($x, 0,\
    \ $shift);\n}\n\nfunction candidate(...$args) {\n    return circular_shift(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpzu1o89t5.php:23\n\
    Stack trace:\n#0 /tmp/tmpzu1o89t5.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpzu1o89t5.php\
    \ on line 23\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \  $digits = str_split($x);\n  $digits_count = count($digits);\n  $shift = $shift\
    \ % $digits_count;\n  if ($shift == 0) {\n    return $x;\n  }\n  $left = array_slice($digits,\
    \ $shift);\n  $right = array_slice($digits, 0, $shift);\n  return implode('',\
    \ array_merge($left, $right));\n}\n\nfunction candidate(...$args) {\n    return\
    \ circular_shift(...$args);\n}\n\nfunction test(): void {\n    if (candidate(100,\
    \ 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12,\
    \ 2) !== \"12\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(97,\
    \ 8) !== \"79\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12,\
    \ 1) !== \"21\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(11,\
    \ 101) !== \"11\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmprq8zd_mr.php:26\n\
    Stack trace:\n#0 /tmp/tmprq8zd_mr.php(33): test()\n#1 {main}\n  thrown in /tmp/tmprq8zd_mr.php\
    \ on line 26\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $x = (string) $x;\n    $len = strlen($x);\n    if ($shift > $len) {\n   \
    \     return strrev($x);\n    }\n    $left = substr($x, 0, $len - $shift);\n \
    \   $right = substr($x, $len - $shift);\n    return $right . $left;\n}\n\nfunction\
    \ candidate(...$args) {\n    return circular_shift(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(100, 2) !== \"001\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $x = (string) $x;\n    $len = strlen($x);\n    if ($shift >= $len) {\n  \
    \      return strrev($x);\n    }\n    $x = strrev($x);\n    $x = substr($x, 0,\
    \ $shift) . substr($x, $shift);\n    return strrev($x);\n}\n\nfunction candidate(...$args)\
    \ {\n    return circular_shift(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(100, 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(12, 2) !== \"12\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpoo2mzmq_.php:25\n\
    Stack trace:\n#0 /tmp/tmpoo2mzmq_.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpoo2mzmq_.php\
    \ on line 25\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $x = (string) $x;\n    $len = strlen($x);\n    if ($shift > $len) {\n   \
    \     return strrev($x);\n    }\n    return substr($x, $len - $shift) . substr($x,\
    \ 0, $len - $shift);\n}\n\nfunction candidate(...$args) {\n    return circular_shift(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $digits = str_split($x);\n    $n = count($digits);\n    if ($shift > $n)\
    \ {\n        return implode('', array_reverse($digits));\n    }\n    $shifted\
    \ = array_slice($digits, $shift);\n    $shifted = array_merge($shifted, array_slice($digits,\
    \ 0, $shift));\n    return implode('', $shifted);\n}\n\nfunction candidate(...$args)\
    \ {\n    return circular_shift(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(100, 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(12, 2) !== \"12\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpzpbe5fc9.php:25\n\
    Stack trace:\n#0 /tmp/tmpzpbe5fc9.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpzpbe5fc9.php\
    \ on line 25\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $s = strval($x);\n    $n = strlen($s);\n    $shift = $shift % $n;\n    if\
    \ ($shift == 0) {\n        return $s;\n    }\n    return substr($s, $shift) .\
    \ substr($s, 0, $shift);\n}\n\nfunction candidate(...$args) {\n    return circular_shift(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp5wkdszrs.php:24\n\
    Stack trace:\n#0 /tmp/tmp5wkdszrs.php(31): test()\n#1 {main}\n  thrown in /tmp/tmp5wkdszrs.php\
    \ on line 24\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $x = strval($x);\n    $len = strlen($x);\n    if ($shift >= $len) {\n   \
    \     return strrev($x);\n    }\n    return substr($x, $shift) . substr($x, 0,\
    \ $shift);\n}\n\nfunction candidate(...$args) {\n    return circular_shift(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpz7a1sbe8.php:23\n\
    Stack trace:\n#0 /tmp/tmpz7a1sbe8.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpz7a1sbe8.php\
    \ on line 23\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $digits = str_split($x);\n    $num_digits = count($digits);\n    $shift =\
    \ $shift % $num_digits;\n    if ($shift == 0) {\n        return $x;\n    } else\
    \ {\n        return implode(array_merge(array_slice($digits, $shift), array_slice($digits,\
    \ 0, $shift)));\n    }\n}\n\nfunction candidate(...$args) {\n    return circular_shift(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmppgtwf6f5.php:25\n\
    Stack trace:\n#0 /tmp/tmppgtwf6f5.php(32): test()\n#1 {main}\n  thrown in /tmp/tmppgtwf6f5.php\
    \ on line 25\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $digits = str_split($x);\n    $n = count($digits);\n    if ($shift > $n)\
    \ {\n        return implode(array_reverse($digits));\n    }\n    $shifted = array_slice($digits,\
    \ $shift);\n    $shifted = array_merge($shifted, array_slice($digits, 0, $shift));\n\
    \    return implode($shifted);\n}\n\nfunction candidate(...$args) {\n    return\
    \ circular_shift(...$args);\n}\n\nfunction test(): void {\n    if (candidate(100,\
    \ 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12,\
    \ 2) !== \"12\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(97,\
    \ 8) !== \"79\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12,\
    \ 1) !== \"21\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(11,\
    \ 101) !== \"11\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp289u1ug7.php:25\n\
    Stack trace:\n#0 /tmp/tmp289u1ug7.php(32): test()\n#1 {main}\n  thrown in /tmp/tmp289u1ug7.php\
    \ on line 25\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $digits = str_split($x);\n    $n = count($digits);\n    if ($shift >= $n)\
    \ {\n        $digits = array_reverse($digits);\n    } else {\n        $digits\
    \ = array_merge(array_slice($digits, $shift), array_slice($digits, 0, $shift));\n\
    \    }\n    return implode('', $digits);\n}\n\nfunction candidate(...$args) {\n\
    \    return circular_shift(...$args);\n}\n\nfunction test(): void {\n    if (candidate(100,\
    \ 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12,\
    \ 2) !== \"12\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(97,\
    \ 8) !== \"79\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12,\
    \ 1) !== \"21\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(11,\
    \ 101) !== \"11\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp68ribo0g.php:25\n\
    Stack trace:\n#0 /tmp/tmp68ribo0g.php(32): test()\n#1 {main}\n  thrown in /tmp/tmp68ribo0g.php\
    \ on line 25\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $digits = str_split($x);\n    $digits_count = count($digits);\n    if ($shift\
    \ >= $digits_count) {\n        return implode('', array_reverse($digits));\n \
    \   }\n    $shifted = array_slice($digits, $shift);\n    $shifted = array_merge($shifted,\
    \ array_slice($digits, 0, $shift));\n    return implode('', $shifted);\n}\n\n\
    function candidate(...$args) {\n    return circular_shift(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp6ttw_rle.php:25\n\
    Stack trace:\n#0 /tmp/tmp6ttw_rle.php(32): test()\n#1 {main}\n  thrown in /tmp/tmp6ttw_rle.php\
    \ on line 25\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $digits = str_split($x);\n    $num_digits = count($digits);\n    if ($shift\
    \ > $num_digits) {\n        return implode('', array_reverse($digits));\n    }\n\
    \    $shifted = array_slice($digits, $shift);\n    $shifted = array_merge($shifted,\
    \ array_slice($digits, 0, $shift));\n    return implode('', $shifted);\n}\n\n\
    function candidate(...$args) {\n    return circular_shift(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpdnolv5l_.php:25\n\
    Stack trace:\n#0 /tmp/tmpdnolv5l_.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpdnolv5l_.php\
    \ on line 25\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $x = (string) $x;\n    $shift = (int) $shift;\n    $len = strlen($x);\n \
    \   if ($shift > $len) {\n        return strrev($x);\n    }\n    $left = substr($x,\
    \ 0, $len - $shift);\n    $right = substr($x, $len - $shift);\n    return $right\
    \ . $left;\n}\n\nfunction candidate(...$args) {\n    return circular_shift(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $digits = str_split($x);\n    $n = count($digits);\n    if ($shift > $n)\
    \ {\n        return implode(array_reverse($digits));\n    }\n    $shifted = array_merge(array_slice($digits,\
    \ $shift), array_slice($digits, 0, $shift));\n    return implode($shifted);\n\
    }\n\nfunction candidate(...$args) {\n    return circular_shift(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpjlt7zmau.php:24\n\
    Stack trace:\n#0 /tmp/tmpjlt7zmau.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpjlt7zmau.php\
    \ on line 24\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $x = (string) $x;\n    $len = strlen($x);\n    if ($shift >= $len) {\n  \
    \      return strrev($x);\n    }\n    $a = substr($x, 0, $len - $shift);\n   \
    \ $b = substr($x, $len - $shift);\n    return $b . $a;\n}\n\nfunction candidate(...$args)\
    \ {\n    return circular_shift(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(100, 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(12, 2) !== \"12\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpnh_k1ldk.php:26\n\
    Stack trace:\n#0 /tmp/tmpnh_k1ldk.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpnh_k1ldk.php\
    \ on line 26\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $digits = str_split($x);\n    $num_digits = count($digits);\n    if ($shift\
    \ > $num_digits) {\n        return implode(array_reverse($digits));\n    }\n \
    \   $new_digits = array_slice($digits, $shift);\n    $new_digits = array_merge($new_digits,\
    \ array_slice($digits, 0, $shift));\n    return implode($new_digits);\n}\n\nfunction\
    \ candidate(...$args) {\n    return circular_shift(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(100, 2) !== \"001\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpzyoi2jja.php:25\n\
    Stack trace:\n#0 /tmp/tmpzyoi2jja.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpzyoi2jja.php\
    \ on line 25\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $x = strval($x);\n    $len = strlen($x);\n    if ($shift > $len) {\n    \
    \    return strrev($x);\n    }\n    $left = substr($x, 0, $len - $shift);\n  \
    \  $right = substr($x, $len - $shift);\n    return $right . $left;\n}\n\nfunction\
    \ candidate(...$args) {\n    return circular_shift(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(100, 2) !== \"001\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $x = (string) $x;\n    $len = strlen($x);\n    if ($shift > $len) {\n   \
    \     return strrev($x);\n    }\n    $left = substr($x, 0, $len - $shift);\n \
    \   $right = substr($x, $len - $shift);\n    return $right . $left;\n}\n\nfunction\
    \ candidate(...$args) {\n    return circular_shift(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(100, 2) !== \"001\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $digits = str_split($x);\n    $num_digits = count($digits);\n    if ($shift\
    \ > $num_digits) {\n        return implode('', array_reverse($digits));\n    }\n\
    \    $shifted = array_merge(array_slice($digits, $shift), array_slice($digits,\
    \ 0, $shift));\n    return implode('', $shifted);\n}\n\nfunction candidate(...$args)\
    \ {\n    return circular_shift(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(100, 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(12, 2) !== \"12\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmphdjmbd_x.php:24\n\
    Stack trace:\n#0 /tmp/tmphdjmbd_x.php(31): test()\n#1 {main}\n  thrown in /tmp/tmphdjmbd_x.php\
    \ on line 24\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $x = (string) $x;\n    $len = strlen($x);\n    $shift = $shift % $len;\n\
    \    if ($shift == 0) {\n        return $x;\n    }\n    $x = substr($x, $shift)\
    \ . substr($x, 0, $shift);\n    return $x;\n}\n\nfunction candidate(...$args)\
    \ {\n    return circular_shift(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(100, 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(12, 2) !== \"12\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpthpdjbmt.php:25\n\
    Stack trace:\n#0 /tmp/tmpthpdjbmt.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpthpdjbmt.php\
    \ on line 25\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $x = (string) $x;\n    $len = strlen($x);\n    if ($shift > $len) {\n   \
    \     return strrev($x);\n    }\n    $a = substr($x, 0, $len - $shift);\n    $b\
    \ = substr($x, $len - $shift);\n    return $b . $a;\n}\n\nfunction candidate(...$args)\
    \ {\n    return circular_shift(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(100, 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(12, 2) !== \"12\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $digits = str_split($x);\n    $num_digits = count($digits);\n    if ($shift\
    \ > $num_digits) {\n        return implode('', array_reverse($digits));\n    }\n\
    \    $shifted = array_slice($digits, $shift);\n    $shifted = array_merge($shifted,\
    \ array_slice($digits, 0, $shift));\n    return implode('', $shifted);\n}\n\n\
    function candidate(...$args) {\n    return circular_shift(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp2nop_aoi.php:25\n\
    Stack trace:\n#0 /tmp/tmp2nop_aoi.php(32): test()\n#1 {main}\n  thrown in /tmp/tmp2nop_aoi.php\
    \ on line 25\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $x = (string) $x;\n    $len = strlen($x);\n    if ($shift > $len) {\n   \
    \     return strrev($x);\n    }\n    $left = substr($x, 0, $len - $shift);\n \
    \   $right = substr($x, $len - $shift);\n    return $right . $left;\n}\n\nfunction\
    \ candidate(...$args) {\n    return circular_shift(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(100, 2) !== \"001\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $x = (string) $x;\n    $len = strlen($x);\n    if ($shift > $len) {\n   \
    \     return strrev($x);\n    }\n    $right = substr($x, 0, $len - $shift);\n\
    \    $left = substr($x, $len - $shift);\n    return $left . $right;\n}\n\nfunction\
    \ candidate(...$args) {\n    return circular_shift(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(100, 2) !== \"001\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $digits = str_split($x);\n    $digits_count = count($digits);\n    if ($shift\
    \ > $digits_count) {\n        return implode('', array_reverse($digits));\n  \
    \  }\n    $shifted_digits = array_slice($digits, $shift);\n    $shifted_digits\
    \ = array_merge($shifted_digits, array_slice($digits, 0, $shift));\n    return\
    \ implode('', $shifted_digits);\n}\n\nfunction candidate(...$args) {\n    return\
    \ circular_shift(...$args);\n}\n\nfunction test(): void {\n    if (candidate(100,\
    \ 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12,\
    \ 2) !== \"12\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(97,\
    \ 8) !== \"79\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12,\
    \ 1) !== \"21\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(11,\
    \ 101) !== \"11\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmprl5f8te4.php:25\n\
    Stack trace:\n#0 /tmp/tmprl5f8te4.php(32): test()\n#1 {main}\n  thrown in /tmp/tmprl5f8te4.php\
    \ on line 25\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \  $digits = str_split($x);\n  $digits_count = count($digits);\n  $shift = $shift\
    \ % $digits_count;\n  if ($shift == 0) {\n    return $x;\n  }\n  $shifted_digits\
    \ = array_merge(array_slice($digits, $shift), array_slice($digits, 0, $shift));\n\
    \  return implode('', $shifted_digits);\n}\n\nfunction candidate(...$args) {\n\
    \    return circular_shift(...$args);\n}\n\nfunction test(): void {\n    if (candidate(100,\
    \ 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12,\
    \ 2) !== \"12\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(97,\
    \ 8) !== \"79\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12,\
    \ 1) !== \"21\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(11,\
    \ 101) !== \"11\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpk6gm2kgu.php:25\n\
    Stack trace:\n#0 /tmp/tmpk6gm2kgu.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpk6gm2kgu.php\
    \ on line 25\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $x = (string) $x;\n    $len = strlen($x);\n    if ($shift > $len) {\n   \
    \     return strrev($x);\n    }\n    $first = substr($x, 0, $len - $shift);\n\
    \    $last = substr($x, $len - $shift);\n    return $last . $first;\n}\n\nfunction\
    \ candidate(...$args) {\n    return circular_shift(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(100, 2) !== \"001\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \  $x = (string)$x;\n  $len = strlen($x);\n  if ($shift >= $len) {\n    return\
    \ strrev($x);\n  }\n  return substr($x, $len - $shift) . substr($x, 0, $len -\
    \ $shift);\n}\n\nfunction candidate(...$args) {\n    return circular_shift(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp9n_hcct2.php:24\n\
    Stack trace:\n#0 /tmp/tmp9n_hcct2.php(30): test()\n#1 {main}\n  thrown in /tmp/tmp9n_hcct2.php\
    \ on line 24\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $x = (string) $x;\n    $len = strlen($x);\n    if ($shift > $len) {\n   \
    \     return strrev($x);\n    }\n    $a = substr($x, 0, $len - $shift);\n    $b\
    \ = substr($x, $len - $shift);\n    return $b . $a;\n}\n\nfunction candidate(...$args)\
    \ {\n    return circular_shift(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(100, 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(12, 2) !== \"12\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $digits = str_split($x);\n    $n = count($digits);\n    if ($shift > $n)\
    \ {\n        $digits = array_reverse($digits);\n    } else {\n        $digits\
    \ = array_merge(array_slice($digits, $shift), array_slice($digits, 0, $shift));\n\
    \    }\n    return implode('', $digits);\n}\n\nfunction candidate(...$args) {\n\
    \    return circular_shift(...$args);\n}\n\nfunction test(): void {\n    if (candidate(100,\
    \ 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12,\
    \ 2) !== \"12\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(97,\
    \ 8) !== \"79\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12,\
    \ 1) !== \"21\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(11,\
    \ 101) !== \"11\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpjtii2cql.php:25\n\
    Stack trace:\n#0 /tmp/tmpjtii2cql.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpjtii2cql.php\
    \ on line 25\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $x = (string) $x;\n    $len = strlen($x);\n    if ($shift > $len) {\n   \
    \     return strrev($x);\n    }\n    $a = substr($x, 0, $len - $shift);\n    $b\
    \ = substr($x, $len - $shift);\n    return $b . $a;\n}\n\nfunction candidate(...$args)\
    \ {\n    return circular_shift(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(100, 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(12, 2) !== \"12\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $x = (string) $x;\n    $len = strlen($x);\n    if ($shift > $len) {\n   \
    \     return strrev($x);\n    }\n    $y = substr($x, $len - $shift) . substr($x,\
    \ 0, $len - $shift);\n    return $y;\n}\n\nfunction candidate(...$args) {\n  \
    \  return circular_shift(...$args);\n}\n\nfunction test(): void {\n    if (candidate(100,\
    \ 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12,\
    \ 2) !== \"12\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(97,\
    \ 8) !== \"79\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12,\
    \ 1) !== \"21\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(11,\
    \ 101) !== \"11\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $x = (string) $x;\n    $shift = (int) $shift;\n    $len = strlen($x);\n \
    \   if ($shift >= $len) {\n        return strrev($x);\n    }\n    $x = substr($x,\
    \ $shift) . substr($x, 0, $shift);\n    return $x;\n}\n\nfunction candidate(...$args)\
    \ {\n    return circular_shift(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(100, 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(12, 2) !== \"12\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpzrwl75z4.php:25\n\
    Stack trace:\n#0 /tmp/tmpzrwl75z4.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpzrwl75z4.php\
    \ on line 25\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $x = (string) $x;\n    $len = strlen($x);\n    if ($shift > $len) {\n   \
    \     return strrev($x);\n    }\n    $x = substr($x, $shift) . substr($x, 0, $shift);\n\
    \    return $x;\n}\n\nfunction candidate(...$args) {\n    return circular_shift(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpnjy2eojr.php:24\n\
    Stack trace:\n#0 /tmp/tmpnjy2eojr.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpnjy2eojr.php\
    \ on line 24\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $digits = str_split($x);\n    $n = count($digits);\n    if ($shift > $n)\
    \ {\n        return implode('', array_reverse($digits));\n    }\n    $a = array_slice($digits,\
    \ $shift);\n    $b = array_slice($digits, 0, $shift);\n    return implode('',\
    \ array_merge($a, $b));\n}\n\nfunction candidate(...$args) {\n    return circular_shift(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpym70h06d.php:25\n\
    Stack trace:\n#0 /tmp/tmpym70h06d.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpym70h06d.php\
    \ on line 25\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $x = (string) $x;\n    $len = strlen($x);\n    if ($shift > $len) {\n   \
    \     return strrev($x);\n    }\n    $y = substr($x, $len - $shift) . substr($x,\
    \ 0, $len - $shift);\n    return $y;\n}\n\nfunction candidate(...$args) {\n  \
    \  return circular_shift(...$args);\n}\n\nfunction test(): void {\n    if (candidate(100,\
    \ 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12,\
    \ 2) !== \"12\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(97,\
    \ 8) !== \"79\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12,\
    \ 1) !== \"21\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(11,\
    \ 101) !== \"11\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $digits = str_split($x);\n    $n = count($digits);\n    if ($shift > $n)\
    \ {\n        return implode(array_reverse($digits));\n    }\n    $result = array_merge(array_slice($digits,\
    \ $shift), array_slice($digits, 0, $shift));\n    return implode($result);\n}\n\
    \nfunction candidate(...$args) {\n    return circular_shift(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp6b0cpqdz.php:24\n\
    Stack trace:\n#0 /tmp/tmp6b0cpqdz.php(31): test()\n#1 {main}\n  thrown in /tmp/tmp6b0cpqdz.php\
    \ on line 24\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $x = (string) $x;\n    $shift = (int) $shift;\n    $len = strlen($x);\n \
    \   if ($shift > $len) {\n        return strrev($x);\n    }\n    $left = substr($x,\
    \ 0, $len - $shift);\n    $right = substr($x, $len - $shift);\n    return $right\
    \ . $left;\n}\n\nfunction candidate(...$args) {\n    return circular_shift(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $x_str = strval($x);\n    $x_len = strlen($x_str);\n    if ($shift >= $x_len)\
    \ {\n        return strrev($x_str);\n    }\n    $x_str_arr = str_split($x_str);\n\
    \    $x_str_arr = array_merge(array_slice($x_str_arr, $shift), array_slice($x_str_arr,\
    \ 0, $shift));\n    return implode($x_str_arr);\n}\n\nfunction candidate(...$args)\
    \ {\n    return circular_shift(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(100, 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(12, 2) !== \"12\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpqvytxs1p.php:25\n\
    Stack trace:\n#0 /tmp/tmpqvytxs1p.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpqvytxs1p.php\
    \ on line 25\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \  $x = (string)$x;\n  $shift = (int)$shift;\n  if ($shift > strlen($x)) {\n \
    \   return strrev($x);\n  }\n  return substr($x, $shift) . substr($x, 0, $shift);\n\
    }\n\nfunction candidate(...$args) {\n    return circular_shift(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpvdgwx5x8.php:23\n\
    Stack trace:\n#0 /tmp/tmpvdgwx5x8.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpvdgwx5x8.php\
    \ on line 23\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $x = (string) $x;\n    $shift = (int) $shift;\n    if ($shift > strlen($x))\
    \ {\n        return strrev($x);\n    }\n    $y = substr($x, $shift);\n    $z =\
    \ substr($x, 0, $shift);\n    return $y . $z;\n}\n\nfunction candidate(...$args)\
    \ {\n    return circular_shift(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(100, 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(12, 2) !== \"12\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpucu4jzo8.php:25\n\
    Stack trace:\n#0 /tmp/tmpucu4jzo8.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpucu4jzo8.php\
    \ on line 25\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $x = (string) $x;\n    $len = strlen($x);\n    if ($shift >= $len) {\n  \
    \      return strrev($x);\n    }\n    $left = substr($x, 0, $len - $shift);\n\
    \    $right = substr($x, $len - $shift);\n    return $right . $left;\n}\n\nfunction\
    \ candidate(...$args) {\n    return circular_shift(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(100, 2) !== \"001\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp3rm73_fi.php:26\n\
    Stack trace:\n#0 /tmp/tmp3rm73_fi.php(32): test()\n#1 {main}\n  thrown in /tmp/tmp3rm73_fi.php\
    \ on line 26\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $x_str = strval($x);\n    $x_len = strlen($x_str);\n    if ($shift >= $x_len)\
    \ {\n        return strrev($x_str);\n    }\n    $x_str = substr($x_str, $shift)\
    \ . substr($x_str, 0, $shift);\n    return $x_str;\n}\n\nfunction candidate(...$args)\
    \ {\n    return circular_shift(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(100, 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(12, 2) !== \"12\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp7djmepta.php:24\n\
    Stack trace:\n#0 /tmp/tmp7djmepta.php(31): test()\n#1 {main}\n  thrown in /tmp/tmp7djmepta.php\
    \ on line 24\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $x_str = (string)$x;\n    $x_len = strlen($x_str);\n    if ($shift >= $x_len)\
    \ {\n        return strrev($x_str);\n    }\n    $x_str_arr = str_split($x_str);\n\
    \    $x_str_arr = array_reverse($x_str_arr);\n    $x_str_arr = array_slice($x_str_arr,\
    \ 0, $shift);\n    $x_str_arr = array_reverse($x_str_arr);\n    $x_str_arr = array_merge($x_str_arr,\
    \ str_split(strrev($x_str)));\n    $x_str_arr = array_slice($x_str_arr, 0, $x_len);\n\
    \    return implode('', $x_str_arr);\n}\n\nfunction candidate(...$args) {\n  \
    \  return circular_shift(...$args);\n}\n\nfunction test(): void {\n    if (candidate(100,\
    \ 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12,\
    \ 2) !== \"12\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(97,\
    \ 8) !== \"79\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12,\
    \ 1) !== \"21\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(11,\
    \ 101) !== \"11\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp6vu5bn_x.php:29\n\
    Stack trace:\n#0 /tmp/tmp6vu5bn_x.php(36): test()\n#1 {main}\n  thrown in /tmp/tmp6vu5bn_x.php\
    \ on line 29\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $digits = str_split($x);\n    $digits_length = count($digits);\n    if ($shift\
    \ >= $digits_length) {\n        return implode('', array_reverse($digits));\n\
    \    }\n    $first_part = array_slice($digits, $shift);\n    $second_part = array_slice($digits,\
    \ 0, $shift);\n    return implode('', array_merge($first_part, $second_part));\n\
    }\n\nfunction candidate(...$args) {\n    return circular_shift(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmptvimrxot.php:25\n\
    Stack trace:\n#0 /tmp/tmptvimrxot.php(32): test()\n#1 {main}\n  thrown in /tmp/tmptvimrxot.php\
    \ on line 25\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $x = (string) $x;\n    $shift = (int) $shift;\n    $len = strlen($x);\n \
    \   if ($shift > $len) {\n        return strrev($x);\n    }\n    $left = substr($x,\
    \ 0, $len - $shift);\n    $right = substr($x, $len - $shift);\n    return $right\
    \ . $left;\n}\n\nfunction candidate(...$args) {\n    return circular_shift(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $x_str = (string)$x;\n    $x_len = strlen($x_str);\n    if ($shift >= $x_len)\
    \ {\n        return strrev($x_str);\n    }\n    $x_str_1 = substr($x_str, 0, $shift);\n\
    \    $x_str_2 = substr($x_str, $shift);\n    return $x_str_2 . $x_str_1;\n}\n\n\
    function candidate(...$args) {\n    return circular_shift(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpb6pjms5q.php:25\n\
    Stack trace:\n#0 /tmp/tmpb6pjms5q.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpb6pjms5q.php\
    \ on line 25\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $x = (string) $x;\n    $len = strlen($x);\n    if ($shift >= $len) {\n  \
    \      return strrev($x);\n    }\n    $y = substr($x, $shift) . substr($x, 0,\
    \ $shift);\n    return $y;\n}\n\nfunction candidate(...$args) {\n    return circular_shift(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpego6kvgq.php:24\n\
    Stack trace:\n#0 /tmp/tmpego6kvgq.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpego6kvgq.php\
    \ on line 24\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $digits = strlen($x);\n    if ($shift > $digits) {\n        return strrev($x);\n\
    \    }\n    $left = substr($x, 0, $shift);\n    $right = substr($x, $shift);\n\
    \    return $right . $left;\n}\n\nfunction candidate(...$args) {\n    return circular_shift(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp768gcrx_.php:24\n\
    Stack trace:\n#0 /tmp/tmp768gcrx_.php(31): test()\n#1 {main}\n  thrown in /tmp/tmp768gcrx_.php\
    \ on line 24\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $digits = str_split($x);\n    $n = count($digits);\n    if ($shift >= $n)\
    \ {\n        return implode('', array_reverse($digits));\n    }\n    $shifted\
    \ = array_slice($digits, $shift);\n    $shifted = array_merge($shifted, array_slice($digits,\
    \ 0, $shift));\n    return implode('', $shifted);\n}\n\nfunction candidate(...$args)\
    \ {\n    return circular_shift(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(100, 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(12, 2) !== \"12\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpoj0129ky.php:25\n\
    Stack trace:\n#0 /tmp/tmpoj0129ky.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpoj0129ky.php\
    \ on line 25\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $x = (string) $x;\n    $len = strlen($x);\n    if ($shift >= $len) {\n  \
    \      return strrev($x);\n    }\n    $a = substr($x, 0, $len - $shift);\n   \
    \ $b = substr($x, $len - $shift);\n    return $b . $a;\n}\n\nfunction candidate(...$args)\
    \ {\n    return circular_shift(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(100, 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(12, 2) !== \"12\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpnw3ijeiy.php:26\n\
    Stack trace:\n#0 /tmp/tmpnw3ijeiy.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpnw3ijeiy.php\
    \ on line 26\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $digits = str_split($x);\n    $num_digits = count($digits);\n    if ($shift\
    \ >= $num_digits) {\n        return implode('', array_reverse($digits));\n   \
    \ }\n    $shifted = array_slice($digits, $shift);\n    $shifted = array_merge($shifted,\
    \ array_slice($digits, 0, $shift));\n    return implode('', $shifted);\n}\n\n\
    function candidate(...$args) {\n    return circular_shift(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp3zx34mxd.php:25\n\
    Stack trace:\n#0 /tmp/tmp3zx34mxd.php(32): test()\n#1 {main}\n  thrown in /tmp/tmp3zx34mxd.php\
    \ on line 25\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $digits = str_split($x);\n    $num_digits = count($digits);\n    if ($shift\
    \ >= $num_digits) {\n        return implode(array_reverse($digits));\n    }\n\
    \    $shifted = array_slice($digits, $shift);\n    $shifted = array_merge($shifted,\
    \ array_slice($digits, 0, $shift));\n    return implode($shifted);\n}\n\nfunction\
    \ candidate(...$args) {\n    return circular_shift(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(100, 2) !== \"001\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpdeh6879o.php:25\n\
    Stack trace:\n#0 /tmp/tmpdeh6879o.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpdeh6879o.php\
    \ on line 25\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $x = (string) $x;\n    $len = strlen($x);\n    if ($shift > $len) {\n   \
    \     return strrev($x);\n    }\n    $left = substr($x, 0, $len - $shift);\n \
    \   $right = substr($x, $len - $shift);\n    return $right . $left;\n}\n\nfunction\
    \ candidate(...$args) {\n    return circular_shift(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(100, 2) !== \"001\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $digits = str_split($x);\n    $len = count($digits);\n    if ($shift >= $len)\
    \ {\n        return implode(array_reverse($digits));\n    }\n    $new_digits =\
    \ array_merge(array_slice($digits, $shift), array_slice($digits, 0, $shift));\n\
    \    return implode($new_digits);\n}\n\nfunction candidate(...$args) {\n    return\
    \ circular_shift(...$args);\n}\n\nfunction test(): void {\n    if (candidate(100,\
    \ 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12,\
    \ 2) !== \"12\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(97,\
    \ 8) !== \"79\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12,\
    \ 1) !== \"21\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(11,\
    \ 101) !== \"11\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpz6_vxsmn.php:24\n\
    Stack trace:\n#0 /tmp/tmpz6_vxsmn.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpz6_vxsmn.php\
    \ on line 24\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $x = (string) $x;\n    $shift = (int) $shift;\n    $len = strlen($x);\n \
    \   if ($shift >= $len) {\n        return strrev($x);\n    }\n    $shift = $len\
    \ - $shift;\n    return substr($x, $shift) . substr($x, 0, $shift);\n}\n\nfunction\
    \ candidate(...$args) {\n    return circular_shift(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(100, 2) !== \"001\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpr4cvouou.php:26\n\
    Stack trace:\n#0 /tmp/tmpr4cvouou.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpr4cvouou.php\
    \ on line 26\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $x_str = strval($x);\n    $x_len = strlen($x_str);\n    if ($shift > $x_len)\
    \ {\n        return strrev($x_str);\n    }\n    $x_str_arr = str_split($x_str);\n\
    \    $x_str_arr = array_merge(array_slice($x_str_arr, $shift), array_slice($x_str_arr,\
    \ 0, $shift));\n    return implode('', $x_str_arr);\n}\n\nfunction candidate(...$args)\
    \ {\n    return circular_shift(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(100, 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(12, 2) !== \"12\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpih8d6hj7.php:25\n\
    Stack trace:\n#0 /tmp/tmpih8d6hj7.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpih8d6hj7.php\
    \ on line 25\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $x = (string) $x;\n    $len = strlen($x);\n    if ($shift >= $len) {\n  \
    \      return strrev($x);\n    }\n    $left = substr($x, 0, $len - $shift);\n\
    \    $right = substr($x, $len - $shift);\n    return $right . $left;\n}\n\nfunction\
    \ candidate(...$args) {\n    return circular_shift(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(100, 2) !== \"001\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpd6ipzx_m.php:26\n\
    Stack trace:\n#0 /tmp/tmpd6ipzx_m.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpd6ipzx_m.php\
    \ on line 26\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $x = (string) $x;\n    $len = strlen($x);\n    if ($shift >= $len) {\n  \
    \      return strrev($x);\n    }\n    $x = substr($x, $shift) . substr($x, 0,\
    \ $shift);\n    return $x;\n}\n\nfunction candidate(...$args) {\n    return circular_shift(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpq91vq798.php:24\n\
    Stack trace:\n#0 /tmp/tmpq91vq798.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpq91vq798.php\
    \ on line 24\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $x = (string) $x;\n    $len = strlen($x);\n    if ($shift > $len) {\n   \
    \     return strrev($x);\n    }\n    return substr($x, $len - $shift) . substr($x,\
    \ 0, $len - $shift);\n}\n\nfunction candidate(...$args) {\n    return circular_shift(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $x = (string) $x;\n    $len = strlen($x);\n    if ($shift > $len) {\n   \
    \     return strrev($x);\n    }\n    $left = substr($x, 0, $len - $shift);\n \
    \   $right = substr($x, $len - $shift);\n    return $right . $left;\n}\n\nfunction\
    \ candidate(...$args) {\n    return circular_shift(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(100, 2) !== \"001\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $digits = str_split($x);\n    $n = count($digits);\n    if ($shift > $n)\
    \ {\n        return implode('', array_reverse($digits));\n    }\n    $result =\
    \ array_slice($digits, $shift);\n    $result = array_merge($result, array_slice($digits,\
    \ 0, $shift));\n    return implode('', $result);\n}\n\nfunction candidate(...$args)\
    \ {\n    return circular_shift(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(100, 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(12, 2) !== \"12\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmppu69ctai.php:25\n\
    Stack trace:\n#0 /tmp/tmppu69ctai.php(32): test()\n#1 {main}\n  thrown in /tmp/tmppu69ctai.php\
    \ on line 25\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $x = (string) $x;\n    $len = strlen($x);\n    if ($shift >= $len) {\n  \
    \      return strrev($x);\n    }\n    $y = substr($x, $shift);\n    $y .= substr($x,\
    \ 0, $shift);\n    return $y;\n}\n\nfunction candidate(...$args) {\n    return\
    \ circular_shift(...$args);\n}\n\nfunction test(): void {\n    if (candidate(100,\
    \ 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12,\
    \ 2) !== \"12\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(97,\
    \ 8) !== \"79\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12,\
    \ 1) !== \"21\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(11,\
    \ 101) !== \"11\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpcbfx8nvf.php:25\n\
    Stack trace:\n#0 /tmp/tmpcbfx8nvf.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpcbfx8nvf.php\
    \ on line 25\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $x = (string) $x;\n    $len = strlen($x);\n    if ($shift > $len) {\n   \
    \     return strrev($x);\n    }\n    $x = substr($x, $shift) . substr($x, 0, $shift);\n\
    \    return $x;\n}\n\nfunction candidate(...$args) {\n    return circular_shift(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpo_sjrxbj.php:24\n\
    Stack trace:\n#0 /tmp/tmpo_sjrxbj.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpo_sjrxbj.php\
    \ on line 24\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $digits = str_split($x);\n    $digits_count = count($digits);\n    if ($shift\
    \ > $digits_count) {\n        return implode(array_reverse($digits));\n    }\n\
    \    $shifted_digits = array_slice($digits, $shift);\n    $shifted_digits = array_merge($shifted_digits,\
    \ array_slice($digits, 0, $shift));\n    return implode($shifted_digits);\n}\n\
    \nfunction candidate(...$args) {\n    return circular_shift(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp1e3xpv_v.php:25\n\
    Stack trace:\n#0 /tmp/tmp1e3xpv_v.php(32): test()\n#1 {main}\n  thrown in /tmp/tmp1e3xpv_v.php\
    \ on line 25\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $digits = str_split($x);\n    $shift = $shift % count($digits);\n    $digits\
    \ = array_merge(array_slice($digits, $shift), array_slice($digits, 0, $shift));\n\
    \    return implode($digits);\n}\n\nfunction candidate(...$args) {\n    return\
    \ circular_shift(...$args);\n}\n\nfunction test(): void {\n    if (candidate(100,\
    \ 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12,\
    \ 2) !== \"12\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(97,\
    \ 8) !== \"79\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12,\
    \ 1) !== \"21\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(11,\
    \ 101) !== \"11\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmps_l02gqz.php:21\n\
    Stack trace:\n#0 /tmp/tmps_l02gqz.php(28): test()\n#1 {main}\n  thrown in /tmp/tmps_l02gqz.php\
    \ on line 21\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $x_str = strval($x);\n    $x_len = strlen($x_str);\n    if ($shift > $x_len)\
    \ {\n        return strrev($x_str);\n    }\n    $x_shift = substr($x_str, $shift)\
    \ . substr($x_str, 0, $shift);\n    return $x_shift;\n}\n\nfunction candidate(...$args)\
    \ {\n    return circular_shift(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(100, 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(12, 2) !== \"12\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp1po7drhg.php:24\n\
    Stack trace:\n#0 /tmp/tmp1po7drhg.php(31): test()\n#1 {main}\n  thrown in /tmp/tmp1po7drhg.php\
    \ on line 24\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $x_str = (string)$x;\n    $x_len = strlen($x_str);\n    if ($shift >= $x_len)\
    \ {\n        return strrev($x_str);\n    }\n    return substr($x_str, $shift)\
    \ . substr($x_str, 0, $shift);\n}\n\nfunction candidate(...$args) {\n    return\
    \ circular_shift(...$args);\n}\n\nfunction test(): void {\n    if (candidate(100,\
    \ 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12,\
    \ 2) !== \"12\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(97,\
    \ 8) !== \"79\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12,\
    \ 1) !== \"21\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(11,\
    \ 101) !== \"11\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpv3odtbla.php:23\n\
    Stack trace:\n#0 /tmp/tmpv3odtbla.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpv3odtbla.php\
    \ on line 23\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $x = (string) $x;\n    $shift = (int) $shift;\n    $len = strlen($x);\n \
    \   $shift = $shift % $len;\n    if ($shift == 0) {\n        return $x;\n    }\n\
    \    $y = substr($x, $shift);\n    $y .= substr($x, 0, $shift);\n    return $y;\n\
    }\n\nfunction candidate(...$args) {\n    return circular_shift(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp214gajev.php:27\n\
    Stack trace:\n#0 /tmp/tmp214gajev.php(34): test()\n#1 {main}\n  thrown in /tmp/tmp214gajev.php\
    \ on line 27\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $x = strval($x);\n    $len = strlen($x);\n    if ($shift >= $len) {\n   \
    \     return strrev($x);\n    }\n    $left = substr($x, 0, $len - $shift);\n \
    \   $right = substr($x, $len - $shift);\n    return $right . $left;\n}\n\nfunction\
    \ candidate(...$args) {\n    return circular_shift(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(100, 2) !== \"001\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmps7qr10sa.php:26\n\
    Stack trace:\n#0 /tmp/tmps7qr10sa.php(32): test()\n#1 {main}\n  thrown in /tmp/tmps7qr10sa.php\
    \ on line 26\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $digits = str_split($x);\n    $num_digits = count($digits);\n    if ($shift\
    \ >= $num_digits) {\n        return implode(array_reverse($digits));\n    }\n\
    \    $shifted = array_slice($digits, $shift);\n    $shifted = array_merge($shifted,\
    \ array_slice($digits, 0, $shift));\n    return implode($shifted);\n}\n\nfunction\
    \ candidate(...$args) {\n    return circular_shift(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(100, 2) !== \"001\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpljgzvscj.php:25\n\
    Stack trace:\n#0 /tmp/tmpljgzvscj.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpljgzvscj.php\
    \ on line 25\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $x = (string) $x;\n    $len = strlen($x);\n    if ($shift >= $len) {\n  \
    \      return strrev($x);\n    }\n    $a = substr($x, 0, $len - $shift);\n   \
    \ $b = substr($x, $len - $shift);\n    return $b . $a;\n}\n\nfunction candidate(...$args)\
    \ {\n    return circular_shift(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(100, 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(12, 2) !== \"12\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpsun2kdds.php:26\n\
    Stack trace:\n#0 /tmp/tmpsun2kdds.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpsun2kdds.php\
    \ on line 26\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $x = (string) $x;\n    $len = strlen($x);\n    if ($shift > $len) {\n   \
    \     return strrev($x);\n    }\n    $left = substr($x, 0, $len - $shift);\n \
    \   $right = substr($x, $len - $shift);\n    return $right . $left;\n}\n\nfunction\
    \ candidate(...$args) {\n    return circular_shift(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(100, 2) !== \"001\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $digits = str_split($x);\n    $digits_count = count($digits);\n    $shift\
    \ = $shift % $digits_count;\n    if ($shift == 0) {\n        return $x;\n    }\n\
    \    $digits = array_reverse($digits);\n    $digits = array_merge(array_slice($digits,\
    \ 0, $shift), array_slice($digits, $shift));\n    $digits = array_reverse($digits);\n\
    \    return implode('', $digits);\n}\n\nfunction candidate(...$args) {\n    return\
    \ circular_shift(...$args);\n}\n\nfunction test(): void {\n    if (candidate(100,\
    \ 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12,\
    \ 2) !== \"12\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(97,\
    \ 8) !== \"79\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12,\
    \ 1) !== \"21\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(11,\
    \ 101) !== \"11\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpgszs8m32.php:27\n\
    Stack trace:\n#0 /tmp/tmpgszs8m32.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpgszs8m32.php\
    \ on line 27\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $digits = str_split($x);\n    $len = count($digits);\n    if ($shift > $len)\
    \ {\n        return implode('', array_reverse($digits));\n    }\n    $shifted\
    \ = array_slice($digits, $len - $shift);\n    $shifted = array_merge($shifted,\
    \ array_slice($digits, 0, $len - $shift));\n    return implode('', $shifted);\n\
    }\n\nfunction candidate(...$args) {\n    return circular_shift(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $x = (string) $x;\n    $len = strlen($x);\n    if ($shift > $len) {\n   \
    \     return strrev($x);\n    }\n    $left = substr($x, 0, $len - $shift);\n \
    \   $right = substr($x, $len - $shift);\n    return $right . $left;\n}\n\nfunction\
    \ candidate(...$args) {\n    return circular_shift(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(100, 2) !== \"001\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $x = (string) $x;\n    $len = strlen($x);\n    if ($shift >= $len) {\n  \
    \      return strrev($x);\n    }\n    $left = substr($x, 0, $len - $shift);\n\
    \    $right = substr($x, $len - $shift);\n    return $right . $left;\n}\n\nfunction\
    \ candidate(...$args) {\n    return circular_shift(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(100, 2) !== \"001\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpg7jyx0ap.php:26\n\
    Stack trace:\n#0 /tmp/tmpg7jyx0ap.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpg7jyx0ap.php\
    \ on line 26\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $digits = str_split($x);\n    $num_digits = count($digits);\n    if ($shift\
    \ >= $num_digits) {\n        return implode('', array_reverse($digits));\n   \
    \ }\n    $shifted = array_slice($digits, $shift);\n    $shifted = array_merge($shifted,\
    \ array_slice($digits, 0, $shift));\n    return implode('', $shifted);\n}\n\n\
    function candidate(...$args) {\n    return circular_shift(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpbonobyc0.php:25\n\
    Stack trace:\n#0 /tmp/tmpbonobyc0.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpbonobyc0.php\
    \ on line 25\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $x = (string) $x;\n    $shift = (int) $shift;\n    $len = strlen($x);\n \
    \   if ($shift > $len) {\n        return strrev($x);\n    }\n    return substr($x,\
    \ $shift) . substr($x, 0, $shift);\n}\n\nfunction candidate(...$args) {\n    return\
    \ circular_shift(...$args);\n}\n\nfunction test(): void {\n    if (candidate(100,\
    \ 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12,\
    \ 2) !== \"12\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(97,\
    \ 8) !== \"79\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12,\
    \ 1) !== \"21\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(11,\
    \ 101) !== \"11\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpxx6pc5za.php:24\n\
    Stack trace:\n#0 /tmp/tmpxx6pc5za.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpxx6pc5za.php\
    \ on line 24\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $digits = str_split($x);\n    $n = count($digits);\n    if ($shift >= $n)\
    \ {\n        $digits = array_reverse($digits);\n    } else {\n        $digits\
    \ = array_merge(array_slice($digits, $shift), array_slice($digits, 0, $shift));\n\
    \    }\n    return implode($digits);\n}\n\nfunction candidate(...$args) {\n  \
    \  return circular_shift(...$args);\n}\n\nfunction test(): void {\n    if (candidate(100,\
    \ 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12,\
    \ 2) !== \"12\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(97,\
    \ 8) !== \"79\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12,\
    \ 1) !== \"21\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(11,\
    \ 101) !== \"11\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpktdljgzz.php:25\n\
    Stack trace:\n#0 /tmp/tmpktdljgzz.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpktdljgzz.php\
    \ on line 25\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $x_str = strval($x);\n    $x_len = strlen($x_str);\n    $shift = $shift %\
    \ $x_len;\n    if ($shift == 0) {\n        return $x_str;\n    }\n    $x_str_rev\
    \ = strrev($x_str);\n    $x_str_rev_shifted = substr($x_str_rev, 0, $shift);\n\
    \    $x_str_rev_remainder = substr($x_str_rev, $shift);\n    $x_str_rev_shifted_rev\
    \ = strrev($x_str_rev_shifted);\n    $x_str_rev_remainder_rev = strrev($x_str_rev_remainder);\n\
    \    return $x_str_rev_shifted_rev . $x_str_rev_remainder_rev;\n}\n\nfunction\
    \ candidate(...$args) {\n    return circular_shift(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(100, 2) !== \"001\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpcisfjk_5.php:31\n\
    Stack trace:\n#0 /tmp/tmpcisfjk_5.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpcisfjk_5.php\
    \ on line 31\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $digits = str_split($x);\n    $num_digits = count($digits);\n    if ($shift\
    \ >= $num_digits) {\n        return implode('', array_reverse($digits));\n   \
    \ }\n    $shifted = array_slice($digits, $shift);\n    $shifted = array_merge($shifted,\
    \ array_slice($digits, 0, $shift));\n    return implode('', $shifted);\n}\n\n\
    function candidate(...$args) {\n    return circular_shift(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpc3ioszky.php:25\n\
    Stack trace:\n#0 /tmp/tmpc3ioszky.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpc3ioszky.php\
    \ on line 25\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $digits = str_split($x);\n    $num_digits = count($digits);\n    if ($shift\
    \ > $num_digits) {\n        $digits = array_reverse($digits);\n    } else {\n\
    \        $digits = array_merge(array_slice($digits, $shift), array_slice($digits,\
    \ 0, $shift));\n    }\n    return implode('', $digits);\n}\n\nfunction candidate(...$args)\
    \ {\n    return circular_shift(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(100, 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(12, 2) !== \"12\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp1z2cpimf.php:25\n\
    Stack trace:\n#0 /tmp/tmp1z2cpimf.php(32): test()\n#1 {main}\n  thrown in /tmp/tmp1z2cpimf.php\
    \ on line 25\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $x = (string) $x;\n    $len = strlen($x);\n    if ($shift >= $len) {\n  \
    \      return strrev($x);\n    }\n    $y = substr($x, $shift, $len - $shift);\n\
    \    $y .= substr($x, 0, $shift);\n    return $y;\n}\n\nfunction candidate(...$args)\
    \ {\n    return circular_shift(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(100, 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(12, 2) !== \"12\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpri5a5a1e.php:25\n\
    Stack trace:\n#0 /tmp/tmpri5a5a1e.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpri5a5a1e.php\
    \ on line 25\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \  $digits = str_split($x);\n  $shift = $shift % count($digits);\n  $digits =\
    \ array_merge(array_slice($digits, -$shift), array_slice($digits, 0, -$shift));\n\
    \  return implode('', $digits);\n}\n\nfunction candidate(...$args) {\n    return\
    \ circular_shift(...$args);\n}\n\nfunction test(): void {\n    if (candidate(100,\
    \ 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12,\
    \ 2) !== \"12\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(97,\
    \ 8) !== \"79\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12,\
    \ 1) !== \"21\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(11,\
    \ 101) !== \"11\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmprgjkhlbm.php:23\n\
    Stack trace:\n#0 /tmp/tmprgjkhlbm.php(28): test()\n#1 {main}\n  thrown in /tmp/tmprgjkhlbm.php\
    \ on line 23\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $x = (string) $x;\n    $len = strlen($x);\n    if ($shift > $len) {\n   \
    \     return strrev($x);\n    }\n    $left = substr($x, 0, $len - $shift);\n \
    \   $right = substr($x, $len - $shift);\n    return $right . $left;\n}\n\nfunction\
    \ candidate(...$args) {\n    return circular_shift(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(100, 2) !== \"001\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $x = (string) $x;\n    $len = strlen($x);\n    if ($shift > $len) {\n   \
    \     return strrev($x);\n    }\n    $a = substr($x, 0, $len - $shift);\n    $b\
    \ = substr($x, $len - $shift);\n    return $b . $a;\n}\n\nfunction candidate(...$args)\
    \ {\n    return circular_shift(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(100, 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(12, 2) !== \"12\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $x = (string) $x;\n    $len = strlen($x);\n    if ($shift > $len) {\n   \
    \     return strrev($x);\n    }\n    $left = substr($x, 0, $len - $shift);\n \
    \   $right = substr($x, $len - $shift);\n    return $right . $left;\n}\n\nfunction\
    \ candidate(...$args) {\n    return circular_shift(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(100, 2) !== \"001\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $str = strval($x);\n    $len = strlen($str);\n    if ($shift >= $len) {\n\
    \        return strrev($str);\n    }\n    $first = substr($str, 0, $len - $shift);\n\
    \    $last = substr($str, $len - $shift);\n    return $last . $first;\n}\n\nfunction\
    \ candidate(...$args) {\n    return circular_shift(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(100, 2) !== \"001\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp57caufk6.php:26\n\
    Stack trace:\n#0 /tmp/tmp57caufk6.php(32): test()\n#1 {main}\n  thrown in /tmp/tmp57caufk6.php\
    \ on line 26\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $digits = str_split($x);\n    $num_digits = count($digits);\n    if ($shift\
    \ >= $num_digits) {\n        return implode(array_reverse($digits));\n    }\n\
    \    $new_digits = array_merge(array_slice($digits, $shift), array_slice($digits,\
    \ 0, $shift));\n    return implode($new_digits);\n}\n\nfunction candidate(...$args)\
    \ {\n    return circular_shift(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(100, 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(12, 2) !== \"12\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpho67enw4.php:24\n\
    Stack trace:\n#0 /tmp/tmpho67enw4.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpho67enw4.php\
    \ on line 24\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $x = (string) $x;\n    $shift = (int) $shift;\n    if ($shift > strlen($x))\
    \ {\n        return strrev($x);\n    }\n    $x_arr = str_split($x);\n    $x_arr\
    \ = array_reverse($x_arr);\n    $x_arr = array_slice($x_arr, 0, $shift);\n   \
    \ $x_arr = array_reverse($x_arr);\n    $x_arr = array_merge($x_arr, str_split(strrev($x)));\n\
    \    return implode('', $x_arr);\n}\n\nfunction candidate(...$args) {\n    return\
    \ circular_shift(...$args);\n}\n\nfunction test(): void {\n    if (candidate(100,\
    \ 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12,\
    \ 2) !== \"12\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(97,\
    \ 8) !== \"79\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12,\
    \ 1) !== \"21\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(11,\
    \ 101) !== \"11\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpm_ucxm5j.php:28\n\
    Stack trace:\n#0 /tmp/tmpm_ucxm5j.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpm_ucxm5j.php\
    \ on line 28\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $digits = str_split($x);\n    $n = count($digits);\n    if ($shift >= $n)\
    \ {\n        return implode(array_reverse($digits));\n    }\n    $shifted = array_slice($digits,\
    \ $shift, $n - $shift);\n    $shifted = array_merge($shifted, array_slice($digits,\
    \ 0, $shift));\n    return implode($shifted);\n}\n\nfunction candidate(...$args)\
    \ {\n    return circular_shift(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(100, 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(12, 2) !== \"12\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpykmwmqpo.php:25\n\
    Stack trace:\n#0 /tmp/tmpykmwmqpo.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpykmwmqpo.php\
    \ on line 25\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $digits = str_split($x);\n    $num_digits = count($digits);\n    if ($shift\
    \ > $num_digits) {\n        return implode('', array_reverse($digits));\n    }\n\
    \    $shifted = array_merge(array_slice($digits, $shift), array_slice($digits,\
    \ 0, $shift));\n    return implode('', $shifted);\n}\n\nfunction candidate(...$args)\
    \ {\n    return circular_shift(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(100, 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(12, 2) !== \"12\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp0n2k1hva.php:24\n\
    Stack trace:\n#0 /tmp/tmp0n2k1hva.php(31): test()\n#1 {main}\n  thrown in /tmp/tmp0n2k1hva.php\
    \ on line 24\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $x = (string) $x;\n    $len = strlen($x);\n    if ($shift > $len) {\n   \
    \     return strrev($x);\n    }\n    $left = substr($x, 0, $len - $shift);\n \
    \   $right = substr($x, $len - $shift);\n    return $right . $left;\n}\n\nfunction\
    \ candidate(...$args) {\n    return circular_shift(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(100, 2) !== \"001\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $x = (string) $x;\n    $len = strlen($x);\n    if ($shift > $len) {\n   \
    \     return strrev($x);\n    }\n    return substr($x, $len - $shift) . substr($x,\
    \ 0, $len - $shift);\n}\n\nfunction candidate(...$args) {\n    return circular_shift(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $x = (string) $x;\n    $len = strlen($x);\n    if ($shift > $len) {\n   \
    \     return strrev($x);\n    }\n    $left = substr($x, 0, $len - $shift);\n \
    \   $right = substr($x, $len - $shift);\n    return $right . $left;\n}\n\nfunction\
    \ candidate(...$args) {\n    return circular_shift(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(100, 2) !== \"001\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $digits = str_split($x);\n    $len = count($digits);\n    if ($shift > $len)\
    \ {\n        return implode(array_reverse($digits));\n    }\n    $shifted = array_slice($digits,\
    \ $shift);\n    $shifted = array_merge($shifted, array_slice($digits, 0, $shift));\n\
    \    return implode($shifted);\n}\n\nfunction candidate(...$args) {\n    return\
    \ circular_shift(...$args);\n}\n\nfunction test(): void {\n    if (candidate(100,\
    \ 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12,\
    \ 2) !== \"12\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(97,\
    \ 8) !== \"79\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12,\
    \ 1) !== \"21\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(11,\
    \ 101) !== \"11\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpcc4_rp3o.php:25\n\
    Stack trace:\n#0 /tmp/tmpcc4_rp3o.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpcc4_rp3o.php\
    \ on line 25\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $x = (string) $x;\n    $len = strlen($x);\n    if ($shift >= $len) {\n  \
    \      return strrev($x);\n    }\n    $left = substr($x, 0, $len - $shift);\n\
    \    $right = substr($x, $len - $shift);\n    return $right . $left;\n}\n\nfunction\
    \ candidate(...$args) {\n    return circular_shift(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(100, 2) !== \"001\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpiki9lm_6.php:26\n\
    Stack trace:\n#0 /tmp/tmpiki9lm_6.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpiki9lm_6.php\
    \ on line 26\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $x = (string) $x;\n    $len = strlen($x);\n    if ($shift > $len) {\n   \
    \     return strrev($x);\n    }\n    return substr($x, $len - $shift) . substr($x,\
    \ 0, $len - $shift);\n}\n\nfunction candidate(...$args) {\n    return circular_shift(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $x = (string) $x;\n    $len = strlen($x);\n    if ($shift > $len) {\n   \
    \     return strrev($x);\n    }\n    $y = substr($x, $len - $shift) . substr($x,\
    \ 0, $len - $shift);\n    return $y;\n}\n\nfunction candidate(...$args) {\n  \
    \  return circular_shift(...$args);\n}\n\nfunction test(): void {\n    if (candidate(100,\
    \ 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12,\
    \ 2) !== \"12\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(97,\
    \ 8) !== \"79\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12,\
    \ 1) !== \"21\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(11,\
    \ 101) !== \"11\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $x = (string) $x;\n    $shift = (int) $shift;\n    $len = strlen($x);\n \
    \   if ($shift > $len) {\n        return strrev($x);\n    }\n    $first = substr($x,\
    \ 0, $len - $shift);\n    $last = substr($x, $len - $shift);\n    return $last\
    \ . $first;\n}\n\nfunction candidate(...$args) {\n    return circular_shift(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $digits = str_split($x);\n    $n = count($digits);\n    if ($shift >= $n)\
    \ {\n        return implode('', array_reverse($digits));\n    }\n    $right =\
    \ array_slice($digits, $shift);\n    $left = array_slice($digits, 0, $shift);\n\
    \    return implode('', array_merge($right, $left));\n}\n\nfunction candidate(...$args)\
    \ {\n    return circular_shift(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(100, 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(12, 2) !== \"12\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpkza86glx.php:25\n\
    Stack trace:\n#0 /tmp/tmpkza86glx.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpkza86glx.php\
    \ on line 25\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $x = (string) $x;\n    $len = strlen($x);\n    if ($shift >= $len) {\n  \
    \      return strrev($x);\n    }\n    $first = substr($x, 0, $len - $shift);\n\
    \    $last = substr($x, $len - $shift);\n    return $last . $first;\n}\n\nfunction\
    \ candidate(...$args) {\n    return circular_shift(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(100, 2) !== \"001\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpme08fh81.php:26\n\
    Stack trace:\n#0 /tmp/tmpme08fh81.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpme08fh81.php\
    \ on line 26\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $digits = str_split($x);\n    $n = count($digits);\n    if ($shift > $n)\
    \ {\n        $digits = array_reverse($digits);\n    } else {\n        $digits\
    \ = array_merge(array_slice($digits, $shift), array_slice($digits, 0, $shift));\n\
    \    }\n    return implode('', $digits);\n}\n\nfunction candidate(...$args) {\n\
    \    return circular_shift(...$args);\n}\n\nfunction test(): void {\n    if (candidate(100,\
    \ 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12,\
    \ 2) !== \"12\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(97,\
    \ 8) !== \"79\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12,\
    \ 1) !== \"21\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(11,\
    \ 101) !== \"11\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmptqy8ey_p.php:25\n\
    Stack trace:\n#0 /tmp/tmptqy8ey_p.php(32): test()\n#1 {main}\n  thrown in /tmp/tmptqy8ey_p.php\
    \ on line 25\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $digits = str_split($x);\n    $digits_count = count($digits);\n    $shift\
    \ = $shift % $digits_count;\n    if ($shift == 0) {\n        return $x;\n    }\n\
    \    $left = array_slice($digits, $shift);\n    $right = array_slice($digits,\
    \ 0, $shift);\n    return implode('', array_merge($left, $right));\n}\n\nfunction\
    \ candidate(...$args) {\n    return circular_shift(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(100, 2) !== \"001\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp2iw3iz2f.php:26\n\
    Stack trace:\n#0 /tmp/tmp2iw3iz2f.php(33): test()\n#1 {main}\n  thrown in /tmp/tmp2iw3iz2f.php\
    \ on line 26\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $x = strval($x);\n    $len = strlen($x);\n    $shift = $shift % $len;\n \
    \   if ($shift == 0) {\n        return $x;\n    }\n    return substr($x, $shift)\
    \ . substr($x, 0, $shift);\n}\n\nfunction candidate(...$args) {\n    return circular_shift(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp8j0ayw96.php:24\n\
    Stack trace:\n#0 /tmp/tmp8j0ayw96.php(31): test()\n#1 {main}\n  thrown in /tmp/tmp8j0ayw96.php\
    \ on line 24\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \  $digits = str_split($x);\n  $num_digits = count($digits);\n  if ($shift > $num_digits)\
    \ {\n    return implode('', array_reverse($digits));\n  }\n  $shifted = array_slice($digits,\
    \ $shift);\n  $shifted = array_merge($shifted, array_slice($digits, 0, $shift));\n\
    \  return implode('', $shifted);\n}\n\nfunction candidate(...$args) {\n    return\
    \ circular_shift(...$args);\n}\n\nfunction test(): void {\n    if (candidate(100,\
    \ 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12,\
    \ 2) !== \"12\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(97,\
    \ 8) !== \"79\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12,\
    \ 1) !== \"21\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(11,\
    \ 101) !== \"11\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmprpcbvuu6.php:25\n\
    Stack trace:\n#0 /tmp/tmprpcbvuu6.php(32): test()\n#1 {main}\n  thrown in /tmp/tmprpcbvuu6.php\
    \ on line 25\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $digits = str_split($x);\n    $n = count($digits);\n    if ($shift > $n)\
    \ {\n        return implode('', array_reverse($digits));\n    }\n    $shifted\
    \ = array_slice($digits, $shift);\n    $shifted = array_merge($shifted, array_slice($digits,\
    \ 0, $shift));\n    return implode('', $shifted);\n}\n\nfunction candidate(...$args)\
    \ {\n    return circular_shift(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(100, 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(12, 2) !== \"12\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpbavvtib4.php:25\n\
    Stack trace:\n#0 /tmp/tmpbavvtib4.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpbavvtib4.php\
    \ on line 25\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \  $x = (string)$x;\n  $len = strlen($x);\n  if ($shift > $len) {\n    return\
    \ strrev($x);\n  }\n  $left = substr($x, 0, $len - $shift);\n  $right = substr($x,\
    \ $len - $shift);\n  return $right . $left;\n}\n\nfunction candidate(...$args)\
    \ {\n    return circular_shift(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(100, 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(12, 2) !== \"12\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $str = (string)$x;\n    $len = strlen($str);\n    if ($shift > $len) {\n\
    \        return strrev($str);\n    }\n    $str = substr($str, $shift) . substr($str,\
    \ 0, $shift);\n    return $str;\n}\n\nfunction candidate(...$args) {\n    return\
    \ circular_shift(...$args);\n}\n\nfunction test(): void {\n    if (candidate(100,\
    \ 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12,\
    \ 2) !== \"12\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(97,\
    \ 8) !== \"79\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12,\
    \ 1) !== \"21\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(11,\
    \ 101) !== \"11\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp2s4bs0us.php:24\n\
    Stack trace:\n#0 /tmp/tmp2s4bs0us.php(31): test()\n#1 {main}\n  thrown in /tmp/tmp2s4bs0us.php\
    \ on line 24\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \  $x = (string)$x;\n  $len = strlen($x);\n  if ($shift >= $len) {\n    return\
    \ strrev($x);\n  }\n  $x = substr($x, $shift) . substr($x, 0, $shift);\n  return\
    \ $x;\n}\n\nfunction candidate(...$args) {\n    return circular_shift(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpy0yurj9g.php:24\n\
    Stack trace:\n#0 /tmp/tmpy0yurj9g.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpy0yurj9g.php\
    \ on line 24\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $x = strval($x);\n    $len = strlen($x);\n    if ($shift > $len) {\n    \
    \    return strrev($x);\n    }\n    $left = substr($x, 0, $len - $shift);\n  \
    \  $right = substr($x, $len - $shift);\n    return $right . $left;\n}\n\nfunction\
    \ candidate(...$args) {\n    return circular_shift(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(100, 2) !== \"001\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $x = (string) $x;\n    $len = strlen($x);\n    if ($shift > $len) {\n   \
    \     return strrev($x);\n    }\n    $left = substr($x, 0, $len - $shift);\n \
    \   $right = substr($x, $len - $shift);\n    return $right . $left;\n}\n\nfunction\
    \ candidate(...$args) {\n    return circular_shift(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(100, 2) !== \"001\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $x = (string) $x;\n    $len = strlen($x);\n    if ($shift >= $len) {\n  \
    \      return strrev($x);\n    }\n    $a = substr($x, 0, $len - $shift);\n   \
    \ $b = substr($x, $len - $shift);\n    return $b . $a;\n}\n\nfunction candidate(...$args)\
    \ {\n    return circular_shift(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(100, 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(12, 2) !== \"12\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmprgkvkm3h.php:26\n\
    Stack trace:\n#0 /tmp/tmprgkvkm3h.php(32): test()\n#1 {main}\n  thrown in /tmp/tmprgkvkm3h.php\
    \ on line 26\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $x = (string) $x;\n    $shift = (int) $shift;\n    $len = strlen($x);\n \
    \   if ($shift >= $len) {\n        return strrev($x);\n    }\n    $a = substr($x,\
    \ 0, $len - $shift);\n    $b = substr($x, $len - $shift);\n    return $b . $a;\n\
    }\n\nfunction candidate(...$args) {\n    return circular_shift(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpqh3_zc18.php:27\n\
    Stack trace:\n#0 /tmp/tmpqh3_zc18.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpqh3_zc18.php\
    \ on line 27\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $x = (string) $x;\n    $shift = (int) $shift;\n    $len = strlen($x);\n \
    \   if ($shift > $len) {\n        return strrev($x);\n    }\n    $x = substr($x,\
    \ $shift) . substr($x, 0, $shift);\n    return $x;\n}\n\nfunction candidate(...$args)\
    \ {\n    return circular_shift(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(100, 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(12, 2) !== \"12\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp7tdkeo7j.php:25\n\
    Stack trace:\n#0 /tmp/tmp7tdkeo7j.php(32): test()\n#1 {main}\n  thrown in /tmp/tmp7tdkeo7j.php\
    \ on line 25\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $x = (string) $x;\n    $len = strlen($x);\n    if ($shift > $len) {\n   \
    \     return strrev($x);\n    }\n    $y = substr($x, $len - $shift) . substr($x,\
    \ 0, $len - $shift);\n    return $y;\n}\n\nfunction candidate(...$args) {\n  \
    \  return circular_shift(...$args);\n}\n\nfunction test(): void {\n    if (candidate(100,\
    \ 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12,\
    \ 2) !== \"12\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(97,\
    \ 8) !== \"79\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12,\
    \ 1) !== \"21\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(11,\
    \ 101) !== \"11\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $x = (string) $x;\n    $len = strlen($x);\n    if ($shift > $len) {\n   \
    \     return strrev($x);\n    }\n    $x = substr($x, $shift) . substr($x, 0, $shift);\n\
    \    return $x;\n}\n\nfunction candidate(...$args) {\n    return circular_shift(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpwqhit7v0.php:24\n\
    Stack trace:\n#0 /tmp/tmpwqhit7v0.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpwqhit7v0.php\
    \ on line 24\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $digits = str_split($x);\n    $digits_count = count($digits);\n    if ($shift\
    \ >= $digits_count) {\n        return implode('', array_reverse($digits));\n \
    \   }\n    $shifted = array_slice($digits, $shift);\n    $shifted = array_merge($shifted,\
    \ array_slice($digits, 0, $shift));\n    return implode('', $shifted);\n}\n\n\
    function candidate(...$args) {\n    return circular_shift(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpanstszw0.php:25\n\
    Stack trace:\n#0 /tmp/tmpanstszw0.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpanstszw0.php\
    \ on line 25\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $x = (string) $x;\n    $shift = (int) $shift;\n    $len = strlen($x);\n \
    \   if ($shift > $len) {\n        return strrev($x);\n    }\n    $left = substr($x,\
    \ 0, $len - $shift);\n    $right = substr($x, $len - $shift);\n    return $right\
    \ . $left;\n}\n\nfunction candidate(...$args) {\n    return circular_shift(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $x = (string) $x;\n    $len = strlen($x);\n    if ($shift > $len) {\n   \
    \     return strrev($x);\n    }\n    $shift = $len - $shift;\n    return substr($x,\
    \ $shift) . substr($x, 0, $shift);\n}\n\nfunction candidate(...$args) {\n    return\
    \ circular_shift(...$args);\n}\n\nfunction test(): void {\n    if (candidate(100,\
    \ 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12,\
    \ 2) !== \"12\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(97,\
    \ 8) !== \"79\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12,\
    \ 1) !== \"21\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(11,\
    \ 101) !== \"11\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $x = (string) $x;\n    $len = strlen($x);\n    if ($shift >= $len) {\n  \
    \      return strrev($x);\n    }\n    $left = substr($x, 0, $len - $shift);\n\
    \    $right = substr($x, $len - $shift);\n    return $right . $left;\n}\n\nfunction\
    \ candidate(...$args) {\n    return circular_shift(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(100, 2) !== \"001\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp5dsxpp3o.php:26\n\
    Stack trace:\n#0 /tmp/tmp5dsxpp3o.php(32): test()\n#1 {main}\n  thrown in /tmp/tmp5dsxpp3o.php\
    \ on line 26\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $x = (string) $x;\n    $len = strlen($x);\n    if ($shift > $len) {\n   \
    \     return strrev($x);\n    }\n    $left = substr($x, 0, $len - $shift);\n \
    \   $right = substr($x, $len - $shift);\n    return $right . $left;\n}\n\nfunction\
    \ candidate(...$args) {\n    return circular_shift(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(100, 2) !== \"001\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $digits = str_split($x);\n    $num_digits = count($digits);\n    if ($shift\
    \ > $num_digits) {\n        return implode(array_reverse($digits));\n    }\n \
    \   $shifted = array_slice($digits, $shift);\n    $shifted = array_merge($shifted,\
    \ array_slice($digits, 0, $shift));\n    return implode($shifted);\n}\n\nfunction\
    \ candidate(...$args) {\n    return circular_shift(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(100, 2) !== \"001\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpjaw7_a3v.php:25\n\
    Stack trace:\n#0 /tmp/tmpjaw7_a3v.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpjaw7_a3v.php\
    \ on line 25\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $x = (string) $x;\n    $shift = (int) $shift;\n    $len = strlen($x);\n \
    \   if ($shift > $len) {\n        return strrev($x);\n    }\n    $y = substr($x,\
    \ $shift, $len - $shift);\n    $y .= substr($x, 0, $shift);\n    return $y;\n\
    }\n\nfunction candidate(...$args) {\n    return circular_shift(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpz2dtkkw5.php:26\n\
    Stack trace:\n#0 /tmp/tmpz2dtkkw5.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpz2dtkkw5.php\
    \ on line 26\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $x = strval($x);\n    $len = strlen($x);\n    if ($shift >= $len) {\n   \
    \     return strrev($x);\n    }\n    $left = substr($x, 0, $len - $shift);\n \
    \   $right = substr($x, $len - $shift);\n    return $right . $left;\n}\n\nfunction\
    \ candidate(...$args) {\n    return circular_shift(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(100, 2) !== \"001\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp8bekhtk7.php:26\n\
    Stack trace:\n#0 /tmp/tmp8bekhtk7.php(32): test()\n#1 {main}\n  thrown in /tmp/tmp8bekhtk7.php\
    \ on line 26\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $x = (string) $x;\n    $len = strlen($x);\n    if ($shift > $len) {\n   \
    \     return strrev($x);\n    }\n    $shift = $len - $shift;\n    return substr($x,\
    \ $shift) . substr($x, 0, $shift);\n}\n\nfunction candidate(...$args) {\n    return\
    \ circular_shift(...$args);\n}\n\nfunction test(): void {\n    if (candidate(100,\
    \ 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12,\
    \ 2) !== \"12\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(97,\
    \ 8) !== \"79\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12,\
    \ 1) !== \"21\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(11,\
    \ 101) !== \"11\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $x = strval($x);\n    $len = strlen($x);\n    if ($shift > $len) {\n    \
    \    return strrev($x);\n    }\n    $y = substr($x, $len - $shift);\n    $y .=\
    \ substr($x, 0, $len - $shift);\n    return $y;\n}\n\nfunction candidate(...$args)\
    \ {\n    return circular_shift(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(100, 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(12, 2) !== \"12\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $digits = str_split($x);\n    $digits_count = count($digits);\n    if ($shift\
    \ >= $digits_count) {\n        return implode(array_reverse($digits));\n    }\n\
    \    $shifted_digits = array_merge(array_slice($digits, $shift), array_slice($digits,\
    \ 0, $shift));\n    return implode($shifted_digits);\n}\n\nfunction candidate(...$args)\
    \ {\n    return circular_shift(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(100, 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(12, 2) !== \"12\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp9as7ss1k.php:24\n\
    Stack trace:\n#0 /tmp/tmp9as7ss1k.php(31): test()\n#1 {main}\n  thrown in /tmp/tmp9as7ss1k.php\
    \ on line 24\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $x_str = (string)$x;\n    $x_len = strlen($x_str);\n    if ($shift >= $x_len)\
    \ {\n        return strrev($x_str);\n    }\n    $x_str_arr = str_split($x_str);\n\
    \    $x_str_arr = array_merge(array_slice($x_str_arr, $shift), array_slice($x_str_arr,\
    \ 0, $shift));\n    return implode($x_str_arr);\n}\n\nfunction candidate(...$args)\
    \ {\n    return circular_shift(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(100, 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(12, 2) !== \"12\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpih4w0sn5.php:25\n\
    Stack trace:\n#0 /tmp/tmpih4w0sn5.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpih4w0sn5.php\
    \ on line 25\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $digits = str_split($x);\n    $digits_count = count($digits);\n    if ($shift\
    \ >= $digits_count) {\n        return implode('', array_reverse($digits));\n \
    \   }\n    $first_part = array_slice($digits, $shift);\n    $second_part = array_slice($digits,\
    \ 0, $shift);\n    return implode('', array_merge($first_part, $second_part));\n\
    }\n\nfunction candidate(...$args) {\n    return circular_shift(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp6bpm7nfl.php:25\n\
    Stack trace:\n#0 /tmp/tmp6bpm7nfl.php(32): test()\n#1 {main}\n  thrown in /tmp/tmp6bpm7nfl.php\
    \ on line 25\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \  $x = (string)$x;\n  $len = strlen($x);\n  if ($shift > $len) {\n    return\
    \ strrev($x);\n  }\n  $first = substr($x, 0, $len - $shift);\n  $last = substr($x,\
    \ $len - $shift);\n  return $last . $first;\n}\n\nfunction candidate(...$args)\
    \ {\n    return circular_shift(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(100, 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(12, 2) !== \"12\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $x_str = strval($x);\n    $x_len = strlen($x_str);\n    if ($shift >= $x_len)\
    \ {\n        return strrev($x_str);\n    }\n    $right = substr($x_str, 0, $x_len\
    \ - $shift);\n    $left = substr($x_str, $x_len - $shift);\n    return $left .\
    \ $right;\n}\n\nfunction candidate(...$args) {\n    return circular_shift(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp4wm8ls7h.php:26\n\
    Stack trace:\n#0 /tmp/tmp4wm8ls7h.php(32): test()\n#1 {main}\n  thrown in /tmp/tmp4wm8ls7h.php\
    \ on line 26\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $x = strval($x);\n    $len = strlen($x);\n    if ($shift > $len) {\n    \
    \    return strrev($x);\n    }\n    $left = substr($x, 0, $len - $shift);\n  \
    \  $right = substr($x, $len - $shift);\n    return $right . $left;\n}\n\nfunction\
    \ candidate(...$args) {\n    return circular_shift(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(100, 2) !== \"001\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $x_str = strval($x);\n    $x_len = strlen($x_str);\n    if ($shift >= $x_len)\
    \ {\n        return strrev($x_str);\n    }\n    $x_str_arr = str_split($x_str);\n\
    \    $x_str_arr = array_merge(array_slice($x_str_arr, $shift), array_slice($x_str_arr,\
    \ 0, $shift));\n    return implode('', $x_str_arr);\n}\n\nfunction candidate(...$args)\
    \ {\n    return circular_shift(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(100, 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(12, 2) !== \"12\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpzuc9vdpc.php:25\n\
    Stack trace:\n#0 /tmp/tmpzuc9vdpc.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpzuc9vdpc.php\
    \ on line 25\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $x = (string) $x;\n    $len = strlen($x);\n    if ($shift > $len) {\n   \
    \     return strrev($x);\n    }\n    $x = substr($x, $shift) . substr($x, 0, $shift);\n\
    \    return $x;\n}\n\nfunction candidate(...$args) {\n    return circular_shift(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpqcwr2e_g.php:24\n\
    Stack trace:\n#0 /tmp/tmpqcwr2e_g.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpqcwr2e_g.php\
    \ on line 24\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $x = (string) $x;\n    $len = strlen($x);\n    $shift = $shift % $len;\n\
    \    if ($shift == 0) {\n        return $x;\n    }\n    return substr($x, $shift)\
    \ . substr($x, 0, $shift);\n}\n\nfunction candidate(...$args) {\n    return circular_shift(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp5dkesot6.php:24\n\
    Stack trace:\n#0 /tmp/tmp5dkesot6.php(31): test()\n#1 {main}\n  thrown in /tmp/tmp5dkesot6.php\
    \ on line 24\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $x = (string) $x;\n    $len = strlen($x);\n    if ($shift >= $len) {\n  \
    \      return strrev($x);\n    }\n    return substr($x, $shift) . substr($x, 0,\
    \ $shift);\n}\n\nfunction candidate(...$args) {\n    return circular_shift(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpq7gap4f7.php:23\n\
    Stack trace:\n#0 /tmp/tmpq7gap4f7.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpq7gap4f7.php\
    \ on line 23\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $x = (string) $x;\n    $len = strlen($x);\n    if ($shift >= $len) {\n  \
    \      return strrev($x);\n    }\n    $left = substr($x, 0, $len - $shift);\n\
    \    $right = substr($x, $len - $shift);\n    return $right . $left;\n}\n\nfunction\
    \ candidate(...$args) {\n    return circular_shift(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(100, 2) !== \"001\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpccu77p8r.php:26\n\
    Stack trace:\n#0 /tmp/tmpccu77p8r.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpccu77p8r.php\
    \ on line 26\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $x = (string) $x;\n    $len = strlen($x);\n    if ($shift > $len) {\n   \
    \     return strrev($x);\n    }\n    $y = substr($x, $len - $shift);\n    $y .=\
    \ substr($x, 0, $len - $shift);\n    return $y;\n}\n\nfunction candidate(...$args)\
    \ {\n    return circular_shift(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(100, 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(12, 2) !== \"12\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $x_str = strval($x);\n    $x_len = strlen($x_str);\n    if ($shift >= $x_len)\
    \ {\n        return strrev($x_str);\n    }\n    $x_str_arr = str_split($x_str);\n\
    \    $x_str_arr_shifted = array_merge(array_slice($x_str_arr, $shift), array_slice($x_str_arr,\
    \ 0, $shift));\n    return implode('', $x_str_arr_shifted);\n}\n\nfunction candidate(...$args)\
    \ {\n    return circular_shift(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(100, 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(12, 2) !== \"12\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpeazu_tcq.php:25\n\
    Stack trace:\n#0 /tmp/tmpeazu_tcq.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpeazu_tcq.php\
    \ on line 25\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $x = strval($x);\n    $len = strlen($x);\n    if ($shift > $len) {\n    \
    \    return strrev($x);\n    }\n    $left = substr($x, 0, $len - $shift);\n  \
    \  $right = substr($x, $len - $shift);\n    return $right . $left;\n}\n\nfunction\
    \ candidate(...$args) {\n    return circular_shift(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(100, 2) !== \"001\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $x = (string) $x;\n    $len = strlen($x);\n    if ($shift >= $len) {\n  \
    \      return strrev($x);\n    }\n    $a = substr($x, 0, $len - $shift);\n   \
    \ $b = substr($x, $len - $shift);\n    return $b . $a;\n}\n\nfunction candidate(...$args)\
    \ {\n    return circular_shift(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(100, 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(12, 2) !== \"12\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp2d860kp7.php:26\n\
    Stack trace:\n#0 /tmp/tmp2d860kp7.php(32): test()\n#1 {main}\n  thrown in /tmp/tmp2d860kp7.php\
    \ on line 26\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $x = (string) $x;\n    $len = strlen($x);\n    if ($shift > $len) {\n   \
    \     return strrev($x);\n    }\n    $a = substr($x, 0, $len - $shift);\n    $b\
    \ = substr($x, $len - $shift);\n    return $b . $a;\n}\n\nfunction candidate(...$args)\
    \ {\n    return circular_shift(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(100, 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(12, 2) !== \"12\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \  $x = strval($x);\n  $len = strlen($x);\n  if ($shift > $len) {\n    return\
    \ strrev($x);\n  }\n  $x = substr($x, $shift) . substr($x, 0, $shift);\n  return\
    \ $x;\n}\n\nfunction candidate(...$args) {\n    return circular_shift(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpiov8ktqr.php:24\n\
    Stack trace:\n#0 /tmp/tmpiov8ktqr.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpiov8ktqr.php\
    \ on line 24\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $x = (string) $x;\n    $len = strlen($x);\n    if ($shift > $len) {\n   \
    \     return strrev($x);\n    }\n    $x = substr($x, $shift) . substr($x, 0, $shift);\n\
    \    return $x;\n}\n\nfunction candidate(...$args) {\n    return circular_shift(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpmqtlhgeb.php:24\n\
    Stack trace:\n#0 /tmp/tmpmqtlhgeb.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpmqtlhgeb.php\
    \ on line 24\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $x = (string) $x;\n    $len = strlen($x);\n    if ($shift > $len) {\n   \
    \     return strrev($x);\n    }\n    $left = substr($x, 0, $len - $shift);\n \
    \   $right = substr($x, $len - $shift);\n    return $right . $left;\n}\n\nfunction\
    \ candidate(...$args) {\n    return circular_shift(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(100, 2) !== \"001\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $digits = str_split($x);\n    $num_digits = count($digits);\n    $shift =\
    \ $shift % $num_digits;\n    if ($shift == 0) {\n        return $x;\n    }\n \
    \   $shifted = array_merge(array_slice($digits, $shift), array_slice($digits,\
    \ 0, $shift));\n    return implode('', $shifted);\n}\n\nfunction candidate(...$args)\
    \ {\n    return circular_shift(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(100, 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(12, 2) !== \"12\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpbxv2tu3t.php:25\n\
    Stack trace:\n#0 /tmp/tmpbxv2tu3t.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpbxv2tu3t.php\
    \ on line 25\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $digits = str_split($x);\n    $digits_count = count($digits);\n    if ($shift\
    \ >= $digits_count) {\n        return implode(array_reverse($digits));\n    }\n\
    \    $shifted_digits = array_slice($digits, $shift);\n    $shifted_digits = array_merge($shifted_digits,\
    \ array_slice($digits, 0, $shift));\n    return implode($shifted_digits);\n}\n\
    \nfunction candidate(...$args) {\n    return circular_shift(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp02bgg22o.php:25\n\
    Stack trace:\n#0 /tmp/tmp02bgg22o.php(32): test()\n#1 {main}\n  thrown in /tmp/tmp02bgg22o.php\
    \ on line 25\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $x_str = strval($x);\n    $x_len = strlen($x_str);\n    if ($shift > $x_len)\
    \ {\n        return strrev($x_str);\n    }\n    $x_str = substr($x_str, $shift)\
    \ . substr($x_str, 0, $shift);\n    return $x_str;\n}\n\nfunction candidate(...$args)\
    \ {\n    return circular_shift(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(100, 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(12, 2) !== \"12\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpheprim1y.php:24\n\
    Stack trace:\n#0 /tmp/tmpheprim1y.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpheprim1y.php\
    \ on line 24\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $x = (string) $x;\n    $x_len = strlen($x);\n    if ($shift > $x_len) {\n\
    \        return strrev($x);\n    }\n    $x_left = substr($x, 0, $x_len - $shift);\n\
    \    $x_right = substr($x, $x_len - $shift);\n    return $x_right . $x_left;\n\
    }\n\nfunction candidate(...$args) {\n    return circular_shift(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $x = (string) $x;\n    $len = strlen($x);\n    if ($shift > $len) {\n   \
    \     return strrev($x);\n    }\n    $x = substr($x, $shift) . substr($x, 0, $shift);\n\
    \    return $x;\n}\n\nfunction candidate(...$args) {\n    return circular_shift(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmps02wg_gk.php:24\n\
    Stack trace:\n#0 /tmp/tmps02wg_gk.php(31): test()\n#1 {main}\n  thrown in /tmp/tmps02wg_gk.php\
    \ on line 24\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $x = strval($x);\n    $len = strlen($x);\n    if ($shift >= $len) {\n   \
    \     return strrev($x);\n    }\n    $a = substr($x, 0, $len - $shift);\n    $b\
    \ = substr($x, $len - $shift);\n    return $b . $a;\n}\n\nfunction candidate(...$args)\
    \ {\n    return circular_shift(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(100, 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(12, 2) !== \"12\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp0a0iejum.php:26\n\
    Stack trace:\n#0 /tmp/tmp0a0iejum.php(32): test()\n#1 {main}\n  thrown in /tmp/tmp0a0iejum.php\
    \ on line 26\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $digits = str_split($x);\n    $digits_count = count($digits);\n    if ($shift\
    \ > $digits_count) {\n        return implode(array_reverse($digits));\n    }\n\
    \    $shifted_digits = array_merge(array_slice($digits, $shift), array_slice($digits,\
    \ 0, $shift));\n    return implode($shifted_digits);\n}\n\nfunction candidate(...$args)\
    \ {\n    return circular_shift(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(100, 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(12, 2) !== \"12\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpozb0iqi1.php:24\n\
    Stack trace:\n#0 /tmp/tmpozb0iqi1.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpozb0iqi1.php\
    \ on line 24\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $str = strval($x);\n    $len = strlen($str);\n    if ($shift > $len) {\n\
    \        return strrev($str);\n    }\n    $str = substr($str, $shift) . substr($str,\
    \ 0, $shift);\n    return $str;\n}\n\nfunction candidate(...$args) {\n    return\
    \ circular_shift(...$args);\n}\n\nfunction test(): void {\n    if (candidate(100,\
    \ 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12,\
    \ 2) !== \"12\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(97,\
    \ 8) !== \"79\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12,\
    \ 1) !== \"21\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(11,\
    \ 101) !== \"11\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp_nejgw4t.php:24\n\
    Stack trace:\n#0 /tmp/tmp_nejgw4t.php(31): test()\n#1 {main}\n  thrown in /tmp/tmp_nejgw4t.php\
    \ on line 24\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $x = (string) $x;\n    $len = strlen($x);\n    if ($shift > $len) {\n   \
    \     return strrev($x);\n    }\n    $y = substr($x, $len - $shift) . substr($x,\
    \ 0, $len - $shift);\n    return $y;\n}\n\nfunction candidate(...$args) {\n  \
    \  return circular_shift(...$args);\n}\n\nfunction test(): void {\n    if (candidate(100,\
    \ 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12,\
    \ 2) !== \"12\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(97,\
    \ 8) !== \"79\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12,\
    \ 1) !== \"21\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(11,\
    \ 101) !== \"11\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $x = (string) $x;\n    $shift = (int) $shift;\n    $len = strlen($x);\n \
    \   if ($shift > $len) {\n        return strrev($x);\n    }\n    $left = substr($x,\
    \ 0, $len - $shift);\n    $right = substr($x, $len - $shift);\n    return $right\
    \ . $left;\n}\n\nfunction candidate(...$args) {\n    return circular_shift(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $x = strval($x);\n    $len = strlen($x);\n    if ($shift > $len) {\n    \
    \    return strrev($x);\n    }\n    $left = substr($x, 0, $len - $shift);\n  \
    \  $right = substr($x, $len - $shift);\n    return $right . $left;\n}\n\nfunction\
    \ candidate(...$args) {\n    return circular_shift(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(100, 2) !== \"001\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $x = (string) $x;\n    $shift = (int) $shift;\n    $len = strlen($x);\n \
    \   if ($shift > $len) {\n        return strrev($x);\n    }\n    return substr($x,\
    \ $shift) . substr($x, 0, $shift);\n}\n\nfunction candidate(...$args) {\n    return\
    \ circular_shift(...$args);\n}\n\nfunction test(): void {\n    if (candidate(100,\
    \ 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12,\
    \ 2) !== \"12\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(97,\
    \ 8) !== \"79\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12,\
    \ 1) !== \"21\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(11,\
    \ 101) !== \"11\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpgq6klclw.php:24\n\
    Stack trace:\n#0 /tmp/tmpgq6klclw.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpgq6klclw.php\
    \ on line 24\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $x_str = (string)$x;\n    $len = strlen($x_str);\n    if ($shift > $len)\
    \ {\n        return strrev($x_str);\n    }\n    $first = substr($x_str, 0, $len\
    \ - $shift);\n    $last = substr($x_str, $len - $shift);\n    return $last . $first;\n\
    }\n\nfunction candidate(...$args) {\n    return circular_shift(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $x_str = (string)$x;\n    $len = strlen($x_str);\n    if ($shift > $len)\
    \ {\n        return strrev($x_str);\n    }\n    $shift_str = substr($x_str, $len\
    \ - $shift);\n    $x_str = substr($x_str, 0, $len - $shift);\n    return $shift_str\
    \ . $x_str;\n}\n\nfunction candidate(...$args) {\n    return circular_shift(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $digits = str_split($x);\n    $digits_count = count($digits);\n    if ($shift\
    \ > $digits_count) {\n        return implode('', array_reverse($digits));\n  \
    \  }\n    $shifted_digits = array_slice($digits, $shift);\n    $shifted_digits\
    \ = array_merge($shifted_digits, array_slice($digits, 0, $shift));\n    return\
    \ implode('', $shifted_digits);\n}\n\nfunction candidate(...$args) {\n    return\
    \ circular_shift(...$args);\n}\n\nfunction test(): void {\n    if (candidate(100,\
    \ 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12,\
    \ 2) !== \"12\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(97,\
    \ 8) !== \"79\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12,\
    \ 1) !== \"21\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(11,\
    \ 101) !== \"11\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp8xagn41t.php:25\n\
    Stack trace:\n#0 /tmp/tmp8xagn41t.php(32): test()\n#1 {main}\n  thrown in /tmp/tmp8xagn41t.php\
    \ on line 25\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $digits = str_split($x);\n    $num_digits = count($digits);\n    if ($shift\
    \ >= $num_digits) {\n        return implode('', array_reverse($digits));\n   \
    \ }\n    $first_part = array_slice($digits, $shift);\n    $second_part = array_slice($digits,\
    \ 0, $shift);\n    return implode('', array_merge($first_part, $second_part));\n\
    }\n\nfunction candidate(...$args) {\n    return circular_shift(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp49mqb_0m.php:25\n\
    Stack trace:\n#0 /tmp/tmp49mqb_0m.php(32): test()\n#1 {main}\n  thrown in /tmp/tmp49mqb_0m.php\
    \ on line 25\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \  $digits = str_split($x);\n  $digits_count = count($digits);\n  if ($shift >=\
    \ $digits_count) {\n    return implode(array_reverse($digits));\n  }\n  $shifted\
    \ = array_slice($digits, $shift);\n  $shifted = array_merge($shifted, array_slice($digits,\
    \ 0, $shift));\n  return implode($shifted);\n}\n\nfunction candidate(...$args)\
    \ {\n    return circular_shift(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(100, 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(12, 2) !== \"12\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp6pnj76v5.php:25\n\
    Stack trace:\n#0 /tmp/tmp6pnj76v5.php(32): test()\n#1 {main}\n  thrown in /tmp/tmp6pnj76v5.php\
    \ on line 25\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $digits = str_split($x);\n    $num_digits = count($digits);\n    if ($shift\
    \ > $num_digits) {\n        return implode('', array_reverse($digits));\n    }\n\
    \    $right = array_slice($digits, $shift);\n    $left = array_slice($digits,\
    \ 0, $shift);\n    return implode('', array_merge($right, $left));\n}\n\nfunction\
    \ candidate(...$args) {\n    return circular_shift(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(100, 2) !== \"001\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpe2kcmkjl.php:25\n\
    Stack trace:\n#0 /tmp/tmpe2kcmkjl.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpe2kcmkjl.php\
    \ on line 25\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $x = strval($x);\n    $len = strlen($x);\n    if ($shift > $len) {\n    \
    \    return strrev($x);\n    }\n    $left = substr($x, 0, $len - $shift);\n  \
    \  $right = substr($x, $len - $shift);\n    return $right . $left;\n}\n\nfunction\
    \ candidate(...$args) {\n    return circular_shift(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(100, 2) !== \"001\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $digits = str_split($x);\n    $n = count($digits);\n    if ($shift >= $n)\
    \ {\n        return implode(array_reverse($digits));\n    }\n    $a = array_slice($digits,\
    \ $shift);\n    $b = array_slice($digits, 0, $shift);\n    return implode($a)\
    \ . implode($b);\n}\n\nfunction candidate(...$args) {\n    return circular_shift(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp2_iqrg60.php:25\n\
    Stack trace:\n#0 /tmp/tmp2_iqrg60.php(32): test()\n#1 {main}\n  thrown in /tmp/tmp2_iqrg60.php\
    \ on line 25\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \  $x = (string)$x;\n  $len = strlen($x);\n  if ($shift > $len) {\n    return\
    \ strrev($x);\n  }\n  $x = substr($x, $shift) . substr($x, 0, $shift);\n  return\
    \ $x;\n}\n\nfunction candidate(...$args) {\n    return circular_shift(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpg6k27kpw.php:24\n\
    Stack trace:\n#0 /tmp/tmpg6k27kpw.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpg6k27kpw.php\
    \ on line 24\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $x_str = strval($x);\n    $x_len = strlen($x_str);\n    if ($shift > $x_len)\
    \ {\n        return strrev($x_str);\n    }\n    $x_str_arr = str_split($x_str);\n\
    \    $x_str_arr = array_reverse($x_str_arr);\n    $x_str_arr = array_slice($x_str_arr,\
    \ 0, $shift);\n    $x_str_arr = array_reverse($x_str_arr);\n    $x_str_arr = array_merge($x_str_arr,\
    \ str_split(strrev($x_str)));\n    $x_str_arr = array_slice($x_str_arr, 0, $x_len);\n\
    \    return implode('', $x_str_arr);\n}\n\nfunction candidate(...$args) {\n  \
    \  return circular_shift(...$args);\n}\n\nfunction test(): void {\n    if (candidate(100,\
    \ 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12,\
    \ 2) !== \"12\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(97,\
    \ 8) !== \"79\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12,\
    \ 1) !== \"21\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(11,\
    \ 101) !== \"11\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpggprfa6_.php:29\n\
    Stack trace:\n#0 /tmp/tmpggprfa6_.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpggprfa6_.php\
    \ on line 29\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $x = strval($x);\n    $len = strlen($x);\n    if ($shift >= $len) {\n   \
    \     return strrev($x);\n    }\n    $left = substr($x, 0, $len - $shift);\n \
    \   $right = substr($x, $len - $shift);\n    return $right . $left;\n}\n\nfunction\
    \ candidate(...$args) {\n    return circular_shift(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(100, 2) !== \"001\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpk7bvh_3s.php:26\n\
    Stack trace:\n#0 /tmp/tmpk7bvh_3s.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpk7bvh_3s.php\
    \ on line 26\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $x = (string) $x;\n    $len = strlen($x);\n    if ($shift > $len) {\n   \
    \     return strrev($x);\n    }\n    $left = substr($x, 0, $len - $shift);\n \
    \   $right = substr($x, $len - $shift);\n    return $right . $left;\n}\n\nfunction\
    \ candidate(...$args) {\n    return circular_shift(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(100, 2) !== \"001\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $x = (string) $x;\n    $len = strlen($x);\n    if ($shift >= $len) {\n  \
    \      return strrev($x);\n    }\n    $first = substr($x, 0, $len - $shift);\n\
    \    $second = substr($x, $len - $shift);\n    return $second . $first;\n}\n\n\
    function candidate(...$args) {\n    return circular_shift(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpiqn6nz4b.php:26\n\
    Stack trace:\n#0 /tmp/tmpiqn6nz4b.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpiqn6nz4b.php\
    \ on line 26\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $digits = str_split($x);\n    $num_digits = count($digits);\n    if ($shift\
    \ > $num_digits) {\n        return implode('', array_reverse($digits));\n    }\n\
    \    $first_part = array_slice($digits, $shift);\n    $second_part = array_slice($digits,\
    \ 0, $shift);\n    return implode('', array_merge($first_part, $second_part));\n\
    }\n\nfunction candidate(...$args) {\n    return circular_shift(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpmlre8pcq.php:25\n\
    Stack trace:\n#0 /tmp/tmpmlre8pcq.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpmlre8pcq.php\
    \ on line 25\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $digits = str_split($x);\n    $n = count($digits);\n    if ($shift > $n)\
    \ {\n        return implode(array_reverse($digits));\n    }\n    $left = array_slice($digits,\
    \ 0, $shift);\n    $right = array_slice($digits, $shift);\n    return implode($right)\
    \ . implode($left);\n}\n\nfunction candidate(...$args) {\n    return circular_shift(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpndhvs4_l.php:25\n\
    Stack trace:\n#0 /tmp/tmpndhvs4_l.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpndhvs4_l.php\
    \ on line 25\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \  $x_str = strval($x);\n  $x_len = strlen($x_str);\n  if ($shift > $x_len) {\n\
    \    return strrev($x_str);\n  }\n  $x_str = substr($x_str, $shift) . substr($x_str,\
    \ 0, $shift);\n  return $x_str;\n}\n\nfunction candidate(...$args) {\n    return\
    \ circular_shift(...$args);\n}\n\nfunction test(): void {\n    if (candidate(100,\
    \ 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12,\
    \ 2) !== \"12\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(97,\
    \ 8) !== \"79\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12,\
    \ 1) !== \"21\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(11,\
    \ 101) !== \"11\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpoqb8on_g.php:24\n\
    Stack trace:\n#0 /tmp/tmpoqb8on_g.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpoqb8on_g.php\
    \ on line 24\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $x = (string) $x;\n    $len = strlen($x);\n    if ($shift > $len) {\n   \
    \     return strrev($x);\n    }\n    $left = substr($x, 0, $len - $shift);\n \
    \   $right = substr($x, $len - $shift);\n    return $right . $left;\n}\n\nfunction\
    \ candidate(...$args) {\n    return circular_shift(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(100, 2) !== \"001\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $x = (string) $x;\n    $shift = (int) $shift;\n    $len = strlen($x);\n \
    \   if ($shift >= $len) {\n        return strrev($x);\n    }\n    return substr($x,\
    \ $shift) . substr($x, 0, $shift);\n}\n\nfunction candidate(...$args) {\n    return\
    \ circular_shift(...$args);\n}\n\nfunction test(): void {\n    if (candidate(100,\
    \ 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12,\
    \ 2) !== \"12\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(97,\
    \ 8) !== \"79\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12,\
    \ 1) !== \"21\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(11,\
    \ 101) !== \"11\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpvgc4rvex.php:24\n\
    Stack trace:\n#0 /tmp/tmpvgc4rvex.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpvgc4rvex.php\
    \ on line 24\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \  $x = (string)$x;\n  $len = strlen($x);\n  if ($shift > $len) {\n    return\
    \ strrev($x);\n  }\n  return substr($x, $len - $shift) . substr($x, 0, $len -\
    \ $shift);\n}\n\nfunction candidate(...$args) {\n    return circular_shift(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $digits = str_split($x);\n    $n = count($digits);\n    if ($shift >= $n)\
    \ {\n        return implode(array_reverse($digits));\n    }\n    $shifted = array_slice($digits,\
    \ $shift);\n    $shifted = array_merge($shifted, array_slice($digits, 0, $shift));\n\
    \    return implode($shifted);\n}\n\nfunction candidate(...$args) {\n    return\
    \ circular_shift(...$args);\n}\n\nfunction test(): void {\n    if (candidate(100,\
    \ 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12,\
    \ 2) !== \"12\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(97,\
    \ 8) !== \"79\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12,\
    \ 1) !== \"21\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(11,\
    \ 101) !== \"11\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpltyfmtwb.php:25\n\
    Stack trace:\n#0 /tmp/tmpltyfmtwb.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpltyfmtwb.php\
    \ on line 25\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \  $x = (string)$x;\n  $len = strlen($x);\n  if ($shift >= $len) {\n    return\
    \ strrev($x);\n  }\n  $x = substr($x, $shift) . substr($x, 0, $shift);\n  return\
    \ $x;\n}\n\nfunction candidate(...$args) {\n    return circular_shift(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpxjpb6fk5.php:24\n\
    Stack trace:\n#0 /tmp/tmpxjpb6fk5.php(31): test()\n#1 {main}\n  thrown in /tmp/tmpxjpb6fk5.php\
    \ on line 24\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $x_str = (string)$x;\n    $x_len = strlen($x_str);\n    if ($shift >= $x_len)\
    \ {\n        return strrev($x_str);\n    }\n    $x_str_arr = str_split($x_str);\n\
    \    $x_str_arr = array_merge(array_slice($x_str_arr, $shift), array_slice($x_str_arr,\
    \ 0, $shift));\n    return implode('', $x_str_arr);\n}\n\nfunction candidate(...$args)\
    \ {\n    return circular_shift(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(100, 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(12, 2) !== \"12\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp6l8gwsrj.php:25\n\
    Stack trace:\n#0 /tmp/tmp6l8gwsrj.php(32): test()\n#1 {main}\n  thrown in /tmp/tmp6l8gwsrj.php\
    \ on line 25\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $x = (string) $x;\n    $len = strlen($x);\n    if ($shift > $len) {\n   \
    \     return strrev($x);\n    }\n    $a = substr($x, 0, $len - $shift);\n    $b\
    \ = substr($x, $len - $shift);\n    return $b . $a;\n}\n\nfunction candidate(...$args)\
    \ {\n    return circular_shift(...$args);\n}\n\nfunction test(): void {\n    if\
    \ (candidate(100, 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n\
    \    if (candidate(12, 2) !== \"12\") { throw new Exception(\"Test failed!\");\
    \ }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"Test failed!\"\
    ); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \  $x = (string)$x;\n  $len = strlen($x);\n  if ($shift > $len) {\n    return\
    \ strrev($x);\n  }\n  return substr($x, $len - $shift) . substr($x, 0, $len -\
    \ $shift);\n}\n\nfunction candidate(...$args) {\n    return circular_shift(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(100, 2) !== \"001\") { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") {\
    \ throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $x = (string) $x;\n    $len = strlen($x);\n    if ($shift >= $len) {\n  \
    \      return strrev($x);\n    }\n    $y = substr($x, $shift);\n    $y .= substr($x,\
    \ 0, $shift);\n    return $y;\n}\n\nfunction candidate(...$args) {\n    return\
    \ circular_shift(...$args);\n}\n\nfunction test(): void {\n    if (candidate(100,\
    \ 2) !== \"001\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12,\
    \ 2) !== \"12\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(97,\
    \ 8) !== \"79\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(12,\
    \ 1) !== \"21\") { throw new Exception(\"Test failed!\"); }\n    if (candidate(11,\
    \ 101) !== \"11\") { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpxdw5d7gs.php:25\n\
    Stack trace:\n#0 /tmp/tmpxdw5d7gs.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpxdw5d7gs.php\
    \ on line 25\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $x = (string) $x;\n    $len = strlen($x);\n    if ($shift >= $len) {\n  \
    \      return strrev($x);\n    }\n    $left = substr($x, 0, $len - $shift);\n\
    \    $right = substr($x, $len - $shift);\n    return $right . $left;\n}\n\nfunction\
    \ candidate(...$args) {\n    return circular_shift(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(100, 2) !== \"001\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpn8nmcge0.php:26\n\
    Stack trace:\n#0 /tmp/tmpn8nmcge0.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpn8nmcge0.php\
    \ on line 26\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// Circular shift the digits of the integer x, shift the digits\
    \ right by shift\n// and return the result as a string.\n// If shift > number\
    \ of digits, return digits reversed.\n// >>> circular_shift(12, 1)\n// \"21\"\n\
    // >>> circular_shift(12, 2)\n// \"12\"\nfunction circular_shift($x, $shift) {\n\
    \    $x_str = strval($x);\n    $x_len = strlen($x_str);\n    if ($shift > $x_len)\
    \ {\n        return strrev($x_str);\n    }\n    $shift_str = substr($x_str, $shift);\n\
    \    $shift_str .= substr($x_str, 0, $shift);\n    return $shift_str;\n}\n\nfunction\
    \ candidate(...$args) {\n    return circular_shift(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(100, 2) !== \"001\") { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(12, 2) !== \"12\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(97, 8) !== \"79\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(12, 1) !== \"21\") { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(11, 101) !== \"11\") { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp8dpzi565.php:25\n\
    Stack trace:\n#0 /tmp/tmp8dpzi565.php(32): test()\n#1 {main}\n  thrown in /tmp/tmp8dpzi565.php\
    \ on line 25\n"
  exit_code: 255
  status: Exception

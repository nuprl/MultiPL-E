name: HumanEval_150_x_or_y
language: php
results:
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n    if ($n % 2 == 0) {\n        return $y;\n    } else {\n      \
    \  return $x;\n    }\n}\n\necho x_or_y(7, 34, 12) . \"\\n\";\necho x_or_y(15,\
    \ 8, 5) . \"\\n\";\nfunction candidate(...$args) {\n    return x_or_y(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7, 34, 12) !== 34) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(15, 8, 5) !== 5) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(3, 33, 5212) !== 33) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(1259, 3, 52) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(7919, -1, 12) !==\
    \ -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3609, 1245,\
    \ 583) !== 583) { throw new Exception(\"Test failed!\"); }\n    if (candidate(91,\
    \ 56, 129) !== 129) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 34, 1234) !== 1234) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 2, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 0) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "34\n8\n"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp6aowycvl.php:23\n\
    Stack trace:\n#0 /tmp/tmp6aowycvl.php(34): test()\n#1 {main}\n  thrown in /tmp/tmp6aowycvl.php\
    \ on line 23\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n    // Your code here\n}\n\nfunction candidate(...$args) {\n    return\
    \ x_or_y(...$args);\n}\n\nfunction test(): void {\n    if (candidate(7, 34, 12)\
    \ !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15, 8,\
    \ 5) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 33,\
    \ 5212) !== 33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1259,\
    \ 3, 52) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7919,\
    \ -1, 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3609,\
    \ 1245, 583) !== 583) { throw new Exception(\"Test failed!\"); }\n    if (candidate(91,\
    \ 56, 129) !== 129) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 34, 1234) !== 1234) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 2, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 0) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmph29h_qxp.php:16\n\
    Stack trace:\n#0 /tmp/tmph29h_qxp.php(28): test()\n#1 {main}\n  thrown in /tmp/tmph29h_qxp.php\
    \ on line 16\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n    $isPrime = true;\n    for ($i = 2; $i < $n; $i++) {\n       \
    \ if ($n % $i == 0) {\n            $isPrime = false;\n            break;\n   \
    \     }\n    }\n    if ($isPrime) {\n        return $x;\n    } else {\n      \
    \  return $y;\n    }\n}\n\necho x_or_y(7, 34, 12) . \"\\n\";\necho x_or_y(15,\
    \ 8, 5) . \"\\n\";\nfunction candidate(...$args) {\n    return x_or_y(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7, 34, 12) !== 34) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(15, 8, 5) !== 5) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(3, 33, 5212) !== 33) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(1259, 3, 52) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(7919, -1, 12) !==\
    \ -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3609, 1245,\
    \ 583) !== 583) { throw new Exception(\"Test failed!\"); }\n    if (candidate(91,\
    \ 56, 129) !== 129) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 34, 1234) !== 1234) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 2, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 0) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "34\n5\n"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpif610nt2.php:37\n\
    Stack trace:\n#0 /tmp/tmpif610nt2.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpif610nt2.php\
    \ on line 37\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n    if ($n < 2) {\n        return $y;\n    }\n    for ($i = 2; $i\
    \ < $n; $i++) {\n        if ($n % $i == 0) {\n            return $y;\n       \
    \ }\n    }\n    return $x;\n}\necho x_or_y(7, 34, 12) . \"\\n\";\necho x_or_y(15,\
    \ 8, 5) . \"\\n\";\nfunction candidate(...$args) {\n    return x_or_y(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7, 34, 12) !== 34) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(15, 8, 5) !== 5) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(3, 33, 5212) !== 33) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(1259, 3, 52) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(7919, -1, 12) !==\
    \ -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3609, 1245,\
    \ 583) !== 583) { throw new Exception(\"Test failed!\"); }\n    if (candidate(91,\
    \ 56, 129) !== 129) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 34, 1234) !== 1234) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 2, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 0) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "34\n5\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n    if ($n < 2) {\n        return $y;\n    }\n    for ($i = 2; $i\
    \ < $n; $i++) {\n        if ($n % $i == 0) {\n            return $y;\n       \
    \ }\n    }\n    return $x;\n}\n\nfunction candidate(...$args) {\n    return x_or_y(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7, 34, 12) !== 34) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(15, 8, 5) !== 5) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(3, 33, 5212) !== 33) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(1259, 3, 52) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(7919, -1, 12) !==\
    \ -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3609, 1245,\
    \ 583) !== 583) { throw new Exception(\"Test failed!\"); }\n    if (candidate(91,\
    \ 56, 129) !== 129) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 34, 1234) !== 1234) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 2, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 0) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n    if ($n == 2) return $x;\n    if ($n % 2 == 0) return $y;\n  \
    \  for ($i = 3; $i <= sqrt($n); $i += 2) {\n        if ($n % $i == 0) return $y;\n\
    \    }\n    return $x;\n}\nfunction candidate(...$args) {\n    return x_or_y(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7, 34, 12) !== 34) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(15, 8, 5) !== 5) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(3, 33, 5212) !== 33) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(1259, 3, 52) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(7919, -1, 12) !==\
    \ -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3609, 1245,\
    \ 583) !== 583) { throw new Exception(\"Test failed!\"); }\n    if (candidate(91,\
    \ 56, 129) !== 129) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 34, 1234) !== 1234) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 2, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 0) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpqak63904.php:28\n\
    Stack trace:\n#0 /tmp/tmpqak63904.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpqak63904.php\
    \ on line 28\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n  for ($i = 2; $i < $n; $i++) {\n    if ($n % $i == 0) {\n      return\
    \ $y;\n    }\n  }\n  return $x;\n}\n\necho x_or_y(7, 34, 12) . \"\\n\";\necho\
    \ x_or_y(15, 8, 5) . \"\\n\";\nfunction candidate(...$args) {\n    return x_or_y(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7, 34, 12) !== 34) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(15, 8, 5) !== 5) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(3, 33, 5212) !== 33) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(1259, 3, 52) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(7919, -1, 12) !==\
    \ -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3609, 1245,\
    \ 583) !== 583) { throw new Exception(\"Test failed!\"); }\n    if (candidate(91,\
    \ 56, 129) !== 129) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 34, 1234) !== 1234) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 2, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 0) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "34\n5\n"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp1_q8wy46.php:31\n\
    Stack trace:\n#0 /tmp/tmp1_q8wy46.php(35): test()\n#1 {main}\n  thrown in /tmp/tmp1_q8wy46.php\
    \ on line 31\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n    if ($n == 2) {\n        return $x;\n    }\n    for ($i = 2; $i\
    \ < $n; $i++) {\n        if ($n % $i == 0) {\n            return $y;\n       \
    \ }\n    }\n    return $x;\n}\n\necho x_or_y(7, 34, 12) . \"\\n\";\necho x_or_y(15,\
    \ 8, 5) . \"\\n\";\nfunction candidate(...$args) {\n    return x_or_y(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7, 34, 12) !== 34) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(15, 8, 5) !== 5) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(3, 33, 5212) !== 33) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(1259, 3, 52) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(7919, -1, 12) !==\
    \ -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3609, 1245,\
    \ 583) !== 583) { throw new Exception(\"Test failed!\"); }\n    if (candidate(91,\
    \ 56, 129) !== 129) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 34, 1234) !== 1234) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 2, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 0) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "34\n5\n"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp_irvmxu6.php:34\n\
    Stack trace:\n#0 /tmp/tmp_irvmxu6.php(38): test()\n#1 {main}\n  thrown in /tmp/tmp_irvmxu6.php\
    \ on line 34\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n  if ($n < 2) {\n    return $y;\n  }\n  for ($i = 2; $i < $n; $i++)\
    \ {\n    if ($n % $i == 0) {\n      return $y;\n    }\n  }\n  return $x;\n}\n\n\
    function candidate(...$args) {\n    return x_or_y(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(7, 34, 12) !== 34) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(15, 8, 5) !== 5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3, 33, 5212) !== 33) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1259, 3, 52) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(7919, -1, 12) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3609, 1245, 583) !== 583) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(91, 56, 129) !== 129) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 34, 1234) !== 1234) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 2, 0) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 2, 0) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n    for ($i = 2; $i < $n; $i++) {\n        if ($n % $i == 0) {\n\
    \            return $y;\n        }\n    }\n    return $x;\n}\n\necho x_or_y(7,\
    \ 34, 12);\necho \"\\n\";\necho x_or_y(15, 8, 5);\necho \"\\n\";\necho x_or_y(5,\
    \ 8, 5);\necho \"\\n\";\necho x_or_y(7, 8, 5);\necho \"\\n\";\necho x_or_y(11,\
    \ 8, 5);\necho \"\\n\";\necho x_or_y(13, 8, 5);\necho \"\\n\";\necho x_or_y(17,\
    \ 8, 5);\necho \"\\n\";\necho x_or_y(19, 8, 5);\necho \"\\n\";\necho x_or_y(23,\
    \ 8, 5);\necho \"\\n\";\necho x_or_y(29, 8, 5);\necho \"\\n\";\necho x_or_y(31,\
    \ 8, 5);\necho \"\\n\";\necho x_or_y(37, 8, 5);\necho \"\\n\";\necho x_or_y(41,\
    \ 8, 5);\necho \"\\n\";\necho x_or_y(43, 8, 5);\necho \"\\n\";\necho x_or_y(47,\
    \ 8, 5);\necho \"\\n\";\necho x_or_y(53, 8, 5);\necho \"\\n\";\necho x_or_y(59,\
    \ 8, 5);\necho \"\\n\";\necho x_or_y(61, 8, 5);\necho \"\\n\";\necho x_or_y(67,\
    \ 8, 5);\necho \"\\n\";\necho x_or_y(71, 8, 5);\necho \"\\n\";\necho x_or_y(73,\
    \ 8, 5);\necho \"\\n\";\necho x_or_y(79, 8, 5);\necho \"\\n\";\necho x_or_y(83,\
    \ 8, 5);\necho \"\\n\";\necho x_or_y(89, 8, 5);\necho \"\\n\";\necho x_or\nfunction\
    \ candidate(...$args) {\n    return x_or_y(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(7, 34, 12) !== 34) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(15, 8, 5) !== 5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3, 33, 5212) !== 33) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1259, 3, 52) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(7919, -1, 12) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3609, 1245, 583) !== 583) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(91, 56, 129) !== 129) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 34, 1234) !== 1234) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 2, 0) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 2, 0) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Parse error:  syntax error, unexpected token \"function\", expecting\
    \ \",\" or \";\" in /tmp/tmpkwz_zgg4.php on line 65\n"
  exit_code: 255
  status: SyntaxError
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n    $is_prime = true;\n    for ($i = 2; $i < $n; $i++) {\n      \
    \  if ($n % $i == 0) {\n            $is_prime = false;\n            break;\n \
    \       }\n    }\n    if ($is_prime) {\n        return $x;\n    } else {\n   \
    \     return $y;\n    }\n}\n\nfunction candidate(...$args) {\n    return x_or_y(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7, 34, 12) !== 34) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(15, 8, 5) !== 5) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(3, 33, 5212) !== 33) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(1259, 3, 52) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(7919, -1, 12) !==\
    \ -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3609, 1245,\
    \ 583) !== 583) { throw new Exception(\"Test failed!\"); }\n    if (candidate(91,\
    \ 56, 129) !== 129) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 34, 1234) !== 1234) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 2, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 0) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpdzq0zlon.php:35\n\
    Stack trace:\n#0 /tmp/tmpdzq0zlon.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpdzq0zlon.php\
    \ on line 35\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n  if (is_prime($n)) {\n    return $x;\n  } else {\n    return $y;\n\
    \  }\n}\n\nfunction candidate(...$args) {\n    return x_or_y(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(7, 34, 12) !== 34) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(15, 8, 5) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3, 33, 5212) !== 33) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1259, 3, 52) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7919, -1, 12) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3609, 1245, 583) !== 583) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(91, 56, 129) !== 129) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 34, 1234) !== 1234) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 2, 0) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 2, 0) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Error: Call to undefined function is_prime()\
    \ in /tmp/tmpw978r3k3.php:8\nStack trace:\n#0 /tmp/tmpw978r3k3.php(16): x_or_y()\n\
    #1 /tmp/tmpw978r3k3.php(20): candidate()\n#2 /tmp/tmpw978r3k3.php(32): test()\n\
    #3 {main}\n  thrown in /tmp/tmpw978r3k3.php on line 8\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n    if ($n % 2 == 0 || $n % 3 == 0 || $n % 5 == 0 || $n % 7 == 0)\
    \ {\n        return $y;\n    } else {\n        return $x;\n    }\n}\necho x_or_y(7,\
    \ 34, 12);\necho \"<br>\";\necho x_or_y(15, 8, 5);\nfunction candidate(...$args)\
    \ {\n    return x_or_y(...$args);\n}\n\nfunction test(): void {\n    if (candidate(7,\
    \ 34, 12) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15,\
    \ 8, 5) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 33, 5212) !== 33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1259,\
    \ 3, 52) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7919,\
    \ -1, 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3609,\
    \ 1245, 583) !== 583) { throw new Exception(\"Test failed!\"); }\n    if (candidate(91,\
    \ 56, 129) !== 129) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 34, 1234) !== 1234) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 2, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 0) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: 12<br>5
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmptetzm3v_.php:22\n\
    Stack trace:\n#0 /tmp/tmptetzm3v_.php(34): test()\n#1 {main}\n  thrown in /tmp/tmptetzm3v_.php\
    \ on line 22\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n  if($n == 1) {\n    return $y;\n  }\n  for($i = 2; $i < $n; $i++)\
    \ {\n    if($n % $i == 0) {\n      return $y;\n    }\n  }\n  return $x;\n}\n\n\
    function candidate(...$args) {\n    return x_or_y(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(7, 34, 12) !== 34) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(15, 8, 5) !== 5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3, 33, 5212) !== 33) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1259, 3, 52) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(7919, -1, 12) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3609, 1245, 583) !== 583) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(91, 56, 129) !== 129) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 34, 1234) !== 1234) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 2, 0) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 2, 0) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n    if (is_prime($n)) {\n        return $x;\n    } else {\n     \
    \   return $y;\n    }\n}\n\nfunction candidate(...$args) {\n    return x_or_y(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7, 34, 12) !== 34) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(15, 8, 5) !== 5) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(3, 33, 5212) !== 33) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(1259, 3, 52) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(7919, -1, 12) !==\
    \ -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3609, 1245,\
    \ 583) !== 583) { throw new Exception(\"Test failed!\"); }\n    if (candidate(91,\
    \ 56, 129) !== 129) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 34, 1234) !== 1234) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 2, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 0) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Error: Call to undefined function is_prime()\
    \ in /tmp/tmpg0wdmlxv.php:8\nStack trace:\n#0 /tmp/tmpg0wdmlxv.php(16): x_or_y()\n\
    #1 /tmp/tmpg0wdmlxv.php(20): candidate()\n#2 /tmp/tmpg0wdmlxv.php(32): test()\n\
    #3 {main}\n  thrown in /tmp/tmpg0wdmlxv.php on line 8\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n    if (is_prime($n)) {\n        return $x;\n    } else {\n     \
    \   return $y;\n    }\n}\n\nfunction candidate(...$args) {\n    return x_or_y(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7, 34, 12) !== 34) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(15, 8, 5) !== 5) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(3, 33, 5212) !== 33) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(1259, 3, 52) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(7919, -1, 12) !==\
    \ -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3609, 1245,\
    \ 583) !== 583) { throw new Exception(\"Test failed!\"); }\n    if (candidate(91,\
    \ 56, 129) !== 129) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 34, 1234) !== 1234) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 2, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 0) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Error: Call to undefined function is_prime()\
    \ in /tmp/tmp_x1s_y7y.php:8\nStack trace:\n#0 /tmp/tmp_x1s_y7y.php(16): x_or_y()\n\
    #1 /tmp/tmp_x1s_y7y.php(20): candidate()\n#2 /tmp/tmp_x1s_y7y.php(32): test()\n\
    #3 {main}\n  thrown in /tmp/tmp_x1s_y7y.php on line 8\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n    $isPrime = true;\n    for ($i = 2; $i < $n; $i++) {\n       \
    \ if ($n % $i == 0) {\n            $isPrime = false;\n            break;\n   \
    \     }\n    }\n    if ($isPrime) {\n        return $x;\n    } else {\n      \
    \  return $y;\n    }\n}\n\necho x_or_y(7, 34, 12) . \"\\n\";\necho x_or_y(15,\
    \ 8, 5) . \"\\n\";\nfunction candidate(...$args) {\n    return x_or_y(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7, 34, 12) !== 34) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(15, 8, 5) !== 5) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(3, 33, 5212) !== 33) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(1259, 3, 52) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(7919, -1, 12) !==\
    \ -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3609, 1245,\
    \ 583) !== 583) { throw new Exception(\"Test failed!\"); }\n    if (candidate(91,\
    \ 56, 129) !== 129) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 34, 1234) !== 1234) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 2, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 0) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "34\n5\n"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmppnicwnuw.php:37\n\
    Stack trace:\n#0 /tmp/tmppnicwnuw.php(41): test()\n#1 {main}\n  thrown in /tmp/tmppnicwnuw.php\
    \ on line 37\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n    if ($n == 2) {\n        return $x;\n    }\n    for ($i = 2; $i\
    \ < $n; $i++) {\n        if ($n % $i == 0) {\n            return $y;\n       \
    \ }\n    }\n    return $x;\n}\n\nfunction candidate(...$args) {\n    return x_or_y(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7, 34, 12) !== 34) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(15, 8, 5) !== 5) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(3, 33, 5212) !== 33) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(1259, 3, 52) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(7919, -1, 12) !==\
    \ -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3609, 1245,\
    \ 583) !== 583) { throw new Exception(\"Test failed!\"); }\n    if (candidate(91,\
    \ 56, 129) !== 129) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 34, 1234) !== 1234) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 2, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 0) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpk1pbagon.php:32\n\
    Stack trace:\n#0 /tmp/tmpk1pbagon.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpk1pbagon.php\
    \ on line 32\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n    if ($n < 2) {\n        return $y;\n    }\n    $i = 2;\n    while\
    \ ($i < $n) {\n        if ($n % $i == 0) {\n            return $y;\n        }\n\
    \        $i++;\n    }\n    return $x;\n}\n\nfunction candidate(...$args) {\n \
    \   return x_or_y(...$args);\n}\n\nfunction test(): void {\n    if (candidate(7,\
    \ 34, 12) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15,\
    \ 8, 5) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 33, 5212) !== 33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1259,\
    \ 3, 52) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7919,\
    \ -1, 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3609,\
    \ 1245, 583) !== 583) { throw new Exception(\"Test failed!\"); }\n    if (candidate(91,\
    \ 56, 129) !== 129) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 34, 1234) !== 1234) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 2, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 0) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n    if($n < 2) {\n        return $y;\n    }\n    for($i = 2; $i <\
    \ $n; $i++) {\n        if($n % $i == 0) {\n            return $y;\n        }\n\
    \    }\n    return $x;\n}\nfunction candidate(...$args) {\n    return x_or_y(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7, 34, 12) !== 34) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(15, 8, 5) !== 5) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(3, 33, 5212) !== 33) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(1259, 3, 52) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(7919, -1, 12) !==\
    \ -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3609, 1245,\
    \ 583) !== 583) { throw new Exception(\"Test failed!\"); }\n    if (candidate(91,\
    \ 56, 129) !== 129) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 34, 1234) !== 1234) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 2, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 0) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n    if ($n < 2) {\n        return $y;\n    }\n    for ($i = 2; $i\
    \ < $n; $i++) {\n        if ($n % $i == 0) {\n            return $y;\n       \
    \ }\n    }\n    return $x;\n}\n\nfunction candidate(...$args) {\n    return x_or_y(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7, 34, 12) !== 34) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(15, 8, 5) !== 5) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(3, 33, 5212) !== 33) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(1259, 3, 52) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(7919, -1, 12) !==\
    \ -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3609, 1245,\
    \ 583) !== 583) { throw new Exception(\"Test failed!\"); }\n    if (candidate(91,\
    \ 56, 129) !== 129) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 34, 1234) !== 1234) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 2, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 0) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n    if ($n % 2 == 0) {\n        return $y;\n    } else {\n      \
    \  return $x;\n    }\n}\n\necho x_or_y(7, 34, 12) . \"\\n\";\necho x_or_y(15,\
    \ 8, 5) . \"\\n\";\nfunction candidate(...$args) {\n    return x_or_y(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7, 34, 12) !== 34) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(15, 8, 5) !== 5) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(3, 33, 5212) !== 33) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(1259, 3, 52) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(7919, -1, 12) !==\
    \ -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3609, 1245,\
    \ 583) !== 583) { throw new Exception(\"Test failed!\"); }\n    if (candidate(91,\
    \ 56, 129) !== 129) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 34, 1234) !== 1234) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 2, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 0) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "34\n8\n"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpsqyopk5_.php:23\n\
    Stack trace:\n#0 /tmp/tmpsqyopk5_.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpsqyopk5_.php\
    \ on line 23\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n    // Your code here\n}\n\nfunction candidate(...$args) {\n    return\
    \ x_or_y(...$args);\n}\n\nfunction test(): void {\n    if (candidate(7, 34, 12)\
    \ !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15, 8,\
    \ 5) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 33,\
    \ 5212) !== 33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1259,\
    \ 3, 52) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7919,\
    \ -1, 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3609,\
    \ 1245, 583) !== 583) { throw new Exception(\"Test failed!\"); }\n    if (candidate(91,\
    \ 56, 129) !== 129) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 34, 1234) !== 1234) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 2, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 0) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmppp4tprl2.php:16\n\
    Stack trace:\n#0 /tmp/tmppp4tprl2.php(28): test()\n#1 {main}\n  thrown in /tmp/tmppp4tprl2.php\
    \ on line 16\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n    if ($n < 2) {\n        return $y;\n    }\n    for ($i = 2; $i\
    \ <= sqrt($n); $i++) {\n        if ($n % $i == 0) {\n            return $y;\n\
    \        }\n    }\n    return $x;\n}\n\nfunction candidate(...$args) {\n    return\
    \ x_or_y(...$args);\n}\n\nfunction test(): void {\n    if (candidate(7, 34, 12)\
    \ !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15, 8,\
    \ 5) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 33,\
    \ 5212) !== 33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1259,\
    \ 3, 52) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7919,\
    \ -1, 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3609,\
    \ 1245, 583) !== 583) { throw new Exception(\"Test failed!\"); }\n    if (candidate(91,\
    \ 56, 129) !== 129) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 34, 1234) !== 1234) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 2, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 0) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n    if ($n % 2 == 0) {\n        return $y;\n    } else {\n      \
    \  return $x;\n    }\n}\n\nfunction candidate(...$args) {\n    return x_or_y(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7, 34, 12) !== 34) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(15, 8, 5) !== 5) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(3, 33, 5212) !== 33) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(1259, 3, 52) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(7919, -1, 12) !==\
    \ -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3609, 1245,\
    \ 583) !== 583) { throw new Exception(\"Test failed!\"); }\n    if (candidate(91,\
    \ 56, 129) !== 129) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 34, 1234) !== 1234) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 2, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 0) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpkljo71mi.php:21\n\
    Stack trace:\n#0 /tmp/tmpkljo71mi.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpkljo71mi.php\
    \ on line 21\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n  if ($n < 2) {\n    return $y;\n  }\n  for ($i = 2; $i <= $n / 2;\
    \ $i++) {\n    if ($n % $i == 0) {\n      return $y;\n    }\n  }\n  return $x;\n\
    }\n\nfunction candidate(...$args) {\n    return x_or_y(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(7, 34, 12) !== 34) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(15, 8, 5) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3, 33, 5212) !== 33) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1259, 3, 52) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7919, -1, 12) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3609, 1245, 583) !== 583) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(91, 56, 129) !== 129) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 34, 1234) !== 1234) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 2, 0) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 2, 0) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n    $result = $y;\n    for ($i = 2; $i < $n; $i++) {\n        if\
    \ ($n % $i == 0) {\n            $result = $x;\n            break;\n        }\n\
    \    }\n    return $result;\n}\n\necho x_or_y(7, 34, 12) . \"\\n\";\necho x_or_y(15,\
    \ 8, 5) . \"\\n\";\nfunction candidate(...$args) {\n    return x_or_y(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7, 34, 12) !== 34) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(15, 8, 5) !== 5) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(3, 33, 5212) !== 33) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(1259, 3, 52) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(7919, -1, 12) !==\
    \ -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3609, 1245,\
    \ 583) !== 583) { throw new Exception(\"Test failed!\"); }\n    if (candidate(91,\
    \ 56, 129) !== 129) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 34, 1234) !== 1234) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 2, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 0) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "12\n8\n"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpw6oh8sld.php:25\n\
    Stack trace:\n#0 /tmp/tmpw6oh8sld.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpw6oh8sld.php\
    \ on line 25\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n    if ($n % 2 == 0) {\n        return $y;\n    } else {\n      \
    \  return $x;\n    }\n}\n\nfunction candidate(...$args) {\n    return x_or_y(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7, 34, 12) !== 34) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(15, 8, 5) !== 5) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(3, 33, 5212) !== 33) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(1259, 3, 52) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(7919, -1, 12) !==\
    \ -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3609, 1245,\
    \ 583) !== 583) { throw new Exception(\"Test failed!\"); }\n    if (candidate(91,\
    \ 56, 129) !== 129) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 34, 1234) !== 1234) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 2, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 0) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpkb9ie_2m.php:21\n\
    Stack trace:\n#0 /tmp/tmpkb9ie_2m.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpkb9ie_2m.php\
    \ on line 21\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n  if ($n < 2) {\n    return $y;\n  }\n  for ($i = 2; $i < $n; $i++)\
    \ {\n    if ($n % $i == 0) {\n      return $y;\n    }\n  }\n  return $x;\n}\n\n\
    function candidate(...$args) {\n    return x_or_y(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(7, 34, 12) !== 34) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(15, 8, 5) !== 5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3, 33, 5212) !== 33) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1259, 3, 52) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(7919, -1, 12) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3609, 1245, 583) !== 583) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(91, 56, 129) !== 129) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 34, 1234) !== 1234) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 2, 0) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 2, 0) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n    if ($n == 2) {\n        return $x;\n    }\n    for ($i = 2; $i\
    \ < $n; $i++) {\n        if ($n % $i == 0) {\n            return $y;\n       \
    \ }\n    }\n    return $x;\n}\n\necho x_or_y(7, 34, 12) . \"\\n\";\necho x_or_y(15,\
    \ 8, 5) . \"\\n\";\nfunction candidate(...$args) {\n    return x_or_y(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7, 34, 12) !== 34) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(15, 8, 5) !== 5) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(3, 33, 5212) !== 33) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(1259, 3, 52) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(7919, -1, 12) !==\
    \ -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3609, 1245,\
    \ 583) !== 583) { throw new Exception(\"Test failed!\"); }\n    if (candidate(91,\
    \ 56, 129) !== 129) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 34, 1234) !== 1234) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 2, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 0) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "34\n5\n"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpclgq_p5f.php:34\n\
    Stack trace:\n#0 /tmp/tmpclgq_p5f.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpclgq_p5f.php\
    \ on line 34\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n    if ($n == 2) {\n        return $x;\n    }\n    for ($i = 2; $i\
    \ < $n; $i++) {\n        if ($n % $i == 0) {\n            return $y;\n       \
    \ }\n    }\n    return $x;\n}\n\necho x_or_y(7, 34, 12);\necho \"\\n\";\necho\
    \ x_or_y(15, 8, 5);\necho \"\\n\";\nfunction candidate(...$args) {\n    return\
    \ x_or_y(...$args);\n}\n\nfunction test(): void {\n    if (candidate(7, 34, 12)\
    \ !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15, 8,\
    \ 5) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 33,\
    \ 5212) !== 33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1259,\
    \ 3, 52) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7919,\
    \ -1, 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3609,\
    \ 1245, 583) !== 583) { throw new Exception(\"Test failed!\"); }\n    if (candidate(91,\
    \ 56, 129) !== 129) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 34, 1234) !== 1234) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 2, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 0) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "34\n5\n"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpy6xruqln.php:36\n\
    Stack trace:\n#0 /tmp/tmpy6xruqln.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpy6xruqln.php\
    \ on line 36\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n    if ($n < 2) {\n        return $y;\n    }\n    for ($i = 2; $i\
    \ < $n; $i++) {\n        if ($n % $i == 0) {\n            return $y;\n       \
    \ }\n    }\n    return $x;\n}\n\nfunction candidate(...$args) {\n    return x_or_y(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7, 34, 12) !== 34) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(15, 8, 5) !== 5) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(3, 33, 5212) !== 33) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(1259, 3, 52) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(7919, -1, 12) !==\
    \ -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3609, 1245,\
    \ 583) !== 583) { throw new Exception(\"Test failed!\"); }\n    if (candidate(91,\
    \ 56, 129) !== 129) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 34, 1234) !== 1234) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 2, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 0) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n    if ($n == 2) {\n        return $x;\n    }\n    if ($n % 2 ==\
    \ 0) {\n        return $y;\n    }\n    for ($i = 3; $i <= sqrt($n); $i += 2) {\n\
    \        if ($n % $i == 0) {\n            return $y;\n        }\n    }\n    return\
    \ $x;\n}\n\nfunction candidate(...$args) {\n    return x_or_y(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(7, 34, 12) !== 34) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(15, 8, 5) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3, 33, 5212) !== 33) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1259, 3, 52) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7919, -1, 12) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3609, 1245, 583) !== 583) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(91, 56, 129) !== 129) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 34, 1234) !== 1234) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 2, 0) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 2, 0) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpja_7ev7n.php:35\n\
    Stack trace:\n#0 /tmp/tmpja_7ev7n.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpja_7ev7n.php\
    \ on line 35\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n    if ($n < 2) {\n        return $y;\n    }\n    for ($i = 2; $i\
    \ < $n; $i++) {\n        if ($n % $i == 0) {\n            return $y;\n       \
    \ }\n    }\n    return $x;\n}\n\necho x_or_y(7, 34, 12) . \"\\n\";\necho x_or_y(15,\
    \ 8, 5) . \"\\n\";\nfunction candidate(...$args) {\n    return x_or_y(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7, 34, 12) !== 34) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(15, 8, 5) !== 5) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(3, 33, 5212) !== 33) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(1259, 3, 52) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(7919, -1, 12) !==\
    \ -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3609, 1245,\
    \ 583) !== 583) { throw new Exception(\"Test failed!\"); }\n    if (candidate(91,\
    \ 56, 129) !== 129) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 34, 1234) !== 1234) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 2, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 0) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "34\n5\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n\tif (is_prime($n)) {\n\t\treturn $x;\n\t} else {\n\t\treturn $y;\n\
    \t}\n}\n\nfunction candidate(...$args) {\n    return x_or_y(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(7, 34, 12) !== 34) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(15, 8, 5) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3, 33, 5212) !== 33) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1259, 3, 52) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7919, -1, 12) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3609, 1245, 583) !== 583) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(91, 56, 129) !== 129) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 34, 1234) !== 1234) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 2, 0) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 2, 0) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Error: Call to undefined function is_prime()\
    \ in /tmp/tmp4vr0j8s8.php:8\nStack trace:\n#0 /tmp/tmp4vr0j8s8.php(16): x_or_y()\n\
    #1 /tmp/tmp4vr0j8s8.php(20): candidate()\n#2 /tmp/tmp4vr0j8s8.php(32): test()\n\
    #3 {main}\n  thrown in /tmp/tmp4vr0j8s8.php on line 8\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n\tif($n % 2 == 0) {\n\t\treturn $y;\n\t} else {\n\t\treturn $x;\n\
    \t}\n}\necho x_or_y(7, 34, 12);\necho \"<br>\";\necho x_or_y(15, 8, 5);\nfunction\
    \ candidate(...$args) {\n    return x_or_y(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(7, 34, 12) !== 34) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(15, 8, 5) !== 5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3, 33, 5212) !== 33) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1259, 3, 52) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(7919, -1, 12) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3609, 1245, 583) !== 583) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(91, 56, 129) !== 129) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 34, 1234) !== 1234) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 2, 0) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 2, 0) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: 34<br>8
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpoo9z2tb3.php:23\n\
    Stack trace:\n#0 /tmp/tmpoo9z2tb3.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpoo9z2tb3.php\
    \ on line 23\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n    if ($n < 2) {\n        return $y;\n    }\n    for ($i = 2; $i\
    \ < $n; $i++) {\n        if ($n % $i == 0) {\n            return $y;\n       \
    \ }\n    }\n    return $x;\n}\n\nfunction candidate(...$args) {\n    return x_or_y(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7, 34, 12) !== 34) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(15, 8, 5) !== 5) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(3, 33, 5212) !== 33) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(1259, 3, 52) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(7919, -1, 12) !==\
    \ -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3609, 1245,\
    \ 583) !== 583) { throw new Exception(\"Test failed!\"); }\n    if (candidate(91,\
    \ 56, 129) !== 129) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 34, 1234) !== 1234) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 2, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 0) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n\tif($n % 2 == 0) {\n\t\treturn $x;\n\t} else {\n\t\treturn $y;\n\
    \t}\n}\n\necho x_or_y(7, 34, 12) . \"\\n\";\necho x_or_y(15, 8, 5) . \"\\n\";\n\
    function candidate(...$args) {\n    return x_or_y(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(7, 34, 12) !== 34) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(15, 8, 5) !== 5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3, 33, 5212) !== 33) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1259, 3, 52) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(7919, -1, 12) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3609, 1245, 583) !== 583) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(91, 56, 129) !== 129) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 34, 1234) !== 1234) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 2, 0) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 2, 0) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "12\n5\n"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmph6w1zw0r.php:22\n\
    Stack trace:\n#0 /tmp/tmph6w1zw0r.php(34): test()\n#1 {main}\n  thrown in /tmp/tmph6w1zw0r.php\
    \ on line 22\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n  if (is_prime($n)) {\n    return $x;\n  } else {\n    return $y;\n\
    \  }\n}\n\nfunction candidate(...$args) {\n    return x_or_y(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(7, 34, 12) !== 34) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(15, 8, 5) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3, 33, 5212) !== 33) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1259, 3, 52) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7919, -1, 12) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3609, 1245, 583) !== 583) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(91, 56, 129) !== 129) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 34, 1234) !== 1234) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 2, 0) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 2, 0) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Error: Call to undefined function is_prime()\
    \ in /tmp/tmpa2jpejy9.php:8\nStack trace:\n#0 /tmp/tmpa2jpejy9.php(16): x_or_y()\n\
    #1 /tmp/tmpa2jpejy9.php(20): candidate()\n#2 /tmp/tmpa2jpejy9.php(32): test()\n\
    #3 {main}\n  thrown in /tmp/tmpa2jpejy9.php on line 8\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n    if ($n < 2) {\n        return $y;\n    }\n    for ($i = 2; $i\
    \ < $n; $i++) {\n        if ($n % $i == 0) {\n            return $y;\n       \
    \ }\n    }\n    return $x;\n}\n\nfunction candidate(...$args) {\n    return x_or_y(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7, 34, 12) !== 34) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(15, 8, 5) !== 5) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(3, 33, 5212) !== 33) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(1259, 3, 52) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(7919, -1, 12) !==\
    \ -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3609, 1245,\
    \ 583) !== 583) { throw new Exception(\"Test failed!\"); }\n    if (candidate(91,\
    \ 56, 129) !== 129) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 34, 1234) !== 1234) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 2, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 0) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n  if ($n % 2 == 0) {\n    return $y;\n  } else {\n    return $x;\n\
    \  }\n}\n\necho x_or_y(7, 34, 12);\necho \"\\n\";\necho x_or_y(15, 8, 5);\necho\
    \ \"\\n\";\n\nfunction candidate(...$args) {\n    return x_or_y(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(7, 34, 12) !== 34) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(15, 8, 5) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3, 33, 5212) !== 33) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1259, 3, 52) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7919, -1, 12) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3609, 1245, 583) !== 583) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(91, 56, 129) !== 129) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 34, 1234) !== 1234) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 2, 0) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 2, 0) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "34\n8\n"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpr37zlr6_.php:26\n\
    Stack trace:\n#0 /tmp/tmpr37zlr6_.php(37): test()\n#1 {main}\n  thrown in /tmp/tmpr37zlr6_.php\
    \ on line 26\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n    $isPrime = true;\n    for ($i = 2; $i < $n; $i++) {\n       \
    \ if ($n % $i == 0) {\n            $isPrime = false;\n            break;\n   \
    \     }\n    }\n    if ($isPrime) {\n        return $x;\n    } else {\n      \
    \  return $y;\n    }\n}\n\necho x_or_y(7, 34, 12) . \"\\n\";\necho x_or_y(15,\
    \ 8, 5) . \"\\n\";\nfunction candidate(...$args) {\n    return x_or_y(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7, 34, 12) !== 34) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(15, 8, 5) !== 5) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(3, 33, 5212) !== 33) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(1259, 3, 52) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(7919, -1, 12) !==\
    \ -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3609, 1245,\
    \ 583) !== 583) { throw new Exception(\"Test failed!\"); }\n    if (candidate(91,\
    \ 56, 129) !== 129) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 34, 1234) !== 1234) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 2, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 0) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "34\n5\n"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpemhjmlpv.php:37\n\
    Stack trace:\n#0 /tmp/tmpemhjmlpv.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpemhjmlpv.php\
    \ on line 37\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n  // your code here\n}\n\nfunction candidate(...$args) {\n    return\
    \ x_or_y(...$args);\n}\n\nfunction test(): void {\n    if (candidate(7, 34, 12)\
    \ !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15, 8,\
    \ 5) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 33,\
    \ 5212) !== 33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1259,\
    \ 3, 52) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7919,\
    \ -1, 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3609,\
    \ 1245, 583) !== 583) { throw new Exception(\"Test failed!\"); }\n    if (candidate(91,\
    \ 56, 129) !== 129) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 34, 1234) !== 1234) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 2, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 0) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpcdwody2c.php:16\n\
    Stack trace:\n#0 /tmp/tmpcdwody2c.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpcdwody2c.php\
    \ on line 16\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n    $isPrime = true;\n    for ($i = 2; $i < $n; $i++) {\n       \
    \ if ($n % $i == 0) {\n            $isPrime = false;\n            break;\n   \
    \     }\n    }\n    if ($isPrime) {\n        return $x;\n    } else {\n      \
    \  return $y;\n    }\n}\n\necho x_or_y(7, 34, 12) . \"\\n\";\necho x_or_y(15,\
    \ 8, 5) . \"\\n\";\nfunction candidate(...$args) {\n    return x_or_y(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7, 34, 12) !== 34) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(15, 8, 5) !== 5) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(3, 33, 5212) !== 33) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(1259, 3, 52) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(7919, -1, 12) !==\
    \ -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3609, 1245,\
    \ 583) !== 583) { throw new Exception(\"Test failed!\"); }\n    if (candidate(91,\
    \ 56, 129) !== 129) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 34, 1234) !== 1234) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 2, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 0) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "34\n5\n"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp58inr430.php:37\n\
    Stack trace:\n#0 /tmp/tmp58inr430.php(41): test()\n#1 {main}\n  thrown in /tmp/tmp58inr430.php\
    \ on line 37\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n    $isPrime = true;\n    for ($i = 2; $i < $n; $i++) {\n       \
    \ if ($n % $i == 0) {\n            $isPrime = false;\n            break;\n   \
    \     }\n    }\n    if ($isPrime) {\n        return $x;\n    } else {\n      \
    \  return $y;\n    }\n}\n\nfunction candidate(...$args) {\n    return x_or_y(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7, 34, 12) !== 34) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(15, 8, 5) !== 5) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(3, 33, 5212) !== 33) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(1259, 3, 52) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(7919, -1, 12) !==\
    \ -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3609, 1245,\
    \ 583) !== 583) { throw new Exception(\"Test failed!\"); }\n    if (candidate(91,\
    \ 56, 129) !== 129) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 34, 1234) !== 1234) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 2, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 0) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpqswwqpok.php:35\n\
    Stack trace:\n#0 /tmp/tmpqswwqpok.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpqswwqpok.php\
    \ on line 35\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n  if ($n == 2) {\n    return $x;\n  } else {\n    return $y;\n  }\n\
    }\n\nfunction candidate(...$args) {\n    return x_or_y(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(7, 34, 12) !== 34) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(15, 8, 5) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3, 33, 5212) !== 33) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1259, 3, 52) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7919, -1, 12) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3609, 1245, 583) !== 583) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(91, 56, 129) !== 129) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 34, 1234) !== 1234) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 2, 0) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 2, 0) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp685meb2n.php:20\n\
    Stack trace:\n#0 /tmp/tmp685meb2n.php(32): test()\n#1 {main}\n  thrown in /tmp/tmp685meb2n.php\
    \ on line 20\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n  for ($i = 2; $i < $n; $i++) {\n    if ($n % $i == 0) {\n      return\
    \ $y;\n    }\n  }\n  return $x;\n}\n\necho x_or_y(7, 34, 12) . \"\\n\";\necho\
    \ x_or_y(15, 8, 5) . \"\\n\";\nfunction candidate(...$args) {\n    return x_or_y(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7, 34, 12) !== 34) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(15, 8, 5) !== 5) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(3, 33, 5212) !== 33) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(1259, 3, 52) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(7919, -1, 12) !==\
    \ -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3609, 1245,\
    \ 583) !== 583) { throw new Exception(\"Test failed!\"); }\n    if (candidate(91,\
    \ 56, 129) !== 129) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 34, 1234) !== 1234) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 2, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 0) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "34\n5\n"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpjts0i2gn.php:31\n\
    Stack trace:\n#0 /tmp/tmpjts0i2gn.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpjts0i2gn.php\
    \ on line 31\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n    if (is_prime($n)) {\n        return $x;\n    } else {\n     \
    \   return $y;\n    }\n}\n\nfunction candidate(...$args) {\n    return x_or_y(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7, 34, 12) !== 34) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(15, 8, 5) !== 5) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(3, 33, 5212) !== 33) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(1259, 3, 52) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(7919, -1, 12) !==\
    \ -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3609, 1245,\
    \ 583) !== 583) { throw new Exception(\"Test failed!\"); }\n    if (candidate(91,\
    \ 56, 129) !== 129) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 34, 1234) !== 1234) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 2, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 0) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Error: Call to undefined function is_prime()\
    \ in /tmp/tmp3j7lf5oe.php:8\nStack trace:\n#0 /tmp/tmp3j7lf5oe.php(16): x_or_y()\n\
    #1 /tmp/tmp3j7lf5oe.php(20): candidate()\n#2 /tmp/tmp3j7lf5oe.php(32): test()\n\
    #3 {main}\n  thrown in /tmp/tmp3j7lf5oe.php on line 8\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n    if (is_prime($n)) {\n        return $x;\n    } else {\n     \
    \   return $y;\n    }\n}\n\nfunction candidate(...$args) {\n    return x_or_y(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7, 34, 12) !== 34) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(15, 8, 5) !== 5) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(3, 33, 5212) !== 33) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(1259, 3, 52) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(7919, -1, 12) !==\
    \ -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3609, 1245,\
    \ 583) !== 583) { throw new Exception(\"Test failed!\"); }\n    if (candidate(91,\
    \ 56, 129) !== 129) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 34, 1234) !== 1234) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 2, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 0) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Error: Call to undefined function is_prime()\
    \ in /tmp/tmpms1zvcbz.php:8\nStack trace:\n#0 /tmp/tmpms1zvcbz.php(16): x_or_y()\n\
    #1 /tmp/tmpms1zvcbz.php(20): candidate()\n#2 /tmp/tmpms1zvcbz.php(32): test()\n\
    #3 {main}\n  thrown in /tmp/tmpms1zvcbz.php on line 8\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n  if ($n == 2) {\n    return $x;\n  }\n  for ($i = 2; $i < $n; $i++)\
    \ {\n    if ($n % $i == 0) {\n      return $y;\n    }\n  }\n  return $x;\n}\n\n\
    echo x_or_y(7, 34, 12) . \"\\n\";\necho x_or_y(15, 8, 5) . \"\\n\";\nfunction\
    \ candidate(...$args) {\n    return x_or_y(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(7, 34, 12) !== 34) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(15, 8, 5) !== 5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3, 33, 5212) !== 33) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1259, 3, 52) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(7919, -1, 12) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3609, 1245, 583) !== 583) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(91, 56, 129) !== 129) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 34, 1234) !== 1234) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 2, 0) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 2, 0) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "34\n5\n"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpj0eh4pn5.php:34\n\
    Stack trace:\n#0 /tmp/tmpj0eh4pn5.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpj0eh4pn5.php\
    \ on line 34\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n    if ($n % 2 == 0) {\n        return $y;\n    } else {\n      \
    \  return $x;\n    }\n}\n\necho x_or_y(7, 34, 12) . \"\\n\";\necho x_or_y(15,\
    \ 8, 5) . \"\\n\";\nfunction candidate(...$args) {\n    return x_or_y(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7, 34, 12) !== 34) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(15, 8, 5) !== 5) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(3, 33, 5212) !== 33) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(1259, 3, 52) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(7919, -1, 12) !==\
    \ -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3609, 1245,\
    \ 583) !== 583) { throw new Exception(\"Test failed!\"); }\n    if (candidate(91,\
    \ 56, 129) !== 129) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 34, 1234) !== 1234) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 2, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 0) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "34\n8\n"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpfd6ma3sf.php:23\n\
    Stack trace:\n#0 /tmp/tmpfd6ma3sf.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpfd6ma3sf.php\
    \ on line 23\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n    if ($n == 2) return $x;\n    if ($n % 2 == 0) return $y;\n  \
    \  for ($i = 3; $i <= sqrt($n); $i += 2) {\n        if ($n % $i == 0) return $y;\n\
    \    }\n    return $x;\n}\n\nfunction candidate(...$args) {\n    return x_or_y(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7, 34, 12) !== 34) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(15, 8, 5) !== 5) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(3, 33, 5212) !== 33) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(1259, 3, 52) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(7919, -1, 12) !==\
    \ -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3609, 1245,\
    \ 583) !== 583) { throw new Exception(\"Test failed!\"); }\n    if (candidate(91,\
    \ 56, 129) !== 129) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 34, 1234) !== 1234) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 2, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 0) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpd8vcm_qm.php:29\n\
    Stack trace:\n#0 /tmp/tmpd8vcm_qm.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpd8vcm_qm.php\
    \ on line 29\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n    if (is_prime($n)) {\n        return $x;\n    } else {\n     \
    \   return $y;\n    }\n}\n\nfunction candidate(...$args) {\n    return x_or_y(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7, 34, 12) !== 34) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(15, 8, 5) !== 5) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(3, 33, 5212) !== 33) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(1259, 3, 52) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(7919, -1, 12) !==\
    \ -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3609, 1245,\
    \ 583) !== 583) { throw new Exception(\"Test failed!\"); }\n    if (candidate(91,\
    \ 56, 129) !== 129) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 34, 1234) !== 1234) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 2, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 0) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Error: Call to undefined function is_prime()\
    \ in /tmp/tmpupwwppod.php:8\nStack trace:\n#0 /tmp/tmpupwwppod.php(16): x_or_y()\n\
    #1 /tmp/tmpupwwppod.php(20): candidate()\n#2 /tmp/tmpupwwppod.php(32): test()\n\
    #3 {main}\n  thrown in /tmp/tmpupwwppod.php on line 8\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n    if (is_prime($n)) {\n        return $x;\n    } else {\n     \
    \   return $y;\n    }\n}\n\nfunction candidate(...$args) {\n    return x_or_y(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7, 34, 12) !== 34) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(15, 8, 5) !== 5) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(3, 33, 5212) !== 33) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(1259, 3, 52) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(7919, -1, 12) !==\
    \ -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3609, 1245,\
    \ 583) !== 583) { throw new Exception(\"Test failed!\"); }\n    if (candidate(91,\
    \ 56, 129) !== 129) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 34, 1234) !== 1234) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 2, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 0) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Error: Call to undefined function is_prime()\
    \ in /tmp/tmp2k5iunl1.php:8\nStack trace:\n#0 /tmp/tmp2k5iunl1.php(16): x_or_y()\n\
    #1 /tmp/tmp2k5iunl1.php(20): candidate()\n#2 /tmp/tmp2k5iunl1.php(32): test()\n\
    #3 {main}\n  thrown in /tmp/tmp2k5iunl1.php on line 8\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n    $isPrime = true;\n    for ($i = 2; $i < $n; $i++) {\n       \
    \ if ($n % $i == 0) {\n            $isPrime = false;\n            break;\n   \
    \     }\n    }\n    if ($isPrime) {\n        return $x;\n    } else {\n      \
    \  return $y;\n    }\n}\n\necho x_or_y(7, 34, 12) . \"\\n\";\necho x_or_y(15,\
    \ 8, 5) . \"\\n\";\nfunction candidate(...$args) {\n    return x_or_y(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7, 34, 12) !== 34) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(15, 8, 5) !== 5) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(3, 33, 5212) !== 33) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(1259, 3, 52) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(7919, -1, 12) !==\
    \ -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3609, 1245,\
    \ 583) !== 583) { throw new Exception(\"Test failed!\"); }\n    if (candidate(91,\
    \ 56, 129) !== 129) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 34, 1234) !== 1234) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 2, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 0) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "34\n5\n"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpnasuipz5.php:37\n\
    Stack trace:\n#0 /tmp/tmpnasuipz5.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpnasuipz5.php\
    \ on line 37\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n  if ($n % 2 == 0) {\n    return $y;\n  } else {\n    return $x;\n\
    \  }\n}\n\necho x_or_y(7, 34, 12) . \"\\n\";\necho x_or_y(15, 8, 5) . \"\\n\"\
    ;\nfunction candidate(...$args) {\n    return x_or_y(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(7, 34, 12) !== 34) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(15, 8, 5) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3, 33, 5212) !== 33) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1259, 3, 52) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7919, -1, 12) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3609, 1245, 583) !== 583) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(91, 56, 129) !== 129) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 34, 1234) !== 1234) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 2, 0) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 2, 0) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "34\n8\n"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpdnb9ykfz.php:23\n\
    Stack trace:\n#0 /tmp/tmpdnb9ykfz.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpdnb9ykfz.php\
    \ on line 23\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n    if ($n == 2) {\n        return $x;\n    }\n    if ($n % 2 ==\
    \ 0) {\n        return $y;\n    }\n    for ($i = 3; $i <= sqrt($n); $i += 2) {\n\
    \        if ($n % $i == 0) {\n            return $y;\n        }\n    }\n    return\
    \ $x;\n}\n\nfunction candidate(...$args) {\n    return x_or_y(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(7, 34, 12) !== 34) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(15, 8, 5) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3, 33, 5212) !== 33) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1259, 3, 52) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7919, -1, 12) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3609, 1245, 583) !== 583) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(91, 56, 129) !== 129) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 34, 1234) !== 1234) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 2, 0) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 2, 0) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmprocv4uck.php:35\n\
    Stack trace:\n#0 /tmp/tmprocv4uck.php(39): test()\n#1 {main}\n  thrown in /tmp/tmprocv4uck.php\
    \ on line 35\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n    for ($i = 2; $i < $n; $i++) {\n        if ($n % $i == 0) {\n\
    \            return $y;\n        }\n    }\n    return $x;\n}\n\necho x_or_y(7,\
    \ 34, 12) . \"\\n\";\necho x_or_y(15, 8, 5) . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return x_or_y(...$args);\n}\n\nfunction test(): void {\n    if (candidate(7,\
    \ 34, 12) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15,\
    \ 8, 5) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 33, 5212) !== 33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1259,\
    \ 3, 52) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7919,\
    \ -1, 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3609,\
    \ 1245, 583) !== 583) { throw new Exception(\"Test failed!\"); }\n    if (candidate(91,\
    \ 56, 129) !== 129) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 34, 1234) !== 1234) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 2, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 0) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "34\n5\n"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpqhl675q5.php:31\n\
    Stack trace:\n#0 /tmp/tmpqhl675q5.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpqhl675q5.php\
    \ on line 31\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n    if ($n % 2 == 0) {\n        return $y;\n    } else {\n      \
    \  return $x;\n    }\n}\n\necho x_or_y(7, 34, 12);\necho x_or_y(15, 8, 5);\nfunction\
    \ candidate(...$args) {\n    return x_or_y(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(7, 34, 12) !== 34) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(15, 8, 5) !== 5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3, 33, 5212) !== 33) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1259, 3, 52) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(7919, -1, 12) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3609, 1245, 583) !== 583) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(91, 56, 129) !== 129) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 34, 1234) !== 1234) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 2, 0) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 2, 0) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: '348'
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpms99q0w1.php:23\n\
    Stack trace:\n#0 /tmp/tmpms99q0w1.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpms99q0w1.php\
    \ on line 23\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n    if ($n == 2) {\n        return $x;\n    }\n    for ($i = 2; $i\
    \ < $n; $i++) {\n        if ($n % $i == 0) {\n            return $y;\n       \
    \ }\n    }\n    return $x;\n}\n\nfunction candidate(...$args) {\n    return x_or_y(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7, 34, 12) !== 34) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(15, 8, 5) !== 5) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(3, 33, 5212) !== 33) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(1259, 3, 52) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(7919, -1, 12) !==\
    \ -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3609, 1245,\
    \ 583) !== 583) { throw new Exception(\"Test failed!\"); }\n    if (candidate(91,\
    \ 56, 129) !== 129) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 34, 1234) !== 1234) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 2, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 0) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp9833qxk8.php:32\n\
    Stack trace:\n#0 /tmp/tmp9833qxk8.php(36): test()\n#1 {main}\n  thrown in /tmp/tmp9833qxk8.php\
    \ on line 32\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n  if ($n == 2) {\n    return $x;\n  }\n  for ($i = 2; $i < $n; $i++)\
    \ {\n    if ($n % $i == 0) {\n      return $y;\n    }\n  }\n  return $x;\n}\n\n\
    echo x_or_y(7, 34, 12) . \"\\n\";\necho x_or_y(15, 8, 5) . \"\\n\";\nfunction\
    \ candidate(...$args) {\n    return x_or_y(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(7, 34, 12) !== 34) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(15, 8, 5) !== 5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3, 33, 5212) !== 33) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1259, 3, 52) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(7919, -1, 12) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3609, 1245, 583) !== 583) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(91, 56, 129) !== 129) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 34, 1234) !== 1234) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 2, 0) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 2, 0) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "34\n5\n"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpkp39_8ht.php:34\n\
    Stack trace:\n#0 /tmp/tmpkp39_8ht.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpkp39_8ht.php\
    \ on line 34\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n  if ($n % 2 == 0) {\n    return $y;\n  } else {\n    return $x;\n\
    \  }\n}\n\necho x_or_y(7, 34, 12) . \"\\n\";\necho x_or_y(15, 8, 5) . \"\\n\"\
    ;\nfunction candidate(...$args) {\n    return x_or_y(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(7, 34, 12) !== 34) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(15, 8, 5) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3, 33, 5212) !== 33) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1259, 3, 52) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7919, -1, 12) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3609, 1245, 583) !== 583) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(91, 56, 129) !== 129) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 34, 1234) !== 1234) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 2, 0) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 2, 0) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "34\n8\n"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpp_0ted0y.php:23\n\
    Stack trace:\n#0 /tmp/tmpp_0ted0y.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpp_0ted0y.php\
    \ on line 23\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n    if ($n % 2 == 0) {\n        return $y;\n    } else {\n      \
    \  return $x;\n    }\n}\n\necho x_or_y(7, 34, 12) . PHP_EOL;\necho x_or_y(15,\
    \ 8, 5) . PHP_EOL;\n\nfunction candidate(...$args) {\n    return x_or_y(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7, 34, 12) !== 34) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(15, 8, 5) !== 5) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(3, 33, 5212) !== 33) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(1259, 3, 52) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(7919, -1, 12) !==\
    \ -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3609, 1245,\
    \ 583) !== 583) { throw new Exception(\"Test failed!\"); }\n    if (candidate(91,\
    \ 56, 129) !== 129) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 34, 1234) !== 1234) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 2, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 0) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "34\n8\n"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp97l87d26.php:24\n\
    Stack trace:\n#0 /tmp/tmp97l87d26.php(35): test()\n#1 {main}\n  thrown in /tmp/tmp97l87d26.php\
    \ on line 24\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n    if ($n == 2) {\n        return $x;\n    }\n    for ($i = 2; $i\
    \ < $n; $i++) {\n        if ($n % $i == 0) {\n            return $y;\n       \
    \ }\n    }\n    return $x;\n}\n\necho x_or_y(7, 34, 12) . \"\\n\";\necho x_or_y(15,\
    \ 8, 5) . \"\\n\";\necho x_or_y(2, 34, 12) . \"\\n\";\necho x_or_y(3, 34, 12)\
    \ . \"\\n\";\necho x_or_y(5, 34, 12) . \"\\n\";\necho x_or_y(7, 34, 12) . \"\\\
    n\";\necho x_or_y(11, 34, 12) . \"\\n\";\necho x_or_y(13, 34, 12) . \"\\n\";\n\
    echo x_or_y(17, 34, 12) . \"\\n\";\necho x_or_y(19, 34, 12) . \"\\n\";\necho x_or_y(23,\
    \ 34, 12) . \"\\n\";\necho x_or_y(29, 34, 12) . \"\\n\";\necho x_or_y(31, 34,\
    \ 12) . \"\\n\";\necho x_or_y(37, 34, 12) . \"\\n\";\necho x_or_y(41, 34, 12)\
    \ . \"\\n\";\necho x_or_y(43, 34, 12) . \"\\n\";\necho x_or_y(47, 34, 12) . \"\
    \\n\";\necho x_or_y(53, 34, 12) . \"\\n\";\necho x_or_y(59, 34, 12) . \"\\n\"\
    ;\necho x_or_y(61, 34, 12) . \"\\n\";\necho x_or_y(67, 34, 12) . \"\\n\";\necho\
    \ x_or_y(71, 34, 12) . \"\\n\";\necho x_or_y(73, 34, 12) . \"\\n\";\necho x_or_y(79,\
    \ 34, 12) . \"\\n\";\necho x_or_y(83, 34\nfunction candidate(...$args) {\n   \
    \ return x_or_y(...$args);\n}\n\nfunction test(): void {\n    if (candidate(7,\
    \ 34, 12) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15,\
    \ 8, 5) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 33, 5212) !== 33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1259,\
    \ 3, 52) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7919,\
    \ -1, 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3609,\
    \ 1245, 583) !== 583) { throw new Exception(\"Test failed!\"); }\n    if (candidate(91,\
    \ 56, 129) !== 129) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 34, 1234) !== 1234) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 2, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 0) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Parse error:  syntax error, unexpected token \"function\", expecting\
    \ \")\" in /tmp/tmp9t4kxi_v.php on line 44\n"
  exit_code: 255
  status: SyntaxError
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n    // Your code here\n}\n\nfunction candidate(...$args) {\n    return\
    \ x_or_y(...$args);\n}\n\nfunction test(): void {\n    if (candidate(7, 34, 12)\
    \ !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15, 8,\
    \ 5) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 33,\
    \ 5212) !== 33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1259,\
    \ 3, 52) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7919,\
    \ -1, 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3609,\
    \ 1245, 583) !== 583) { throw new Exception(\"Test failed!\"); }\n    if (candidate(91,\
    \ 56, 129) !== 129) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 34, 1234) !== 1234) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 2, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 0) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp4jcee92b.php:16\n\
    Stack trace:\n#0 /tmp/tmp4jcee92b.php(28): test()\n#1 {main}\n  thrown in /tmp/tmp4jcee92b.php\
    \ on line 16\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n    for ($i = 2; $i < $n; $i++) {\n        if ($n % $i == 0) {\n\
    \            return $y;\n        }\n    }\n    return $x;\n}\n\necho x_or_y(7,\
    \ 34, 12);\necho \"\\n\";\necho x_or_y(15, 8, 5);\necho \"\\n\";\necho x_or_y(5,\
    \ 8, 5);\necho \"\\n\";\necho x_or_y(11, 8, 5);\necho \"\\n\";\necho x_or_y(13,\
    \ 8, 5);\necho \"\\n\";\necho x_or_y(17, 8, 5);\necho \"\\n\";\necho x_or_y(19,\
    \ 8, 5);\necho \"\\n\";\necho x_or_y(23, 8, 5);\necho \"\\n\";\necho x_or_y(29,\
    \ 8, 5);\necho \"\\n\";\necho x_or_y(31, 8, 5);\necho \"\\n\";\necho x_or_y(37,\
    \ 8, 5);\necho \"\\n\";\necho x_or_y(41, 8, 5);\necho \"\\n\";\necho x_or_y(43,\
    \ 8, 5);\necho \"\\n\";\necho x_or_y(47, 8, 5);\necho \"\\n\";\necho x_or_y(53,\
    \ 8, 5);\necho \"\\n\";\necho x_or_y(59, 8, 5);\necho \"\\n\";\necho x_or_y(61,\
    \ 8, 5);\necho \"\\n\";\necho x_or_y(67, 8, 5);\necho \"\\n\";\necho x_or_y(71,\
    \ 8, 5);\necho \"\\n\";\necho x_or_y(73, 8, 5);\necho \"\\n\";\necho x_or_y(79,\
    \ 8, 5);\necho \"\\n\";\necho x_or_y(83, 8, 5);\necho \"\\n\";\necho x_or_y(89,\
    \ 8, 5);\necho \"\\n\";\necho x_or_y(97, 8, 5);\necho \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return x_or_y(...$args);\n}\n\nfunction test(): void {\n    if (candidate(7,\
    \ 34, 12) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15,\
    \ 8, 5) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 33, 5212) !== 33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1259,\
    \ 3, 52) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7919,\
    \ -1, 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3609,\
    \ 1245, 583) !== 583) { throw new Exception(\"Test failed!\"); }\n    if (candidate(91,\
    \ 56, 129) !== 129) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 34, 1234) !== 1234) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 2, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 0) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "34\n5\n8\n8\n8\n8\n8\n8\n8\n8\n8\n8\n8\n8\n8\n8\n8\n8\n8\n8\n8\n8\n8\n\
    8\n"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpbrp6ks9z.php:77\n\
    Stack trace:\n#0 /tmp/tmpbrp6ks9z.php(81): test()\n#1 {main}\n  thrown in /tmp/tmpbrp6ks9z.php\
    \ on line 77\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n    if ($n % 2 == 0) {\n        return $y;\n    } else {\n      \
    \  return $x;\n    }\n}\n\necho x_or_y(7, 34, 12) . \"\\n\";\necho x_or_y(15,\
    \ 8, 5) . \"\\n\";\nfunction candidate(...$args) {\n    return x_or_y(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7, 34, 12) !== 34) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(15, 8, 5) !== 5) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(3, 33, 5212) !== 33) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(1259, 3, 52) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(7919, -1, 12) !==\
    \ -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3609, 1245,\
    \ 583) !== 583) { throw new Exception(\"Test failed!\"); }\n    if (candidate(91,\
    \ 56, 129) !== 129) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 34, 1234) !== 1234) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 2, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 0) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "34\n8\n"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpulg_hy7r.php:23\n\
    Stack trace:\n#0 /tmp/tmpulg_hy7r.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpulg_hy7r.php\
    \ on line 23\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n  // TODO: implement this function\n}\n\nfunction candidate(...$args)\
    \ {\n    return x_or_y(...$args);\n}\n\nfunction test(): void {\n    if (candidate(7,\
    \ 34, 12) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15,\
    \ 8, 5) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 33, 5212) !== 33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1259,\
    \ 3, 52) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7919,\
    \ -1, 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3609,\
    \ 1245, 583) !== 583) { throw new Exception(\"Test failed!\"); }\n    if (candidate(91,\
    \ 56, 129) !== 129) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 34, 1234) !== 1234) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 2, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 0) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp4pyc5qnb.php:16\n\
    Stack trace:\n#0 /tmp/tmp4pyc5qnb.php(28): test()\n#1 {main}\n  thrown in /tmp/tmp4pyc5qnb.php\
    \ on line 16\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n    if ($n == 2) {\n        return $x;\n    }\n    for ($i = 2; $i\
    \ < $n; $i++) {\n        if ($n % $i == 0) {\n            return $y;\n       \
    \ }\n    }\n    return $x;\n}\n\necho x_or_y(7, 34, 12);\necho \"\\n\";\necho\
    \ x_or_y(15, 8, 5);\necho \"\\n\";\nfunction candidate(...$args) {\n    return\
    \ x_or_y(...$args);\n}\n\nfunction test(): void {\n    if (candidate(7, 34, 12)\
    \ !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15, 8,\
    \ 5) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 33,\
    \ 5212) !== 33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1259,\
    \ 3, 52) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7919,\
    \ -1, 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3609,\
    \ 1245, 583) !== 583) { throw new Exception(\"Test failed!\"); }\n    if (candidate(91,\
    \ 56, 129) !== 129) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 34, 1234) !== 1234) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 2, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 0) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "34\n5\n"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp87vrpy3r.php:36\n\
    Stack trace:\n#0 /tmp/tmp87vrpy3r.php(40): test()\n#1 {main}\n  thrown in /tmp/tmp87vrpy3r.php\
    \ on line 36\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n    for ($i = 2; $i < $n; $i++) {\n        if ($n % $i == 0) {\n\
    \            return $y;\n        }\n    }\n    return $x;\n}\n\nfunction candidate(...$args)\
    \ {\n    return x_or_y(...$args);\n}\n\nfunction test(): void {\n    if (candidate(7,\
    \ 34, 12) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15,\
    \ 8, 5) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 33, 5212) !== 33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1259,\
    \ 3, 52) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7919,\
    \ -1, 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3609,\
    \ 1245, 583) !== 583) { throw new Exception(\"Test failed!\"); }\n    if (candidate(91,\
    \ 56, 129) !== 129) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 34, 1234) !== 1234) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 2, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 0) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpimpn2o5f.php:29\n\
    Stack trace:\n#0 /tmp/tmpimpn2o5f.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpimpn2o5f.php\
    \ on line 29\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n    if ($n == 2) {\n        return $x;\n    }\n    for ($i = 2; $i\
    \ < $n; $i++) {\n        if ($n % $i == 0) {\n            return $y;\n       \
    \ }\n    }\n    return $x;\n}\n\nfunction candidate(...$args) {\n    return x_or_y(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7, 34, 12) !== 34) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(15, 8, 5) !== 5) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(3, 33, 5212) !== 33) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(1259, 3, 52) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(7919, -1, 12) !==\
    \ -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3609, 1245,\
    \ 583) !== 583) { throw new Exception(\"Test failed!\"); }\n    if (candidate(91,\
    \ 56, 129) !== 129) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 34, 1234) !== 1234) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 2, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 0) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpw7jei1ns.php:32\n\
    Stack trace:\n#0 /tmp/tmpw7jei1ns.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpw7jei1ns.php\
    \ on line 32\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n  if ($n <= 1) {\n    return $y;\n  }\n  for ($i = 2; $i <= sqrt($n);\
    \ $i++) {\n    if ($n % $i == 0) {\n      return $y;\n    }\n  }\n  return $x;\n\
    }\n\necho x_or_y(7, 34, 12) . \"\\n\";\necho x_or_y(15, 8, 5) . \"\\n\";\necho\
    \ x_or_y(1, 8, 5) . \"\\n\";\necho x_or_y(2, 8, 5) . \"\\n\";\necho x_or_y(3,\
    \ 8, 5) . \"\\n\";\necho x_or_y(4, 8, 5) . \"\\n\";\necho x_or_y(5, 8, 5) . \"\
    \\n\";\necho x_or_y(6, 8, 5) . \"\\n\";\necho x_or_y(7, 8, 5) . \"\\n\";\necho\
    \ x_or_y(8, 8, 5) . \"\\n\";\necho x_or_y(9, 8, 5) . \"\\n\";\necho x_or_y(10,\
    \ 8, 5) . \"\\n\";\necho x_or_y(11, 8, 5) . \"\\n\";\necho x_or_y(12, 8, 5) .\
    \ \"\\n\";\necho x_or_y(13, 8, 5) . \"\\n\";\necho x_or_y(14, 8, 5) . \"\\n\"\
    ;\necho x_or_y(15, 8, 5) . \"\\n\";\necho x_or_y(16, 8, 5) . \"\\n\";\necho x_or_y(17,\
    \ 8, 5) . \"\\n\";\necho x_or_y(18, 8, 5) . \"\\n\";\necho x_or_y(19, 8, 5) .\
    \ \"\\n\";\necho x_or_y(20, 8, 5) . \"\\n\";\necho x_or_y(21, 8, 5) . \"\\n\"\
    ;\necho x_or_y(22, 8, 5) . \"\\n\";\necho x_or_y(23\nfunction candidate(...$args)\
    \ {\n    return x_or_y(...$args);\n}\n\nfunction test(): void {\n    if (candidate(7,\
    \ 34, 12) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15,\
    \ 8, 5) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 33, 5212) !== 33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1259,\
    \ 3, 52) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7919,\
    \ -1, 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3609,\
    \ 1245, 583) !== 583) { throw new Exception(\"Test failed!\"); }\n    if (candidate(91,\
    \ 56, 129) !== 129) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 34, 1234) !== 1234) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 2, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 0) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Parse error:  syntax error, unexpected token \"function\", expecting\
    \ \")\" in /tmp/tmpk1am7ueg.php on line 44\n"
  exit_code: 255
  status: SyntaxError
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n  // Your code here\n}\n\nfunction candidate(...$args) {\n    return\
    \ x_or_y(...$args);\n}\n\nfunction test(): void {\n    if (candidate(7, 34, 12)\
    \ !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15, 8,\
    \ 5) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 33,\
    \ 5212) !== 33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1259,\
    \ 3, 52) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7919,\
    \ -1, 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3609,\
    \ 1245, 583) !== 583) { throw new Exception(\"Test failed!\"); }\n    if (candidate(91,\
    \ 56, 129) !== 129) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 34, 1234) !== 1234) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 2, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 0) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpc4h4s2h6.php:16\n\
    Stack trace:\n#0 /tmp/tmpc4h4s2h6.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpc4h4s2h6.php\
    \ on line 16\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n  if ($n == 2) {\n    return $x;\n  }\n  for ($i = 2; $i < $n; $i++)\
    \ {\n    if ($n % $i == 0) {\n      return $y;\n    }\n  }\n  return $x;\n}\n\n\
    function candidate(...$args) {\n    return x_or_y(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(7, 34, 12) !== 34) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(15, 8, 5) !== 5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3, 33, 5212) !== 33) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1259, 3, 52) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(7919, -1, 12) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3609, 1245, 583) !== 583) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(91, 56, 129) !== 129) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 34, 1234) !== 1234) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 2, 0) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 2, 0) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp12oi0oz_.php:32\n\
    Stack trace:\n#0 /tmp/tmp12oi0oz_.php(36): test()\n#1 {main}\n  thrown in /tmp/tmp12oi0oz_.php\
    \ on line 32\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n\t$isPrime = true;\n\tfor ($i = 2; $i < $n; $i++) {\n\t\tif ($n %\
    \ $i == 0) {\n\t\t\t$isPrime = false;\n\t\t\tbreak;\n\t\t}\n\t}\n\tif ($isPrime)\
    \ {\n\t\treturn $x;\n\t} else {\n\t\treturn $y;\n\t}\n}\n\necho x_or_y(7, 34,\
    \ 12) . \"\\n\";\necho x_or_y(15, 8, 5) . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return x_or_y(...$args);\n}\n\nfunction test(): void {\n    if (candidate(7,\
    \ 34, 12) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15,\
    \ 8, 5) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 33, 5212) !== 33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1259,\
    \ 3, 52) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7919,\
    \ -1, 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3609,\
    \ 1245, 583) !== 583) { throw new Exception(\"Test failed!\"); }\n    if (candidate(91,\
    \ 56, 129) !== 129) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 34, 1234) !== 1234) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 2, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 0) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "34\n5\n"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpxsl_6y86.php:37\n\
    Stack trace:\n#0 /tmp/tmpxsl_6y86.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpxsl_6y86.php\
    \ on line 37\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n    if ($n == 2) {\n        return $x;\n    }\n    for ($i = 2; $i\
    \ < $n; $i++) {\n        if ($n % $i == 0) {\n            return $y;\n       \
    \ }\n    }\n    return $x;\n}\n\necho x_or_y(7, 34, 12) . \"\\n\";\necho x_or_y(15,\
    \ 8, 5) . \"\\n\";\necho x_or_y(2, 8, 5) . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return x_or_y(...$args);\n}\n\nfunction test(): void {\n    if (candidate(7,\
    \ 34, 12) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15,\
    \ 8, 5) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 33, 5212) !== 33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1259,\
    \ 3, 52) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7919,\
    \ -1, 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3609,\
    \ 1245, 583) !== 583) { throw new Exception(\"Test failed!\"); }\n    if (candidate(91,\
    \ 56, 129) !== 129) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 34, 1234) !== 1234) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 2, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 0) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "34\n5\n8\n"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpfwup9byf.php:35\n\
    Stack trace:\n#0 /tmp/tmpfwup9byf.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpfwup9byf.php\
    \ on line 35\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n    if($n % 2 == 0) {\n        return $y;\n    } else {\n       \
    \ return $x;\n    }\n}\n\necho x_or_y(7, 34, 12);\necho x_or_y(15, 8, 5);\nfunction\
    \ candidate(...$args) {\n    return x_or_y(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(7, 34, 12) !== 34) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(15, 8, 5) !== 5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3, 33, 5212) !== 33) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1259, 3, 52) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(7919, -1, 12) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3609, 1245, 583) !== 583) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(91, 56, 129) !== 129) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 34, 1234) !== 1234) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 2, 0) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 2, 0) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: '348'
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpa595vz38.php:23\n\
    Stack trace:\n#0 /tmp/tmpa595vz38.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpa595vz38.php\
    \ on line 23\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n    if ($n == 2) {\n        return $x;\n    }\n    for ($i = 2; $i\
    \ < $n; $i++) {\n        if ($n % $i == 0) {\n            return $y;\n       \
    \ }\n    }\n    return $x;\n}\n\necho x_or_y(7, 34, 12);\necho \"\\n\";\necho\
    \ x_or_y(15, 8, 5);\necho \"\\n\";\necho x_or_y(2, 34, 12);\necho \"\\n\";\necho\
    \ x_or_y(3, 34, 12);\necho \"\\n\";\necho x_or_y(4, 34, 12);\necho \"\\n\";\n\
    echo x_or_y(5, 34, 12);\necho \"\\n\";\necho x_or_y(6, 34, 12);\necho \"\\n\"\
    ;\necho x_or_y(7, 34, 12);\necho \"\\n\";\necho x_or_y(8, 34, 12);\necho \"\\\
    n\";\necho x_or_y(9, 34, 12);\necho \"\\n\";\necho x_or_y(10, 34, 12);\necho \"\
    \\n\";\necho x_or_y(11, 34, 12);\necho \"\\n\";\necho x_or_y(12, 34, 12);\necho\
    \ \"\\n\";\necho x_or_y(13, 34, 12);\necho \"\\n\";\necho x_or_y(14, 34, 12);\n\
    echo \"\\n\";\necho x_or_y(15, 34, 12);\necho \"\\n\";\necho x_or_y(16, 34, 12);\n\
    echo \"\\n\";\necho x_or_y(17, 34, 12);\necho \"\\n\";\necho x_or_y(18, 34, 12);\n\
    echo \"\\n\";\necho x_or_y(19, 34, 12);\necho \"\\n\";\necho x_or_y(20, 34, 12);\n\
    echo \"\\n\";\necho x_or_y(21, 34, 12);\necho \"\\n\";\necho x_or_y(22, 34, 12);\n\
    echo \"\\n\";\necho x_or_\nfunction candidate(...$args) {\n    return x_or_y(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7, 34, 12) !== 34) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(15, 8, 5) !== 5) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(3, 33, 5212) !== 33) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(1259, 3, 52) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(7919, -1, 12) !==\
    \ -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3609, 1245,\
    \ 583) !== 583) { throw new Exception(\"Test failed!\"); }\n    if (candidate(91,\
    \ 56, 129) !== 129) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 34, 1234) !== 1234) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 2, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 0) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Parse error:  syntax error, unexpected token \"function\", expecting\
    \ \",\" or \";\" in /tmp/tmpm0_20wur.php on line 66\n"
  exit_code: 255
  status: SyntaxError
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n    if ($n % 2 == 0) {\n        return $y;\n    } else {\n      \
    \  return $x;\n    }\n}\n\nfunction candidate(...$args) {\n    return x_or_y(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7, 34, 12) !== 34) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(15, 8, 5) !== 5) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(3, 33, 5212) !== 33) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(1259, 3, 52) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(7919, -1, 12) !==\
    \ -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3609, 1245,\
    \ 583) !== 583) { throw new Exception(\"Test failed!\"); }\n    if (candidate(91,\
    \ 56, 129) !== 129) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 34, 1234) !== 1234) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 2, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 0) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmppfhi0g4z.php:21\n\
    Stack trace:\n#0 /tmp/tmppfhi0g4z.php(32): test()\n#1 {main}\n  thrown in /tmp/tmppfhi0g4z.php\
    \ on line 21\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n  if ($n < 2) {\n    return $y;\n  }\n  for ($i = 2; $i < $n; $i++)\
    \ {\n    if ($n % $i == 0) {\n      return $y;\n    }\n  }\n  return $x;\n}\n\n\
    echo x_or_y(7, 34, 12) . \"\\n\";\necho x_or_y(15, 8, 5) . \"\\n\";\nfunction\
    \ candidate(...$args) {\n    return x_or_y(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(7, 34, 12) !== 34) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(15, 8, 5) !== 5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3, 33, 5212) !== 33) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1259, 3, 52) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(7919, -1, 12) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3609, 1245, 583) !== 583) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(91, 56, 129) !== 129) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 34, 1234) !== 1234) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 2, 0) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 2, 0) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "34\n5\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n    if ($n % 2 == 0) {\n        return $y;\n    } else {\n      \
    \  return $x;\n    }\n}\n\necho x_or_y(7, 34, 12);\necho \"<br>\";\necho x_or_y(15,\
    \ 8, 5);\nfunction candidate(...$args) {\n    return x_or_y(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(7, 34, 12) !== 34) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(15, 8, 5) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3, 33, 5212) !== 33) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1259, 3, 52) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7919, -1, 12) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3609, 1245, 583) !== 583) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(91, 56, 129) !== 129) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 34, 1234) !== 1234) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 2, 0) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 2, 0) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: 34<br>8
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpbtzb6mx5.php:24\n\
    Stack trace:\n#0 /tmp/tmpbtzb6mx5.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpbtzb6mx5.php\
    \ on line 24\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n  if ($n % 2 == 0) {\n    return $y;\n  } else {\n    return $x;\n\
    \  }\n}\n\necho x_or_y(7, 34, 12) . \"\\n\";\necho x_or_y(15, 8, 5) . \"\\n\"\
    ;\nfunction candidate(...$args) {\n    return x_or_y(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(7, 34, 12) !== 34) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(15, 8, 5) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3, 33, 5212) !== 33) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1259, 3, 52) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7919, -1, 12) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3609, 1245, 583) !== 583) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(91, 56, 129) !== 129) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 34, 1234) !== 1234) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 2, 0) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 2, 0) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "34\n8\n"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpsyoszi01.php:23\n\
    Stack trace:\n#0 /tmp/tmpsyoszi01.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpsyoszi01.php\
    \ on line 23\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n    if ($n == 2) {\n        return $x;\n    }\n    if ($n % 2 ==\
    \ 0) {\n        return $y;\n    }\n    for ($i = 3; $i <= sqrt($n); $i += 2) {\n\
    \        if ($n % $i == 0) {\n            return $y;\n        }\n    }\n    return\
    \ $x;\n}\n\necho x_or_y(7, 34, 12) . \"\\n\";\necho x_or_y(15, 8, 5) . \"\\n\"\
    ;\necho x_or_y(2, 34, 12) . \"\\n\";\necho x_or_y(1, 34, 12) . \"\\n\";\necho\
    \ x_or_y(3, 34, 12) . \"\\n\";\necho x_or_y(4, 34, 12) . \"\\n\";\necho x_or_y(5,\
    \ 34, 12) . \"\\n\";\necho x_or_y(6, 34, 12) . \"\\n\";\necho x_or_y(7, 34, 12)\
    \ . \"\\n\";\necho x_or_y(8, 34, 12) . \"\\n\";\necho x_or_y(9, 34, 12) . \"\\\
    n\";\necho x_or_y(10, 34, 12) . \"\\n\";\necho x_or_y(11, 34, 12) . \"\\n\";\n\
    echo x_or_y(12, 34, 12) . \"\\n\";\necho x_or_y(13, 34, 12) . \"\\n\";\necho x_or_y(14,\
    \ 34, 12) . \"\\n\";\necho x_or_y(15, 34, 12) . \"\\n\";\necho x_or_y(16, 34,\
    \ 12) . \"\\n\";\necho x_or_y(17, 34, 12) . \"\\n\";\necho x_or_y(18, 34, 12)\
    \ . \"\\n\";\necho x_or_y(19, 34, 12) . \"\\n\";\necho x_or_y(20, 34, 12) . \"\
    \\n\";\necho x_or_y(21, 34, 12) . \"\\n\";\necho x_or\nfunction candidate(...$args)\
    \ {\n    return x_or_y(...$args);\n}\n\nfunction test(): void {\n    if (candidate(7,\
    \ 34, 12) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15,\
    \ 8, 5) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 33, 5212) !== 33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1259,\
    \ 3, 52) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7919,\
    \ -1, 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3609,\
    \ 1245, 583) !== 583) { throw new Exception(\"Test failed!\"); }\n    if (candidate(91,\
    \ 56, 129) !== 129) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 34, 1234) !== 1234) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 2, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 0) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Parse error:  syntax error, unexpected token \"function\", expecting\
    \ \",\" or \";\" in /tmp/tmpd0_o5i58.php on line 46\n"
  exit_code: 255
  status: SyntaxError
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n    if ($n < 2) {\n        return $y;\n    }\n    for ($i = 2; $i\
    \ < $n; $i++) {\n        if ($n % $i == 0) {\n            return $y;\n       \
    \ }\n    }\n    return $x;\n}\nfunction candidate(...$args) {\n    return x_or_y(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7, 34, 12) !== 34) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(15, 8, 5) !== 5) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(3, 33, 5212) !== 33) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(1259, 3, 52) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(7919, -1, 12) !==\
    \ -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3609, 1245,\
    \ 583) !== 583) { throw new Exception(\"Test failed!\"); }\n    if (candidate(91,\
    \ 56, 129) !== 129) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 34, 1234) !== 1234) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 2, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 0) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n  $isPrime = true;\n  for ($i = 2; $i < $n; $i++) {\n    if ($n %\
    \ $i == 0) {\n      $isPrime = false;\n      break;\n    }\n  }\n  if ($isPrime)\
    \ {\n    return $x;\n  } else {\n    return $y;\n  }\n}\n\necho x_or_y(7, 34,\
    \ 12) . \"\\n\";\necho x_or_y(15, 8, 5) . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return x_or_y(...$args);\n}\n\nfunction test(): void {\n    if (candidate(7,\
    \ 34, 12) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15,\
    \ 8, 5) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 33, 5212) !== 33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1259,\
    \ 3, 52) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7919,\
    \ -1, 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3609,\
    \ 1245, 583) !== 583) { throw new Exception(\"Test failed!\"); }\n    if (candidate(91,\
    \ 56, 129) !== 129) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 34, 1234) !== 1234) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 2, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 0) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "34\n5\n"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp3886740q.php:37\n\
    Stack trace:\n#0 /tmp/tmp3886740q.php(41): test()\n#1 {main}\n  thrown in /tmp/tmp3886740q.php\
    \ on line 37\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n\tif (is_prime($n)) {\n\t\treturn $x;\n\t} else {\n\t\treturn $y;\n\
    \t}\n}\n\nfunction candidate(...$args) {\n    return x_or_y(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(7, 34, 12) !== 34) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(15, 8, 5) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3, 33, 5212) !== 33) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1259, 3, 52) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7919, -1, 12) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3609, 1245, 583) !== 583) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(91, 56, 129) !== 129) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 34, 1234) !== 1234) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 2, 0) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 2, 0) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Error: Call to undefined function is_prime()\
    \ in /tmp/tmp4yj2p_j5.php:8\nStack trace:\n#0 /tmp/tmp4yj2p_j5.php(16): x_or_y()\n\
    #1 /tmp/tmp4yj2p_j5.php(20): candidate()\n#2 /tmp/tmp4yj2p_j5.php(32): test()\n\
    #3 {main}\n  thrown in /tmp/tmp4yj2p_j5.php on line 8\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n    $isPrime = true;\n    for ($i = 2; $i < $n; $i++) {\n       \
    \ if ($n % $i == 0) {\n            $isPrime = false;\n            break;\n   \
    \     }\n    }\n    if ($isPrime) {\n        return $x;\n    } else {\n      \
    \  return $y;\n    }\n}\nfunction candidate(...$args) {\n    return x_or_y(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7, 34, 12) !== 34) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(15, 8, 5) !== 5) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(3, 33, 5212) !== 33) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(1259, 3, 52) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(7919, -1, 12) !==\
    \ -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3609, 1245,\
    \ 583) !== 583) { throw new Exception(\"Test failed!\"); }\n    if (candidate(91,\
    \ 56, 129) !== 129) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 34, 1234) !== 1234) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 2, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 0) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp7al2gxst.php:34\n\
    Stack trace:\n#0 /tmp/tmp7al2gxst.php(38): test()\n#1 {main}\n  thrown in /tmp/tmp7al2gxst.php\
    \ on line 34\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n    $isPrime = true;\n    for ($i = 2; $i < $n; $i++) {\n       \
    \ if ($n % $i == 0) {\n            $isPrime = false;\n            break;\n   \
    \     }\n    }\n    if ($isPrime) {\n        return $x;\n    } else {\n      \
    \  return $y;\n    }\n}\n\necho x_or_y(7, 34, 12) . \"\\n\";\necho x_or_y(15,\
    \ 8, 5) . \"\\n\";\nfunction candidate(...$args) {\n    return x_or_y(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7, 34, 12) !== 34) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(15, 8, 5) !== 5) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(3, 33, 5212) !== 33) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(1259, 3, 52) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(7919, -1, 12) !==\
    \ -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3609, 1245,\
    \ 583) !== 583) { throw new Exception(\"Test failed!\"); }\n    if (candidate(91,\
    \ 56, 129) !== 129) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 34, 1234) !== 1234) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 2, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 0) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "34\n5\n"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp7zsviz_s.php:37\n\
    Stack trace:\n#0 /tmp/tmp7zsviz_s.php(41): test()\n#1 {main}\n  thrown in /tmp/tmp7zsviz_s.php\
    \ on line 37\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n    if ($n % 2 == 0) {\n        return $y;\n    }\n    return $x;\n\
    }\nfunction candidate(...$args) {\n    return x_or_y(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(7, 34, 12) !== 34) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(15, 8, 5) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3, 33, 5212) !== 33) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1259, 3, 52) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7919, -1, 12) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3609, 1245, 583) !== 583) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(91, 56, 129) !== 129) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 34, 1234) !== 1234) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 2, 0) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 2, 0) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpd07dl8kp.php:19\n\
    Stack trace:\n#0 /tmp/tmpd07dl8kp.php(30): test()\n#1 {main}\n  thrown in /tmp/tmpd07dl8kp.php\
    \ on line 19\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n    if ($n == 2) {\n        return $x;\n    }\n    for ($i = 2; $i\
    \ < $n; $i++) {\n        if ($n % $i == 0) {\n            return $y;\n       \
    \ }\n    }\n    return $x;\n}\n\nfunction candidate(...$args) {\n    return x_or_y(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7, 34, 12) !== 34) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(15, 8, 5) !== 5) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(3, 33, 5212) !== 33) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(1259, 3, 52) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(7919, -1, 12) !==\
    \ -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3609, 1245,\
    \ 583) !== 583) { throw new Exception(\"Test failed!\"); }\n    if (candidate(91,\
    \ 56, 129) !== 129) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 34, 1234) !== 1234) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 2, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 0) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpnz17ug8t.php:32\n\
    Stack trace:\n#0 /tmp/tmpnz17ug8t.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpnz17ug8t.php\
    \ on line 32\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n  if ($n % 2 == 0) {\n    return $y;\n  } else {\n    return $x;\n\
    \  }\n}\n\necho x_or_y(7, 34, 12) . \"\\n\";\necho x_or_y(15, 8, 5) . \"\\n\"\
    ;\nfunction candidate(...$args) {\n    return x_or_y(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(7, 34, 12) !== 34) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(15, 8, 5) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3, 33, 5212) !== 33) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1259, 3, 52) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7919, -1, 12) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3609, 1245, 583) !== 583) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(91, 56, 129) !== 129) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 34, 1234) !== 1234) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 2, 0) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 2, 0) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "34\n8\n"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp3zr0nfvf.php:23\n\
    Stack trace:\n#0 /tmp/tmp3zr0nfvf.php(34): test()\n#1 {main}\n  thrown in /tmp/tmp3zr0nfvf.php\
    \ on line 23\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n    if ($n < 2) {\n        return $y;\n    }\n    for ($i = 2; $i\
    \ < $n; $i++) {\n        if ($n % $i == 0) {\n            return $y;\n       \
    \ }\n    }\n    return $x;\n}\n\nfunction candidate(...$args) {\n    return x_or_y(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7, 34, 12) !== 34) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(15, 8, 5) !== 5) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(3, 33, 5212) !== 33) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(1259, 3, 52) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(7919, -1, 12) !==\
    \ -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3609, 1245,\
    \ 583) !== 583) { throw new Exception(\"Test failed!\"); }\n    if (candidate(91,\
    \ 56, 129) !== 129) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 34, 1234) !== 1234) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 2, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 0) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n    if ($n < 2) {\n        return $y;\n    }\n    for ($i = 2; $i\
    \ < $n; $i++) {\n        if ($n % $i == 0) {\n            return $y;\n       \
    \ }\n    }\n    return $x;\n}\n\nfunction candidate(...$args) {\n    return x_or_y(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7, 34, 12) !== 34) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(15, 8, 5) !== 5) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(3, 33, 5212) !== 33) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(1259, 3, 52) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(7919, -1, 12) !==\
    \ -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3609, 1245,\
    \ 583) !== 583) { throw new Exception(\"Test failed!\"); }\n    if (candidate(91,\
    \ 56, 129) !== 129) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 34, 1234) !== 1234) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 2, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 0) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n    if ($n % 2 == 0) {\n        return $y;\n    } else {\n      \
    \  return $x;\n    }\n}\n\nfunction candidate(...$args) {\n    return x_or_y(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7, 34, 12) !== 34) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(15, 8, 5) !== 5) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(3, 33, 5212) !== 33) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(1259, 3, 52) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(7919, -1, 12) !==\
    \ -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3609, 1245,\
    \ 583) !== 583) { throw new Exception(\"Test failed!\"); }\n    if (candidate(91,\
    \ 56, 129) !== 129) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 34, 1234) !== 1234) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 2, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 0) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmplrs696au.php:21\n\
    Stack trace:\n#0 /tmp/tmplrs696au.php(32): test()\n#1 {main}\n  thrown in /tmp/tmplrs696au.php\
    \ on line 21\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n  if ($n < 2) {\n    return $y;\n  }\n  for ($i = 2; $i < $n; $i++)\
    \ {\n    if ($n % $i == 0) {\n      return $y;\n    }\n  }\n  return $x;\n}\n\n\
    function candidate(...$args) {\n    return x_or_y(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(7, 34, 12) !== 34) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(15, 8, 5) !== 5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3, 33, 5212) !== 33) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1259, 3, 52) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(7919, -1, 12) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3609, 1245, 583) !== 583) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(91, 56, 129) !== 129) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 34, 1234) !== 1234) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 2, 0) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 2, 0) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n    for ($i = 2; $i < $n; $i++) {\n        if ($n % $i == 0) {\n\
    \            return $y;\n        }\n    }\n    return $x;\n}\n\necho x_or_y(7,\
    \ 34, 12);\necho \"\\n\";\necho x_or_y(15, 8, 5);\necho \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return x_or_y(...$args);\n}\n\nfunction test(): void {\n    if (candidate(7,\
    \ 34, 12) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15,\
    \ 8, 5) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 33, 5212) !== 33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1259,\
    \ 3, 52) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7919,\
    \ -1, 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3609,\
    \ 1245, 583) !== 583) { throw new Exception(\"Test failed!\"); }\n    if (candidate(91,\
    \ 56, 129) !== 129) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 34, 1234) !== 1234) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 2, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 0) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "34\n5\n"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp5474tupg.php:33\n\
    Stack trace:\n#0 /tmp/tmp5474tupg.php(37): test()\n#1 {main}\n  thrown in /tmp/tmp5474tupg.php\
    \ on line 33\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n    $is_prime = true;\n    for ($i = 2; $i < $n; $i++) {\n      \
    \  if ($n % $i == 0) {\n            $is_prime = false;\n            break;\n \
    \       }\n    }\n    if ($is_prime) {\n        return $x;\n    } else {\n   \
    \     return $y;\n    }\n}\n\necho x_or_y(7, 34, 12) . \"\\n\";\necho x_or_y(15,\
    \ 8, 5) . \"\\n\";\nfunction candidate(...$args) {\n    return x_or_y(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7, 34, 12) !== 34) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(15, 8, 5) !== 5) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(3, 33, 5212) !== 33) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(1259, 3, 52) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(7919, -1, 12) !==\
    \ -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3609, 1245,\
    \ 583) !== 583) { throw new Exception(\"Test failed!\"); }\n    if (candidate(91,\
    \ 56, 129) !== 129) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 34, 1234) !== 1234) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 2, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 0) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "34\n5\n"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpsr1j9kw_.php:37\n\
    Stack trace:\n#0 /tmp/tmpsr1j9kw_.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpsr1j9kw_.php\
    \ on line 37\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n    if ($n < 2) {\n        return $y;\n    }\n    for ($i = 2; $i\
    \ <= sqrt($n); $i++) {\n        if ($n % $i == 0) {\n            return $y;\n\
    \        }\n    }\n    return $x;\n}\n\nfunction candidate(...$args) {\n    return\
    \ x_or_y(...$args);\n}\n\nfunction test(): void {\n    if (candidate(7, 34, 12)\
    \ !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15, 8,\
    \ 5) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 33,\
    \ 5212) !== 33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1259,\
    \ 3, 52) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7919,\
    \ -1, 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3609,\
    \ 1245, 583) !== 583) { throw new Exception(\"Test failed!\"); }\n    if (candidate(91,\
    \ 56, 129) !== 129) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 34, 1234) !== 1234) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 2, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 0) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n    if ($n == 2) {\n        return $x;\n    }\n    for ($i = 2; $i\
    \ < $n; $i++) {\n        if ($n % $i == 0) {\n            return $y;\n       \
    \ }\n    }\n    return $x;\n}\n\necho x_or_y(7, 34, 12);\necho x_or_y(15, 8, 5);\n\
    function candidate(...$args) {\n    return x_or_y(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(7, 34, 12) !== 34) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(15, 8, 5) !== 5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3, 33, 5212) !== 33) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1259, 3, 52) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(7919, -1, 12) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3609, 1245, 583) !== 583) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(91, 56, 129) !== 129) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 34, 1234) !== 1234) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 2, 0) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 2, 0) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: '345'
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpmwdi0x4f.php:34\n\
    Stack trace:\n#0 /tmp/tmpmwdi0x4f.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpmwdi0x4f.php\
    \ on line 34\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n    $isPrime = true;\n    for ($i = 2; $i < $n; $i++) {\n       \
    \ if ($n % $i == 0) {\n            $isPrime = false;\n            break;\n   \
    \     }\n    }\n    if ($isPrime) {\n        return $x;\n    } else {\n      \
    \  return $y;\n    }\n}\n\necho x_or_y(7, 34, 12);\necho \"\\n\";\necho x_or_y(15,\
    \ 8, 5);\necho \"\\n\";\nfunction candidate(...$args) {\n    return x_or_y(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7, 34, 12) !== 34) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(15, 8, 5) !== 5) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(3, 33, 5212) !== 33) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(1259, 3, 52) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(7919, -1, 12) !==\
    \ -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3609, 1245,\
    \ 583) !== 583) { throw new Exception(\"Test failed!\"); }\n    if (candidate(91,\
    \ 56, 129) !== 129) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 34, 1234) !== 1234) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 2, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 0) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "34\n5\n"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpgkjgezt_.php:39\n\
    Stack trace:\n#0 /tmp/tmpgkjgezt_.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpgkjgezt_.php\
    \ on line 39\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n  // TODO: Implement this function\n}\n\nfunction candidate(...$args)\
    \ {\n    return x_or_y(...$args);\n}\n\nfunction test(): void {\n    if (candidate(7,\
    \ 34, 12) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15,\
    \ 8, 5) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 33, 5212) !== 33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1259,\
    \ 3, 52) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7919,\
    \ -1, 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3609,\
    \ 1245, 583) !== 583) { throw new Exception(\"Test failed!\"); }\n    if (candidate(91,\
    \ 56, 129) !== 129) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 34, 1234) !== 1234) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 2, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 0) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpjtmtuavc.php:16\n\
    Stack trace:\n#0 /tmp/tmpjtmtuavc.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpjtmtuavc.php\
    \ on line 16\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n    if ($n == 1) {\n        return $y;\n    }\n    for ($i = 2; $i\
    \ < $n; $i++) {\n        if ($n % $i == 0) {\n            return $y;\n       \
    \ }\n    }\n    return $x;\n}\n\necho x_or_y(7, 34, 12) . \"\\n\";\necho x_or_y(15,\
    \ 8, 5) . \"\\n\";\nfunction candidate(...$args) {\n    return x_or_y(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7, 34, 12) !== 34) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(15, 8, 5) !== 5) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(3, 33, 5212) !== 33) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(1259, 3, 52) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(7919, -1, 12) !==\
    \ -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3609, 1245,\
    \ 583) !== 583) { throw new Exception(\"Test failed!\"); }\n    if (candidate(91,\
    \ 56, 129) !== 129) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 34, 1234) !== 1234) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 2, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 0) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "34\n5\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n    if ($n < 2) {\n        return $y;\n    }\n    for ($i = 2; $i\
    \ < $n; $i++) {\n        if ($n % $i == 0) {\n            return $y;\n       \
    \ }\n    }\n    return $x;\n}\n\necho x_or_y(7, 34, 12) . \"\\n\";\necho x_or_y(15,\
    \ 8, 5) . \"\\n\";\necho x_or_y(1, 8, 5) . \"\\n\";\necho x_or_y(2, 8, 5) . \"\
    \\n\";\necho x_or_y(3, 8, 5) . \"\\n\";\necho x_or_y(4, 8, 5) . \"\\n\";\necho\
    \ x_or_y(5, 8, 5) . \"\\n\";\necho x_or_y(6, 8, 5) . \"\\n\";\necho x_or_y(7,\
    \ 8, 5) . \"\\n\";\necho x_or_y(8, 8, 5) . \"\\n\";\necho x_or_y(9, 8, 5) . \"\
    \\n\";\necho x_or_y(10, 8, 5) . \"\\n\";\necho x_or_y(11, 8, 5) . \"\\n\";\necho\
    \ x_or_y(12, 8, 5) . \"\\n\";\necho x_or_y(13, 8, 5) . \"\\n\";\necho x_or_y(14,\
    \ 8, 5) . \"\\n\";\necho x_or_y(15, 8, 5) . \"\\n\";\necho x_or_y(16, 8, 5) .\
    \ \"\\n\";\necho x_or_y(17, 8, 5) . \"\\n\";\necho x_or_y(18, 8, 5) . \"\\n\"\
    ;\necho x_or_y(19, 8, 5) . \"\\n\";\necho x_or_y(20, 8, 5) . \"\\n\";\necho x_or_y(21,\
    \ 8, 5) . \"\\n\";\necho x_or_y(22, 8, 5) . \"\\n\";\necho x_or_y(23, 8\nfunction\
    \ candidate(...$args) {\n    return x_or_y(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(7, 34, 12) !== 34) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(15, 8, 5) !== 5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3, 33, 5212) !== 33) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1259, 3, 52) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(7919, -1, 12) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3609, 1245, 583) !== 583) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(91, 56, 129) !== 129) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 34, 1234) !== 1234) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 2, 0) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 2, 0) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Parse error:  syntax error, unexpected token \"function\", expecting\
    \ \")\" in /tmp/tmphadqywk2.php on line 44\n"
  exit_code: 255
  status: SyntaxError
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n  $prime = true;\n  for ($i = 2; $i < $n; $i++) {\n    if ($n % $i\
    \ == 0) {\n      $prime = false;\n      break;\n    }\n  }\n  if ($prime) {\n\
    \    return $x;\n  } else {\n    return $y;\n  }\n}\n\necho x_or_y(7, 34, 12)\
    \ . \"\\n\";\necho x_or_y(15, 8, 5) . \"\\n\";\nfunction candidate(...$args) {\n\
    \    return x_or_y(...$args);\n}\n\nfunction test(): void {\n    if (candidate(7,\
    \ 34, 12) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15,\
    \ 8, 5) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 33, 5212) !== 33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1259,\
    \ 3, 52) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7919,\
    \ -1, 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3609,\
    \ 1245, 583) !== 583) { throw new Exception(\"Test failed!\"); }\n    if (candidate(91,\
    \ 56, 129) !== 129) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 34, 1234) !== 1234) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 2, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 0) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "34\n5\n"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp5af1a3dy.php:37\n\
    Stack trace:\n#0 /tmp/tmp5af1a3dy.php(41): test()\n#1 {main}\n  thrown in /tmp/tmp5af1a3dy.php\
    \ on line 37\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n    if ($n == 2) {\n        return $x;\n    }\n    for ($i = 2; $i\
    \ < $n; $i++) {\n        if ($n % $i == 0) {\n            return $y;\n       \
    \ }\n    }\n    return $x;\n}\n\necho x_or_y(7, 34, 12) . \"\\n\";\necho x_or_y(15,\
    \ 8, 5) . \"\\n\";\necho x_or_y(2, 34, 12) . \"\\n\";\necho x_or_y(3, 34, 12)\
    \ . \"\\n\";\necho x_or_y(4, 34, 12) . \"\\n\";\necho x_or_y(5, 34, 12) . \"\\\
    n\";\necho x_or_y(6, 34, 12) . \"\\n\";\necho x_or_y(7, 34, 12) . \"\\n\";\necho\
    \ x_or_y(8, 34, 12) . \"\\n\";\necho x_or_y(9, 34, 12) . \"\\n\";\necho x_or_y(10,\
    \ 34, 12) . \"\\n\";\necho x_or_y(11, 34, 12) . \"\\n\";\necho x_or_y(12, 34,\
    \ 12) . \"\\n\";\necho x_or_y(13, 34, 12) . \"\\n\";\necho x_or_y(14, 34, 12)\
    \ . \"\\n\";\necho x_or_y(15, 34, 12) . \"\\n\";\necho x_or_y(16, 34, 12) . \"\
    \\n\";\necho x_or_y(17, 34, 12) . \"\\n\";\necho x_or_y(18, 34, 12) . \"\\n\"\
    ;\necho x_or_y(19, 34, 12) . \"\\n\";\necho x_or_y(20, 34, 12) . \"\\n\";\necho\
    \ x_or_y(21, 34, 12) . \"\\n\";\necho x_or_y(22, 34, 12) . \"\\n\";\necho x_or_y(23,\
    \ 34, 12) . \"\\n\";\necho x_or_y(24, 34\nfunction candidate(...$args) {\n   \
    \ return x_or_y(...$args);\n}\n\nfunction test(): void {\n    if (candidate(7,\
    \ 34, 12) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15,\
    \ 8, 5) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 33, 5212) !== 33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1259,\
    \ 3, 52) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7919,\
    \ -1, 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3609,\
    \ 1245, 583) !== 583) { throw new Exception(\"Test failed!\"); }\n    if (candidate(91,\
    \ 56, 129) !== 129) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 34, 1234) !== 1234) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 2, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 0) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Parse error:  syntax error, unexpected token \"function\", expecting\
    \ \")\" in /tmp/tmp54fcikyv.php on line 44\n"
  exit_code: 255
  status: SyntaxError
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n  if ($n < 2) {\n    return $y;\n  }\n  for ($i = 2; $i < $n; $i++)\
    \ {\n    if ($n % $i == 0) {\n      return $y;\n    }\n  }\n  return $x;\n}\n\n\
    function candidate(...$args) {\n    return x_or_y(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(7, 34, 12) !== 34) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(15, 8, 5) !== 5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3, 33, 5212) !== 33) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1259, 3, 52) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(7919, -1, 12) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3609, 1245, 583) !== 583) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(91, 56, 129) !== 129) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 34, 1234) !== 1234) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 2, 0) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 2, 0) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n    // Your code here\n}\nfunction candidate(...$args) {\n    return\
    \ x_or_y(...$args);\n}\n\nfunction test(): void {\n    if (candidate(7, 34, 12)\
    \ !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15, 8,\
    \ 5) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 33,\
    \ 5212) !== 33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1259,\
    \ 3, 52) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7919,\
    \ -1, 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3609,\
    \ 1245, 583) !== 583) { throw new Exception(\"Test failed!\"); }\n    if (candidate(91,\
    \ 56, 129) !== 129) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 34, 1234) !== 1234) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 2, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 0) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpxkop8_mi.php:15\n\
    Stack trace:\n#0 /tmp/tmpxkop8_mi.php(27): test()\n#1 {main}\n  thrown in /tmp/tmpxkop8_mi.php\
    \ on line 15\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n  if ($n % 2 == 0) {\n    return $y;\n  } else {\n    return $x;\n\
    \  }\n}\n\necho x_or_y(7, 34, 12);\necho \"\\n\";\necho x_or_y(15, 8, 5);\necho\
    \ \"\\n\";\nfunction candidate(...$args) {\n    return x_or_y(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(7, 34, 12) !== 34) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(15, 8, 5) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3, 33, 5212) !== 33) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1259, 3, 52) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7919, -1, 12) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3609, 1245, 583) !== 583) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(91, 56, 129) !== 129) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 34, 1234) !== 1234) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 2, 0) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 2, 0) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "34\n8\n"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpphcucnpe.php:25\n\
    Stack trace:\n#0 /tmp/tmpphcucnpe.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpphcucnpe.php\
    \ on line 25\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n    if ($n == 1) {\n        return $y;\n    }\n    for ($i = 2; $i\
    \ <= sqrt($n); $i++) {\n        if ($n % $i == 0) {\n            return $y;\n\
    \        }\n    }\n    return $x;\n}\n\necho x_or_y(7, 34, 12) . \"\\n\";\necho\
    \ x_or_y(15, 8, 5) . \"\\n\";\nfunction candidate(...$args) {\n    return x_or_y(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7, 34, 12) !== 34) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(15, 8, 5) !== 5) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(3, 33, 5212) !== 33) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(1259, 3, 52) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(7919, -1, 12) !==\
    \ -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3609, 1245,\
    \ 583) !== 583) { throw new Exception(\"Test failed!\"); }\n    if (candidate(91,\
    \ 56, 129) !== 129) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 34, 1234) !== 1234) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 2, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 0) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "34\n5\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n    if ($n < 2) {\n        return $y;\n    }\n    for ($i = 2; $i\
    \ < $n; $i++) {\n        if ($n % $i == 0) {\n            return $y;\n       \
    \ }\n    }\n    return $x;\n}\n\nfunction candidate(...$args) {\n    return x_or_y(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7, 34, 12) !== 34) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(15, 8, 5) !== 5) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(3, 33, 5212) !== 33) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(1259, 3, 52) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(7919, -1, 12) !==\
    \ -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3609, 1245,\
    \ 583) !== 583) { throw new Exception(\"Test failed!\"); }\n    if (candidate(91,\
    \ 56, 129) !== 129) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 34, 1234) !== 1234) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 2, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 0) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n    if ($n < 2) {\n        return $y;\n    }\n    for ($i = 2; $i\
    \ < $n; $i++) {\n        if ($n % $i == 0) {\n            return $y;\n       \
    \ }\n    }\n    return $x;\n}\n\necho x_or_y(7, 34, 12) . \"\\n\";\necho x_or_y(15,\
    \ 8, 5) . \"\\n\";\nfunction candidate(...$args) {\n    return x_or_y(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7, 34, 12) !== 34) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(15, 8, 5) !== 5) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(3, 33, 5212) !== 33) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(1259, 3, 52) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(7919, -1, 12) !==\
    \ -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3609, 1245,\
    \ 583) !== 583) { throw new Exception(\"Test failed!\"); }\n    if (candidate(91,\
    \ 56, 129) !== 129) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 34, 1234) !== 1234) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 2, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 0) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "34\n5\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n  if ($n < 2) {\n    return $y;\n  }\n  for ($i = 2; $i < $n; $i++)\
    \ {\n    if ($n % $i == 0) {\n      return $y;\n    }\n  }\n  return $x;\n}\n\n\
    function candidate(...$args) {\n    return x_or_y(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(7, 34, 12) !== 34) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(15, 8, 5) !== 5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3, 33, 5212) !== 33) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1259, 3, 52) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(7919, -1, 12) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3609, 1245, 583) !== 583) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(91, 56, 129) !== 129) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 34, 1234) !== 1234) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 2, 0) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 2, 0) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n    if ($n % 2 == 0) {\n        return $y;\n    } else {\n      \
    \  return $x;\n    }\n}\n\necho x_or_y(7, 34, 12) . \"\\n\";\necho x_or_y(15,\
    \ 8, 5) . \"\\n\";\nfunction candidate(...$args) {\n    return x_or_y(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7, 34, 12) !== 34) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(15, 8, 5) !== 5) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(3, 33, 5212) !== 33) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(1259, 3, 52) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(7919, -1, 12) !==\
    \ -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3609, 1245,\
    \ 583) !== 583) { throw new Exception(\"Test failed!\"); }\n    if (candidate(91,\
    \ 56, 129) !== 129) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 34, 1234) !== 1234) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 2, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 0) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "34\n8\n"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpi1uckxle.php:23\n\
    Stack trace:\n#0 /tmp/tmpi1uckxle.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpi1uckxle.php\
    \ on line 23\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n    $is_prime = true;\n    for ($i = 2; $i < $n; $i++) {\n      \
    \  if ($n % $i == 0) {\n            $is_prime = false;\n            break;\n \
    \       }\n    }\n    if ($is_prime) {\n        return $x;\n    } else {\n   \
    \     return $y;\n    }\n}\n\necho x_or_y(7, 34, 12) . \"\\n\";\necho x_or_y(15,\
    \ 8, 5) . \"\\n\";\nfunction candidate(...$args) {\n    return x_or_y(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7, 34, 12) !== 34) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(15, 8, 5) !== 5) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(3, 33, 5212) !== 33) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(1259, 3, 52) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(7919, -1, 12) !==\
    \ -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3609, 1245,\
    \ 583) !== 583) { throw new Exception(\"Test failed!\"); }\n    if (candidate(91,\
    \ 56, 129) !== 129) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 34, 1234) !== 1234) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 2, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 0) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "34\n5\n"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpb7rnoe6a.php:37\n\
    Stack trace:\n#0 /tmp/tmpb7rnoe6a.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpb7rnoe6a.php\
    \ on line 37\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n  if ($n % 2 == 0) {\n    return $y;\n  } else {\n    return $x;\n\
    \  }\n}\n\nfunction candidate(...$args) {\n    return x_or_y(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(7, 34, 12) !== 34) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(15, 8, 5) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3, 33, 5212) !== 33) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1259, 3, 52) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7919, -1, 12) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3609, 1245, 583) !== 583) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(91, 56, 129) !== 129) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 34, 1234) !== 1234) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 2, 0) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 2, 0) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpybpgs7yd.php:21\n\
    Stack trace:\n#0 /tmp/tmpybpgs7yd.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpybpgs7yd.php\
    \ on line 21\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n    for ($i = 2; $i < $n; $i++) {\n        if ($n % $i == 0) {\n\
    \            return $y;\n        }\n    }\n    return $x;\n}\n\necho x_or_y(7,\
    \ 34, 12) . \"\\n\";\necho x_or_y(15, 8, 5) . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return x_or_y(...$args);\n}\n\nfunction test(): void {\n    if (candidate(7,\
    \ 34, 12) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15,\
    \ 8, 5) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 33, 5212) !== 33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1259,\
    \ 3, 52) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7919,\
    \ -1, 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3609,\
    \ 1245, 583) !== 583) { throw new Exception(\"Test failed!\"); }\n    if (candidate(91,\
    \ 56, 129) !== 129) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 34, 1234) !== 1234) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 2, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 0) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "34\n5\n"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpej4cd25f.php:31\n\
    Stack trace:\n#0 /tmp/tmpej4cd25f.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpej4cd25f.php\
    \ on line 31\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n\t// your code here\n}\n\nfunction candidate(...$args) {\n    return\
    \ x_or_y(...$args);\n}\n\nfunction test(): void {\n    if (candidate(7, 34, 12)\
    \ !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15, 8,\
    \ 5) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 33,\
    \ 5212) !== 33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1259,\
    \ 3, 52) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7919,\
    \ -1, 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3609,\
    \ 1245, 583) !== 583) { throw new Exception(\"Test failed!\"); }\n    if (candidate(91,\
    \ 56, 129) !== 129) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 34, 1234) !== 1234) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 2, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 0) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp98f1p6wv.php:16\n\
    Stack trace:\n#0 /tmp/tmp98f1p6wv.php(28): test()\n#1 {main}\n  thrown in /tmp/tmp98f1p6wv.php\
    \ on line 16\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n\t$prime = true;\n\tfor ($i = 2; $i < $n; $i++) {\n\t\tif ($n % $i\
    \ == 0) {\n\t\t\t$prime = false;\n\t\t\tbreak;\n\t\t}\n\t}\n\tif ($prime) {\n\t\
    \treturn $x;\n\t} else {\n\t\treturn $y;\n\t}\n}\n\necho x_or_y(7, 34, 12) . \"\
    \\n\";\necho x_or_y(15, 8, 5) . \"\\n\";\nfunction candidate(...$args) {\n   \
    \ return x_or_y(...$args);\n}\n\nfunction test(): void {\n    if (candidate(7,\
    \ 34, 12) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15,\
    \ 8, 5) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 33, 5212) !== 33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1259,\
    \ 3, 52) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7919,\
    \ -1, 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3609,\
    \ 1245, 583) !== 583) { throw new Exception(\"Test failed!\"); }\n    if (candidate(91,\
    \ 56, 129) !== 129) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 34, 1234) !== 1234) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 2, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 0) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "34\n5\n"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpuns42i9m.php:37\n\
    Stack trace:\n#0 /tmp/tmpuns42i9m.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpuns42i9m.php\
    \ on line 37\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n    if ($n == 2) return $x;\n    if ($n % 2 == 0) return $y;\n  \
    \  for ($i = 3; $i < $n; $i += 2) {\n        if ($n % $i == 0) return $y;\n  \
    \  }\n    return $x;\n}\n\nfunction candidate(...$args) {\n    return x_or_y(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7, 34, 12) !== 34) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(15, 8, 5) !== 5) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(3, 33, 5212) !== 33) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(1259, 3, 52) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(7919, -1, 12) !==\
    \ -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3609, 1245,\
    \ 583) !== 583) { throw new Exception(\"Test failed!\"); }\n    if (candidate(91,\
    \ 56, 129) !== 129) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 34, 1234) !== 1234) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 2, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 0) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpebft1yjs.php:29\n\
    Stack trace:\n#0 /tmp/tmpebft1yjs.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpebft1yjs.php\
    \ on line 29\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n    if ($n < 2) {\n        return $y;\n    }\n    for ($i = 2; $i\
    \ < $n; $i++) {\n        if ($n % $i == 0) {\n            return $y;\n       \
    \ }\n    }\n    return $x;\n}\n\necho x_or_y(7, 34, 12) . \"\\n\";\necho x_or_y(15,\
    \ 8, 5) . \"\\n\";\nfunction candidate(...$args) {\n    return x_or_y(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7, 34, 12) !== 34) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(15, 8, 5) !== 5) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(3, 33, 5212) !== 33) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(1259, 3, 52) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(7919, -1, 12) !==\
    \ -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3609, 1245,\
    \ 583) !== 583) { throw new Exception(\"Test failed!\"); }\n    if (candidate(91,\
    \ 56, 129) !== 129) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 34, 1234) !== 1234) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 2, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 0) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "34\n5\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n    if ($n % 2 == 0) {\n        return $y;\n    } else {\n      \
    \  return $x;\n    }\n}\n\necho x_or_y(7, 34, 12);\necho \"<br>\";\necho x_or_y(15,\
    \ 8, 5);\nfunction candidate(...$args) {\n    return x_or_y(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(7, 34, 12) !== 34) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(15, 8, 5) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3, 33, 5212) !== 33) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1259, 3, 52) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7919, -1, 12) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3609, 1245, 583) !== 583) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(91, 56, 129) !== 129) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 34, 1234) !== 1234) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 2, 0) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 2, 0) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: 34<br>8
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp1dcic5rb.php:24\n\
    Stack trace:\n#0 /tmp/tmp1dcic5rb.php(35): test()\n#1 {main}\n  thrown in /tmp/tmp1dcic5rb.php\
    \ on line 24\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n    if ($n < 2) {\n        return $y;\n    }\n    for ($i = 2; $i\
    \ <= sqrt($n); $i++) {\n        if ($n % $i == 0) {\n            return $y;\n\
    \        }\n    }\n    return $x;\n}\n\necho x_or_y(7, 34, 12) . \"\\n\";\necho\
    \ x_or_y(15, 8, 5) . \"\\n\";\nfunction candidate(...$args) {\n    return x_or_y(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7, 34, 12) !== 34) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(15, 8, 5) !== 5) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(3, 33, 5212) !== 33) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(1259, 3, 52) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(7919, -1, 12) !==\
    \ -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3609, 1245,\
    \ 583) !== 583) { throw new Exception(\"Test failed!\"); }\n    if (candidate(91,\
    \ 56, 129) !== 129) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 34, 1234) !== 1234) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 2, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 0) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "34\n5\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n  if($n % 2 == 0) {\n    return $y;\n  } else {\n    return $x;\n\
    \  }\n}\n\necho x_or_y(7, 34, 12);\necho x_or_y(15, 8, 5);\nfunction candidate(...$args)\
    \ {\n    return x_or_y(...$args);\n}\n\nfunction test(): void {\n    if (candidate(7,\
    \ 34, 12) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15,\
    \ 8, 5) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 33, 5212) !== 33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1259,\
    \ 3, 52) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7919,\
    \ -1, 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3609,\
    \ 1245, 583) !== 583) { throw new Exception(\"Test failed!\"); }\n    if (candidate(91,\
    \ 56, 129) !== 129) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 34, 1234) !== 1234) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 2, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 0) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: '348'
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpsyp1klko.php:23\n\
    Stack trace:\n#0 /tmp/tmpsyp1klko.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpsyp1klko.php\
    \ on line 23\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n    if (is_prime($n)) {\n        return $x;\n    } else {\n     \
    \   return $y;\n    }\n}\n\nfunction candidate(...$args) {\n    return x_or_y(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7, 34, 12) !== 34) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(15, 8, 5) !== 5) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(3, 33, 5212) !== 33) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(1259, 3, 52) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(7919, -1, 12) !==\
    \ -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3609, 1245,\
    \ 583) !== 583) { throw new Exception(\"Test failed!\"); }\n    if (candidate(91,\
    \ 56, 129) !== 129) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 34, 1234) !== 1234) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 2, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 0) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Error: Call to undefined function is_prime()\
    \ in /tmp/tmpk56m8uxn.php:8\nStack trace:\n#0 /tmp/tmpk56m8uxn.php(16): x_or_y()\n\
    #1 /tmp/tmpk56m8uxn.php(20): candidate()\n#2 /tmp/tmpk56m8uxn.php(32): test()\n\
    #3 {main}\n  thrown in /tmp/tmpk56m8uxn.php on line 8\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n    if($n == 2) {\n        return $x;\n    }\n    for($i = 2; $i\
    \ < $n; $i++) {\n        if($n % $i == 0) {\n            return $y;\n        }\n\
    \    }\n    return $x;\n}\n\necho x_or_y(7, 34, 12);\necho \"\\n\";\necho x_or_y(15,\
    \ 8, 5);\necho \"\\n\";\nfunction candidate(...$args) {\n    return x_or_y(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7, 34, 12) !== 34) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(15, 8, 5) !== 5) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(3, 33, 5212) !== 33) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(1259, 3, 52) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(7919, -1, 12) !==\
    \ -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3609, 1245,\
    \ 583) !== 583) { throw new Exception(\"Test failed!\"); }\n    if (candidate(91,\
    \ 56, 129) !== 129) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 34, 1234) !== 1234) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 2, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 0) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "34\n5\n"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp_9das6bp.php:36\n\
    Stack trace:\n#0 /tmp/tmp_9das6bp.php(40): test()\n#1 {main}\n  thrown in /tmp/tmp_9das6bp.php\
    \ on line 36\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n    if ($n % 2 == 0) {\n        return $y;\n    } else {\n      \
    \  return $x;\n    }\n}\n\necho x_or_y(7, 34, 12);\necho \"\\n\";\necho x_or_y(15,\
    \ 8, 5);\necho \"\\n\";\necho x_or_y(2, 8, 5);\necho \"\\n\";\necho x_or_y(3,\
    \ 8, 5);\necho \"\\n\";\necho x_or_y(5, 8, 5);\necho \"\\n\";\necho x_or_y(7,\
    \ 8, 5);\necho \"\\n\";\necho x_or_y(11, 8, 5);\necho \"\\n\";\necho x_or_y(13,\
    \ 8, 5);\necho \"\\n\";\necho x_or_y(17, 8, 5);\necho \"\\n\";\necho x_or_y(19,\
    \ 8, 5);\necho \"\\n\";\necho x_or_y(23, 8, 5);\necho \"\\n\";\necho x_or_y(29,\
    \ 8, 5);\necho \"\\n\";\necho x_or_y(31, 8, 5);\necho \"\\n\";\necho x_or_y(37,\
    \ 8, 5);\necho \"\\n\";\necho x_or_y(41, 8, 5);\necho \"\\n\";\necho x_or_y(43,\
    \ 8, 5);\necho \"\\n\";\necho x_or_y(47, 8, 5);\necho \"\\n\";\necho x_or_y(53,\
    \ 8, 5);\necho \"\\n\";\necho x_or_y(59, 8, 5);\necho \"\\n\";\necho x_or_y(61,\
    \ 8, 5);\necho \"\\n\";\necho x_or_y(67, 8, 5);\necho \"\\n\";\necho x_or_y(71,\
    \ 8, 5);\necho \"\\n\";\necho x_or_y(73, 8, 5);\necho \"\\n\";\necho x_or_y(79,\
    \ 8, 5);\necho \"\\n\";\necho x_or_y(83, 8, 5);\necho \"\\n\";\necho x\nfunction\
    \ candidate(...$args) {\n    return x_or_y(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(7, 34, 12) !== 34) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(15, 8, 5) !== 5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3, 33, 5212) !== 33) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1259, 3, 52) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(7919, -1, 12) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3609, 1245, 583) !== 583) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(91, 56, 129) !== 129) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 34, 1234) !== 1234) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 2, 0) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 2, 0) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Parse error:  syntax error, unexpected token \"function\", expecting\
    \ \",\" or \";\" in /tmp/tmpaf9a69hs.php on line 66\n"
  exit_code: 255
  status: SyntaxError
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n    if ($n % 2 == 0) {\n        return $y;\n    } else {\n      \
    \  return $x;\n    }\n}\n\necho x_or_y(7, 34, 12) . \"\\n\";\necho x_or_y(15,\
    \ 8, 5) . \"\\n\";\n\nfunction candidate(...$args) {\n    return x_or_y(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7, 34, 12) !== 34) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(15, 8, 5) !== 5) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(3, 33, 5212) !== 33) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(1259, 3, 52) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(7919, -1, 12) !==\
    \ -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3609, 1245,\
    \ 583) !== 583) { throw new Exception(\"Test failed!\"); }\n    if (candidate(91,\
    \ 56, 129) !== 129) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 34, 1234) !== 1234) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 2, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 0) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "34\n8\n"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmposlfh0ee.php:24\n\
    Stack trace:\n#0 /tmp/tmposlfh0ee.php(35): test()\n#1 {main}\n  thrown in /tmp/tmposlfh0ee.php\
    \ on line 24\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n    if ($n == 2) {\n        return $x;\n    }\n    if ($n % 2 ==\
    \ 0) {\n        return $y;\n    }\n    for ($i = 3; $i <= sqrt($n); $i += 2) {\n\
    \        if ($n % $i == 0) {\n            return $y;\n        }\n    }\n    return\
    \ $x;\n}\n\nfunction candidate(...$args) {\n    return x_or_y(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(7, 34, 12) !== 34) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(15, 8, 5) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3, 33, 5212) !== 33) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1259, 3, 52) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7919, -1, 12) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3609, 1245, 583) !== 583) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(91, 56, 129) !== 129) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 34, 1234) !== 1234) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 2, 0) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 2, 0) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp4ysi0k66.php:35\n\
    Stack trace:\n#0 /tmp/tmp4ysi0k66.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp4ysi0k66.php\
    \ on line 35\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n  if ($n % 2 == 0) {\n    return $y;\n  } else {\n    return $x;\n\
    \  }\n}\n\necho x_or_y(7, 34, 12) . \"\\n\";\necho x_or_y(15, 8, 5) . \"\\n\"\
    ;\nfunction candidate(...$args) {\n    return x_or_y(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(7, 34, 12) !== 34) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(15, 8, 5) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3, 33, 5212) !== 33) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1259, 3, 52) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7919, -1, 12) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3609, 1245, 583) !== 583) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(91, 56, 129) !== 129) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 34, 1234) !== 1234) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 2, 0) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 2, 0) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "34\n8\n"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp99kkbbjg.php:23\n\
    Stack trace:\n#0 /tmp/tmp99kkbbjg.php(34): test()\n#1 {main}\n  thrown in /tmp/tmp99kkbbjg.php\
    \ on line 23\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n    if ($n % 2 == 0) {\n        return $y;\n    } else {\n      \
    \  return $x;\n    }\n}\n\necho x_or_y(7, 34, 12);\necho x_or_y(15, 8, 5);\nfunction\
    \ candidate(...$args) {\n    return x_or_y(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(7, 34, 12) !== 34) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(15, 8, 5) !== 5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3, 33, 5212) !== 33) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1259, 3, 52) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(7919, -1, 12) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3609, 1245, 583) !== 583) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(91, 56, 129) !== 129) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 34, 1234) !== 1234) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 2, 0) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 2, 0) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: '348'
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp2f98ivwq.php:23\n\
    Stack trace:\n#0 /tmp/tmp2f98ivwq.php(34): test()\n#1 {main}\n  thrown in /tmp/tmp2f98ivwq.php\
    \ on line 23\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n    if (is_prime($n)) {\n        return $x;\n    }\n    return $y;\n\
    }\n\nfunction candidate(...$args) {\n    return x_or_y(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(7, 34, 12) !== 34) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(15, 8, 5) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3, 33, 5212) !== 33) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1259, 3, 52) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7919, -1, 12) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3609, 1245, 583) !== 583) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(91, 56, 129) !== 129) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 34, 1234) !== 1234) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 2, 0) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 2, 0) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Error: Call to undefined function is_prime()\
    \ in /tmp/tmp5nefspiv.php:8\nStack trace:\n#0 /tmp/tmp5nefspiv.php(15): x_or_y()\n\
    #1 /tmp/tmp5nefspiv.php(19): candidate()\n#2 /tmp/tmp5nefspiv.php(31): test()\n\
    #3 {main}\n  thrown in /tmp/tmp5nefspiv.php on line 8\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n    if ($n == 1) {\n        return $y;\n    }\n    for ($i = 2; $i\
    \ < $n; $i++) {\n        if ($n % $i == 0) {\n            return $y;\n       \
    \ }\n    }\n    return $x;\n}\n\necho x_or_y(7, 34, 12) . \"\\n\";\necho x_or_y(15,\
    \ 8, 5) . \"\\n\";\nfunction candidate(...$args) {\n    return x_or_y(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7, 34, 12) !== 34) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(15, 8, 5) !== 5) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(3, 33, 5212) !== 33) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(1259, 3, 52) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(7919, -1, 12) !==\
    \ -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3609, 1245,\
    \ 583) !== 583) { throw new Exception(\"Test failed!\"); }\n    if (candidate(91,\
    \ 56, 129) !== 129) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 34, 1234) !== 1234) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 2, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 0) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "34\n5\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n    for ($i = 2; $i < $n; $i++) {\n        if ($n % $i == 0) {\n\
    \            return $y;\n        }\n    }\n    return $x;\n}\n\necho x_or_y(7,\
    \ 34, 12) . \"\\n\";\necho x_or_y(15, 8, 5) . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return x_or_y(...$args);\n}\n\nfunction test(): void {\n    if (candidate(7,\
    \ 34, 12) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15,\
    \ 8, 5) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 33, 5212) !== 33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1259,\
    \ 3, 52) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7919,\
    \ -1, 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3609,\
    \ 1245, 583) !== 583) { throw new Exception(\"Test failed!\"); }\n    if (candidate(91,\
    \ 56, 129) !== 129) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 34, 1234) !== 1234) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 2, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 0) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "34\n5\n"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp517gnh0k.php:31\n\
    Stack trace:\n#0 /tmp/tmp517gnh0k.php(35): test()\n#1 {main}\n  thrown in /tmp/tmp517gnh0k.php\
    \ on line 31\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n  if ($n == 2) {\n    return $x;\n  }\n  for ($i = 2; $i < $n; $i++)\
    \ {\n    if ($n % $i == 0) {\n      return $y;\n    }\n  }\n  return $x;\n}\n\n\
    echo x_or_y(7, 34, 12) . \"\\n\";\necho x_or_y(15, 8, 5) . \"\\n\";\nfunction\
    \ candidate(...$args) {\n    return x_or_y(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(7, 34, 12) !== 34) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(15, 8, 5) !== 5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3, 33, 5212) !== 33) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1259, 3, 52) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(7919, -1, 12) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3609, 1245, 583) !== 583) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(91, 56, 129) !== 129) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 34, 1234) !== 1234) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 2, 0) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 2, 0) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "34\n5\n"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpm39up9la.php:34\n\
    Stack trace:\n#0 /tmp/tmpm39up9la.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpm39up9la.php\
    \ on line 34\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n    if ($n < 2) {\n        return $y;\n    }\n    for ($i = 2; $i\
    \ < $n; $i++) {\n        if ($n % $i == 0) {\n            return $y;\n       \
    \ }\n    }\n    return $x;\n}\n\nfunction candidate(...$args) {\n    return x_or_y(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7, 34, 12) !== 34) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(15, 8, 5) !== 5) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(3, 33, 5212) !== 33) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(1259, 3, 52) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(7919, -1, 12) !==\
    \ -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3609, 1245,\
    \ 583) !== 583) { throw new Exception(\"Test failed!\"); }\n    if (candidate(91,\
    \ 56, 129) !== 129) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 34, 1234) !== 1234) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 2, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 0) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n    if ($n % 2 == 0) {\n        return $y;\n    } else {\n      \
    \  return $x;\n    }\n}\n\necho x_or_y(7, 34, 12);\necho \"\\n\";\necho x_or_y(15,\
    \ 8, 5);\necho \"\\n\";\nfunction candidate(...$args) {\n    return x_or_y(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7, 34, 12) !== 34) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(15, 8, 5) !== 5) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(3, 33, 5212) !== 33) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(1259, 3, 52) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(7919, -1, 12) !==\
    \ -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3609, 1245,\
    \ 583) !== 583) { throw new Exception(\"Test failed!\"); }\n    if (candidate(91,\
    \ 56, 129) !== 129) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 34, 1234) !== 1234) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 2, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 0) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "34\n8\n"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpq9ee8zkp.php:25\n\
    Stack trace:\n#0 /tmp/tmpq9ee8zkp.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpq9ee8zkp.php\
    \ on line 25\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n    if ($n < 2) {\n        return $y;\n    }\n    for ($i = 2; $i\
    \ < $n; $i++) {\n        if ($n % $i == 0) {\n            return $y;\n       \
    \ }\n    }\n    return $x;\n}\n\necho x_or_y(7, 34, 12) . PHP_EOL;\necho x_or_y(15,\
    \ 8, 5) . PHP_EOL;\necho x_or_y(2, 8, 5) . PHP_EOL;\necho x_or_y(1, 8, 5) . PHP_EOL;\n\
    echo x_or_y(0, 8, 5) . PHP_EOL;\necho x_or_y(-1, 8, 5) . PHP_EOL;\necho x_or_y(-2,\
    \ 8, 5) . PHP_EOL;\necho x_or_y(-3, 8, 5) . PHP_EOL;\necho x_or_y(-4, 8, 5) .\
    \ PHP_EOL;\necho x_or_y(-5, 8, 5) . PHP_EOL;\necho x_or_y(-6, 8, 5) . PHP_EOL;\n\
    echo x_or_y(-7, 8, 5) . PHP_EOL;\necho x_or_y(-8, 8, 5) . PHP_EOL;\necho x_or_y(-9,\
    \ 8, 5) . PHP_EOL;\necho x_or_y(-10, 8, 5) . PHP_EOL;\necho x_or_y(-11, 8, 5)\
    \ . PHP_EOL;\necho x_or_y(-12, 8, 5) . PHP_EOL;\necho x_or_y(-13, 8, 5) . PHP_EOL;\n\
    echo x_or_y(-14, 8, 5) . PHP_EOL;\necho x_or_y(-15, 8, 5) . PHP_EOL;\necho x_or_y(-16,\
    \ 8, 5) . PHP_EOL;\necho x_or_y(-17, 8, 5) . PHP_EOL;\necho x\nfunction candidate(...$args)\
    \ {\n    return x_or_y(...$args);\n}\n\nfunction test(): void {\n    if (candidate(7,\
    \ 34, 12) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15,\
    \ 8, 5) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 33, 5212) !== 33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1259,\
    \ 3, 52) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7919,\
    \ -1, 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3609,\
    \ 1245, 583) !== 583) { throw new Exception(\"Test failed!\"); }\n    if (candidate(91,\
    \ 56, 129) !== 129) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 34, 1234) !== 1234) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 2, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 0) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Parse error:  syntax error, unexpected token \"function\", expecting\
    \ \",\" or \";\" in /tmp/tmp3dttowvp.php on line 42\n"
  exit_code: 255
  status: SyntaxError
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n    if ($n < 2) {\n        return $y;\n    }\n    for ($i = 2; $i\
    \ < $n; $i++) {\n        if ($n % $i == 0) {\n            return $y;\n       \
    \ }\n    }\n    return $x;\n}\necho x_or_y(7, 34, 12) . \"\\n\";\necho x_or_y(15,\
    \ 8, 5) . \"\\n\";\nfunction candidate(...$args) {\n    return x_or_y(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7, 34, 12) !== 34) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(15, 8, 5) !== 5) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(3, 33, 5212) !== 33) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(1259, 3, 52) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(7919, -1, 12) !==\
    \ -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3609, 1245,\
    \ 583) !== 583) { throw new Exception(\"Test failed!\"); }\n    if (candidate(91,\
    \ 56, 129) !== 129) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 34, 1234) !== 1234) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 2, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 0) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "34\n5\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n  $prime = true;\n  for ($i = 2; $i < $n; $i++) {\n    if ($n % $i\
    \ == 0) {\n      $prime = false;\n      break;\n    }\n  }\n  if ($prime) {\n\
    \    return $x;\n  } else {\n    return $y;\n  }\n}\n\nfunction candidate(...$args)\
    \ {\n    return x_or_y(...$args);\n}\n\nfunction test(): void {\n    if (candidate(7,\
    \ 34, 12) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15,\
    \ 8, 5) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 33, 5212) !== 33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1259,\
    \ 3, 52) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7919,\
    \ -1, 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3609,\
    \ 1245, 583) !== 583) { throw new Exception(\"Test failed!\"); }\n    if (candidate(91,\
    \ 56, 129) !== 129) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 34, 1234) !== 1234) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 2, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 0) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmptow7enoa.php:35\n\
    Stack trace:\n#0 /tmp/tmptow7enoa.php(39): test()\n#1 {main}\n  thrown in /tmp/tmptow7enoa.php\
    \ on line 35\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n    $prime = true;\n    for ($i = 2; $i < $n; $i++) {\n        if\
    \ ($n % $i == 0) {\n            $prime = false;\n            break;\n        }\n\
    \    }\n    if ($prime) {\n        return $x;\n    } else {\n        return $y;\n\
    \    }\n}\n\necho x_or_y(7, 34, 12) . \"\\n\";\necho x_or_y(15, 8, 5) . \"\\n\"\
    ;\nfunction candidate(...$args) {\n    return x_or_y(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(7, 34, 12) !== 34) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(15, 8, 5) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3, 33, 5212) !== 33) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1259, 3, 52) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7919, -1, 12) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3609, 1245, 583) !== 583) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(91, 56, 129) !== 129) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 34, 1234) !== 1234) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 2, 0) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 2, 0) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "34\n5\n"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpokfq9iky.php:37\n\
    Stack trace:\n#0 /tmp/tmpokfq9iky.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpokfq9iky.php\
    \ on line 37\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n    for ($i = 2; $i < $n; $i++) {\n        if ($n % $i == 0) {\n\
    \            return $y;\n        }\n    }\n    return $x;\n}\n\necho x_or_y(7,\
    \ 34, 12) . \"\\n\";\necho x_or_y(15, 8, 5) . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return x_or_y(...$args);\n}\n\nfunction test(): void {\n    if (candidate(7,\
    \ 34, 12) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15,\
    \ 8, 5) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 33, 5212) !== 33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1259,\
    \ 3, 52) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7919,\
    \ -1, 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3609,\
    \ 1245, 583) !== 583) { throw new Exception(\"Test failed!\"); }\n    if (candidate(91,\
    \ 56, 129) !== 129) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 34, 1234) !== 1234) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 2, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 0) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "34\n5\n"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmppjom20kg.php:31\n\
    Stack trace:\n#0 /tmp/tmppjom20kg.php(35): test()\n#1 {main}\n  thrown in /tmp/tmppjom20kg.php\
    \ on line 31\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n  $prime = true;\n  for ($i = 2; $i < $n; $i++) {\n    if ($n % $i\
    \ == 0) {\n      $prime = false;\n      break;\n    }\n  }\n  if ($prime) {\n\
    \    return $x;\n  } else {\n    return $y;\n  }\n}\n\necho x_or_y(7, 34, 12);\n\
    echo \"\\n\";\necho x_or_y(15, 8, 5);\necho \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return x_or_y(...$args);\n}\n\nfunction test(): void {\n    if (candidate(7,\
    \ 34, 12) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15,\
    \ 8, 5) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 33, 5212) !== 33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1259,\
    \ 3, 52) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7919,\
    \ -1, 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3609,\
    \ 1245, 583) !== 583) { throw new Exception(\"Test failed!\"); }\n    if (candidate(91,\
    \ 56, 129) !== 129) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 34, 1234) !== 1234) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 2, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 0) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "34\n5\n"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpfjw_nm1z.php:39\n\
    Stack trace:\n#0 /tmp/tmpfjw_nm1z.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpfjw_nm1z.php\
    \ on line 39\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n  if (is_prime($n)) {\n    return $x;\n  } else {\n    return $y;\n\
    \  }\n}\n\nfunction candidate(...$args) {\n    return x_or_y(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(7, 34, 12) !== 34) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(15, 8, 5) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3, 33, 5212) !== 33) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1259, 3, 52) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7919, -1, 12) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3609, 1245, 583) !== 583) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(91, 56, 129) !== 129) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 34, 1234) !== 1234) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 2, 0) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 2, 0) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Error: Call to undefined function is_prime()\
    \ in /tmp/tmpb35_77bq.php:8\nStack trace:\n#0 /tmp/tmpb35_77bq.php(16): x_or_y()\n\
    #1 /tmp/tmpb35_77bq.php(20): candidate()\n#2 /tmp/tmpb35_77bq.php(32): test()\n\
    #3 {main}\n  thrown in /tmp/tmpb35_77bq.php on line 8\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n    if ($n % 2 == 0) {\n        return $y;\n    } else {\n      \
    \  return $x;\n    }\n}\n\nfunction candidate(...$args) {\n    return x_or_y(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7, 34, 12) !== 34) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(15, 8, 5) !== 5) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(3, 33, 5212) !== 33) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(1259, 3, 52) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(7919, -1, 12) !==\
    \ -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3609, 1245,\
    \ 583) !== 583) { throw new Exception(\"Test failed!\"); }\n    if (candidate(91,\
    \ 56, 129) !== 129) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 34, 1234) !== 1234) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 2, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 0) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpchnzewre.php:21\n\
    Stack trace:\n#0 /tmp/tmpchnzewre.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpchnzewre.php\
    \ on line 21\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n    if ($n == 2) {\n        return $x;\n    }\n    for ($i = 2; $i\
    \ < $n; $i++) {\n        if ($n % $i == 0) {\n            return $y;\n       \
    \ }\n    }\n    return $x;\n}\n\nfunction candidate(...$args) {\n    return x_or_y(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7, 34, 12) !== 34) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(15, 8, 5) !== 5) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(3, 33, 5212) !== 33) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(1259, 3, 52) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(7919, -1, 12) !==\
    \ -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3609, 1245,\
    \ 583) !== 583) { throw new Exception(\"Test failed!\"); }\n    if (candidate(91,\
    \ 56, 129) !== 129) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 34, 1234) !== 1234) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 2, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 0) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp27vr_u7j.php:32\n\
    Stack trace:\n#0 /tmp/tmp27vr_u7j.php(36): test()\n#1 {main}\n  thrown in /tmp/tmp27vr_u7j.php\
    \ on line 32\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n    if ($n % 2 == 0) {\n        return $y;\n    } else {\n      \
    \  return $x;\n    }\n}\n\necho x_or_y(7, 34, 12) . \"\\n\";\necho x_or_y(15,\
    \ 8, 5) . \"\\n\";\nfunction candidate(...$args) {\n    return x_or_y(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7, 34, 12) !== 34) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(15, 8, 5) !== 5) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(3, 33, 5212) !== 33) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(1259, 3, 52) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(7919, -1, 12) !==\
    \ -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3609, 1245,\
    \ 583) !== 583) { throw new Exception(\"Test failed!\"); }\n    if (candidate(91,\
    \ 56, 129) !== 129) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 34, 1234) !== 1234) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 2, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 0) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "34\n8\n"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp3d_orfyz.php:23\n\
    Stack trace:\n#0 /tmp/tmp3d_orfyz.php(34): test()\n#1 {main}\n  thrown in /tmp/tmp3d_orfyz.php\
    \ on line 23\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n  if (is_prime($n)) {\n    return $x;\n  } else {\n    return $y;\n\
    \  }\n}\n\nfunction candidate(...$args) {\n    return x_or_y(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(7, 34, 12) !== 34) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(15, 8, 5) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3, 33, 5212) !== 33) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1259, 3, 52) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7919, -1, 12) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3609, 1245, 583) !== 583) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(91, 56, 129) !== 129) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 34, 1234) !== 1234) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 2, 0) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 2, 0) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Error: Call to undefined function is_prime()\
    \ in /tmp/tmpl_z9dg6a.php:8\nStack trace:\n#0 /tmp/tmpl_z9dg6a.php(16): x_or_y()\n\
    #1 /tmp/tmpl_z9dg6a.php(20): candidate()\n#2 /tmp/tmpl_z9dg6a.php(32): test()\n\
    #3 {main}\n  thrown in /tmp/tmpl_z9dg6a.php on line 8\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n    $isPrime = true;\n    for ($i = 2; $i < $n; $i++) {\n       \
    \ if ($n % $i == 0) {\n            $isPrime = false;\n            break;\n   \
    \     }\n    }\n    if ($isPrime) {\n        return $x;\n    } else {\n      \
    \  return $y;\n    }\n}\n\necho x_or_y(7, 34, 12) . \"\\n\";\necho x_or_y(15,\
    \ 8, 5) . \"\\n\";\nfunction candidate(...$args) {\n    return x_or_y(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7, 34, 12) !== 34) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(15, 8, 5) !== 5) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(3, 33, 5212) !== 33) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(1259, 3, 52) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(7919, -1, 12) !==\
    \ -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3609, 1245,\
    \ 583) !== 583) { throw new Exception(\"Test failed!\"); }\n    if (candidate(91,\
    \ 56, 129) !== 129) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 34, 1234) !== 1234) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 2, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 0) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "34\n5\n"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpbl6yhc6c.php:37\n\
    Stack trace:\n#0 /tmp/tmpbl6yhc6c.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpbl6yhc6c.php\
    \ on line 37\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n    if ($n == 2) {\n        return $x;\n    }\n    for ($i = 2; $i\
    \ < $n; $i++) {\n        if ($n % $i == 0) {\n            return $y;\n       \
    \ }\n    }\n    return $x;\n}\n\necho x_or_y(7, 34, 12) . \"\\n\";\necho x_or_y(15,\
    \ 8, 5) . \"\\n\";\nfunction candidate(...$args) {\n    return x_or_y(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7, 34, 12) !== 34) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(15, 8, 5) !== 5) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(3, 33, 5212) !== 33) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(1259, 3, 52) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(7919, -1, 12) !==\
    \ -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3609, 1245,\
    \ 583) !== 583) { throw new Exception(\"Test failed!\"); }\n    if (candidate(91,\
    \ 56, 129) !== 129) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 34, 1234) !== 1234) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 2, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 0) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "34\n5\n"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp5qkbjic5.php:34\n\
    Stack trace:\n#0 /tmp/tmp5qkbjic5.php(38): test()\n#1 {main}\n  thrown in /tmp/tmp5qkbjic5.php\
    \ on line 34\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n    if ($n % 2 == 0) {\n        return $y;\n    } else {\n      \
    \  return $x;\n    }\n}\necho x_or_y(7, 34, 12);\necho x_or_y(15, 8, 5);\nfunction\
    \ candidate(...$args) {\n    return x_or_y(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(7, 34, 12) !== 34) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(15, 8, 5) !== 5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3, 33, 5212) !== 33) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1259, 3, 52) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(7919, -1, 12) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3609, 1245, 583) !== 583) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(91, 56, 129) !== 129) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 34, 1234) !== 1234) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 2, 0) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 2, 0) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: '348'
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp8ail6mir.php:22\n\
    Stack trace:\n#0 /tmp/tmp8ail6mir.php(33): test()\n#1 {main}\n  thrown in /tmp/tmp8ail6mir.php\
    \ on line 22\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n    for ($i = 2; $i < $n; $i++) {\n        if ($n % $i == 0) {\n\
    \            return $y;\n        }\n    }\n    return $x;\n}\n\nfunction candidate(...$args)\
    \ {\n    return x_or_y(...$args);\n}\n\nfunction test(): void {\n    if (candidate(7,\
    \ 34, 12) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15,\
    \ 8, 5) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 33, 5212) !== 33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1259,\
    \ 3, 52) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7919,\
    \ -1, 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3609,\
    \ 1245, 583) !== 583) { throw new Exception(\"Test failed!\"); }\n    if (candidate(91,\
    \ 56, 129) !== 129) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 34, 1234) !== 1234) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 2, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 0) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpzaejs9nu.php:29\n\
    Stack trace:\n#0 /tmp/tmpzaejs9nu.php(33): test()\n#1 {main}\n  thrown in /tmp/tmpzaejs9nu.php\
    \ on line 29\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n  if ($n == 1) {\n    return $y;\n  }\n  for ($i = 2; $i < $n; $i++)\
    \ {\n    if ($n % $i == 0) {\n      return $y;\n    }\n  }\n  return $x;\n}\n\n\
    function candidate(...$args) {\n    return x_or_y(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(7, 34, 12) !== 34) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(15, 8, 5) !== 5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3, 33, 5212) !== 33) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1259, 3, 52) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(7919, -1, 12) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3609, 1245, 583) !== 583) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(91, 56, 129) !== 129) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 34, 1234) !== 1234) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 2, 0) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 2, 0) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n    if ($n < 2) {\n        return $y;\n    }\n    for ($i = 2; $i\
    \ < $n; $i++) {\n        if ($n % $i == 0) {\n            return $y;\n       \
    \ }\n    }\n    return $x;\n}\n\nfunction candidate(...$args) {\n    return x_or_y(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7, 34, 12) !== 34) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(15, 8, 5) !== 5) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(3, 33, 5212) !== 33) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(1259, 3, 52) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(7919, -1, 12) !==\
    \ -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3609, 1245,\
    \ 583) !== 583) { throw new Exception(\"Test failed!\"); }\n    if (candidate(91,\
    \ 56, 129) !== 129) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 34, 1234) !== 1234) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 2, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 0) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n    if ($n < 2) {\n        return $y;\n    }\n\n    for ($i = 2;\
    \ $i < $n; $i++) {\n        if ($n % $i == 0) {\n            return $y;\n    \
    \    }\n    }\n\n    return $x;\n}\n\necho x_or_y(7, 34, 12) . \"\\n\";\necho\
    \ x_or_y(15, 8, 5) . \"\\n\";\necho x_or_y(1, 8, 5) . \"\\n\";\necho x_or_y(2,\
    \ 8, 5) . \"\\n\";\necho x_or_y(3, 8, 5) . \"\\n\";\necho x_or_y(4, 8, 5) . \"\
    \\n\";\necho x_or_y(5, 8, 5) . \"\\n\";\necho x_or_y(6, 8, 5) . \"\\n\";\necho\
    \ x_or_y(7, 8, 5) . \"\\n\";\necho x_or_y(8, 8, 5) . \"\\n\";\necho x_or_y(9,\
    \ 8, 5) . \"\\n\";\necho x_or_y(10, 8, 5) . \"\\n\";\necho x_or_y(11, 8, 5) .\
    \ \"\\n\";\necho x_or_y(12, 8, 5) . \"\\n\";\necho x_or_y(13, 8, 5) . \"\\n\"\
    ;\necho x_or_y(14, 8, 5) . \"\\n\";\necho x_or_y(15, 8, 5) . \"\\n\";\necho x_or_y(16,\
    \ 8, 5) . \"\\n\";\necho x_or_y(17, 8, 5) . \"\\n\";\necho x_or_y(18, 8, 5) .\
    \ \"\\n\";\necho x_or_y(19, 8, 5) . \"\\n\";\necho x_or_y(20, 8, 5) . \"\\n\"\
    ;\necho x_or_y(21, 8, 5) . \"\\n\";\necho x_or_y(22, 8, 5) . \"\\n\";\necho x_or_y(23,\
    \ 8\nfunction candidate(...$args) {\n    return x_or_y(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(7, 34, 12) !== 34) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(15, 8, 5) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3, 33, 5212) !== 33) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1259, 3, 52) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7919, -1, 12) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3609, 1245, 583) !== 583) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(91, 56, 129) !== 129) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 34, 1234) !== 1234) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 2, 0) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 2, 0) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Parse error:  syntax error, unexpected token \"function\", expecting\
    \ \")\" in /tmp/tmppajzlua4.php on line 46\n"
  exit_code: 255
  status: SyntaxError
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n  if (is_prime($n)) {\n    return $x;\n  } else {\n    return $y;\n\
    \  }\n}\n\nfunction candidate(...$args) {\n    return x_or_y(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(7, 34, 12) !== 34) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(15, 8, 5) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3, 33, 5212) !== 33) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1259, 3, 52) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7919, -1, 12) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3609, 1245, 583) !== 583) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(91, 56, 129) !== 129) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 34, 1234) !== 1234) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 2, 0) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 2, 0) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Error: Call to undefined function is_prime()\
    \ in /tmp/tmpr2tue2gt.php:8\nStack trace:\n#0 /tmp/tmpr2tue2gt.php(16): x_or_y()\n\
    #1 /tmp/tmpr2tue2gt.php(20): candidate()\n#2 /tmp/tmpr2tue2gt.php(32): test()\n\
    #3 {main}\n  thrown in /tmp/tmpr2tue2gt.php on line 8\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n    $isPrime = true;\n    for ($i = 2; $i < $n; $i++) {\n       \
    \ if ($n % $i == 0) {\n            $isPrime = false;\n            break;\n   \
    \     }\n    }\n    if ($isPrime) {\n        return $x;\n    } else {\n      \
    \  return $y;\n    }\n}\n\nfunction candidate(...$args) {\n    return x_or_y(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7, 34, 12) !== 34) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(15, 8, 5) !== 5) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(3, 33, 5212) !== 33) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(1259, 3, 52) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(7919, -1, 12) !==\
    \ -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3609, 1245,\
    \ 583) !== 583) { throw new Exception(\"Test failed!\"); }\n    if (candidate(91,\
    \ 56, 129) !== 129) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 34, 1234) !== 1234) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 2, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 0) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp0pwr2ova.php:35\n\
    Stack trace:\n#0 /tmp/tmp0pwr2ova.php(39): test()\n#1 {main}\n  thrown in /tmp/tmp0pwr2ova.php\
    \ on line 35\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n    if ($n < 2) {\n        return $y;\n    }\n    for ($i = 2; $i\
    \ < $n; $i++) {\n        if ($n % $i == 0) {\n            return $y;\n       \
    \ }\n    }\n    return $x;\n}\n\necho x_or_y(7, 34, 12) . \"\\n\";\necho x_or_y(15,\
    \ 8, 5) . \"\\n\";\nfunction candidate(...$args) {\n    return x_or_y(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7, 34, 12) !== 34) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(15, 8, 5) !== 5) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(3, 33, 5212) !== 33) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(1259, 3, 52) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(7919, -1, 12) !==\
    \ -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3609, 1245,\
    \ 583) !== 583) { throw new Exception(\"Test failed!\"); }\n    if (candidate(91,\
    \ 56, 129) !== 129) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 34, 1234) !== 1234) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 2, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 0) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "34\n5\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n  $isPrime = true;\n  for ($i = 2; $i < $n; $i++) {\n    if ($n %\
    \ $i == 0) {\n      $isPrime = false;\n      break;\n    }\n  }\n  if ($isPrime)\
    \ {\n    return $x;\n  } else {\n    return $y;\n  }\n}\n\necho x_or_y(7, 34,\
    \ 12) . \"\\n\";\necho x_or_y(15, 8, 5) . \"\\n\";\necho x_or_y(5, 8, 5) . \"\\\
    n\";\necho x_or_y(7, 8, 5) . \"\\n\";\nfunction candidate(...$args) {\n    return\
    \ x_or_y(...$args);\n}\n\nfunction test(): void {\n    if (candidate(7, 34, 12)\
    \ !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15, 8,\
    \ 5) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 33,\
    \ 5212) !== 33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1259,\
    \ 3, 52) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7919,\
    \ -1, 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3609,\
    \ 1245, 583) !== 583) { throw new Exception(\"Test failed!\"); }\n    if (candidate(91,\
    \ 56, 129) !== 129) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 34, 1234) !== 1234) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 2, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 0) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "34\n5\n8\n8\n"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp88gk4qku.php:39\n\
    Stack trace:\n#0 /tmp/tmp88gk4qku.php(43): test()\n#1 {main}\n  thrown in /tmp/tmp88gk4qku.php\
    \ on line 39\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n  // Your code here\n}\n\nfunction candidate(...$args) {\n    return\
    \ x_or_y(...$args);\n}\n\nfunction test(): void {\n    if (candidate(7, 34, 12)\
    \ !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15, 8,\
    \ 5) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 33,\
    \ 5212) !== 33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1259,\
    \ 3, 52) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7919,\
    \ -1, 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3609,\
    \ 1245, 583) !== 583) { throw new Exception(\"Test failed!\"); }\n    if (candidate(91,\
    \ 56, 129) !== 129) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 34, 1234) !== 1234) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 2, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 0) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpdpjazmki.php:16\n\
    Stack trace:\n#0 /tmp/tmpdpjazmki.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpdpjazmki.php\
    \ on line 16\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n    if ($n % 2 == 0) {\n        return $y;\n    } else {\n      \
    \  return $x;\n    }\n}\n\nfunction candidate(...$args) {\n    return x_or_y(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7, 34, 12) !== 34) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(15, 8, 5) !== 5) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(3, 33, 5212) !== 33) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(1259, 3, 52) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(7919, -1, 12) !==\
    \ -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3609, 1245,\
    \ 583) !== 583) { throw new Exception(\"Test failed!\"); }\n    if (candidate(91,\
    \ 56, 129) !== 129) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 34, 1234) !== 1234) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 2, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 0) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmprbxjzwp0.php:21\n\
    Stack trace:\n#0 /tmp/tmprbxjzwp0.php(32): test()\n#1 {main}\n  thrown in /tmp/tmprbxjzwp0.php\
    \ on line 21\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n    $isPrime = true;\n    for ($i = 2; $i < $n; $i++) {\n       \
    \ if ($n % $i == 0) {\n            $isPrime = false;\n            break;\n   \
    \     }\n    }\n    if ($isPrime) {\n        return $x;\n    } else {\n      \
    \  return $y;\n    }\n}\n\necho x_or_y(7, 34, 12) . \"\\n\";\necho x_or_y(15,\
    \ 8, 5) . \"\\n\";\necho x_or_y(3, 8, 5) . \"\\n\";\necho x_or_y(5, 8, 5) . \"\
    \\n\";\necho x_or_y(11, 8, 5) . \"\\n\";\necho x_or_y(13, 8, 5) . \"\\n\";\necho\
    \ x_or_y(17, 8, 5) . \"\\n\";\necho x_or_y(19, 8, 5) . \"\\n\";\necho x_or_y(23,\
    \ 8, 5) . \"\\n\";\necho x_or_y(29, 8, 5) . \"\\n\";\necho x_or_y(31, 8, 5) .\
    \ \"\\n\";\necho x_or_y(37, 8, 5) . \"\\n\";\necho x_or_y(41, 8, 5) . \"\\n\"\
    ;\necho x_or_y(43, 8, 5) . \"\\n\";\necho x_or_y(47, 8, 5) . \"\\n\";\necho x_or_y(53,\
    \ 8, 5) . \"\\n\";\necho x_or_y(59, 8, 5) . \"\\n\";\necho x_or_y(61, 8, 5) .\
    \ \"\\n\";\necho x_or_y(67, 8, 5) . \"\\n\";\necho x_or_y(71, 8, 5) . \"\\n\"\
    ;\necho x_or_y(73, 8, 5) . \"\\n\";\necho x_or_y(79, 8, 5) . \"\\n\";\necho x_or_y(83,\
    \ 8, 5) . \"\\n\";\necho x_or_y(89, 8\nfunction candidate(...$args) {\n    return\
    \ x_or_y(...$args);\n}\n\nfunction test(): void {\n    if (candidate(7, 34, 12)\
    \ !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15, 8,\
    \ 5) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 33,\
    \ 5212) !== 33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1259,\
    \ 3, 52) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7919,\
    \ -1, 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3609,\
    \ 1245, 583) !== 583) { throw new Exception(\"Test failed!\"); }\n    if (candidate(91,\
    \ 56, 129) !== 129) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 34, 1234) !== 1234) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 2, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 0) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Parse error:  syntax error, unexpected token \"function\", expecting\
    \ \")\" in /tmp/tmpdem0xw85.php on line 46\n"
  exit_code: 255
  status: SyntaxError
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n    // Your code here\n}\n\nfunction candidate(...$args) {\n    return\
    \ x_or_y(...$args);\n}\n\nfunction test(): void {\n    if (candidate(7, 34, 12)\
    \ !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15, 8,\
    \ 5) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 33,\
    \ 5212) !== 33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1259,\
    \ 3, 52) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7919,\
    \ -1, 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3609,\
    \ 1245, 583) !== 583) { throw new Exception(\"Test failed!\"); }\n    if (candidate(91,\
    \ 56, 129) !== 129) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 34, 1234) !== 1234) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 2, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 0) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpi8z66c55.php:16\n\
    Stack trace:\n#0 /tmp/tmpi8z66c55.php(28): test()\n#1 {main}\n  thrown in /tmp/tmpi8z66c55.php\
    \ on line 16\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n    if ($n == 1) {\n        return $y;\n    }\n    for ($i = 2; $i\
    \ < $n; $i++) {\n        if ($n % $i == 0) {\n            return $y;\n       \
    \ }\n    }\n    return $x;\n}\n\necho x_or_y(7, 34, 12) . \"\\n\";\necho x_or_y(15,\
    \ 8, 5) . \"\\n\";\necho x_or_y(1, 8, 5) . \"\\n\";\necho x_or_y(2, 8, 5) . \"\
    \\n\";\necho x_or_y(3, 8, 5) . \"\\n\";\necho x_or_y(4, 8, 5) . \"\\n\";\necho\
    \ x_or_y(5, 8, 5) . \"\\n\";\necho x_or_y(6, 8, 5) . \"\\n\";\necho x_or_y(7,\
    \ 8, 5) . \"\\n\";\necho x_or_y(8, 8, 5) . \"\\n\";\necho x_or_y(9, 8, 5) . \"\
    \\n\";\necho x_or_y(10, 8, 5) . \"\\n\";\necho x_or_y(11, 8, 5) . \"\\n\";\necho\
    \ x_or_y(12, 8, 5) . \"\\n\";\necho x_or_y(13, 8, 5) . \"\\n\";\necho x_or_y(14,\
    \ 8, 5) . \"\\n\";\necho x_or_y(15, 8, 5) . \"\\n\";\necho x_or_y(16, 8, 5) .\
    \ \"\\n\";\necho x_or_y(17, 8, 5) . \"\\n\";\necho x_or_y(18, 8, 5) . \"\\n\"\
    ;\necho x_or_y(19, 8, 5) . \"\\n\";\necho x_or_y(20, 8, 5) . \"\\n\";\necho x_or_y(21,\
    \ 8, 5) . \"\\n\";\necho x_or_y(22, 8, 5) . \"\\n\";\necho x_or_y(23, 8\nfunction\
    \ candidate(...$args) {\n    return x_or_y(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(7, 34, 12) !== 34) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(15, 8, 5) !== 5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3, 33, 5212) !== 33) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1259, 3, 52) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(7919, -1, 12) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3609, 1245, 583) !== 583) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(91, 56, 129) !== 129) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 34, 1234) !== 1234) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 2, 0) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 2, 0) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Parse error:  syntax error, unexpected token \"function\", expecting\
    \ \")\" in /tmp/tmplt1zooou.php on line 44\n"
  exit_code: 255
  status: SyntaxError
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n  $isPrime = true;\n  for ($i = 2; $i < $n; $i++) {\n    if ($n %\
    \ $i == 0) {\n      $isPrime = false;\n      break;\n    }\n  }\n  if ($isPrime)\
    \ {\n    return $x;\n  } else {\n    return $y;\n  }\n}\n\necho x_or_y(7, 34,\
    \ 12) . \"\\n\";\necho x_or_y(15, 8, 5) . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return x_or_y(...$args);\n}\n\nfunction test(): void {\n    if (candidate(7,\
    \ 34, 12) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15,\
    \ 8, 5) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 33, 5212) !== 33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1259,\
    \ 3, 52) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7919,\
    \ -1, 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3609,\
    \ 1245, 583) !== 583) { throw new Exception(\"Test failed!\"); }\n    if (candidate(91,\
    \ 56, 129) !== 129) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 34, 1234) !== 1234) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 2, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 0) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "34\n5\n"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp8moz47g9.php:37\n\
    Stack trace:\n#0 /tmp/tmp8moz47g9.php(41): test()\n#1 {main}\n  thrown in /tmp/tmp8moz47g9.php\
    \ on line 37\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n    if ($n == 1) {\n        return $y;\n    }\n    for ($i = 2; $i\
    \ < $n; $i++) {\n        if ($n % $i == 0) {\n            return $y;\n       \
    \ }\n    }\n    return $x;\n}\n\necho x_or_y(7, 34, 12) . \"\\n\";\necho x_or_y(15,\
    \ 8, 5) . \"\\n\";\nfunction candidate(...$args) {\n    return x_or_y(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7, 34, 12) !== 34) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(15, 8, 5) !== 5) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(3, 33, 5212) !== 33) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(1259, 3, 52) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(7919, -1, 12) !==\
    \ -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3609, 1245,\
    \ 583) !== 583) { throw new Exception(\"Test failed!\"); }\n    if (candidate(91,\
    \ 56, 129) !== 129) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 34, 1234) !== 1234) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 2, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 0) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "34\n5\n"
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n    if (is_prime($n)) {\n        return $x;\n    } else {\n     \
    \   return $y;\n    }\n}\n\nfunction candidate(...$args) {\n    return x_or_y(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7, 34, 12) !== 34) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(15, 8, 5) !== 5) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(3, 33, 5212) !== 33) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(1259, 3, 52) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(7919, -1, 12) !==\
    \ -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3609, 1245,\
    \ 583) !== 583) { throw new Exception(\"Test failed!\"); }\n    if (candidate(91,\
    \ 56, 129) !== 129) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 34, 1234) !== 1234) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 2, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 0) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Error: Call to undefined function is_prime()\
    \ in /tmp/tmpl18ww1kh.php:8\nStack trace:\n#0 /tmp/tmpl18ww1kh.php(16): x_or_y()\n\
    #1 /tmp/tmpl18ww1kh.php(20): candidate()\n#2 /tmp/tmpl18ww1kh.php(32): test()\n\
    #3 {main}\n  thrown in /tmp/tmpl18ww1kh.php on line 8\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n    if ($n % 2 == 0) {\n        return $y;\n    } else {\n      \
    \  return $x;\n    }\n}\n\nfunction candidate(...$args) {\n    return x_or_y(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7, 34, 12) !== 34) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(15, 8, 5) !== 5) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(3, 33, 5212) !== 33) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(1259, 3, 52) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(7919, -1, 12) !==\
    \ -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3609, 1245,\
    \ 583) !== 583) { throw new Exception(\"Test failed!\"); }\n    if (candidate(91,\
    \ 56, 129) !== 129) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 34, 1234) !== 1234) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 2, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 0) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpy0emoujb.php:21\n\
    Stack trace:\n#0 /tmp/tmpy0emoujb.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpy0emoujb.php\
    \ on line 21\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n    $isPrime = true;\n    for ($i = 2; $i < $n; $i++) {\n       \
    \ if ($n % $i == 0) {\n            $isPrime = false;\n            break;\n   \
    \     }\n    }\n    if ($isPrime) {\n        return $x;\n    } else {\n      \
    \  return $y;\n    }\n}\necho x_or_y(7, 34, 12) . \"\\n\";\necho x_or_y(15, 8,\
    \ 5) . \"\\n\";\nfunction candidate(...$args) {\n    return x_or_y(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7, 34, 12) !== 34) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(15, 8, 5) !== 5) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(3, 33, 5212) !== 33) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(1259, 3, 52) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(7919, -1, 12) !==\
    \ -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3609, 1245,\
    \ 583) !== 583) { throw new Exception(\"Test failed!\"); }\n    if (candidate(91,\
    \ 56, 129) !== 129) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 34, 1234) !== 1234) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 2, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 0) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "34\n5\n"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpa_64pb3f.php:36\n\
    Stack trace:\n#0 /tmp/tmpa_64pb3f.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpa_64pb3f.php\
    \ on line 36\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n  // Your code here\n}\n\nfunction candidate(...$args) {\n    return\
    \ x_or_y(...$args);\n}\n\nfunction test(): void {\n    if (candidate(7, 34, 12)\
    \ !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15, 8,\
    \ 5) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3, 33,\
    \ 5212) !== 33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1259,\
    \ 3, 52) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7919,\
    \ -1, 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3609,\
    \ 1245, 583) !== 583) { throw new Exception(\"Test failed!\"); }\n    if (candidate(91,\
    \ 56, 129) !== 129) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 34, 1234) !== 1234) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 2, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 0) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp80166nun.php:16\n\
    Stack trace:\n#0 /tmp/tmp80166nun.php(28): test()\n#1 {main}\n  thrown in /tmp/tmp80166nun.php\
    \ on line 16\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n    for ($i = 2; $i < $n; $i++) {\n        if ($n % $i == 0) {\n\
    \            return $y;\n        }\n    }\n    return $x;\n}\n\necho x_or_y(7,\
    \ 34, 12) . \"\\n\";\necho x_or_y(15, 8, 5) . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return x_or_y(...$args);\n}\n\nfunction test(): void {\n    if (candidate(7,\
    \ 34, 12) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15,\
    \ 8, 5) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 33, 5212) !== 33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1259,\
    \ 3, 52) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7919,\
    \ -1, 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3609,\
    \ 1245, 583) !== 583) { throw new Exception(\"Test failed!\"); }\n    if (candidate(91,\
    \ 56, 129) !== 129) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 34, 1234) !== 1234) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 2, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 0) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "34\n5\n"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpscrkhbcz.php:31\n\
    Stack trace:\n#0 /tmp/tmpscrkhbcz.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpscrkhbcz.php\
    \ on line 31\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n    if ($n == 2) {\n        return $x;\n    }\n    for ($i = 2; $i\
    \ < $n; $i++) {\n        if ($n % $i == 0) {\n            return $y;\n       \
    \ }\n    }\n    return $x;\n}\n\necho x_or_y(7, 34, 12) . \"\\n\";\necho x_or_y(15,\
    \ 8, 5) . \"\\n\";\nfunction candidate(...$args) {\n    return x_or_y(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7, 34, 12) !== 34) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(15, 8, 5) !== 5) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(3, 33, 5212) !== 33) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(1259, 3, 52) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(7919, -1, 12) !==\
    \ -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3609, 1245,\
    \ 583) !== 583) { throw new Exception(\"Test failed!\"); }\n    if (candidate(91,\
    \ 56, 129) !== 129) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 34, 1234) !== 1234) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 2, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 0) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "34\n5\n"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpbkqfok2m.php:34\n\
    Stack trace:\n#0 /tmp/tmpbkqfok2m.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpbkqfok2m.php\
    \ on line 34\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n\t$prime = true;\n\tfor ($i = 2; $i < $n; $i++) {\n\t\tif ($n % $i\
    \ == 0) {\n\t\t\t$prime = false;\n\t\t\tbreak;\n\t\t}\n\t}\n\tif ($prime) {\n\t\
    \treturn $x;\n\t} else {\n\t\treturn $y;\n\t}\n}\n\necho x_or_y(7, 34, 12) . \"\
    \\n\";\necho x_or_y(15, 8, 5) . \"\\n\";\nfunction candidate(...$args) {\n   \
    \ return x_or_y(...$args);\n}\n\nfunction test(): void {\n    if (candidate(7,\
    \ 34, 12) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15,\
    \ 8, 5) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 33, 5212) !== 33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1259,\
    \ 3, 52) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7919,\
    \ -1, 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3609,\
    \ 1245, 583) !== 583) { throw new Exception(\"Test failed!\"); }\n    if (candidate(91,\
    \ 56, 129) !== 129) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 34, 1234) !== 1234) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 2, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 0) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "34\n5\n"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpohurbsz5.php:37\n\
    Stack trace:\n#0 /tmp/tmpohurbsz5.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpohurbsz5.php\
    \ on line 37\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n\tif ($n == 2) {\n\t\treturn $x;\n\t}\n\tfor ($i = 2; $i < $n; $i++)\
    \ {\n\t\tif ($n % $i == 0) {\n\t\t\treturn $y;\n\t\t}\n\t}\n\treturn $x;\n}\n\n\
    echo x_or_y(7, 34, 12);\necho \"\\n\";\necho x_or_y(15, 8, 5);\necho \"\\n\";\n\
    function candidate(...$args) {\n    return x_or_y(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(7, 34, 12) !== 34) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(15, 8, 5) !== 5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3, 33, 5212) !== 33) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1259, 3, 52) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(7919, -1, 12) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3609, 1245, 583) !== 583) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(91, 56, 129) !== 129) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 34, 1234) !== 1234) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 2, 0) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 2, 0) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "34\n5\n"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp4le9ten4.php:36\n\
    Stack trace:\n#0 /tmp/tmp4le9ten4.php(40): test()\n#1 {main}\n  thrown in /tmp/tmp4le9ten4.php\
    \ on line 36\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n\t$result = $y;\n\tif ($n % 2 == 0) {\n\t\t$result = $x;\n\t}\n\t\
    return $result;\n}\n\necho x_or_y(7, 34, 12) . \"\\n\";\necho x_or_y(15, 8, 5)\
    \ . \"\\n\";\nfunction candidate(...$args) {\n    return x_or_y(...$args);\n}\n\
    \nfunction test(): void {\n    if (candidate(7, 34, 12) !== 34) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(15, 8, 5) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3, 33, 5212) !== 33) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1259, 3, 52) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7919, -1, 12) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3609, 1245, 583) !== 583) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(91, 56, 129) !== 129) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 34, 1234) !== 1234) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 2, 0) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 2, 0) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "12\n5\n"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmplu9t5zvh.php:22\n\
    Stack trace:\n#0 /tmp/tmplu9t5zvh.php(34): test()\n#1 {main}\n  thrown in /tmp/tmplu9t5zvh.php\
    \ on line 22\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n    if ($n % 2 == 0) {\n        return $y;\n    } else {\n      \
    \  return $x;\n    }\n}\n\necho x_or_y(7, 34, 12);\necho x_or_y(15, 8, 5);\nfunction\
    \ candidate(...$args) {\n    return x_or_y(...$args);\n}\n\nfunction test(): void\
    \ {\n    if (candidate(7, 34, 12) !== 34) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(15, 8, 5) !== 5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3, 33, 5212) !== 33) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1259, 3, 52) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(7919, -1, 12) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3609, 1245, 583) !== 583) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(91, 56, 129) !== 129) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 34, 1234) !== 1234) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 2, 0) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 2, 0) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: '348'
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmptoytc62a.php:23\n\
    Stack trace:\n#0 /tmp/tmptoytc62a.php(34): test()\n#1 {main}\n  thrown in /tmp/tmptoytc62a.php\
    \ on line 23\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n  $isPrime = true;\n  for ($i = 2; $i < $n; $i++) {\n    if ($n %\
    \ $i == 0) {\n      $isPrime = false;\n      break;\n    }\n  }\n  if ($isPrime)\
    \ {\n    return $x;\n  } else {\n    return $y;\n  }\n}\n\necho x_or_y(7, 34,\
    \ 12) . \"\\n\";\necho x_or_y(15, 8, 5) . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return x_or_y(...$args);\n}\n\nfunction test(): void {\n    if (candidate(7,\
    \ 34, 12) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15,\
    \ 8, 5) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 33, 5212) !== 33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1259,\
    \ 3, 52) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7919,\
    \ -1, 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3609,\
    \ 1245, 583) !== 583) { throw new Exception(\"Test failed!\"); }\n    if (candidate(91,\
    \ 56, 129) !== 129) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 34, 1234) !== 1234) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 2, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 0) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "34\n5\n"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp232igo2k.php:37\n\
    Stack trace:\n#0 /tmp/tmp232igo2k.php(41): test()\n#1 {main}\n  thrown in /tmp/tmp232igo2k.php\
    \ on line 37\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n    if ($n < 2) {\n        return $y;\n    }\n    for ($i = 2; $i\
    \ < $n; $i++) {\n        if ($n % $i == 0) {\n            return $y;\n       \
    \ }\n    }\n    return $x;\n}\n\nfunction candidate(...$args) {\n    return x_or_y(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7, 34, 12) !== 34) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(15, 8, 5) !== 5) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(3, 33, 5212) !== 33) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(1259, 3, 52) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(7919, -1, 12) !==\
    \ -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3609, 1245,\
    \ 583) !== 583) { throw new Exception(\"Test failed!\"); }\n    if (candidate(91,\
    \ 56, 129) !== 129) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 34, 1234) !== 1234) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 2, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 0) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n    for ($i = 2; $i < $n; $i++) {\n        if ($n % $i == 0) {\n\
    \            return $y;\n        }\n    }\n    return $x;\n}\n\necho x_or_y(7,\
    \ 34, 12) . \"\\n\";\necho x_or_y(15, 8, 5) . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return x_or_y(...$args);\n}\n\nfunction test(): void {\n    if (candidate(7,\
    \ 34, 12) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15,\
    \ 8, 5) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 33, 5212) !== 33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1259,\
    \ 3, 52) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7919,\
    \ -1, 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3609,\
    \ 1245, 583) !== 583) { throw new Exception(\"Test failed!\"); }\n    if (candidate(91,\
    \ 56, 129) !== 129) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 34, 1234) !== 1234) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 2, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 0) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "34\n5\n"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp01myj3zs.php:31\n\
    Stack trace:\n#0 /tmp/tmp01myj3zs.php(35): test()\n#1 {main}\n  thrown in /tmp/tmp01myj3zs.php\
    \ on line 31\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n    if ($n < 2) {\n        return $y;\n    }\n    for ($i = 2; $i\
    \ < $n; $i++) {\n        if ($n % $i == 0) {\n            return $y;\n       \
    \ }\n    }\n    return $x;\n}\n\nfunction candidate(...$args) {\n    return x_or_y(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7, 34, 12) !== 34) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(15, 8, 5) !== 5) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(3, 33, 5212) !== 33) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(1259, 3, 52) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(7919, -1, 12) !==\
    \ -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3609, 1245,\
    \ 583) !== 583) { throw new Exception(\"Test failed!\"); }\n    if (candidate(91,\
    \ 56, 129) !== 129) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 34, 1234) !== 1234) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 2, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 0) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n    if ($n == 2) {\n        return $x;\n    }\n    for ($i = 2; $i\
    \ < $n; $i++) {\n        if ($n % $i == 0) {\n            return $y;\n       \
    \ }\n    }\n    return $x;\n}\n\necho x_or_y(7, 34, 12) . \"\\n\";\necho x_or_y(15,\
    \ 8, 5) . \"\\n\";\nfunction candidate(...$args) {\n    return x_or_y(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7, 34, 12) !== 34) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(15, 8, 5) !== 5) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(3, 33, 5212) !== 33) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(1259, 3, 52) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(7919, -1, 12) !==\
    \ -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3609, 1245,\
    \ 583) !== 583) { throw new Exception(\"Test failed!\"); }\n    if (candidate(91,\
    \ 56, 129) !== 129) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 34, 1234) !== 1234) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 2, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 0) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "34\n5\n"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpn594493w.php:34\n\
    Stack trace:\n#0 /tmp/tmpn594493w.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpn594493w.php\
    \ on line 34\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n  if (is_prime($n)) {\n    return $x;\n  } else {\n    return $y;\n\
    \  }\n}\n\nfunction candidate(...$args) {\n    return x_or_y(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(7, 34, 12) !== 34) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(15, 8, 5) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3, 33, 5212) !== 33) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1259, 3, 52) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7919, -1, 12) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3609, 1245, 583) !== 583) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(91, 56, 129) !== 129) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 34, 1234) !== 1234) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 2, 0) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 2, 0) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Error: Call to undefined function is_prime()\
    \ in /tmp/tmp4v4oaps_.php:8\nStack trace:\n#0 /tmp/tmp4v4oaps_.php(16): x_or_y()\n\
    #1 /tmp/tmp4v4oaps_.php(20): candidate()\n#2 /tmp/tmp4v4oaps_.php(32): test()\n\
    #3 {main}\n  thrown in /tmp/tmp4v4oaps_.php on line 8\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n    $isPrime = true;\n    for ($i = 2; $i < $n; $i++) {\n       \
    \ if ($n % $i == 0) {\n            $isPrime = false;\n            break;\n   \
    \     }\n    }\n    if ($isPrime) {\n        return $x;\n    } else {\n      \
    \  return $y;\n    }\n}\n\necho x_or_y(7, 34, 12) . \"\\n\";\necho x_or_y(15,\
    \ 8, 5) . \"\\n\";\nfunction candidate(...$args) {\n    return x_or_y(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7, 34, 12) !== 34) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(15, 8, 5) !== 5) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(3, 33, 5212) !== 33) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(1259, 3, 52) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(7919, -1, 12) !==\
    \ -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3609, 1245,\
    \ 583) !== 583) { throw new Exception(\"Test failed!\"); }\n    if (candidate(91,\
    \ 56, 129) !== 129) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 34, 1234) !== 1234) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 2, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 0) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "34\n5\n"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpctcf112p.php:37\n\
    Stack trace:\n#0 /tmp/tmpctcf112p.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpctcf112p.php\
    \ on line 37\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n    if (is_prime($n)) {\n        return $x;\n    } else {\n     \
    \   return $y;\n    }\n}\n\nfunction candidate(...$args) {\n    return x_or_y(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7, 34, 12) !== 34) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(15, 8, 5) !== 5) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(3, 33, 5212) !== 33) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(1259, 3, 52) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(7919, -1, 12) !==\
    \ -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3609, 1245,\
    \ 583) !== 583) { throw new Exception(\"Test failed!\"); }\n    if (candidate(91,\
    \ 56, 129) !== 129) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 34, 1234) !== 1234) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 2, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 0) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Error: Call to undefined function is_prime()\
    \ in /tmp/tmp9ysip8j2.php:8\nStack trace:\n#0 /tmp/tmp9ysip8j2.php(16): x_or_y()\n\
    #1 /tmp/tmp9ysip8j2.php(20): candidate()\n#2 /tmp/tmp9ysip8j2.php(32): test()\n\
    #3 {main}\n  thrown in /tmp/tmp9ysip8j2.php on line 8\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n    if ($n == 2) {\n        return $x;\n    }\n    for ($i = 2; $i\
    \ < $n; $i++) {\n        if ($n % $i == 0) {\n            return $y;\n       \
    \ }\n    }\n    return $x;\n}\n\necho x_or_y(7, 34, 12) . \"\\n\";\necho x_or_y(15,\
    \ 8, 5) . \"\\n\";\nfunction candidate(...$args) {\n    return x_or_y(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7, 34, 12) !== 34) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(15, 8, 5) !== 5) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(3, 33, 5212) !== 33) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(1259, 3, 52) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(7919, -1, 12) !==\
    \ -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3609, 1245,\
    \ 583) !== 583) { throw new Exception(\"Test failed!\"); }\n    if (candidate(91,\
    \ 56, 129) !== 129) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 34, 1234) !== 1234) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 2, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 0) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "34\n5\n"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpswt93kt6.php:34\n\
    Stack trace:\n#0 /tmp/tmpswt93kt6.php(38): test()\n#1 {main}\n  thrown in /tmp/tmpswt93kt6.php\
    \ on line 34\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n    if ($n < 2) {\n        return $y;\n    }\n    for ($i = 2; $i\
    \ < $n; $i++) {\n        if ($n % $i == 0) {\n            return $y;\n       \
    \ }\n    }\n    return $x;\n}\n\nfunction candidate(...$args) {\n    return x_or_y(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7, 34, 12) !== 34) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(15, 8, 5) !== 5) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(3, 33, 5212) !== 33) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(1259, 3, 52) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(7919, -1, 12) !==\
    \ -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3609, 1245,\
    \ 583) !== 583) { throw new Exception(\"Test failed!\"); }\n    if (candidate(91,\
    \ 56, 129) !== 129) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 34, 1234) !== 1234) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 2, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 0) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n\tif ($n % 2 == 0) {\n\t\treturn $y;\n\t} else {\n\t\treturn $x;\n\
    \t}\n}\n\necho x_or_y(7, 34, 12) . \"\\n\";\necho x_or_y(15, 8, 5) . \"\\n\";\n\
    function candidate(...$args) {\n    return x_or_y(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(7, 34, 12) !== 34) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(15, 8, 5) !== 5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3, 33, 5212) !== 33) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1259, 3, 52) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(7919, -1, 12) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3609, 1245, 583) !== 583) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(91, 56, 129) !== 129) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 34, 1234) !== 1234) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 2, 0) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 2, 0) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "34\n8\n"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpnitms479.php:23\n\
    Stack trace:\n#0 /tmp/tmpnitms479.php(34): test()\n#1 {main}\n  thrown in /tmp/tmpnitms479.php\
    \ on line 23\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n\t$isPrime = true;\n\tfor ($i = 2; $i < $n; $i++) {\n\t\tif ($n %\
    \ $i == 0) {\n\t\t\t$isPrime = false;\n\t\t\tbreak;\n\t\t}\n\t}\n\tif ($isPrime)\
    \ {\n\t\treturn $x;\n\t} else {\n\t\treturn $y;\n\t}\n}\n\necho x_or_y(7, 34,\
    \ 12);\necho \"\\n\";\necho x_or_y(15, 8, 5);\necho \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return x_or_y(...$args);\n}\n\nfunction test(): void {\n    if (candidate(7,\
    \ 34, 12) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15,\
    \ 8, 5) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 33, 5212) !== 33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1259,\
    \ 3, 52) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7919,\
    \ -1, 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3609,\
    \ 1245, 583) !== 583) { throw new Exception(\"Test failed!\"); }\n    if (candidate(91,\
    \ 56, 129) !== 129) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 34, 1234) !== 1234) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 2, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 0) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "34\n5\n"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpo0kz77sc.php:39\n\
    Stack trace:\n#0 /tmp/tmpo0kz77sc.php(43): test()\n#1 {main}\n  thrown in /tmp/tmpo0kz77sc.php\
    \ on line 39\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n    if ($n % 2 == 0) {\n        return $y;\n    } else {\n      \
    \  return $x;\n    }\n}\n\necho x_or_y(7, 34, 12) . \"\\n\";\necho x_or_y(15,\
    \ 8, 5) . \"\\n\";\nfunction candidate(...$args) {\n    return x_or_y(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7, 34, 12) !== 34) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(15, 8, 5) !== 5) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(3, 33, 5212) !== 33) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(1259, 3, 52) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(7919, -1, 12) !==\
    \ -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3609, 1245,\
    \ 583) !== 583) { throw new Exception(\"Test failed!\"); }\n    if (candidate(91,\
    \ 56, 129) !== 129) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 34, 1234) !== 1234) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 2, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 0) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "34\n8\n"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp3_uu_k1o.php:23\n\
    Stack trace:\n#0 /tmp/tmp3_uu_k1o.php(34): test()\n#1 {main}\n  thrown in /tmp/tmp3_uu_k1o.php\
    \ on line 23\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n  if ($n == 2) {\n    return $x;\n  }\n  for ($i = 2; $i < $n; $i++)\
    \ {\n    if ($n % $i == 0) {\n      return $y;\n    }\n  }\n  return $x;\n}\n\n\
    function candidate(...$args) {\n    return x_or_y(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(7, 34, 12) !== 34) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(15, 8, 5) !== 5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3, 33, 5212) !== 33) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1259, 3, 52) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(7919, -1, 12) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3609, 1245, 583) !== 583) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(91, 56, 129) !== 129) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 34, 1234) !== 1234) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 2, 0) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 2, 0) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpyx5qviuj.php:32\n\
    Stack trace:\n#0 /tmp/tmpyx5qviuj.php(36): test()\n#1 {main}\n  thrown in /tmp/tmpyx5qviuj.php\
    \ on line 32\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n    if ($n % 2 == 0) {\n        return $y;\n    }\n    return $x;\n\
    }\n\nfunction candidate(...$args) {\n    return x_or_y(...$args);\n}\n\nfunction\
    \ test(): void {\n    if (candidate(7, 34, 12) !== 34) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(15, 8, 5) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3, 33, 5212) !== 33) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1259, 3, 52) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7919, -1, 12) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3609, 1245, 583) !== 583) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(91, 56, 129) !== 129) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 34, 1234) !== 1234) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 2, 0) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 2, 0) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp7z5r4qj3.php:20\n\
    Stack trace:\n#0 /tmp/tmp7z5r4qj3.php(31): test()\n#1 {main}\n  thrown in /tmp/tmp7z5r4qj3.php\
    \ on line 20\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n    if ($n == 2) {\n        return $x;\n    }\n    if ($n % 2 ==\
    \ 0) {\n        return $y;\n    }\n    for ($i = 3; $i <= sqrt($n); $i += 2) {\n\
    \        if ($n % $i == 0) {\n            return $y;\n        }\n    }\n    return\
    \ $x;\n}\n\nfunction candidate(...$args) {\n    return x_or_y(...$args);\n}\n\n\
    function test(): void {\n    if (candidate(7, 34, 12) !== 34) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(15, 8, 5) !== 5) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3, 33, 5212) !== 33) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1259, 3, 52) !== 3) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(7919, -1, 12) !== -1) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(3609, 1245, 583) !== 583) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(91, 56, 129) !== 129) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 34, 1234) !== 1234) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 2, 0) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 2, 0) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpwonkvzut.php:35\n\
    Stack trace:\n#0 /tmp/tmpwonkvzut.php(39): test()\n#1 {main}\n  thrown in /tmp/tmpwonkvzut.php\
    \ on line 35\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n    if ($n < 2) {\n        return $y;\n    }\n    for ($i = 2; $i\
    \ < $n; $i++) {\n        if ($n % $i == 0) {\n            return $y;\n       \
    \ }\n    }\n    return $x;\n}\n\nfunction candidate(...$args) {\n    return x_or_y(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7, 34, 12) !== 34) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(15, 8, 5) !== 5) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(3, 33, 5212) !== 33) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(1259, 3, 52) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(7919, -1, 12) !==\
    \ -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3609, 1245,\
    \ 583) !== 583) { throw new Exception(\"Test failed!\"); }\n    if (candidate(91,\
    \ 56, 129) !== 129) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 34, 1234) !== 1234) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 2, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 0) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n    if ($n % 2 == 0) {\n        return $y;\n    } else {\n      \
    \  return $x;\n    }\n}\n\nfunction candidate(...$args) {\n    return x_or_y(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7, 34, 12) !== 34) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(15, 8, 5) !== 5) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(3, 33, 5212) !== 33) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(1259, 3, 52) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(7919, -1, 12) !==\
    \ -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3609, 1245,\
    \ 583) !== 583) { throw new Exception(\"Test failed!\"); }\n    if (candidate(91,\
    \ 56, 129) !== 129) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 34, 1234) !== 1234) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 2, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 0) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpolmlhw52.php:21\n\
    Stack trace:\n#0 /tmp/tmpolmlhw52.php(32): test()\n#1 {main}\n  thrown in /tmp/tmpolmlhw52.php\
    \ on line 21\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n  if ($n == 2) {\n    return $x;\n  }\n  if ($n % 2 == 0) {\n   \
    \ return $y;\n  }\n  for ($i = 3; $i <= sqrt($n); $i += 2) {\n    if ($n % $i\
    \ == 0) {\n      return $y;\n    }\n  }\n  return $x;\n}\n\necho x_or_y(7, 34,\
    \ 12) . \"\\n\";\necho x_or_y(15, 8, 5) . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return x_or_y(...$args);\n}\n\nfunction test(): void {\n    if (candidate(7,\
    \ 34, 12) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15,\
    \ 8, 5) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 33, 5212) !== 33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1259,\
    \ 3, 52) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7919,\
    \ -1, 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3609,\
    \ 1245, 583) !== 583) { throw new Exception(\"Test failed!\"); }\n    if (candidate(91,\
    \ 56, 129) !== 129) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 34, 1234) !== 1234) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 2, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 0) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "34\n5\n"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmphxr2uu95.php:37\n\
    Stack trace:\n#0 /tmp/tmphxr2uu95.php(41): test()\n#1 {main}\n  thrown in /tmp/tmphxr2uu95.php\
    \ on line 37\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n    for ($i = 2; $i < $n; $i++) {\n        if ($n % $i == 0) {\n\
    \            return $y;\n        }\n    }\n    return $x;\n}\n\necho x_or_y(7,\
    \ 34, 12) . \"\\n\";\necho x_or_y(15, 8, 5) . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return x_or_y(...$args);\n}\n\nfunction test(): void {\n    if (candidate(7,\
    \ 34, 12) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15,\
    \ 8, 5) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 33, 5212) !== 33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1259,\
    \ 3, 52) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7919,\
    \ -1, 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3609,\
    \ 1245, 583) !== 583) { throw new Exception(\"Test failed!\"); }\n    if (candidate(91,\
    \ 56, 129) !== 129) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 34, 1234) !== 1234) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 2, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 0) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "34\n5\n"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp2um0exoy.php:31\n\
    Stack trace:\n#0 /tmp/tmp2um0exoy.php(35): test()\n#1 {main}\n  thrown in /tmp/tmp2um0exoy.php\
    \ on line 31\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n    $isPrime = true;\n    for ($i = 2; $i < $n; $i++) {\n       \
    \ if ($n % $i == 0) {\n            $isPrime = false;\n            break;\n   \
    \     }\n    }\n    if ($isPrime) {\n        return $x;\n    } else {\n      \
    \  return $y;\n    }\n}\n\necho x_or_y(7, 34, 12) . \"\\n\";\necho x_or_y(15,\
    \ 8, 5) . \"\\n\";\nfunction candidate(...$args) {\n    return x_or_y(...$args);\n\
    }\n\nfunction test(): void {\n    if (candidate(7, 34, 12) !== 34) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(15, 8, 5) !== 5) { throw new\
    \ Exception(\"Test failed!\"); }\n    if (candidate(3, 33, 5212) !== 33) { throw\
    \ new Exception(\"Test failed!\"); }\n    if (candidate(1259, 3, 52) !== 3) {\
    \ throw new Exception(\"Test failed!\"); }\n    if (candidate(7919, -1, 12) !==\
    \ -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3609, 1245,\
    \ 583) !== 583) { throw new Exception(\"Test failed!\"); }\n    if (candidate(91,\
    \ 56, 129) !== 129) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 34, 1234) !== 1234) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 2, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 0) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "34\n5\n"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpy6nfgyu9.php:37\n\
    Stack trace:\n#0 /tmp/tmpy6nfgyu9.php(41): test()\n#1 {main}\n  thrown in /tmp/tmpy6nfgyu9.php\
    \ on line 37\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n    for ($i = 2; $i < $n; $i++) {\n        if ($n % $i == 0) {\n\
    \            return $y;\n        }\n    }\n    return $x;\n}\n\necho x_or_y(7,\
    \ 34, 12) . \"\\n\";\necho x_or_y(15, 8, 5) . \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return x_or_y(...$args);\n}\n\nfunction test(): void {\n    if (candidate(7,\
    \ 34, 12) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15,\
    \ 8, 5) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 33, 5212) !== 33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1259,\
    \ 3, 52) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7919,\
    \ -1, 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3609,\
    \ 1245, 583) !== 583) { throw new Exception(\"Test failed!\"); }\n    if (candidate(91,\
    \ 56, 129) !== 129) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 34, 1234) !== 1234) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 2, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 0) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "34\n5\n"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpe8vm3bpk.php:31\n\
    Stack trace:\n#0 /tmp/tmpe8vm3bpk.php(35): test()\n#1 {main}\n  thrown in /tmp/tmpe8vm3bpk.php\
    \ on line 31\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n  if ($n == 2) {\n    return $x;\n  }\n  for ($i = 2; $i < $n; $i++)\
    \ {\n    if ($n % $i == 0) {\n      return $y;\n    }\n  }\n  return $x;\n}\n\n\
    echo x_or_y(7, 34, 12);\necho \"\\n\";\necho x_or_y(15, 8, 5);\necho \"\\n\";\n\
    function candidate(...$args) {\n    return x_or_y(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(7, 34, 12) !== 34) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(15, 8, 5) !== 5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3, 33, 5212) !== 33) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1259, 3, 52) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(7919, -1, 12) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3609, 1245, 583) !== 583) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(91, 56, 129) !== 129) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 34, 1234) !== 1234) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 2, 0) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 2, 0) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: "34\n5\n"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmpq4ovf_c2.php:36\n\
    Stack trace:\n#0 /tmp/tmpq4ovf_c2.php(40): test()\n#1 {main}\n  thrown in /tmp/tmpq4ovf_c2.php\
    \ on line 36\n"
  exit_code: 255
  status: Exception
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n  if ($n < 2) {\n    return $y;\n  }\n  for ($i = 2; $i < $n; $i++)\
    \ {\n    if ($n % $i == 0) {\n      return $y;\n    }\n  }\n  return $x;\n}\n\n\
    function candidate(...$args) {\n    return x_or_y(...$args);\n}\n\nfunction test():\
    \ void {\n    if (candidate(7, 34, 12) !== 34) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(15, 8, 5) !== 5) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3, 33, 5212) !== 33) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(1259, 3, 52) !== 3) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(7919, -1, 12) !== -1) { throw new Exception(\"Test failed!\"\
    ); }\n    if (candidate(3609, 1245, 583) !== 583) { throw new Exception(\"Test\
    \ failed!\"); }\n    if (candidate(91, 56, 129) !== 129) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(6, 34, 1234) !== 1234) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(1, 2, 0) !== 0) { throw new Exception(\"\
    Test failed!\"); }\n    if (candidate(2, 2, 0) !== 2) { throw new Exception(\"\
    Test failed!\"); }\n}\n\ntest();"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "<?php\n// A simple program which should return the value of x if n is\
    \ \n// a prime number and should return the value of y otherwise.\n// Examples:\n\
    // for x_or_y(7, 34, 12) == 34\n// for x_or_y(15, 8, 5) == 5\nfunction x_or_y($n,\
    \ $x, $y) {\n    $is_prime = true;\n    for ($i = 2; $i < $n; $i++) {\n      \
    \  if ($n % $i == 0) {\n            $is_prime = false;\n            break;\n \
    \       }\n    }\n    if ($is_prime) {\n        return $x;\n    } else {\n   \
    \     return $y;\n    }\n}\n\necho x_or_y(7, 34, 12);\necho \"\\n\";\necho x_or_y(15,\
    \ 8, 5);\necho \"\\n\";\necho x_or_y(5, 8, 5);\necho \"\\n\";\nfunction candidate(...$args)\
    \ {\n    return x_or_y(...$args);\n}\n\nfunction test(): void {\n    if (candidate(7,\
    \ 34, 12) !== 34) { throw new Exception(\"Test failed!\"); }\n    if (candidate(15,\
    \ 8, 5) !== 5) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3,\
    \ 33, 5212) !== 33) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1259,\
    \ 3, 52) !== 3) { throw new Exception(\"Test failed!\"); }\n    if (candidate(7919,\
    \ -1, 12) !== -1) { throw new Exception(\"Test failed!\"); }\n    if (candidate(3609,\
    \ 1245, 583) !== 583) { throw new Exception(\"Test failed!\"); }\n    if (candidate(91,\
    \ 56, 129) !== 129) { throw new Exception(\"Test failed!\"); }\n    if (candidate(6,\
    \ 34, 1234) !== 1234) { throw new Exception(\"Test failed!\"); }\n    if (candidate(1,\
    \ 2, 0) !== 0) { throw new Exception(\"Test failed!\"); }\n    if (candidate(2,\
    \ 2, 0) !== 2) { throw new Exception(\"Test failed!\"); }\n}\n\ntest();"
  stdout: "34\n5\n8\n"
  stderr: "PHP Fatal error:  Uncaught Exception: Test failed! in /tmp/tmp71wilkxu.php:41\n\
    Stack trace:\n#0 /tmp/tmp71wilkxu.php(45): test()\n#1 {main}\n  thrown in /tmp/tmp71wilkxu.php\
    \ on line 41\n"
  exit_code: 255
  status: Exception
